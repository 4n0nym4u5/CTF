TARGET 0 - 'interpreter': ELF-X64, 0x00000000401c80 entry, 684397/1 executable bytes/segments 

0x0000000045dc87: adc [r11+0x94801e0], al; ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x000000004a0435: adc [r13+0x2d840fc0], al; add eax, [rax]; add [rax+0x1], cl; ret; 
0x0000000045e3c3: adc [r13-0x7b], r9b; ror byte ptr [rdi], 0x85; adc eax, 0x49000007; mov edi, [rdi]; call rbx; 
0x0000000045e4a0: adc [r13-0x7b], r9b; shl byte ptr [rbp+0x3b], 0x49; mov edi, [rdi]; call rbx; 
0x0000000045e4c9: adc [r13-0x7b], r9b; shl byte ptr [rbp+0x7d], 0x49; mov edi, [rdi]; call rbx; 
0x0000000048287f: adc [r14+0xf], r12b; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x000000004596a6: adc [r15], r9b; adc [rdi+rdx-0x10], edx; movups [rdi+rdx-0x20], xmm3; ret; 
0x00000000421bf2: adc [r8+0x1], r9b; ret; 
0x00000000491913: adc [r8+0x5a], bl; pop rbx; ret; 
0x0000000042854c: adc [r9], r13b; rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x0000000045c14f: adc [rax+0x1], bh; syscall; 
0x000000004a678e: adc [rax+0x1], cl; out dx, eax; call r12; 
0x00000000421bf3: adc [rax+0x1], cl; ret; 
0x0000000046085a: adc [rax+0x1], ecx; ret far; 
0x0000000048c136: adc [rax+0x39], ecx; ret; 
0x0000000045c31f: adc [rax+0x3], bh; syscall; 
0x0000000049c923: adc [rax+0x3b], cl; sub [rbx-0x1b], sil; mov eax, 0x1; ret; 
0x0000000048155a: adc [rax+0x40], eax; pop rbx; ret; 
0x00000000491914: adc [rax+0x5a], bl; pop rbx; ret; 
0x00000000465983: adc [rax+0x63], cl; fisttp dword ptr [rcx+0x39], st; test dword ptr [rdi], 0x33486; add [rcx-0xa], al; ret; 
0x00000000452bc2: adc [rax+0x66c30251], ecx; nop [rax+rax]; mov [rcx], edx; ret; 
0x00000000452be1: adc [rax+0x66c30451], ecx; nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x00000000452c22: adc [rax+0x66c30851], ecx; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x000000004087fe: adc [rax+0xa0], edx; movups [rax+0xb0], xmm3; movups [rax+0xc0], xmm4; pop rbx; ret; 
0x00000000408805: adc [rax+0xb0], ebx; movups [rax+0xc0], xmm4; pop rbx; ret; 
0x0000000040880c: adc [rax+0xc0], esp; pop rbx; ret; 
0x0000000041ec11: adc [rax+rcx*2+0x33], esp; adc al, 0x25; xor [rax], al; add [rax], al; call rdx; 
0x0000000041ec2f: adc [rax+rcx*2+0x33], esp; add al, 0x25; xor [rax], al; add [rax], al; call rax; 
0x000000004527e4: adc [rax-0x73], cl; adc [rdi], cl; test [rcx+0x5], eax; add [rax], al; ret; 
0x0000000049865a: adc [rax-0x73], cl; adc eax, 0x11e; lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x00000000430f6a: adc [rax-0x73], cl; adc eax, 0x2818e; lea rax, [rip+0x280d7]; cmovne rax, rdx; ret; 
0x000000004318aa: adc [rax-0x73], cl; adc eax, 0xfffffc9e; lea rax, [rip+0x272f7]; cmove rax, rdx; ret; 
0x00000000455e1b: adc [rax-0x73], cl; jg short 0x0000000000455e30; jne 0x00000000004564f0; ret; 
0x00000000485254: adc [rax-0x73], cl; or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x00000000455e3e: adc [rax-0x73], ecx; jg short 0x0000000000455e54; jne 0x00000000004564f0; ret; 
0x0000000045fabc: adc [rax-0x73], ecx; or eax, 0xffffff9c; mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x00000000485253: adc [rax-0x73], r9b; or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x000000004089fb: adc [rax-0x75], cl; adc bh, [rcx]; xor dh, [rbp-0x13]; mov eax, 0xffffffef; ret; 
0x00000000425f82: adc [rax-0x75], cl; adc cl, [rax+0x39]; ret far; 
0x00000000411208: adc [rax-0x75], cl; and al, 0x18; call rax; 
0x0000000042103b: adc [rax-0x75], cl; push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x000000004806f7: adc [rax-0x77], cl; adc [rax-0x77], cl; push rax; adc [rax-0x77], cl; ret; 
0x000000004817eb: adc [rax-0x77], cl; jo short 0x0000000000481830; mov [rax], rdx; xor eax, eax; ret; 
0x00000000423b75: adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x000000004806fb: adc [rax-0x77], cl; push rax; adc [rax-0x77], cl; ret; 
0x0000000048073c: adc [rax-0x77], cl; push rax; movups [rax], xmm0; ret; 
0x0000000045fac6: adc [rax-0x77], cl; push rax; or bl, al; nop [rax]; ret; 
0x000000004806ff: adc [rax-0x77], cl; ret; 
0x0000000047fd7e: adc [rax-0x77], ecx; ret far; 
0x0000000045d2a9: adc [rax-0x7b], cl; push qword ptr [rbp+0x27]; mov rdi, [rbp]; call rbx; 
0x0000000045eb8d: adc [rax-0x7b], cl; push qword ptr [rbp+0x44]; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045eb5e: adc [rax-0x7b], cl; push qword ptr [rbp+0x4b]; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000040a8fc: adc [rax-0x7b], cl; shl byte ptr [rbp+rax-0x1], 0xe0; nop [rax]; mov eax, 0xffffffff; ret; 
0x0000000042d86b: adc [rax-0x7d], cl; call qword ptr [rax]; 
0x00000000410fc3: adc [rax-0x7d], cl; ret; 
0x0000000042979d: adc [rax], al; add [rax], al; cmovne rax, rdx; mov [rip+0xbb58c], rax; ret; 
0x0000000045cbce: adc [rax], al; add [rax], al; mov eax, 0x48; syscall; 
0x0000000040a8b7: adc [rax], al; add [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x00000000480279: adc [rax], al; add [rax], al; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000045a882: adc [rax], al; add [rax], al; pop rbx; ret; 
0x0000000040a883: adc [rax], al; add [rax], al; ret; 
0x0000000045cf35: adc [rax], al; add [rax], al; syscall; 
0x00000000435328: adc [rax], al; add [rbp-0x77], cl; ret far; 
0x000000004736b0: adc [rax], al; add [rcx+rcx*4-0x16], cl; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000458b8e: adc [rax], bh; enter 0x275, 0x39; enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x00000000481ddc: adc [rax], cl; add [rax], al; cmove rax, rdx; ret; 
0x00000000481d16: adc [rax], eax; add [rax-0x73], cl; add eax, 0xed0; cmove rax, rdx; ret; 
0x0000000045bc02: adc [rax], eax; add [rax-0x77], cl; ret; 
0x00000000498fa8: adc [rax], eax; add [rax], al; syscall; 
0x000000004351a8: adc [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000004935f6: adc [rax], eax; add [rbx-0x70f0fb08], al; cmp eax, 0xc7000015; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x000000004935f7: adc [rax], eax; add [rbx-0x70f0fb08], al; cmp eax, 0xc7000015; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000493fda: adc [rax], eax; add al, ch; ret; 
0x00000000480743: adc [rax], eax; ret; 
0x00000000401d0e: adc [rax], edi; test rax, rax; je short 0x0000000000401d20; mov edi, 0x4e3b70; jmp rax; 
0x000000004a0436: adc [rbp+0x2d840fc0], al; add eax, [rax]; add [rax+0x1], cl; ret; 
0x000000004275df: adc [rbp+0x38], eax; pop rbp; pop r12; ret; 
0x0000000046db6a: adc [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x0000000045658f: adc [rbp+rcx*4+0x1d], cl; imul edx, [rdx], 0x634b0006; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045e121: adc [rbp-0x7b], cl; dec dword ptr [rdi]; test [rbp+0x49000002], esi; mov edi, [rsi]; call rbx; 
0x0000000045e181: adc [rbp-0x7b], cl; dec dword ptr [rdi]; test [rcx+0x49000001], esp; mov edi, [rsi]; call rbx; 
0x0000000045e08d: adc [rbp-0x7b], cl; div byte ptr [rbp+0x1d]; mov rdi, [r13]; call rbx; 
0x0000000045df5a: adc [rbp-0x7b], cl; in al, 0x75; sub [rax-0x75], cl; jge short 0x000000000045df64; call rbx; 
0x0000000045df9b: adc [rbp-0x7b], cl; in eax, dx; jne short 0x000000000045dff0; mov rdi, [r12]; call rbx; 
0x0000000045dfcb: adc [rbp-0x7b], cl; in eax, dx; jne short 0x000000000045e050; mov rdi, [r12]; call rbx; 
0x0000000045e1dd: adc [rbp-0x7b], cl; push qword ptr [rbp+0x3e]; mov rdi, [r14]; call rbx; 
0x0000000045e209: adc [rbp-0x7b], cl; push qword ptr [rbp+0x69]; mov rdi, [r14]; call rbx; 
0x0000000045e3c4: adc [rbp-0x7b], cl; ror byte ptr [rdi], 0x85; adc eax, 0x49000007; mov edi, [rdi]; call rbx; 
0x0000000045e4a1: adc [rbp-0x7b], cl; shl byte ptr [rbp+0x3b], 0x49; mov edi, [rdi]; call rbx; 
0x0000000045e4ca: adc [rbp-0x7b], cl; shl byte ptr [rbp+0x7d], 0x49; mov edi, [rdi]; call rbx; 
0x0000000045e031: adc [rbp-0x7b], cl; test byte ptr [rdi], 0x85; xor eax, 0x49000001; mov edi, [rbp]; call rbx; 
0x0000000045ad8e: adc [rbx+0x147402f8], eax; xor eax, eax; ret; 
0x00000000423473: adc [rbx+0x18], eax; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x00000000423477: adc [rbx+0x28], eax; pop rbx; ret; 
0x00000000426e76: adc [rbx+0x38], eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000426965: adc [rbx+0x48], eax; pop rbx; ret; 
0x000000004a47e7: adc [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x00000000421528: adc [rbx+0x5d], bl; pop r12; ret; 
0x0000000048efae: adc [rbx+0x5d], bl; ret; 
0x0000000042346f: adc [rbx+0x8], eax; movups [rbx+0x18], xmm0; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x000000004238b6: adc [rbx+0x8], eax; pop rbx; ret; 
0x0000000045dc88: adc [rbx+0x94801e0], al; ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x0000000042615f: adc [rbx+0xbeb492d], al; add [rcx], al; ret; 
0x000000004555e7: adc [rbx+0xff3174e], cl; jg short 0x00000000004555f6; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000004562d7: adc [rbx+0xff3174e], cl; jg short 0x00000000004562e6; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x00000000455607: adc [rbx+0xff3184e], cl; jg short 0x0000000000455616; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x000000004562f7: adc [rbx+0xff3184e], cl; jg short 0x0000000000456306; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x0000000042854a: adc [rbx-0x2fd6efb9], cl; ret; 
0x00000000480fee: adc [rbx-0x3b7cb7ff], cl; or [rbx+0x5d], bl; ret; 
0x0000000048f6d7: adc [rbx-0x55], dh; xor eax, eax; ret; 
0x0000000048b0dd: adc [rbx], al; add [rax], al; ret; 
0x00000000490cde: adc [rbx], eax; pop rbx; ret; 
0x000000004597cc: adc [rbx], eax; ret; 
0x00000000459745: adc [rbx], esp; ret; 
0x00000000427878: adc [rcx+0x20], eax; movups [rcx+0x30], xmm0; movups [rcx+0x40], xmm0; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000042787c: adc [rcx+0x30], eax; movups [rcx+0x40], xmm0; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x00000000496a1a: adc [rcx+0x39], cl; ret; 
0x00000000427880: adc [rcx+0x40], eax; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x000000004461c6: adc [rcx+0x4], esp; vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000004461c5: adc [rcx+0x4], rsp; vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000004461cd: adc [rcx+0x5], ebp; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000004461cc: adc [rcx+0x5], rbp; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x00000000405a93: adc [rcx+0x63], cl; adc al, 0x97; add rdx, r15; notrack jmp rdx; 
0x00000000452c01: adc [rcx+0x66c30351], ecx; nop [rax+rax]; mov [rcx], rdx; ret; 
0x00000000452c42: adc [rcx+0x66c30751], ecx; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x00000000452c52: adc [rcx+0x66c30851], ecx; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x000000004461d4: adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x000000004461d3: adc [rcx+0x6], rsi; vmovups [r9+0x1c0], zmm15; ret; 
0x000000004461db: adc [rcx+0x7], edi; ret; 
0x000000004461da: adc [rcx+0x7], rdi; ret; 
0x0000000041c4f3: adc [rcx+rcx*4+0x4], cl; and al, 0xe8; ret; 
0x000000004a5876: adc [rcx+rcx*4-0x11], cl; call rax; 
0x00000000483c3e: adc [rcx+rcx*4-0x19], cl; mov rsi, [rsp+0x18]; call rbx; 
0x00000000402f89: adc [rcx+rcx*4-0x20], al; pop rbp; pop r12; pop r13; ret; 
0x00000000407a16: adc [rcx+rcx*4-0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000046db92: adc [rcx+rcx*4-0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x0000000047f69b: adc [rcx+rcx*4-0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000041f0ec: adc [rcx+rcx*4-0x40], al; pop rbx; ret; 
0x0000000042d9b2: adc [rcx+rcx*4-0x40], cl; pop rbp; ret; 
0x0000000042d7bb: adc [rcx+rcx*4-0x40], cl; pop rbx; ret; 
0x00000000459737: adc [rcx-0x10], esi; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x00000000445e76: adc [rcx-0x1], ebx; ret; 
0x00000000445e3a: adc [rcx-0x1], edi; ret; 
0x00000000445e75: adc [rcx-0x1], rbx; ret; 
0x00000000445e39: adc [rcx-0x1], rdi; ret; 
0x0000000045973b: adc [rcx-0x20], edi; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x00000000445e6f: adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x0000000044606d: adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x00000000445e33: adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x00000000445e6e: adc [rcx-0x2], rdx; vmovups [r9-0x40], zmm3; ret; 
0x0000000044606c: adc [rcx-0x2], rsi; vmovups [r9-0x40], zmm15; ret; 
0x00000000445e32: adc [rcx-0x2], rsi; vmovups [r9-0x40], zmm7; ret; 
0x00000000459740: adc [rcx-0x30], eax; movups [r11], xmm4; ret; 
0x00000000446066: adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x00000000445e2c: adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x00000000446065: adc [rcx-0x3], rbp; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x00000000445e2b: adc [rcx-0x3], rbp; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000044605f: adc [rcx-0x4], esp; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x00000000445e25: adc [rcx-0x4], esp; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000044605e: adc [rcx-0x4], rsp; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x00000000445e24: adc [rcx-0x4], rsp; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x0000000045c0e0: adc [rcx-0x77], al; ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x000000004a1391: adc [rcx-0x77], cl; ret; 
0x000000004a335d: adc [rcx-0x7d], cl; call qword ptr [rdx]; 
0x00000000492321: adc [rcx], al; add [rax], al; mov eax, r12d; pop r12; ret; 
0x0000000047843c: adc [rcx], al; add [rax], al; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000459167: adc [rcx], ch; cmp edx, ecx; jle short 0x0000000000459184; movsxd rax, ecx; ret; 
0x0000000042854d: adc [rcx], ch; rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x000000004817f2: adc [rcx], dh; rol bl, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000004216e7: adc [rcx], dh; ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x80]; 
0x000000004597bf: adc [rdi+0x10], ebp; movups [rdi+0x20], xmm6; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000004596a5: adc [rdi+0x10], ecx; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000004a429f: adc [rdi+0x1], bh; jmp rax; 
0x00000000445e68: adc [rdi+0x1], ecx; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x000000004592d5: adc [rdi+0x1], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000445e67: adc [rdi+0x1], rcx; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x000000004592d4: adc [rdi+0x1], rdx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004597c3: adc [rdi+0x20], esi; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000004597c7: adc [rdi+0x30], edi; movups [r11], xmm8; ret; 
0x0000000042687c: adc [rdi+0x8], eax; ret; 
0x0000000042768f: adc [rdi+0xa0], eax; ret; 
0x00000000459507: adc [rdi+rdx-0x10], ecx; ret; 
0x000000004596a9: adc [rdi+rdx-0x10], edx; movups [rdi+rdx-0x20], xmm3; ret; 
0x0000000045967c: adc [rdi+rdx-0x10], esp; movups [rdi+rdx-0x20], xmm5; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x00000000459681: adc [rdi+rdx-0x20], ebp; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000004596ae: adc [rdi+rdx-0x20], ebx; ret; 
0x00000000459686: adc [rdi+rdx-0x30], esi; movups [rdi+rdx-0x40], xmm7; ret; 
0x0000000045968b: adc [rdi+rdx-0x40], edi; ret; 
0x00000000446328: adc [rdi-0x5], esp; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000446327: adc [rdi-0x5], rsp; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000044632f: adc [rdi-0x6], ebp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000044632e: adc [rdi-0x6], rbp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000446336: adc [rdi-0x7], esi; vmovups [rdi-0x200], zmm15; ret; 
0x00000000446335: adc [rdi-0x7], rsi; vmovups [rdi-0x200], zmm15; ret; 
0x0000000044633d: adc [rdi-0x8], edi; ret; 
0x0000000044633c: adc [rdi-0x8], rdi; ret; 
0x0000000046bca4: adc [rdi], al; add [rax], al; add cl, ch; ret; 
0x000000004597c1: adc [rdi], cl; adc [rdi+0x20], esi; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000004596a7: adc [rdi], cl; adc [rdi+rdx-0x10], edx; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000004527e7: adc [rdi], cl; test [rcx+0x5], eax; add [rax], al; ret; 
0x0000000042f829: adc [rdi], cl; xchg al, al; add [rax], al; add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x0000000049e9d5: adc [rdi], eax; mov [rdx], eax; mov eax, 0x2; ret; 
0x000000004596a2: adc [rdi], eax; movups [rdi+0x10], xmm1; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x00000000459504: adc [rdi], eax; movups [rdi+rdx-0x10], xmm1; ret; 
0x00000000445e62: adc [rdi], eax; vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x000000004592cf: adc [rdi], edx; vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592f0: adc [rdi], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000445e61: adc [rdi], rax; vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x000000004592ce: adc [rdi], rdx; vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592ef: adc [rdi], rdx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000483948: adc [rdx+0x1], ch; push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x000000004838da: adc [rdx+0x1], ch; xor edx, edx; push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x00000000464f0f: adc [rdx+0x48], eax; ret; 
0x0000000043b82a: adc [rdx+0x9], dh; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000456216: adc [rdx+0xff31456], cl; jg short 0x0000000000456225; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x00000000456215: adc [rdx+0xff31456], r9b; jg short 0x0000000000456225; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x00000000456297: adc [rdx+0xff3184e], cl; jg short 0x00000000004562a6; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x00000000456398: adc [rdx+0xff3204e], cl; jg short 0x00000000004563a7; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x0000000041e0aa: adc [rdx+rdx*8-0x3c3c268b], eax; nop [rax]; xor eax, eax; ret; 
0x0000000043a75b: adc [rdx], cl; add [rax], al; xor eax, eax; ret; 
0x000000004a165e: adc [rip+0x2ec14], al; divss xmm0, [rip+0x2ec10]; ret; 
0x00000000479f63: adc [rip-0x7cbf0000], al; out dx, eax; add [rax-0x93343], eax; jmp qword ptr [rax]; 
0x00000000459415: adc [rsi+0x1], edx; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000459414: adc [rsi+0x1], rdx; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000045941c: adc [rsi+0x2], edx; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000045941b: adc [rsi+0x2], rdx; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000459423: adc [rsi+0x3], edx; ret; 
0x00000000459422: adc [rsi+0x3], rdx; ret; 
0x000000004594ab: adc [rsi+0x4], edx; vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004594aa: adc [rsi+0x4], rdx; vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004594b2: adc [rsi+0x5], edx; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004594b1: adc [rsi+0x5], rdx; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004594b9: adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004594b8: adc [rsi+0x6], rdx; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004594c0: adc [rsi+0x7], edx; ret; 
0x000000004594bf: adc [rsi+0x7], rdx; ret; 
0x0000000043a60a: adc [rsi+0xf], ah; cmp [rdi], dl; ret; 
0x00000000431fcb: adc [rsi+0xf], ah; outsd dx, [rsi]; fsub st(1), st; imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x00000000482880: adc [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x000000004594ff: adc [rsi+rdx-0x10], cl; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x000000004592c2: adc [rsi-0x1], edx; ret; 
0x000000004592c1: adc [rsi-0x1], rdx; ret; 
0x000000004592bb: adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592ba: adc [rsi-0x2], rdx; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592b4: adc [rsi-0x3], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592b3: adc [rsi-0x3], rdx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592ad: adc [rsi-0x4], edx; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592ac: adc [rsi-0x4], rdx; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000445efe: adc [rsi-0x75], ah; mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x0000000045668d: adc [rsi], al; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004594fc: adc [rsi], al; movups xmm1, [rsi+rdx-0x10]; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x0000000040a774: adc [rsi], ecx; pop rbp; ret; 
0x0000000040a410: adc [rsi], ecx; ret; 
0x0000000045940f: adc [rsi], edx; vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000045940e: adc [rsi], rdx; vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000047005d: adc [rsp+0x78], esi; movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x00000000470062: adc [rsp+0x88], edi; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x0000000044065a: adc ah, [rbx+0x7]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b17d: adc ah, [rip+0xffff]; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000040b5f3: adc ah, al; or [rax], eax; ret; 
0x000000004a1668: adc ah, ch; add al, [rax]; ret; 
0x00000000425085: adc al, 0x0; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x5d]; pop r12; ret; 
0x00000000498519: adc al, 0x0; add [rax-0x77], cl; sbb [r8+0x5a], bl; pop rbx; ret; 
0x0000000040a871: adc al, 0x0; add [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x0000000040a8cb: adc al, 0x0; add [rax], al; ret; 
0x0000000048dbab: adc al, 0x0; add [rax], al; syscall; 
0x00000000434ea8: adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000473407: adc al, 0x0; add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000409490: adc al, 0x0; or al, [rax]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000045fabb: adc al, 0x11; lea rcx, [rip-0x64]; mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x0000000048523f: adc al, 0x11; test edx, edx; jne short 0x0000000000485250; ret; 
0x0000000043b325: adc al, 0x13; notrack jmp rdx; 
0x00000000433239: adc al, 0x16; sub eax, edx; ret; 
0x00000000434750: adc al, 0x16; sub eax, edx; vzeroupper; ret; 
0x000000004a806f: adc al, 0x18; add [rsp-0x17], dh; ret far; 
0x0000000041f487: adc al, 0x1; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000430512: adc al, 0x1; cmp dl, r8b; jne short 0x0000000000430500; sub rax, 0x10; ret; 
0x000000004a5748: adc al, 0x24; mov rdi, r14; call rbp; 
0x0000000041ec15: adc al, 0x25; xor [rax], al; add [rax], al; call rdx; 
0x00000000475b58: adc al, 0x3; lea rax, [rip+0x69cdf]; jmp qword ptr [rax+rdx*8]; 
0x00000000475955: adc al, 0x3; lea rax, [rip+0x69de2]; jmp qword ptr [rax+rdx*8]; 
0x00000000438d2d: adc al, 0x3a; sub eax, edx; vzeroupper; ret; 
0x0000000045be8c: adc al, 0x48; add esp, 0x28; ret; 
0x00000000456c00: adc al, 0x48; lea eax, [rdi+0x14]; ret; 
0x00000000455ea1: adc al, 0x48; lea edi, [rdi+0x14]; jne 0x00000000004564f0; ret; 
0x000000004270cb: adc al, 0x48; mov eax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000431be8: adc al, 0x49; add [rax], eax; lea rdx, [rip+0x16b5d]; cmovne rax, rdx; ret; 
0x00000000455ec0: adc al, 0x49; sub eax, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000004564f0; ret; 
0x000000004077d0: adc al, 0x50; xor eax, eax; cmp ecx, edx; je short 0x00000000004077e0; ret; 
0x000000004782c8: adc al, 0x62; sti; dec dword ptr [rcx-0x77]; ret; 
0x000000004781c8: adc al, 0x63; sti; dec dword ptr [rcx-0x77]; ret; 
0x00000000407cd9: adc al, 0x81; add rdx, r9; notrack jmp rdx; 
0x00000000467514: adc al, 0x85; add [rax], al; add [rax+0x39], cl; ret far; 
0x000000004817b5: adc al, 0x90; mov [rax], rdx; xor eax, eax; ret; 
0x0000000040206d: adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x0000000044c3e0: adc al, 0x91; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044ab0e: adc al, 0x91; sub eax, edx; ret; 
0x0000000041db6e: adc al, 0x93; add r10, r11; notrack jmp r10; 
0x0000000043b321: adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000041d86b: adc al, 0x96; add rdx, rsi; notrack jmp rdx; 
0x00000000405a96: adc al, 0x97; add rdx, r15; notrack jmp rdx; 
0x00000000431e37: adc al, 0xa; notrack jmp r10; 
0x000000004333a3: adc al, 0xa; sub eax, edx; ret; 
0x000000004348cd: adc al, 0xa; sub eax, edx; vzeroupper; ret; 
0x00000000428398: adc al, 0xc9; or eax, [rax]; syscall; 
0x0000000040b563: adc al, 0xe0; or [rax], eax; ret; 
0x00000000459568: adc al, 0xe; cmp rdi, rdx; jb short 0x0000000000459572; rep movsb [rdi], [rsi]; ret; 
0x00000000437c8a: adc al, 0xe; sub eax, edx; ret; 
0x0000000043989a: adc al, 0xe; sub eax, edx; vzeroupper; ret; 
0x0000000041ea80: adc al, 0xeb; sbb eax, 0x441f0f; add [rbx+rcx*4+0x63], cl; or [rax-0x7d], cl; ret; 
0x000000004a1660: adc al, 0xec; add al, [rax]; divss xmm0, [rip+0x2ec10]; ret; 
0x00000000456219: adc al, 0xf3; movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000004a3992: adc al, 0xf7; add rsp, 0x8; ret; 
0x0000000049fcfd: adc al, 0xf8; add cl, ch; out dx, al; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x00000000436868: adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000402eed: adc al, [rcx+rcx*4-0x20]; pop rbp; pop r12; pop r13; ret; 
0x0000000044ef3a: adc al, [rdx]; add [rax], al; vzeroupper; ret; 
0x0000000045655e: adc al, [rsi]; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004a668e: adc al, ch; push 0xfffffffffffffffb; call far fword ptr [rbx+0x4c]; 
0x000000004036f7: adc al, ch; ret; 
0x000000004089fe: adc bh, [rcx]; xor dh, [rbp-0x13]; mov eax, 0xffffffef; ret; 
0x0000000042923a: adc bh, [rsi-0x3]; dec dword ptr [rax-0x77]; ret; 
0x0000000040c223: adc bl, 0x9; add bl, al; lea rax, [rip+0x9d388]; ret; 
0x0000000047eaea: adc bl, [rbp+0x63480004]; add al, 0x81; add rax, rcx; notrack jmp rax; 
0x00000000439217: adc bl, al; nop [rax]; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x0000000046327a: adc bl, bh; stc; jmp qword ptr [rsi+0x48]; 
0x0000000049d036: adc bl, ch; jge short 0x000000000049d083; shl ecx, cl; mov [rdi], r9; ret; 
0x00000000442ba0: adc bl, dh; movq [rdi+0x10], mm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x0000000045a30a: adc bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x000000004561c6: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cl; ret; 
0x00000000456b97: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000004554e7: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], cx; ret; 
0x00000000456bd6: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x00000000455526: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x00000000455516: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], ecx; ret; 
0x00000000456c57: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000004555a7: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x00000000455587: adc bl, dh; movq [rdi], mm0; mov [rdi+0x10], rcx; ret; 
0x00000000456d58: adc bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x00000000455688: adc bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; ret; 
0x000000004a165b: adc bl, dh; movups xmm0, [rip+0x2ec14]; divss xmm0, [rip+0x2ec10]; ret; 
0x00000000442b9f: adc bl, r14b; movq [rdi+0x10], mm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x000000004561c5: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cl; ret; 
0x00000000456b96: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000004554e6: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], cx; ret; 
0x00000000456bd5: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x00000000455525: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x00000000455515: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], ecx; ret; 
0x00000000456c56: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000004555a6: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x00000000455586: adc bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rcx; ret; 
0x00000000431d69: adc cl, [rax+0x29]; ret; 
0x0000000042680e: adc cl, [rax+0x39]; enter 0xf48, 0x4f; ror dword ptr [rax-0x7b], 0xd2; jne short 0x0000000000426808; ret; 
0x000000004806b6: adc cl, [rax+0x39]; enter 0xf48, 0x4f; ror dword ptr [rax-0x7b], 0xd2; jne short 0x00000000004806b0; ret; 
0x00000000425f86: adc cl, [rax+0x39]; ret far; 
0x00000000455e63: adc cl, [rax-0x73]; jg short 0x0000000000455e7a; jne 0x00000000004564f0; ret; 
0x0000000041119b: adc cl, [rax-0x75]; adc eax, 0xd3ba5; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x0000000042754d: adc cl, [rax-0x75]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000004a43b1: adc cl, [rax-0x75]; and al, 0x8; mov [rsp+0x10], r10; call rax; 
0x0000000045fb79: adc cl, [rax-0x77]; and sil, al; sub [rcx], al; ret; 
0x00000000422bcd: adc cl, [rbx+0x42394c42]; cmovne rax, rcx; ret; 
0x0000000049588d: adc cl, [rdi]; mov esi, 0x77cf390e; jrcxz 0x00000000004958da; mov eax, eax; ret; 
0x0000000040a76a: adc cl, [rsi]; pop rbp; ret; 
0x0000000040a444: adc cl, [rsi]; ret; 
0x000000004960e4: adc cl, bl; in eax, 0xdf; loopne 0x0000000000496073; ret; 
0x00000000498879: adc dh, [rbx-0xc]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000040c1db: adc dh, dh; or eax, [rax]; ret; 
0x0000000042975a: adc dl, [rax+0x1000b]; add [rax], al; mov [rip+0xb9004], eax; ret; 
0x0000000043984a: adc dword ptr [rcx+0x31000002], 0xffffffc0; vzeroupper; ret; 
0x0000000043199a: adc eax, 0x118b1; cmovne rax, rdx; ret; 
0x00000000481d14: adc eax, 0x11d7; lea rax, [rip+0xed0]; cmove rax, rdx; ret; 
0x0000000049865d: adc eax, 0x11e; lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x00000000455ec4: adc eax, 0x157f8d48; jne 0x00000000004564f0; ret; 
0x00000000481cd4: adc eax, 0x1607; lea rax, [rip+0x13e0]; cmove rax, rdx; ret; 
0x00000000431bee: adc eax, 0x16b5d; cmovne rax, rdx; ret; 
0x00000000431d24: adc eax, 0x1c407; lea rax, [rip+0x1bfc0]; cmove rax, rdx; ret; 
0x00000000430fe4: adc eax, 0x1d4d7; lea rax, [rip+0x1d330]; cmove rax, rdx; ret; 
0x00000000430f4b: adc eax, 0x1e5e0; cmovne rax, rdx; ret; 
0x000000004310ab: adc eax, 0x1fc30; cmovne rax, rdx; ret; 
0x000000004a7bd3: adc eax, 0x20478b48; test rax, rax; je short 0x00000000004a7be4; call rax; 
0x00000000431b9b: adc eax, 0x21cc0; cmovne rax, rdx; ret; 
0x00000000430eeb: adc eax, 0x25b0; cmovne rax, rdx; ret; 
0x000000004318fc: adc eax, 0x25b3f; cmovne rax, rdx; ret; 
0x00000000430e8b: adc eax, 0x26290; cmovne rax, rdx; ret; 
0x00000000431ca9: adc eax, 0x27832; lea rax, [rip+0x278eb]; cmove rax, rdx; ret; 
0x00000000431b39: adc eax, 0x27992; lea rax, [rip+0x27a4b]; cmove rax, rdx; ret; 
0x000000004319d9: adc eax, 0x27b02; lea rax, [rip+0x27bbb]; cmove rax, rdx; ret; 
0x00000000431c3b: adc eax, 0x27c70; lea rax, [rip+0x27cb9]; cmove rax, rdx; ret; 
0x00000000431acb: adc eax, 0x27dd0; lea rax, [rip+0x27e19]; cmove rax, rdx; ret; 
0x0000000043196b: adc eax, 0x27f40; lea rax, [rip+0x27f89]; cmove rax, rdx; ret; 
0x00000000431c8d: adc eax, 0x2805e; lea rax, [rip+0x280a7]; cmove rax, rdx; ret; 
0x00000000430f6d: adc eax, 0x2818e; lea rax, [rip+0x280d7]; cmovne rax, rdx; ret; 
0x00000000431b1d: adc eax, 0x281be; lea rax, [rip+0x28207]; cmove rax, rdx; ret; 
0x000000004319bd: adc eax, 0x2832e; lea rax, [rip+0x28377]; cmove rax, rdx; ret; 
0x00000000431a54: adc eax, 0x28867; lea rax, [rip+0x287f0]; cmovne rax, rdx; ret; 
0x00000000431a35: adc eax, 0x28996; lea rax, [rip+0x289df]; cmove rax, rdx; ret; 
0x00000000431a7d: adc eax, 0x28ace; lea rax, [rip+0x28b27]; cmove rax, rdx; ret; 
0x00000000483d4b: adc eax, 0x30; cmovne rax, rdx; ret; 
0x000000004983aa: adc eax, 0x33bed; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004988d4: adc eax, 0x3a7; lea rax, [rip+0x70]; cmove rax, rdx; ret; 
0x0000000045b8d9: adc eax, 0x441f0f66; add [rax], al; mov edi, edx; mov eax, esi; syscall; 
0x00000000443054: adc eax, 0x46f00ff2; add eax, 0xef00ff2; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000431be1: adc eax, 0x4802e680; lea eax, [rip+0x14914]; lea rdx, [rip+0x16b5d]; cmovne rax, rdx; ret; 
0x00000000431048: adc eax, 0x4802e680; lea eax, [rip+0x3afd]; lea rdx, [rip+0x5356]; cmovne rax, rdx; ret; 
0x000000004318ef: adc eax, 0x4802e680; lea eax, [rip+0x7a86]; lea rdx, [rip+0x25b3f]; cmovne rax, rdx; ret; 
0x0000000045e3ca: adc eax, 0x49000007; mov edi, [rdi]; call rbx; 
0x00000000455357: adc eax, 0x49000623; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000047cb27: adc eax, 0x49000635; mov ebx, ecx; mov dword ptr [rbp-0x508], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000043ed57: adc eax, 0x4900077c; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bb97: adc eax, 0x490007ac; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000049833b: adc eax, 0x4b7c0; mov [rax], rdx; add rsp, 0x8; ret; 
0x00000000499020: adc eax, 0x4c113; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000431055: adc eax, 0x5356; cmovne rax, rdx; ret; 
0x0000000048b5d3: adc eax, 0x57ba8; xor eax, eax; add rsp, 0x8; ret; 
0x0000000045bb22: adc eax, 0x5c375; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x00000000485132: adc eax, 0x5e058948; inc byte ptr [rip-0x38c6b800]; ja short 0x0000000000485168; xor eax, eax; ret; 
0x00000000455ec8: adc eax, 0x621850f; add [rax], al; ret; 
0x0000000044c538: adc eax, 0x6b0f3; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044a998: adc eax, 0x6cc43; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044daa8: adc eax, 0x6d293; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044da8e: adc eax, 0x6d2ad; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044c428: adc eax, 0x6e913; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044c40e: adc eax, 0x6e92d; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044884c: adc eax, 0x6ed4f; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044a878: adc eax, 0x704c3; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044a85e: adc eax, 0x704dd; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004465fc: adc eax, 0x70f5f; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000448718: adc eax, 0x72623; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004486fe: adc eax, 0x7263d; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000046fd69: adc eax, 0x73cca; cmp fs:[rdi], rsi; je short 0x000000000046fd78; ret; 
0x0000000040a44a: adc eax, 0x74800000; and [rcx+0x16ff], al; xor byte ptr [rbp+0x48], 0x48; mov eax, 0x4def40; ret; 
0x00000000431ce4: adc eax, 0x7547; lea rax, [rip+0x7330]; cmove rax, rdx; ret; 
0x00000000437bc8: adc eax, 0x7ea63; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043645c: adc eax, 0x8018f; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000434bfc: adc eax, 0x819af; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043352c: adc eax, 0x8303f; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000431e2c: adc eax, 0x846ff; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043090c: adc eax, 0x85ba7; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000436588: adc eax, 0x894d0000; ret far; 
0x00000000421dda: adc eax, 0x8b490000; mov bh, 0x90; add [rax], al; add cl, ch; ret far; 
0x0000000042552d: adc eax, 0x8fb4a; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000425627: adc eax, 0x8fc1c; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000040dc66: adc eax, 0x9c04d; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000040976b: adc eax, 0x9fd78; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x0000000040948f: adc eax, 0xa0014; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000407d47: adc eax, 0xa16cc; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000407cf7: adc eax, 0xa16fc; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000410956: adc eax, 0xa2b45; movsxd rax, [rcx+rax*4]; add rax, rdx; ret; 
0x00000000411d6f: adc eax, 0xa2c70; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004034ab: adc eax, 0xa5c50; mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x00000000481dd4: adc eax, 0xb47; lea rax, [rip+0x810]; cmove rax, rdx; ret; 
0x00000000401bec: adc eax, 0xb5df3; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x0000000042a5b4: adc eax, 0xb8227; lea rax, [rip+0xb8220]; add rsp, 0x10; pop rbp; ret; 
0x000000004293b9: adc eax, 0xb93d2; ret; 
0x000000004288ca: adc eax, 0xbc3e1; mov [rip+0xbc3e2], rbx; add dword ptr [rip+0xbc3d7], 0x1; pop rbx; ret; 
0x0000000040b56b: adc eax, 0xc30009e0; lea rax, [rip+0x9e015]; ret; 
0x0000000040b573: adc eax, 0xc30009e0; lea rax, [rip+0x9e016]; ret; 
0x0000000040b583: adc eax, 0xc30009e0; lea rax, [rip+0x9e018]; ret; 
0x00000000483624: adc eax, 0xc57; lea rax, [rip+0x9b0]; cmove rax, rdx; ret; 
0x000000004111fb: adc eax, 0xd3b48; mov edi, [rsp+0xc]; mov rsi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x0000000041119e: adc eax, 0xd3ba5; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x000000004841ba: adc eax, 0xe180d188; pcmpeqb mm3, [rsi]; ret; 
0x00000000431c6a: adc eax, 0xeaf1; cmovne rax, rdx; ret; 
0x00000000431afa: adc eax, 0xec41; cmovne rax, rdx; ret; 
0x0000000045a388: adc eax, 0xf880272; ret; 
0x00000000411aa0: adc eax, 0xff588d48; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x000000004318ad: adc eax, 0xfffffc9e; lea rax, [rip+0x272f7]; cmove rax, rdx; ret; 
0x0000000045a383: adc eax, [rax+0x157701fa]; jb short 0x000000000045a38d; mov [rdi], cl; ret; 
0x00000000435028: adc eax, [rax]; add [rbp-0x77], cl; ret far; 
0x000000004793bc: adc eax, [rax]; add [rcx-0x8ef63], cl; dec dword ptr [rax-0x77]; ret far; 
0x000000004296a8: adc eax, [rbp+0x1]; sbb [r8+0x39], cl; ret; 
0x0000000049e67d: adc eax, eax; ret; 
0x00000000499021: adc eax, ecx; add al, 0x0; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000049e7b6: adc eax, edx; pop rbp; pop rbx; ret; 
0x000000004274fe: adc ebp, ebx; ret far; 
0x0000000042ffc3: adc ebp, edi; jmp qword ptr [rsi+0x2e]; 
0x00000000452ba1: adc ebx, eax; nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x0000000041f22f: adc ecx, [rax+0xf]; mov esi, 0x83480143; ret; 
0x00000000455e81: adc ecx, [rax-0x73]; jg short 0x0000000000455e99; jne 0x00000000004564f0; ret; 
0x000000004a2202: adc ecx, [rax-0x77]; ror byte ptr [rax-0x7d], 0x1; ret; 
0x0000000041ed39: adc ecx, [rax-0x7d]; ret; 
0x0000000048bab5: adc ecx, [rbx+rcx*4+0x33]; mov rax, [rbx+0x10]; add rax, [r13]; call rax; 
0x0000000048f13c: adc ecx, [rbx+rcx*4+0x5]; sub al, 0x63; add eax, 0xc0894c00; ret; 
0x0000000046ceb4: adc ecx, [rcx+0x29d231fb]; ret; 
0x00000000472786: adc ecx, [rcx+rax-0x6]; call qword ptr [rax+r9*8]; 
0x0000000048c452: adc ecx, [rcx-0x75]; add ecx, [rax-0x7d]; ret; 
0x00000000490a8c: adc ecx, [rdi]; mov dh, 0x45; add cl, [rax-0x7d]; ret; 
0x0000000043c0ac: adc ecx, [rdi]; sub [rdi-0x20], esp; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000040ccd3: adc ecx, ecx; or [rax], eax; ret; 
0x00000000421614: adc edi, 0x6; add [rax], al; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000040209c: adc edi, [rax+0x1]; mov [rip+0xe2228], eax; add rsp, 0x8; ret; 
0x000000004a4504: adc edi, [rax+0x4]; cmp dil, 0x3; jne short 0x00000000004a4530; add rsp, 0x8; ret; 
0x000000004a17d4: adc edi, [rax]; jne short 0x00000000004a1800; mov rax, [rsi+0xa8]; add rsp, 0x8; ret; 
0x00000000401ccc: adc edi, [rax]; test rax, rax; je short 0x0000000000401ce0; mov edi, 0x4e3b70; jmp rax; 
0x0000000043b326: adc edi, [rsi]; jmp rdx; 
0x0000000048a53e: adc edi, ebp; jmp qword ptr [rsi+0x66]; 
0x000000004983fc: adc edi, edi; call qword ptr [rax+0x48b78b48]; 
0x0000000049e617: adc edi, esp; jmp qword ptr [rsi+0xf]; 
0x000000004a1005: adc edx, ebx; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000045df59: adc gs:[rbp-0x7b], cl; in al, 0x75; sub [rax-0x75], cl; jge short 0x000000000045df64; call rbx; 
0x000000004a1003: adc r10, r11; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000045a309: adc r11b, r14b; movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x0000000049e7b5: adc rax, rdx; pop rbp; pop rbx; ret; 
0x00000000445e69: add [r10-0x2f], r12; jl short 0x0000000000445eb7; adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x000000004a0308: add [r13+0x31], r8b; jmp qword ptr [rsi-0x7d]; 
0x0000000045cd7f: add [r13+rbp-0x48], sil; add [rcx], eax; add [rax], al; syscall; 
0x0000000040a7fe: add [r13-0x3d], r11b; mov rax, 0x4dee00; pop rbp; ret; 
0x0000000040a7f5: add [r13-0x3d], r11b; mov rax, 0x4dee40; pop rbp; ret; 
0x0000000040a82b: add [r13-0x3d], r11b; mov rax, 0x4dee80; pop rbp; ret; 
0x0000000040a834: add [r13-0x3d], r11b; mov rax, 0x4def00; pop rbp; ret; 
0x0000000040a83d: add [r13-0x3d], r11b; mov rax, 0x4def40; pop rbp; ret; 
0x0000000040a807: add [r13-0x3d], r11b; mov rax, 0x4e1260; pop rbp; ret; 
0x0000000040a795: add [r13-0x3d], r11b; nop [rax]; mov rax, 0x4dec80; pop rbp; ret; 
0x0000000040a785: add [r13-0x3d], r11b; nop [rax]; mov rax, 0x4decc0; pop rbp; ret; 
0x0000000040a7d5: add [r13-0x3d], r11b; nop [rax]; mov rax, 0x4ded00; pop rbp; ret; 
0x0000000040a7c5: add [r13-0x3d], r11b; nop [rax]; mov rax, 0x4ded40; pop rbp; ret; 
0x0000000040a7e5: add [r13-0x3d], r11b; nop [rax]; mov rax, 0x4ded80; pop rbp; ret; 
0x0000000040a7a5: add [r13-0x3d], r11b; nop [rax]; mov rax, 0x4e11e0; pop rbp; ret; 
0x000000004275d7: add [r8+0x1], r15b; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000046a417: add [r8+0x39], r9d; ret; 
0x00000000428415: add [r8-0x77], r9b; imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x00000000415204: add [r8-0x7d], ecx; ret; 
0x0000000041f3d2: add [r8-0x7d], rcx; ret; 
0x0000000040b36b: add [r8], eax; add [rbx-0x7bf06601], al; push 0xffffffff83000001; call qword ptr [rbp+0x16f840f]; 
0x0000000048250a: add [r8], r8b; add [rax], al; add bl, ch; ret far; 
0x00000000431be9: add [r8], rax; lea rdx, [rip+0x16b5d]; cmovne rax, rdx; ret; 
0x00000000481d7f: add [r9+rcx*4-0x20], r9b; pop rbp; pop r12; pop r13; ret; 
0x000000004a79b4: add [r9], r14b; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000040a366: add [rax+0x132850f], al; add [rax], al; mov rax, 0x4dedc0; ret; 
0x0000000045736e: add [rax+0x1478d48], dl; ret; 
0x000000004600e6: add [rax+0x15], bh; syscall; 
0x0000000049e8fc: add [rax+0x1], bh; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000004275d8: add [rax+0x1], bh; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x00000000403087: add [rax+0x1], bh; pop rbx; mov dword ptr [rip+0xdf070], 0x1; ret; 
0x0000000049e810: add [rax+0x1], bh; ret; 
0x00000000482674: add [rax+0x1], cl; clc; add rax, rcx; ret; 
0x000000004829a1: add [rax+0x1], cl; clc; add rax, rcx; vzeroupper; ret; 
0x000000004607c2: add [rax+0x1], cl; ret far; 
0x00000000429b30: add [rax+0x1], cl; ret; 
0x0000000048b725: add [rax+0x21], cl; test dword ptr [rax+0x21], 0xc73948f0; jne short 0x000000000048b738; pop rbx; ret; 
0x00000000454f01: add [rax+0x28d4802], ecx; ret; 
0x00000000427a67: add [rax+0x29], cl; enter 0xe883, 0x1; ret; 
0x00000000412957: add [rax+0x29], cl; ret far; 
0x000000004788be: add [rax+0x29], cl; ret; 
0x0000000042d7ab: add [rax+0x29], cl; ror byte ptr [rax+0x39], 0x1; ret; 
0x0000000049e983: add [rax+0x2], bh; ret; 
0x000000004884be: add [rax+0x2f7c8043], dl; jmp far fword ptr [rdi]; 
0x0000000049fe3d: add [rax+0x31ca0], al; add [rdi-0x2c517], bl; jmp qword ptr [rsi+0xf]; 
0x0000000046a464: add [rax+0x39480751], ecx; ret; 
0x000000004a435c: add [rax+0x39], cl; or [rdi+0x2], r14b; sbb eax, eax; ret; 
0x00000000467518: add [rax+0x39], cl; ret far; 
0x0000000041ed1f: add [rax+0x39], cl; ret; 
0x000000004a67a0: add [rax+0x39], ecx; ret far; 
0x0000000042cbab: add [rax+0x39], ecx; ret; 
0x0000000041ed1d: add [rax+0x39], r9b; ret; 
0x0000000045a837: add [rax+0x485bf0e5], al; cmovne eax, edx; ret; 
0x00000000430e80: add [rax+0x48], al; lea eax, [rip+0x1cc37]; lea rdx, [rip+0x26290]; cmovne rax, rdx; ret; 
0x0000000045cbd1: add [rax+0x48], bh; syscall; 
0x0000000048f805: add [rax+0x59], bh; mov rbp, rsp; mov rsi, rbp; syscall; 
0x0000000040206a: add [rax+0x63], cl; adc al, 0x91; add rdx, rcx; notrack jmp rdx; 
0x0000000047eaed: add [rax+0x63], cl; add al, 0x81; add rax, rcx; notrack jmp rax; 
0x0000000041095a: add [rax+0x63], cl; add al, 0x81; add rax, rdx; ret; 
0x00000000407cfb: add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x00000000401bf0: add [rax+0x63], cl; add al, 0x8a; add rax, rdx; notrack jmp rax; 
0x0000000045bb26: add [rax+0x63], cl; add al, 0xaa; add rax, rdx; notrack jmp rax; 
0x0000000045a758: add [rax+0x63], cl; add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x0000000041149e: add [rax+0x63], cl; or al, 0x8e; add rcx, rsi; notrack jmp rcx; 
0x0000000047f23d: add [rax+0x63], cl; or al, 0x8f; add rcx, rdi; notrack jmp rcx; 
0x0000000048dbf6: add [rax+0x63], cl; ret; 
0x00000000452b9e: add [rax+0x6666c311], cl; nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x000000004563be: add [rax+0x6666c317], cl; nop [rax+rax]; xchg ax, ax; mov [rdi], dx; ret; 
0x0000000044f0be: add [rax+0x77f8c517], cl; ret; 
0x00000000456a0f: add [rax+0x78d4837], cl; ret; 
0x0000000045dc8b: add [rax+0x9], ecx; ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000410fa7: add [rax+0x9e], bh; syscall; 
0x000000004a7d41: add [rax+0xca], bh; lea rdi, [rip+0x3d232]; syscall; 
0x00000000497dc1: add [rax+0xca], bh; lea rdi, [rip+0x4d246]; syscall; 
0x00000000497b3d: add [rax+0xca], bh; lea rdi, [rip+0x4d4c6]; syscall; 
0x00000000495ab9: add [rax+0xca], bh; lea rdi, [rip+0x4f542]; syscall; 
0x00000000495979: add [rax+0xca], bh; lea rdi, [rip+0x4f682]; syscall; 
0x00000000471901: add [rax+0xca], bh; lea rdi, [rip+0x73672]; syscall; 
0x0000000047183c: add [rax+0xca], bh; lea rdi, [rip+0x73737]; syscall; 
0x0000000047169a: add [rax+0xca], bh; lea rdi, [rip+0x738d9]; syscall; 
0x000000004715c0: add [rax+0xca], bh; lea rdi, [rip+0x739b3]; syscall; 
0x00000000463df1: add [rax+0xca], bh; lea rdi, [rip+0x81c12]; syscall; 
0x00000000463c85: add [rax+0xca], bh; lea rdi, [rip+0x81d7e]; syscall; 
0x00000000463b65: add [rax+0xca], bh; lea rdi, [rip+0x81e9e]; syscall; 
0x0000000045b41d: add [rax+0xca], bh; lea rdi, [rip+0x8a5e6]; syscall; 
0x00000000430a9d: add [rax+0xca], bh; lea rdi, [rip+0xb1d36]; syscall; 
0x0000000042de9d: add [rax+0xca], bh; lea rdi, [rip+0xb4936]; syscall; 
0x0000000042de3d: add [rax+0xca], bh; lea rdi, [rip+0xb4996]; syscall; 
0x0000000042da7d: add [rax+0xca], bh; lea rdi, [rip+0xb4d56]; syscall; 
0x0000000042d81d: add [rax+0xca], bh; lea rdi, [rip+0xb4fb6]; syscall; 
0x0000000042d245: add [rax+0xca], bh; lea rdi, [rip+0xb558e]; syscall; 
0x0000000042d20d: add [rax+0xca], bh; lea rdi, [rip+0xb55c6]; syscall; 
0x0000000042edfd: add [rax+0xca], bh; lea rdi, [rip+0xb5f26]; syscall; 
0x0000000042e3b1: add [rax+0xca], bh; lea rdi, [rip+0xb6962]; syscall; 
0x0000000042a50e: add [rax+0xca], bh; lea rdi, [rip+0xba805]; syscall; 
0x0000000042a4dd: add [rax+0xca], bh; lea rdi, [rip+0xba846]; syscall; 
0x0000000042a25d: add [rax+0xca], bh; lea rdi, [rip+0xbaac6]; syscall; 
0x00000000429d39: add [rax+0xca], bh; lea rdi, [rip+0xbafea]; syscall; 
0x0000000042894f: add [rax+0xca], bh; lea rdi, [rip+0xbc354]; syscall; 
0x0000000042838f: add [rax+0xca], bh; lea rdi, [rip+0xbc914]; syscall; 
0x00000000428023: add [rax+0xca], bh; lea rdi, [rip+0xbcc80]; syscall; 
0x00000000427ce1: add [rax+0xca], bh; lea rdi, [rip+0xbcfc2]; syscall; 
0x0000000042677b: add [rax+0xca], bh; lea rdi, [rip+0xbe528]; syscall; 
0x000000004264db: add [rax+0xca], bh; lea rdi, [rip+0xbe7c8]; syscall; 
0x00000000426187: add [rax+0xca], bh; lea rdi, [rip+0xbeb1c]; syscall; 
0x0000000042018d: add [rax+0xca], bh; lea rdi, [rip+0xc5876]; syscall; 
0x0000000041f13c: add [rax+0xca], bh; lea rdi, [rip+0xc6767]; syscall; 
0x0000000041effc: add [rax+0xca], bh; lea rdi, [rip+0xc68a7]; syscall; 
0x0000000041edc5: add [rax+0xca], bh; lea rdi, [rip+0xc6ade]; syscall; 
0x0000000041ed8a: add [rax+0xca], bh; lea rdi, [rip+0xc6b19]; syscall; 
0x0000000041eca6: add [rax+0xca], bh; lea rdi, [rip+0xc6bfd]; syscall; 
0x000000004156da: add [rax+0xca], bh; lea rdi, [rip+0xcf151]; syscall; 
0x00000000413d37: add [rax+0xca], bh; lea rdi, [rip+0xd0abc]; syscall; 
0x00000000412bb8: add [rax+0xca], bh; lea rdi, [rip+0xd1b93]; syscall; 
0x00000000412b8a: add [rax+0xca], bh; lea rdi, [rip+0xd1bc1]; syscall; 
0x00000000412a3e: add [rax+0xca], bh; lea rdi, [rip+0xd1d0d]; syscall; 
0x000000004012d6: add [rax+0xca], bh; lea rdi, [rip+0xe356d]; syscall; 
0x00000000401445: add [rax+0xca], bh; syscall; 
0x0000000048192c: add [rax+0xca], bh; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x0000000047006e: add [rax+0xd], bh; syscall; 
0x0000000041e193: add [rax+0xe], bh; syscall; 
0x0000000041436f: add [rax+0xf000578], al; test [rsi], esp; add [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000427a53: add [rax+0xf740a39], eax; cmp rcx, rsi; ja short 0x0000000000427a50; lea eax, [rdx+rdi]; ret; 
0x000000004034ff: add [rax+0xf], al; mov dh, 0xf6; mov [rip+0xdec16], esi; ret; 
0x000000004034ef: add [rax+0xf], al; mov dh, 0xf6; mov [rip+0xdec22], esi; ret; 
0x000000004034df: add [rax+0xf], al; mov dh, 0xf6; mov [rip+0xdec26], esi; ret; 
0x000000004034cf: add [rax+0xf], al; mov dh, 0xf6; mov [rip+0xdec32], esi; ret; 
0x000000004034be: add [rax+0xf], al; mov dh, 0xf6; mov [rip+0xdec5e], esi; ret; 
0x0000000040339f: add [rax+0xf], al; mov dh, 0xf6; mov [rip+0xded6a], esi; ret; 
0x0000000040338f: add [rax+0xf], al; mov dh, 0xf6; mov [rip+0xded7e], esi; ret; 
0x0000000040337f: add [rax+0xf], al; mov dh, 0xf6; mov [rip+0xded9a], esi; ret; 
0x0000000040a3b8: add [rax+0xf], al; test [rax-0x7f000000], ah; jmp far fword ptr [rax]; 
0x00000000482c49: add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000049e98f: add [rax+0xf], cl; mov edx, 0x894830e8; or [r8+0x2], r15b; ret; 
0x0000000042930a: add [rax+0xf], cl; shl byte ptr [rcx], 0x1; ror byte ptr [rax+0x39], 0xfa; setae al; ret; 
0x000000004a17e7: add [rax+rax*2], bh; jne short 0x00000000004a1820; mov rax, [rsi+0xb8]; add rsp, 0x8; ret; 
0x00000000485171: add [rax+rax], cl; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000042c57c: add [rax+rax], cl; add [rax], al; mov rax, r8; ret; 
0x0000000046aa71: add [rax+rcx*4-0x7c], eax; adc al, 0x85; add [rax], al; add [rax+0x39], cl; ret far; 
0x00000000430513: add [rax+rdi-0x3e], eax; jne short 0x0000000000430500; sub rax, 0x10; ret; 
0x000000004a4587: add [rax+rdx*2], bh; jne short 0x00000000004a45b3; xor eax, eax; add rsp, 0x8; ret; 
0x000000004a45e7: add [rax+rdx*2], bh; jne short 0x00000000004a4613; xor eax, eax; add rsp, 0x8; ret; 
0x000000004a5f97: add [rax+rdx*2], bh; jne short 0x00000000004a5fbb; xor eax, eax; add rsp, 0x8; ret; 
0x000000004935ba: add [rax-0x13b43], al; jmp qword ptr [rsi+0xf]; 
0x000000004029ef: add [rax-0x16], bh; pop rbx; pop rbp; pop r12; ret; 
0x00000000402c57: add [rax-0x16], bh; ret; 
0x00000000455c2f: add [rax-0x177cb6c9], cl; add [rax-0x73], ecx; jg short 0x0000000000455c3b; jne 0x00000000004564f0; ret; 
0x000000004716fd: add [rax-0x1], bh; pop rbp; pop r12; pop r13; ret; 
0x00000000421e1f: add [rax-0x1], bh; pop rbp; ret; 
0x0000000040a907: add [rax-0x1], bh; ret; 
0x000000004237f6: add [rax-0x1], dil; ret; 
0x0000000040a9e7: add [rax-0x21], bh; ret; 
0x0000000040a454: add [rax-0x38b7b78b], al; rol byte ptr [rax-0x11], 0x4d; add bl, al; mov rax, 0x4ded00; ret; 
0x0000000042896e: add [rax-0x39], cl; add eax, 0xbc33e; add [rax], al; add [rax], al; ret; 
0x00000000410fb7: add [rax-0x39], cl; ret; 
0x0000000040a7ef: add [rax-0x39], cl; rol byte ptr [rax+0x5d004ded], 0xc3; mov rax, 0x4dee40; pop rbp; ret; 
0x0000000040a4a7: add [rax-0x39], cl; rol byte ptr [rax-0x12], 0x4d; add bl, al; mov rax, 0x4e12a0; ret; 
0x0000000048422f: add [rax-0x39], cl; rol byte ptr [rbx], 0x0; add [rax], al; ret; 
0x0000000048426f: add [rax-0x39], cl; rol byte ptr [rdi], 0x0; add [rax], al; ret; 
0x0000000048421f: add [rax-0x39], cl; rol byte ptr [rdx], 0x0; add [rax], al; ret; 
0x0000000048425f: add [rax-0x39], cl; rol byte ptr [rsi], 0x0; add [rax], al; ret; 
0x0000000046ff9e: add [rax-0x39], cl; ror byte ptr [rdi], 0x0; add [rax], al; syscall; 
0x0000000041ed18: add [rax-0x39], cl; shl byte ptr [rax+0x42], 0x4e; add [rax+0x39], cl; ret; 
0x000000004215fe: add [rax-0x39], r9b; ret; 
0x0000000041ed16: add [rax-0x39], r9b; shl byte ptr [rax+0x42], 0x4e; add [rax+0x39], cl; ret; 
0x000000004563de: add [rax-0x3c00a877], dl; nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x0000000045735e: add [rax-0x3cf872b8], dl; nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x0000000044e5ce: add [rax-0x3f43f00d], dl; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000047277e: add [rax-0x3f], cl; loop 0x0000000000472785; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000478bce: add [rax-0x3f], cl; loop 0x0000000000478bd5; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000049e8df: add [rax-0x3ffe], bh; sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000049e8f8: add [rax-0x47ff76b7], al; add [rax], eax; add [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000476a9f: add [rax-0x50743], al; jmp qword ptr [rax]; 
0x00000000476176: add [rax-0x50743], eax; jmp qword ptr [rax]; 
0x0000000045d13e: add [rax-0x5e1f00d], dl; mov eax, 0x1c; syscall; 
0x0000000045c39e: add [rax-0x5e1f00d], dl; mov eax, 0x20; syscall; 
0x00000000484efe: add [rax-0x5e1f00d], dl; mov eax, 0x66; syscall; 
0x0000000045d10e: add [rax-0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x0000000045d0de: add [rax-0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x000000004a392e: add [rax-0x5e1f00d], dl; mov rax, [rdi+0x90]; ret; 
0x0000000045cf5e: add [rax-0x5e1f00d], dl; mov rax, [rip+0x861ed]; test rax, rax; je short 0x000000000045cf71; ret; 
0x000000004033d7: add [rax-0x5f], bh; add rsp, 0x8; ret; 
0x00000000403497: add [rax-0x5f], bh; ret; 
0x000000004033d6: add [rax-0x5f], dil; add rsp, 0x8; ret; 
0x000000004038ee: add [rax-0x5f], dil; ret; 
0x0000000040aedf: add [rax-0x66], bh; ret; 
0x0000000040aeef: add [rax-0x67], bh; ret; 
0x000000004763f8: add [rax-0x68], cl; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000040aebf: add [rax-0x69], bh; ret; 
0x0000000040bb0f: add [rax-0x6c], bh; ret; 
0x00000000431997: add [rax-0x73], cl; adc eax, 0x118b1; cmovne rax, rdx; ret; 
0x00000000431beb: add [rax-0x73], cl; adc eax, 0x16b5d; cmovne rax, rdx; ret; 
0x00000000430f48: add [rax-0x73], cl; adc eax, 0x1e5e0; cmovne rax, rdx; ret; 
0x000000004310a8: add [rax-0x73], cl; adc eax, 0x1fc30; cmovne rax, rdx; ret; 
0x00000000431b98: add [rax-0x73], cl; adc eax, 0x21cc0; cmovne rax, rdx; ret; 
0x00000000430ee8: add [rax-0x73], cl; adc eax, 0x25b0; cmovne rax, rdx; ret; 
0x000000004318f9: add [rax-0x73], cl; adc eax, 0x25b3f; cmovne rax, rdx; ret; 
0x00000000430e88: add [rax-0x73], cl; adc eax, 0x26290; cmovne rax, rdx; ret; 
0x00000000483d48: add [rax-0x73], cl; adc eax, 0x30; cmovne rax, rdx; ret; 
0x00000000431052: add [rax-0x73], cl; adc eax, 0x5356; cmovne rax, rdx; ret; 
0x00000000431c67: add [rax-0x73], cl; adc eax, 0xeaf1; cmovne rax, rdx; ret; 
0x00000000431af7: add [rax-0x73], cl; adc eax, 0xec41; cmovne rax, rdx; ret; 
0x000000004837b9: add [rax-0x73], cl; add [rbp+rcx*4+0x4c], rcx; and al, 0x28; call rbx; 
0x0000000048394c: add [rax-0x73], cl; add al, 0x4c; lea ecx, [rsp+0x20]; call rbx; 
0x0000000044db0e: add [rax-0x73], cl; add al, 0x7; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000048b101: add [rax-0x73], cl; add al, 0x90; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x0000000048b0cf: add [rax-0x73], cl; add al, 0x90; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x0000000045739f: add [rax-0x73], cl; add al, 0xc3; nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x00000000481cd8: add [rax-0x73], cl; add eax, 0x13e0; cmove rax, rdx; ret; 
0x00000000431d28: add [rax-0x73], cl; add eax, 0x1bfc0; cmove rax, rdx; ret; 
0x00000000430fe8: add [rax-0x73], cl; add eax, 0x1d330; cmove rax, rdx; ret; 
0x00000000431cad: add [rax-0x73], cl; add eax, 0x278eb; cmove rax, rdx; ret; 
0x00000000431b3d: add [rax-0x73], cl; add eax, 0x27a4b; cmove rax, rdx; ret; 
0x000000004319dd: add [rax-0x73], cl; add eax, 0x27bbb; cmove rax, rdx; ret; 
0x00000000431c3f: add [rax-0x73], cl; add eax, 0x27cb9; cmove rax, rdx; ret; 
0x00000000431acf: add [rax-0x73], cl; add eax, 0x27e19; cmove rax, rdx; ret; 
0x0000000043196f: add [rax-0x73], cl; add eax, 0x27f89; cmove rax, rdx; ret; 
0x00000000431c91: add [rax-0x73], cl; add eax, 0x280a7; cmove rax, rdx; ret; 
0x00000000430f71: add [rax-0x73], cl; add eax, 0x280d7; cmovne rax, rdx; ret; 
0x00000000431b21: add [rax-0x73], cl; add eax, 0x28207; cmove rax, rdx; ret; 
0x000000004319c1: add [rax-0x73], cl; add eax, 0x28377; cmove rax, rdx; ret; 
0x00000000431a58: add [rax-0x73], cl; add eax, 0x287f0; cmovne rax, rdx; ret; 
0x00000000431a39: add [rax-0x73], cl; add eax, 0x289df; cmove rax, rdx; ret; 
0x00000000431a81: add [rax-0x73], cl; add eax, 0x28b27; cmove rax, rdx; ret; 
0x000000004573af: add [rax-0x73], cl; add eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x0000000042a6bd: add [rax-0x73], cl; add eax, 0x319b; mov [rip+0xb80f4], rax; ret; 
0x00000000497eae: add [rax-0x73], cl; add eax, 0x4d189; mov [rip+0x4d16a], rax; ret; 
0x00000000498661: add [rax-0x73], cl; add eax, 0x67; cmovne rax, rdx; ret; 
0x000000004988d8: add [rax-0x73], cl; add eax, 0x70; cmove rax, rdx; ret; 
0x00000000431ce8: add [rax-0x73], cl; add eax, 0x7330; cmove rax, rdx; ret; 
0x00000000481dd8: add [rax-0x73], cl; add eax, 0x810; cmove rax, rdx; ret; 
0x00000000483628: add [rax-0x73], cl; add eax, 0x9b0; cmove rax, rdx; ret; 
0x0000000040d7df: add [rax-0x73], cl; add eax, 0x9bd77; ret; 
0x0000000040d7bf: add [rax-0x73], cl; add eax, 0x9bd80; ret; 
0x0000000040d7af: add [rax-0x73], cl; add eax, 0x9bd84; ret; 
0x0000000040d79f: add [rax-0x73], cl; add eax, 0x9bd8c; ret; 
0x0000000040d7cf: add [rax-0x73], cl; add eax, 0x9bd8e; ret; 
0x0000000040d78f: add [rax-0x73], cl; add eax, 0x9bd8f; ret; 
0x0000000040d767: add [rax-0x73], cl; add eax, 0x9bdb0; ret; 
0x0000000040d81f: add [rax-0x73], cl; add eax, 0x9bdba; ret; 
0x0000000040d77f: add [rax-0x73], cl; add eax, 0x9bdcc; ret; 
0x0000000040d80f: add [rax-0x73], cl; add eax, 0x9bdd1; ret; 
0x0000000040d7ff: add [rax-0x73], cl; add eax, 0x9bde8; ret; 
0x0000000040d7ef: add [rax-0x73], cl; add eax, 0x9bdff; ret; 
0x0000000040cc9f: add [rax-0x73], cl; add eax, 0x9c8b7; ret; 
0x0000000040cc7f: add [rax-0x73], cl; add eax, 0x9c8c0; ret; 
0x0000000040cc6f: add [rax-0x73], cl; add eax, 0x9c8c4; ret; 
0x0000000040cc5f: add [rax-0x73], cl; add eax, 0x9c8cc; ret; 
0x0000000040cc8f: add [rax-0x73], cl; add eax, 0x9c8ce; ret; 
0x0000000040cc4f: add [rax-0x73], cl; add eax, 0x9c8cf; ret; 
0x0000000040cc27: add [rax-0x73], cl; add eax, 0x9c8f0; ret; 
0x0000000040ccdf: add [rax-0x73], cl; add eax, 0x9c8fa; ret; 
0x0000000040cc3f: add [rax-0x73], cl; add eax, 0x9c90c; ret; 
0x0000000040cccf: add [rax-0x73], cl; add eax, 0x9c911; ret; 
0x0000000040ccbf: add [rax-0x73], cl; add eax, 0x9c928; ret; 
0x0000000040ccaf: add [rax-0x73], cl; add eax, 0x9c93f; ret; 
0x0000000040c15f: add [rax-0x73], cl; add eax, 0x9d3f7; ret; 
0x0000000040c13f: add [rax-0x73], cl; add eax, 0x9d400; ret; 
0x0000000040c12f: add [rax-0x73], cl; add eax, 0x9d404; ret; 
0x0000000040c11f: add [rax-0x73], cl; add eax, 0x9d40c; ret; 
0x0000000040c14f: add [rax-0x73], cl; add eax, 0x9d40e; ret; 
0x0000000040c10f: add [rax-0x73], cl; add eax, 0x9d40f; ret; 
0x0000000040c0e7: add [rax-0x73], cl; add eax, 0x9d430; ret; 
0x0000000040c19f: add [rax-0x73], cl; add eax, 0x9d43a; ret; 
0x0000000040c0ff: add [rax-0x73], cl; add eax, 0x9d44c; ret; 
0x0000000040c18f: add [rax-0x73], cl; add eax, 0x9d451; ret; 
0x0000000040c17f: add [rax-0x73], cl; add eax, 0x9d468; ret; 
0x0000000040c16f: add [rax-0x73], cl; add eax, 0x9d47f; ret; 
0x0000000040b55f: add [rax-0x73], cl; add eax, 0x9e014; ret; 
0x0000000040b54f: add [rax-0x73], cl; add eax, 0x9e01c; ret; 
0x0000000040b53f: add [rax-0x73], cl; add eax, 0x9e023; ret; 
0x0000000040b52f: add [rax-0x73], cl; add eax, 0x9e02e; ret; 
0x0000000040b51f: add [rax-0x73], cl; add eax, 0x9e037; ret; 
0x0000000040b4ff: add [rax-0x73], cl; add eax, 0x9e040; ret; 
0x0000000040b4ef: add [rax-0x73], cl; add eax, 0x9e044; ret; 
0x0000000040b4df: add [rax-0x73], cl; add eax, 0x9e04c; ret; 
0x0000000040b4cf: add [rax-0x73], cl; add eax, 0x9e04f; ret; 
0x0000000040b4af: add [rax-0x73], cl; add eax, 0x9e077; ret; 
0x0000000040b49f: add [rax-0x73], cl; add eax, 0x9e078; ret; 
0x0000000040b4bf: add [rax-0x73], cl; add eax, 0x9e08c; ret; 
0x0000000042a5b8: add [rax-0x73], cl; add eax, 0xb8220; add rsp, 0x10; pop rbp; ret; 
0x0000000040b50f: add [rax-0x73], cl; add eax, 0xc02d8; ret; 
0x000000004109e8: add [rax-0x73], cl; add eax, 0xd38f0; ret; 
0x00000000481d18: add [rax-0x73], cl; add eax, 0xed0; cmove rax, rdx; ret; 
0x0000000042e4c7: add [rax-0x73], cl; add eax, 0xfffff391; mov [rip+0xb42ea], rax; ret; 
0x0000000045737f: add [rax-0x73], cl; add r8b, r11b; nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x0000000045738f: add [rax-0x73], cl; add r8d, r11d; nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x000000004a7d46: add [rax-0x73], cl; cmp eax, 0x3d232; syscall; 
0x0000000048c2b5: add [rax-0x73], cl; cmp eax, 0x3d8bb; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x00000000497dc6: add [rax-0x73], cl; cmp eax, 0x4d246; syscall; 
0x00000000497b42: add [rax-0x73], cl; cmp eax, 0x4d4c6; syscall; 
0x0000000047966f: add [rax-0x73], cl; cmp eax, 0x4ef89; lea rsi, [rip+0x663c2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000495abe: add [rax-0x73], cl; cmp eax, 0x4f542; syscall; 
0x0000000049597e: add [rax-0x73], cl; cmp eax, 0x4f682; syscall; 
0x00000000471906: add [rax-0x73], cl; cmp eax, 0x73672; syscall; 
0x00000000471841: add [rax-0x73], cl; cmp eax, 0x73737; syscall; 
0x0000000047169f: add [rax-0x73], cl; cmp eax, 0x738d9; syscall; 
0x000000004715c5: add [rax-0x73], cl; cmp eax, 0x739b3; syscall; 
0x00000000463df6: add [rax-0x73], cl; cmp eax, 0x81c12; syscall; 
0x00000000463c8a: add [rax-0x73], cl; cmp eax, 0x81d7e; syscall; 
0x00000000463b6a: add [rax-0x73], cl; cmp eax, 0x81e9e; syscall; 
0x0000000045b422: add [rax-0x73], cl; cmp eax, 0x8a5e6; syscall; 
0x00000000430aa2: add [rax-0x73], cl; cmp eax, 0xb1d36; syscall; 
0x0000000042dea2: add [rax-0x73], cl; cmp eax, 0xb4936; syscall; 
0x0000000042de42: add [rax-0x73], cl; cmp eax, 0xb4996; syscall; 
0x0000000042da82: add [rax-0x73], cl; cmp eax, 0xb4d56; syscall; 
0x0000000042d822: add [rax-0x73], cl; cmp eax, 0xb4fb6; syscall; 
0x0000000042d24a: add [rax-0x73], cl; cmp eax, 0xb558e; syscall; 
0x0000000042d212: add [rax-0x73], cl; cmp eax, 0xb55c6; syscall; 
0x0000000042ee02: add [rax-0x73], cl; cmp eax, 0xb5f26; syscall; 
0x0000000042e3b6: add [rax-0x73], cl; cmp eax, 0xb6962; syscall; 
0x0000000042a513: add [rax-0x73], cl; cmp eax, 0xba805; syscall; 
0x0000000042a4e2: add [rax-0x73], cl; cmp eax, 0xba846; syscall; 
0x0000000042a262: add [rax-0x73], cl; cmp eax, 0xbaac6; syscall; 
0x00000000429d3e: add [rax-0x73], cl; cmp eax, 0xbafea; syscall; 
0x00000000428954: add [rax-0x73], cl; cmp eax, 0xbc354; syscall; 
0x00000000428394: add [rax-0x73], cl; cmp eax, 0xbc914; syscall; 
0x00000000428028: add [rax-0x73], cl; cmp eax, 0xbcc80; syscall; 
0x00000000427ce6: add [rax-0x73], cl; cmp eax, 0xbcfc2; syscall; 
0x00000000426780: add [rax-0x73], cl; cmp eax, 0xbe528; syscall; 
0x000000004264e0: add [rax-0x73], cl; cmp eax, 0xbe7c8; syscall; 
0x0000000042618c: add [rax-0x73], cl; cmp eax, 0xbeb1c; syscall; 
0x00000000420192: add [rax-0x73], cl; cmp eax, 0xc5876; syscall; 
0x0000000041f141: add [rax-0x73], cl; cmp eax, 0xc6767; syscall; 
0x0000000041f001: add [rax-0x73], cl; cmp eax, 0xc68a7; syscall; 
0x0000000041edca: add [rax-0x73], cl; cmp eax, 0xc6ade; syscall; 
0x0000000041ed8f: add [rax-0x73], cl; cmp eax, 0xc6b19; syscall; 
0x0000000041ecab: add [rax-0x73], cl; cmp eax, 0xc6bfd; syscall; 
0x000000004156df: add [rax-0x73], cl; cmp eax, 0xcf151; syscall; 
0x00000000413d3c: add [rax-0x73], cl; cmp eax, 0xd0abc; syscall; 
0x00000000412bbd: add [rax-0x73], cl; cmp eax, 0xd1b93; syscall; 
0x00000000412b8f: add [rax-0x73], cl; cmp eax, 0xd1bc1; syscall; 
0x00000000412a43: add [rax-0x73], cl; cmp eax, 0xd1d0d; syscall; 
0x000000004012db: add [rax-0x73], cl; cmp eax, 0xe356d; syscall; 
0x00000000421618: add [rax-0x73], cl; je short 0x0000000000421641; xor [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x90]; 
0x00000000423b70: add [rax-0x73], cl; je short 0x0000000000423b99; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x000000004241da: add [rax-0x73], cl; je short 0x0000000000424203; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x000000004a16da: add [rax-0x73], cl; or [rcx+rcx*4+0x1], cl; ret; 
0x0000000045740f: add [rax-0x73], cl; or al, 0xc3; nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x0000000045741f: add [rax-0x73], cl; or eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x0000000047f29a: add [rax-0x73], cl; or eax, 0x497a2; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000047eae6: add [rax-0x73], cl; or eax, 0x49d12; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000040dbb1: add [rax-0x73], cl; or eax, 0x9c0e7; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000004234e4: add [rax-0x73], cl; or eax, 0xc0794; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x000000004573cf: add [rax-0x73], cl; or r11b, r8b; nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x000000004573df: add [rax-0x73], cl; or r11d, r8d; nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x000000004573ef: add [rax-0x73], cl; or r8b, r11b; nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x000000004573ff: add [rax-0x73], cl; or r8d, r11d; nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x0000000045d706: add [rax-0x73], cl; push rbx; or [rax-0x7d], cl; ret; 
0x0000000048bd78: add [rax-0x73], cl; xor eax, 0x3dd60; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x0000000049c1a7: add [rax-0x73], cl; xor eax, 0x49831; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x0000000045a751: add [rax-0x73], cl; xor eax, 0x5d1e7; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x00000000479676: add [rax-0x73], cl; xor eax, 0x663c2; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004529da: add [rax-0x73], ecx; add [rdi], rcx; test [rbx+0x3], ecx; add [rax], al; ret; 
0x0000000044ed1b: add [rax-0x73], ecx; jg short 0x000000000044ed21; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c35: add [rax-0x73], ecx; jg short 0x0000000000455c3b; jne 0x00000000004564f0; ret; 
0x0000000048c44f: add [rax-0x75], cl; adc ecx, [rcx-0x75]; add ecx, [rax-0x7d]; ret; 
0x00000000450b5f: add [rax-0x75], cl; add [rax-0x77], ecx; add cl, [rax-0x77]; clc; ret; 
0x000000004a11cb: add [rax-0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x0000000047b99a: add [rax-0x75], cl; add al, 0xc6; jmp rax; 
0x000000004758f4: add [rax-0x75], cl; add al, 0xc8; jmp rax; 
0x000000004a78fe: add [rax-0x75], cl; add al, 0xd8; test rax, rax; je short 0x00000000004a790a; call rax; 
0x0000000046e492: add [rax-0x75], cl; add al, 0xe8; test rax, rax; je short 0x000000000046e49e; call rax; 
0x0000000047c5af: add [rax-0x75], cl; add al, 0xf0; jmp rax; 
0x00000000421b56: add [rax-0x75], cl; and [r11+rcx*4+0x6d], r9b; sbb [rax-0x77], cl; ret far; 
0x00000000492338: add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rax; 
0x000000004922db: add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x0000000046737d: add [rax-0x75], cl; and al, 0x20; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000045c100: add [rax-0x75], cl; and al, 0x8; add rsp, 0x28; ret; 
0x0000000040303e: add [rax-0x75], cl; cmp al, ch; test eax, 0x85000078; sar byte ptr [rax+0x19], 0x89; ret; 
0x0000000042e64f: add [rax-0x75], cl; je short 0x000000000042e678; sbb [rbx+0x5d], bl; pop r12; jmp rax; 
0x0000000042ed7f: add [rax-0x75], cl; je short 0x000000000042eda8; cmp [rcx+rcx*4-0x9], cl; call rax; 
0x0000000042ff9f: add [rax-0x75], cl; je short 0x000000000042ffc8; sub [rcx+rcx*4-0x19], cl; call rax; 
0x000000004a138c: add [rax-0x75], cl; je short 0x00000000004a13b5; adc [rcx-0x77], cl; ret; 
0x0000000048c006: add [rax-0x75], cl; mov [r8-0x7b], r9b; ror byte ptr [rdi], 0x84; ret; 
0x0000000043d5af: add [rax-0x75], cl; mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d7af: add [rax-0x75], cl; mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000485a9f: add [rax-0x75], cl; or [r8-0x7b], cl; shl byte ptr [rdi+0x48], 0x89; ret; 
0x000000004a0301: add [rax-0x75], cl; or [rax+0x3], cl; add [r13+0x31], r8b; jmp qword ptr [rsi-0x7d]; 
0x000000004a3eb0: add [rax-0x75], cl; push rbp; or al, ch; idiv dil; jmp qword ptr [rsi+0xf]; 
0x00000000423674: add [rax-0x75], cl; push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x0000000042325f: add [rax-0x75], cl; push rbx; or [rax-0x75], cl; xor ecx, [rax-0x7d]; ret; 
0x0000000043cc5e: add [rax-0x75], cl; push rsi; clc; mov [rdi-0x8], rdx; ret; 
0x0000000044273e: add [rax-0x75], cl; push rsi; test dword ptr [rbx-0x76b703b2], 0x4f89f757; cld; ret; 
0x0000000041ec27: add [rax-0x75], cl; sbb [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x0000000043ce1f: add [rax-0x75], cl; test qword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x000000004a1837: add [rax-0x75], cl; xchg [rax+0x48000000], dh; add esp, 0x8; ret; 
0x00000000420642: add [rax-0x75], cl; xchg edi, eax; mov al, [0xe08a8948000000]; add [rax], al; ret; 
0x0000000045d7e7: add [rax-0x75], cl; xor [rcx+rcx*4-0x9], cl; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x0000000040aecf: add [rax-0x76], bh; ret; 
0x00000000412d82: add [rax-0x76b7bcc8], al; ret; 
0x00000000450bd1: add [rax-0x776b7fe], ecx; ret; 
0x000000004529d1: add [rax-0x776b7fe], ecx; sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000452d30; ret; 
0x000000004a398f: add [rax-0x77], cl; adc al, 0xf7; add rsp, 0x8; ret; 
0x0000000046fd66: add [rax-0x77], cl; adc eax, 0x73cca; cmp fs:[rdi], rsi; je short 0x000000000046fd78; ret; 
0x00000000497eb6: add [rax-0x77], cl; add eax, 0x4d16a; ret; 
0x00000000497e9f: add [rax-0x77], cl; add eax, 0x4d181; add rsp, 0x8; ret; 
0x0000000042a6c4: add [rax-0x77], cl; add eax, 0xb80f4; ret; 
0x0000000042a6b6: add [rax-0x77], cl; add eax, 0xb810a; lea rax, [rip+0x319b]; mov [rip+0xb80f4], rax; ret; 
0x0000000042973a: add [rax-0x77], cl; add eax, 0xb900e; ret; 
0x00000000429711: add [rax-0x77], cl; add eax, 0xb902f; ret; 
0x000000004296f1: add [rax-0x77], cl; add eax, 0xb9047; ret; 
0x00000000404c4f: add [rax-0x77], cl; add ebx, ebp; in al, dx; xor eax, eax; ret; 
0x000000004216e2: add [rax-0x77], cl; and al, 0x10; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000045669f: add [rax-0x77], cl; clc; ret; 
0x00000000425087: add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x5d]; pop r12; ret; 
0x00000000422f7c: add [rax-0x77], cl; fidivr st, word ptr [rdi+0x2]; mov eax, r9d; syscall; 
0x00000000473a9c: add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000042f17f: add [rax-0x77], cl; fistp qword ptr [rax+0xca], st; syscall; 
0x00000000428416: add [rax-0x77], cl; imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x0000000048f80a: add [rax-0x77], cl; in eax, 0x48; mov esi, ebp; syscall; 
0x0000000045fb1f: add [rax-0x77], cl; ja short 0x000000000045fb44; ret; 
0x0000000045fb87: add [rax-0x77], cl; jo short 0x000000000045fbac; ret; 
0x0000000041189d: add [rax-0x77], cl; mov [rsi+0x10], rsi; syscall; 
0x00000000424b6d: add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r13+0x90]; 
0x00000000423927: add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r15+0x90]; 
0x0000000047fa36: add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [rbx+0x90]; 
0x00000000424bd3: add [rax-0x77], cl; out dx, eax; call qword ptr [r13+0x20]; 
0x00000000424983: add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x000000004203cb: add [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x0000000042b0bb: add [rax-0x77], cl; out dx, eax; mov eax, 0xca; syscall; 
0x0000000045a85f: add [rax-0x77], cl; rcr byte ptr [rbx-0x3d], 0x1; mov eax, 0x60; pop rbx; ret; 
0x0000000040a00f: add [rax-0x77], cl; ret far; 
0x0000000040928f: add [rax-0x77], cl; ret; 
0x00000000409f10: add [rax-0x77], cl; ror byte ptr [rax-0x77], 0x1; ret far; 
0x00000000491845: add [rax-0x77], cl; sbb [r8+0x5a], bl; pop rbx; ret; 
0x000000004288ce: add [rax-0x77], cl; sbb eax, 0xbc3e2; add dword ptr [rip+0xbc3d7], 0x1; pop rbx; ret; 
0x000000004595e4: add [rax-0x77], cl; shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x000000004293b6: add [rax-0x77], ecx; adc eax, 0xb93d2; ret; 
0x00000000455012: add [rax-0x77], ecx; add cl, [rax-0x75]; add eax, 0x5428948; lea rax, [rdx+0xc]; ret; 
0x00000000450c82: add [rax-0x77], ecx; add cl, [rax-0x75]; add eax, 0x5428948; mov rax, rdi; ret; 
0x00000000450b62: add [rax-0x77], ecx; add cl, [rax-0x77]; clc; ret; 
0x00000000454f92: add [rax-0x77], ecx; add cl, [rbx+0x42890541]; add eax, 0x8428d48; ret; 
0x00000000450c72: add [rax-0x77], ecx; add cl, [rbx+0x42890841]; or [rax-0x77], cl; clc; ret; 
0x0000000048f046: add [rax-0x77], ecx; add eax, 0x56421; ret; 
0x00000000497291: add [rax-0x77], ecx; push rbp; sub dh, al; add [rip-0xb9517], ch; jmp qword ptr [rsi-0x70]; 
0x00000000467510: add [rax-0x78], eax; mov esp, 0x8514; add [rax+0x39], cl; ret far; 
0x0000000048cf1f: add [rax-0x7af0f506], al; ret far; 
0x000000004a3a13: add [rax-0x7b], cl; ror byte ptr [rax+0xf], 0x45; and al, 0x10; add rsp, 0x28; ret; 
0x0000000042067e: add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x00000000401cd1: add [rax-0x7b], cl; shl byte ptr [rcx+rcx-0x41], 0x70; cmp ecx, [rsi]; jmp rax; 
0x00000000402551: add [rax-0x7b], cl; shl byte ptr [rcx+rcx-0x75], 0x0; add rsp, 0x8; ret; 
0x00000000401d13: add [rax-0x7b], cl; shl byte ptr [rdi+rax-0x41], 0x70; cmp ecx, [rsi]; jmp rax; 
0x0000000040100e: add [rax-0x7b], cl; shl byte ptr [rdx+rax-0x1], 0xd0; add rsp, 0x8; ret; 
0x000000004783fb: add [rax-0x7bf10000], al; ret; 
0x000000004a4517: add [rax-0x7c], al; push qword ptr [rbp+0x36]; mov eax, 0x8; add rsp, 0x8; ret; 
0x0000000042d875: add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x0000000042f550: add [rax-0x7d], cl; call qword ptr [rax]; 
0x00000000468201: add [rax-0x7d], cl; cli; add ecx, [rdi]; xchg [rax*1+0x39480000], esp; ret; 
0x00000000499d00: add [rax-0x7d], cl; cmp al, 0x28; add [rdi], cl; test [rdi+rdi*8-0x1], ebp; call far fword ptr [rbx+0x48]; 
0x00000000488ab9: add [rax-0x7d], cl; jge short 0x0000000000488a86; add [rax-0x77], cl; ret; 
0x0000000042d9ef: add [rax-0x7d], cl; jmp qword ptr [rax]; 
0x0000000042acf3: add [rax-0x7d], cl; ret far; 
0x0000000041325f: add [rax-0x7d], cl; ret; 
0x0000000046cd6d: add [rax-0x7d], cl; rol byte ptr [rax+rcx*2], 0x83; ret; 
0x000000004841ef: add [rax-0x7d], cl; rol byte ptr [rbx], 0xc3; nop [rax+rax]; xor rax, rax; ret; 
0x000000004841de: add [rax-0x7d], cl; rol byte ptr [rcx], 0xc3; nop [rax+rax]; add rax, 0x3; ret; 
0x00000000415205: add [rax-0x7d], ecx; ret; 
0x00000000403370: add [rax-0x7ee38c], al; add [rax], al; sar byte ptr [rdi+0x74], 0x4; ret; 
0x00000000413b91: add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x000000004a1f14: add [rax-0x80], al; call qword ptr [rcx]; 
0x000000004a4509: add [rax-0x80], al; inc dword ptr [rbx]; jne short 0x00000000004a4530; add rsp, 0x8; ret; 
0x00000000414321: add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000475516: add [rax-0x80], al; jmp qword ptr [rdi+rcx]; 
0x000000004735b0: add [rax-0x8ff43], eax; jmp qword ptr [rax]; 
0x00000000479f6a: add [rax-0x93343], eax; jmp qword ptr [rax]; 
0x00000000415948: add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x00000000408b4f: add [rax-0xd], bh; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000040aeaf: add [rax-0xe0], bh; ret; 
0x0000000045cd7d: add [rax], al; add [r13+rbp-0x48], sil; add [rcx], eax; add [rax], al; syscall; 
0x0000000045736c: add [rax], al; add [rax+0x1478d48], dl; ret; 
0x0000000049e80e: add [rax], al; add [rax+0x1], bh; ret; 
0x000000004607bf: add [rax], al; add [rax+0x1], cl; ret far; 
0x0000000047610d: add [rax], al; add [rax+0x29], cl; ret far; 
0x000000004788bc: add [rax], al; add [rax+0x29], cl; ret; 
0x0000000049e981: add [rax], al; add [rax+0x2], bh; ret; 
0x0000000049fe3b: add [rax], al; add [rax+0x31ca0], al; add [rdi-0x2c517], bl; jmp qword ptr [rsi+0xf]; 
0x000000004a435a: add [rax], al; add [rax+0x39], cl; or [rdi+0x2], r14b; sbb eax, eax; ret; 
0x00000000467516: add [rax], al; add [rax+0x39], cl; ret far; 
0x0000000047b627: add [rax], al; add [rax+0x39], cl; ret; 
0x0000000045a835: add [rax], al; add [rax+0x485bf0e5], al; cmovne eax, edx; ret; 
0x0000000045cbcf: add [rax], al; add [rax+0x48], bh; syscall; 
0x00000000456a0d: add [rax], al; add [rax+0x78d4837], cl; ret; 
0x000000004a7d3f: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x3d232]; syscall; 
0x00000000497dbf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x4d246]; syscall; 
0x00000000497b3b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x4d4c6]; syscall; 
0x00000000495ab7: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x4f542]; syscall; 
0x00000000495977: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x4f682]; syscall; 
0x000000004718ff: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x73672]; syscall; 
0x0000000047183a: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x73737]; syscall; 
0x00000000471698: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x738d9]; syscall; 
0x000000004715be: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x739b3]; syscall; 
0x00000000463def: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x81c12]; syscall; 
0x00000000463c83: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x81d7e]; syscall; 
0x00000000463b63: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x81e9e]; syscall; 
0x0000000045b41b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0x8a5e6]; syscall; 
0x00000000430a9b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb1d36]; syscall; 
0x0000000042de9b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb4936]; syscall; 
0x0000000042de3b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb4996]; syscall; 
0x0000000042da7b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb4d56]; syscall; 
0x0000000042d81b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb4fb6]; syscall; 
0x0000000042d243: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb558e]; syscall; 
0x0000000042d20b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb55c6]; syscall; 
0x0000000042edfb: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb5f26]; syscall; 
0x0000000042e3af: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xb6962]; syscall; 
0x0000000042a50c: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xba805]; syscall; 
0x0000000042a4db: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xba846]; syscall; 
0x0000000042a25b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbaac6]; syscall; 
0x00000000429d37: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbafea]; syscall; 
0x0000000042894d: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbc354]; syscall; 
0x0000000042838d: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbc914]; syscall; 
0x00000000428021: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbcc80]; syscall; 
0x00000000427cdf: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbcfc2]; syscall; 
0x00000000426779: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbe528]; syscall; 
0x000000004264d9: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbe7c8]; syscall; 
0x00000000426185: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xbeb1c]; syscall; 
0x0000000042018b: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc5876]; syscall; 
0x0000000041f13a: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc6767]; syscall; 
0x0000000041effa: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc68a7]; syscall; 
0x0000000041edc3: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc6ade]; syscall; 
0x0000000041ed88: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc6b19]; syscall; 
0x0000000041eca4: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xc6bfd]; syscall; 
0x000000004156d8: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xcf151]; syscall; 
0x00000000413d35: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xd0abc]; syscall; 
0x00000000412bb6: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xd1b93]; syscall; 
0x00000000412b88: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xd1bc1]; syscall; 
0x00000000412a3c: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xd1d0d]; syscall; 
0x000000004012d4: add [rax], al; add [rax+0xca], bh; lea rdi, [rip+0xe356d]; syscall; 
0x00000000401443: add [rax], al; add [rax+0xca], bh; syscall; 
0x0000000047006c: add [rax], al; add [rax+0xd], bh; syscall; 
0x0000000041e191: add [rax], al; add [rax+0xe], bh; syscall; 
0x00000000422bdd: add [rax], al; add [rax-0x1], bh; ret; 
0x00000000429c1f: add [rax], al; add [rax-0x39], cl; ret; 
0x0000000048422d: add [rax], al; add [rax-0x39], cl; rol byte ptr [rbx], 0x0; add [rax], al; ret; 
0x0000000048426d: add [rax], al; add [rax-0x39], cl; rol byte ptr [rdi], 0x0; add [rax], al; ret; 
0x0000000048421d: add [rax], al; add [rax-0x39], cl; rol byte ptr [rdx], 0x0; add [rax], al; ret; 
0x0000000048425d: add [rax], al; add [rax-0x39], cl; rol byte ptr [rsi], 0x0; add [rax], al; ret; 
0x0000000045d13c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x1c; syscall; 
0x0000000045c39c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x20; syscall; 
0x00000000484efc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x66; syscall; 
0x0000000045d10c: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x0000000045d0dc: add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x000000004a392c: add [rax], al; add [rax-0x5e1f00d], dl; mov rax, [rdi+0x90]; ret; 
0x0000000040aedd: add [rax], al; add [rax-0x66], bh; ret; 
0x0000000040aeed: add [rax], al; add [rax-0x67], bh; ret; 
0x000000004763f6: add [rax], al; add [rax-0x68], cl; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000040aebd: add [rax], al; add [rax-0x69], bh; ret; 
0x0000000040d7dd: add [rax], al; add [rax-0x73], cl; add eax, 0x9bd77; ret; 
0x0000000040d7bd: add [rax], al; add [rax-0x73], cl; add eax, 0x9bd80; ret; 
0x0000000040d7ad: add [rax], al; add [rax-0x73], cl; add eax, 0x9bd84; ret; 
0x0000000040d79d: add [rax], al; add [rax-0x73], cl; add eax, 0x9bd8c; ret; 
0x0000000040d7cd: add [rax], al; add [rax-0x73], cl; add eax, 0x9bd8e; ret; 
0x0000000040d78d: add [rax], al; add [rax-0x73], cl; add eax, 0x9bd8f; ret; 
0x0000000040d765: add [rax], al; add [rax-0x73], cl; add eax, 0x9bdb0; ret; 
0x0000000040d81d: add [rax], al; add [rax-0x73], cl; add eax, 0x9bdba; ret; 
0x0000000040d77d: add [rax], al; add [rax-0x73], cl; add eax, 0x9bdcc; ret; 
0x0000000040d80d: add [rax], al; add [rax-0x73], cl; add eax, 0x9bdd1; ret; 
0x0000000040d7fd: add [rax], al; add [rax-0x73], cl; add eax, 0x9bde8; ret; 
0x0000000040d7ed: add [rax], al; add [rax-0x73], cl; add eax, 0x9bdff; ret; 
0x0000000040cc9d: add [rax], al; add [rax-0x73], cl; add eax, 0x9c8b7; ret; 
0x0000000040cc7d: add [rax], al; add [rax-0x73], cl; add eax, 0x9c8c0; ret; 
0x0000000040cc6d: add [rax], al; add [rax-0x73], cl; add eax, 0x9c8c4; ret; 
0x0000000040cc5d: add [rax], al; add [rax-0x73], cl; add eax, 0x9c8cc; ret; 
0x0000000040cc8d: add [rax], al; add [rax-0x73], cl; add eax, 0x9c8ce; ret; 
0x0000000040cc4d: add [rax], al; add [rax-0x73], cl; add eax, 0x9c8cf; ret; 
0x0000000040cc25: add [rax], al; add [rax-0x73], cl; add eax, 0x9c8f0; ret; 
0x0000000040ccdd: add [rax], al; add [rax-0x73], cl; add eax, 0x9c8fa; ret; 
0x0000000040cc3d: add [rax], al; add [rax-0x73], cl; add eax, 0x9c90c; ret; 
0x0000000040cccd: add [rax], al; add [rax-0x73], cl; add eax, 0x9c911; ret; 
0x0000000040ccbd: add [rax], al; add [rax-0x73], cl; add eax, 0x9c928; ret; 
0x0000000040ccad: add [rax], al; add [rax-0x73], cl; add eax, 0x9c93f; ret; 
0x0000000040c15d: add [rax], al; add [rax-0x73], cl; add eax, 0x9d3f7; ret; 
0x0000000040c13d: add [rax], al; add [rax-0x73], cl; add eax, 0x9d400; ret; 
0x0000000040c12d: add [rax], al; add [rax-0x73], cl; add eax, 0x9d404; ret; 
0x0000000040c11d: add [rax], al; add [rax-0x73], cl; add eax, 0x9d40c; ret; 
0x0000000040c14d: add [rax], al; add [rax-0x73], cl; add eax, 0x9d40e; ret; 
0x0000000040c10d: add [rax], al; add [rax-0x73], cl; add eax, 0x9d40f; ret; 
0x0000000040c0e5: add [rax], al; add [rax-0x73], cl; add eax, 0x9d430; ret; 
0x0000000040c19d: add [rax], al; add [rax-0x73], cl; add eax, 0x9d43a; ret; 
0x0000000040c0fd: add [rax], al; add [rax-0x73], cl; add eax, 0x9d44c; ret; 
0x0000000040c18d: add [rax], al; add [rax-0x73], cl; add eax, 0x9d451; ret; 
0x0000000040c17d: add [rax], al; add [rax-0x73], cl; add eax, 0x9d468; ret; 
0x0000000040c16d: add [rax], al; add [rax-0x73], cl; add eax, 0x9d47f; ret; 
0x0000000040b55d: add [rax], al; add [rax-0x73], cl; add eax, 0x9e014; ret; 
0x0000000040b54d: add [rax], al; add [rax-0x73], cl; add eax, 0x9e01c; ret; 
0x0000000040b53d: add [rax], al; add [rax-0x73], cl; add eax, 0x9e023; ret; 
0x0000000040b52d: add [rax], al; add [rax-0x73], cl; add eax, 0x9e02e; ret; 
0x0000000040b51d: add [rax], al; add [rax-0x73], cl; add eax, 0x9e037; ret; 
0x0000000040b4fd: add [rax], al; add [rax-0x73], cl; add eax, 0x9e040; ret; 
0x0000000040b4ed: add [rax], al; add [rax-0x73], cl; add eax, 0x9e044; ret; 
0x0000000040b4dd: add [rax], al; add [rax-0x73], cl; add eax, 0x9e04c; ret; 
0x0000000040b4cd: add [rax], al; add [rax-0x73], cl; add eax, 0x9e04f; ret; 
0x0000000040b4ad: add [rax], al; add [rax-0x73], cl; add eax, 0x9e077; ret; 
0x0000000040b4bd: add [rax], al; add [rax-0x73], cl; add eax, 0x9e08c; ret; 
0x0000000040b50d: add [rax], al; add [rax-0x73], cl; add eax, 0xc02d8; ret; 
0x000000004a7d44: add [rax], al; add [rax-0x73], cl; cmp eax, 0x3d232; syscall; 
0x00000000497dc4: add [rax], al; add [rax-0x73], cl; cmp eax, 0x4d246; syscall; 
0x00000000497b40: add [rax], al; add [rax-0x73], cl; cmp eax, 0x4d4c6; syscall; 
0x00000000495abc: add [rax], al; add [rax-0x73], cl; cmp eax, 0x4f542; syscall; 
0x0000000049597c: add [rax], al; add [rax-0x73], cl; cmp eax, 0x4f682; syscall; 
0x00000000471904: add [rax], al; add [rax-0x73], cl; cmp eax, 0x73672; syscall; 
0x0000000047183f: add [rax], al; add [rax-0x73], cl; cmp eax, 0x73737; syscall; 
0x0000000047169d: add [rax], al; add [rax-0x73], cl; cmp eax, 0x738d9; syscall; 
0x000000004715c3: add [rax], al; add [rax-0x73], cl; cmp eax, 0x739b3; syscall; 
0x00000000463df4: add [rax], al; add [rax-0x73], cl; cmp eax, 0x81c12; syscall; 
0x00000000463c88: add [rax], al; add [rax-0x73], cl; cmp eax, 0x81d7e; syscall; 
0x00000000463b68: add [rax], al; add [rax-0x73], cl; cmp eax, 0x81e9e; syscall; 
0x0000000045b420: add [rax], al; add [rax-0x73], cl; cmp eax, 0x8a5e6; syscall; 
0x00000000430aa0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb1d36; syscall; 
0x0000000042dea0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4936; syscall; 
0x0000000042de40: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4996; syscall; 
0x0000000042da80: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4d56; syscall; 
0x0000000042d820: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4fb6; syscall; 
0x0000000042d248: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb558e; syscall; 
0x0000000042d210: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb55c6; syscall; 
0x0000000042ee00: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb5f26; syscall; 
0x0000000042e3b4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xb6962; syscall; 
0x0000000042a511: add [rax], al; add [rax-0x73], cl; cmp eax, 0xba805; syscall; 
0x0000000042a4e0: add [rax], al; add [rax-0x73], cl; cmp eax, 0xba846; syscall; 
0x0000000042a260: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbaac6; syscall; 
0x00000000429d3c: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbafea; syscall; 
0x00000000428952: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc354; syscall; 
0x00000000428392: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc914; syscall; 
0x00000000428026: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbcc80; syscall; 
0x00000000427ce4: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbcfc2; syscall; 
0x0000000042677e: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe528; syscall; 
0x000000004264de: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe7c8; syscall; 
0x0000000042618a: add [rax], al; add [rax-0x73], cl; cmp eax, 0xbeb1c; syscall; 
0x00000000420190: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc5876; syscall; 
0x0000000041f13f: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc6767; syscall; 
0x0000000041efff: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc68a7; syscall; 
0x0000000041edc8: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc6ade; syscall; 
0x0000000041ed8d: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc6b19; syscall; 
0x0000000041eca9: add [rax], al; add [rax-0x73], cl; cmp eax, 0xc6bfd; syscall; 
0x000000004156dd: add [rax], al; add [rax-0x73], cl; cmp eax, 0xcf151; syscall; 
0x00000000413d3a: add [rax], al; add [rax-0x73], cl; cmp eax, 0xd0abc; syscall; 
0x00000000412bbb: add [rax], al; add [rax-0x73], cl; cmp eax, 0xd1b93; syscall; 
0x00000000412b8d: add [rax], al; add [rax-0x73], cl; cmp eax, 0xd1bc1; syscall; 
0x00000000412a41: add [rax], al; add [rax-0x73], cl; cmp eax, 0xd1d0d; syscall; 
0x000000004012d9: add [rax], al; add [rax-0x73], cl; cmp eax, 0xe356d; syscall; 
0x0000000048c44d: add [rax], al; add [rax-0x75], cl; adc ecx, [rcx-0x75]; add ecx, [rax-0x7d]; ret; 
0x0000000047b998: add [rax], al; add [rax-0x75], cl; add al, 0xc6; jmp rax; 
0x0000000047c5ad: add [rax], al; add [rax-0x75], cl; add al, 0xf0; jmp rax; 
0x00000000421b54: add [rax], al; add [rax-0x75], cl; and [r11+rcx*4+0x6d], r9b; sbb [rax-0x77], cl; ret far; 
0x00000000492336: add [rax], al; add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rax; 
0x000000004922d9: add [rax], al; add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x0000000042ff9d: add [rax], al; add [rax-0x75], cl; je short 0x000000000042ffc8; sub [rcx+rcx*4-0x19], cl; call rax; 
0x0000000043ce1d: add [rax], al; add [rax-0x75], cl; test qword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x0000000040aecd: add [rax], al; add [rax-0x76], bh; ret; 
0x000000004a398d: add [rax], al; add [rax-0x77], cl; adc al, 0xf7; add rsp, 0x8; ret; 
0x00000000429738: add [rax], al; add [rax-0x77], cl; add eax, 0xb900e; ret; 
0x0000000042970f: add [rax], al; add [rax-0x77], cl; add eax, 0xb902f; ret; 
0x000000004296ef: add [rax], al; add [rax-0x77], cl; add eax, 0xb9047; ret; 
0x00000000422f7a: add [rax], al; add [rax-0x77], cl; fidivr st, word ptr [rdi+0x2]; mov eax, r9d; syscall; 
0x0000000042f17d: add [rax], al; add [rax-0x77], cl; fistp qword ptr [rax+0xca], st; syscall; 
0x0000000048f808: add [rax], al; add [rax-0x77], cl; in eax, 0x48; mov esi, ebp; syscall; 
0x0000000045fb1d: add [rax], al; add [rax-0x77], cl; ja short 0x000000000045fb44; ret; 
0x0000000041189b: add [rax], al; add [rax-0x77], cl; mov [rsi+0x10], rsi; syscall; 
0x0000000047fa34: add [rax], al; add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [rbx+0x90]; 
0x00000000424bd1: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [r13+0x20]; 
0x00000000424981: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x000000004203c9: add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x0000000042b0b9: add [rax], al; add [rax-0x77], cl; out dx, eax; mov eax, 0xca; syscall; 
0x0000000040a00d: add [rax], al; add [rax-0x77], cl; ret far; 
0x0000000040928d: add [rax], al; add [rax-0x77], cl; ret; 
0x0000000047211a: add [rax], al; add [rax-0x77], cl; ret; 
0x00000000409f0e: add [rax], al; add [rax-0x77], cl; ror byte ptr [rax-0x77], 0x1; ret far; 
0x0000000048cf1d: add [rax], al; add [rax-0x7af0f506], al; ret far; 
0x00000000401ccf: add [rax], al; add [rax-0x7b], cl; shl byte ptr [rcx+rcx-0x41], 0x70; cmp ecx, [rsi]; jmp rax; 
0x00000000401d11: add [rax], al; add [rax-0x7b], cl; shl byte ptr [rdi+rax-0x41], 0x70; cmp ecx, [rsi]; jmp rax; 
0x0000000040100c: add [rax], al; add [rax-0x7b], cl; shl byte ptr [rdx+rax-0x1], 0xd0; add rsp, 0x8; ret; 
0x0000000042f558: add [rax], al; add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x0000000042f54e: add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x0000000042d9ed: add [rax], al; add [rax-0x7d], cl; jmp qword ptr [rax]; 
0x0000000041325d: add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000040336e: add [rax], al; add [rax-0x7ee38c], al; add [rax], al; sar byte ptr [rdi+0x74], 0x4; ret; 
0x00000000414cab: add [rax], al; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x0000000045736a: add [rax], al; add [rax], al; add [rax+0x1478d48], dl; ret; 
0x00000000456a0b: add [rax], al; add [rax], al; add [rax+0x78d4837], cl; ret; 
0x00000000422bdb: add [rax], al; add [rax], al; add [rax-0x1], bh; ret; 
0x0000000045d13a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x1c; syscall; 
0x0000000045c39a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x20; syscall; 
0x00000000484efa: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0x66; syscall; 
0x0000000045d10a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xa; syscall; 
0x0000000045d0da: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov eax, 0xb; syscall; 
0x000000004a392a: add [rax], al; add [rax], al; add [rax-0x5e1f00d], dl; mov rax, [rdi+0x90]; ret; 
0x0000000040aedb: add [rax], al; add [rax], al; add [rax-0x66], bh; ret; 
0x0000000040aeeb: add [rax], al; add [rax], al; add [rax-0x67], bh; ret; 
0x0000000040aebb: add [rax], al; add [rax], al; add [rax-0x69], bh; ret; 
0x0000000040d7db: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9bd77; ret; 
0x0000000040d7bb: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9bd80; ret; 
0x0000000040d7ab: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9bd84; ret; 
0x0000000040d79b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9bd8c; ret; 
0x0000000040d7cb: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9bd8e; ret; 
0x0000000040d78b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9bd8f; ret; 
0x0000000040d81b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9bdba; ret; 
0x0000000040d77b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9bdcc; ret; 
0x0000000040d80b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9bdd1; ret; 
0x0000000040d7fb: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9bde8; ret; 
0x0000000040d7eb: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9bdff; ret; 
0x0000000040cc9b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9c8b7; ret; 
0x0000000040cc7b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9c8c0; ret; 
0x0000000040cc6b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9c8c4; ret; 
0x0000000040cc5b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9c8cc; ret; 
0x0000000040cc8b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9c8ce; ret; 
0x0000000040cc4b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9c8cf; ret; 
0x0000000040ccdb: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9c8fa; ret; 
0x0000000040cc3b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9c90c; ret; 
0x0000000040cccb: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9c911; ret; 
0x0000000040ccbb: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9c928; ret; 
0x0000000040ccab: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9c93f; ret; 
0x0000000040c15b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9d3f7; ret; 
0x0000000040c13b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9d400; ret; 
0x0000000040c12b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9d404; ret; 
0x0000000040c11b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9d40c; ret; 
0x0000000040c14b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9d40e; ret; 
0x0000000040c10b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9d40f; ret; 
0x0000000040c19b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9d43a; ret; 
0x0000000040c0fb: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9d44c; ret; 
0x0000000040c18b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9d451; ret; 
0x0000000040c17b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9d468; ret; 
0x0000000040c16b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9d47f; ret; 
0x0000000040b55b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9e014; ret; 
0x0000000040b54b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9e01c; ret; 
0x0000000040b53b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9e023; ret; 
0x0000000040b52b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9e02e; ret; 
0x0000000040b51b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9e037; ret; 
0x0000000040b4fb: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9e040; ret; 
0x0000000040b4eb: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9e044; ret; 
0x0000000040b4db: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9e04c; ret; 
0x0000000040b4cb: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9e04f; ret; 
0x0000000040b4ab: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9e077; ret; 
0x0000000040b4bb: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0x9e08c; ret; 
0x0000000040b50b: add [rax], al; add [rax], al; add [rax-0x73], cl; add eax, 0xc02d8; ret; 
0x0000000040aecb: add [rax], al; add [rax], al; add [rax-0x76], bh; ret; 
0x0000000045fb1b: add [rax], al; add [rax], al; add [rax-0x77], cl; ja short 0x000000000045fb44; ret; 
0x0000000040a00b: add [rax], al; add [rax], al; add [rax-0x77], cl; ret far; 
0x0000000041325b: add [rax], al; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000427888: add [rax], al; add [rax], al; add [rax], al; ret; 
0x00000000408a4b: add [rax], al; add [rax], al; add [rbx+0x2890447], cl; xor eax, eax; ret; 
0x00000000408a5b: add [rax], al; add [rax], al; add [rbx+0x2890847], cl; xor eax, eax; ret; 
0x00000000408a6b: add [rax], al; add [rax], al; add [rbx+0x2890c47], cl; xor eax, eax; ret; 
0x00000000408a7b: add [rax], al; add [rax], al; add [rbx+0x2891047], cl; xor eax, eax; ret; 
0x00000000408a8b: add [rax], al; add [rax], al; add [rbx+0x2891447], cl; xor eax, eax; ret; 
0x00000000408a9b: add [rax], al; add [rax], al; add [rbx+0x2891847], cl; xor eax, eax; ret; 
0x00000000408aab: add [rax], al; add [rax], al; add [rbx+0x2891c47], cl; xor eax, eax; ret; 
0x00000000408abb: add [rax], al; add [rax], al; add [rbx+0x2892047], cl; xor eax, eax; ret; 
0x0000000045540b: add [rax], al; add [rax], al; add [rbx+0x477880e], cl; mov [rdi], ecx; ret; 
0x000000004a346b: add [rax], al; add [rax], al; add [rbx-0x70f0ee06], al; ret; 
0x00000000458ecb: add [rax], al; add [rax], al; add [rcx+0x1], cl; ret; 
0x00000000452bfb: add [rax], al; add [rax], al; add [rcx+0x3518911], cl; ret; 
0x0000000049acdb: add [rax], al; add [rax], al; add [rcx+0x39], al; ret; 
0x00000000430c1b: add [rax], al; add [rax], al; add [rcx+rcx*4-0x1a], cl; call rax; 
0x0000000048354b: add [rax], al; add [rax], al; add [rcx+rcx*4-0x40], cl; vzeroupper; ret; 
0x00000000452ba9: add [rax], al; add [rax], al; add [rsi-0x70], ah; mov [rcx], dx; ret; 
0x000000004563c9: add [rax], al; add [rax], al; add [rsi-0x70], ah; mov [rdi], dx; ret; 
0x00000000430e1b: add [rax], al; add [rax], al; add al, ch; ret far; 
0x0000000048250b: add [rax], al; add [rax], al; add bl, ch; ret far; 
0x0000000045649b: add [rax], al; add [rax], al; add bl, dh; movq [rdi-0x1], mm0; ret; 
0x000000004564ab: add [rax], al; add [rax], al; add bl, dh; movq [rdi], mm0; ret; 
0x000000004841ec: add [rax], al; add [rax], al; add rax, 0x3; ret; 
0x0000000042eb5c: add [rax], al; add [rax], al; add rsp, 0x18; ret; 
0x000000004916d7: add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x000000004391fc: add [rax], al; add [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x0000000043920c: add [rax], al; add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x0000000043921c: add [rax], al; add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x0000000049a89c: add [rax], al; add [rax], al; call qword ptr [rbx]; 
0x00000000499584: add [rax], al; add [rax], al; call r13; 
0x0000000048f68e: add [rax], al; add [rax], al; cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x0000000045be1c: add [rax], al; add [rax], al; endbr64; mov eax, 0x18; syscall; 
0x0000000049ed1c: add [rax], al; add [rax], al; endbr64; mov eax, 0x26; syscall; 
0x0000000045f8fc: add [rax], al; add [rax], al; endbr64; mov eax, 0x63; syscall; 
0x0000000045c1dc: add [rax], al; add [rax], al; endbr64; mov eax, 0x8; syscall; 
0x0000000048511c: add [rax], al; add [rax], al; endbr64; mov eax, 0xc; syscall; 
0x00000000426eac: add [rax], al; add [rax], al; endbr64; mov eax, 0xffffffff; ret; 
0x0000000042887c: add [rax], al; add [rax], al; endbr64; mov rax, [rdi+0x68]; ret; 
0x000000004a399c: add [rax], al; add [rax], al; endbr64; mov rax, [rdi+0x98]; ret; 
0x0000000046d1fc: add [rax], al; add [rax], al; endbr64; mov rax, [rip+0x77c45]; ret; 
0x0000000046384c: add [rax], al; add [rax], al; endbr64; mov rax, [rip+0x821ad]; ret; 
0x0000000042885c: add [rax], al; add [rax], al; endbr64; mov rax, [rip+0xb98f5]; ret; 
0x0000000042888c: add [rax], al; add [rax], al; endbr64; mov rax, rdi; ret; 
0x000000004278ac: add [rax], al; add [rax], al; endbr64; xor eax, eax; ret; 
0x0000000045737c: add [rax], al; add [rax], al; lea rax, [rdi+0x2]; ret; 
0x0000000045738c: add [rax], al; add [rax], al; lea rax, [rdi+0x3]; ret; 
0x0000000045739c: add [rax], al; add [rax], al; lea rax, [rdi+0x4]; ret; 
0x000000004573ac: add [rax], al; add [rax], al; lea rax, [rdi+0x5]; ret; 
0x000000004573bc: add [rax], al; add [rax], al; lea rax, [rdi+0x6]; ret; 
0x000000004573cc: add [rax], al; add [rax], al; lea rax, [rdi+0x8]; ret; 
0x000000004573dc: add [rax], al; add [rax], al; lea rax, [rdi+0x9]; ret; 
0x000000004573ec: add [rax], al; add [rax], al; lea rax, [rdi+0xa]; ret; 
0x000000004573fc: add [rax], al; add [rax], al; lea rax, [rdi+0xb]; ret; 
0x0000000045740c: add [rax], al; add [rax], al; lea rax, [rdi+0xc]; ret; 
0x0000000045741c: add [rax], al; add [rax], al; lea rax, [rdi+0xd]; ret; 
0x0000000045742c: add [rax], al; add [rax], al; lea rax, [rdi+0xe]; ret; 
0x0000000040d7dc: add [rax], al; add [rax], al; lea rax, [rip+0x9bd77]; ret; 
0x0000000040d7bc: add [rax], al; add [rax], al; lea rax, [rip+0x9bd80]; ret; 
0x0000000040d7ac: add [rax], al; add [rax], al; lea rax, [rip+0x9bd84]; ret; 
0x0000000040d79c: add [rax], al; add [rax], al; lea rax, [rip+0x9bd8c]; ret; 
0x0000000040d7cc: add [rax], al; add [rax], al; lea rax, [rip+0x9bd8e]; ret; 
0x0000000040d78c: add [rax], al; add [rax], al; lea rax, [rip+0x9bd8f]; ret; 
0x0000000040d764: add [rax], al; add [rax], al; lea rax, [rip+0x9bdb0]; ret; 
0x0000000040d81c: add [rax], al; add [rax], al; lea rax, [rip+0x9bdba]; ret; 
0x0000000040d77c: add [rax], al; add [rax], al; lea rax, [rip+0x9bdcc]; ret; 
0x0000000040d80c: add [rax], al; add [rax], al; lea rax, [rip+0x9bdd1]; ret; 
0x0000000040d7fc: add [rax], al; add [rax], al; lea rax, [rip+0x9bde8]; ret; 
0x0000000040d7ec: add [rax], al; add [rax], al; lea rax, [rip+0x9bdff]; ret; 
0x0000000040cc9c: add [rax], al; add [rax], al; lea rax, [rip+0x9c8b7]; ret; 
0x0000000040cc7c: add [rax], al; add [rax], al; lea rax, [rip+0x9c8c0]; ret; 
0x0000000040cc6c: add [rax], al; add [rax], al; lea rax, [rip+0x9c8c4]; ret; 
0x0000000040cc5c: add [rax], al; add [rax], al; lea rax, [rip+0x9c8cc]; ret; 
0x0000000040cc8c: add [rax], al; add [rax], al; lea rax, [rip+0x9c8ce]; ret; 
0x0000000040cc4c: add [rax], al; add [rax], al; lea rax, [rip+0x9c8cf]; ret; 
0x0000000040cc24: add [rax], al; add [rax], al; lea rax, [rip+0x9c8f0]; ret; 
0x0000000040ccdc: add [rax], al; add [rax], al; lea rax, [rip+0x9c8fa]; ret; 
0x0000000040cc3c: add [rax], al; add [rax], al; lea rax, [rip+0x9c90c]; ret; 
0x0000000040cccc: add [rax], al; add [rax], al; lea rax, [rip+0x9c911]; ret; 
0x0000000040ccbc: add [rax], al; add [rax], al; lea rax, [rip+0x9c928]; ret; 
0x0000000040ccac: add [rax], al; add [rax], al; lea rax, [rip+0x9c93f]; ret; 
0x0000000040c15c: add [rax], al; add [rax], al; lea rax, [rip+0x9d3f7]; ret; 
0x0000000040c13c: add [rax], al; add [rax], al; lea rax, [rip+0x9d400]; ret; 
0x0000000040c12c: add [rax], al; add [rax], al; lea rax, [rip+0x9d404]; ret; 
0x0000000040c11c: add [rax], al; add [rax], al; lea rax, [rip+0x9d40c]; ret; 
0x0000000040c14c: add [rax], al; add [rax], al; lea rax, [rip+0x9d40e]; ret; 
0x0000000040c10c: add [rax], al; add [rax], al; lea rax, [rip+0x9d40f]; ret; 
0x0000000040c0e4: add [rax], al; add [rax], al; lea rax, [rip+0x9d430]; ret; 
0x0000000040c19c: add [rax], al; add [rax], al; lea rax, [rip+0x9d43a]; ret; 
0x0000000040c0fc: add [rax], al; add [rax], al; lea rax, [rip+0x9d44c]; ret; 
0x0000000040c18c: add [rax], al; add [rax], al; lea rax, [rip+0x9d451]; ret; 
0x0000000040c17c: add [rax], al; add [rax], al; lea rax, [rip+0x9d468]; ret; 
0x0000000040c16c: add [rax], al; add [rax], al; lea rax, [rip+0x9d47f]; ret; 
0x0000000040b55c: add [rax], al; add [rax], al; lea rax, [rip+0x9e014]; ret; 
0x0000000040b54c: add [rax], al; add [rax], al; lea rax, [rip+0x9e01c]; ret; 
0x0000000040b53c: add [rax], al; add [rax], al; lea rax, [rip+0x9e023]; ret; 
0x0000000040b52c: add [rax], al; add [rax], al; lea rax, [rip+0x9e02e]; ret; 
0x0000000040b51c: add [rax], al; add [rax], al; lea rax, [rip+0x9e037]; ret; 
0x0000000040b4fc: add [rax], al; add [rax], al; lea rax, [rip+0x9e040]; ret; 
0x0000000040b4ec: add [rax], al; add [rax], al; lea rax, [rip+0x9e044]; ret; 
0x0000000040b4dc: add [rax], al; add [rax], al; lea rax, [rip+0x9e04c]; ret; 
0x0000000040b4cc: add [rax], al; add [rax], al; lea rax, [rip+0x9e04f]; ret; 
0x0000000040b4ac: add [rax], al; add [rax], al; lea rax, [rip+0x9e077]; ret; 
0x0000000040b4bc: add [rax], al; add [rax], al; lea rax, [rip+0x9e08c]; ret; 
0x0000000040b50c: add [rax], al; add [rax], al; lea rax, [rip+0xc02d8]; ret; 
0x0000000040203c: add [rax], al; add [rax], al; leave; ret; 
0x00000000452bfc: add [rax], al; add [rax], al; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x00000000452bec: add [rax], al; add [rax], al; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x00000000452bcc: add [rax], al; add [rax], al; mov [rcx], edx; ret; 
0x00000000452c5c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x00000000452c6c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x6], rdx; ret; 
0x00000000452c3c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x00000000452c7c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x7], rdx; ret; 
0x00000000452c2c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x00000000452c4c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x00000000452c8c: add [rax], al; add [rax], al; mov [rcx], rdx; mov [rcx+0x8], rdx; ret; 
0x00000000452c0c: add [rax], al; add [rax], al; mov [rcx], rdx; ret; 
0x0000000045fb1c: add [rax], al; add [rax], al; mov [rdi+0x20], rsi; ret; 
0x000000004a398c: add [rax], al; add [rax], al; mov [rdi+rsi*8], rdx; add rsp, 0x8; ret; 
0x0000000045641c: add [rax], al; add [rax], al; mov [rdi-0x1], rdx; ret; 
0x00000000456a0c: add [rax], al; add [rax], al; mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000004553cc: add [rax], al; add [rax], al; mov [rdi], dh; ret; 
0x0000000044f0cc: add [rax], al; add [rax], al; mov [rdi], dx; vzeroupper; ret; 
0x0000000045640c: add [rax], al; add [rax], al; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x0000000045647c: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x0000000045648c: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x6], rdx; ret; 
0x0000000045645c: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x0000000045644c: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x0000000045646c: add [rax], al; add [rax], al; mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x0000000045642c: add [rax], al; add [rax], al; mov [rdi], rdx; ret; 
0x000000004752b8: add [rax], al; add [rax], al; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x4f8], rsi; jmp rax; 
0x0000000047b75f: add [rax], al; add [rax], al; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x000000004560cc: add [rax], al; add [rax], al; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000049e80d: add [rax], al; add [rax], al; mov eax, 0x1; ret; 
0x0000000049e980: add [rax], al; add [rax], al; mov eax, 0x2; ret; 
0x0000000040aecc: add [rax], al; add [rax], al; mov eax, 0xffffff8a; ret; 
0x0000000040aebc: add [rax], al; add [rax], al; mov eax, 0xffffff97; ret; 
0x0000000040aeec: add [rax], al; add [rax], al; mov eax, 0xffffff99; ret; 
0x0000000040aedc: add [rax], al; add [rax], al; mov eax, 0xffffff9a; ret; 
0x00000000422bdc: add [rax], al; add [rax], al; mov eax, 0xffffffff; ret; 
0x000000004430dc: add [rax], al; add [rax], al; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000004277d0: add [rax], al; add [rax], al; mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000047b754: add [rax], al; add [rax], al; mov qword ptr [rbp-0x4c8], 0x0; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x0000000042896b: add [rax], al; add [rax], al; mov qword ptr [rip+0xbc33e], 0x0; ret; 
0x0000000048421c: add [rax], al; add [rax], al; mov rax, 0x2; ret; 
0x0000000048422c: add [rax], al; add [rax], al; mov rax, 0x3; ret; 
0x0000000048423c: add [rax], al; add [rax], al; mov rax, 0x4; ret; 
0x0000000040a77c: add [rax], al; add [rax], al; mov rax, 0x4dec40; pop rbp; ret; 
0x0000000040a4dc: add [rax], al; add [rax], al; mov rax, 0x4dec40; ret; 
0x0000000040a79c: add [rax], al; add [rax], al; mov rax, 0x4dec80; pop rbp; ret; 
0x0000000040a4cc: add [rax], al; add [rax], al; mov rax, 0x4dec80; ret; 
0x0000000040a78c: add [rax], al; add [rax], al; mov rax, 0x4decc0; pop rbp; ret; 
0x0000000040a7dc: add [rax], al; add [rax], al; mov rax, 0x4ded00; pop rbp; ret; 
0x0000000040a7cc: add [rax], al; add [rax], al; mov rax, 0x4ded40; pop rbp; ret; 
0x0000000040a47c: add [rax], al; add [rax], al; mov rax, 0x4ded40; ret; 
0x0000000040a7ec: add [rax], al; add [rax], al; mov rax, 0x4ded80; pop rbp; ret; 
0x0000000040a7bc: add [rax], al; add [rax], al; mov rax, 0x4dedc0; pop rbp; ret; 
0x0000000040a4ec: add [rax], al; add [rax], al; mov rax, 0x4dee80; ret; 
0x0000000040a46c: add [rax], al; add [rax], al; mov rax, 0x4deec0; ret; 
0x0000000040a48c: add [rax], al; add [rax], al; mov rax, 0x4e11a0; ret; 
0x0000000040a7ac: add [rax], al; add [rax], al; mov rax, 0x4e11e0; pop rbp; ret; 
0x0000000040a4fc: add [rax], al; add [rax], al; mov rax, 0x4e1260; ret; 
0x0000000040a4bc: add [rax], al; add [rax], al; mov rax, 0x4e12e0; ret; 
0x0000000048424c: add [rax], al; add [rax], al; mov rax, 0x5; ret; 
0x0000000048425c: add [rax], al; add [rax], al; mov rax, 0x6; ret; 
0x0000000048426c: add [rax], al; add [rax], al; mov rax, 0x7; ret; 
0x0000000047cab6: add [rax], al; add [rax], al; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000492335: add [rax], al; add [rax], al; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000048354c: add [rax], al; add [rax], al; mov rax, r8; vzeroupper; ret; 
0x00000000442f1c: add [rax], al; add [rax], al; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x0000000042ff9c: add [rax], al; add [rax], al; mov rsi, [rsp+0x28]; mov rdi, r12; call rax; 
0x00000000430c1c: add [rax], al; add [rax], al; mov rsi, r12; call rax; 
0x0000000045649c: add [rax], al; add [rax], al; movdqu [rdi-0x1], xmm0; ret; 
0x000000004564ac: add [rax], al; add [rax], al; movdqu [rdi], xmm0; ret; 
0x00000000481555: add [rax], al; add [rax], al; movups [rax+0x40], xmm0; pop rbx; ret; 
0x00000000426960: add [rax], al; add [rax], al; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000490cd9: add [rax], al; add [rax], al; movups [rbx], xmm0; pop rbx; ret; 
0x0000000045a7ec: add [rax], al; add [rax], al; movzx eax, cl; pop rbx; ret; 
0x0000000044322c: add [rax], al; add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x000000004431bc: add [rax], al; add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x00000000452b98: add [rax], al; add [rax], al; nop [rax]; mov [rcx], dl; ret; 
0x000000004563b8: add [rax], al; add [rax], al; nop [rax]; mov [rdi], dl; ret; 
0x0000000046ff98: add [rax], al; add [rax], al; nop [rax]; mov rax, 0xf; syscall; 
0x000000004560a8: add [rax], al; add [rax], al; nop [rax]; ret; 
0x00000000459039: add [rax], al; add [rax], al; nop [rax]; xor eax, eax; ret; 
0x0000000045736b: add [rax], al; add [rax], al; nop; lea rax, [rdi+0x1]; ret; 
0x0000000045735b: add [rax], al; add [rax], al; nop; lea rax, [rdi]; ret; 
0x000000004563db: add [rax], al; add [rax], al; nop; mov [rdi-0x1], edx; ret; 
0x000000004563eb: add [rax], al; add [rax], al; nop; mov [rdi], edx; ret; 
0x0000000048420b: add [rax], al; add [rax], al; nop; mov rax, 0x1; ret; 
0x0000000045ae84: add [rax], al; add [rax], al; pop rbp; ret; 
0x0000000045a7a7: add [rax], al; add [rax], al; pop rbx; cmove rax, rdx; ret; 
0x0000000048fa4a: add [rax], al; add [rax], al; pop rbx; or dword ptr [rip+0x536f2], 0x1; ret; 
0x0000000046da3a: add [rax], al; add [rax], al; pop rbx; ret; 
0x000000004017db: add [rax], al; add [rax], al; pop rdx; ret; 
0x0000000040488c: add [rax], al; add [rax], al; ret; 
0x0000000040100b: add [rax], al; add [rax], al; test rax, rax; je short 0x0000000000401016; call rax; 
0x00000000452baa: add [rax], al; add [rax], al; xchg ax, ax; mov [rcx], dx; ret; 
0x000000004563ca: add [rax], al; add [rax], al; xchg ax, ax; mov [rdi], dx; ret; 
0x0000000040306a: add [rax], al; add [rax], al; xor eax, eax; pop rbx; ret; 
0x0000000040256c: add [rax], al; add [rax], al; xor eax, eax; ret; 
0x0000000041123c: add [rax], al; add [rax], al; xor edi, edi; mov eax, edx; syscall; 
0x000000004233b4: add [rax], al; add [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x0000000045719c: add [rax], al; add [rax], al; xor rax, rax; ret; 
0x0000000045be88: add [rax], al; add [rbp+0x14], dh; add rsp, 0x28; ret; 
0x0000000040534a: add [rax], al; add [rbp+0x1d], dh; add rsp, 0x10; pop rbp; ret; 
0x00000000492712: add [rax], al; add [rbp+0x1e], dh; add rsp, 0x38; ret; 
0x0000000045aee0: add [rax], al; add [rbp+0x1f], dh; add rsp, 0x20; pop rbx; ret; 
0x000000004850ea: add [rax], al; add [rbp+0x25], dh; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000041e1a9: add [rax], al; add [rbp+0x26], dh; mov eax, r8d; add rsp, 0x118; ret; 
0x000000004919c6: add [rax], al; add [rbp+0x28], dh; add rsp, 0x38; ret; 
0x00000000491a92: add [rax], al; add [rbp+0x2d], dh; add rsp, 0x58; ret; 
0x000000004a1981: add [rax], al; add [rbp+0x39], cl; out 0x77, eax; ret far; 
0x00000000491c04: add [rax], al; add [rbp+0x3b], dh; add rsp, 0x68; ret; 
0x00000000497c2b: add [rax], al; add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x00000000480e36: add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x0000000047013d: add [rax], al; add [rbp+0x42], dh; mov eax, r9d; add rsp, 0x148; ret; 
0x0000000045cbb8: add [rax], al; add [rbp+0x46], dh; add rsp, 0x68; ret; 
0x0000000045cc47: add [rax], al; add [rbp+0x47], dh; add rsp, 0x18; ret; 
0x0000000045ccff: add [rax], al; add [rbp+0x47], dh; add rsp, 0x58; ret; 
0x0000000045cd9d: add [rax], al; add [rbp+0x49], dh; add rsp, 0x58; ret; 
0x00000000408b09: add [rax], al; add [rbp+0x5], dh; add rsp, 0x18; ret; 
0x0000000045cfdb: add [rax], al; add [rbp+0x5], dh; add rsp, 0x28; ret; 
0x000000004985a7: add [rax], al; add [rbp+0x5], dh; add rsp, 0x38; ret; 
0x00000000404fe7: add [rax], al; add [rbp+0x5], dh; add rsp, 0x48; ret; 
0x0000000042d669: add [rax], al; add [rbp+0x6], dh; add rsp, 0x10; pop rbp; ret; 
0x000000004918cb: add [rax], al; add [rbp+0x6], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000041f945: add [rax], al; add [rbp+0x8], dh; add rsp, 0xd8; ret; 
0x00000000485030: add [rax], al; add [rbp+0x8], dh; movzx eax, al; add rsp, 0x58; ret; 
0x0000000045f82c: add [rax], al; add [rbp-0x3dbbf040], al; ret; 
0x0000000045c149: add [rax], al; add [rbp-0x47ef8a40], al; add [rax], eax; add [rax], al; syscall; 
0x0000000045c319: add [rax], al; add [rbp-0x47ef8a40], al; add eax, [rax]; add [rax], al; syscall; 
0x000000004389e8: add [rax], al; add [rbp-0x77], cl; ret far; 
0x00000000408a4d: add [rax], al; add [rbx+0x2890447], cl; xor eax, eax; ret; 
0x00000000408a5d: add [rax], al; add [rbx+0x2890847], cl; xor eax, eax; ret; 
0x00000000408a6d: add [rax], al; add [rbx+0x2890c47], cl; xor eax, eax; ret; 
0x00000000408a7d: add [rax], al; add [rbx+0x2891047], cl; xor eax, eax; ret; 
0x00000000408a8d: add [rax], al; add [rbx+0x2891447], cl; xor eax, eax; ret; 
0x00000000408a9d: add [rax], al; add [rbx+0x2891847], cl; xor eax, eax; ret; 
0x00000000408aad: add [rax], al; add [rbx+0x2891c47], cl; xor eax, eax; ret; 
0x00000000408abd: add [rax], al; add [rbx+0x2892047], cl; xor eax, eax; ret; 
0x000000004250ad: add [rax], al; add [rbx+0x31], bl; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x000000004560fd: add [rax], al; add [rbx+0x4568a0e], cl; mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x00000000456a4d: add [rax], al; add [rbx+0x477880e], cl; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x0000000045540d: add [rax], al; add [rbx+0x477880e], cl; mov [rdi], ecx; ret; 
0x0000000045a7a8: add [rax], al; add [rbx+0x48], bl; cmove eax, edx; ret; 
0x00000000424bf6: add [rax], al; add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000409076: add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x0000000045f780: add [rax], al; add [rbx+0x5d], bl; ret; 
0x000000004a32c7: add [rax], al; add [rbx+0x63490843], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x00000000405a8e: add [rax], al; add [rbx+0x63491053], cl; adc al, 0x97; add rdx, r15; notrack jmp rdx; 
0x00000000405ada: add [rax], al; add [rbx+0x63492043], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x0000000042d1a9: add [rax], al; add [rbx+0xb562d2d], al; add [rcx], al; pop rbp; ret; 
0x0000000040aac3: add [rax], al; add [rbx+0xd7718fa], al; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000044306d: add [rax], al; add [rbx+0xe8b0156], cl; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x00000000442ffd: add [rax], al; add [rbx+0xe8b0256], cl; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x00000000442f8d: add [rax], al; add [rbx+0xe8b0356], cl; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x0000000045a87c: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x10; pop rbx; ret; 
0x0000000045a875: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x20; pop rbx; ret; 
0x0000000045a86d: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x30; pop rbx; ret; 
0x0000000045a867: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x40; pop rbx; ret; 
0x0000000045a88a: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x80; pop rbx; ret; 
0x0000000045a883: add [rax], al; add [rbx-0x3d], bl; mov eax, 0x8; pop rbx; ret; 
0x0000000047cb9e: add [rax], al; add [rbx-0x4ff43], al; call qword ptr [rax]; 
0x000000004754fc: add [rax], al; add [rbx-0x67b7df18], al; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004a346d: add [rax], al; add [rbx-0x70f0ee06], al; ret; 
0x0000000044e8b1: add [rax], al; add [rbx-0x7cf0fb06], al; ret; 
0x0000000048524d: add [rax], al; add [rcx+0x104e23c1], cl; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000042105a: add [rax], al; add [rcx+0x1], cl; ret; 
0x0000000040a3bd: add [rax], al; add [rcx+0x28ff], al; jne 0x000000000040a4a0; mov rax, 0x4decc0; ret; 
0x00000000452bfd: add [rax], al; add [rcx+0x3518911], cl; ret; 
0x0000000048e4e5: add [rax], al; add [rcx+0x39], al; ret; 
0x00000000496089: add [rax], al; add [rcx+0x39], cl; ret; 
0x0000000041e15c: add [rax], al; add [rcx+0x48050fc8], cl; mov edi, eax; mov eax, 0xba; syscall; 
0x000000004a528c: add [rax], al; add [rcx+0xf], al; mov bh, 0x5d; and [rsi-0x9], ah; ret; 
0x0000000045eafb: add [rax], al; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x000000004a63f4: add [rax], al; add [rcx+rcx*4-0x11], cl; call rbx; 
0x0000000042f7b7: add [rax], al; add [rcx+rcx*4-0x11], cl; mov eax, 0xca; syscall; 
0x0000000048027a: add [rax], al; add [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000042398b: add [rax], al; add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x000000004243be: add [rax], al; add [rcx+rcx*4-0x16], cl; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x0000000042e224: add [rax], al; add [rcx+rcx*4-0x19], cl; mov eax, 0xca; syscall; 
0x000000004219cd: add [rax], al; add [rcx+rcx*4-0x1], cl; call qword ptr [r13+0x80]; 
0x00000000421bc3: add [rax], al; add [rcx+rcx*4-0x1], cl; call qword ptr [rbp+0x80]; 
0x000000004303f8: add [rax], al; add [rcx+rcx*4-0x1], cl; mov eax, 0xca; syscall; 
0x00000000430c1d: add [rax], al; add [rcx+rcx*4-0x1a], cl; call rax; 
0x00000000420911: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000047fbdb: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000420b25: add [rax], al; add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000422f82: add [rax], al; add [rcx+rcx*4-0x38], al; syscall; 
0x0000000047020e: add [rax], al; add [rcx+rcx*4-0x3a], cl; mov eax, 0xe; syscall; 
0x0000000046d362: add [rax], al; add [rcx+rcx*4-0x40], al; pop rbp; pop r12; ret; 
0x0000000041fd62: add [rax], al; add [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x0000000042c57e: add [rax], al; add [rcx+rcx*4-0x40], cl; ret; 
0x00000000484600: add [rax], al; add [rcx+rcx*4-0x40], cl; shr rax, 0x2; vzeroupper; ret; 
0x0000000048348d: add [rax], al; add [rcx+rcx*4-0x40], cl; vzeroupper; ret; 
0x0000000042455a: add [rax], al; add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000048f0d5: add [rax], al; add [rcx+rdi-0x40], cl; ja short 0x000000000048f0e8; add rsp, 0x8; ret; 
0x0000000045d18f: add [rax], al; add [rcx+rsi+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x0000000049473b: add [rax], al; add [rcx-0x1177b], cl; jmp far fword ptr [rcx]; 
0x00000000423b4e: add [rax], al; add [rcx-0x39], cl; mov al, 0x3b; add [rax-0x39], r9b; ret; 
0x000000004607ba: add [rax], al; add [rcx-0x48], al; add [rax], al; add [rax+0x1], cl; ret far; 
0x0000000049eeed: add [rax], al; add [rcx-0x4cf7b], cl; jmp qword ptr [rsi+0x2e]; 
0x0000000045e068: add [rax], al; add [rcx-0x75], cl; jge short 0x000000000045e06f; call rbx; 
0x000000004677aa: add [rax], al; add [rcx-0x77], al; ret; 
0x0000000047e0cd: add [rax], al; add [rcx-0x77], cl; ret; 
0x00000000465c4d: add [rax], al; add [rcx-0x7d], cl; rol byte ptr [rcx], 0x89; xor [rax-0x7d], ecx; ret; 
0x0000000046e8b2: add [rax], al; add [rcx], ch; ret far; 
0x0000000040b32f: add [rax], al; add [rcx], ch; ret; 
0x00000000415cda: add [rax], al; add [rcx], dh; call qword ptr [rax+0x480ab60f]; 
0x00000000481aa7: add [rax], al; add [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x0000000042c18e: add [rax], al; add [rcx], dh; ror byte ptr [rax-0x73], 0x3c; ret; 
0x00000000423fd1: add [rax], al; add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x0000000049931d: add [rax], al; add [rcx], dh; shr bl, 0xcf; nop [rax]; call rax; 
0x000000004a3827: add [rax], al; add [rdi+0x1], bh; call rax; 
0x000000004407f8: add [rax], al; add [rdi+0x63], cl; or al, 0x8b; add r9, r11; notrack jmp r9; 
0x0000000045de06: add [rax], al; add [rdi+rbp+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x00000000481556: add [rax], al; add [rdi], cl; adc [rax+0x40], eax; pop rbx; ret; 
0x00000000408808: add [rax], al; add [rdi], cl; adc [rax+0xc0], esp; pop rbx; ret; 
0x00000000426961: add [rax], al; add [rdi], cl; adc [rbx+0x48], eax; pop rbx; ret; 
0x00000000490cda: add [rax], al; add [rdi], cl; adc [rbx], eax; pop rbx; ret; 
0x00000000430400: add [rax], al; add [rdi], cl; add eax, 0xfffebee9; jmp qword ptr [rsi+0xf]; 
0x0000000042cf30: add [rax], al; add [rdi], cl; add eax, 0xffff01e9; jmp qword ptr [rsi+0xf]; 
0x000000004261ea: add [rax], al; add [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x0000000042a668: add [rax], al; add [rdi], cl; add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x000000004431bd: add [rax], al; add [rdi], cl; mov bh, 0x16; mov [rdi], dx; ret; 
0x0000000044322d: add [rax], al; add [rdi], cl; mov dh, 0x16; mov [rdi], dl; ret; 
0x00000000415ec5: add [rax], al; add [rdi], cl; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x0000000041f3cd: add [rax], al; add [rdi], cl; mov dh, 0x4b; add [rax-0x7d], ecx; ret; 
0x0000000045a7ed: add [rax], al; add [rdi], cl; mov dh, 0xc1; pop rbx; ret; 
0x0000000043921d: add [rax], al; add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x0000000043920d: add [rax], al; add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x000000004391fd: add [rax], al; add [rdi], cl; mov esp, 0xf80148c0; ret; 
0x0000000041e145: add [rax], al; add [rdi], cl; sub [rsp+0xe0], eax; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000041e14d: add [rax], al; add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x00000000470235: add [rax], al; add [rdi], cl; test [rax+0x48000000], ebx; add esp, 0x98; ret; 
0x00000000402af6: add [rax], al; add [rdi], cl; test [rax+0x48000000], edx; add esp, 0xc8; ret; 
0x0000000045c263: add [rax], al; add [rdi], cl; test [rcx+0x48000000], ebx; add esp, 0x68; ret; 
0x00000000480275: add [rax], al; add [rdx+0x10], bh; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000425146: add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x00000000422518: add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000040a872: add [rax], al; add [rdx-0x21], bh; cmovne eax, edx; ret; 
0x00000000429729: add [rax], al; add [rdx], al; jbe short 0x0000000000429730; ret; 
0x0000000045cd78: add [rax], al; add [rip+0x410000], dil; je short 0x000000000045cdb0; mov eax, 0x101; syscall; 
0x0000000042978a: add [rax], al; add [rsi+0x1], dh; ret; 
0x0000000046f136: add [rax], al; add [rsi+0x63], cl; add al, 0x8a; add r8, rdx; notrack jmp r8; 
0x0000000042933c: add [rax], al; add [rsi+0x80], bh; mov eax, 0xca; syscall; 
0x000000004a7d3a: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x3d232]; syscall; 
0x00000000497dba: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x4d246]; syscall; 
0x00000000497b36: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x4d4c6]; syscall; 
0x00000000495ab2: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x4f542]; syscall; 
0x00000000495972: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x4f682]; syscall; 
0x000000004718fa: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x73672]; syscall; 
0x00000000471835: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x73737]; syscall; 
0x00000000471693: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x738d9]; syscall; 
0x000000004715b9: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x739b3]; syscall; 
0x00000000463dea: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x81c12]; syscall; 
0x00000000463c7e: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x81d7e]; syscall; 
0x00000000463b5e: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x81e9e]; syscall; 
0x0000000045b416: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x8a5e6]; syscall; 
0x00000000430a96: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb1d36]; syscall; 
0x0000000042de96: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4936]; syscall; 
0x0000000042de36: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4996]; syscall; 
0x0000000042da76: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4d56]; syscall; 
0x0000000042d816: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4fb6]; syscall; 
0x0000000042d23e: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb558e]; syscall; 
0x0000000042d206: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb55c6]; syscall; 
0x0000000042edf6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb5f26]; syscall; 
0x0000000042e3aa: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb6962]; syscall; 
0x0000000042a507: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xba805]; syscall; 
0x0000000042a4d6: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xba846]; syscall; 
0x0000000042a256: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbaac6]; syscall; 
0x00000000429d32: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbafea]; syscall; 
0x00000000428948: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc354]; syscall; 
0x00000000428388: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc914]; syscall; 
0x0000000042801c: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbcc80]; syscall; 
0x00000000427cda: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbcfc2]; syscall; 
0x00000000426774: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe528]; syscall; 
0x000000004264d4: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe7c8]; syscall; 
0x00000000426180: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbeb1c]; syscall; 
0x00000000420186: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc5876]; syscall; 
0x0000000041f135: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc6767]; syscall; 
0x0000000041eff5: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc68a7]; syscall; 
0x0000000041edbe: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc6ade]; syscall; 
0x0000000041ed83: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc6b19]; syscall; 
0x0000000041ec9f: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc6bfd]; syscall; 
0x000000004156d3: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcf151]; syscall; 
0x00000000413d30: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd0abc]; syscall; 
0x00000000412bb1: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd1b93]; syscall; 
0x00000000412b83: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd1bc1]; syscall; 
0x00000000412a37: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd1d0d]; syscall; 
0x000000004012cf: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xe356d]; syscall; 
0x0000000040143e: add [rax], al; add [rsi+0x81], bh; mov eax, 0xca; syscall; 
0x0000000042e37f: add [rax], al; add [rsi+0x81], bh; mov eax, ebx; syscall; 
0x0000000042e21f: add [rax], al; add [rsi+0x81], bh; mov rdi, r12; mov eax, 0xca; syscall; 
0x0000000042f7b2: add [rax], al; add [rsi+0x81], bh; mov rdi, r13; mov eax, 0xca; syscall; 
0x000000004303f3: add [rax], al; add [rsi+0x81], bh; mov rdi, r15; mov eax, 0xca; syscall; 
0x0000000042b0b4: add [rax], al; add [rsi+0x81], bh; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000042f178: add [rax], al; add [rsi+0x81], bh; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000480e8d: add [rax], al; add [rsi-0x1], bh; call qword ptr [rax+0x18]; 
0x00000000426b1e: add [rax], al; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000042828c: add [rax], al; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x00000000452bab: add [rax], al; add [rsi-0x70], ah; mov [rcx], dx; ret; 
0x00000000452bdb: add [rax], al; add [rsi-0x70], ah; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000004563cb: add [rax], al; add [rsi-0x70], ah; mov [rdi], dx; ret; 
0x000000004563fb: add [rax], al; add [rsi-0x70], ah; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000004553db: add [rax], al; add [rsi-0x70], ah; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000042afe4: add [rax], al; add [rsi-0x77], ah; psubsw mm2, [rsi+rdi*8-0x1]; call qword ptr [rax+0x43d8d48]; 
0x0000000049b537: add [rax], al; add al, ch; and [rbp-0x4], eax; call qword ptr [rax-0x4c117]; 
0x0000000049f759: add [rax], al; add al, ch; call far fword ptr [rax]; 
0x0000000048a539: add [rax], al; add al, ch; jg short 0x000000000048a552; std; jmp qword ptr [rsi+0x66]; 
0x0000000048ed64: add [rax], al; add al, ch; push rsp; ret far; 
0x00000000426f15: add [rax], al; add al, ch; rep ret; 
0x000000004013ed: add [rax], al; add al, ch; ret far; 
0x000000004982bd: add [rax], al; add al, ch; sbb edi, [rbx-0x7]; dec dword ptr [rax-0x77]; ret; 
0x0000000049e8ff: add [rax], al; add bh, al; add al, [rdx]; sar bh, 0xff; ret; 
0x000000004a42a2: add [rax], al; add bh, bh; loopne 0x00000000004a430e; nop [rax+rax]; ret; 
0x000000004890c5: add [rax], al; add bh, dh; ret; 
0x0000000040a884: add [rax], al; add bl, al; mov eax, 0xffffffdf; ret; 
0x00000000484214: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x2; ret; 
0x00000000484224: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x3; ret; 
0x00000000484234: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x4; ret; 
0x00000000484244: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x5; ret; 
0x00000000484254: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x6; ret; 
0x00000000484264: add [rax], al; add bl, al; nop [rax+rax]; mov rax, 0x7; ret; 
0x0000000049c92d: add [rax], al; add bl, al; nop [rax]; xor eax, eax; ret; 
0x0000000047f6a8: add [rax], al; add bl, ch; ret far; 
0x000000004865de: add [rax], al; add bl, ch; ret; 
0x0000000042acfe: add [rax], al; add bl, ch; stosb [rdi]; nop [rax+rax]; call rax; 
0x0000000045a279: add [rax], al; add bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x0000000045649d: add [rax], al; add bl, dh; movq [rdi-0x1], mm0; ret; 
0x000000004564ad: add [rax], al; add bl, dh; movq [rdi], mm0; ret; 
0x0000000045be1d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x18; syscall; 
0x0000000049ed1d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x26; syscall; 
0x0000000045f8fd: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x63; syscall; 
0x0000000045c1dd: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0x8; syscall; 
0x0000000048511d: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xc; syscall; 
0x00000000426ead: add [rax], al; add bl, dh; nop edx, edi; mov eax, 0xffffffff; ret; 
0x0000000042887d: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rdi+0x68]; ret; 
0x000000004a399d: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rdi+0x98]; ret; 
0x0000000046d1fd: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rip+0x77c45]; ret; 
0x0000000046384d: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rip+0x821ad]; ret; 
0x0000000042885d: add [rax], al; add bl, dh; nop edx, edi; mov rax, [rip+0xb98f5]; ret; 
0x0000000042888d: add [rax], al; add bl, dh; nop edx, edi; mov rax, rdi; ret; 
0x000000004278ad: add [rax], al; add bl, dh; nop edx, edi; xor eax, eax; ret; 
0x00000000401bfd: add [rax], al; add cl, ch; ret far; 
0x00000000407577: add [rax], al; add cl, ch; ret; 
0x0000000040203d: add [rax], al; add cl, cl; ret; 
0x0000000042972a: add [rax], al; add dh, [rsi+0x1]; ret; 
0x00000000474666: add [rax], al; add dh, al; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x0000000047a27f: add [rax], al; add dh, al; test esp, ecx; idiv bh; jmp qword ptr [rax]; 
0x0000000049b9f7: add [rax], al; add dh, dh; add eax, 0x49f1f; jne short 0x000000000049ba08; ret; 
0x000000004841ee: add [rax], al; add rax, 0x3; ret; 
0x00000000482673: add [rax], al; add rax, rdi; add rax, rcx; ret; 
0x000000004829a0: add [rax], al; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000042da2f: add [rax], al; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x00000000408614: add [rax], al; add rsp, 0x18; pop rbx; pop r12; ret; 
0x00000000421f04: add [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000042eb5e: add [rax], al; add rsp, 0x18; ret; 
0x00000000403248: add [rax], al; add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x000000004228b1: add [rax], al; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000045bfe9: add [rax], al; add rsp, 0x68; pop rbp; pop r12; ret; 
0x0000000045c26a: add [rax], al; add rsp, 0x68; ret; 
0x000000004a0e10: add [rax], al; add rsp, 0x78; pop rbp; pop r12; ret; 
0x00000000402e6e: add [rax], al; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000407e89: add [rax], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004916d9: add [rax], al; add rsp, 0x8; ret; 
0x000000004a0b3d: add [rax], al; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000004115f0: add [rax], al; add rsp, 0x98; ret; 
0x00000000402afd: add [rax], al; add rsp, 0xc8; ret; 
0x0000000045a836: add [rax], al; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000043a8c1: add [rax], al; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000043b193: add [rax], al; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000043a8c6: add [rax], al; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000004391fe: add [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x0000000043920e: add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x0000000043921e: add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x00000000483160: add [rax], al; bsf rax, rdx; ret; 
0x00000000483e24: add [rax], al; bsf rax, rdx; shr rax, 0x2; ret; 
0x00000000482c48: add [rax], al; bsr rax, rax; add rax, rdi; ret; 
0x00000000482ce2: add [rax], al; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000049e98e: add [rax], al; bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x0000000049e81e: add [rax], al; bts rsi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x00000000425200: add [rax], al; call qword ptr [r14+0x80]; 
0x00000000480d59: add [rax], al; call qword ptr [rax+0x68]; 
0x0000000049a89e: add [rax], al; call qword ptr [rbx]; 
0x0000000045d1af: add [rax], al; call r12; 
0x00000000499586: add [rax], al; call r13; 
0x0000000046cf25: add [rax], al; call r15; 
0x0000000041ec37: add [rax], al; call rax; 
0x0000000041ec19: add [rax], al; call rdx; 
0x000000004763f7: add [rax], al; cdqe; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000045a7e2: add [rax], al; cmove rax, rcx; ret; 
0x00000000431cee: add [rax], al; cmove rax, rdx; ret; 
0x0000000040dbf0: add [rax], al; cmovne r12, rax; mov rax, r12; pop r12; ret; 
0x0000000042979f: add [rax], al; cmovne rax, rdx; mov [rip+0xbb58c], rax; ret; 
0x00000000430eee: add [rax], al; cmovne rax, rdx; ret; 
0x0000000040b673: add [rax], al; cmovns eax, edx; add rsp, 0x8; ret; 
0x000000004a435b: add [rax], al; cmp [rsi+0x8], rcx; ja short 0x00000000004a4365; sbb eax, eax; ret; 
0x000000004a4508: add [rax], al; cmp dil, 0x3; jne short 0x00000000004a4530; add rsp, 0x8; ret; 
0x00000000458ad8: add [rax], al; cmp eax, ecx; jne 0x0000000000458b95; xor eax, eax; ret; 
0x0000000040a3be: add [rax], al; cmp edi, 0x40000028; jne 0x000000000040a4a0; mov rax, 0x4decc0; ret; 
0x0000000040a3fe: add [rax], al; cmp edi, 0xc00000b7; jne 0x000000000040a4a0; mov rax, 0x4e11e0; ret; 
0x00000000480d39: add [rax], al; cmp qword ptr [rax+0x30], 0x0; je short 0x0000000000480d48; ret; 
0x00000000430e40: add [rax], al; cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x0000000048f690: add [rax], al; cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x0000000048f0d6: add [rax], al; cmp rax, r8; ja short 0x000000000048f0e8; add rsp, 0x8; ret; 
0x0000000045a4d3: add [rax], al; cmp rdx, rcx; jne short 0x000000000045a4bb; vzeroupper; ret; 
0x0000000045a696: add [rax], al; cmp rdx, rcx; jne short 0x000000000045a676; vzeroupper; ret; 
0x00000000426dee: add [rax], al; endbr64; cmp qword ptr [rdi+0x38], 0x0; je short 0x0000000000426e00; ret; 
0x000000004612fe: add [rax], al; endbr64; lea rax, [rip+0x81f55]; ret; 
0x0000000045be1e: add [rax], al; endbr64; mov eax, 0x18; syscall; 
0x0000000049ed1e: add [rax], al; endbr64; mov eax, 0x26; syscall; 
0x0000000045f8fe: add [rax], al; endbr64; mov eax, 0x63; syscall; 
0x0000000045c1de: add [rax], al; endbr64; mov eax, 0x8; syscall; 
0x0000000048511e: add [rax], al; endbr64; mov eax, 0xc; syscall; 
0x00000000426eae: add [rax], al; endbr64; mov eax, 0xffffffff; ret; 
0x0000000045f89e: add [rax], al; endbr64; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000045f8ce: add [rax], al; endbr64; mov r10, rcx; mov eax, 0x9d; syscall; 
0x00000000411ace: add [rax], al; endbr64; mov rax, 0xffffffffffffffc0; add rax, fs:[0x0]; ret; 
0x0000000046fdfe: add [rax], al; endbr64; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046fdde: add [rax], al; endbr64; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046fdbe: add [rax], al; endbr64; mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x0000000042881e: add [rax], al; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x000000004916ee: add [rax], al; endbr64; mov rax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x0000000042887e: add [rax], al; endbr64; mov rax, [rdi+0x68]; ret; 
0x000000004a399e: add [rax], al; endbr64; mov rax, [rdi+0x98]; ret; 
0x0000000046d1fe: add [rax], al; endbr64; mov rax, [rip+0x77c45]; ret; 
0x0000000046384e: add [rax], al; endbr64; mov rax, [rip+0x821ad]; ret; 
0x0000000042885e: add [rax], al; endbr64; mov rax, [rip+0xb98f5]; ret; 
0x0000000042888e: add [rax], al; endbr64; mov rax, rdi; ret; 
0x0000000040316e: add [rax], al; endbr64; movzx edi, dil; mov [rip+0xdef8a], edi; ret; 
0x0000000042884e: add [rax], al; endbr64; ret; 
0x000000004278ae: add [rax], al; endbr64; xor eax, eax; ret; 
0x0000000045cdee: add [rax], al; endbr64; xor eax, eax; syscall; 
0x00000000401cac: add [rax], al; hlt; nop; endbr64; ret; 
0x0000000042938b: add [rax], al; jbe short 0x0000000000429390; ret; 
0x000000004293cb: add [rax], al; jbe short 0x00000000004293d0; ret; 
0x0000000042978b: add [rax], al; jbe short 0x0000000000429790; ret; 
0x0000000042331a: add [rax], al; je short 0x000000000042331f; ret; 
0x0000000044e8cd: add [rax], al; je short 0x000000000044e950; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000045d190: add [rax], al; je short 0x000000000045d1c5; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045d220: add [rax], al; je short 0x000000000045d255; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045de07: add [rax], al; je short 0x000000000045de3a; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045deb8: add [rax], al; je short 0x000000000045deed; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000047b76b: add [rax], al; jmp rax; 
0x00000000402af7: add [rax], al; jne 0x0000000000402b8f; add rsp, 0xc8; ret; 
0x00000000402ca7: add [rax], al; jne 0x0000000000402d3f; add rsp, 0xc8; ret; 
0x0000000040a3c3: add [rax], al; jne 0x000000000040a4a0; mov rax, 0x4decc0; ret; 
0x00000000439982: add [rax], al; jne 0x0000000000439890; ret; 
0x0000000045c264: add [rax], al; jne 0x000000000045c305; add rsp, 0x68; ret; 
0x00000000470236: add [rax], al; jne 0x00000000004702d6; add rsp, 0x98; ret; 
0x0000000049e590: add [rax], al; jne 0x000000000049e615; leave; ret; 
0x00000000404fe8: add [rax], al; jne short 0x0000000000404ff1; add rsp, 0x48; ret; 
0x0000000040534b: add [rax], al; jne short 0x000000000040536c; add rsp, 0x10; pop rbp; ret; 
0x00000000408b0a: add [rax], al; jne short 0x0000000000408b13; add rsp, 0x18; ret; 
0x0000000041e1aa: add [rax], al; jne short 0x000000000041e1d4; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000041f946: add [rax], al; jne short 0x000000000041f952; add rsp, 0xd8; ret; 
0x0000000042d66a: add [rax], al; jne short 0x000000000042d674; add rsp, 0x10; pop rbp; ret; 
0x0000000045aee1: add [rax], al; jne short 0x000000000045af04; add rsp, 0x20; pop rbx; ret; 
0x0000000045be89: add [rax], al; jne short 0x000000000045bea1; add rsp, 0x28; ret; 
0x0000000045cbb9: add [rax], al; jne short 0x000000000045cc03; add rsp, 0x68; ret; 
0x0000000045cc48: add [rax], al; jne short 0x000000000045cc93; add rsp, 0x18; ret; 
0x0000000045cd00: add [rax], al; jne short 0x000000000045cd4b; add rsp, 0x58; ret; 
0x0000000045cd9e: add [rax], al; jne short 0x000000000045cdeb; add rsp, 0x58; ret; 
0x0000000045cfdc: add [rax], al; jne short 0x000000000045cfe5; add rsp, 0x28; ret; 
0x0000000045f9df: add [rax], al; jne short 0x000000000045f9eb; add rsp, 0xd8; ret; 
0x0000000046fec3: add [rax], al; jne short 0x000000000046fecc; add rsp, 0x18; ret; 
0x0000000047013e: add [rax], al; jne short 0x0000000000470184; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000471f76: add [rax], al; jne short 0x0000000000471f82; add rsp, 0xd8; ret; 
0x00000000485031: add [rax], al; jne short 0x000000000048503d; movzx eax, al; add rsp, 0x58; ret; 
0x000000004850eb: add [rax], al; jne short 0x0000000000485114; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000048f139: add [rax], al; jne short 0x000000000048f150; mov r8, [rip+0x5632c]; mov rax, r8; ret; 
0x000000004918cc: add [rax], al; jne short 0x00000000004918d6; add rsp, 0x20; pop rbx; ret; 
0x000000004919c7: add [rax], al; jne short 0x00000000004919f3; add rsp, 0x38; ret; 
0x00000000491a93: add [rax], al; jne short 0x0000000000491ac4; add rsp, 0x58; ret; 
0x00000000491c05: add [rax], al; jne short 0x0000000000491c44; add rsp, 0x68; ret; 
0x00000000491f23: add [rax], al; jne short 0x0000000000491f54; add rsp, 0x58; ret; 
0x00000000492713: add [rax], al; jne short 0x0000000000492735; add rsp, 0x38; ret; 
0x000000004984ba: add [rax], al; jne short 0x00000000004984c3; add rsp, 0x28; ret; 
0x000000004985a8: add [rax], al; jne short 0x00000000004985b1; add rsp, 0x38; ret; 
0x0000000049eb23: add [rax], al; jne short 0x000000000049eb2c; add rsp, 0x38; ret; 
0x00000000455ace: add [rax], al; lea r11, [rip+0x61c19]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000044326d: add [rax], al; lea r11, [rip+0x73dba]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048b100: add [rax], al; lea rax, [rax+rdx*4]; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x0000000048b0ce: add [rax], al; lea rax, [rax+rdx*4]; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x0000000045737e: add [rax], al; lea rax, [rdi+0x2]; ret; 
0x0000000045738e: add [rax], al; lea rax, [rdi+0x3]; ret; 
0x0000000045739e: add [rax], al; lea rax, [rdi+0x4]; ret; 
0x000000004573ae: add [rax], al; lea rax, [rdi+0x5]; ret; 
0x000000004573be: add [rax], al; lea rax, [rdi+0x6]; ret; 
0x000000004572fa: add [rax], al; lea rax, [rdi+0x7]; ret; 
0x000000004573ce: add [rax], al; lea rax, [rdi+0x8]; ret; 
0x000000004573de: add [rax], al; lea rax, [rdi+0x9]; ret; 
0x000000004573ee: add [rax], al; lea rax, [rdi+0xa]; ret; 
0x000000004573fe: add [rax], al; lea rax, [rdi+0xb]; ret; 
0x0000000045740e: add [rax], al; lea rax, [rdi+0xc]; ret; 
0x0000000045741e: add [rax], al; lea rax, [rdi+0xd]; ret; 
0x0000000045742e: add [rax], al; lea rax, [rdi+0xe]; ret; 
0x0000000045734d: add [rax], al; lea rax, [rdi+0xf]; ret; 
0x0000000044db0d: add [rax], al; lea rax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x00000000481cd7: add [rax], al; lea rax, [rip+0x13e0]; cmove rax, rdx; ret; 
0x00000000498660: add [rax], al; lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x000000004988d7: add [rax], al; lea rax, [rip+0x70]; cmove rax, rdx; ret; 
0x00000000431ce7: add [rax], al; lea rax, [rip+0x7330]; cmove rax, rdx; ret; 
0x00000000481dd7: add [rax], al; lea rax, [rip+0x810]; cmove rax, rdx; ret; 
0x00000000483627: add [rax], al; lea rax, [rip+0x9b0]; cmove rax, rdx; ret; 
0x0000000040d7de: add [rax], al; lea rax, [rip+0x9bd77]; ret; 
0x0000000040d7be: add [rax], al; lea rax, [rip+0x9bd80]; ret; 
0x0000000040d7ae: add [rax], al; lea rax, [rip+0x9bd84]; ret; 
0x0000000040d79e: add [rax], al; lea rax, [rip+0x9bd8c]; ret; 
0x0000000040d7ce: add [rax], al; lea rax, [rip+0x9bd8e]; ret; 
0x0000000040d78e: add [rax], al; lea rax, [rip+0x9bd8f]; ret; 
0x0000000040d766: add [rax], al; lea rax, [rip+0x9bdb0]; ret; 
0x0000000040d81e: add [rax], al; lea rax, [rip+0x9bdba]; ret; 
0x0000000040d77e: add [rax], al; lea rax, [rip+0x9bdcc]; ret; 
0x0000000040d80e: add [rax], al; lea rax, [rip+0x9bdd1]; ret; 
0x0000000040d7fe: add [rax], al; lea rax, [rip+0x9bde8]; ret; 
0x0000000040d7ee: add [rax], al; lea rax, [rip+0x9bdff]; ret; 
0x0000000040cc9e: add [rax], al; lea rax, [rip+0x9c8b7]; ret; 
0x0000000040cc7e: add [rax], al; lea rax, [rip+0x9c8c0]; ret; 
0x0000000040cc6e: add [rax], al; lea rax, [rip+0x9c8c4]; ret; 
0x0000000040cc5e: add [rax], al; lea rax, [rip+0x9c8cc]; ret; 
0x0000000040cc8e: add [rax], al; lea rax, [rip+0x9c8ce]; ret; 
0x0000000040cc4e: add [rax], al; lea rax, [rip+0x9c8cf]; ret; 
0x0000000040cc26: add [rax], al; lea rax, [rip+0x9c8f0]; ret; 
0x0000000040ccde: add [rax], al; lea rax, [rip+0x9c8fa]; ret; 
0x0000000040cc3e: add [rax], al; lea rax, [rip+0x9c90c]; ret; 
0x0000000040ccce: add [rax], al; lea rax, [rip+0x9c911]; ret; 
0x0000000040ccbe: add [rax], al; lea rax, [rip+0x9c928]; ret; 
0x0000000040ccae: add [rax], al; lea rax, [rip+0x9c93f]; ret; 
0x0000000040c15e: add [rax], al; lea rax, [rip+0x9d3f7]; ret; 
0x0000000040c13e: add [rax], al; lea rax, [rip+0x9d400]; ret; 
0x0000000040c12e: add [rax], al; lea rax, [rip+0x9d404]; ret; 
0x0000000040c11e: add [rax], al; lea rax, [rip+0x9d40c]; ret; 
0x0000000040c14e: add [rax], al; lea rax, [rip+0x9d40e]; ret; 
0x0000000040c10e: add [rax], al; lea rax, [rip+0x9d40f]; ret; 
0x0000000040c0e6: add [rax], al; lea rax, [rip+0x9d430]; ret; 
0x0000000040c19e: add [rax], al; lea rax, [rip+0x9d43a]; ret; 
0x0000000040c0fe: add [rax], al; lea rax, [rip+0x9d44c]; ret; 
0x0000000040c18e: add [rax], al; lea rax, [rip+0x9d451]; ret; 
0x0000000040c17e: add [rax], al; lea rax, [rip+0x9d468]; ret; 
0x0000000040c16e: add [rax], al; lea rax, [rip+0x9d47f]; ret; 
0x0000000040b55e: add [rax], al; lea rax, [rip+0x9e014]; ret; 
0x0000000040b54e: add [rax], al; lea rax, [rip+0x9e01c]; ret; 
0x0000000040b53e: add [rax], al; lea rax, [rip+0x9e023]; ret; 
0x0000000040b52e: add [rax], al; lea rax, [rip+0x9e02e]; ret; 
0x0000000040b51e: add [rax], al; lea rax, [rip+0x9e037]; ret; 
0x0000000040b4fe: add [rax], al; lea rax, [rip+0x9e040]; ret; 
0x0000000040b4ee: add [rax], al; lea rax, [rip+0x9e044]; ret; 
0x0000000040b4de: add [rax], al; lea rax, [rip+0x9e04c]; ret; 
0x0000000040b4ce: add [rax], al; lea rax, [rip+0x9e04f]; ret; 
0x0000000040b4ae: add [rax], al; lea rax, [rip+0x9e077]; ret; 
0x0000000040b4be: add [rax], al; lea rax, [rip+0x9e08c]; ret; 
0x0000000040b50e: add [rax], al; lea rax, [rip+0xc02d8]; ret; 
0x00000000481d17: add [rax], al; lea rax, [rip+0xed0]; cmove rax, rdx; ret; 
0x0000000047f299: add [rax], al; lea rcx, [rip+0x497a2]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000047eae5: add [rax], al; lea rcx, [rip+0x49d12]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000040dbb0: add [rax], al; lea rcx, [rip+0x9c0e7]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000004234e3: add [rax], al; lea rcx, [rip+0xc0794]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x000000004a7d45: add [rax], al; lea rdi, [rip+0x3d232]; syscall; 
0x0000000048c2b4: add [rax], al; lea rdi, [rip+0x3d8bb]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x00000000497dc5: add [rax], al; lea rdi, [rip+0x4d246]; syscall; 
0x00000000497b41: add [rax], al; lea rdi, [rip+0x4d4c6]; syscall; 
0x0000000047966e: add [rax], al; lea rdi, [rip+0x4ef89]; lea rsi, [rip+0x663c2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000495abd: add [rax], al; lea rdi, [rip+0x4f542]; syscall; 
0x0000000049597d: add [rax], al; lea rdi, [rip+0x4f682]; syscall; 
0x00000000471905: add [rax], al; lea rdi, [rip+0x73672]; syscall; 
0x00000000471840: add [rax], al; lea rdi, [rip+0x73737]; syscall; 
0x0000000047169e: add [rax], al; lea rdi, [rip+0x738d9]; syscall; 
0x000000004715c4: add [rax], al; lea rdi, [rip+0x739b3]; syscall; 
0x00000000463df5: add [rax], al; lea rdi, [rip+0x81c12]; syscall; 
0x00000000463c89: add [rax], al; lea rdi, [rip+0x81d7e]; syscall; 
0x00000000463b69: add [rax], al; lea rdi, [rip+0x81e9e]; syscall; 
0x0000000045b421: add [rax], al; lea rdi, [rip+0x8a5e6]; syscall; 
0x00000000430aa1: add [rax], al; lea rdi, [rip+0xb1d36]; syscall; 
0x0000000042dea1: add [rax], al; lea rdi, [rip+0xb4936]; syscall; 
0x0000000042de41: add [rax], al; lea rdi, [rip+0xb4996]; syscall; 
0x0000000042da81: add [rax], al; lea rdi, [rip+0xb4d56]; syscall; 
0x0000000042d821: add [rax], al; lea rdi, [rip+0xb4fb6]; syscall; 
0x0000000042d249: add [rax], al; lea rdi, [rip+0xb558e]; syscall; 
0x0000000042d211: add [rax], al; lea rdi, [rip+0xb55c6]; syscall; 
0x0000000042ee01: add [rax], al; lea rdi, [rip+0xb5f26]; syscall; 
0x0000000042e3b5: add [rax], al; lea rdi, [rip+0xb6962]; syscall; 
0x0000000042a512: add [rax], al; lea rdi, [rip+0xba805]; syscall; 
0x0000000042a4e1: add [rax], al; lea rdi, [rip+0xba846]; syscall; 
0x0000000042a261: add [rax], al; lea rdi, [rip+0xbaac6]; syscall; 
0x00000000429d3d: add [rax], al; lea rdi, [rip+0xbafea]; syscall; 
0x00000000428953: add [rax], al; lea rdi, [rip+0xbc354]; syscall; 
0x00000000428393: add [rax], al; lea rdi, [rip+0xbc914]; syscall; 
0x00000000428027: add [rax], al; lea rdi, [rip+0xbcc80]; syscall; 
0x00000000427ce5: add [rax], al; lea rdi, [rip+0xbcfc2]; syscall; 
0x0000000042677f: add [rax], al; lea rdi, [rip+0xbe528]; syscall; 
0x000000004264df: add [rax], al; lea rdi, [rip+0xbe7c8]; syscall; 
0x0000000042618b: add [rax], al; lea rdi, [rip+0xbeb1c]; syscall; 
0x00000000420191: add [rax], al; lea rdi, [rip+0xc5876]; syscall; 
0x0000000041f140: add [rax], al; lea rdi, [rip+0xc6767]; syscall; 
0x0000000041f000: add [rax], al; lea rdi, [rip+0xc68a7]; syscall; 
0x0000000041edc9: add [rax], al; lea rdi, [rip+0xc6ade]; syscall; 
0x0000000041ed8e: add [rax], al; lea rdi, [rip+0xc6b19]; syscall; 
0x0000000041ecaa: add [rax], al; lea rdi, [rip+0xc6bfd]; syscall; 
0x000000004156de: add [rax], al; lea rdi, [rip+0xcf151]; syscall; 
0x00000000413d3b: add [rax], al; lea rdi, [rip+0xd0abc]; syscall; 
0x00000000412bbc: add [rax], al; lea rdi, [rip+0xd1b93]; syscall; 
0x00000000412b8e: add [rax], al; lea rdi, [rip+0xd1bc1]; syscall; 
0x00000000412a42: add [rax], al; lea rdi, [rip+0xd1d0d]; syscall; 
0x000000004012da: add [rax], al; lea rdi, [rip+0xe356d]; syscall; 
0x00000000431996: add [rax], al; lea rdx, [rip+0x118b1]; cmovne rax, rdx; ret; 
0x000000004310a7: add [rax], al; lea rdx, [rip+0x1fc30]; cmovne rax, rdx; ret; 
0x00000000430ee7: add [rax], al; lea rdx, [rip+0x25b0]; cmovne rax, rdx; ret; 
0x000000004318f8: add [rax], al; lea rdx, [rip+0x25b3f]; cmovne rax, rdx; ret; 
0x00000000483d47: add [rax], al; lea rdx, [rip+0x30]; cmovne rax, rdx; ret; 
0x00000000431051: add [rax], al; lea rdx, [rip+0x5356]; cmovne rax, rdx; ret; 
0x00000000431c66: add [rax], al; lea rdx, [rip+0xeaf1]; cmovne rax, rdx; ret; 
0x00000000431af6: add [rax], al; lea rdx, [rip+0xec41]; cmovne rax, rdx; ret; 
0x0000000045cbc6: add [rax], al; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000048bd77: add [rax], al; lea rsi, [rip+0x3dd60]; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x0000000049c1a6: add [rax], al; lea rsi, [rip+0x49831]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x0000000045a750: add [rax], al; lea rsi, [rip+0x5d1e7]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x00000000423b6f: add [rax], al; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000421617: add [rax], al; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x00000000401e86: add [rax], al; leave; ret; 
0x0000000045fb86: add [rax], al; mov [rax+0x20], rsi; ret; 
0x00000000498428: add [rax], al; mov [rax], rdx; pop rbx; ret; 
0x0000000049eb96: add [rax], al; mov [rbx+0x18], rax; pop rbx; ret; 
0x0000000049ec5a: add [rax], al; mov [rbx+0x20], rax; pop rbx; ret; 
0x00000000452bfe: add [rax], al; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x00000000452bee: add [rax], al; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x00000000452bce: add [rax], al; mov [rcx], edx; ret; 
0x00000000452c5e: add [rax], al; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x00000000452c6e: add [rax], al; mov [rcx], rdx; mov [rcx+0x6], rdx; ret; 
0x00000000452c3e: add [rax], al; mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x00000000452c7e: add [rax], al; mov [rcx], rdx; mov [rcx+0x7], rdx; ret; 
0x00000000452c2e: add [rax], al; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x00000000452c4e: add [rax], al; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x00000000452c8e: add [rax], al; mov [rcx], rdx; mov [rcx+0x8], rdx; ret; 
0x00000000452c0e: add [rax], al; mov [rcx], rdx; ret; 
0x0000000045fb1e: add [rax], al; mov [rdi+0x20], rsi; ret; 
0x0000000048b10a: add [rax], al; mov [rdi+0x308], rax; ret; 
0x0000000048b0d8: add [rax], al; mov [rdi+0x310], rax; ret; 
0x000000004a398e: add [rax], al; mov [rdi+rsi*8], rdx; add rsp, 0x8; ret; 
0x0000000045641e: add [rax], al; mov [rdi-0x1], rdx; ret; 
0x00000000456a0e: add [rax], al; mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000004553ce: add [rax], al; mov [rdi], dh; ret; 
0x0000000044f0de: add [rax], al; mov [rdi], dx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000044f0ce: add [rax], al; mov [rdi], dx; vzeroupper; ret; 
0x0000000045640e: add [rax], al; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x0000000045647e: add [rax], al; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x0000000045648e: add [rax], al; mov [rdi], rdx; mov [rdi+0x6], rdx; ret; 
0x0000000045645e: add [rax], al; mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x0000000045644e: add [rax], al; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x0000000045646e: add [rax], al; mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x0000000044f0fe: add [rax], al; mov [rdi], rdx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x0000000045642e: add [rax], al; mov [rdi], rdx; ret; 
0x0000000049e828: add [rax], al; mov [rdi], rsi; ret; 
0x00000000420648: add [rax], al; mov [rdx+0xe0], rcx; ret; 
0x0000000042a6c3: add [rax], al; mov [rip+0xb80f4], rax; ret; 
0x0000000042a6b5: add [rax], al; mov [rip+0xb810a], rax; lea rax, [rip+0x319b]; mov [rip+0xb80f4], rax; ret; 
0x00000000429760: add [rax], al; mov [rip+0xb9004], eax; ret; 
0x00000000429739: add [rax], al; mov [rip+0xb900e], rax; ret; 
0x00000000429710: add [rax], al; mov [rip+0xb902f], rax; ret; 
0x000000004296f0: add [rax], al; mov [rip+0xb9047], rax; ret; 
0x00000000402238: add [rax], al; mov [rip+0xe2090], ebx; xor eax, eax; pop rbx; ret; 
0x000000004020a0: add [rax], al; mov [rip+0xe2228], eax; add rsp, 0x8; ret; 
0x0000000041189c: add [rax], al; mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x000000004216e1: add [rax], al; mov [rsp+0x10], rcx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000045e4fb: add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000454f0e: add [rax], al; mov ax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x00000000450bde: add [rax], al; mov ax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x000000004752ba: add [rax], al; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x4f8], rsi; jmp rax; 
0x000000004553ee: add [rax], al; mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x0000000047caae: add [rax], al; mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047b761: add [rax], al; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x0000000047c9e6: add [rax], al; mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047b74c: add [rax], al; mov dword ptr [rbp-0x514], 0x0; mov qword ptr [rbp-0x4c8], 0x0; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x00000000424fac: add [rax], al; mov dword ptr [rbx+0x70], 0xffffffff; pop rbx; ret; 
0x0000000049e900: add [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000049b9ee: add [rax], al; mov dword ptr [rip+0x49746], 0x2; test byte ptr [rip+0x49f1f], 0x40; jne short 0x000000000049ba08; ret; 
0x00000000456a1e: add [rax], al; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000004560ce: add [rax], al; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000049e80f: add [rax], al; mov eax, 0x1; ret; 
0x0000000049e982: add [rax], al; mov eax, 0x2; ret; 
0x0000000045cbd0: add [rax], al; mov eax, 0x48; syscall; 
0x00000000410fa6: add [rax], al; mov eax, 0x9e; syscall; 
0x000000004a7d40: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x3d232]; syscall; 
0x00000000497dc0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x4d246]; syscall; 
0x00000000497b3c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x4d4c6]; syscall; 
0x00000000495ab8: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x4f542]; syscall; 
0x00000000495978: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x4f682]; syscall; 
0x00000000471900: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x73672]; syscall; 
0x0000000047183b: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x73737]; syscall; 
0x00000000471699: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x738d9]; syscall; 
0x000000004715bf: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x739b3]; syscall; 
0x00000000463df0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x81c12]; syscall; 
0x00000000463c84: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x81d7e]; syscall; 
0x00000000463b64: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x81e9e]; syscall; 
0x0000000045b41c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0x8a5e6]; syscall; 
0x00000000430a9c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb1d36]; syscall; 
0x0000000042de9c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb4936]; syscall; 
0x0000000042de3c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb4996]; syscall; 
0x0000000042da7c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb4d56]; syscall; 
0x0000000042d81c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb4fb6]; syscall; 
0x0000000042d244: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb558e]; syscall; 
0x0000000042d20c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb55c6]; syscall; 
0x0000000042edfc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb5f26]; syscall; 
0x0000000042e3b0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xb6962]; syscall; 
0x0000000042a50d: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xba805]; syscall; 
0x0000000042a4dc: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xba846]; syscall; 
0x0000000042a25c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbaac6]; syscall; 
0x00000000429d38: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbafea]; syscall; 
0x0000000042894e: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbc354]; syscall; 
0x0000000042838e: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbc914]; syscall; 
0x00000000428022: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbcc80]; syscall; 
0x00000000427ce0: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbcfc2]; syscall; 
0x0000000042677a: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbe528]; syscall; 
0x000000004264da: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbe7c8]; syscall; 
0x00000000426186: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xbeb1c]; syscall; 
0x0000000042018c: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc5876]; syscall; 
0x0000000041f13b: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc6767]; syscall; 
0x0000000041effb: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc68a7]; syscall; 
0x0000000041edc4: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc6ade]; syscall; 
0x0000000041ed89: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc6b19]; syscall; 
0x0000000041eca5: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xc6bfd]; syscall; 
0x000000004156d9: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xcf151]; syscall; 
0x00000000413d36: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xd0abc]; syscall; 
0x00000000412bb7: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xd1b93]; syscall; 
0x00000000412b89: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xd1bc1]; syscall; 
0x00000000412a3d: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xd1d0d]; syscall; 
0x000000004012d5: add [rax], al; mov eax, 0xca; lea rdi, [rip+0xe356d]; syscall; 
0x00000000401444: add [rax], al; mov eax, 0xca; syscall; 
0x0000000047006d: add [rax], al; mov eax, 0xd; syscall; 
0x0000000041e192: add [rax], al; mov eax, 0xe; syscall; 
0x0000000040aeae: add [rax], al; mov eax, 0xffffff20; ret; 
0x0000000040aece: add [rax], al; mov eax, 0xffffff8a; ret; 
0x0000000040aebe: add [rax], al; mov eax, 0xffffff97; ret; 
0x0000000040aeee: add [rax], al; mov eax, 0xffffff99; ret; 
0x0000000040aede: add [rax], al; mov eax, 0xffffff9a; ret; 
0x00000000403496: add [rax], al; mov eax, 0xffffffa1; ret; 
0x0000000040a9e6: add [rax], al; mov eax, 0xffffffdf; ret; 
0x00000000402c56: add [rax], al; mov eax, 0xffffffea; ret; 
0x00000000421e1e: add [rax], al; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000422bde: add [rax], al; mov eax, 0xffffffff; ret; 
0x00000000405adb: add [rax], al; mov eax, [rbx+0x20]; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x000000004a32c8: add [rax], al; mov eax, [rbx+0x8]; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x00000000408a7e: add [rax], al; mov eax, [rdi+0x10]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408a8e: add [rax], al; mov eax, [rdi+0x14]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408a9e: add [rax], al; mov eax, [rdi+0x18]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408aae: add [rax], al; mov eax, [rdi+0x1c]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408abe: add [rax], al; mov eax, [rdi+0x20]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408a4e: add [rax], al; mov eax, [rdi+0x4]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408a5e: add [rax], al; mov eax, [rdi+0x8]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408a6e: add [rax], al; mov eax, [rdi+0xc]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000464ce6: add [rax], al; mov eax, [rip+0x8014e]; test eax, eax; je short 0x0000000000464cf8; ret; 
0x0000000042e385: add [rax], al; mov eax, ebx; syscall; 
0x0000000041e15d: add [rax], al; mov eax, ecx; syscall; 
0x00000000492323: add [rax], al; mov eax, r12d; pop r12; ret; 
0x0000000046d363: add [rax], al; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000041fd63: add [rax], al; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000422f83: add [rax], al; mov eax, r9d; syscall; 
0x0000000045540e: add [rax], al; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x000000004a3828: add [rax], al; mov edi, 0x1; call rax; 
0x0000000045b8de: add [rax], al; mov edi, edx; mov eax, esi; syscall; 
0x00000000480276: add [rax], al; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000425147: add [rax], al; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x00000000422519: add [rax], al; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000040a873: add [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x00000000405a8f: add [rax], al; mov edx, [rbx+0x10]; movsxd rdx, [r15+rdx*4]; add rdx, r15; notrack jmp rdx; 
0x000000004430de: add [rax], al; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000004218f4: add [rax], al; mov edx, r12d; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000423dac: add [rax], al; mov edx, r13d; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000042933d: add [rax], al; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000048193a: add [rax], al; mov esi, 0x80; syscall; 
0x000000004a7d3b: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x3d232]; syscall; 
0x00000000497dbb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4d246]; syscall; 
0x00000000497b37: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4d4c6]; syscall; 
0x00000000495ab3: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4f542]; syscall; 
0x00000000495973: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4f682]; syscall; 
0x000000004718fb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x73672]; syscall; 
0x00000000471836: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x73737]; syscall; 
0x00000000471694: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x738d9]; syscall; 
0x000000004715ba: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x739b3]; syscall; 
0x00000000463deb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x81c12]; syscall; 
0x00000000463c7f: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x81d7e]; syscall; 
0x00000000463b5f: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x81e9e]; syscall; 
0x0000000045b417: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x8a5e6]; syscall; 
0x00000000430a97: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb1d36]; syscall; 
0x0000000042de97: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4936]; syscall; 
0x0000000042de37: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4996]; syscall; 
0x0000000042da77: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4d56]; syscall; 
0x0000000042d817: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4fb6]; syscall; 
0x0000000042d23f: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb558e]; syscall; 
0x0000000042d207: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb55c6]; syscall; 
0x0000000042edf7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5f26]; syscall; 
0x0000000042e3ab: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb6962]; syscall; 
0x0000000042a508: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba805]; syscall; 
0x0000000042a4d7: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba846]; syscall; 
0x0000000042a257: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbaac6]; syscall; 
0x00000000429d33: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbafea]; syscall; 
0x00000000428949: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc354]; syscall; 
0x00000000428389: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc914]; syscall; 
0x0000000042801d: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcc80]; syscall; 
0x00000000427cdb: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcfc2]; syscall; 
0x00000000426775: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe528]; syscall; 
0x000000004264d5: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe7c8]; syscall; 
0x00000000426181: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbeb1c]; syscall; 
0x00000000420187: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc5876]; syscall; 
0x0000000041f136: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6767]; syscall; 
0x0000000041eff6: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc68a7]; syscall; 
0x0000000041edbf: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6ade]; syscall; 
0x0000000041ed84: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6b19]; syscall; 
0x0000000041eca0: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6bfd]; syscall; 
0x000000004156d4: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcf151]; syscall; 
0x00000000413d31: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd0abc]; syscall; 
0x00000000412bb2: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd1b93]; syscall; 
0x00000000412b84: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd1bc1]; syscall; 
0x00000000412a38: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd1d0d]; syscall; 
0x000000004012d0: add [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xe356d]; syscall; 
0x0000000040143f: add [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000042e380: add [rax], al; mov esi, 0x81; mov eax, ebx; syscall; 
0x0000000042e220: add [rax], al; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x0000000042f7b3: add [rax], al; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x000000004303f4: add [rax], al; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x0000000042b0b5: add [rax], al; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000042f179: add [rax], al; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000480e8e: add [rax], al; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x000000004248c8: add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000426b1f: add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000042828d: add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x00000000427b56: add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000042727f: add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000041ec0a: add [rax], al; mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x00000000480b45: add [rax], al; mov esi, r15d; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000046fe6d: add [rax], al; mov fs:[rdx], rax; ret; 
0x000000004277d2: add [rax], al; mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000047b756: add [rax], al; mov qword ptr [rbp-0x4c8], 0x0; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x000000004752af: add [rax], al; mov qword ptr [rbp-0x4e0], 0x0; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x4f8], rsi; jmp rax; 
0x0000000042896d: add [rax], al; mov qword ptr [rip+0xbc33e], 0x0; ret; 
0x0000000049232e: add [rax], al; mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000048c51b: add [rax], al; mov r10, [rbp-0x90]; call r10; 
0x00000000470067: add [rax], al; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x000000004a16e6: add [rax], al; mov r8, [r8]; mov [r9], r8; add rsp, 0x8; ret; 
0x0000000047ca6e: add [rax], al; mov r9d, 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000048421e: add [rax], al; mov rax, 0x2; ret; 
0x0000000048422e: add [rax], al; mov rax, 0x3; ret; 
0x0000000048423e: add [rax], al; mov rax, 0x4; ret; 
0x0000000040a77e: add [rax], al; mov rax, 0x4dec40; pop rbp; ret; 
0x0000000040a4de: add [rax], al; mov rax, 0x4dec40; ret; 
0x0000000040a79e: add [rax], al; mov rax, 0x4dec80; pop rbp; ret; 
0x0000000040a4ce: add [rax], al; mov rax, 0x4dec80; ret; 
0x0000000040a78e: add [rax], al; mov rax, 0x4decc0; pop rbp; ret; 
0x0000000040a3ca: add [rax], al; mov rax, 0x4decc0; ret; 
0x0000000040a7de: add [rax], al; mov rax, 0x4ded00; pop rbp; ret; 
0x0000000040a7ce: add [rax], al; mov rax, 0x4ded40; pop rbp; ret; 
0x0000000040a47e: add [rax], al; mov rax, 0x4ded40; ret; 
0x0000000040a7ee: add [rax], al; mov rax, 0x4ded80; pop rbp; ret; 
0x0000000040a7be: add [rax], al; mov rax, 0x4dedc0; pop rbp; ret; 
0x0000000040a36c: add [rax], al; mov rax, 0x4dedc0; ret; 
0x0000000040a3aa: add [rax], al; mov rax, 0x4dee00; ret; 
0x0000000040a4a6: add [rax], al; mov rax, 0x4dee40; ret; 
0x0000000040a4ee: add [rax], al; mov rax, 0x4dee80; ret; 
0x0000000040a46e: add [rax], al; mov rax, 0x4deec0; ret; 
0x0000000040a3ea: add [rax], al; mov rax, 0x4def00; ret; 
0x0000000040a48e: add [rax], al; mov rax, 0x4e11a0; ret; 
0x0000000040a7ae: add [rax], al; mov rax, 0x4e11e0; pop rbp; ret; 
0x0000000040a40a: add [rax], al; mov rax, 0x4e11e0; ret; 
0x0000000040a4fe: add [rax], al; mov rax, 0x4e1260; ret; 
0x0000000040a4be: add [rax], al; mov rax, 0x4e12e0; ret; 
0x0000000048424e: add [rax], al; mov rax, 0x5; ret; 
0x0000000048425e: add [rax], al; mov rax, 0x6; ret; 
0x0000000048426e: add [rax], al; mov rax, 0x7; ret; 
0x0000000045beee: add [rax], al; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000045d066: add [rax], al; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000485166: add [rax], al; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000045d074: add [rax], al; mov rax, 0xffffffffffffffff; ret; 
0x0000000041ec26: add [rax], al; mov rax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x00000000421e12: add [rax], al; mov rax, [rax+0x20]; jmp rax; 
0x0000000042775d: add [rax], al; mov rax, [rax+0x68]; test rax, rax; jne short 0x0000000000427758; ret; 
0x0000000047c5ae: add [rax], al; mov rax, [rax+rsi*8]; jmp rax; 
0x000000004a1836: add [rax], al; mov rax, [rsi+0xb0]; add rsp, 0x8; ret; 
0x0000000047b999: add [rax], al; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000492337: add [rax], al; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x000000004a11ca: add [rax], al; mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000042c57f: add [rax], al; mov rax, r8; ret; 
0x00000000484601: add [rax], al; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x0000000048348e: add [rax], al; mov rax, r8; vzeroupper; ret; 
0x000000004a3b50: add [rax], al; mov rax, rbp; pop rbx; pop rbp; ret; 
0x0000000045669e: add [rax], al; mov rax, rdi; ret; 
0x0000000048f809: add [rax], al; mov rbp, rsp; mov rsi, rbp; syscall; 
0x0000000045544e: add [rax], al; mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x000000004922da: add [rax], al; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x000000004595e3: add [rax], al; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000045e009: add [rax], al; mov rdi, [r13]; call rbx; 
0x0000000045e0c9: add [rax], al; mov rdi, [r14]; call rbx; 
0x0000000045e23a: add [rax], al; mov rdi, [r15]; call rbx; 
0x00000000470486: add [rax], al; mov rdi, [rsp+0x18]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x0000000042e225: add [rax], al; mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000481309: add [rax], al; mov rdi, r13; call qword ptr [r14+0x20]; 
0x000000004a63f6: add [rax], al; mov rdi, r13; call rbx; 
0x0000000042f7b8: add [rax], al; mov rdi, r13; mov eax, 0xca; syscall; 
0x000000004219ce: add [rax], al; mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000421bc4: add [rax], al; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x000000004303f9: add [rax], al; mov rdi, r15; mov eax, 0xca; syscall; 
0x00000000424bd2: add [rax], al; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000424982: add [rax], al; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x000000004203ca: add [rax], al; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000042b0ba: add [rax], al; mov rdi, rbp; mov eax, 0xca; syscall; 
0x00000000425373: add [rax], al; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x0000000042743c: add [rax], al; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000427203: add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000042514c: add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x0000000042251e: add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000047f605: add [rax], al; mov rdi, rbx; call r8; 
0x0000000047f00f: add [rax], al; mov rdi, rbx; call rax; 
0x0000000042f17e: add [rax], al; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000423673: add [rax], al; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x00000000498421: add [rax], al; mov rdx, [rdi+0x458]; mov [rax], rdx; pop rbx; ret; 
0x00000000420641: add [rax], al; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x00000000442f1e: add [rax], al; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x00000000420912: add [rax], al; mov rdx, r12; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000047fbdc: add [rax], al; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000420b26: add [rax], al; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x000000004736b1: add [rax], al; mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000473d56: add [rax], al; mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000411a16: add [rax], al; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x000000004a00de: add [rax], al; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x00000000473408: add [rax], al; mov rdx, r13; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000042398c: add [rax], al; mov rdx, r13; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x000000004243bf: add [rax], al; mov rdx, r13; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x0000000042455b: add [rax], al; mov rdx, r15; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x000000004a63ee: add [rax], al; mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x00000000425232: add [rax], al; mov rdx, rbp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x00000000473a9b: add [rax], al; mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000045cc56: add [rax], al; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000045d343: add [rax], al; mov rsi, [r14]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000042ff9e: add [rax], al; mov rsi, [rsp+0x28]; mov rdi, r12; call rax; 
0x00000000430c1e: add [rax], al; mov rsi, r12; call rax; 
0x0000000048027b: add [rax], al; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x0000000047020f: add [rax], al; mov rsi, r8; mov eax, 0xe; syscall; 
0x00000000422f7b: add [rax], al; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x00000000424b6c: add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000423926: add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000047fa35: add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000041e13e: add [rax], al; movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000041e146: add [rax], al; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000041e14e: add [rax], al; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000042770a: add [rax], al; movdqa xmm0, [rip+0x8dbbc]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000042767a: add [rax], al; movdqa xmm0, [rip+0x8dc4c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000045a27a: add [rax], al; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000045649e: add [rax], al; movdqu [rdi-0x1], xmm0; ret; 
0x000000004564ae: add [rax], al; movdqu [rdi], xmm0; ret; 
0x000000004554ce: add [rax], al; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x0000000046f137: add [rax], al; movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x000000004407f9: add [rax], al; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x000000004727ed: add [rax], al; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000048712a: add [rax], al; movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x0000000047e81b: add [rax], al; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000047843e: add [rax], al; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000481557: add [rax], al; movups [rax+0x40], xmm0; pop rbx; ret; 
0x00000000408802: add [rax], al; movups [rax+0xb0], xmm3; movups [rax+0xc0], xmm4; pop rbx; ret; 
0x00000000408809: add [rax], al; movups [rax+0xc0], xmm4; pop rbx; ret; 
0x000000004275dc: add [rax], al; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x00000000426962: add [rax], al; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000490cdb: add [rax], al; movups [rbx], xmm0; pop rbx; ret; 
0x0000000043aa2e: add [rax], al; movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x0000000043a7e1: add [rax], al; movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x000000004586be: add [rax], al; movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x000000004586ae: add [rax], al; movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x0000000045869e: add [rax], al; movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x0000000045868e: add [rax], al; movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x0000000045867e: add [rax], al; movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x0000000045866e: add [rax], al; movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x0000000043990e: add [rax], al; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000004a7dee: add [rax], al; movzx eax, byte ptr [rsp+0xf]; add rsp, 0x10; pop rbx; ret; 
0x0000000045a7ee: add [rax], al; movzx eax, cl; pop rbx; ret; 
0x0000000043639e: add [rax], al; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000044322e: add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000044efde: add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x000000004431be: add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x0000000044e94e: add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x000000004034fe: add [rax], al; movzx esi, sil; mov [rip+0xdec16], esi; ret; 
0x000000004034ee: add [rax], al; movzx esi, sil; mov [rip+0xdec22], esi; ret; 
0x000000004034de: add [rax], al; movzx esi, sil; mov [rip+0xdec26], esi; ret; 
0x000000004034ce: add [rax], al; movzx esi, sil; mov [rip+0xdec32], esi; ret; 
0x0000000040339e: add [rax], al; movzx esi, sil; mov [rip+0xded6a], esi; ret; 
0x0000000040338e: add [rax], al; movzx esi, sil; mov [rip+0xded7e], esi; ret; 
0x0000000040aea9: add [rax], al; nop [rax+rax]; mov eax, 0xffffff20; ret; 
0x00000000402419: add [rax], al; nop [rax+rax]; xor eax, eax; pop rbp; ret; 
0x00000000411234: add [rax], al; nop [rax+rax]; xor edi, edi; mov eax, edx; syscall; 
0x000000004391eb: add [rax], al; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x0000000040215a: add [rax], al; nop [rax]; endbr64; lea rax, [rip+0xa6f3d]; ret; 
0x0000000045cb2b: add [rax], al; nop [rax]; endbr64; mov eax, 0x3; syscall; 
0x000000004037cb: add [rax], al; nop [rax]; endbr64; mov eax, [rip+0xde92a]; ret; 
0x000000004a3a2b: add [rax], al; nop [rax]; endbr64; mov rax, [rdi+0xb0]; ret; 
0x0000000040d75f: add [rax], al; nop [rax]; lea rax, [rip+0x9bdb0]; ret; 
0x0000000040cc1f: add [rax], al; nop [rax]; lea rax, [rip+0x9c8f0]; ret; 
0x0000000040c0df: add [rax], al; nop [rax]; lea rax, [rip+0x9d430]; ret; 
0x0000000040b49a: add [rax], al; nop [rax]; lea rax, [rip+0x9e078]; ret; 
0x0000000040b49b: add [rax], al; nop [rax]; lea rax, [rip+0x9e078]; ret; 
0x00000000452b9a: add [rax], al; nop [rax]; mov [rcx], dl; ret; 
0x000000004563ba: add [rax], al; nop [rax]; mov [rdi], dl; ret; 
0x000000004560ba: add [rax], al; nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x0000000040bb0b: add [rax], al; nop [rax]; mov eax, 0xffffff94; ret; 
0x000000004429ba: add [rax], al; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x0000000046ff9a: add [rax], al; nop [rax]; mov rax, 0xf; syscall; 
0x0000000043cc5a: add [rax], al; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x00000000442b4a: add [rax], al; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x00000000442aca: add [rax], al; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x000000004560aa: add [rax], al; nop [rax]; ret; 
0x0000000045903b: add [rax], al; nop [rax]; xor eax, eax; ret; 
0x000000004830ab: add [rax], al; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000045d13d: add [rax], al; nop; endbr64; mov eax, 0x1c; syscall; 
0x0000000045c39d: add [rax], al; nop; endbr64; mov eax, 0x20; syscall; 
0x00000000484efd: add [rax], al; nop; endbr64; mov eax, 0x66; syscall; 
0x0000000045d10d: add [rax], al; nop; endbr64; mov eax, 0xa; syscall; 
0x0000000045d0dd: add [rax], al; nop; endbr64; mov eax, 0xb; syscall; 
0x000000004a392d: add [rax], al; nop; endbr64; mov rax, [rdi+0x90]; ret; 
0x0000000045736d: add [rax], al; nop; lea rax, [rdi+0x1]; ret; 
0x0000000045735d: add [rax], al; nop; lea rax, [rdi]; ret; 
0x00000000452bbd: add [rax], al; nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x00000000452c1d: add [rax], al; nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x000000004563dd: add [rax], al; nop; mov [rdi-0x1], edx; ret; 
0x000000004563ed: add [rax], al; nop; mov [rdi], edx; ret; 
0x0000000045643d: add [rax], al; nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x0000000048420d: add [rax], al; nop; mov rax, 0x1; ret; 
0x0000000044f33d: add [rax], al; nop; mov rax, rdi; vzeroupper; ret; 
0x00000000482b7d: add [rax], al; nop; vzeroupper; xor eax, eax; ret; 
0x0000000049e8f7: add [rax], al; or byte ptr [rcx-0x77], 0x0; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000004238be: add [rax], al; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x000000004827e9: add [rax], al; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x00000000497c2c: add [rax], al; pop rbp; pop r12; pop r13; ret; 
0x00000000480e37: add [rax], al; pop rbp; pop r12; ret; 
0x0000000045ae86: add [rax], al; pop rbp; ret; 
0x0000000045a7a9: add [rax], al; pop rbx; cmove rax, rdx; ret; 
0x0000000040308b: add [rax], al; pop rbx; mov dword ptr [rip+0xdf070], 0x1; ret; 
0x0000000048fa4c: add [rax], al; pop rbx; or dword ptr [rip+0x536f2], 0x1; ret; 
0x00000000409077: add [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000045f781: add [rax], al; pop rbx; pop rbp; ret; 
0x00000000408810: add [rax], al; pop rbx; ret; 
0x000000004017dd: add [rax], al; pop rdx; ret; 
0x00000000428662: add [rax], al; pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000401d66: add [rax], al; ret; 
0x00000000403376: add [rax], al; sar byte ptr [rdi+0x74], 0x4; ret; 
0x0000000040a429: add [rax], al; shl byte ptr [rbp+0x72], 0x48; mov eax, 0x4ded80; ret; 
0x0000000042ce6d: add [rax], al; shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x0000000042d1aa: add [rax], al; sub dword ptr [rip+0xb562d], 0x1; pop rbp; ret; 
0x0000000043a8cc: add [rax], al; sub eax, ecx; ret; 
0x00000000428546: add [rax], al; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x00000000427a66: add [rax], al; sub rax, rcx; sub eax, 0x1; ret; 
0x000000004590f1: add [rax], al; sub rax, rdx; ret; 
0x00000000481686: add [rax], al; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x000000004251f5: add [rax], al; sub rsi, rdx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x00000000401449: add [rax], al; syscall; 
0x00000000457344: add [rax], al; test ah, 0x40; jne 0x0000000000457430; lea rax, [rdi+0xf]; ret; 
0x000000004572f2: add [rax], al; test al, 0x40; jne 0x00000000004573c0; lea rax, [rdi+0x7]; ret; 
0x0000000049b9f8: add [rax], al; test byte ptr [rip+0x49f1f], 0x40; jne short 0x000000000049ba08; ret; 
0x0000000043191d: add [rax], al; test byte ptr [rip+0xb34bf], 0x1; je short 0x00000000004318e1; ret; 
0x00000000457265: add [rax], al; test dh, 0x40; jne 0x00000000004571a0; lea rax, [rdi+0xf]; ret; 
0x000000004572ab: add [rax], al; test dh, 0x4; jne 0x00000000004571a0; lea rax, [rdi+0xb]; ret; 
0x000000004571e2: add [rax], al; test dl, 0x40; jne short 0x00000000004571a0; lea rax, [rdi+0x7]; ret; 
0x00000000457210: add [rax], al; test dl, 0x4; jne short 0x00000000004571a0; lea rax, [rdi+0x3]; ret; 
0x0000000045f82d: add [rax], al; test eax, eax; cmove eax, edx; ret; 
0x0000000040b612: add [rax], al; test eax, eax; cmovns eax, edx; add rsp, 0x8; ret; 
0x0000000045c0aa: add [rax], al; test eax, eax; jne short 0x000000000045c0c0; syscall; 
0x0000000045c14a: add [rax], al; test eax, eax; jne short 0x000000000045c160; mov eax, 0x1; syscall; 
0x0000000045c27e: add [rax], al; test eax, eax; jne short 0x000000000045c2b0; mov eax, 0x48; syscall; 
0x0000000045c31a: add [rax], al; test eax, eax; jne short 0x000000000045c330; mov eax, 0x3; syscall; 
0x0000000042615a: add [rax], al; test edx, edx; jne short 0x0000000000426170; sub dword ptr [rip+0xbeb49], 0x1; ret; 
0x00000000428926: add [rax], al; test edx, edx; jne short 0x0000000000428938; sub dword ptr [rip+0xbc37d], 0x1; ret; 
0x00000000497e44: add [rax], al; test edx, edx; jne short 0x0000000000497e50; sub dword ptr [rdi], 0x1; ret; 
0x000000004a3a12: add [rax], al; test rax, rax; cmovne rax, [rsp+0x10]; add rsp, 0x28; ret; 
0x0000000040100d: add [rax], al; test rax, rax; je short 0x0000000000401016; call rax; 
0x00000000401cd0: add [rax], al; test rax, rax; je short 0x0000000000401ce0; mov edi, 0x4e3b70; jmp rax; 
0x00000000401d12: add [rax], al; test rax, rax; je short 0x0000000000401d20; mov edi, 0x4e3b70; jmp rax; 
0x00000000482b8e: add [rax], al; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000044ed24: add [rax], al; vzeroupper; ret; 
0x00000000452bac: add [rax], al; xchg ax, ax; mov [rcx], dx; ret; 
0x00000000452bdc: add [rax], al; xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000004563cc: add [rax], al; xchg ax, ax; mov [rdi], dx; ret; 
0x000000004563fc: add [rax], al; xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000004553dc: add [rax], al; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000046f04c: add [rax], al; xchg ax, ax; ret; 
0x0000000040a453: add [rax], al; xor byte ptr [rbp+0x48], 0x48; mov eax, 0x4def40; ret; 
0x0000000040336f: add [rax], al; xor byte ptr [rsp+rbx-0x7f], 0xff; add [rax], al; sar byte ptr [rdi+0x74], 0x4; ret; 
0x0000000040241e: add [rax], al; xor eax, eax; pop rbp; ret; 
0x000000004a3b65: add [rax], al; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000040306c: add [rax], al; xor eax, eax; pop rbx; ret; 
0x0000000040256e: add [rax], al; xor eax, eax; ret; 
0x00000000438ede: add [rax], al; xor eax, eax; vzeroupper; ret; 
0x0000000041123e: add [rax], al; xor edi, edi; mov eax, edx; syscall; 
0x0000000045d094: add [rax], al; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x0000000045ce5e: add [rax], al; xor edi, edi; syscall; 
0x00000000421cb2: add [rax], al; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x00000000423cd0: add [rax], al; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000423fd2: add [rax], al; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000004246e6: add [rax], al; xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x00000000427ec9: add [rax], al; xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [r15+0x58]; 
0x00000000421bbd: add [rax], al; xor esi, esi; mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x00000000423f35: add [rax], al; xor esi, esi; mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000004219c7: add [rax], al; xor esi, esi; mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x000000004203c3: add [rax], al; xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041ffd7: add [rax], al; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x00000000481930: add [rax], al; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000004233b6: add [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x0000000045719e: add [rax], al; xor rax, rax; ret; 
0x0000000047022d: add [rax], al; xor rcx, fs:[0x28]; jne 0x00000000004702d6; add rsp, 0x98; ret; 
0x00000000402aee: add [rax], al; xor rdx, fs:[0x28]; jne 0x0000000000402b8f; add rsp, 0xc8; ret; 
0x00000000402c9e: add [rax], al; xor rdx, fs:[0x28]; jne 0x0000000000402d3f; add rsp, 0xc8; ret; 
0x0000000040bfd6: add [rax], ax; add [rbx-0x7bf07201], al; sbb eax, 0x83000001; call far fword ptr [rax+0x174840f]; 
0x00000000483d40: add [rax], cl; lea rax, [rip+0x257]; lea rdx, [rip+0x30]; cmovne rax, rdx; ret; 
0x000000004a2132: add [rax], cl; mov byte ptr [rip+0x43035], 0x8; ret; 
0x000000004a212b: add [rax], cl; mov byte ptr [rip+0x4303b], 0x8; mov byte ptr [rip+0x43035], 0x8; ret; 
0x000000004a2124: add [rax], cl; mov byte ptr [rip+0x43041], 0x8; mov byte ptr [rip+0x4303b], 0x8; mov byte ptr [rip+0x43035], 0x8; ret; 
0x000000004a2139: add [rax], cl; ret; 
0x00000000498659: add [rax], dl; lea rdx, [rip+0x11e]; lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x00000000430f69: add [rax], dl; lea rdx, [rip+0x2818e]; lea rax, [rip+0x280d7]; cmovne rax, rdx; ret; 
0x000000004318a9: add [rax], dl; lea rdx, [rip-0x362]; lea rax, [rip+0x272f7]; cmove rax, rdx; ret; 
0x0000000048dca0: add [rax], eax; add [rax+0x63], cl; ret; 
0x00000000482c47: add [rax], eax; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000049865f: add [rax], eax; add [rax-0x73], cl; add eax, 0x67; cmovne rax, rdx; ret; 
0x000000004a02ff: add [rax], eax; add [rax-0x75], cl; or [rax+0x3], cl; add [r13+0x31], r8b; jmp qword ptr [rsi-0x7d]; 
0x00000000424b6b: add [rax], eax; add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r13+0x90]; 
0x00000000423925: add [rax], eax; add [rax-0x77], cl; out 0x48, al; mov edi, ebp; call qword ptr [r15+0x90]; 
0x000000004595e2: add [rax], eax; add [rax-0x77], cl; shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x0000000042d873: add [rax], eax; add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x00000000488ab7: add [rax], eax; add [rax-0x7d], cl; jge short 0x0000000000488a86; add [rax-0x77], cl; ret; 
0x00000000414c38: add [rax], eax; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x000000004a1f12: add [rax], eax; add [rax-0x80], al; call qword ptr [rcx]; 
0x00000000414377: add [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000414376: add [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x000000004251fe: add [rax], eax; add [rax], al; call qword ptr [r14+0x80]; 
0x0000000045d1ad: add [rax], eax; add [rax], al; call r12; 
0x000000004a3755: add [rax], eax; add [rax], al; call rax; 
0x000000004a42a1: add [rax], eax; add [rax], al; jmp rax; 
0x0000000049e826: add [rax], eax; add [rax], al; mov [rdi], rsi; ret; 
0x0000000042975e: add [rax], eax; add [rax], al; mov [rip+0xb9004], eax; ret; 
0x00000000429737: add [rax], eax; add [rax], al; mov [rip+0xb900e], rax; ret; 
0x0000000042970e: add [rax], eax; add [rax], al; mov [rip+0xb902f], rax; ret; 
0x000000004296ee: add [rax], eax; add [rax], al; mov [rip+0xb9047], rax; ret; 
0x0000000040209e: add [rax], eax; add [rax], al; mov [rip+0xe2228], eax; add rsp, 0x8; ret; 
0x0000000047caac: add [rax], eax; add [rax], al; mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c9e4: add [rax], eax; add [rax], al; mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000049e8fe: add [rax], eax; add [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000004a3cbf: add [rax], eax; add [rax], al; mov edi, 0x1; call rax; 
0x0000000040143d: add [rax], eax; add [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000042e37e: add [rax], eax; add [rax], al; mov esi, 0x81; mov eax, ebx; syscall; 
0x0000000047ca6c: add [rax], eax; add [rax], al; mov r9d, 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c5ac: add [rax], eax; add [rax], al; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047b997: add [rax], eax; add [rax], al; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000421bc2: add [rax], eax; add [rax], al; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x00000000424980: add [rax], eax; add [rax], al; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000423f3a: add [rax], eax; add [rax], al; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000042514a: add [rax], eax; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x0000000042251c: add [rax], eax; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000047f603: add [rax], eax; add [rax], al; mov rdi, rbx; call r8; 
0x0000000047f00d: add [rax], eax; add [rax], al; mov rdi, rbx; call rax; 
0x00000000480e35: add [rax], eax; add [rax], al; pop rbp; pop r12; ret; 
0x00000000403089: add [rax], eax; add [rax], al; pop rbx; mov dword ptr [rip+0xdf070], 0x1; ret; 
0x0000000047fd1b: add [rax], eax; add [rax], al; pop rbx; pop rbp; ret; 
0x00000000403094: add [rax], eax; add [rax], al; ret; 
0x0000000045c151: add [rax], eax; add [rax], al; syscall; 
0x00000000436228: add [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000465f17: add [rax], eax; add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x000000004a35e1: add [rax], eax; add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000462153: add [rax], eax; add [rbx+0x5d], bl; pop r12; ret; 
0x0000000040b36c: add [rax], eax; add [rbx-0x7bf06601], al; push 0xffffffff83000001; call qword ptr [rbp+0x16f840f]; 
0x0000000040bfd7: add [rax], eax; add [rbx-0x7bf07201], al; sbb eax, 0x83000001; call far fword ptr [rax+0x174840f]; 
0x0000000040b387: add [rax], eax; add [rbx-0x7bf07201], al; sub eax, 0x83000001; call far fword ptr [rax+0x184840f]; 
0x00000000469d99: add [rax], eax; add [rcx+0x3948fc51], cl; ret; 
0x0000000045ea8d: add [rax], eax; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000481308: add [rax], eax; add [rcx+rcx*4-0x11], cl; call qword ptr [r14+0x20]; 
0x00000000492322: add [rax], eax; add [rcx+rcx*4-0x20], al; pop r12; ret; 
0x00000000480b44: add [rax], eax; add [rcx+rcx*4-0x2], al; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000046baf0: add [rax], eax; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x0000000045e008: add [rax], eax; add [rcx-0x75], cl; jge short 0x000000000045e00f; call rbx; 
0x0000000045e038: add [rax], eax; add [rcx-0x75], cl; jge short 0x000000000045e03f; call rbx; 
0x0000000045e188: add [rax], eax; add [rcx-0x75], cl; notrack call rbx; 
0x0000000048dcdd: add [rax], eax; add [rcx-0x77], cl; ret far; 
0x00000000421bbc: add [rax], eax; add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x00000000423f34: add [rax], eax; add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000004203c2: add [rax], eax; add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000467241: add [rax], eax; add [rcx], dh; ror byte ptr [rcx+rcx*4+0x5c], 0x24; sub [rcx-0x77], cl; ret; 
0x00000000467242: add [rax], eax; add [rcx], dh; ror byte ptr [rcx+rcx*4+0x5c], 0x24; sub [rcx-0x77], cl; ret; 
0x00000000421cb1: add [rax], eax; add [rcx], dh; ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [rbx+0x80]; 
0x00000000427ec8: add [rax], eax; add [rcx], dh; shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xdf; call qword ptr [r15+0x58]; 
0x0000000041ffd6: add [rax], eax; add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x00000000490aa7: add [rax], eax; add [rdi], cl; mov dh, 0x45; add cl, [rax-0x7d]; ret; 
0x000000004248c7: add [rax], eax; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000427b55: add [rax], eax; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000042727e: add [rax], eax; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x00000000452b8c: add [rax], eax; add bl, al; ret; 
0x0000000040b495: add [rax], eax; add cl, ch; mov [0x8d48001f0f000026], eax; add eax, 0x9e078; ret; 
0x00000000430fee: add [rax], eax; cmove rax, rdx; ret; 
0x00000000430f4e: add [rax], eax; cmovne rax, rdx; ret; 
0x00000000431d27: add [rax], eax; lea rax, [rip+0x1bfc0]; cmove rax, rdx; ret; 
0x00000000430fe7: add [rax], eax; lea rax, [rip+0x1d330]; cmove rax, rdx; ret; 
0x00000000431bea: add [rax], eax; lea rdx, [rip+0x16b5d]; cmovne rax, rdx; ret; 
0x00000000430f47: add [rax], eax; lea rdx, [rip+0x1e5e0]; cmovne rax, rdx; ret; 
0x00000000431b97: add [rax], eax; lea rdx, [rip+0x21cc0]; cmovne rax, rdx; ret; 
0x00000000430e87: add [rax], eax; lea rdx, [rip+0x26290]; cmovne rax, rdx; ret; 
0x00000000416012: add [rax], eax; nop [rax]; ret; 
0x0000000043645e: add [rax], ecx; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000464d04: add [rax], ecx; add [rdx], al; add rsp, 0x8; ret; 
0x000000004304ab: add [rax], ecx; sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x00000000410fa4: add [rax], esi; add [rax], al; mov eax, 0x9e; syscall; 
0x00000000402e6d: add [rax], r8b; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000462bb5: add [rax], r8b; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000049e98d: add [rax], r8b; bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x0000000042ad05: add [rax], r8b; call rax; 
0x000000004612fd: add [rax], r8b; endbr64; lea rax, [rip+0x81f55]; ret; 
0x0000000048b5ed: add [rax], r8b; endbr64; mov eax, 0xffffffff; ret; 
0x0000000045f89d: add [rax], r8b; endbr64; mov r10, rcx; mov eax, 0x19; syscall; 
0x00000000411acd: add [rax], r8b; endbr64; mov rax, 0xffffffffffffffc0; add rax, fs:[0x0]; ret; 
0x0000000046fdbd: add [rax], r8b; endbr64; mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x0000000042881d: add [rax], r8b; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x0000000042884d: add [rax], r8b; endbr64; ret; 
0x00000000455acd: add [rax], r8b; lea r11, [rip+0x61c19]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045cbc5: add [rax], r8b; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000045fb85: add [rax], r8b; mov [rax+0x20], rsi; ret; 
0x0000000044f0fd: add [rax], r8b; mov [rdi], rdx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x0000000040aead: add [rax], r8b; mov eax, 0xffffff20; ret; 
0x00000000403495: add [rax], r8b; mov eax, 0xffffffa1; ret; 
0x0000000040a9e5: add [rax], r8b; mov eax, 0xffffffdf; ret; 
0x00000000402c55: add [rax], r8b; mov eax, 0xffffffea; ret; 
0x00000000421e1d: add [rax], r8b; mov eax, 0xffffffff; pop rbp; ret; 
0x000000004289d5: add [rax], r8b; mov eax, 0xffffffff; ret; 
0x0000000045b8dd: add [rax], r8b; mov edi, edx; mov eax, esi; syscall; 
0x000000004553fd: add [rax], r8b; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000049232d: add [rax], r8b; mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x000000004a16e5: add [rax], r8b; mov r8, [r8]; mov [r9], r8; add rsp, 0x8; ret; 
0x0000000040a4a5: add [rax], r8b; mov rax, 0x4dee40; ret; 
0x0000000045beed: add [rax], r8b; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000485165: add [rax], r8b; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000041ec25: add [rax], r8b; mov rax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000004a1835: add [rax], r8b; mov rax, [rsi+0xb0]; add rsp, 0x8; ret; 
0x000000004846bd: add [rax], r8b; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x0000000045669d: add [rax], r8b; mov rax, rdi; ret; 
0x0000000045543d: add [rax], r8b; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x00000000411a15: add [rax], r8b; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x000000004a00dd: add [rax], r8b; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000004a63ed: add [rax], r8b; mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x000000004586bd: add [rax], r8b; movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x000000004586ad: add [rax], r8b; movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x0000000045869d: add [rax], r8b; movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x0000000045868d: add [rax], r8b; movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x0000000045867d: add [rax], r8b; movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x0000000045866d: add [rax], r8b; movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x0000000043990d: add [rax], r8b; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000044efdd: add [rax], r8b; movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x000000004034fd: add [rax], r8b; movzx esi, sil; mov [rip+0xdec16], esi; ret; 
0x000000004034ed: add [rax], r8b; movzx esi, sil; mov [rip+0xdec22], esi; ret; 
0x000000004034dd: add [rax], r8b; movzx esi, sil; mov [rip+0xdec26], esi; ret; 
0x000000004034cd: add [rax], r8b; movzx esi, sil; mov [rip+0xdec32], esi; ret; 
0x0000000040339d: add [rax], r8b; movzx esi, sil; mov [rip+0xded6a], esi; ret; 
0x0000000040338d: add [rax], r8b; movzx esi, sil; mov [rip+0xded7e], esi; ret; 
0x000000004238bd: add [rax], r8b; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000049819d: add [rax], r8b; pop rbp; ret; 
0x00000000401d65: add [rax], r8b; ret; 
0x00000000428545: add [rax], r8b; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x00000000427a65: add [rax], r8b; sub rax, rcx; sub eax, 0x1; ret; 
0x00000000481685: add [rax], r8b; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x0000000040241d: add [rax], r8b; xor eax, eax; pop rbp; ret; 
0x0000000045a765: add [rax], r8b; xor eax, eax; pop rbx; ret; 
0x00000000403995: add [rax], r8b; xor eax, eax; ret; 
0x00000000438edd: add [rax], r8b; xor eax, eax; vzeroupper; ret; 
0x00000000465f16: add [rax], r8d; add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x000000004304aa: add [rax], r9d; sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x0000000048f13a: add [rbp+0x13], dh; mov r8, [rip+0x5632c]; mov rax, r8; ret; 
0x0000000045be8a: add [rbp+0x14], dh; add rsp, 0x28; ret; 
0x0000000040a8c6: add [rbp+0x14f504], cl; add [rax], al; ret; 
0x000000004704c6: add [rbp+0x1], cl; test dword ptr [rax-0x77], 0xfe894cea; mov rdi, r12; call rbx; 
0x0000000049eee7: add [rbp+0x1bf0142], cl; add [rax], al; add [rcx-0x4cf7b], cl; jmp qword ptr [rsi+0x2e]; 
0x000000004088a1: add [rbp+0x1c], esi; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000040534c: add [rbp+0x1d], dh; add rsp, 0x10; pop rbp; ret; 
0x00000000492714: add [rbp+0x1e], dh; add rsp, 0x38; ret; 
0x0000000045aee2: add [rbp+0x1f], dh; add rsp, 0x20; pop rbx; ret; 
0x00000000402962: add [rbp+0x22], dh; add rsp, 0x18; pop rbp; pop r12; ret; 
0x00000000498439: add [rbp+0x24], dh; mov rdx, [rbx+0x10]; mov [rdx], rax; pop rbx; ret; 
0x000000004850ec: add [rbp+0x25], dh; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000041e1ab: add [rbp+0x26], dh; mov eax, r8d; add rsp, 0x118; ret; 
0x000000004919c8: add [rbp+0x28], dh; add rsp, 0x38; ret; 
0x00000000491a94: add [rbp+0x2d], dh; add rsp, 0x58; ret; 
0x000000004a0309: add [rbp+0x31], al; jmp qword ptr [rsi-0x7d]; 
0x0000000042e8ff: add [rbp+0x31], al; rcr byte ptr [rbp+0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x0000000042e097: add [rbp+0x31], al; rcr byte ptr [rbx+0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x00000000484e92: add [rbp+0x35], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000004a1983: add [rbp+0x39], cl; out 0x77, eax; ret far; 
0x0000000042bab2: add [rbp+0x39], cl; ret; 
0x00000000491c06: add [rbp+0x3b], dh; add rsp, 0x68; ret; 
0x0000000042f62e: add [rbp+0x41], bl; pop rsp; pop r13; jmp rax; 
0x00000000497c2d: add [rbp+0x41], bl; pop rsp; pop r13; ret; 
0x00000000480e38: add [rbp+0x41], bl; pop rsp; ret; 
0x0000000047013f: add [rbp+0x42], dh; mov eax, r9d; add rsp, 0x148; ret; 
0x0000000045cbba: add [rbp+0x46], dh; add rsp, 0x68; ret; 
0x0000000045cc49: add [rbp+0x47], dh; add rsp, 0x18; ret; 
0x0000000045cd01: add [rbp+0x47], dh; add rsp, 0x58; ret; 
0x00000000499308: add [rbp+0x480375d2], al; mov [rbx], eax; add rsp, 0x10; pop rbx; ret; 
0x0000000040d8a3: add [rbp+0x48c30009], bh; lea eax, [rip+0x9bd08]; ret; 
0x0000000045cd9f: add [rbp+0x49], dh; add rsp, 0x58; ret; 
0x0000000042e897: add [rbp+0x4c], bl; mov eax, eax; pop r12; pop r13; ret; 
0x0000000042f90e: add [rbp+0x4c], bl; mov esi, esp; pop r12; pop r13; jmp rax; 
0x0000000049231b: add [rbp+0x51], dh; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x00000000408b0b: add [rbp+0x5], dh; add rsp, 0x18; ret; 
0x0000000045cfdd: add [rbp+0x5], dh; add rsp, 0x28; ret; 
0x000000004985a9: add [rbp+0x5], dh; add rsp, 0x38; ret; 
0x00000000404fe9: add [rbp+0x5], dh; add rsp, 0x48; ret; 
0x0000000043daac: add [rbp+0x63490007], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000042d66b: add [rbp+0x6], dh; add rsp, 0x10; pop rbp; ret; 
0x000000004918cd: add [rbp+0x6], dh; add rsp, 0x20; pop rbx; ret; 
0x000000004a28db: add [rbp+0x7], dh; cmp qword ptr [r9+0x38], 0x0; je short 0x00000000004a2934; add rsp, 0x18; ret; 
0x0000000041f947: add [rbp+0x8], dh; add rsp, 0xd8; ret; 
0x00000000485032: add [rbp+0x8], dh; movzx eax, al; add rsp, 0x58; ret; 
0x0000000049ec29: add [rbp+0xa], dh; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000045f779: add [rbp+0xa], dh; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000048f041: add [rbp+0xc], dh; lea rax, [r8+0x1]; mov [rip+0x56421], rax; ret; 
0x0000000040aabf: add [rbp+0xe090], cl; add [rbx+0xd7718fa], al; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000041db67: add [rbp+0xf], al; mov dh, 0xd2; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000049d1af: add [rbp+0xf], cl; lodsd [rsi]; ret; 
0x0000000049d09f: add [rbp+0xf], cl; movsd [rdi], [rsi]; ret; 
0x00000000428536: add [rbp+0xf], dh; sub edx, [rax+0x18]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000045cd80: add [rbp+rbp-0x48], dh; add [rcx], eax; add [rax], al; syscall; 
0x0000000043c561: add [rbp+rcx*4+0x1d], cl; mov [0x8d49931463490007], al; adc al, 0x13; notrack jmp rdx; 
0x0000000044326e: add [rbp+rcx*4+0x1d], cl; mov edx, 0x4900073d; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c6b1: add [rbp+rcx*4+0x1d], cl; mul dword ptr [rax+0x63490007]; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c0d6: add [rbp+rcx*4+0x1d], cl; shl byte ptr [rsi+0x63490007], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b2a4: add [rbp+rcx*4+0x1d], cl; test [rsi+0x634f0007], dh; or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043e371: add [rbp+rcx*4+0x1d], cl; test dword ptr [rbp+0x63490007], 0x8d499314; adc al, 0x13; notrack jmp rdx; 
0x0000000043c021: add [rbp+rcx*4+0x1d], cl; xchg [rdi+0x63490007], esp; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c411: add [rbp+rcx*4+0x1d], cl; xchg edi, eax; mov [0x8d49931463490007], eax; adc al, 0x13; notrack jmp rdx; 
0x000000004839be: add [rbp+rcx*4+0x25], cl; fidiv st, dword ptr [rbp+0x39480005]; ret; 
0x000000004788b6: add [rbp+rcx*4+0x2c], cl; test [rax], eax; add [rax], al; add [rax+0x29], cl; ret; 
0x000000004838e0: add [rbp+rcx*4+0x4c], ecx; and al, 0x20; call rbx; 
0x000000004837bd: add [rbp+rcx*4+0x4c], ecx; and al, 0x28; call rbx; 
0x000000004837bc: add [rbp+rcx*4+0x4c], rcx; and al, 0x28; call rbx; 
0x00000000460188: add [rbp+rdx+0x48], dh; test edx, edx; je short 0x00000000004601a0; lea rdi, [rcx+rsi+0x20]; jmp rdx; 
0x000000004818b2: add [rbp-0x19], dh; and r11d, 0xffffffbb; cmp r11d, 0xa; je short 0x00000000004818c0; ret; 
0x0000000049589f: add [rbp-0x2dce00b9], cl; div ecx; add r8d, eax; mov eax, r8d; ret; 
0x0000000040a7ff: add [rbp-0x3d], bl; mov rax, 0x4dee00; pop rbp; ret; 
0x0000000040a7f6: add [rbp-0x3d], bl; mov rax, 0x4dee40; pop rbp; ret; 
0x0000000040a82c: add [rbp-0x3d], bl; mov rax, 0x4dee80; pop rbp; ret; 
0x0000000040a823: add [rbp-0x3d], bl; mov rax, 0x4deec0; pop rbp; ret; 
0x0000000040a835: add [rbp-0x3d], bl; mov rax, 0x4def00; pop rbp; ret; 
0x0000000040a83e: add [rbp-0x3d], bl; mov rax, 0x4def40; pop rbp; ret; 
0x0000000040a811: add [rbp-0x3d], bl; mov rax, 0x4e1220; pop rbp; ret; 
0x0000000040a808: add [rbp-0x3d], bl; mov rax, 0x4e1260; pop rbp; ret; 
0x0000000040a81a: add [rbp-0x3d], bl; mov rax, 0x4e12a0; pop rbp; ret; 
0x0000000040a776: add [rbp-0x3d], bl; nop [rax]; mov rax, 0x4dec40; pop rbp; ret; 
0x0000000040a796: add [rbp-0x3d], bl; nop [rax]; mov rax, 0x4dec80; pop rbp; ret; 
0x0000000040a786: add [rbp-0x3d], bl; nop [rax]; mov rax, 0x4decc0; pop rbp; ret; 
0x0000000040a7d6: add [rbp-0x3d], bl; nop [rax]; mov rax, 0x4ded00; pop rbp; ret; 
0x0000000040a7c6: add [rbp-0x3d], bl; nop [rax]; mov rax, 0x4ded40; pop rbp; ret; 
0x0000000040a7e6: add [rbp-0x3d], bl; nop [rax]; mov rax, 0x4ded80; pop rbp; ret; 
0x0000000040a7b6: add [rbp-0x3d], bl; nop [rax]; mov rax, 0x4dedc0; pop rbp; ret; 
0x0000000040a7a6: add [rbp-0x3d], bl; nop [rax]; mov rax, 0x4e11e0; pop rbp; ret; 
0x0000000040a76c: add [rbp-0x3d], bl; nop; mov rax, 0x4e11a0; pop rbp; ret; 
0x00000000401d60: add [rbp-0x3d], ebx; nop [rax+rax]; ret; 
0x0000000042d1b2: add [rbp-0x3d], ebx; nop [rax]; ret; 
0x0000000040a822: add [rbp-0x3d], r11b; mov rax, 0x4deec0; pop rbp; ret; 
0x0000000040a810: add [rbp-0x3d], r11b; mov rax, 0x4e1220; pop rbp; ret; 
0x0000000040a819: add [rbp-0x3d], r11b; mov rax, 0x4e12a0; pop rbp; ret; 
0x0000000040a775: add [rbp-0x3d], r11b; nop [rax]; mov rax, 0x4dec40; pop rbp; ret; 
0x0000000040a7b5: add [rbp-0x3d], r11b; nop [rax]; mov rax, 0x4dedc0; pop rbp; ret; 
0x0000000040a76b: add [rbp-0x3d], r11b; nop; mov rax, 0x4e11a0; pop rbp; ret; 
0x0000000045f82e: add [rbp-0x3dbbf040], al; ret; 
0x0000000045c14b: add [rbp-0x47ef8a40], al; add [rax], eax; add [rax], al; syscall; 
0x0000000045c31b: add [rbp-0x47ef8a40], al; add eax, [rax]; add [rax], al; syscall; 
0x0000000040b66c: add [rbp-0x5f6f7240], al; sldt [rax]; cmovns eax, edx; add rsp, 0x8; ret; 
0x0000000045e4c6: add [rbp-0x75], cl; adc [r13-0x7b], r9b; shl byte ptr [rbp+0x7d], 0x49; mov edi, [rdi]; call rbx; 
0x00000000403046: add [rbp-0x76e68740], al; ret; 
0x00000000434c4d: add [rbp-0x77], cl; ret far; 
0x00000000465f19: add [rbp-0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x00000000497d6d: add [rbp-0x7cc98a40], al; sub eax, 0x4d29b; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x00000000486405: add [rbp-0x7d7af00a], al; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000045ad89: add [rbx+0x117401f8], al; cmp eax, 0x2; je short 0x000000000045ada8; xor eax, eax; ret; 
0x0000000044ab09: add [rbx+0x148b8104], cl; xchg ecx, eax; sub eax, edx; ret; 
0x00000000443072: add [rbx+0x157890e], ecx; mov [rdi], ecx; ret; 
0x00000000408a4f: add [rbx+0x2890447], cl; xor eax, eax; ret; 
0x00000000408a5f: add [rbx+0x2890847], cl; xor eax, eax; ret; 
0x00000000408a6f: add [rbx+0x2890c47], cl; xor eax, eax; ret; 
0x00000000408a7f: add [rbx+0x2891047], cl; xor eax, eax; ret; 
0x00000000408a8f: add [rbx+0x2891447], cl; xor eax, eax; ret; 
0x00000000408a9f: add [rbx+0x2891847], cl; xor eax, eax; ret; 
0x00000000408aaf: add [rbx+0x2891c47], cl; xor eax, eax; ret; 
0x00000000408abf: add [rbx+0x2892047], cl; xor eax, eax; ret; 
0x000000004250af: add [rbx+0x31], bl; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x00000000463dc5: add [rbx+0x31], ebx; rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; ret; 
0x00000000407d5f: add [rbx+0x327707f8], al; lea rdx, [rip+0xa16cc]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000456a7e: add [rbx+0x3568b0e], cl; mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x0000000045542f: add [rbx+0x3568b0e], cl; mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x00000000407cef: add [rbx+0x387707f8], al; lea rdx, [rip+0xa16fc]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000045c33c: add [rbx+0x410c247c], cl; mov eax, eax; mov eax, 0x3; syscall; 
0x00000000495919: add [rbx+0x44], ebx; mov eax, eax; pop rbp; pop r12; ret; 
0x000000004560ff: add [rbx+0x4568a0e], cl; mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x00000000456a4f: add [rbx+0x477880e], cl; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x0000000045540f: add [rbx+0x477880e], cl; mov [rdi], ecx; ret; 
0x00000000454f3e: add [rbx+0x48028901], cl; lea eax, [rdx+0x3]; ret; 
0x0000000045c35e: add [rbx+0x480c2444], cl; add esp, 0x18; ret; 
0x000000004111ff: add [rbx+0x480c247c], cl; mov esi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x0000000045708f: add [rbx+0x48178916], cl; lea eax, [rdi+0x3]; vzeroupper; ret; 
0x0000000045a7aa: add [rbx+0x48], bl; cmove eax, edx; ret; 
0x00000000455c8f: add [rbx+0x49178916], cl; sub eax, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000004564f0; ret; 
0x000000004677a4: add [rbx+0x4be02e0], al; add [rax], al; add [rcx-0x77], al; ret; 
0x0000000042dfd3: add [rbx+0x4c], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000043d9ce: add [rbx+0x4e8bf956], cl; cld; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043d7ce: add [rbx+0x4e8bfa56], cl; cld; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043d5ce: add [rbx+0x4e8bfb56], cl; cld; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x00000000402077: add [rbx+0x57483ff], al; cmp edi, 0xffffffa1; jne short 0x0000000000402083; ret; 
0x000000004429be: add [rbx+0x5789fc56], cl; cld; ret; 
0x00000000428909: add [rbx+0x58901e8], al; mov eax, [0x5c7484975000bc3]; cwde; ret; 
0x00000000482473: add [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x00000000424bf8: add [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000409078: add [rbx+0x5d], bl; pop r12; ret; 
0x0000000045f782: add [rbx+0x5d], bl; ret; 
0x000000004a32c9: add [rbx+0x63490843], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x00000000405a90: add [rbx+0x63491053], cl; adc al, 0x97; add rdx, r15; notrack jmp rdx; 
0x00000000405adc: add [rbx+0x63492043], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x00000000455b09: add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000048baaf: add [rbx+0x7525087b], al; adc ecx, [rbx+rcx*4+0x33]; mov rax, [rbx+0x10]; add rax, [r13]; call rax; 
0x00000000411492: add [rbx+0x7d7745f9], al; lea rsi, [rip+0xa3381]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x0000000045dc95: add [rbx+0x94901e0], eax; ret; 
0x0000000042d1ab: add [rbx+0xb562d2d], al; add [rcx], al; pop rbp; ret; 
0x0000000042e4c4: add [rbx+0xb], al; add [rax-0x73], cl; add eax, 0xfffff391; mov [rip+0xb42ea], rax; ret; 
0x000000004288d5: add [rbx+0xbc3d705], al; add [rcx], al; pop rbx; ret; 
0x0000000049901b: add [rbx+0xc], dh; mov rdx, [rip+0x4c113]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000412667: add [rbx+0xd20d215], cl; add [rbx+rcx*4+0x3d], cl; ret; 
0x0000000040aac5: add [rbx+0xd7718fa], al; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000044306f: add [rbx+0xe8b0156], cl; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x00000000442fff: add [rbx+0xe8b0256], cl; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x00000000442f8f: add [rbx+0xe8b0356], cl; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x00000000471a65: add [rbx+rcx*4+0x15], cl; ret far; 
0x0000000041266d: add [rbx+rcx*4+0x3d], cl; ret; 
0x00000000416d48: add [rbx+rcx*4+0x4], cl; and al, 0xe9; idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000416f38: add [rbx+rcx*4+0x4], cl; and al, 0xe9; xchg edi, eax; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000048f03a: add [rbx+rcx*4+0x5], cl; add eax, 0x490c7500; lea eax, [rax+0x1]; mov [rip+0x56421], rax; ret; 
0x0000000041ea87: add [rbx+rcx*4+0x63], cl; or [rax-0x7d], cl; ret; 
0x00000000479e92: add [rbx+rcx*4-0x5b], cl; clc; idiv bh; dec dword ptr [rbp+0x63]; ret; 
0x00000000407d32: add [rbx-0x2388f908], eax; mov eax, 0x1; ret; 
0x0000000048e891: add [rbx-0x28f7b], cl; jmp qword ptr [rsi+0xf]; 
0x0000000040308c: add [rbx-0x39], bl; add eax, 0xdf070; add [rax], eax; add [rax], al; ret; 
0x0000000048116f: add [rbx-0x3b7cb7ff], cl; or [rbx+0x5d], bl; ret; 
0x00000000411288: add [rbx-0x3d76fd38], al; mov esi, edx; mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x0000000045a87e: add [rbx-0x3d], bl; mov eax, 0x10; pop rbx; ret; 
0x0000000045a877: add [rbx-0x3d], bl; mov eax, 0x20; pop rbx; ret; 
0x0000000045a870: add [rbx-0x3d], bl; mov eax, 0x30; pop rbx; ret; 
0x0000000045a869: add [rbx-0x3d], bl; mov eax, 0x40; pop rbx; ret; 
0x0000000045a88c: add [rbx-0x3d], bl; mov eax, 0x80; pop rbx; ret; 
0x0000000045a885: add [rbx-0x3d], bl; mov eax, 0x8; pop rbx; ret; 
0x0000000047c180: add [rbx-0x4d77b], cl; dec dword ptr [rcx-0x4df73]; jmp far fword ptr [rcx]; 
0x0000000047576f: add [rbx-0x4e763], cl; inc dword ptr [rbp+0x22850fdb]; sbb [rax], eax; add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x0000000047c1d7: add [rbx-0x4ef43], eax; jmp qword ptr [rax]; 
0x0000000047cba0: add [rbx-0x4ff43], al; call qword ptr [rax]; 
0x0000000047c1a8: add [rbx-0x4ff43], eax; call qword ptr [rax]; 
0x0000000047614a: add [rbx-0x50f43], eax; call qword ptr [rax]; 
0x00000000475d9f: add [rbx-0x67b7df18], al; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004754fe: add [rbx-0x67b7df18], al; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000476394: add [rbx-0x67b7df18], al; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0x6909b]; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004758e4: add [rbx-0x67b7df18], al; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0x69d4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004a346f: add [rbx-0x70f0ee06], al; ret; 
0x000000004935f9: add [rbx-0x70f0fb08], al; cmp eax, 0xc7000015; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x000000004983a4: add [rbx-0x72b7f7bd], cl; adc eax, 0x33bed; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000454f4f: add [rbx-0x75fd76ff], cl; add al, 0x88; add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x00000000450c0f: add [rbx-0x75fd76ff], cl; add al, 0x88; add al, 0x48; mov eax, edi; ret; 
0x000000004096cc: add [rbx-0x78f0f807], al; mov ecx, 0x48fffffc; movsxd eax, [rbx+rcx*4]; add rax, rbx; notrack jmp rax; 
0x000000004727e5: add [rbx-0x78f0f808], al; mov [0x4c86046349000006], al; add eax, esi; notrack jmp rax; 
0x000000004115e8: add [rbx-0x7bf00008], al; out 0x0, al; add [rax], al; add rsp, 0x98; ret; 
0x0000000040b365: add [rbx-0x7bf06501], al; add [r8], eax; add [rbx-0x7bf06601], al; push 0xffffffff83000001; call qword ptr [rbp+0x16f840f]; 
0x0000000040b36e: add [rbx-0x7bf06601], al; push 0xffffffff83000001; call qword ptr [rbp+0x16f840f]; 
0x0000000040bfd0: add [rbx-0x7bf06901], al; add [rax], ax; add [rbx-0x7bf07201], al; sbb eax, 0x83000001; call far fword ptr [rax+0x174840f]; 
0x0000000040bfd9: add [rbx-0x7bf07201], al; sbb eax, 0x83000001; call far fword ptr [rax+0x174840f]; 
0x0000000040b389: add [rbx-0x7bf07201], al; sub eax, 0x83000001; call far fword ptr [rax+0x184840f]; 
0x0000000041b2b7: add [rbx-0x7bf0fc08], al; xchg esi, eax; sbb eax, [rax]; add [rbx-0x7bf0fe08], al; ret; 
0x00000000417a63: add [rbx-0x7bf0fd08], al; call qword ptr [rcx]; 
0x0000000041b350: add [rbx-0x7bf0fe08], al; ret far; 
0x0000000041701b: add [rbx-0x7bf0fe08], al; ret; 
0x000000004979ce: add [rbx-0x7cb7fbbd], cl; ret; 
0x0000000044e8b3: add [rbx-0x7cf0fb06], al; ret; 
0x00000000461fe5: add [rbx-0x7d], bl; loopne 0x0000000000461fe2; or eax, 0x1; mov [rip+0x83961], eax; ret; 
0x00000000462015: add [rbx-0x7d], bl; loopne 0x0000000000462012; or eax, 0x3; mov [rip+0x83931], eax; ret; 
0x00000000462085: add [rbx-0x7d], bl; loopne 0x0000000000462051; or eax, 0x8; mov [rip+0x838c1], eax; ret; 
0x000000004620b5: add [rbx-0x7d], bl; loopne 0x0000000000462081; or eax, 0x18; mov [rip+0x83891], eax; ret; 
0x00000000428547: add [rbx], ch; push rax; adc [rbx-0x2fd6efb9], cl; ret; 
0x0000000048524f: add [rcx+0x104e23c1], cl; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000041d866: add [rcx+0x146348d2], cl; xchg esi, eax; add rdx, rsi; notrack jmp rdx; 
0x000000004296a5: add [rcx+0x1], al; adc eax, [rbp+0x1]; sbb [r8+0x39], cl; ret; 
0x0000000042105c: add [rcx+0x1], cl; ret; 
0x0000000040a3bf: add [rcx+0x28ff], al; jne 0x000000000040a4a0; mov rax, 0x4decc0; ret; 
0x00000000437c75: add [rcx+0x29], cl; ret far; 
0x00000000421bef: add [rcx+0x2b], cl; adc [r8+0x1], r9b; ret; 
0x00000000454f81: add [rcx+0x3418b02], ecx; mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x00000000450c31: add [rcx+0x3418b02], ecx; mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x00000000452bff: add [rcx+0x3518911], cl; ret; 
0x00000000469d9b: add [rcx+0x3948fc51], cl; ret; 
0x0000000048e4e7: add [rcx+0x39], al; ret; 
0x0000000048322f: add [rcx+0x39], cl; ret; 
0x00000000488d66: add [rcx+0x3d8b44d8], cl; scasd [rdi]; ret far; 
0x00000000454f61: add [rcx+0x418b6602], ecx; add al, 0x66; mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x00000000450c21: add [rcx+0x418b6602], ecx; add al, 0x66; mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x00000000454f51: add [rcx+0x4418a02], ecx; mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x00000000450c11: add [rcx+0x4418a02], ecx; mov [rdx+0x4], al; mov rax, rdi; ret; 
0x00000000408a33: add [rcx+0x46348f6], cl; mov cl, 0x48; add eax, ecx; notrack jmp rax; 
0x000000004034af: add [rcx+0x46348ff], cl; mov edx, 0x3ed00148; jmp rax; 
0x0000000041e15e: add [rcx+0x48050fc8], cl; mov edi, eax; mov eax, 0xba; syscall; 
0x0000000045640f: add [rcx+0x57896617], cl; add al, 0xc3; nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x0000000043b31e: add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004727ee: add [rcx+0x63], cl; add al, 0x86; add rax, r14; notrack jmp rax; 
0x00000000439b80: add [rcx+0x63], cl; or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x00000000455288: add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000048712b: add [rcx+0x63], cl; push rsp; xchg ebp, eax; add [rcx+rax-0x16], cl; notrack jmp rdx; 
0x0000000045dc98: add [rcx+0x9], ecx; ret; 
0x000000004a528e: add [rcx+0xf], al; mov bh, 0x5d; and [rsi-0x9], ah; ret; 
0x0000000048efa8: add [rcx+rax-0x10], dh; inc dword ptr [r8+0x10]; pop rbx; pop rbp; ret; 
0x00000000487130: add [rcx+rax-0x16], cl; notrack jmp rdx; 
0x000000004a29db: add [rcx+rax-0x18], cl; notrack jmp rax; 
0x0000000045e4fc: add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000042bdd7: add [rcx+rcx*4+0x54], cl; and al, 0x18; mov [rsp+0x10], r8; call rax; 
0x0000000048130a: add [rcx+rcx*4-0x11], cl; call qword ptr [r14+0x20]; 
0x000000004a63f7: add [rcx+rcx*4-0x11], cl; call rbx; 
0x0000000042f7b9: add [rcx+rcx*4-0x11], cl; mov eax, 0xca; syscall; 
0x0000000047058e: add [rcx+rcx*4-0x12], cl; mov rdi, r14; mov rdx, r12; call rbp; 
0x0000000048027c: add [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000423dad: add [rcx+rcx*4-0x16], al; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x00000000483c36: add [rcx+rcx*4-0x16], cl; mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x000000004736b2: add [rcx+rcx*4-0x16], cl; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000473d57: add [rcx+rcx*4-0x16], cl; mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000411a17: add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x000000004a00df: add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x00000000473409: add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000042398d: add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x000000004243c0: add [rcx+rcx*4-0x16], cl; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000483ae2: add [rcx+rcx*4-0x16], cl; xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x0000000042e226: add [rcx+rcx*4-0x19], cl; mov eax, 0xca; syscall; 
0x00000000426f8c: add [rcx+rcx*4-0x19], ecx; call qword ptr [rbx+0x18]; 
0x000000004219cf: add [rcx+rcx*4-0x1], cl; call qword ptr [r13+0x80]; 
0x00000000421bc5: add [rcx+rcx*4-0x1], cl; call qword ptr [rbp+0x80]; 
0x000000004303fa: add [rcx+rcx*4-0x1], cl; mov eax, 0xca; syscall; 
0x00000000430c1f: add [rcx+rcx*4-0x1a], cl; call rax; 
0x000000004847df: add [rcx+rcx*4-0x1a], cl; mov edi, ebp; mov eax, 0xe4; syscall; 
0x000000004218f5: add [rcx+rcx*4-0x1e], al; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000420913: add [rcx+rcx*4-0x1e], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000047fbdd: add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000420b27: add [rcx+rcx*4-0x1e], cl; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000492324: add [rcx+rcx*4-0x20], al; pop r12; ret; 
0x0000000040aa57: add [rcx+rcx*4-0x20], al; pop rbp; pop r12; pop r13; ret; 
0x0000000042006b: add [rcx+rcx*4-0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x00000000481d80: add [rcx+rcx*4-0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x00000000480b46: add [rcx+rcx*4-0x2], al; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x00000000422f84: add [rcx+rcx*4-0x38], al; syscall; 
0x00000000415d66: add [rcx+rcx*4-0x38], cl; pop rbx; pop rbp; pop r12; ret; 
0x00000000470210: add [rcx+rcx*4-0x3a], cl; mov eax, 0xe; syscall; 
0x0000000046d364: add [rcx+rcx*4-0x40], al; pop rbp; pop r12; ret; 
0x0000000041fd64: add [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x0000000042e0b8: add [rcx+rcx*4-0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x0000000042c580: add [rcx+rcx*4-0x40], cl; ret; 
0x00000000484602: add [rcx+rcx*4-0x40], cl; shr rax, 0x2; vzeroupper; ret; 
0x0000000048348f: add [rcx+rcx*4-0x40], cl; vzeroupper; ret; 
0x00000000420d5c: add [rcx+rcx*4-0x40], eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000497d78: add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x0000000042455c: add [rcx+rcx*4-0x6], cl; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000041e407: add [rcx+rcx*4-0xe], cl; mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x00000000431915: add [rcx+rcx*8+0x48], dh; lea eax, [rip+0x7e61]; test byte ptr [rip+0xb34bf], 0x1; je short 0x00000000004318e1; ret; 
0x00000000431914: add [rcx+rcx*8+0x48], sil; lea eax, [rip+0x7e61]; test byte ptr [rip+0xb34bf], 0x1; je short 0x00000000004318e1; ret; 
0x0000000048566c: add [rcx+rdi-0x37], dh; xor eax, eax; ret; 
0x00000000461334: add [rcx+rdi-0x3d], al; je short 0x0000000000461348; mov [rip+0x80760], eax; pop rbx; ret; 
0x0000000048f0d7: add [rcx+rdi-0x40], cl; ja short 0x000000000048f0e8; add rsp, 0x8; ret; 
0x0000000045d191: add [rcx+rsi+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x0000000049473e: add [rcx-0x1177b], cl; jmp far fword ptr [rcx]; 
0x000000004033c3: add [rcx-0x137cb701], cl; or [rax+0x63], cl; add al, 0xba; add rax, rdx; notrack jmp rax; 
0x00000000423b50: add [rcx-0x39], cl; mov al, 0x3b; add [rax-0x39], r9b; ret; 
0x0000000048a363: add [rcx-0x3f], cl; in al, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x00000000470068: add [rcx-0x46], al; or [rax], al; add [rax], al; mov eax, 0xd; syscall; 
0x000000004021a3: add [rcx-0x476ac06], cl; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x0000000047ca6f: add [rcx-0x47], al; add [rax], eax; add [rax], al; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004607bc: add [rcx-0x48], al; add [rax], al; add [rax+0x1], cl; ret far; 
0x0000000047b495: add [rcx-0x4a773], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000474fe0: add [rcx-0x4b773], cl; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000049eeef: add [rcx-0x4cf7b], cl; jmp qword ptr [rsi+0x2e]; 
0x0000000046b892: add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x00000000469d50: add [rcx-0x73], cl; add r9b, [r8+0x39]; ret; 
0x0000000042b75e: add [rcx-0x73], cl; dec dword ptr [rcx-0x7b]; ret; 
0x0000000041e313: add [rcx-0x75], cl; cmp al, 0x24; mov rdx, r14; mov rax, [rsp]; call rax; 
0x0000000045e00a: add [rcx-0x75], cl; jge short 0x000000000045e00f; call rbx; 
0x0000000045e03a: add [rcx-0x75], cl; jge short 0x000000000045e03f; call rbx; 
0x0000000045e06a: add [rcx-0x75], cl; jge short 0x000000000045e06f; call rbx; 
0x00000000421ddc: add [rcx-0x75], cl; mov bh, 0x90; add [rax], al; add cl, ch; ret far; 
0x0000000045d344: add [rcx-0x75], cl; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000045e0ca: add [rcx-0x75], cl; notrack call rbx; 
0x0000000047b5c9: add [rcx-0x75], cl; test [rax+rbx*8], ah; add [rax], al; add [rax-0x39], cl; ret; 
0x00000000450c01: add [rcx-0x776b7fe], ecx; ret; 
0x00000000452a31: add [rcx-0x776b7fe], ecx; sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000452d30; ret; 
0x000000004296c9: add [rcx-0x77], al; imul esp, [rbx*2+0x10438941], 0x41; mov dword ptr [rbx+0x14], 0x0; ret; 
0x000000004677ac: add [rcx-0x77], al; ret; 
0x0000000046a2bd: add [rcx-0x77], al; xor ecx, [rcx-0x77]; ret far; 
0x00000000415f07: add [rcx-0x77], cl; fisttp word ptr [rax-0x7d], st; ret; 
0x0000000042c5fa: add [rcx-0x77], cl; push rcx; or [rax+0x39], cl; ret; 
0x0000000047b98a: add [rcx-0x77], cl; ret far; 
0x0000000047e0cf: add [rcx-0x77], cl; ret; 
0x00000000472d15: add [rcx-0x77], ecx; push rdi; sub dh, al; add [rcx-0x7d], cl; ret; 
0x0000000049dd80: add [rcx-0x77], ecx; push rsp; ret; 
0x0000000046da06: add [rcx-0x77cf7bd], ecx; std; je short 0x000000000046da28; pop rbx; ret; 
0x000000004735ac: add [rcx-0x7d], al; in al, dx; add [rax-0x8ff43], eax; jmp qword ptr [rax]; 
0x0000000049484f: add [rcx-0x7d], al; in eax, dx; add [rax+0x39], ecx; ret; 
0x00000000479f66: add [rcx-0x7d], al; out dx, eax; add [rax-0x93343], eax; jmp qword ptr [rax]; 
0x0000000045d3f0: add [rcx-0x7d], cl; ret far; 
0x00000000472d1b: add [rcx-0x7d], cl; ret; 
0x00000000465aae: add [rcx-0x7d], cl; rol byte ptr [rcx], 0x89; xor [rax-0x7d], ecx; ret; 
0x00000000467c9b: add [rcx-0x7d], ecx; ret; 
0x0000000047d8c0: add [rcx-0x7f], al; clc; fdivp st(7), st; call far fword ptr [rdi]; 
0x0000000047577d: add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x0000000048302b: add [rcx-0x876b730], cl; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x000000004793be: add [rcx-0x8ef63], cl; dec dword ptr [rax-0x77]; ret far; 
0x0000000046598f: add [rcx-0xa], al; ret; 
0x00000000429736: add [rcx], al; add [rax], al; add [rax-0x77], cl; add eax, 0xb900e; ret; 
0x0000000042970d: add [rcx], al; add [rax], al; add [rax-0x77], cl; add eax, 0xb902f; ret; 
0x000000004296ed: add [rcx], al; add [rax], al; add [rax-0x77], cl; add eax, 0xb9047; ret; 
0x000000004590ef: add [rcx], al; add [rax], al; sub rax, rdx; ret; 
0x0000000041f0e7: add [rcx], al; add rsp, 0x10; mov eax, r8d; pop rbx; ret; 
0x0000000041eea2: add [rcx], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000045cd79: add [rcx], al; cmp eax, 0x410000; je short 0x000000000045cdb0; mov eax, 0x101; syscall; 
0x00000000431924: add [rcx], al; je short 0x00000000004318e1; ret; 
0x0000000045cd7e: add [rcx], al; je short 0x000000000045cdb0; mov eax, 0x101; syscall; 
0x00000000497d77: add [rcx], al; mov eax, r8d; pop rbx; ret; 
0x00000000401d5f: add [rcx], al; pop rbp; ret; 
0x000000004288db: add [rcx], al; pop rbx; ret; 
0x00000000426165: add [rcx], al; ret; 
0x000000004718c5: add [rcx], al; xor eax, eax; add rsp, 0x8; ret; 
0x000000004109dc: add [rcx], bh; or eax, 0x32048b00; mov [rip+0xd38ff], eax; lea rax, [rip+0xd38f0]; ret; 
0x00000000461353: add [rcx], bh; ret; 
0x0000000046e8b4: add [rcx], ch; ret far; 
0x0000000040b331: add [rcx], ch; ret; 
0x00000000415cdc: add [rcx], dh; call qword ptr [rax+0x480ab60f]; 
0x00000000463ee5: add [rcx], dh; div byte ptr [rcx]; jmp qword ptr [rsi+0xf]; 
0x00000000421bbe: add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x00000000423f36: add [rcx], dh; idiv byte ptr [rdx+0x1]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000004219c8: add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, r15; call qword ptr [r13+0x80]; 
0x000000004203c4: add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000004a79b5: add [rcx], dh; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000481aa9: add [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x000000004a3b66: add [rcx], dh; rcr byte ptr [rbx+0x5d], 0xc3; nop [rax]; endbr64; ret; 
0x000000004a1267: add [rcx], dh; rol byte ptr [rbp-0x7b], 0xc0; jne 0x00000000004a11c0; add rsp, 0x38; ret; 
0x0000000042c190: add [rcx], dh; ror byte ptr [rax-0x73], 0x3c; ret; 
0x000000004246e7: add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x00000000423cd1: add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x00000000423fd3: add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x00000000467244: add [rcx], dh; ror byte ptr [rcx+rcx*4+0x5c], 0x24; sub [rcx-0x77], cl; ret; 
0x00000000421cb3: add [rcx], dh; ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [rbx+0x80]; 
0x0000000041e189: add [rcx], dh; ror byte ptr [rcx+rcx*4-0x32], cl; mov edi, 0x2; mov eax, 0xe; syscall; 
0x00000000427eca: add [rcx], dh; shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xdf; call qword ptr [r15+0x58]; 
0x00000000491556: add [rcx], dh; shr al, 0xb2; ret far; 
0x0000000049931f: add [rcx], dh; shr bl, 0xcf; nop [rax]; call rax; 
0x0000000045bbc4: add [rcx], dh; test byte ptr [rax-0x73], 0x3d; jge short 0x000000000045bb8e; add eax, 0xe8c03100; ret far; 
0x0000000041ffd8: add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x0000000045bfc5: add [rcx], eax; add [rax], al; syscall; 
0x0000000047980b: add [rcx], eax; ret; 
0x00000000408854: add [rcx], ebx; rol byte ptr [rbx+0xfc3eae0], 0x1f; add [rax], r8b; mov eax, 0xffffffea; ret; 
0x000000004838dc: add [rcx], esi; shr byte ptr [rdx+0x1], cl; lea r9, [rsp+0x20]; call rbx; 
0x0000000045a5d6: add [rdi+0x12], dh; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x0000000045a386: add [rdi+0x15], esi; jb short 0x000000000045a38d; mov [rdi], cl; ret; 
0x000000004a3829: add [rdi+0x1], bh; call rax; 
0x000000004595f7: add [rdi+0x26], esi; jb short 0x0000000000459601; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000045a4f4: add [rdi+0x2c], esi; jb short 0x000000000045a4fb; mov [rdi], cl; vzeroupper; ret; 
0x0000000045bec0: add [rdi+0x2d], esi; mov eax, 0x4; syscall; 
0x00000000484f50: add [rdi+0x2d], esi; mov eax, 0x6; syscall; 
0x0000000045bf1f: add [rdi+0x2e], esi; mov eax, 0x5; syscall; 
0x0000000049c1ae: add [rdi+0x3005], bh; mov eax, 0x9e; syscall; 
0x00000000484fb5: add [rdi+0x30], esi; mov eax, 0x106; syscall; 
0x0000000045a6bc: add [rdi+0x3a], esi; jb short 0x000000000045a6c3; mov [rdi], cl; vzeroupper; ret; 
0x00000000459967: add [rdi+0x3b], esi; jb short 0x0000000000459971; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000459db7: add [rdi+0x53], esi; jb short 0x0000000000459dc1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000431e30: add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000437bcc: add [rdi+0x63], cl; or al, 0x8a; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044c53c: add [rdi+0x63], cl; or al, 0x8a; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004407fa: add [rdi+0x63], cl; or al, 0x8b; add r9, r11; notrack jmp r9; 
0x0000000043b24a: add [rdi+0x63], cl; or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000045bb1d: add [rdi+0x68], dh; lea rdx, [rip+0x5c375]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000045a576: add [rdi+0x7b], dh; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x0000000045de08: add [rdi+rbp+0x48], dh; mov edi, ebp; xor esi, esi; call r12; 
0x000000004a18d8: add [rdi+rbp], bh; ja 0x0000000000401723; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x000000004a28e2: add [rdi+rcx*2+0x48], dh; add esp, 0x18; ret; 
0x0000000040dbf1: add [rdi+rcx+0x45], cl; loopne 0x000000000040dc43; mov eax, esp; pop r12; ret; 
0x0000000049fe43: add [rdi-0x2c517], bl; jmp qword ptr [rsi+0xf]; 
0x00000000407d24: add [rdi-0x3f], esi; cmp esi, edx; setb al; ret; 
0x0000000040dc61: add [rdi-0x6e], dh; lea rdx, [rip+0x9c04d]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000481558: add [rdi], cl; adc [rax+0x40], eax; pop rbx; ret; 
0x00000000408803: add [rdi], cl; adc [rax+0xb0], ebx; movups [rax+0xc0], xmm4; pop rbx; ret; 
0x0000000040880a: add [rdi], cl; adc [rax+0xc0], esp; pop rbx; ret; 
0x000000004275dd: add [rdi], cl; adc [rbp+0x38], eax; pop rbp; pop r12; ret; 
0x00000000426963: add [rdi], cl; adc [rbx+0x48], eax; pop rbx; ret; 
0x00000000490cdc: add [rdi], cl; adc [rbx], eax; pop rbx; ret; 
0x00000000430402: add [rdi], cl; add eax, 0xfffebee9; jmp qword ptr [rsi+0xf]; 
0x000000004156e6: add [rdi], cl; add eax, 0xfffefbe9; jmp qword ptr [rsi-0x70]; 
0x0000000042cf32: add [rdi], cl; add eax, 0xffff01e9; jmp qword ptr [rsi+0xf]; 
0x0000000041ecb2: add [rdi], cl; add eax, 0xffff28e9; jmp qword ptr [rsi+0xf]; 
0x00000000426787: add [rdi], cl; add eax, 0xffff2be9; call qword ptr [rax+0xff0c889]; 
0x0000000042802f: add [rdi], cl; add eax, 0xffff3ee9; jmp qword ptr [rsi+0xf]; 
0x000000004261ec: add [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x0000000042a66a: add [rdi], cl; add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x000000004431bf: add [rdi], cl; mov bh, 0x16; mov [rdi], dx; ret; 
0x0000000044e94f: add [rdi], cl; mov bh, 0x16; mov [rdi], dx; vzeroupper; ret; 
0x0000000044322f: add [rdi], cl; mov dh, 0x16; mov [rdi], dl; ret; 
0x0000000044efdf: add [rdi], cl; mov dh, 0x16; mov [rdi], dl; vzeroupper; ret; 
0x00000000415ec7: add [rdi], cl; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x00000000490aa9: add [rdi], cl; mov dh, 0x45; add cl, [rax-0x7d]; ret; 
0x0000000043aa2f: add [rdi], cl; mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x0000000043a7e2: add [rdi], cl; mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x0000000045868f: add [rdi], cl; mov dh, 0x47; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x0000000045867f: add [rdi], cl; mov dh, 0x47; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x0000000041f3cf: add [rdi], cl; mov dh, 0x4b; add [rax-0x7d], ecx; ret; 
0x0000000043990f: add [rdi], cl; mov dh, 0x7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000425531: add [rdi], cl; mov dh, 0xc0; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000425563: add [rdi], cl; mov dh, 0xc0; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x000000004a1690: add [rdi], cl; mov dh, 0xc0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000047ea91: add [rdi], cl; mov dh, 0xc0; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000045a7ef: add [rdi], cl; mov dh, 0xc1; pop rbx; ret; 
0x000000004331df: add [rdi], cl; mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000043921f: add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x0000000043920f: add [rdi], cl; mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x000000004391ef: add [rdi], cl; mov esp, 0x448d48c0; cmp al, dh; ret; 
0x000000004828cf: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x0000000000482910; add rax, rdi; ret; 
0x000000004828de: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x10]; ret; 
0x00000000498c2f: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x0000000000498c70; add rax, rdi; ret; 
0x00000000498c3e: add [rdi], cl; mov esp, 0xc22948c0; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x10]; ret; 
0x000000004391ff: add [rdi], cl; mov esp, 0xf80148c0; ret; 
0x0000000041e13f: add [rdi], cl; sub [rsp+0xd0], eax; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000041e147: add [rdi], cl; sub [rsp+0xe0], eax; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000041e14f: add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x00000000437c6f: add [rdi], cl; sub dword ptr [rsi+0xe], 0x0; add [rcx+0x29], cl; ret far; 
0x00000000470237: add [rdi], cl; test [rax+0x48000000], ebx; add esp, 0x98; ret; 
0x00000000402af8: add [rdi], cl; test [rax+0x48000000], edx; add esp, 0xc8; ret; 
0x0000000049e591: add [rdi], cl; test [rbp], edi; add [rax], al; leave; ret; 
0x0000000045c265: add [rdi], cl; test [rcx+0x48000000], ebx; add esp, 0x68; ret; 
0x0000000041412c: add [rdi], cl; test [rcx+rdi*8-0x1], eax; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000499d05: add [rdi], cl; test [rdi+rdi*8-0x1], ebp; call far fword ptr [rbx+0x48]; 
0x00000000414373: add [rdi], cl; test [rsi], esp; add [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x000000004142a1: add [rdi], cl; test edi, ecx; idiv edi; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x0000000047bc05: add [rdi], cl; xchg esp, edx; sub [rax], al; add [rax-0x7d], cl; ret; 
0x0000000040657f: add [rdi], ecx; ret far; 
0x000000004529de: add [rdi], ecx; test [rbx+0x3], ecx; add [rax], al; ret; 
0x0000000044efcf: add [rdi], ecx; test [rdx+0x1], edi; add [rax], al; vzeroupper; ret; 
0x000000004529dd: add [rdi], rcx; test [rbx+0x3], ecx; add [rax], al; ret; 
0x00000000480277: add [rdx+0x10], bh; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x00000000425148: add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x0000000042251a: add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000422f77: add [rdx+0x1], bh; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x00000000422f76: add [rdx+0x1], dil; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x00000000459340: add [rdx+0x2], esi; mov [rdi], cl; ret; 
0x00000000450bcf: add [rdx+0x48028801], cl; mov eax, edi; ret; 
0x00000000445f11: add [rdx+0x4], esi; mov cl, [rsi]; mov [rdi], cl; ret; 
0x0000000048bd7f: add [rdx+0x63], cl; add al, 0xa6; add rax, rsi; notrack jmp rax; 
0x0000000048c2bc: add [rdx+0x63], cl; add al, 0xa7; add rax, rdi; notrack jmp rax; 
0x0000000045f829: add [rdx+0x64], bh; test eax, eax; cmove eax, edx; ret; 
0x0000000040a874: add [rdx-0x21], bh; cmovne eax, edx; ret; 
0x0000000045a1ce: add [rdx-0x2f], esp; jge short 0x000000000045a21b; out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x00000000445e6a: add [rdx-0x2f], esp; jl short 0x0000000000445eb7; adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x0000000045a04b: add [rdx-0x2f], esp; std; jg short 0x000000000045a09b; jmp qword ptr [rdx-0x2f]; 
0x000000004560be: add [rdx-0x3ce877ea], cl; nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000046e20c: add [rdx-0x75], cl; add al, 0xe0; test rax, rax; je short 0x000000000046e218; call rax; 
0x0000000042cba5: add [rdx-0x7d], cl; xor [rax], r9; add [rax+0x39], ecx; ret; 
0x0000000045a01c: add [rdx-0xf], ah; dec byte ptr [rax+0x6f]; add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x0000000045a022: add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x000000004592d7: add [rdx-0xf], esp; jl short 0x0000000000459324; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x00000000459417: add [rdx-0xf], esp; jl short 0x0000000000459464; adc [rsi+0x2], edx; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000046fe6b: add [rdx], al; add [rax], al; mov fs:[rdx], rax; ret; 
0x00000000464d06: add [rdx], al; add rsp, 0x8; ret; 
0x0000000042972b: add [rdx], al; jbe short 0x0000000000429730; ret; 
0x00000000431b90: add [rdx], al; lea rax, [rip+0x1d8a7]; lea rdx, [rip+0x21cc0]; cmovne rax, rdx; ret; 
0x00000000430f40: add [rdx], al; lea rax, [rip+0x1e407]; lea rdx, [rip+0x1e5e0]; cmovne rax, rdx; ret; 
0x000000004310a0: add [rdx], al; lea rax, [rip+0xc97]; lea rdx, [rip+0x1fc30]; cmovne rax, rdx; ret; 
0x00000000430ee0: add [rdx], al; lea rax, [rip+0xeb7]; lea rdx, [rip+0x25b0]; cmovne rax, rdx; ret; 
0x00000000431ca5: add [rdx], al; lea rdx, [rip+0x27832]; lea rax, [rip+0x278eb]; cmove rax, rdx; ret; 
0x00000000431b35: add [rdx], al; lea rdx, [rip+0x27992]; lea rax, [rip+0x27a4b]; cmove rax, rdx; ret; 
0x000000004319d5: add [rdx], al; lea rdx, [rip+0x27b02]; lea rax, [rip+0x27bbb]; cmove rax, rdx; ret; 
0x00000000431c37: add [rdx], al; lea rdx, [rip+0x27c70]; lea rax, [rip+0x27cb9]; cmove rax, rdx; ret; 
0x00000000431ac7: add [rdx], al; lea rdx, [rip+0x27dd0]; lea rax, [rip+0x27e19]; cmove rax, rdx; ret; 
0x00000000431967: add [rdx], al; lea rdx, [rip+0x27f40]; lea rax, [rip+0x27f89]; cmove rax, rdx; ret; 
0x00000000431c89: add [rdx], al; lea rdx, [rip+0x2805e]; lea rax, [rip+0x280a7]; cmove rax, rdx; ret; 
0x00000000431b19: add [rdx], al; lea rdx, [rip+0x281be]; lea rax, [rip+0x28207]; cmove rax, rdx; ret; 
0x000000004319b9: add [rdx], al; lea rdx, [rip+0x2832e]; lea rax, [rip+0x28377]; cmove rax, rdx; ret; 
0x00000000431a79: add [rdx], al; lea rdx, [rip+0x28ace]; lea rax, [rip+0x28b27]; cmove rax, rdx; ret; 
0x00000000430e3c: add [rdx], bh; cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x00000000409491: add [rdx], cl; add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x0000000048394a: add [rdx], ebp; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x0000000045cd7b: add [rip+0x410000], bh; je short 0x000000000045cdb0; mov eax, 0x101; syscall; 
0x0000000045cd7a: add [rip+0x410000], dil; je short 0x000000000045cdb0; mov eax, 0x101; syscall; 
0x0000000043b18f: add [rip+0xff], ah; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000043b18e: add [rip+0xff], spl; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000043a8c2: add [rip+0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x00000000497297: add [rip-0xb9517], ch; jmp qword ptr [rsi-0x70]; 
0x0000000042938c: add [rsi+0x1], dh; ret; 
0x0000000040a423: add [rsi+0x22], dh; cmp edi, 0xc0000008; jne short 0x000000000040a4a0; mov rax, 0x4ded80; ret; 
0x00000000411235: add [rsi+0x2e], ah; nop [rax+rax]; xor edi, edi; mov eax, edx; syscall; 
0x0000000045d18c: add [rsi+0x3], bh; je short 0x000000000045d1c5; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045d21c: add [rsi+0x3], bh; je short 0x000000000045d255; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045de03: add [rsi+0x3], bh; je short 0x000000000045de3a; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045deb4: add [rsi+0x3], bh; je short 0x000000000045deed; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000040a35f: add [rsi+0x52], dh; cmp edi, 0x80000008; jne 0x000000000040a4a0; mov rax, 0x4dedc0; ret; 
0x0000000040a3e0: add [rsi+0x53], dh; cmp edi, 0x16; jne 0x000000000040a4a0; mov rax, 0x4def00; ret; 
0x0000000040a39d: add [rsi+0x54], dh; cmp edi, 0xe0000008; jne 0x000000000040a4a0; mov rax, 0x4dee00; ret; 
0x0000000046f138: add [rsi+0x63], cl; add al, 0x8a; add r8, rdx; notrack jmp r8; 
0x0000000042933e: add [rsi+0x80], bh; mov eax, 0xca; syscall; 
0x0000000048193b: add [rsi+0x80], bh; syscall; 
0x000000004a7d3c: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x3d232]; syscall; 
0x00000000497dbc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x4d246]; syscall; 
0x00000000497b38: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x4d4c6]; syscall; 
0x00000000495ab4: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x4f542]; syscall; 
0x00000000495974: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x4f682]; syscall; 
0x000000004718fc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x73672]; syscall; 
0x00000000471837: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x73737]; syscall; 
0x00000000471695: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x738d9]; syscall; 
0x000000004715bb: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x739b3]; syscall; 
0x00000000463dec: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x81c12]; syscall; 
0x00000000463c80: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x81d7e]; syscall; 
0x00000000463b60: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x81e9e]; syscall; 
0x0000000045b418: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0x8a5e6]; syscall; 
0x00000000430a98: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb1d36]; syscall; 
0x0000000042de98: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4936]; syscall; 
0x0000000042de38: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4996]; syscall; 
0x0000000042da78: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4d56]; syscall; 
0x0000000042d818: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb4fb6]; syscall; 
0x0000000042d240: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb558e]; syscall; 
0x0000000042d208: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb55c6]; syscall; 
0x0000000042edf8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb5f26]; syscall; 
0x0000000042e3ac: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xb6962]; syscall; 
0x0000000042a509: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xba805]; syscall; 
0x0000000042a4d8: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xba846]; syscall; 
0x0000000042a258: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbaac6]; syscall; 
0x00000000429d34: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbafea]; syscall; 
0x0000000042894a: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc354]; syscall; 
0x0000000042838a: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbc914]; syscall; 
0x0000000042801e: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbcc80]; syscall; 
0x00000000427cdc: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbcfc2]; syscall; 
0x00000000426776: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe528]; syscall; 
0x000000004264d6: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbe7c8]; syscall; 
0x00000000426182: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xbeb1c]; syscall; 
0x00000000420188: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc5876]; syscall; 
0x0000000041f137: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc6767]; syscall; 
0x0000000041eff7: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc68a7]; syscall; 
0x0000000041edc0: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc6ade]; syscall; 
0x0000000041ed85: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc6b19]; syscall; 
0x0000000041eca1: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xc6bfd]; syscall; 
0x000000004156d5: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xcf151]; syscall; 
0x00000000413d32: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd0abc]; syscall; 
0x00000000412bb3: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd1b93]; syscall; 
0x00000000412b85: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd1bc1]; syscall; 
0x00000000412a39: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xd1d0d]; syscall; 
0x000000004012d1: add [rsi+0x81], bh; mov eax, 0xca; lea rdi, [rip+0xe356d]; syscall; 
0x00000000401440: add [rsi+0x81], bh; mov eax, 0xca; syscall; 
0x0000000042e381: add [rsi+0x81], bh; mov eax, ebx; syscall; 
0x0000000042e221: add [rsi+0x81], bh; mov rdi, r12; mov eax, 0xca; syscall; 
0x0000000042f7b4: add [rsi+0x81], bh; mov rdi, r13; mov eax, 0xca; syscall; 
0x000000004303f5: add [rsi+0x81], bh; mov rdi, r15; mov eax, 0xca; syscall; 
0x0000000042b0b6: add [rsi+0x81], bh; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000042f17a: add [rsi+0x81], bh; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000428663: add [rsi+0xf], ah; out dx, eax; ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x0000000048e8a7: add [rsi+0xf], ah; outsd dx, [rsi]; xchg ebp, eax; cmp ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000420d03: add [rsi+rbp+0x5b], dh; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000480e8f: add [rsi-0x1], bh; call qword ptr [rax+0x18]; 
0x000000004248c9: add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000426b20: add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000042828e: add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x00000000427b57: add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x00000000427280: add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x00000000452bad: add [rsi-0x70], ah; mov [rcx], dx; ret; 
0x00000000452bdd: add [rsi-0x70], ah; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000004563cd: add [rsi-0x70], ah; mov [rdi], dx; ret; 
0x000000004563fd: add [rsi-0x70], ah; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x00000000454efd: add [rsi-0x70], ah; mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x000000004553dd: add [rsi-0x70], ah; mov dx, [rsi]; mov [rdi], dx; ret; 
0x00000000456b6d: add [rsi-0x70], ah; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x0000000046f04d: add [rsi-0x70], ah; ret; 
0x00000000450bdf: add [rsi-0x75], ah; add [rsi-0x77], esp; add cl, [rax-0x77]; clc; ret; 
0x0000000042afe6: add [rsi-0x77], ah; psubsw mm2, [rsi+rdi*8-0x1]; call qword ptr [rax+0x43d8d48]; 
0x00000000450be2: add [rsi-0x77], esp; add cl, [rax-0x77]; clc; ret; 
0x00000000450bf2: add [rsi-0x77], esp; add cl, [rdx+0x42880241]; add cl, [rax-0x77]; clc; ret; 
0x0000000045bef9: add [rsi], dl; add [rax], al; add [rax-0x1], bh; ret; 
0x000000004a8071: add [rsp-0x17], dh; ret far; 
0x0000000045941e: add ah, [rdx-0xf]; jl short 0x000000000045946b; adc [rsi+0x3], edx; ret; 
0x00000000454f63: add ah, [rsi-0x75]; add al, 0x66; mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x00000000450c23: add ah, [rsi-0x75]; add al, 0x66; mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x0000000045a7da: add ah, bh; add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000045a7bf: add ah, bh; add eax, [rax]; ret; 
0x0000000045a8b9: add ah, bh; inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x0000000045a80a: add ah, bh; inc dword ptr [rbx]; ret; 
0x00000000401cad: add ah, dh; nop; endbr64; ret; 
0x0000000040c143: add ah, dl; or [rax], eax; ret; 
0x0000000046c1e1: add al, 0x0; add [rax+0x39], cl; ret far; 
0x0000000048dbf4: add al, 0x0; add [rax+0x63], cl; ret; 
0x0000000045ba0f: add al, 0x0; add [rax-0x39], cl; ret; 
0x000000004a11c9: add al, 0x0; add [rax-0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x000000004658bd: add al, 0x0; add [rax-0x77], cl; ret far; 
0x0000000042b23a: add al, 0x0; add [rax-0x7d], cl; ret far; 
0x00000000484243: add al, 0x0; add [rax], al; ret; 
0x0000000045bec4: add al, 0x0; add [rax], al; syscall; 
0x00000000435f28: add al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000045e867: add al, 0x0; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000497d76: add al, 0x0; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x0000000048bd54: add al, 0x0; add [rcx-0x77], cl; ret; 
0x0000000042938a: add al, 0x0; add [rsi+0x1], dh; ret; 
0x0000000045609d: add al, 0x0; add bl, al; nop [rax+rax]; nop [rax]; ret; 
0x0000000049bfc1: add al, 0x0; add bl, ch; ret; 
0x00000000493f77: add al, 0x0; add dh, dh; ret; 
0x00000000497ea5: add al, 0x0; add rsp, 0x8; ret; 
0x00000000499023: add al, 0x0; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000004115e7: add al, 0x0; cmp eax, 0xffffffff; je 0x00000000004116d8; add rsp, 0x98; ret; 
0x0000000049901a: add al, 0x0; jae short 0x000000000049902a; mov rdx, [rip+0x4c113]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000049b9fe: add al, 0x0; jne short 0x000000000049ba08; ret; 
0x00000000479675: add al, 0x0; lea rsi, [rip+0x663c2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000410f9c: add al, 0x0; lea rsi, [rsp+0x70]; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000049833e: add al, 0x0; mov [rax], rdx; add rsp, 0x8; ret; 
0x00000000497eb5: add al, 0x0; mov [rip+0x4d16a], rax; ret; 
0x00000000497e9e: add al, 0x0; mov [rip+0x4d181], rax; add rsp, 0x8; ret; 
0x0000000049c1ad: add al, 0x0; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x0000000047eaec: add al, 0x0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000047f23c: add al, 0x0; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000047f2a0: add al, 0x0; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000047ea90: add al, 0x0; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x00000000497ebc: add al, 0x0; ret; 
0x00000000495984: add al, 0x0; syscall; 
0x0000000048525a: add al, 0x11; ret; 
0x0000000045a854: add al, 0x12; pop rbx; and eax, 0x7ff80000; ret; 
0x00000000433235: add al, 0x17; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x0000000043474c: add al, 0x17; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; vzeroupper; ret; 
0x000000004331ca: add al, 0x17; sub eax, ecx; ret; 
0x000000004570ae: add al, 0x17; vzeroupper; ret; 
0x00000000484c96: add al, 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004a11ce: add al, 0x24; add rsp, 0x38; ret; 
0x0000000041e31d: add al, 0x24; call rax; 
0x0000000042bdfa: add al, 0x24; call rdx; 
0x0000000042497d: add al, 0x24; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000421396: add al, 0x24; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000041e482: add al, 0x24; mov r13, r15; add r15, r12; call rax; 
0x0000000041e282: add al, 0x24; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x000000004249ba: add al, 0x24; mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000041e40d: add al, 0x24; mov rsi, r12; mov rdi, r13; call rax; 
0x000000004905df: add al, 0x24; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x00000000411ade: add al, 0x25; add [rax], al; add [rax], al; ret; 
0x0000000041ec33: add al, 0x25; xor [rax], al; add [rax], al; call rax; 
0x0000000047c3b4: add al, 0x2; lea rcx, [rip+0x63c83]; jmp qword ptr [rcx+rax*8]; 
0x0000000048f68b: add al, 0x2; mov edx, 0x0; cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x00000000496086: add al, 0x30; add [rax], al; add [rcx+0x39], cl; ret; 
0x00000000410908: add al, 0x30; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000482dee: add al, 0x31; ret; 
0x000000004109e1: add al, 0x32; mov [rip+0xd38ff], eax; lea rax, [rip+0xd38f0]; ret; 
0x00000000482cea: add al, 0x37; ret; 
0x00000000438d29: add al, 0x38; movzx edx, byte ptr [rdx+rdi]; sub eax, edx; vzeroupper; ret; 
0x00000000483d76: add al, 0x39; bnd je short 0x0000000000483d7f; test edx, edx; jne short 0x0000000000483d70; ret; 
0x0000000042ae3a: add al, 0x39; ret; 
0x0000000043ae67: add al, 0x3; add [rax], al; xor eax, eax; ret; 
0x00000000475da7: add al, 0x3; jmp qword ptr [rsi+rax*8]; 
0x00000000475506: add al, 0x3; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000427a5f: add al, 0x3a; ret; 
0x00000000456a6b: add al, 0x48; lea eax, [rdi+0x5]; ret; 
0x00000000454f58: add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x00000000454f6a: add al, 0x48; lea eax, [rdx+0x5]; ret; 
0x00000000452a3a: add al, 0x48; lea ecx, [rdx+0x4]; jne 0x0000000000452d30; ret; 
0x0000000044ef07: add al, 0x48; lea edi, [rdi+0x4]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c97: add al, 0x48; lea edi, [rdi+0x4]; jne 0x00000000004564f0; ret; 
0x000000004293b2: add al, 0x48; lea edx, [rax+0x1]; mov [rip+0xb93d2], rdx; ret; 
0x0000000040948c: add al, 0x48; lea edx, [rip+0xa0014]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000442d6a: add al, 0x48; mov [rdi], ecx; ret; 
0x00000000450c18: add al, 0x48; mov eax, edi; ret; 
0x00000000442d63: add al, 0x48; mov ecx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x000000004830c8: add al, 0x48; xor eax, eax; ret; 
0x0000000048a367: add al, 0x49; add esp, eax; call qword ptr [r12+0x60]; 
0x00000000455cdb: add al, 0x49; sub eax, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000004564f0; ret; 
0x0000000049893c: add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x0000000048f6d2: add al, 0x4c; cmp eax, [rcx+rsi+0x10]; jae short 0x000000000048f685; xor eax, eax; ret; 
0x0000000048394f: add al, 0x4c; lea ecx, [rsp+0x20]; call rbx; 
0x00000000402eab: add al, 0x5d; ret; 
0x00000000454f66: add al, 0x66; mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x00000000450c26: add al, 0x66; mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x0000000046ceb2: add al, 0x72; adc ecx, [rcx+0x29d231fb]; ret; 
0x0000000045a381: add al, 0x73; adc eax, [rax+0x157701fa]; jb short 0x000000000045a38d; mov [rdi], cl; ret; 
0x00000000455de8: add al, 0x7; add [rax], al; ret; 
0x0000000044db11: add al, 0x7; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000044df7e: add al, 0x7; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000473053: add al, 0x7; jmp qword ptr [rsi+rax*8]; 
0x0000000044dd3c: add al, 0x7; ret; 
0x0000000047eaf0: add al, 0x81; add rax, rcx; notrack jmp rax; 
0x0000000041095d: add al, 0x81; add rax, rdx; ret; 
0x0000000045ade2: add al, 0x81; je short 0x000000000045adc8; ret; 
0x0000000044ab0b: add al, 0x81; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000045adde: add al, 0x81; sub eax, [rcx+r8*4]; je short 0x000000000045adc8; ret; 
0x0000000044c3e3: add al, 0x81; sub eax, edx; ret; 
0x00000000425537: add al, 0x82; add rax, r10; notrack jmp rax; 
0x00000000407cfe: add al, 0x82; add rax, rdx; notrack jmp rax; 
0x00000000448707: add al, 0x82; sub eax, ecx; ret; 
0x00000000425569: add al, 0x83; add rax, r11; notrack jmp rax; 
0x0000000046140a: add al, 0x83; add rax, rbx; notrack jmp rax; 
0x000000004961d4: add al, 0x83; ret; 
0x00000000405ae2: add al, 0x84; add rax, r12; notrack jmp rax; 
0x00000000483d7a: add al, 0x85; shl byte ptr [rbp-0xf], cl; ret; 
0x000000004727f1: add al, 0x86; add rax, r14; notrack jmp rax; 
0x0000000047e9ec: add al, 0x86; add rax, rsi; notrack jmp rax; 
0x0000000047f1a4: add al, 0x87; add rax, rdi; notrack jmp rax; 
0x00000000454f55: add al, 0x88; add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x00000000450c15: add al, 0x88; add al, 0x48; mov eax, edi; ret; 
0x00000000455cb4: add al, 0x89; cmovns eax, [rbx-0x72b7fa18]; jg short 0x0000000000455cc4; jne 0x00000000004564f0; ret; 
0x0000000043339f: add al, 0x8; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x000000004348c9: add al, 0x8; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000046f13b: add al, 0x8a; add r8, rdx; notrack jmp r8; 
0x00000000401bf3: add al, 0x8a; add rax, rdx; notrack jmp rax; 
0x000000004096d8: add al, 0x8b; add rax, rbx; notrack jmp rax; 
0x0000000048b104: add al, 0x90; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x0000000048b0d2: add al, 0x90; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x00000000429764: add al, 0x90; or eax, [rax]; ret; 
0x000000004021ab: add al, 0x91; add rax, rcx; notrack jmp rax; 
0x0000000045a823: add al, 0x96; add rax, rsi; notrack jmp rax; 
0x0000000048bd82: add al, 0xa6; add rax, rsi; notrack jmp rax; 
0x0000000048c2bf: add al, 0xa7; add rax, rdi; notrack jmp rax; 
0x0000000045bb29: add al, 0xaa; add rax, rdx; notrack jmp rax; 
0x000000004a2b52: add al, 0xb1; add rax, r9; notrack jmp rax; 
0x00000000408a38: add al, 0xb1; add rax, rcx; notrack jmp rax; 
0x000000004a2b8f: add al, 0xb4; add rax, r12; notrack jmp rax; 
0x000000004033cc: add al, 0xba; add rax, rdx; notrack jmp rax; 
0x0000000045a75b: add al, 0xbe; add rax, rsi; notrack jmp rax; 
0x000000004573a2: add al, 0xc3; nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x00000000452bf5: add al, 0xc3; nop [rax+rax]; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x00000000452be4: add al, 0xc3; nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x00000000456415: add al, 0xc3; nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x00000000456404: add al, 0xc3; nop [rax+rax]; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x0000000040337b: add al, 0xc3; nop [rax]; movzx esi, sil; mov [rip+0xded9a], esi; ret; 
0x0000000047550a: add al, 0xc6; jmp rax; 
0x00000000496084: add al, 0xc7; add al, 0x30; add [rax], al; add [rcx+0x39], cl; ret; 
0x000000004758f7: add al, 0xc8; jmp rax; 
0x0000000040c133: add al, 0xd4; or [rax], eax; ret; 
0x000000004a7901: add al, 0xd8; test rax, rax; je short 0x00000000004a790a; call rax; 
0x0000000040b5fb: add al, 0xe0; or [rax], eax; ret; 
0x0000000046e20f: add al, 0xe0; test rax, rax; je short 0x000000000046e218; call rax; 
0x0000000046e495: add al, 0xe8; test rax, rax; je short 0x000000000046e49e; call rax; 
0x0000000047c5b2: add al, 0xf0; jmp rax; 
0x000000004430d2: add al, 0xf3; movq [rdi], mm1; ret; 
0x0000000040a881: add al, 0xf5; adc [rax], al; add [rax], al; ret; 
0x0000000040a8c9: add al, 0xf5; adc al, 0x0; add [rax], al; ret; 
0x00000000437c86: add al, 0xf; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x00000000439896: add al, 0xf; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000455c9b: add al, 0xf; test [rsi+0x8], ecx; add [rax], al; ret; 
0x00000000482672: add al, [rax]; add [rax+0x1], cl; clc; add rax, rcx; ret; 
0x00000000487048: add al, [rax]; add [rax+0x29], cl; ret; 
0x000000004884bc: add al, [rax]; add [rax+0x2f7c8043], dl; jmp far fword ptr [rdi]; 
0x00000000410fb5: add al, [rax]; add [rax-0x39], cl; ret; 
0x00000000483d46: add al, [rax]; add [rax-0x73], cl; adc eax, 0x30; cmovne rax, rdx; ret; 
0x00000000459d98: add al, [rax]; add [rax-0x77], cl; shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x0000000049e80c: add al, [rax]; add [rax], al; add [rax+0x1], bh; ret; 
0x0000000049e97f: add al, [rax]; add [rax], al; add [rax+0x2], bh; ret; 
0x0000000041e190: add al, [rax]; add [rax], al; mov eax, 0xe; syscall; 
0x00000000422f81: add al, [rax]; add [rax], al; mov eax, r9d; syscall; 
0x0000000042933b: add al, [rax]; add [rax], al; mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000004219cc: add al, [rax]; add [rax], al; mov rdi, r15; call qword ptr [r13+0x80]; 
0x000000004203c8: add al, [rax]; add [rax], al; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000042506d: add al, [rax]; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000484223: add al, [rax]; add [rax], al; ret; 
0x0000000049b9f6: add al, [rax]; add [rax], al; test byte ptr [rip+0x49f1f], 0x40; jne short 0x000000000049ba08; ret; 
0x000000004360a8: add al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000471a63: add al, [rax]; add [rbx+rcx*4+0x15], cl; ret far; 
0x0000000048e88f: add al, [rax]; add [rbx-0x28f7b], cl; jmp qword ptr [rsi+0xf]; 
0x0000000045e9b1: add al, [rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000045ea1e: add al, [rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000423daa: add al, [rax]; add [rcx+rcx*4-0x16], al; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x000000004218f3: add al, [rax]; add [rcx+rcx*4-0x1e], al; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000045e0c8: add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000046a2bb: add al, [rax]; add [rcx-0x77], al; xor ecx, [rcx-0x77]; ret far; 
0x0000000045d3ee: add al, [rax]; add [rcx-0x7d], cl; ret far; 
0x0000000047a824: add al, [rax]; add [rcx-0x8ef63], cl; dec dword ptr [rax-0x77]; ret far; 
0x00000000423e60: add al, [rax]; add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000004318b7: add al, [rax]; cmove rax, rdx; ret; 
0x00000000430e8e: add al, [rax]; cmovne rax, rdx; ret; 
0x000000004a1662: add al, [rax]; divss xmm0, [rip+0x2ec10]; ret; 
0x00000000457078: add al, [rax]; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000431cac: add al, [rax]; lea rax, [rip+0x278eb]; cmove rax, rdx; ret; 
0x00000000431b3c: add al, [rax]; lea rax, [rip+0x27a4b]; cmove rax, rdx; ret; 
0x000000004319dc: add al, [rax]; lea rax, [rip+0x27bbb]; cmove rax, rdx; ret; 
0x00000000431c3e: add al, [rax]; lea rax, [rip+0x27cb9]; cmove rax, rdx; ret; 
0x00000000431ace: add al, [rax]; lea rax, [rip+0x27e19]; cmove rax, rdx; ret; 
0x0000000043196e: add al, [rax]; lea rax, [rip+0x27f89]; cmove rax, rdx; ret; 
0x00000000431c90: add al, [rax]; lea rax, [rip+0x280a7]; cmove rax, rdx; ret; 
0x00000000430f70: add al, [rax]; lea rax, [rip+0x280d7]; cmovne rax, rdx; ret; 
0x00000000431b20: add al, [rax]; lea rax, [rip+0x28207]; cmove rax, rdx; ret; 
0x000000004319c0: add al, [rax]; lea rax, [rip+0x28377]; cmove rax, rdx; ret; 
0x00000000431a57: add al, [rax]; lea rax, [rip+0x287f0]; cmovne rax, rdx; ret; 
0x00000000431a38: add al, [rax]; lea rax, [rip+0x289df]; cmove rax, rdx; ret; 
0x00000000431a80: add al, [rax]; lea rax, [rip+0x28b27]; cmove rax, rdx; ret; 
0x0000000045c35d: add al, [rax]; mov eax, [rsp+0xc]; add rsp, 0x18; ret; 
0x0000000045c33b: add al, [rax]; mov edi, [rsp+0xc]; mov r8d, eax; mov eax, 0x3; syscall; 
0x0000000046da34: add al, [rax]; mov qword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x000000004017d2: add al, [rax]; mov qword ptr [rip+0xe3879], 0x0; pop rdx; ret; 
0x0000000045c0ff: add al, [rax]; mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x00000000404c44: add al, [rax]; mov rax, rbx; pop rbx; ret; 
0x000000004a168f: add al, [rax]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000407e20: add al, [rax]; nop [rax+rax]; ret; 
0x00000000403991: add al, [rax]; nop [rax+rax]; xor eax, eax; ret; 
0x00000000402dbe: add al, [rax]; pop rbp; ret; 
0x00000000404c7e: add al, [rax]; ret; 
0x0000000044e968: add al, [rax]; vzeroupper; ret; 
0x0000000047f199: add al, [rbx-0x77cdf18]; sub [rdi+0xe], esi; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000004818a2: add al, [rcx+0x39]; ret; 
0x00000000476765: add al, [rcx]; ret far; 
0x0000000044ab07: add al, [rdi]; add [rbx+0x148b8104], cl; xchg ecx, eax; sub eax, edx; ret; 
0x0000000044ab06: add al, [rdi]; add [rbx+0x148b8104], cl; xchg ecx, eax; sub eax, edx; ret; 
0x000000004841b6: add al, [rdx+rdx*8-0x2e77ea8c]; and cl, 0xf; je short 0x00000000004841e0; ret; 
0x0000000049e903: add al, [rdx]; sar bh, 0xff; ret; 
0x00000000455eea: add al, [rsi]; add [rax], al; ret; 
0x0000000040a3a4: add al, ah; jne 0x000000000040a4a0; mov rax, 0x4dee00; ret; 
0x0000000040a404: add al, al; jne 0x000000000040a4a0; mov rax, 0x4e11e0; ret; 
0x0000000040a42a: add al, al; jne short 0x000000000040a4a0; mov rax, 0x4ded80; ret; 
0x00000000457383: add al, bl; nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x00000000452bc5: add al, bl; nop [rax+rax]; mov [rcx], edx; ret; 
0x000000004553f8: add al, bl; nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000004841da: add al, bl; nop [rax]; add rax, 0x1; ret; 
0x000000004560eb: add al, bl; nop [rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000004a76fe: add al, bpl; ret far; 
0x0000000049c1d9: add al, ch; and [rax-0x1], esp; call qword ptr [rax+0x1f88041]; 
0x0000000049b539: add al, ch; and [rbp-0x4], eax; call qword ptr [rax-0x4c117]; 
0x0000000049f75b: add al, ch; call far fword ptr [rax]; 
0x00000000485a60: add al, ch; cli; lahf; std; call qword ptr [rax+0x31f1894c]; 
0x00000000425680: add al, ch; cmp bh, [rdx-0x76b70003]; ret; 
0x0000000046fd10: add al, ch; cmp bl, [rdi]; cli; jmp qword ptr [rsi+0x2e]; 
0x00000000403cc2: add al, ch; cwde; ret far; 
0x00000000403d12: add al, ch; data64 ret far; 
0x0000000049194c: add al, ch; dec byte ptr [rbx-0x76b70001]; adc [r8+0x5a], bl; pop rbx; ret; 
0x0000000049a721: add al, ch; fnstcw [rdx-0x1]; jmp qword ptr [rsi+0xf]; 
0x0000000045b8af: add al, ch; fwait; movsxd edi, ebx; jmp qword ptr [rsi+0x2e]; 
0x0000000046a3d7: add al, ch; jae short 0x000000000046a453; cli; dec dword ptr [rcx-0x77]; ret far; 
0x0000000049aa01: add al, ch; jb short 0x000000000049a9fd; jmp qword ptr [rsi+0xf]; 
0x0000000048a53b: add al, ch; jg short 0x000000000048a552; std; jmp qword ptr [rsi+0x66]; 
0x000000004839fe: add al, ch; loop 0x00000000004839fb; jmp qword ptr [rsi+0x2e]; 
0x000000004a5c08: add al, ch; mov [0x415d5be0894cffb5], eax; pop rsp; ret; 
0x00000000410f98: add al, ch; mov [0x7024748d480004f1], al; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x00000000491840: add al, ch; mov al, [rcx-0x76b80000]; sbb [r8+0x5a], bl; pop rbx; ret; 
0x00000000491699: add al, ch; mov cl, 0x5; clc; call qword ptr [rax-0x5e1f00d]; 
0x00000000465c40: add al, ch; or al, al; cli; jmp qword ptr [rsi+0x2e]; 
0x0000000046f23f: add al, ch; or ebp, [rdx]; cli; jmp qword ptr [rsi+0x66]; 
0x00000000465564: add al, ch; out 0xc6, al; cli; jmp qword ptr [rsi+0xf]; 
0x0000000045a8db: add al, ch; outsd dx, [rsi]; jae short 0x000000000045a8db; jmp qword ptr [rsi+0x66]; 
0x0000000042e24f: add al, ch; pop rbx; mov ch, 0xff; jmp qword ptr [rsi+0x66]; 
0x0000000046efeb: add al, ch; pop rdi; sub al, 0xfa; jmp qword ptr [rsi+0x66]; 
0x0000000046caee: add al, ch; pop rsp; push rcx; cli; jmp qword ptr [rsi+0x2e]; 
0x0000000046e3a8: add al, ch; push rdx; sbb al, 0xb9; jmp qword ptr [rsi-0x70]; 
0x000000004982a4: add al, ch; push rsi; jge short 0x000000000049825f; dec dword ptr [rax-0x77]; ret; 
0x000000004612f4: add al, ch; push rsi; or ebx, edi; jmp qword ptr [rsi+0xf]; 
0x0000000048ed66: add al, ch; push rsp; ret far; 
0x00000000467dae: add al, ch; pushfq; sahf; cli; jmp qword ptr [rsi+0x66]; 
0x00000000426f17: add al, ch; rep ret; 
0x000000004013ef: add al, ch; ret far; 
0x00000000423a47: add al, ch; ret; 
0x0000000045ba0c: add al, ch; sahf; add al, 0x0; add [rax-0x39], cl; ret; 
0x0000000048b12e: add al, ch; sbb al, 0x6b; clc; jmp qword ptr [rsi+0x2e]; 
0x000000004982bf: add al, ch; sbb edi, [rbx-0x7]; dec dword ptr [rax-0x77]; ret; 
0x0000000048f92f: add al, ch; sbb esp, [rbx]; clc; jmp qword ptr [rsi+0x2e]; 
0x0000000048f11e: add al, ch; sub al, 0x2b; clc; jmp qword ptr [rsi+0x66]; 
0x00000000412875: add al, ch; test edi, edx; mov esi, 0x45c748ff; mov al, [0xfff868e9ffffffff]; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000049960a: add al, ch; xchg dil, sil; push rbx; nop edx, edi; ret; 
0x00000000472fb9: add al, ch; xchg ecx, eax; in al, dx; stc; call qword ptr [rax-0x3f7c3977]; 
0x0000000048f0b9: add al, ch; xchg ecx, eax; sub edi, eax; call qword ptr [rax+0x8498b48]; 
0x00000000430b63: add al, ch; xlat [rbx]; ret; 
0x0000000049e849: add bh, [rax+0x1]; ret; 
0x0000000049e9d8: add bh, [rax+0x2]; ret; 
0x0000000045bee3: add bh, [rax-0x1]; ret; 
0x000000004319da: add bh, [rbx+0x2]; add [rax-0x73], cl; add eax, 0x27bbb; cmove rax, rdx; ret; 
0x00000000458b92: add bh, [rcx]; enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x000000004a3753: add bh, [rdi+0x1]; call rax; 
0x0000000048f68c: add bh, [rdx]; cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x0000000049e901: add bh, al; add al, [rdx]; sar bh, 0xff; ret; 
0x00000000493602: add bh, al; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000473867: add bh, al; test eax, edi; idiv bh; call qword ptr [rax]; 
0x0000000041ed37: add bh, bh; adc ecx, [rax-0x7d]; ret; 
0x0000000046dc77: add bh, bh; jmp qword ptr [rsi+0xf]; 
0x00000000401cdb: add bh, bh; loopne 0x0000000000401d45; nop; ret; 
0x000000004a42a4: add bh, bh; loopne 0x00000000004a430e; nop [rax+rax]; ret; 
0x0000000048bf04: add bh, bh; ror byte ptr [rax-0x7d], 0x1; ret; 
0x0000000040a83b: add bh, ch; add [r13-0x3d], r11b; mov rax, 0x4def40; pop rbp; ret; 
0x000000004890c7: add bh, dh; ret; 
0x0000000040d8ae: add bl, al; lea rax, [rip+0x9bcf9]; ret; 
0x0000000040d89e: add bl, al; lea rax, [rip+0x9bd00]; ret; 
0x0000000040d8a6: add bl, al; lea rax, [rip+0x9bd08]; ret; 
0x0000000040d85e: add bl, al; lea rax, [rip+0x9bd1d]; ret; 
0x0000000040d86e: add bl, al; lea rax, [rip+0x9bd1e]; ret; 
0x0000000040d826: add bl, al; lea rax, [rip+0x9bd3b]; ret; 
0x0000000040d82e: add bl, al; lea rax, [rip+0x9bd3c]; ret; 
0x0000000040d896: add bl, al; lea rax, [rip+0x9bd71]; ret; 
0x0000000040d88e: add bl, al; lea rax, [rip+0x9bd72]; ret; 
0x0000000040d886: add bl, al; lea rax, [rip+0x9bd74]; ret; 
0x0000000040d87e: add bl, al; lea rax, [rip+0x9bd76]; ret; 
0x0000000040d846: add bl, al; lea rax, [rip+0x9bd79]; ret; 
0x0000000040d84e: add bl, al; lea rax, [rip+0x9bd7f]; ret; 
0x0000000040d83e: add bl, al; lea rax, [rip+0x9bd88]; ret; 
0x0000000040d76e: add bl, al; lea rax, [rip+0x9bdb7]; ret; 
0x0000000040cd6e: add bl, al; lea rax, [rip+0x9c839]; ret; 
0x0000000040cd5e: add bl, al; lea rax, [rip+0x9c840]; ret; 
0x0000000040cd66: add bl, al; lea rax, [rip+0x9c848]; ret; 
0x0000000040cd1e: add bl, al; lea rax, [rip+0x9c85d]; ret; 
0x0000000040cd2e: add bl, al; lea rax, [rip+0x9c85e]; ret; 
0x0000000040cce6: add bl, al; lea rax, [rip+0x9c87b]; ret; 
0x0000000040ccee: add bl, al; lea rax, [rip+0x9c87c]; ret; 
0x0000000040cd56: add bl, al; lea rax, [rip+0x9c8b1]; ret; 
0x0000000040cd4e: add bl, al; lea rax, [rip+0x9c8b2]; ret; 
0x0000000040cd46: add bl, al; lea rax, [rip+0x9c8b4]; ret; 
0x0000000040cd3e: add bl, al; lea rax, [rip+0x9c8b6]; ret; 
0x0000000040cd06: add bl, al; lea rax, [rip+0x9c8b9]; ret; 
0x0000000040cd0e: add bl, al; lea rax, [rip+0x9c8bf]; ret; 
0x0000000040ccfe: add bl, al; lea rax, [rip+0x9c8c8]; ret; 
0x0000000040cc2e: add bl, al; lea rax, [rip+0x9c8f7]; ret; 
0x0000000040c22e: add bl, al; lea rax, [rip+0x9d379]; ret; 
0x0000000040c21e: add bl, al; lea rax, [rip+0x9d380]; ret; 
0x0000000040c226: add bl, al; lea rax, [rip+0x9d388]; ret; 
0x0000000040c1de: add bl, al; lea rax, [rip+0x9d39d]; ret; 
0x0000000040c1ee: add bl, al; lea rax, [rip+0x9d39e]; ret; 
0x0000000040c1a6: add bl, al; lea rax, [rip+0x9d3bb]; ret; 
0x0000000040c1ae: add bl, al; lea rax, [rip+0x9d3bc]; ret; 
0x0000000040c216: add bl, al; lea rax, [rip+0x9d3f1]; ret; 
0x0000000040c20e: add bl, al; lea rax, [rip+0x9d3f2]; ret; 
0x0000000040c206: add bl, al; lea rax, [rip+0x9d3f4]; ret; 
0x0000000040c1fe: add bl, al; lea rax, [rip+0x9d3f6]; ret; 
0x0000000040c1c6: add bl, al; lea rax, [rip+0x9d3f9]; ret; 
0x0000000040c1ce: add bl, al; lea rax, [rip+0x9d3ff]; ret; 
0x0000000040c1be: add bl, al; lea rax, [rip+0x9d408]; ret; 
0x0000000040c0ee: add bl, al; lea rax, [rip+0x9d437]; ret; 
0x0000000040b5f6: add bl, al; lea rax, [rip+0x9e004]; ret; 
0x0000000040b5ee: add bl, al; lea rax, [rip+0x9e012]; ret; 
0x0000000040b566: add bl, al; lea rax, [rip+0x9e015]; ret; 
0x0000000040b576: add bl, al; lea rax, [rip+0x9e016]; ret; 
0x0000000040b5b6: add bl, al; lea rax, [rip+0x9e017]; ret; 
0x0000000040b586: add bl, al; lea rax, [rip+0x9e018]; ret; 
0x0000000040b58e: add bl, al; lea rax, [rip+0x9e019]; ret; 
0x0000000040b5be: add bl, al; lea rax, [rip+0x9e01a]; ret; 
0x0000000040b59e: add bl, al; lea rax, [rip+0x9e01b]; ret; 
0x0000000040b5e6: add bl, al; lea rax, [rip+0x9e021]; ret; 
0x0000000040d856: add bl, al; lea rax, [rip+0xbdf90]; ret; 
0x0000000040cd16: add bl, al; lea rax, [rip+0xbead0]; ret; 
0x0000000040c1d6: add bl, al; lea rax, [rip+0xbf610]; ret; 
0x0000000040a886: add bl, al; mov eax, 0xffffffdf; ret; 
0x0000000040a45e: add bl, al; mov rax, 0x4ded00; ret; 
0x0000000040a4ae: add bl, al; mov rax, 0x4e12a0; ret; 
0x000000004278a5: add bl, al; nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x0000000040d7d6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9bd77]; ret; 
0x0000000040d7b6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9bd80]; ret; 
0x0000000040d7a6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9bd84]; ret; 
0x0000000040d796: add bl, al; nop [rax+rax]; lea rax, [rip+0x9bd8c]; ret; 
0x0000000040d7c6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9bd8e]; ret; 
0x0000000040d786: add bl, al; nop [rax+rax]; lea rax, [rip+0x9bd8f]; ret; 
0x0000000040d816: add bl, al; nop [rax+rax]; lea rax, [rip+0x9bdba]; ret; 
0x0000000040d776: add bl, al; nop [rax+rax]; lea rax, [rip+0x9bdcc]; ret; 
0x0000000040d806: add bl, al; nop [rax+rax]; lea rax, [rip+0x9bdd1]; ret; 
0x0000000040d7f6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9bde8]; ret; 
0x0000000040d7e6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9bdff]; ret; 
0x0000000040cc96: add bl, al; nop [rax+rax]; lea rax, [rip+0x9c8b7]; ret; 
0x0000000040cc76: add bl, al; nop [rax+rax]; lea rax, [rip+0x9c8c0]; ret; 
0x0000000040cc66: add bl, al; nop [rax+rax]; lea rax, [rip+0x9c8c4]; ret; 
0x0000000040cc56: add bl, al; nop [rax+rax]; lea rax, [rip+0x9c8cc]; ret; 
0x0000000040cc86: add bl, al; nop [rax+rax]; lea rax, [rip+0x9c8ce]; ret; 
0x0000000040cc46: add bl, al; nop [rax+rax]; lea rax, [rip+0x9c8cf]; ret; 
0x0000000040ccd6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9c8fa]; ret; 
0x0000000040cc36: add bl, al; nop [rax+rax]; lea rax, [rip+0x9c90c]; ret; 
0x0000000040ccc6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9c911]; ret; 
0x0000000040ccb6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9c928]; ret; 
0x0000000040cca6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9c93f]; ret; 
0x0000000040c156: add bl, al; nop [rax+rax]; lea rax, [rip+0x9d3f7]; ret; 
0x0000000040c136: add bl, al; nop [rax+rax]; lea rax, [rip+0x9d400]; ret; 
0x0000000040c126: add bl, al; nop [rax+rax]; lea rax, [rip+0x9d404]; ret; 
0x0000000040c116: add bl, al; nop [rax+rax]; lea rax, [rip+0x9d40c]; ret; 
0x0000000040c146: add bl, al; nop [rax+rax]; lea rax, [rip+0x9d40e]; ret; 
0x0000000040c106: add bl, al; nop [rax+rax]; lea rax, [rip+0x9d40f]; ret; 
0x0000000040c196: add bl, al; nop [rax+rax]; lea rax, [rip+0x9d43a]; ret; 
0x0000000040c0f6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9d44c]; ret; 
0x0000000040c186: add bl, al; nop [rax+rax]; lea rax, [rip+0x9d451]; ret; 
0x0000000040c176: add bl, al; nop [rax+rax]; lea rax, [rip+0x9d468]; ret; 
0x0000000040c166: add bl, al; nop [rax+rax]; lea rax, [rip+0x9d47f]; ret; 
0x0000000040b556: add bl, al; nop [rax+rax]; lea rax, [rip+0x9e014]; ret; 
0x0000000040b546: add bl, al; nop [rax+rax]; lea rax, [rip+0x9e01c]; ret; 
0x0000000040b536: add bl, al; nop [rax+rax]; lea rax, [rip+0x9e023]; ret; 
0x0000000040b526: add bl, al; nop [rax+rax]; lea rax, [rip+0x9e02e]; ret; 
0x0000000040b516: add bl, al; nop [rax+rax]; lea rax, [rip+0x9e037]; ret; 
0x0000000040b4f6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9e040]; ret; 
0x0000000040b4e6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9e044]; ret; 
0x0000000040b4d6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9e04c]; ret; 
0x0000000040b4c6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9e04f]; ret; 
0x0000000040b4a6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9e077]; ret; 
0x0000000040b4b6: add bl, al; nop [rax+rax]; lea rax, [rip+0x9e08c]; ret; 
0x0000000040b506: add bl, al; nop [rax+rax]; lea rax, [rip+0xc02d8]; ret; 
0x00000000484216: add bl, al; nop [rax+rax]; mov rax, 0x2; ret; 
0x00000000484226: add bl, al; nop [rax+rax]; mov rax, 0x3; ret; 
0x00000000484236: add bl, al; nop [rax+rax]; mov rax, 0x4; ret; 
0x0000000040a4d6: add bl, al; nop [rax+rax]; mov rax, 0x4dec40; ret; 
0x0000000040a4c6: add bl, al; nop [rax+rax]; mov rax, 0x4dec80; ret; 
0x0000000040a476: add bl, al; nop [rax+rax]; mov rax, 0x4ded40; ret; 
0x0000000040a4e6: add bl, al; nop [rax+rax]; mov rax, 0x4dee80; ret; 
0x0000000040a466: add bl, al; nop [rax+rax]; mov rax, 0x4deec0; ret; 
0x0000000040a486: add bl, al; nop [rax+rax]; mov rax, 0x4e11a0; ret; 
0x0000000040a4f6: add bl, al; nop [rax+rax]; mov rax, 0x4e1260; ret; 
0x0000000040a4b6: add bl, al; nop [rax+rax]; mov rax, 0x4e12e0; ret; 
0x00000000484246: add bl, al; nop [rax+rax]; mov rax, 0x5; ret; 
0x00000000484256: add bl, al; nop [rax+rax]; mov rax, 0x6; ret; 
0x00000000484266: add bl, al; nop [rax+rax]; mov rax, 0x7; ret; 
0x000000004034f9: add bl, al; nop [rax+rax]; movzx esi, sil; mov [rip+0xdec16], esi; ret; 
0x000000004034e9: add bl, al; nop [rax+rax]; movzx esi, sil; mov [rip+0xdec22], esi; ret; 
0x000000004034d9: add bl, al; nop [rax+rax]; movzx esi, sil; mov [rip+0xdec26], esi; ret; 
0x000000004034c9: add bl, al; nop [rax+rax]; movzx esi, sil; mov [rip+0xdec32], esi; ret; 
0x00000000403399: add bl, al; nop [rax+rax]; movzx esi, sil; mov [rip+0xded6a], esi; ret; 
0x00000000403389: add bl, al; nop [rax+rax]; movzx esi, sil; mov [rip+0xded7e], esi; ret; 
0x000000004563af: add bl, al; nop [rax+rax]; nop [rax]; mov [rdi], dl; ret; 
0x0000000045609f: add bl, al; nop [rax+rax]; nop [rax]; ret; 
0x0000000040a496: add bl, al; nop [rax+rax]; xor eax, eax; ret; 
0x000000004a39ca: add bl, al; nop [rax]; endbr64; mov [rdi+0x98], rsi; ret; 
0x000000004a39da: add bl, al; nop [rax]; endbr64; mov rax, [rdi+0xa0]; ret; 
0x000000004a3a3a: add bl, al; nop [rax]; endbr64; mov rax, [rdi+0xa8]; ret; 
0x000000004a39ea: add bl, al; nop [rax]; endbr64; mov rax, [rdi+0xb8]; ret; 
0x0000000046385a: add bl, al; nop [rax]; endbr64; mov rax, [rip+0x821ad]; ret; 
0x0000000042886a: add bl, al; nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000049c92f: add bl, al; nop [rax]; xor eax, eax; ret; 
0x0000000042788d: add bl, al; nop; mov qword ptr [rdi+0xa0], 0xffffffffffffffff; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x00000000452b8e: add bl, al; ret; 
0x00000000410fbd: add bl, bpl; or bh, bh; push rbx; adc [rax-0x7d], cl; ret; 
0x000000004a4544: add bl, ch; leave; nop [rax+rax]; xor eax, eax; ret; 
0x00000000410fbe: add bl, ch; or bh, bh; push rbx; adc [rax-0x7d], cl; ret; 
0x0000000047f6aa: add bl, ch; ret far; 
0x000000004865e0: add bl, ch; ret; 
0x00000000430c14: add bl, ch; sahf; nop [rax+rax]; mov rsi, r12; call rax; 
0x0000000042ad00: add bl, ch; stosb [rdi]; nop [rax+rax]; call rax; 
0x0000000044e2bf: add bl, dh; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000004a1663: add bl, dh; divps xmm0, [rip+0x2ec10]; ret; 
0x0000000045a27b: add bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x0000000045649f: add bl, dh; movq [rdi-0x1], mm0; ret; 
0x000000004564af: add bl, dh; movq [rdi], mm0; ret; 
0x000000004554cf: add bl, dh; movq mm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x00000000426def: add bl, dh; nop edx, edi; cmp qword ptr [rdi+0x38], 0x0; je short 0x0000000000426e00; ret; 
0x000000004612ff: add bl, dh; nop edx, edi; lea rax, [rip+0x81f55]; ret; 
0x0000000040215f: add bl, dh; nop edx, edi; lea rax, [rip+0xa6f3d]; ret; 
0x000000004a39cf: add bl, dh; nop edx, edi; mov [rdi+0x98], rsi; ret; 
0x0000000045be1f: add bl, dh; nop edx, edi; mov eax, 0x18; syscall; 
0x0000000045ce1f: add bl, dh; nop edx, edi; mov eax, 0x1; syscall; 
0x0000000049ed1f: add bl, dh; nop edx, edi; mov eax, 0x26; syscall; 
0x00000000498f8f: add bl, dh; nop edx, edi; mov eax, 0x27; syscall; 
0x0000000045cb2f: add bl, dh; nop edx, edi; mov eax, 0x3; syscall; 
0x0000000045f8ff: add bl, dh; nop edx, edi; mov eax, 0x63; syscall; 
0x00000000484f1f: add bl, dh; nop edx, edi; mov eax, 0x68; syscall; 
0x00000000484f0f: add bl, dh; nop edx, edi; mov eax, 0x6b; syscall; 
0x00000000484f2f: add bl, dh; nop edx, edi; mov eax, 0x6c; syscall; 
0x0000000045c1df: add bl, dh; nop edx, edi; mov eax, 0x8; syscall; 
0x0000000048511f: add bl, dh; nop edx, edi; mov eax, 0xc; syscall; 
0x00000000426eaf: add bl, dh; nop edx, edi; mov eax, 0xffffffff; ret; 
0x0000000042850f: add bl, dh; nop edx, edi; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x000000004037cf: add bl, dh; nop edx, edi; mov eax, [rip+0xde92a]; ret; 
0x00000000498f9f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000045f89f: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000045f8cf: add bl, dh; nop edx, edi; mov r10, rcx; mov eax, 0x9d; syscall; 
0x00000000411acf: add bl, dh; nop edx, edi; mov rax, 0xffffffffffffffc0; add rax, fs:[0x0]; ret; 
0x0000000046fdff: add bl, dh; nop edx, edi; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046fddf: add bl, dh; nop edx, edi; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046fdbf: add bl, dh; nop edx, edi; mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x0000000042881f: add bl, dh; nop edx, edi; mov rax, 0xffffffffffffffff; ret; 
0x000000004916ef: add bl, dh; nop edx, edi; mov rax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x0000000042887f: add bl, dh; nop edx, edi; mov rax, [rdi+0x68]; ret; 
0x000000004a399f: add bl, dh; nop edx, edi; mov rax, [rdi+0x98]; ret; 
0x000000004a39df: add bl, dh; nop edx, edi; mov rax, [rdi+0xa0]; ret; 
0x000000004a3a3f: add bl, dh; nop edx, edi; mov rax, [rdi+0xa8]; ret; 
0x000000004a3a2f: add bl, dh; nop edx, edi; mov rax, [rdi+0xb0]; ret; 
0x000000004a39ef: add bl, dh; nop edx, edi; mov rax, [rdi+0xb8]; ret; 
0x0000000046d1ff: add bl, dh; nop edx, edi; mov rax, [rip+0x77c45]; ret; 
0x0000000046384f: add bl, dh; nop edx, edi; mov rax, [rip+0x821ad]; ret; 
0x0000000042885f: add bl, dh; nop edx, edi; mov rax, [rip+0xb98f5]; ret; 
0x0000000042888f: add bl, dh; nop edx, edi; mov rax, rdi; ret; 
0x0000000040316f: add bl, dh; nop edx, edi; movzx edi, dil; mov [rip+0xdef8a], edi; ret; 
0x0000000042884f: add bl, dh; nop edx, edi; ret; 
0x000000004278af: add bl, dh; nop edx, edi; xor eax, eax; ret; 
0x0000000045cdef: add bl, dh; nop edx, edi; xor eax, eax; syscall; 
0x0000000040a4c5: add bl, r8b; nop [rax+rax]; mov rax, 0x4dec80; ret; 
0x0000000040a4b5: add bl, r8b; nop [rax+rax]; mov rax, 0x4e12e0; ret; 
0x0000000040a495: add bl, r8b; nop [rax+rax]; xor eax, eax; ret; 
0x0000000040215e: add bl, sil; nop edx, edi; lea rax, [rip+0xa6f3d]; ret; 
0x000000004a39ce: add bl, sil; nop edx, edi; mov [rdi+0x98], rsi; ret; 
0x0000000045ce1e: add bl, sil; nop edx, edi; mov eax, 0x1; syscall; 
0x00000000498f8e: add bl, sil; nop edx, edi; mov eax, 0x27; syscall; 
0x00000000484f1e: add bl, sil; nop edx, edi; mov eax, 0x68; syscall; 
0x00000000484f0e: add bl, sil; nop edx, edi; mov eax, 0x6b; syscall; 
0x00000000484f2e: add bl, sil; nop edx, edi; mov eax, 0x6c; syscall; 
0x0000000042880e: add bl, sil; nop edx, edi; mov eax, 0xffffffff; ret; 
0x0000000042850e: add bl, sil; nop edx, edi; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x00000000498f9e: add bl, sil; nop edx, edi; mov r10, rcx; mov eax, 0x11; syscall; 
0x000000004a39de: add bl, sil; nop edx, edi; mov rax, [rdi+0xa0]; ret; 
0x000000004a3a3e: add bl, sil; nop edx, edi; mov rax, [rdi+0xa8]; ret; 
0x000000004a39ee: add bl, sil; nop edx, edi; mov rax, [rdi+0xb8]; ret; 
0x0000000046385e: add bl, sil; nop edx, edi; mov rax, [rip+0x821ad]; ret; 
0x0000000045fa5e: add bl, sil; nop edx, edi; ret; 
0x0000000042882e: add bl, sil; nop edx, edi; xor eax, eax; ret; 
0x0000000045606c: add byte ptr [rax+rax], 0x0; ret; 
0x00000000429340: add byte ptr [rax], 0x0; add [rax+0xca], bh; syscall; 
0x000000004391fb: add byte ptr [rax], 0x0; add [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x0000000043921b: add byte ptr [rax], 0x0; add [rax], al; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x0000000049a89b: add byte ptr [rax], 0x0; add [rax], al; call qword ptr [rbx]; 
0x00000000499583: add byte ptr [rax], 0x0; add [rax], al; call r13; 
0x0000000049ed1b: add byte ptr [rax], 0x0; add [rax], al; endbr64; mov eax, 0x26; syscall; 
0x0000000045c1db: add byte ptr [rax], 0x0; add [rax], al; endbr64; mov eax, 0x8; syscall; 
0x0000000048511b: add byte ptr [rax], 0x0; add [rax], al; endbr64; mov eax, 0xc; syscall; 
0x000000004a399b: add byte ptr [rax], 0x0; add [rax], al; endbr64; mov rax, [rdi+0x98]; ret; 
0x0000000042888b: add byte ptr [rax], 0x0; add [rax], al; endbr64; mov rax, rdi; ret; 
0x0000000040d763: add byte ptr [rax], 0x0; add [rax], al; lea rax, [rip+0x9bdb0]; ret; 
0x0000000040cc23: add byte ptr [rax], 0x0; add [rax], al; lea rax, [rip+0x9c8f0]; ret; 
0x0000000040c0e3: add byte ptr [rax], 0x0; add [rax], al; lea rax, [rip+0x9d430]; ret; 
0x000000004430db: add byte ptr [rax], 0x0; add [rax], al; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000040a77b: add byte ptr [rax], 0x0; add [rax], al; mov rax, 0x4dec40; pop rbp; ret; 
0x0000000040a79b: add byte ptr [rax], 0x0; add [rax], al; mov rax, 0x4dec80; pop rbp; ret; 
0x0000000040a78b: add byte ptr [rax], 0x0; add [rax], al; mov rax, 0x4decc0; pop rbp; ret; 
0x0000000040a7db: add byte ptr [rax], 0x0; add [rax], al; mov rax, 0x4ded00; pop rbp; ret; 
0x0000000040a7cb: add byte ptr [rax], 0x0; add [rax], al; mov rax, 0x4ded40; pop rbp; ret; 
0x0000000040a7eb: add byte ptr [rax], 0x0; add [rax], al; mov rax, 0x4ded80; pop rbp; ret; 
0x0000000040a7bb: add byte ptr [rax], 0x0; add [rax], al; mov rax, 0x4dedc0; pop rbp; ret; 
0x0000000040a7ab: add byte ptr [rax], 0x0; add [rax], al; mov rax, 0x4e11e0; pop rbp; ret; 
0x00000000442f1b: add byte ptr [rax], 0x0; add [rax], al; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x0000000045a7eb: add byte ptr [rax], 0x0; add [rax], al; movzx eax, cl; pop rbx; ret; 
0x0000000044322b: add byte ptr [rax], 0x0; add [rax], al; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x000000004431bb: add byte ptr [rax], 0x0; add [rax], al; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x0000000045ae83: add byte ptr [rax], 0x0; add [rax], al; pop rbp; ret; 
0x00000000407ce3: add byte ptr [rax], 0x0; add [rax], al; ret; 
0x00000000408a0b: add byte ptr [rax], 0x0; add [rax], al; xor eax, eax; ret; 
0x000000004233b3: add byte ptr [rax], 0x0; add [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x000000004407f7: add byte ptr [rax], 0x0; add [rdi+0x63], cl; or al, 0x8b; add r9, r11; notrack jmp r9; 
0x0000000042afe3: add byte ptr [rax], 0x0; add [rsi-0x77], ah; psubsw mm2, [rsi+rdi*8-0x1]; call qword ptr [rax+0x43d8d48]; 
0x0000000045a278: add byte ptr [rax], 0x0; add bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x0000000043e8b6: add byte ptr [rdi], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000431c96: add byte ptr [rdx], 0x0; cmove rax, rdx; ret; 
0x00000000430f76: add byte ptr [rdx], 0x0; cmovne rax, rdx; ret; 
0x00000000431c8f: add byte ptr [rdx], 0x0; lea rax, [rip+0x280a7]; cmove rax, rdx; ret; 
0x0000000048f92c: add ch, [rax+0x1be80003]; and edi, eax; jmp qword ptr [rsi+0x2e]; 
0x0000000048174a: add ch, [rcx]; rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x00000000430fb6: add ch, bh; call far fword ptr [rdx+0x31]; 
0x00000000485111: add ch, bl; ret far; 
0x0000000040a463: add ch, ch; add r11b, r8b; nop [rax+rax]; mov rax, 0x4deec0; ret; 
0x000000004739c8: add ch, cl; ret far; 
0x00000000450bf7: add cl, [r8-0x76b7fdbe]; clc; ret; 
0x0000000046a52e: add cl, [rax+0x39]; ret far; 
0x00000000469d54: add cl, [rax+0x39]; ret; 
0x0000000045a4f8: add cl, [rax+0x77f8c50f]; ret; 
0x00000000421a4d: add cl, [rax+0xf]; scasd [rdi]; ret; 
0x0000000040b514: add cl, [rax+rax]; ret; 
0x00000000431ca6: add cl, [rax-0x73]; adc eax, 0x27832; lea rax, [rip+0x278eb]; cmove rax, rdx; ret; 
0x00000000431b36: add cl, [rax-0x73]; adc eax, 0x27992; lea rax, [rip+0x27a4b]; cmove rax, rdx; ret; 
0x000000004319d6: add cl, [rax-0x73]; adc eax, 0x27b02; lea rax, [rip+0x27bbb]; cmove rax, rdx; ret; 
0x00000000431c38: add cl, [rax-0x73]; adc eax, 0x27c70; lea rax, [rip+0x27cb9]; cmove rax, rdx; ret; 
0x00000000431ac8: add cl, [rax-0x73]; adc eax, 0x27dd0; lea rax, [rip+0x27e19]; cmove rax, rdx; ret; 
0x00000000431968: add cl, [rax-0x73]; adc eax, 0x27f40; lea rax, [rip+0x27f89]; cmove rax, rdx; ret; 
0x00000000431c8a: add cl, [rax-0x73]; adc eax, 0x2805e; lea rax, [rip+0x280a7]; cmove rax, rdx; ret; 
0x00000000431b1a: add cl, [rax-0x73]; adc eax, 0x281be; lea rax, [rip+0x28207]; cmove rax, rdx; ret; 
0x000000004319ba: add cl, [rax-0x73]; adc eax, 0x2832e; lea rax, [rip+0x28377]; cmove rax, rdx; ret; 
0x00000000431a7a: add cl, [rax-0x73]; adc eax, 0x28ace; lea rax, [rip+0x28b27]; cmove rax, rdx; ret; 
0x00000000431be4: add cl, [rax-0x73]; add eax, 0x14914; lea rdx, [rip+0x16b5d]; cmovne rax, rdx; ret; 
0x00000000431b91: add cl, [rax-0x73]; add eax, 0x1d8a7; lea rdx, [rip+0x21cc0]; cmovne rax, rdx; ret; 
0x00000000430f41: add cl, [rax-0x73]; add eax, 0x1e407; lea rdx, [rip+0x1e5e0]; cmovne rax, rdx; ret; 
0x0000000043104b: add cl, [rax-0x73]; add eax, 0x3afd; lea rdx, [rip+0x5356]; cmovne rax, rdx; ret; 
0x0000000047c7da: add cl, [rax-0x73]; add eax, 0x6375e; jmp qword ptr [rax+rcx*8]; 
0x0000000047c5f9: add cl, [rax-0x73]; add eax, 0x6383f; jmp qword ptr [rax+rcx*8]; 
0x000000004318f2: add cl, [rax-0x73]; add eax, 0x7a86; lea rdx, [rip+0x25b3f]; cmovne rax, rdx; ret; 
0x000000004310a1: add cl, [rax-0x73]; add eax, 0xc97; lea rdx, [rip+0x1fc30]; cmovne rax, rdx; ret; 
0x00000000430ee1: add cl, [rax-0x73]; add eax, 0xeb7; lea rdx, [rip+0x25b0]; cmovne rax, rdx; ret; 
0x0000000044eec9: add cl, [rax-0x73]; jg short 0x000000000044eed0; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c59: add cl, [rax-0x73]; jg short 0x0000000000455c60; jne 0x00000000004564f0; ret; 
0x00000000472782: add cl, [rax-0x73]; or al, 0x13; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000047c3b5: add cl, [rax-0x73]; or eax, 0x63c83; jmp qword ptr [rcx+rax*8]; 
0x0000000042cb70: add cl, [rax-0x73]; push rsp; ret; 
0x00000000455015: add cl, [rax-0x75]; add eax, 0x5428948; lea rax, [rdx+0xc]; ret; 
0x00000000450c85: add cl, [rax-0x75]; add eax, 0x5428948; mov rax, rdi; ret; 
0x00000000450bb5: add cl, [rax-0x75]; or [r8-0x77], cl; or [rax-0x77], cl; clc; ret; 
0x00000000450bf8: add cl, [rax-0x76b7fdbe]; clc; ret; 
0x00000000450b65: add cl, [rax-0x77]; clc; ret; 
0x00000000483fc3: add cl, [rax-0x7b]; ror byte ptr [rax+0xf], cl; ret; 
0x00000000490a90: add cl, [rax-0x7d]; ret; 
0x0000000040a8b3: add cl, [rbp+0x10f504]; add [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x0000000040a86d: add cl, [rbp+0x14f504]; add [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x00000000443002: add cl, [rbx+0x257890e]; mov [rdi], ecx; ret; 
0x00000000450c33: add cl, [rbx+0x42890341]; add ecx, [rax-0x77]; clc; ret; 
0x00000000454f95: add cl, [rbx+0x42890541]; add eax, 0x8428d48; ret; 
0x00000000450c75: add cl, [rbx+0x42890841]; or [rax-0x77], cl; clc; ret; 
0x0000000047b610: add cl, [rcx+rcx*4-0x16]; call qword ptr [rax+0x38]; 
0x0000000041128b: add cl, [rcx-0x4029763e]; add dh, [rax]; add [rax], al; mov eax, 0x9e; syscall; 
0x0000000047c9d3: add cl, [rcx-0x77]; ret far; 
0x0000000048049c: add cl, [rcx-0x77]; ret; 
0x00000000450bf5: add cl, [rdx+0x42880241]; add cl, [rax-0x77]; clc; ret; 
0x00000000454f53: add cl, [rdx+0x42880441]; add al, 0x48; lea eax, [rdx+0x4]; ret; 
0x00000000450c13: add cl, [rdx+0x42880441]; add al, 0x48; mov eax, edi; ret; 
0x000000004772d1: add cl, ch; jmp rsp; 
0x0000000040b497: add cl, ch; mov [0x8d48001f0f000026], eax; add eax, 0x9e078; ret; 
0x000000004a7850: add cl, ch; mov bl, [rax-0x5]; jmp qword ptr [rsi+0x2e]; 
0x0000000046f048: add cl, ch; mov dl, 0x5; add [rax], al; xchg ax, ax; ret; 
0x0000000049fd00: add cl, ch; out dx, al; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000041a9f0: add cl, ch; pop rdx; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000041441c: add cl, ch; push rbp; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000401bff: add cl, ch; ret far; 
0x00000000407579: add cl, ch; ret; 
0x00000000401e87: add cl, cl; ret; 
0x00000000411291: add dh, [rax]; add [rax], al; mov eax, 0x9e; syscall; 
0x00000000458c97: add dh, [rbp+0x16]; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x0000000000458c90; ret; 
0x00000000458d47: add dh, [rbp+0x16]; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x0000000000458d40; ret; 
0x00000000480d51: add dh, [rbp+0x74]; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000459333: add dh, [rdx+0x8]; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x0000000042972c: add dh, [rsi+0x1]; ret; 
0x00000000401d59: add dh, al; add eax, 0xe251f; add [rbp-0x3d], ebx; nop [rax+rax]; ret; 
0x00000000474668: add dh, al; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x0000000047a281: add dh, al; test esp, ecx; idiv bh; jmp qword ptr [rax]; 
0x000000004431b3: add dh, bl; movq [rdi], mm1; ret; 
0x0000000040a805: add dh, ch; add [r13-0x3d], r11b; mov rax, 0x4e1260; pop rbp; ret; 
0x0000000049b9f9: add dh, dh; add eax, 0x49f1f; jne short 0x000000000049ba08; ret; 
0x00000000492e9f: add dh, dh; ret; 
0x00000000494696: add dil, al; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000401cda: add dil, r15b; loopne 0x0000000000401d45; nop; ret; 
0x00000000415704: add dl, [rbx-0x77]; ret far; 
0x00000000491843: add dword ptr [rax], 0x43894800; sbb [rax+0x5a], bl; pop rbx; ret; 
0x0000000042f17c: add dword ptr [rax], 0x89480000; fistp qword ptr [rax+0xca], st; syscall; 
0x0000000042b0b8: add dword ptr [rax], 0x89480000; out dx, eax; mov eax, 0xca; syscall; 
0x0000000042f7b6: add dword ptr [rax], 0x894c0000; out dx, eax; mov eax, 0xca; syscall; 
0x000000004a7d3e: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x3d232; syscall; 
0x00000000497dbe: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x4d246; syscall; 
0x00000000497b3a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x4d4c6; syscall; 
0x00000000495ab6: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x4f542; syscall; 
0x00000000495976: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x4f682; syscall; 
0x000000004718fe: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x73672; syscall; 
0x00000000471839: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x73737; syscall; 
0x00000000471697: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x738d9; syscall; 
0x000000004715bd: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x739b3; syscall; 
0x00000000463dee: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x81c12; syscall; 
0x00000000463c82: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x81d7e; syscall; 
0x00000000463b62: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x81e9e; syscall; 
0x0000000045b41a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0x8a5e6; syscall; 
0x00000000430a9a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb1d36; syscall; 
0x0000000042de9a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4936; syscall; 
0x0000000042de3a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4996; syscall; 
0x0000000042da7a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4d56; syscall; 
0x0000000042d81a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb4fb6; syscall; 
0x0000000042d242: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb558e; syscall; 
0x0000000042d20a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb55c6; syscall; 
0x0000000042edfa: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb5f26; syscall; 
0x0000000042e3ae: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xb6962; syscall; 
0x0000000042a50b: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xba805; syscall; 
0x0000000042a4da: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xba846; syscall; 
0x0000000042a25a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbaac6; syscall; 
0x00000000429d36: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbafea; syscall; 
0x0000000042894c: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc354; syscall; 
0x0000000042838c: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbc914; syscall; 
0x00000000428020: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbcc80; syscall; 
0x00000000427cde: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbcfc2; syscall; 
0x00000000426778: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe528; syscall; 
0x000000004264d8: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbe7c8; syscall; 
0x00000000426184: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xbeb1c; syscall; 
0x0000000042018a: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc5876; syscall; 
0x0000000041f139: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc6767; syscall; 
0x0000000041eff9: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc68a7; syscall; 
0x0000000041edc2: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc6ade; syscall; 
0x0000000041ed87: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc6b19; syscall; 
0x0000000041eca3: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xc6bfd; syscall; 
0x000000004156d7: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xcf151; syscall; 
0x00000000413d34: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xd0abc; syscall; 
0x00000000412bb5: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xd1b93; syscall; 
0x00000000412b87: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xd1bc1; syscall; 
0x00000000412a3b: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xd1d0d; syscall; 
0x000000004012d3: add dword ptr [rax], 0xcab80000; add [rax], al; add [rax-0x73], cl; cmp eax, 0xe356d; syscall; 
0x000000004261e4: add dword ptr [rax], 0xcab80000; add [rax], al; add [rdi], cl; add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x0000000042a662: add dword ptr [rax], 0xcab80000; add [rax], al; add [rdi], cl; add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x0000000042e383: add dword ptr [rax], 0xd8890000; syscall; 
0x000000004839fb: add dword ptr [rbx+0x3], 0xe24ce800; clc; jmp qword ptr [rsi+0x2e]; 
0x0000000043e578: add dword ptr [rdi], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e818: add dword ptr [rdi], 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045addf: add dword ptr [rdx+0x2b], 0xe2748104; ret; 
0x00000000499026: add dword ptr [rdx+rax*2], 0x1; ret; 
0x000000004319c6: add dword ptr [rdx], 0x0; cmove rax, rdx; ret; 
0x000000004319bf: add dword ptr [rdx], 0x0; lea rax, [rip+0x28377]; cmove rax, rdx; ret; 
0x000000004319be: add dword ptr [rdx], 0x0; lea rax, [rip+0x28377]; cmove rax, rdx; ret; 
0x00000000430f6f: add dword ptr [rdx], 0x58d4800; xlat [rbx]; add byte ptr [rdx], 0x0; cmovne rax, rdx; ret; 
0x000000004288d6: add dword ptr [rip+0xbc3d7], 0x1; pop rbx; ret; 
0x0000000041ee9d: add dword ptr [rip+0xc6a14], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000045658d: add eax, 0x10; lea r11, [rip+0x61269]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000048f136: add eax, 0x13750000; mov r8, [rip+0x5632c]; mov rax, r8; ret; 
0x00000000481cdb: add eax, 0x13e0; cmove rax, rdx; ret; 
0x00000000431be7: add eax, 0x14914; lea rdx, [rip+0x16b5d]; cmovne rax, rdx; ret; 
0x000000004600e5: add eax, 0x15b800; add [rax], al; syscall; 
0x00000000408b0d: add eax, 0x18c48348; ret; 
0x00000000462a6d: add eax, 0x1; push rax; call rbx; 
0x000000004841e1: add eax, 0x1; ret; 
0x00000000431d2b: add eax, 0x1bfc0; cmove rax, rdx; ret; 
0x00000000430e84: add eax, 0x1cc37; lea rdx, [rip+0x26290]; cmovne rax, rdx; ret; 
0x00000000430feb: add eax, 0x1d330; cmove rax, rdx; ret; 
0x00000000431b94: add eax, 0x1d8a7; lea rdx, [rip+0x21cc0]; cmovne rax, rdx; ret; 
0x00000000430f44: add eax, 0x1e407; lea rdx, [rip+0x1e5e0]; cmovne rax, rdx; ret; 
0x0000000040a902: add eax, 0x1f0fe0ff; add [rax-0x1], bh; ret; 
0x00000000403966: add eax, 0x1ff8c100; and eax, 0xfffffffe; add rsp, 0x18; ret; 
0x0000000046fe6a: add eax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000044e5e5: add eax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000439335: add eax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000483d44: add eax, 0x257; lea rdx, [rip+0x30]; cmovne rax, rdx; ret; 
0x000000004839bd: add eax, 0x258d4c00; fidiv st, dword ptr [rbp+0x39480005]; ret; 
0x00000000414372: add eax, 0x26850f00; add [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x000000004318b4: add eax, 0x272f7; cmove rax, rdx; ret; 
0x00000000431cb0: add eax, 0x278eb; cmove rax, rdx; ret; 
0x00000000431b40: add eax, 0x27a4b; cmove rax, rdx; ret; 
0x0000000041e159: add eax, 0x27b9; add [rcx+0x48050fc8], cl; mov edi, eax; mov eax, 0xba; syscall; 
0x000000004319e0: add eax, 0x27bbb; cmove rax, rdx; ret; 
0x00000000431c42: add eax, 0x27cb9; cmove rax, rdx; ret; 
0x00000000431ad2: add eax, 0x27e19; cmove rax, rdx; ret; 
0x00000000431972: add eax, 0x27f89; cmove rax, rdx; ret; 
0x00000000431c94: add eax, 0x280a7; cmove rax, rdx; ret; 
0x00000000430f74: add eax, 0x280d7; cmovne rax, rdx; ret; 
0x00000000431b24: add eax, 0x28207; cmove rax, rdx; ret; 
0x000000004319c4: add eax, 0x28377; cmove rax, rdx; ret; 
0x00000000431a5b: add eax, 0x287f0; cmovne rax, rdx; ret; 
0x00000000431a3c: add eax, 0x289df; cmove rax, rdx; ret; 
0x00000000431a84: add eax, 0x28b27; cmove rax, rdx; ret; 
0x0000000045cfdf: add eax, 0x28c48348; ret; 
0x000000004841d8: add eax, 0x2; ret; 
0x00000000452a64: add eax, 0x2c5850f; add [rax], al; ret; 
0x000000004573b2: add eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x000000004a1667: add eax, 0x2ec10; ret; 
0x000000004a165f: add eax, 0x2ec14; divss xmm0, [rip+0x2ec10]; ret; 
0x000000004a18d6: add eax, 0x2f3c0000; ja 0x0000000000401723; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000042a6c0: add eax, 0x319b; mov [rip+0xb80f4], rax; ret; 
0x00000000463ee4: add eax, 0x31f63100; jmp qword ptr [rsi+0xf]; 
0x0000000042a6b2: add eax, 0x3429; mov [rip+0xb810a], rax; lea rax, [rip+0x319b]; mov [rip+0xb80f4], rax; ret; 
0x000000004985ab: add eax, 0x38c48348; ret; 
0x00000000468209: add eax, 0x39480000; ret; 
0x000000004841f1: add eax, 0x3; ret; 
0x0000000043104e: add eax, 0x3afd; lea rdx, [rip+0x5356]; cmovne rax, rdx; ret; 
0x000000004a7cfc: add eax, 0x3d273; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x000000004a78ad: add eax, 0x3d5a2; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000048897c: add eax, 0x3d8b4800; ret; 
0x0000000046555b: add eax, 0x3d8d4800; add eax, 0xc6e6e800; cli; jmp qword ptr [rsi+0xf]; 
0x000000004641f4: add eax, 0x3d8d4800; jne short 0x0000000000464248; add eax, 0xda4ee800; cli; jmp qword ptr [rsi+0x66]; 
0x0000000046537f: add eax, 0x3d8d4800; mov bh, 0x42; add eax, 0xc8c2e800; cli; jmp qword ptr [rsi-0x70]; 
0x00000000467da6: add eax, 0x3d8d4800; or [rcx], ebx; add eax, 0x9e9ce800; cli; jmp qword ptr [rsi+0x66]; 
0x00000000465d47: add eax, 0x3d8d4800; pop rsi; cmp [rip-0x41041800], al; cli; jmp qword ptr [rsi+0x66]; 
0x000000004638e0: add eax, 0x3d8d4800; push rsi; add eax, 0xe362e800; cli; jmp qword ptr [rsi-0x70]; 
0x00000000472fb1: add eax, 0x3d8d4800; push sp; add eax, 0xec91e800; stc; call qword ptr [rax-0x3f7c3977]; 
0x0000000045a8d3: add eax, 0x3d8d4800; rol byte ptr [rip+0x736fe800], 0x1; sti; jmp qword ptr [rsi+0x66]; 
0x00000000462af4: add eax, 0x3d8d4800; sti; movsxd eax, [rip-0xeb11800]; cli; jmp qword ptr [rsi+0x2e]; 
0x0000000045b8a7: add eax, 0x3d8d4800; test esp, eax; add eax, 0x639be800; sti; jmp qword ptr [rsi+0x2e]; 
0x000000004864e2: add eax, 0x401f0f00; add [rax-0x77], cl; ret far; 
0x00000000484f1a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x68; syscall; 
0x00000000484f0a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x6b; syscall; 
0x00000000484f2a: add eax, 0x401f0fc3; add bl, dh; nop edx, edi; mov eax, 0x6c; syscall; 
0x0000000044e605: add eax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000439345: add eax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000045a757: add eax, 0x4634800; mov esi, 0x3ef00148; jmp rax; 
0x0000000045bb25: add eax, 0x4634800; stosb [rdi]; add rax, rdx; notrack jmp rax; 
0x0000000048e889: add eax, 0x46850f00; add al, [rax]; add [rbx-0x28f7b], cl; jmp qword ptr [rsi+0xf]; 
0x00000000454f97: add eax, 0x48054289; lea eax, [rdx+0x8]; ret; 
0x00000000450c47: add eax, 0x48054289; mov eax, edi; ret; 
0x00000000442cf3: add eax, 0x480e8b48; mov [rdi+0x5], edx; mov [rdi], rcx; ret; 
0x00000000456b16: add eax, 0x480f8948; mov [rdi+0x5], edx; lea rax, [rdi+0xc]; ret; 
0x00000000455496: add eax, 0x480f8948; mov [rdi+0x5], edx; ret; 
0x000000004461cf: add eax, 0x487c5162; adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x000000004594b4: add eax, 0x487cf162; adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x0000000048b5d6: add eax, 0x48c03100; add esp, 0x8; ret; 
0x00000000404feb: add eax, 0x48c48348; ret; 
0x0000000043e967: add eax, 0x49000780; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b7a7: add eax, 0x490007b0; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048f040: add eax, 0x490c7500; lea eax, [rax+0x1]; mov [rip+0x56421], rax; ret; 
0x0000000048f03e: add eax, 0x490c7500; lea eax, [rax+0x1]; mov [rip+0x56421], rax; ret; 
0x0000000049b9fb: add eax, 0x49f1f; jne short 0x000000000049ba08; ret; 
0x00000000452aba: add eax, 0x49f88948; sub eax, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000452d30; ret; 
0x00000000452b3c: add eax, 0x49f88948; sub eax, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000452d30; ret; 
0x00000000499017: add eax, 0x4c114; jae short 0x000000000049902a; mov rdx, [rip+0x4c113]; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000004991e5: add eax, 0x4c79e; ret; 
0x0000000045cf8a: add eax, 0x4cbfe800; sti; jmp qword ptr [rsi+0x2e]; 
0x00000000497eb9: add eax, 0x4d16a; ret; 
0x00000000497ea2: add eax, 0x4d181; add rsp, 0x8; ret; 
0x00000000497eb2: add eax, 0x4d189; mov [rip+0x4d16a], rax; ret; 
0x00000000497e9b: add eax, 0x4d1a0; mov [rip+0x4d181], rax; add rsp, 0x8; ret; 
0x0000000048f1a6: add eax, 0x52f8d; mov [rdi], rax; mov rax, [rip+0x562b3]; mov [rsi], rax; ret; 
0x000000004916d2: add eax, 0x53925; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x00000000455018: add eax, 0x5428948; lea rax, [rdx+0xc]; ret; 
0x00000000450c88: add eax, 0x5428948; mov rax, rdi; ret; 
0x00000000452a60: add eax, 0x54a8d48; jne 0x0000000000452d30; ret; 
0x0000000048f1b0: add eax, 0x562b3; mov [rsi], rax; ret; 
0x0000000048f13f: add eax, 0x5632c; mov rax, r8; ret; 
0x0000000048f04a: add eax, 0x56421; ret; 
0x0000000048f03d: add eax, 0x5642e; jne short 0x000000000048f050; lea rax, [r8+0x1]; mov [rip+0x56421], rax; ret; 
0x00000000455cba: add eax, 0x57f8d48; jne 0x00000000004564f0; ret; 
0x0000000048a35f: add eax, 0x58e5c; shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x000000004847a2: add eax, 0x5d2f1; test rax, rax; je short 0x00000000004847e0; call rax; 
0x00000000485135: add eax, 0x5fe5e; cmp rdi, rax; ja short 0x0000000000485168; xor eax, eax; ret; 
0x0000000044e651: add eax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000439373: add eax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000047c806: add eax, 0x63335; mov r11, rcx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047c7dd: add eax, 0x6375e; jmp qword ptr [rax+rcx*8]; 
0x0000000047c59e: add eax, 0x6379d; mov r11, rcx; mov dword ptr [rbp-0x4e8], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047c5fc: add eax, 0x6383f; jmp qword ptr [rax+rcx*8]; 
0x0000000045b8ae: add eax, 0x639be800; sti; jmp qword ptr [rsi+0x2e]; 
0x00000000498664: add eax, 0x67; cmovne rax, rdx; ret; 
0x0000000048f1b3: add eax, 0x6894800; ret; 
0x000000004763a0: add eax, 0x6909b; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000475b5c: add eax, 0x69cdf; jmp qword ptr [rax+rdx*8]; 
0x000000004758f0: add eax, 0x69d4b; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000475959: add eax, 0x69de2; jmp qword ptr [rax+rdx*8]; 
0x00000000478bca: add eax, 0x6cef9; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x000000004988db: add eax, 0x70; cmove rax, rdx; ret; 
0x00000000431ceb: add eax, 0x7330; cmove rax, rdx; ret; 
0x0000000047277a: add eax, 0x73349; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000045a8da: add eax, 0x736fe800; sti; jmp qword ptr [rsi+0x66]; 
0x0000000046e48e: add eax, 0x737ad; mov rax, [rax+rbp*8]; test rax, rax; je short 0x000000000046e49e; call rax; 
0x0000000046e208: add eax, 0x73a33; mov rax, [rax+r12*8]; test rax, rax; je short 0x000000000046e218; call rax; 
0x0000000046fd62: add eax, 0x73cc9; mov [rip+0x73cca], rdx; cmp fs:[rdi], rsi; je short 0x000000000046fd78; ret; 
0x0000000040207c: add eax, 0x75a1ff83; add ebx, eax; mov eax, 0xfffffff2; ret; 
0x0000000046d206: add eax, 0x77c45; ret; 
0x0000000048f1a9: add eax, 0x7894800; mov rax, [rip+0x562b3]; mov [rsi], rax; ret; 
0x000000004318f5: add eax, 0x7a86; lea rdx, [rip+0x25b3f]; cmovne rax, rdx; ret; 
0x0000000043191a: add eax, 0x7e61; test byte ptr [rip+0xb34bf], 0x1; je short 0x00000000004318e1; ret; 
0x00000000464ce9: add eax, 0x8014e; test eax, eax; je short 0x0000000000464cf8; ret; 
0x0000000046133b: add eax, 0x80760; pop rbx; ret; 
0x00000000481ddb: add eax, 0x810; cmove rax, rdx; ret; 
0x00000000461306: add eax, 0x81f55; ret; 
0x00000000463856: add eax, 0x821ad; ret; 
0x00000000455cbe: add eax, 0x82b850f; add [rax], al; ret; 
0x00000000479f64: add eax, 0x83410000; out dx, eax; add [rax-0x93343], eax; jmp qword ptr [rax]; 
0x0000000045f87e: add eax, 0x8384d; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004620be: add eax, 0x83891; ret; 
0x0000000046208e: add eax, 0x838c1; ret; 
0x0000000046205d: add eax, 0x838f2; pop rbx; ret; 
0x0000000046201e: add eax, 0x83931; ret; 
0x00000000461fee: add eax, 0x83961; ret; 
0x00000000461fbd: add eax, 0x83992; pop rbx; ret; 
0x00000000454f9a: add eax, 0x8428d48; ret; 
0x00000000461315: add eax, 0x846d6; test eax, eax; je short 0x0000000000461320; ret; 
0x0000000045f825: add eax, 0x8615e; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x0000000045cf66: add eax, 0x861ed; test rax, rax; je short 0x000000000045cf71; ret; 
0x00000000476125: add eax, 0x89440000; ror byte ptr [rcx-0x4ef73], 0x1; jmp far fword ptr [rcx]; 
0x000000004216e0: add eax, 0x89480000; and al, 0x10; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000045e78b: add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000435da8: add eax, 0x894d0000; ret far; 
0x0000000042770f: add eax, 0x8dbbc; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000042767f: add eax, 0x8dc4c; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000046f04b: add eax, 0x90660000; ret; 
0x00000000431c63: add eax, 0x9568; lea rdx, [rip+0xeaf1]; cmovne rax, rdx; ret; 
0x000000004612f3: add eax, 0x956e800; sti; jmp qword ptr [rsi+0xf]; 
0x00000000431af3: add eax, 0x96b8; lea rdx, [rip+0xec41]; cmovne rax, rdx; ret; 
0x0000000048362b: add eax, 0x9b0; cmove rax, rdx; ret; 
0x0000000040d8b2: add eax, 0x9bcf9; ret; 
0x0000000040d8a2: add eax, 0x9bd00; ret; 
0x0000000040d8aa: add eax, 0x9bd08; ret; 
0x0000000040d862: add eax, 0x9bd1d; ret; 
0x0000000040d872: add eax, 0x9bd1e; ret; 
0x0000000040d82a: add eax, 0x9bd3b; ret; 
0x0000000040d832: add eax, 0x9bd3c; ret; 
0x0000000040d89a: add eax, 0x9bd71; ret; 
0x0000000040d892: add eax, 0x9bd72; ret; 
0x0000000040d88a: add eax, 0x9bd74; ret; 
0x0000000040d882: add eax, 0x9bd76; ret; 
0x0000000040d7e2: add eax, 0x9bd77; ret; 
0x0000000040d84a: add eax, 0x9bd79; ret; 
0x0000000040d852: add eax, 0x9bd7f; ret; 
0x0000000040d7c2: add eax, 0x9bd80; ret; 
0x0000000040d7b2: add eax, 0x9bd84; ret; 
0x0000000040d842: add eax, 0x9bd88; ret; 
0x0000000040d7a2: add eax, 0x9bd8c; ret; 
0x0000000040d7d2: add eax, 0x9bd8e; ret; 
0x0000000040d792: add eax, 0x9bd8f; ret; 
0x0000000040d76a: add eax, 0x9bdb0; ret; 
0x0000000040d772: add eax, 0x9bdb7; ret; 
0x0000000040d822: add eax, 0x9bdba; ret; 
0x0000000040d782: add eax, 0x9bdcc; ret; 
0x0000000040d812: add eax, 0x9bdd1; ret; 
0x0000000040d802: add eax, 0x9bde8; ret; 
0x0000000040d7f2: add eax, 0x9bdff; ret; 
0x0000000040cd72: add eax, 0x9c839; ret; 
0x0000000040cd62: add eax, 0x9c840; ret; 
0x0000000040cd6a: add eax, 0x9c848; ret; 
0x0000000040cd22: add eax, 0x9c85d; ret; 
0x0000000040cd32: add eax, 0x9c85e; ret; 
0x0000000040ccea: add eax, 0x9c87b; ret; 
0x0000000040ccf2: add eax, 0x9c87c; ret; 
0x0000000040cd5a: add eax, 0x9c8b1; ret; 
0x0000000040cd52: add eax, 0x9c8b2; ret; 
0x0000000040cd4a: add eax, 0x9c8b4; ret; 
0x0000000040cd42: add eax, 0x9c8b6; ret; 
0x0000000040cca2: add eax, 0x9c8b7; ret; 
0x0000000040cd0a: add eax, 0x9c8b9; ret; 
0x0000000040cd12: add eax, 0x9c8bf; ret; 
0x0000000040cc82: add eax, 0x9c8c0; ret; 
0x0000000040cc72: add eax, 0x9c8c4; ret; 
0x0000000040cd02: add eax, 0x9c8c8; ret; 
0x0000000040cc62: add eax, 0x9c8cc; ret; 
0x0000000040cc92: add eax, 0x9c8ce; ret; 
0x0000000040cc52: add eax, 0x9c8cf; ret; 
0x0000000040cc2a: add eax, 0x9c8f0; ret; 
0x0000000040cc32: add eax, 0x9c8f7; ret; 
0x0000000040cce2: add eax, 0x9c8fa; ret; 
0x0000000040cc42: add eax, 0x9c90c; ret; 
0x0000000040ccd2: add eax, 0x9c911; ret; 
0x0000000040ccc2: add eax, 0x9c928; ret; 
0x0000000040ccb2: add eax, 0x9c93f; ret; 
0x0000000040c232: add eax, 0x9d379; ret; 
0x0000000040c222: add eax, 0x9d380; ret; 
0x0000000040c22a: add eax, 0x9d388; ret; 
0x0000000040c1e2: add eax, 0x9d39d; ret; 
0x0000000040c1f2: add eax, 0x9d39e; ret; 
0x0000000040c1aa: add eax, 0x9d3bb; ret; 
0x0000000040c1b2: add eax, 0x9d3bc; ret; 
0x0000000040c21a: add eax, 0x9d3f1; ret; 
0x0000000040c212: add eax, 0x9d3f2; ret; 
0x0000000040c20a: add eax, 0x9d3f4; ret; 
0x0000000040c202: add eax, 0x9d3f6; ret; 
0x0000000040c162: add eax, 0x9d3f7; ret; 
0x0000000040c1ca: add eax, 0x9d3f9; ret; 
0x0000000040c1d2: add eax, 0x9d3ff; ret; 
0x0000000040c142: add eax, 0x9d400; ret; 
0x0000000040c132: add eax, 0x9d404; ret; 
0x0000000040c1c2: add eax, 0x9d408; ret; 
0x0000000040c122: add eax, 0x9d40c; ret; 
0x0000000040c152: add eax, 0x9d40e; ret; 
0x0000000040c112: add eax, 0x9d40f; ret; 
0x0000000040c0ea: add eax, 0x9d430; ret; 
0x0000000040c0f2: add eax, 0x9d437; ret; 
0x0000000040c1a2: add eax, 0x9d43a; ret; 
0x0000000040c102: add eax, 0x9d44c; ret; 
0x0000000040c192: add eax, 0x9d451; ret; 
0x0000000040c182: add eax, 0x9d468; ret; 
0x0000000040c172: add eax, 0x9d47f; ret; 
0x0000000040b5fa: add eax, 0x9e004; ret; 
0x0000000040b5f2: add eax, 0x9e012; ret; 
0x0000000040b562: add eax, 0x9e014; ret; 
0x0000000040b56a: add eax, 0x9e015; ret; 
0x0000000040b57a: add eax, 0x9e016; ret; 
0x0000000040b5ba: add eax, 0x9e017; ret; 
0x0000000040b58a: add eax, 0x9e018; ret; 
0x0000000040b592: add eax, 0x9e019; ret; 
0x0000000040b5c2: add eax, 0x9e01a; ret; 
0x0000000040b5a2: add eax, 0x9e01b; ret; 
0x0000000040b552: add eax, 0x9e01c; ret; 
0x0000000040b5ea: add eax, 0x9e021; ret; 
0x0000000040b542: add eax, 0x9e023; ret; 
0x0000000040b532: add eax, 0x9e02e; ret; 
0x0000000040b522: add eax, 0x9e037; ret; 
0x0000000040b502: add eax, 0x9e040; ret; 
0x0000000040b4f2: add eax, 0x9e044; ret; 
0x0000000040b4e2: add eax, 0x9e04c; ret; 
0x0000000040b4d2: add eax, 0x9e04f; ret; 
0x0000000040b4b2: add eax, 0x9e077; ret; 
0x0000000040b4a2: add eax, 0x9e078; ret; 
0x0000000040b4c2: add eax, 0x9e08c; ret; 
0x00000000467dad: add eax, 0x9e9ce800; cli; jmp qword ptr [rsi+0x66]; 
0x00000000402166: add eax, 0xa6f3d; ret; 
0x00000000430e7c: add eax, 0xb3f62; lea rax, [rip+0x1cc37]; lea rdx, [rip+0x26290]; cmovne rax, rdx; ret; 
0x00000000476840: add eax, 0xb409e800; stc; jmp qword ptr [rsi+0xf]; 
0x0000000042e4d1: add eax, 0xb42ea; ret; 
0x0000000042e4c3: add eax, 0xb4300; lea rax, [rip-0xc6f]; mov [rip+0xb42ea], rax; ret; 
0x0000000042e46f: add eax, 0xb68a8; add [rax], al; add [rax], al; ret; 
0x0000000042a6c7: add eax, 0xb80f4; ret; 
0x0000000042a6b9: add eax, 0xb810a; lea rax, [rip+0x319b]; mov [rip+0xb80f4], rax; ret; 
0x0000000042a5bb: add eax, 0xb8220; add rsp, 0x10; pop rbp; ret; 
0x00000000429763: add eax, 0xb9004; ret; 
0x0000000042973d: add eax, 0xb900e; ret; 
0x00000000429759: add eax, 0xb9012; add [rax], eax; add [rax], al; mov [rip+0xb9004], eax; ret; 
0x00000000429714: add eax, 0xb902f; ret; 
0x00000000429732: add eax, 0xb9039; add [rax], eax; add [rax], al; mov [rip+0xb900e], rax; ret; 
0x000000004296f4: add eax, 0xb9047; ret; 
0x00000000429709: add eax, 0xb9062; add [rax], eax; add [rax], al; mov [rip+0xb902f], rax; ret; 
0x000000004296e9: add eax, 0xb9082; add [rax], eax; add [rax], al; mov [rip+0xb9047], rax; ret; 
0x000000004293ea: add eax, 0xb93b9; ret; 
0x000000004293d3: add eax, 0xb93c8; ret; 
0x0000000042937a: add eax, 0xb93d9; ret; 
0x0000000042936a: add eax, 0xb93f1; ret; 
0x00000000428866: add eax, 0xb98f5; ret; 
0x000000004297a7: add eax, 0xbb58c; ret; 
0x00000000429779: add eax, 0xbb5b6; ret; 
0x00000000428971: add eax, 0xbc33e; add [rax], al; add [rax], al; ret; 
0x00000000428966: add eax, 0xbc341; add [rax], al; add [rax], al; mov qword ptr [rip+0xbc33e], 0x0; ret; 
0x0000000040d85a: add eax, 0xbdf90; ret; 
0x0000000040cd1a: add eax, 0xbead0; ret; 
0x00000000465d4e: add eax, 0xbefbe800; cli; jmp qword ptr [rsi+0x66]; 
0x0000000040c1da: add eax, 0xbf610; ret; 
0x00000000465c3f: add eax, 0xc00ae800; cli; jmp qword ptr [rsi+0x2e]; 
0x0000000040b512: add eax, 0xc02d8; ret; 
0x0000000043abba: add eax, 0xc0310000; ret; 
0x0000000043ac39: add eax, 0xc0310000; ret; 
0x000000004847a5: add eax, 0xc0854800; je short 0x00000000004847e0; call rax; 
0x0000000048f142: add eax, 0xc0894c00; ret; 
0x00000000431993: add eax, 0xc218; lea rdx, [rip+0x118b1]; cmovne rax, rdx; ret; 
0x00000000484253: add eax, 0xc3000000; nop [rax+rax]; mov rax, 0x6; ret; 
0x0000000045501c: add eax, 0xc428d48; ret; 
0x00000000456b1d: add eax, 0xc478d48; ret; 
0x00000000465561: add eax, 0xc6e6e800; cli; jmp qword ptr [rsi+0xf]; 
0x00000000485138: add eax, 0xc7394800; ja short 0x0000000000485168; xor eax, eax; ret; 
0x00000000465386: add eax, 0xc8c2e800; cli; jmp qword ptr [rsi-0x70]; 
0x000000004310a4: add eax, 0xc97; lea rdx, [rip+0x1fc30]; cmovne rax, rdx; ret; 
0x0000000045a787: add eax, 0xce8c100; and eax, 0xf; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x000000004109eb: add eax, 0xd38f0; ret; 
0x000000004109e4: add eax, 0xd38ff; lea rax, [rip+0xd38f0]; ret; 
0x000000004109db: add eax, 0xd3900; mov eax, [rdx+rsi]; mov [rip+0xd38ff], eax; lea rax, [rip+0xd38f0]; ret; 
0x00000000410bbf: add eax, 0xd423c; add rsp, 0x88; pop rbx; ret; 
0x000000004641fb: add eax, 0xda4ee800; cli; jmp qword ptr [rsi+0x66]; 
0x00000000455dbd: add eax, 0xde88349; lea rdi, [rdi+0xd]; jne 0x00000000004564f0; ret; 
0x000000004037d5: add eax, 0xde92a; ret; 
0x00000000403155: add eax, 0xdefae; test eax, eax; js short 0x0000000000403160; ret; 
0x0000000040308f: add eax, 0xdf070; add [rax], eax; add [rax], al; ret; 
0x00000000402175: add eax, 0xe2156; test eax, eax; je short 0x0000000000402180; ret; 
0x000000004020a3: add eax, 0xe2228; add rsp, 0x8; ret; 
0x00000000401d5b: add eax, 0xe251f; add [rbp-0x3d], ebx; nop [rax+rax]; ret; 
0x000000004638e7: add eax, 0xe362e800; cli; jmp qword ptr [rsi-0x70]; 
0x000000004017d6: add eax, 0xe3879; add [rax], al; add [rax], al; pop rdx; ret; 
0x0000000048a362: add eax, 0xe4c14900; add al, 0x49; add esp, eax; call qword ptr [r12+0x60]; 
0x0000000045bbcc: add eax, 0xe8c03100; ret far; 
0x000000004626bc: add eax, 0xe8ff3100; imul esi, 0x1; add [rax-0x77], cl; ret; 
0x0000000048b1cd: add eax, 0xe95d5b00; sub cl, [rsi-0x49]; jmp qword ptr [rsi+0x2e]; 
0x00000000430ee4: add eax, 0xeb7; lea rdx, [rip+0x25b0]; cmovne rax, rdx; ret; 
0x00000000472fb8: add eax, 0xec91e800; stc; call qword ptr [rax-0x3f7c3977]; 
0x00000000481d1b: add eax, 0xed0; cmove rax, rdx; ret; 
0x00000000443059: add eax, 0xef00ff2; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000462afb: add eax, 0xf14ee800; cli; jmp qword ptr [rsi+0x2e]; 
0x00000000443062: add eax, 0xf7f0ff3; ret; 
0x00000000409e5f: add eax, 0xffdf4be8; dec dword ptr [rax-0x7d]; ret; 
0x00000000498934: add eax, 0xfffc1a77; cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x00000000430404: add eax, 0xfffebee9; jmp qword ptr [rsi+0xf]; 
0x000000004156e8: add eax, 0xfffefbe9; jmp qword ptr [rsi-0x70]; 
0x0000000042cf34: add eax, 0xffff01e9; jmp qword ptr [rsi+0xf]; 
0x0000000041ecb4: add eax, 0xffff28e9; jmp qword ptr [rsi+0xf]; 
0x00000000426789: add eax, 0xffff2be9; call qword ptr [rax+0xff0c889]; 
0x00000000428031: add eax, 0xffff3ee9; jmp qword ptr [rsi+0xf]; 
0x000000004261ee: add eax, 0xffff44e9; jmp qword ptr [rsi+0x66]; 
0x0000000040214b: add eax, 0xffff51e9; jmp qword ptr [rsi+0x66]; 
0x0000000042a66c: add eax, 0xffff70e9; jmp qword ptr [rsi+0x66]; 
0x000000004030ae: add eax, 0xffff7ce8; inc dword ptr [rbx+0x77401f8]; xor eax, eax; pop r12; ret; 
0x0000000042e4ca: add eax, 0xfffff391; mov [rip+0xb42ea], rax; ret; 
0x0000000042e4bc: add eax, 0xfffff61f; mov [rip+0xb4300], rax; lea rax, [rip-0xc6f]; mov [rip+0xb42ea], rax; ret; 
0x00000000411add: add eax, [0x0]; ret; 
0x00000000413ada: add eax, [rax-0x80]; jmp qword ptr [rcx+rax*2+0xf]; 
0x000000004a043c: add eax, [rax]; add [rax+0x1], cl; ret; 
0x000000004988d6: add eax, [rax]; add [rax-0x73], cl; add eax, 0x70; cmove rax, rdx; ret; 
0x0000000048a92f: add eax, [rax]; add [rax-0x77], cl; ret; 
0x000000004a78b0: add eax, [rax]; add [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x00000000425145: add eax, [rax]; add [rax], al; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x00000000484233: add eax, [rax]; add [rax], al; ret; 
0x0000000045c321: add eax, [rax]; add [rax], al; syscall; 
0x00000000438718: add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x000000004677a2: add eax, [rax]; add [rbx+0x4be02e0], al; add [rax], al; add [rcx-0x77], al; ret; 
0x0000000045e943: add eax, [rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000046b890: add eax, [rax]; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x00000000469d4e: add eax, [rax]; add [rcx-0x73], cl; add r9b, [r8+0x39]; ret; 
0x0000000045d342: add eax, [rax]; add [rcx-0x75], cl; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000045e0f8: add eax, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x00000000481899: add eax, [rax]; add [rcx-0x77], al; ret; 
0x0000000046598d: add eax, [rax]; add [rcx-0xa], al; ret; 
0x000000004219c6: add eax, [rax]; add [rcx], dh; idiv byte ptr [rdx+0x2]; mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000423cce: add eax, [rax]; add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x00000000423ccf: add eax, [rax]; add [rcx], dh; ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x0000000049fe41: add eax, [rax]; add [rdi-0x2c517], bl; jmp qword ptr [rsi+0xf]; 
0x00000000481939: add eax, [rax]; add [rsi+0x80], bh; syscall; 
0x0000000045a7dc: add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000048f804: add eax, [rax]; mov eax, 0x59; mov rbp, rsp; mov rsi, rbp; syscall; 
0x0000000048c2bb: add eax, [rax]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x000000004983ad: add eax, [rax]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000048bd7e: add eax, [rax]; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x0000000045a7c1: add eax, [rax]; ret; 
0x000000004a7d4c: add eax, [rax]; syscall; 
0x000000004a6718: add eax, [rax]; test rbx, rbx; jne short 0x00000000004a6700; pop rbx; ret; 
0x000000004a00cd: add eax, [rbp-0x72de8b2e]; dec dword ptr [rbp+r9*4+0x74]; ret; 
0x0000000048c8d1: add eax, [rbp-0x7b]; leave; jne short 0x000000000048c8e7; mov [rbp-0xd8], r11; call rax; 
0x0000000048babe: add eax, [rbp]; call rax; 
0x00000000411d67: add eax, [rbx+0x26770af8]; lea rdx, [rip+0xa2c70]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000452a29: add eax, [rbx]; add [rax], al; ret; 
0x000000004a00a3: add eax, [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x0000000048c8d0: add eax, [rbx]; test r9d, r9d; jne short 0x000000000048c8e7; mov [rbp-0xd8], r11; call rax; 
0x00000000462174: add eax, [rcx+0x5c]; shl eax, cl; ret; 
0x0000000040a97a: add eax, [rcx+rcx*4-0x20]; pop rbx; pop rbp; pop r12; ret; 
0x00000000458d4e: add eax, [rcx+rcx*8+0x31c3ed75]; rol bl, 0x48; mov eax, edi; ret; 
0x00000000485259: add eax, [rcx+rdx]; ret; 
0x0000000048beff: add eax, [rdi]; test ecx, ecx; jne short 0x000000000048bf07; call rax; 
0x0000000048c79c: add eax, [rdi]; test edx, edx; jne short 0x000000000048c7a4; call rax; 
0x0000000048c08c: add eax, [rdi]; test r11d, r11d; jne short 0x000000000048c095; call rax; 
0x0000000049a8c1: add eax, [rdx+0x8]; pop rbp; pop r12; jmp rax; 
0x00000000452b29: add eax, [rdx]; add [rax], al; ret; 
0x000000004958a8: add eax, eax; mov eax, r8d; ret; 
0x00000000461455: add eax, ebp; notrack jmp rax; 
0x00000000485c27: add eax, ebp; xor esi, [rbp-0x37140009]; nop; ret; 
0x00000000457393: add eax, ebx; nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x00000000452c04: add eax, ebx; nop [rax+rax]; mov [rcx], rdx; ret; 
0x00000000455439: add eax, ebx; nop [rax+rax]; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x000000004841f3: add eax, ebx; nop [rax+rax]; xor rax, rax; ret; 
0x000000004096db: add eax, ebx; notrack jmp rax; 
0x0000000044e1a8: add eax, ecx; add rax, rdi; vzeroupper; ret; 
0x000000004285e9: add eax, ecx; mov [rdi+0x18], rsi; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x000000004285ad: add eax, ecx; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x000000004021ae: add eax, ecx; notrack jmp rax; 
0x00000000439091: add eax, ecx; ret; 
0x000000004591a6: add eax, ecx; sub rax, rdi; ret; 
0x000000004842dd: add eax, ecx; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044e51d: add eax, ecx; sub rax, rdx; vzeroupper; ret; 
0x0000000043928d: add eax, ecx; vzeroupper; ret; 
0x0000000043908e: add eax, edi; add rax, rcx; ret; 
0x0000000044e51a: add eax, edi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000043928a: add eax, edi; add rax, rcx; vzeroupper; ret; 
0x0000000047f1a7: add eax, edi; notrack jmp rax; 
0x00000000439204: add eax, edi; ret; 
0x00000000484395: add eax, edi; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044e5d5: add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x00000000439325: add eax, edi; vzeroupper; ret; 
0x00000000410952: add eax, edx; lea rdx, [rip+0xa2b45]; movsxd rax, [rcx+rax*4]; add rax, rdx; ret; 
0x0000000046f13e: add eax, edx; notrack jmp r8; 
0x00000000401bf6: add eax, edx; notrack jmp rax; 
0x00000000410960: add eax, edx; ret; 
0x0000000044e4b6: add eax, edx; sub rax, rdi; ret; 
0x00000000483f3b: add eax, edx; sub rax, rdi; shr rax, 0x2; ret; 
0x0000000048efaa: add eax, esi; inc dword ptr [r8+0x10]; pop rbx; pop rbp; ret; 
0x0000000045a75e: add eax, esi; notrack jmp rax; 
0x00000000405ae5: add eax, esp; notrack jmp rax; 
0x000000004a0239: add ebx, 0x8; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x000000004a0a2e: add ebx, [rax+0x5a]; pop rbx; ret; 
0x0000000049edae: add ebx, [rbx+0x5d]; pop r12; ret; 
0x000000004296b1: add ebx, [rbx+0x5d]; ret; 
0x00000000402081: add ebx, eax; mov eax, 0xfffffff2; ret; 
0x000000004841e3: add ebx, eax; nop [rax+rax]; add rax, 0x3; ret; 
0x00000000457373: add ebx, eax; nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x0000000045fb81: add ebx, eax; nop [rax+rax]; mov [rax+0x20], rsi; ret; 
0x0000000045fb15: add ebx, eax; nop [rax+rax]; mov [rdi+0x20], rsi; ret; 
0x0000000049c971: add ebx, eax; nop [rax+rax]; xor eax, eax; ret; 
0x000000004398db: add ebx, eax; nop [rax]; ret; 
0x000000004293ce: add ebx, eax; nop; mov [rip+0xb93c8], rax; ret; 
0x0000000042972e: add ebx, eax; nop; mov dword ptr [rip+0xb9039], 0x1; mov [rip+0xb900e], rax; ret; 
0x00000000404c52: add ebx, ebp; in al, dx; xor eax, eax; ret; 
0x00000000466dc7: add ebx, ebp; ret far; 
0x00000000443223: add ebx, esi; movq [rdi], mm1; ret; 
0x0000000045a692: add ecx, 0x100; cmp rdx, rcx; jne short 0x000000000045a676; vzeroupper; ret; 
0x0000000045a36b: add ecx, 0x40; cmp rdx, rcx; jne short 0x000000000045a357; rep ret; 
0x0000000045a4cf: add ecx, 0x80; cmp rdx, rcx; jne short 0x000000000045a4bb; vzeroupper; ret; 
0x00000000450c35: add ecx, [r9-0x76b7fcbe]; clc; ret; 
0x00000000429f5c: add ecx, [rax+0x29]; ret; 
0x0000000047639d: add ecx, [rax-0x73]; add eax, 0x6909b; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000475b59: add ecx, [rax-0x73]; add eax, 0x69cdf; jmp qword ptr [rax+rdx*8]; 
0x000000004758ed: add ecx, [rax-0x73]; add eax, 0x69d4b; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000475956: add ecx, [rax-0x73]; add eax, 0x69de2; jmp qword ptr [rax+rdx*8]; 
0x0000000044eeed: add ecx, [rax-0x73]; jg short 0x000000000044eef5; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c7c: add ecx, [rax-0x73]; jg short 0x0000000000455c84; jne 0x00000000004564f0; ret; 
0x00000000475507: add ecx, [rax-0x75]; add al, 0xc6; jmp rax; 
0x00000000450c38: add ecx, [rax-0x77]; clc; ret; 
0x0000000048e4b3: add ecx, [rax-0x77]; mov rax, r8; ret; 
0x0000000048c455: add ecx, [rax-0x7d]; ret; 
0x0000000041ed2f: add ecx, [rbp+rcx*4+0x64]; ret; 
0x0000000049a88c: add ecx, [rbp-0x3f7a00b0]; je short 0x000000000049a8ae; lea rbx, [rbp+rdx*8]; nop [rax]; call qword ptr [rbx]; 
0x000000004a23ed: add ecx, [rbp-0x73]; or ecx, [eax-0x7d]; ret; 
0x00000000442f92: add ecx, [rbx+0x357890e]; mov [rdi], ecx; ret; 
0x00000000456a84: add ecx, [rcx+0x357890f]; lea rax, [rdi+0x6]; ret; 
0x00000000455434: add ecx, [rcx+0x357890f]; ret; 
0x00000000455cf4: add ecx, [rcx+0x357890f]; sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000004564f0; ret; 
0x000000004a00a4: add ecx, [rcx+rcx*4-0x1a]; mov edi, ebp; call rax; 
0x00000000450c36: add ecx, [rcx-0x76b7fcbe]; clc; ret; 
0x0000000044eef1: add ecx, [rdi]; test [rax+0x2], ebx; add [rax], al; vzeroupper; ret; 
0x00000000455c80: add ecx, [rdi]; test [rcx+0x8], ebp; add [rax], al; ret; 
0x00000000468205: add ecx, [rdi]; xchg [rax*1+0x39480000], esp; ret; 
0x0000000046c1dd: add ecx, [rdi]; xchg ebp, ecx; add al, 0x0; add [rax+0x39], cl; ret far; 
0x00000000465c9c: add ecx, ebp; ret far; 
0x0000000048dcc4: add ecx, ebp; ret; 
0x0000000047c8d1: add ecx, ebp; shl ecx, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000043b1ef: add ecx, ebx; notrack jmp r9; 
0x00000000439b86: add ecx, ebx; notrack jmp rcx; 
0x0000000047f243: add ecx, edi; notrack jmp rcx; 
0x000000004114a4: add ecx, esi; notrack jmp rcx; 
0x000000004569bd: add edi, 0x10; lea r11, [rip+0x60e7d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456577: add edi, 0x10; lea r11, [rip+0x6127f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456557: add edi, 0x10; lea r11, [rip+0x6129f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045537d: add edi, 0x10; lea r11, [rip+0x622e9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000048acd9: add edi, 0x1c; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000004569f2: add edi, 0x20; lea r11, [rip+0x60e48]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004553b2: add edi, 0x20; lea r11, [rip+0x622b4]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000481936: add edi, 0x308; mov esi, 0x80; syscall; 
0x000000004568bf: add edi, 0x30; lea r11, [rip+0x60f7b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045527f: add edi, 0x30; lea r11, [rip+0x623e7]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000423b6c: add edi, 0x4; add [rax], al; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000481a62: add edi, [rax+0x1]; pop rbx; pop rbp; pop r12; ret; 
0x00000000494734: add edi, eax; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x000000004a6790: add edi, ebp; call r12; 
0x0000000043b1ec: add edi, edx; add r9, r11; notrack jmp r9; 
0x00000000444c9c: add edi, edx; lea r11, [rip+0x725cb]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004433f7: add edi, edx; lea r11, [rip+0x73e70]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443290: add edi, edx; lea r11, [rip+0x73fd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000442188: add edi, edx; lea r11, [rip+0x74bdf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044056a: add edi, edx; lea r11, [rip+0x763fd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004408f7: add edi, edx; lea r11, [rip+0x76470]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440779: add edi, edx; lea r11, [rip+0x765ee]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ddbb: add edi, edx; lea r11, [rip+0x78bac]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dcf6: add edi, edx; lea r11, [rip+0x78c71]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b3db: add edi, edx; lea r11, [rip+0x7b3cc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b316: add edi, edx; lea r11, [rip+0x7b491]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a5d1: add edi, edx; lea r11, [rip+0x7c096]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a557: add edi, edx; lea r11, [rip+0x7c110]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a4c8: add edi, edx; lea r11, [rip+0x7c19f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a2bd: add edi, edx; lea r11, [rip+0x7c3aa]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a18b: add edi, edx; lea r11, [rip+0x7c4dc]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a0c5: add edi, edx; lea r11, [rip+0x7c5a2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a047: add edi, edx; lea r11, [rip+0x7c620]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439fb2: add edi, edx; lea r11, [rip+0x7c6b5]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439db5: add edi, edx; lea r11, [rip+0x7c8b2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439c83: add edi, edx; lea r11, [rip+0x7c9e4]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439b78: add edi, edx; lea r11, [rip+0x7caef]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000004704c9: add edi, esi; mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x0000000041e488: add edi, esp; call rax; 
0x00000000428502: add edx, 0x60; mov rax, [rdi]; mov [rdx], rax; ret; 
0x0000000049d7c2: add edx, eax; mov rax, rdx; pop rbx; ret; 
0x00000000487132: add edx, ebp; notrack jmp rdx; 
0x0000000041db71: add edx, ebx; notrack jmp r10; 
0x00000000402070: add edx, ecx; notrack jmp rdx; 
0x00000000472788: add edx, edi; call qword ptr [rax+r9*8]; 
0x00000000405a99: add edx, edi; notrack jmp rdx; 
0x0000000041d86e: add edx, esi; notrack jmp rdx; 
0x000000004112c2: add esi, [rax]; add [rax], al; mov eax, 0x9e; syscall; 
0x000000004a450d: add esi, [rbp+0x20]; add rsp, 0x8; ret; 
0x00000000411a9e: add esi, [rbp+rdx+0x48]; lea ebx, [rax-0x1]; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x00000000443143: add esi, ebx; movq [rdi], mm1; ret; 
0x0000000045956e: add esi, ebx; movsb [rdi], [rsi]; ret; 
0x0000000042ce71: add esi, ebx; stosq [rdi]; pop rbp; ret; 
0x00000000455bea: add esi, ecx; lea r11, [rip+0x61b7d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455bca: add esi, ecx; lea r11, [rip+0x61b9d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455ba1: add esi, ecx; lea r11, [rip+0x61bc6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000421454: add esi, edi; jmp qword ptr [rsi+0xf]; 
0x0000000043b1e9: add esi, edx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x00000000444a34: add esi, edx; lea r11, [rip+0x72833]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004448b4: add esi, edx; lea r11, [rip+0x729b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444734: add esi, edx; lea r11, [rip+0x72b33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004445b5: add esi, edx; lea r11, [rip+0x72cb2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444434: add esi, edx; lea r11, [rip+0x72e33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004442b4: add esi, edx; lea r11, [rip+0x72fb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444134: add esi, edx; lea r11, [rip+0x73133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443fb4: add esi, edx; lea r11, [rip+0x732b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443e34: add esi, edx; lea r11, [rip+0x73433]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443cb4: add esi, edx; lea r11, [rip+0x735b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443b34: add esi, edx; lea r11, [rip+0x73733]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004439b4: add esi, edx; lea r11, [rip+0x738b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443834: add esi, edx; lea r11, [rip+0x73a33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004436b4: add esi, edx; lea r11, [rip+0x73bb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443534: add esi, edx; lea r11, [rip+0x73d33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441f34: add esi, edx; lea r11, [rip+0x74e33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441db4: add esi, edx; lea r11, [rip+0x74fb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441c34: add esi, edx; lea r11, [rip+0x75133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441ab5: add esi, edx; lea r11, [rip+0x752b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441934: add esi, edx; lea r11, [rip+0x75433]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004417b4: add esi, edx; lea r11, [rip+0x755b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441634: add esi, edx; lea r11, [rip+0x75733]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004414b4: add esi, edx; lea r11, [rip+0x758b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441334: add esi, edx; lea r11, [rip+0x75a33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004411b4: add esi, edx; lea r11, [rip+0x75bb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441034: add esi, edx; lea r11, [rip+0x75d33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440eb4: add esi, edx; lea r11, [rip+0x75eb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440d34: add esi, edx; lea r11, [rip+0x76033]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440bb4: add esi, edx; lea r11, [rip+0x761b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440a34: add esi, edx; lea r11, [rip+0x76333]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f3e2: add esi, edx; lea r11, [rip+0x77585]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f292: add esi, edx; lea r11, [rip+0x776d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f142: add esi, edx; lea r11, [rip+0x77825]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eff2: add esi, edx; lea r11, [rip+0x77975]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eea2: add esi, edx; lea r11, [rip+0x77ac5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ed52: add esi, edx; lea r11, [rip+0x77c15]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ec02: add esi, edx; lea r11, [rip+0x77d65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e962: add esi, edx; lea r11, [rip+0x78005]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e812: add esi, edx; lea r11, [rip+0x78155]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e6c2: add esi, edx; lea r11, [rip+0x782a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e572: add esi, edx; lea r11, [rip+0x783f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e422: add esi, edx; lea r11, [rip+0x78545]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e2d2: add esi, edx; lea r11, [rip+0x78695]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e182: add esi, edx; lea r11, [rip+0x787e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043deba: add esi, edx; lea r11, [rip+0x78aad]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ca02: add esi, edx; lea r11, [rip+0x79da5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c8b2: add esi, edx; lea r11, [rip+0x79ef5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c762: add esi, edx; lea r11, [rip+0x7a045]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c612: add esi, edx; lea r11, [rip+0x7a195]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c4c2: add esi, edx; lea r11, [rip+0x7a2e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c372: add esi, edx; lea r11, [rip+0x7a435]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c222: add esi, edx; lea r11, [rip+0x7a585]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bf82: add esi, edx; lea r11, [rip+0x7a825]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043be32: add esi, edx; lea r11, [rip+0x7a975]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bce2: add esi, edx; lea r11, [rip+0x7aac5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bb92: add esi, edx; lea r11, [rip+0x7ac15]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ba42: add esi, edx; lea r11, [rip+0x7ad65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b8f2: add esi, edx; lea r11, [rip+0x7aeb5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b7a2: add esi, edx; lea r11, [rip+0x7b005]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b4da: add esi, edx; lea r11, [rip+0x7b2cd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004590ed: add esp, 0x100; sub rax, rdx; ret; 
0x0000000041f0ea: add esp, 0x10; mov eax, r8d; pop rbx; ret; 
0x0000000042d9b0: add esp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000042d7b9: add esp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000046db68: add esp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x00000000405350: add esp, 0x10; pop rbp; ret; 
0x000000004269b5: add esp, 0x10; pop rbx; jmp rax; 
0x00000000421526: add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000499311: add esp, 0x10; pop rbx; ret; 
0x0000000049231f: add esp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000041e1b2: add esp, 0x118; ret; 
0x00000000470146: add esp, 0x148; ret; 
0x000000004905e9: add esp, 0x18; bnd jmp r11; 
0x0000000042eb6e: add esp, 0x18; jmp rax; 
0x0000000041efaa: add esp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000404ecc: add esp, 0x18; mov rax, rbx; pop rbx; pop rbp; ret; 
0x00000000402966: add esp, 0x18; pop rbp; pop r12; ret; 
0x00000000408617: add esp, 0x18; pop rbx; pop r12; ret; 
0x000000004a48e0: add esp, 0x18; pop rbx; pop rbp; mov eax, r8d; ret; 
0x00000000421f07: add esp, 0x18; pop rbx; pop rbp; ret; 
0x0000000040396f: add esp, 0x18; ret; 
0x00000000404ef0: add esp, 0x18; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000462150: add esp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x0000000040324b: add esp, 0x20; mov eax, r12d; pop r12; ret; 
0x000000004270d1: add esp, 0x20; pop rbx; jmp rax; 
0x0000000046d48d: add esp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000045aee6: add esp, 0x20; pop rbx; ret; 
0x00000000427553: add esp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000004a3b4c: add esp, 0x278; mov rax, rbp; pop rbx; pop rbp; ret; 
0x000000004a3b61: add esp, 0x278; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000041fbba: add esp, 0x28; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000045be8e: add esp, 0x28; ret; 
0x0000000048fdd0: add esp, 0x30; bnd jmp r11; 
0x0000000048fee2: add esp, 0x30; bnd ret; 
0x0000000049ec2d: add esp, 0x30; mov rax, r12; pop r12; ret; 
0x000000004263aa: add esp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000004a141a: add esp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x000000004228b4: add esp, 0x38; pop rbx; pop rbp; ret; 
0x000000004850f3: add esp, 0x38; ret; 
0x00000000491800: add esp, 0x48; jmp qword ptr [rax]; 
0x000000004050eb: add esp, 0x48; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000404fed: add esp, 0x48; ret; 
0x0000000049177e: add esp, 0x58; jmp qword ptr [rax]; 
0x0000000045cd05: add esp, 0x58; ret; 
0x0000000045bfec: add esp, 0x68; pop rbp; pop r12; ret; 
0x0000000045c26d: add esp, 0x68; ret; 
0x0000000048397a: add esp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x000000004a0e13: add esp, 0x78; pop rbp; pop r12; ret; 
0x0000000045f77d: add esp, 0x88; pop rbx; pop rbp; ret; 
0x00000000410bc5: add esp, 0x88; pop rbx; ret; 
0x0000000047fd17: add esp, 0x8; mov eax, 0x1; pop rbx; pop rbp; ret; 
0x00000000407fb1: add esp, 0x8; mov eax, 0xffffffef; pop rbx; pop rbp; ret; 
0x00000000403856: add esp, 0x8; mov eax, 0xfffffff2; pop rbx; pop rbp; ret; 
0x000000004028c1: add esp, 0x8; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x00000000422295: add esp, 0x8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000004222ab: add esp, 0x8; mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000040247f: add esp, 0x8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000004927a1: add esp, 0x8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000004205a4: add esp, 0x8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000404e0d: add esp, 0x8; mov rax, r12; pop rbp; pop r12; ret; 
0x00000000407c88: add esp, 0x8; mov rax, r12; pop rbx; pop r12; ret; 
0x00000000426a98: add esp, 0x8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x0000000049eb6d: add esp, 0x8; movzx eax, al; neg eax; ret; 
0x000000004024e0: add esp, 0x8; pop rbp; pop r12; ret; 
0x0000000046e8d4: add esp, 0x8; pop rbx; pop r14; ret; 
0x00000000403849: add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000401017: add esp, 0x8; ret; 
0x000000004038e2: add esp, 0x8; sar eax, 0x1f; and eax, 0xffffff83; ret; 
0x00000000402851: add esp, 0x8; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000407fc1: add esp, 0x8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000004a0b40: add esp, 0x98; pop rbp; pop r12; ret; 
0x000000004115f3: add esp, 0x98; ret; 
0x0000000047faaa: add esp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x00000000484e96: add esp, 0xa8; pop rbp; pop r12; ret; 
0x0000000046d35f: add esp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000402b00: add esp, 0xc8; ret; 
0x0000000041f94b: add esp, 0xd8; ret; 
0x0000000041fd5f: add esp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000048a369: add esp, eax; call qword ptr [r12+0x60]; 
0x000000004707e9: add esp, ebp; mov rdx, r15; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000045f82b: add fs:[rax], al; add [rbp-0x3dbbf040], al; ret; 
0x0000000041ee9c: add qword ptr [rip+0xc6a14], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000041db70: add r10, r11; notrack jmp r10; 
0x0000000040a45d: add r11b, r8b; mov rax, 0x4ded00; ret; 
0x0000000040a4ad: add r11b, r8b; mov rax, 0x4e12a0; ret; 
0x0000000040a4d5: add r11b, r8b; nop [rax+rax]; mov rax, 0x4dec40; ret; 
0x0000000040a475: add r11b, r8b; nop [rax+rax]; mov rax, 0x4ded40; ret; 
0x0000000040a4e5: add r11b, r8b; nop [rax+rax]; mov rax, 0x4dee80; ret; 
0x0000000040a465: add r11b, r8b; nop [rax+rax]; mov rax, 0x4deec0; ret; 
0x0000000040a485: add r11b, r8b; nop [rax+rax]; mov rax, 0x4e11a0; ret; 
0x0000000040a4f5: add r11b, r8b; nop [rax+rax]; mov rax, 0x4e1260; ret; 
0x00000000443222: add r11d, r14d; movq [rdi], mm1; ret; 
0x00000000457372: add r11d, r8d; nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x000000004707e8: add r12, r13; mov rdx, r15; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000048a368: add r12, rax; call qword ptr [r12+0x60]; 
0x000000004431b2: add r14b, r11b; movq [rdi], mm1; ret; 
0x00000000443142: add r14d, r11d; movq [rdi], mm1; ret; 
0x0000000041e487: add r15, r12; call rax; 
0x000000004704c8: add r15, r14; mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x0000000045658c: add r8, 0x10; lea r11, [rip+0x61269]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000046f13d: add r8, rdx; notrack jmp r8; 
0x00000000457077: add r8b, [r8]; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x0000000044e967: add r8b, [r8]; vzeroupper; ret; 
0x0000000048e88e: add r8b, [rax]; add [rbx-0x28f7b], cl; jmp qword ptr [rsi+0xf]; 
0x00000000409e77: add r8b, [rax]; nop [rax+rax]; ret; 
0x00000000457382: add r8b, r11b; nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x000000004958a7: add r8d, eax; mov eax, r8d; ret; 
0x00000000457392: add r8d, r11d; nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x0000000043b1ee: add r9, r11; notrack jmp r9; 
0x00000000469d53: add r9b, [r8+0x39]; ret; 
0x00000000490a8f: add r9b, [r8-0x7d]; ret; 
0x00000000490c85: add r9d, [r8-0x7d]; ret; 
0x000000004841e0: add rax, 0x1; ret; 
0x0000000046fe69: add rax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000044e5e4: add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000439334: add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000004841d7: add rax, 0x2; ret; 
0x00000000452a63: add rax, 0x2c5850f; add [rax], al; ret; 
0x000000004841f0: add rax, 0x3; ret; 
0x000000004641f3: add rax, 0x3d8d4800; jne short 0x0000000000464248; add eax, 0xda4ee800; cli; jmp qword ptr [rsi+0x66]; 
0x0000000044e604: add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000439344: add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000044e650: add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000439372: add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x000000004641fa: add rax, 0xffffffffda4ee800; cli; jmp qword ptr [rsi+0x66]; 
0x00000000411adc: add rax, [0x0]; ret; 
0x0000000048c8cf: add rax, [r11]; test r9d, r9d; jne short 0x000000000048c8e7; mov [rbp-0xd8], r11; call rax; 
0x0000000048babd: add rax, [r13]; call rax; 
0x0000000048befe: add rax, [r15]; test ecx, ecx; jne short 0x000000000048bf07; call rax; 
0x0000000048c79b: add rax, [r15]; test edx, edx; jne short 0x000000000048c7a4; call rax; 
0x0000000048c08b: add rax, [r15]; test r11d, r11d; jne short 0x000000000048c095; call rax; 
0x000000004a00a2: add rax, [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x0000000049a8c0: add rax, [rdx+0x8]; pop rbp; pop r12; jmp rax; 
0x00000000411adb: add rax, fs:[0x0]; ret; 
0x00000000425539: add rax, r10; notrack jmp rax; 
0x0000000042556b: add rax, r11; notrack jmp rax; 
0x00000000405ae4: add rax, r12; notrack jmp rax; 
0x000000004a29dc: add rax, r13; notrack jmp rax; 
0x000000004727f3: add rax, r14; notrack jmp rax; 
0x000000004a2b54: add rax, r9; notrack jmp rax; 
0x00000000461454: add rax, rbp; notrack jmp rax; 
0x000000004096da: add rax, rbx; notrack jmp rax; 
0x0000000044e1a7: add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x000000004285e8: add rax, rcx; mov [rdi+0x18], rsi; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x000000004285ac: add rax, rcx; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x000000004021ad: add rax, rcx; notrack jmp rax; 
0x00000000439090: add rax, rcx; ret; 
0x000000004591a5: add rax, rcx; sub rax, rdi; ret; 
0x000000004842dc: add rax, rcx; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044e51c: add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000043928c: add rax, rcx; vzeroupper; ret; 
0x0000000043908d: add rax, rdi; add rax, rcx; ret; 
0x0000000044e519: add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x00000000439289: add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000047f1a6: add rax, rdi; notrack jmp rax; 
0x00000000439203: add rax, rdi; ret; 
0x00000000484394: add rax, rdi; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044e5d4: add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000439324: add rax, rdi; vzeroupper; ret; 
0x00000000410951: add rax, rdx; lea rdx, [rip+0xa2b45]; movsxd rax, [rcx+rax*4]; add rax, rdx; ret; 
0x00000000401bf5: add rax, rdx; notrack jmp rax; 
0x0000000041095f: add rax, rdx; ret; 
0x0000000044e4b5: add rax, rdx; sub rax, rdi; ret; 
0x00000000483f3a: add rax, rdx; sub rax, rdi; shr rax, 0x2; ret; 
0x0000000045a75d: add rax, rsi; notrack jmp rax; 
0x000000004a0238: add rbx, 0x8; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x0000000045a691: add rcx, 0x100; cmp rdx, rcx; jne short 0x000000000045a676; vzeroupper; ret; 
0x0000000045a36a: add rcx, 0x40; cmp rdx, rcx; jne short 0x000000000045a357; rep ret; 
0x0000000045a4ce: add rcx, 0x80; cmp rdx, rcx; jne short 0x000000000045a4bb; vzeroupper; ret; 
0x00000000439b85: add rcx, r11; notrack jmp rcx; 
0x0000000047f242: add rcx, rdi; notrack jmp rcx; 
0x000000004114a3: add rcx, rsi; notrack jmp rcx; 
0x000000004569bc: add rdi, 0x10; lea r11, [rip+0x60e7d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456576: add rdi, 0x10; lea r11, [rip+0x6127f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456556: add rdi, 0x10; lea r11, [rip+0x6129f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045537c: add rdi, 0x10; lea r11, [rip+0x622e9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000048acd8: add rdi, 0x1c; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x000000004569f1: add rdi, 0x20; lea r11, [rip+0x60e48]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004553b1: add rdi, 0x20; lea r11, [rip+0x622b4]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000481935: add rdi, 0x308; mov esi, 0x80; syscall; 
0x000000004568be: add rdi, 0x30; lea r11, [rip+0x60f7b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045527e: add rdi, 0x30; lea r11, [rip+0x623e7]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004a678f: add rdi, rbp; call r12; 
0x0000000043b1eb: add rdi, rdx; add r9, r11; notrack jmp r9; 
0x00000000444c9b: add rdi, rdx; lea r11, [rip+0x725cb]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004433f6: add rdi, rdx; lea r11, [rip+0x73e70]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044328f: add rdi, rdx; lea r11, [rip+0x73fd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000442187: add rdi, rdx; lea r11, [rip+0x74bdf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440569: add rdi, rdx; lea r11, [rip+0x763fd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004408f6: add rdi, rdx; lea r11, [rip+0x76470]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440778: add rdi, rdx; lea r11, [rip+0x765ee]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ddba: add rdi, rdx; lea r11, [rip+0x78bac]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dcf5: add rdi, rdx; lea r11, [rip+0x78c71]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b3da: add rdi, rdx; lea r11, [rip+0x7b3cc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b315: add rdi, rdx; lea r11, [rip+0x7b491]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a5d0: add rdi, rdx; lea r11, [rip+0x7c096]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a556: add rdi, rdx; lea r11, [rip+0x7c110]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a4c7: add rdi, rdx; lea r11, [rip+0x7c19f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a2bc: add rdi, rdx; lea r11, [rip+0x7c3aa]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a18a: add rdi, rdx; lea r11, [rip+0x7c4dc]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a0c4: add rdi, rdx; lea r11, [rip+0x7c5a2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a046: add rdi, rdx; lea r11, [rip+0x7c620]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439fb1: add rdi, rdx; lea r11, [rip+0x7c6b5]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439db4: add rdi, rdx; lea r11, [rip+0x7c8b2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439c82: add rdi, rdx; lea r11, [rip+0x7c9e4]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439b77: add rdi, rdx; lea r11, [rip+0x7caef]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000428501: add rdx, 0x60; mov rax, [rdi]; mov [rdx], rax; ret; 
0x00000000487131: add rdx, r13; notrack jmp rdx; 
0x00000000472787: add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000405a98: add rdx, r15; notrack jmp rdx; 
0x0000000049d7c1: add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x00000000407cdb: add rdx, r9; notrack jmp rdx; 
0x0000000040206f: add rdx, rcx; notrack jmp rdx; 
0x0000000041d86d: add rdx, rsi; notrack jmp rdx; 
0x00000000455be9: add rsi, rcx; lea r11, [rip+0x61b7d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455bc9: add rsi, rcx; lea r11, [rip+0x61b9d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455ba0: add rsi, rcx; lea r11, [rip+0x61bc6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000043b1e8: add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x00000000444a33: add rsi, rdx; lea r11, [rip+0x72833]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004448b3: add rsi, rdx; lea r11, [rip+0x729b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444733: add rsi, rdx; lea r11, [rip+0x72b33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004445b4: add rsi, rdx; lea r11, [rip+0x72cb2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444433: add rsi, rdx; lea r11, [rip+0x72e33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004442b3: add rsi, rdx; lea r11, [rip+0x72fb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444133: add rsi, rdx; lea r11, [rip+0x73133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443fb3: add rsi, rdx; lea r11, [rip+0x732b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443e33: add rsi, rdx; lea r11, [rip+0x73433]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443cb3: add rsi, rdx; lea r11, [rip+0x735b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443b33: add rsi, rdx; lea r11, [rip+0x73733]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004439b3: add rsi, rdx; lea r11, [rip+0x738b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443833: add rsi, rdx; lea r11, [rip+0x73a33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004436b3: add rsi, rdx; lea r11, [rip+0x73bb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443533: add rsi, rdx; lea r11, [rip+0x73d33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441f33: add rsi, rdx; lea r11, [rip+0x74e33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441db3: add rsi, rdx; lea r11, [rip+0x74fb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441c33: add rsi, rdx; lea r11, [rip+0x75133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441ab4: add rsi, rdx; lea r11, [rip+0x752b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441933: add rsi, rdx; lea r11, [rip+0x75433]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004417b3: add rsi, rdx; lea r11, [rip+0x755b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441633: add rsi, rdx; lea r11, [rip+0x75733]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004414b3: add rsi, rdx; lea r11, [rip+0x758b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441333: add rsi, rdx; lea r11, [rip+0x75a33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004411b3: add rsi, rdx; lea r11, [rip+0x75bb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441033: add rsi, rdx; lea r11, [rip+0x75d33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440eb3: add rsi, rdx; lea r11, [rip+0x75eb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440d33: add rsi, rdx; lea r11, [rip+0x76033]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440bb3: add rsi, rdx; lea r11, [rip+0x761b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440a33: add rsi, rdx; lea r11, [rip+0x76333]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f3e1: add rsi, rdx; lea r11, [rip+0x77585]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f291: add rsi, rdx; lea r11, [rip+0x776d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f141: add rsi, rdx; lea r11, [rip+0x77825]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eff1: add rsi, rdx; lea r11, [rip+0x77975]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eea1: add rsi, rdx; lea r11, [rip+0x77ac5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ed51: add rsi, rdx; lea r11, [rip+0x77c15]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ec01: add rsi, rdx; lea r11, [rip+0x77d65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e961: add rsi, rdx; lea r11, [rip+0x78005]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e811: add rsi, rdx; lea r11, [rip+0x78155]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e6c1: add rsi, rdx; lea r11, [rip+0x782a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e571: add rsi, rdx; lea r11, [rip+0x783f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e421: add rsi, rdx; lea r11, [rip+0x78545]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e2d1: add rsi, rdx; lea r11, [rip+0x78695]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e181: add rsi, rdx; lea r11, [rip+0x787e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043deb9: add rsi, rdx; lea r11, [rip+0x78aad]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ca01: add rsi, rdx; lea r11, [rip+0x79da5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c8b1: add rsi, rdx; lea r11, [rip+0x79ef5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c761: add rsi, rdx; lea r11, [rip+0x7a045]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c611: add rsi, rdx; lea r11, [rip+0x7a195]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c4c1: add rsi, rdx; lea r11, [rip+0x7a2e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c371: add rsi, rdx; lea r11, [rip+0x7a435]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c221: add rsi, rdx; lea r11, [rip+0x7a585]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bf81: add rsi, rdx; lea r11, [rip+0x7a825]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043be31: add rsi, rdx; lea r11, [rip+0x7a975]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bce1: add rsi, rdx; lea r11, [rip+0x7aac5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bb91: add rsi, rdx; lea r11, [rip+0x7ac15]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ba41: add rsi, rdx; lea r11, [rip+0x7ad65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b8f1: add rsi, rdx; lea r11, [rip+0x7aeb5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b7a1: add rsi, rdx; lea r11, [rip+0x7b005]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b4d9: add rsi, rdx; lea r11, [rip+0x7b2cd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004590ec: add rsp, 0x100; sub rax, rdx; ret; 
0x0000000041f0e9: add rsp, 0x10; mov eax, r8d; pop rbx; ret; 
0x0000000042d9af: add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000042d7b8: add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000046db67: add rsp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x0000000040534f: add rsp, 0x10; pop rbp; ret; 
0x000000004269b4: add rsp, 0x10; pop rbx; jmp rax; 
0x00000000421525: add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000499310: add rsp, 0x10; pop rbx; ret; 
0x0000000049231e: add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000041e1b1: add rsp, 0x118; ret; 
0x00000000470145: add rsp, 0x148; ret; 
0x000000004905e8: add rsp, 0x18; bnd jmp r11; 
0x0000000042eb6d: add rsp, 0x18; jmp rax; 
0x0000000041efa9: add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000404ecb: add rsp, 0x18; mov rax, rbx; pop rbx; pop rbp; ret; 
0x00000000402965: add rsp, 0x18; pop rbp; pop r12; ret; 
0x00000000408616: add rsp, 0x18; pop rbx; pop r12; ret; 
0x000000004a48df: add rsp, 0x18; pop rbx; pop rbp; mov eax, r8d; ret; 
0x00000000421f06: add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000040396e: add rsp, 0x18; ret; 
0x00000000404eef: add rsp, 0x18; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000046214f: add rsp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x0000000040324a: add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x000000004270ce: add rsp, 0x20; pop rbx; jmp rax; 
0x0000000046d48c: add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000045aee5: add rsp, 0x20; pop rbx; ret; 
0x00000000427550: add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000004a3b4b: add rsp, 0x278; mov rax, rbp; pop rbx; pop rbp; ret; 
0x000000004a3b60: add rsp, 0x278; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000041fbb9: add rsp, 0x28; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000045be8d: add rsp, 0x28; ret; 
0x0000000048fdcf: add rsp, 0x30; bnd jmp r11; 
0x0000000048fee1: add rsp, 0x30; bnd ret; 
0x0000000049ec2c: add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x000000004263a9: add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x000000004a1419: add rsp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x000000004228b3: add rsp, 0x38; pop rbx; pop rbp; ret; 
0x000000004850f2: add rsp, 0x38; ret; 
0x000000004917fe: add rsp, 0x48; jmp qword ptr [rax]; 
0x000000004050ea: add rsp, 0x48; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000404fec: add rsp, 0x48; ret; 
0x0000000049177c: add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000045cd03: add rsp, 0x58; ret; 
0x0000000045bfeb: add rsp, 0x68; pop rbp; pop r12; ret; 
0x0000000045c26c: add rsp, 0x68; ret; 
0x00000000483978: add rsp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x000000004a0e12: add rsp, 0x78; pop rbp; pop r12; ret; 
0x0000000045f77c: add rsp, 0x88; pop rbx; pop rbp; ret; 
0x00000000410bc4: add rsp, 0x88; pop rbx; ret; 
0x0000000047fd16: add rsp, 0x8; mov eax, 0x1; pop rbx; pop rbp; ret; 
0x00000000407fb0: add rsp, 0x8; mov eax, 0xffffffef; pop rbx; pop rbp; ret; 
0x00000000403855: add rsp, 0x8; mov eax, 0xfffffff2; pop rbx; pop rbp; ret; 
0x000000004028c0: add rsp, 0x8; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x00000000422294: add rsp, 0x8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000004222aa: add rsp, 0x8; mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000040247e: add rsp, 0x8; mov eax, r12d; pop rbp; pop r12; ret; 
0x000000004927a0: add rsp, 0x8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000004205a3: add rsp, 0x8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000404e0c: add rsp, 0x8; mov rax, r12; pop rbp; pop r12; ret; 
0x00000000407c87: add rsp, 0x8; mov rax, r12; pop rbx; pop r12; ret; 
0x00000000426a97: add rsp, 0x8; mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x0000000049eb6c: add rsp, 0x8; movzx eax, al; neg eax; ret; 
0x000000004024df: add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000046e8d3: add rsp, 0x8; pop rbx; pop r14; ret; 
0x00000000403848: add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000401016: add rsp, 0x8; ret; 
0x000000004038e1: add rsp, 0x8; sar eax, 0x1f; and eax, 0xffffff83; ret; 
0x00000000402850: add rsp, 0x8; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000407fc0: add rsp, 0x8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000004a0b3f: add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000004115f2: add rsp, 0x98; ret; 
0x0000000047faa9: add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x00000000484e95: add rsp, 0xa8; pop rbp; pop r12; ret; 
0x0000000046d35e: add rsp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000402aff: add rsp, 0xc8; ret; 
0x0000000041f94a: add rsp, 0xd8; ret; 
0x0000000041fd5e: add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000499025: add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000043b781: addr32 loopne 0x000000000043b793; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043b8d1: addr32 loopne 0x000000000043b8e3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043ba21: addr32 loopne 0x000000000043ba33; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043bb71: addr32 loopne 0x000000000043bb83; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043bcc1: addr32 loopne 0x000000000043bcd3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043be11: addr32 loopne 0x000000000043be23; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043bf61: addr32 loopne 0x000000000043bf73; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c0af: addr32 loopne 0x000000000043c0c1; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c201: addr32 loopne 0x000000000043c213; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c351: addr32 loopne 0x000000000043c363; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c4a1: addr32 loopne 0x000000000043c4b3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c5f1: addr32 loopne 0x000000000043c603; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c741: addr32 loopne 0x000000000043c753; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c891: addr32 loopne 0x000000000043c8a3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c9e1: addr32 loopne 0x000000000043c9f3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043e161: addr32 loopne 0x000000000043e173; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043e2b1: addr32 loopne 0x000000000043e2c3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043e401: addr32 loopne 0x000000000043e413; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043e551: addr32 loopne 0x000000000043e563; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043e6a1: addr32 loopne 0x000000000043e6b3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043e7f1: addr32 loopne 0x000000000043e803; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043e941: addr32 loopne 0x000000000043e953; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043ea8f: addr32 loopne 0x000000000043eaa1; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043ebe1: addr32 loopne 0x000000000043ebf3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043ed31: addr32 loopne 0x000000000043ed43; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043ee81: addr32 loopne 0x000000000043ee93; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043efd1: addr32 loopne 0x000000000043efe3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043f121: addr32 loopne 0x000000000043f133; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043f271: addr32 loopne 0x000000000043f283; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043f3c1: addr32 loopne 0x000000000043f3d3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x00000000421b59: and [r11+rcx*4+0x6d], r9b; sbb [rax-0x77], cl; ret far; 
0x0000000043078d: and [r11], r9b; add [rax+0x39], cl; ret; 
0x00000000427879: and [r15], cl; adc [rcx+0x30], eax; movups [rcx+0x40], xmm0; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x00000000421b87: and [r8+0x1], r9b; ret; 
0x0000000046f607: and [r8-0x77], r9b; std; test rax, rax; je short 0x000000000046f613; call rax; 
0x0000000040a9b9: and [r8-0x7b], r9b; shl byte ptr [rax+rbp+0x53], 0x48; mov ebx, esi; mov rdi, rsi; call rax; 
0x00000000405ade: and [r9+0x63], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x00000000408ac1: and [r9-0x3c3fcefe], r9b; mov eax, 0xffffffea; ret; 
0x00000000406579: and [r9-0x7d], r8b; js short 0x000000000040658b; add [rdi], ecx; ret far; 
0x000000004268f6: and [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000044e5e7: and [rax+0x1], cl; clc; sub rax, rdx; vzeroupper; ret; 
0x00000000439337: and [rax+0x1], cl; clc; vzeroupper; ret; 
0x00000000421b88: and [rax+0x1], cl; ret; 
0x0000000041e27e: and [rax+0x24048b48], dl; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x000000004658b6: and [rax+0x39], cl; enter 0x830f, 0x24; add al, 0x0; add [rax-0x77], cl; ret far; 
0x0000000045cdec: and [rax+rax], ch; add bl, dh; nop edx, edi; xor eax, eax; syscall; 
0x000000004a1659: and [rax+rdx-0xd], dh; movups xmm0, [rip+0x2ec14]; divss xmm0, [rip+0x2ec10]; ret; 
0x000000004238c2: and [rax-0x1], bh; pop rbx; ret; 
0x0000000049c1db: and [rax-0x1], esp; call qword ptr [rax+0x1f88041]; 
0x00000000475da2: and [rax-0x68], cl; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000475501: and [rax-0x68], cl; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047304e: and [rax-0x68], cl; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000476397: and [rax-0x68], cl; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0x6909b]; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004758e7: and [rax-0x68], cl; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0x69d4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000475b53: and [rax-0x68], cl; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x69cdf]; jmp qword ptr [rax+rdx*8]; 
0x00000000475950: and [rax-0x68], cl; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x69de2]; jmp qword ptr [rax+rdx*8]; 
0x00000000456095: and [rax-0x73], cl; jg short 0x00000000004560ba; jne 0x00000000004564f0; ret; 
0x00000000465b7b: and [rax-0x75], cl; je short 0x0000000000465ba4; pop rax; mov rdi, [rsp+0x60]; call r15; 
0x00000000466166: and [rax-0x75], cl; je short 0x000000000046618f; push rax; mov rdi, [rsp+0x58]; call rbx; 
0x00000000467382: and [rax-0x75], cl; je short 0x00000000004673ab; push rax; mov rdi, [rsp+0x48]; call r13; 
0x0000000046b9e6: and [rax-0x75], cl; je short 0x000000000046ba0f; pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x0000000048fdfa: and [rax-0x75], cl; jg short 0x000000000048fe27; bnd call r11; 
0x0000000049028a: and [rax-0x75], cl; jg short 0x00000000004902b7; bnd call r11; 
0x000000004904e6: and [rax-0x75], cl; jg short 0x0000000000490513; bnd call r11; 
0x0000000045d71e: and [rax-0x75], ecx; xor ecx, [rcx-0x77]; fisttp qword ptr [rax-0x77], st; out dx, eax; call r12; 
0x0000000045b7d6: and [rax-0x77], cl; out dx, eax; mov rsi, [rsp+0x18]; call rbx; 
0x00000000462e94: and [rax-0x77], cl; ret; 
0x0000000046f608: and [rax-0x77], cl; std; test rax, rax; je short 0x000000000046f613; call rax; 
0x0000000040a9ba: and [rax-0x7b], cl; shl byte ptr [rax+rbp+0x53], 0x48; mov ebx, esi; mov rdi, rsi; call rax; 
0x0000000047b769: and [rax], al; add [rax], al; jmp rax; 
0x0000000047c9ee: and [rax], al; add [rax], al; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000045a87b: and [rax], al; add [rax], al; pop rbx; ret; 
0x0000000045c3a5: and [rax], al; add [rax], al; syscall; 
0x000000004a17d6: and [rbp+0x27], dh; mov rax, [rsi+0xa8]; add rsp, 0x8; ret; 
0x0000000048f04b: and [rbp+rax], esp; ret; 
0x0000000049b53b: and [rbp-0x4], eax; call qword ptr [rax-0x4c117]; 
0x000000004a68ab: and [rbp-0x7b], cl; test byte ptr [rdi], 0x84; ret far; 
0x0000000040205e: and [rbx+0x1f771ffa], eax; lea rcx, [rip+0xa6f9d]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000045cb98: and [rbx+0x2a7409fe], al; mov eax, 0x48; syscall; 
0x000000004863ff: and [rbx+0x5b69a35], cl; add [rbp-0x7d7af00a], al; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000046d48f: and [rbx+0x5d], bl; pop r12; ret; 
0x0000000047f19c: and [rbx+0xe7729f8], al; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000421b5a: and [rbx+rcx*4+0x6d], cl; sbb [rax-0x77], cl; ret far; 
0x00000000492464: and [rbx+rcx*4+0x7f], cl; sub [rcx-0x3b76b310], cl; mov rbp, r9; nop; jmp rdx; 
0x00000000407574: and [rbx], al; add [rax], al; add cl, ch; ret; 
0x0000000043078e: and [rbx], cl; add [rax+0x39], cl; ret; 
0x0000000040a44f: and [rcx+0x16ff], al; xor byte ptr [rbp+0x48], 0x48; mov eax, 0x4def40; ret; 
0x00000000405adf: and [rcx+0x63], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x00000000495dac: and [rcx+0x9], cl; ret; 
0x000000004797cc: and [rcx+rcx*4-0x11], cl; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x000000004731f3: and [rcx+rcx*4-0x1], cl; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000040324d: and [rcx+rcx*4-0x20], al; pop r12; ret; 
0x00000000408ac2: and [rcx-0x3c3fcefe], cl; mov eax, 0xffffffea; ret; 
0x000000004213b2: and [rcx-0x3f38b7f9], cl; sar bh, 0xff; jmp qword ptr [rdi+rax*8]; 
0x0000000043945e: and [rcx-0x77], ecx; ret; 
0x0000000040657a: and [rcx-0x7d], al; js short 0x000000000040658b; add [rdi], ecx; ret far; 
0x00000000430d15: and [rcx], dh; imul al; ret; 
0x000000004268f7: and [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000487128: and [rcx], eax; add [rax], al; movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x0000000045a2e5: and [rdi+0xb], dh; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000042787a: and [rdi], cl; adc [rcx+0x30], eax; movups [rcx+0x40], xmm0; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x000000004597c5: and [rdi], cl; adc [rdi+0x30], edi; movups [r11], xmm8; ret; 
0x00000000456099: and [rdi], cl; test [rax+0x4], edx; add [rax], al; ret; 
0x000000004572ed: and [rdi], cl; test [rax+rax+0x40a80000], edi; jne 0x00000000004573c0; lea rax, [rdi+0x7]; ret; 
0x0000000042f8c8: and [rdi], cl; test [rdi+rdi*8-0x1], ch; call qword ptr [rax+0x48ed0148]; 
0x0000000045a275: and [rdi], cl; xchg [rax-0xd000000], eax; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x00000000444e55: and [rdi], eax; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004592fc: and [rdx+0xa], dh; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x0000000040a817: and [rdx], dl; add [rbp-0x3d], r11b; mov rax, 0x4e12a0; pop rbp; ret; 
0x0000000041266b: and [rip+0x3d8b4c00], cl; ret; 
0x0000000048d505: and [rsi+0xf], ah; insb [rdi], dx; ret; 
0x000000004a42fd: and [rsi-0x70], ah; mov rsi, r14; mov rdi, rbx; call r15; 
0x000000004a5293: and [rsi-0x9], ah; ret; 
0x00000000455ecb: and [rsi], eax; add [rax], al; ret; 
0x00000000402588: and [rsi], ecx; mov rax, [rax]; mov eax, [rax]; ret; 
0x00000000480d56: and al, 0x0; add [rax], al; call qword ptr [rax+0x68]; 
0x00000000480e8b: and al, 0x0; add [rax], al; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000421e0f: and al, 0x0; add [rax], al; mov rax, [rax+0x20]; jmp rax; 
0x000000004a3a19: and al, 0x10; add rsp, 0x28; ret; 
0x0000000042bddf: and al, 0x10; call rax; 
0x000000004111a6: and al, 0x10; mov edi, [rsp+0xc]; call rbp; 
0x0000000045c17f: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x0000000045c0df: and al, 0x10; mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x00000000411207: and al, 0x10; mov rax, [rsp+0x18]; call rax; 
0x0000000049233b: and al, 0x10; mov rdi, [rsp+0x18]; call rax; 
0x000000004922de: and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x00000000427100: and al, 0x10; mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000483c3c: and al, 0x10; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x00000000423b74: and al, 0x10; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000470d90: and al, 0x10; mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000045df9a: and al, 0x10; test r13, r13; jne short 0x000000000045dff0; mov rdi, [r12]; call rbx; 
0x0000000045dfca: and al, 0x10; test r13, r13; jne short 0x000000000045e050; mov rdi, [r12]; call rbx; 
0x000000004216e5: and al, 0x10; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000042eb6b: and al, 0x18; add rsp, 0x18; jmp rax; 
0x0000000041120b: and al, 0x18; call rax; 
0x00000000422a63: and al, 0x18; call rbp; 
0x0000000045b7dd: and al, 0x18; call rbx; 
0x000000004922e4: and al, 0x18; call rcx; 
0x0000000042bddb: and al, 0x18; mov [rsp+0x10], r8; call rax; 
0x0000000046a85b: and al, 0x18; mov rcx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000045b653: and al, 0x18; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000047048b: and al, 0x18; mov rdx, rbp; mov rsi, r12; call rbx; 
0x0000000046cdad: and al, 0x18; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000467f73: and al, 0x18; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x000000004653fa: and al, 0x18; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x00000000466f61: and al, 0x18; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000046a27f: and al, 0x18; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000042e653: and al, 0x18; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000004629f8: and al, 0x18; xor r8d, r8d; call rbx; 
0x0000000041f93c: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000041f952; add rsp, 0xd8; ret; 
0x0000000045ccf6: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000045cd4b; add rsp, 0x58; ret; 
0x0000000045cd94: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000045cdeb; add rsp, 0x58; ret; 
0x0000000045f9d5: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x000000000045f9eb; add rsp, 0xd8; ret; 
0x00000000471f6c: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x0000000000471f82; add rsp, 0xd8; ret; 
0x000000004984b0: and al, 0x18; xor rcx, fs:[0x28]; jne short 0x00000000004984c3; add rsp, 0x28; ret; 
0x0000000045be80: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x000000000045bea1; add rsp, 0x28; ret; 
0x0000000045cfd3: and al, 0x18; xor rdx, fs:[0x28]; jne short 0x000000000045cfe5; add rsp, 0x28; ret; 
0x00000000421cb0: and al, 0x1; add [rax], al; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x00000000470476: and al, 0x1; mov r13, rax; mov rdi, r12; call rbx; 
0x00000000466cfb: and al, 0x20; call rax; 
0x000000004838e3: and al, 0x20; call rbx; 
0x0000000045cb96: and al, 0x20; cmp esi, 0x9; je short 0x000000000045cbc8; mov eax, 0x48; syscall; 
0x0000000045b7d4: and al, 0x20; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000467380: and al, 0x20; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000466164: and al, 0x20; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000465eee: and al, 0x20; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x0000000046b9e4: and al, 0x20; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x00000000465b79: and al, 0x20; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call r15; 
0x0000000046515a: and al, 0x28; call rax; 
0x000000004837c0: and al, 0x28; call rbx; 
0x0000000042ffa3: and al, 0x28; mov rdi, r12; call rax; 
0x0000000046a860: and al, 0x28; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000048fdc6: and al, 0x28; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x30; bnd jmp r11; 
0x0000000048506b: and al, 0x28; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000045c25a: and al, 0x28; xor rcx, fs:[0x28]; jne 0x000000000045c305; add rsp, 0x68; ret; 
0x0000000045cbaf: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x000000000045cc03; add rsp, 0x68; ret; 
0x000000004919bd: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x00000000004919f3; add rsp, 0x38; ret; 
0x00000000492709: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x0000000000492735; add rsp, 0x38; ret; 
0x0000000049eb19: and al, 0x28; xor rcx, fs:[0x28]; jne short 0x000000000049eb2c; add rsp, 0x38; ret; 
0x0000000049859f: and al, 0x28; xor rdx, fs:[0x28]; jne short 0x00000000004985b1; add rsp, 0x38; ret; 
0x00000000465efd: and al, 0x30; call rax; 
0x00000000483aee: and al, 0x30; call rbx; 
0x00000000467f6e: and al, 0x30; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x0000000042161c: and al, 0x30; mov rdi, r15; call qword ptr [r14+0x90]; 
0x000000004917f3: and al, 0x30; mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x00000000491771: and al, 0x30; mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x000000004694f5: and al, 0x30; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000468f01: and al, 0x30; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x000000004684c1: and al, 0x30; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000466cec: and al, 0x30; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000046b592: and al, 0x30; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000469e95: and al, 0x30; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000048fed8: and al, 0x30; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x30; bnd ret; 
0x00000000469500: and al, 0x38; call r15; 
0x0000000046cf1d: and al, 0x38; lea r8, [rsp+0xa0]; call r15; 
0x00000000468f0c: and al, 0x38; mov rax, [rsp+0x20]; call rax; 
0x000000004917f8: and al, 0x38; mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x00000000491776: and al, 0x38; mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000042ed83: and al, 0x38; mov rdi, r14; call rax; 
0x00000000404fde: and al, 0x38; xor rcx, fs:[0x28]; jne short 0x0000000000404ff1; add rsp, 0x48; ret; 
0x00000000499c3d: and al, 0x3; add al, ch; ret far; 
0x000000004917fc: and al, 0x40; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000049177a: and al, 0x40; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000467f7e: and al, 0x40; call r14; 
0x000000004684cc: and al, 0x40; call rbx; 
0x000000004694fb: and al, 0x40; mov rdi, [rsp+0x38]; call r15; 
0x0000000046cf18: and al, 0x40; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000468f07: and al, 0x40; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x000000004824e4: and al, 0x41; pop rsp; pop r13; pop r14; ret; 
0x000000004269d8: and al, 0x48; add esp, 0x10; pop rbx; jmp rax; 
0x000000004905e7: and al, 0x48; add esp, 0x18; bnd jmp r11; 
0x0000000048fdce: and al, 0x48; add esp, 0x30; bnd jmp r11; 
0x0000000048fee0: and al, 0x48; add esp, 0x30; bnd ret; 
0x000000004a11cf: and al, 0x48; add esp, 0x38; ret; 
0x0000000046738b: and al, 0x48; call r13; 
0x0000000046788b: and al, 0x48; call rbx; 
0x00000000423d22: and al, 0x48; mov edi, ebp; call rax; 
0x0000000049843b: and al, 0x48; mov edx, [rbx+0x10]; mov [rdx], rax; pop rbx; ret; 
0x000000004905e0: and al, 0x48; mov esp, ebx; mov rbx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000046cda8: and al, 0x48; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000467f79: and al, 0x48; mov rdi, [rsp+0x40]; call r14; 
0x000000004684c7: and al, 0x48; mov rdi, [rsp+0x40]; call rbx; 
0x00000000491a89: and al, 0x48; xor rcx, fs:[0x28]; jne short 0x0000000000491ac4; add rsp, 0x58; ret; 
0x00000000491f19: and al, 0x48; xor rcx, fs:[0x28]; jne short 0x0000000000491f54; add rsp, 0x58; ret; 
0x000000004a11c8: and al, 0x4; add [rax], al; mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000040948a: and al, 0x4; lea rdx, [rip+0xa0014]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004a5749: and al, 0x4c; mov edi, esi; call rbp; 
0x000000004249bb: and al, 0x4c; mov edx, eax; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000041e317: and al, 0x4c; mov edx, esi; mov rax, [rsp]; call rax; 
0x0000000041e283: and al, 0x4c; mov edx, esi; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000041e40e: and al, 0x4c; mov esi, esp; mov rdi, r13; call rax; 
0x0000000041e483: and al, 0x4d; mov ebp, edi; add r15, r12; call rax; 
0x0000000046a28a: and al, 0x50; call rbx; 
0x0000000046b59d: and al, 0x50; mov rax, [rsp+0x18]; call rax; 
0x00000000469ea0: and al, 0x50; mov rax, [rsp+0x20]; call rax; 
0x00000000467386: and al, 0x50; mov rdi, [rsp+0x48]; call r13; 
0x00000000467886: and al, 0x50; mov rdi, [rsp+0x48]; call rbx; 
0x00000000465400: and al, 0x50; mov rdi, [rsp+0x58]; call r14; 
0x00000000466950: and al, 0x50; mov rdi, [rsp+0x58]; call r15; 
0x0000000046616a: and al, 0x50; mov rdi, [rsp+0x58]; call rbx; 
0x000000004664cb: and al, 0x50; mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000466cf2: and al, 0x50; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000465151: and al, 0x50; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000465ef4: and al, 0x50; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000465405: and al, 0x58; call r14; 
0x00000000466955: and al, 0x58; call r15; 
0x0000000046616f: and al, 0x58; call rbx; 
0x000000004664d0: and al, 0x58; mov rax, [rsp+0x18]; call rax; 
0x00000000466cf7: and al, 0x58; mov rax, [rsp+0x20]; call rax; 
0x00000000465156: and al, 0x58; mov rax, [rsp+0x28]; call rax; 
0x00000000465ef9: and al, 0x58; mov rax, [rsp+0x30]; call rax; 
0x0000000046a285: and al, 0x58; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046b598: and al, 0x58; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000469e9b: and al, 0x58; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000465b7f: and al, 0x58; mov rdi, [rsp+0x60]; call r15; 
0x0000000046573c: and al, 0x58; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x00000000491bfb: and al, 0x58; xor rcx, fs:[0x28]; jne short 0x0000000000491c44; add rsp, 0x68; ret; 
0x0000000049a8be: and al, 0x5b; add rax, [rdx+0x8]; pop rbp; pop r12; jmp rax; 
0x000000004296cd: and al, 0x5d; mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x00000000465b84: and al, 0x60; call r15; 
0x00000000465741: and al, 0x60; mov rax, [rsp+0x18]; call rax; 
0x00000000465737: and al, 0x68; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x000000004837b7: and al, 0x6a; add [rax-0x73], cl; add [rbp+rcx*4+0x4c], rcx; and al, 0x28; call rbx; 
0x00000000410fa1: and al, 0x70; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000047005f: and al, 0x78; movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x00000000455dc8: and al, 0x7; add [rax], al; ret; 
0x00000000496200: and al, 0x83; ret; 
0x00000000427105: and al, 0x8; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000045c103: and al, 0x8; add rsp, 0x28; ret; 
0x000000004a43b4: and al, 0x8; mov [rsp+0x10], r10; call rax; 
0x0000000045c186: and al, 0x8; mov eax, 0x1; syscall; 
0x0000000045c2ce: and al, 0x8; mov eax, 0x48; syscall; 
0x0000000045cbcb: and al, 0x8; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000045e4ff: and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000045d34a: and al, 0x8; mov rdi, r13; call rax; 
0x00000000421740: and al, 0x8; mov rdi, r15; call rax; 
0x000000004a586c: and al, 0x8; mov rdx, r15; mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x0000000045d008: and al, 0x8; syscall; 
0x0000000045c0e6: and al, 0x8; xor eax, eax; syscall; 
0x0000000046feb9: and al, 0x8; xor rax, fs:[0x28]; jne short 0x000000000046fecc; add rsp, 0x18; ret; 
0x00000000408b00: and al, 0x8; xor rcx, fs:[0x28]; jne short 0x0000000000408b13; add rsp, 0x18; ret; 
0x0000000045cc3e: and al, 0x8; xor rcx, fs:[0x28]; jne short 0x000000000045cc93; add rsp, 0x18; ret; 
0x00000000487046: and al, 0xb8; add al, [rax]; add [rax+0x29], cl; ret; 
0x0000000042497e: and al, 0xba; add [rax], eax; add [rax], al; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000048a35b: and al, 0xc0; lea rax, [rip+0x58e5c]; shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x00000000408f65: and al, 0xc; add rsp, 0x18; pop rbp; pop r12; ret; 
0x0000000045c360: and al, 0xc; add rsp, 0x18; ret; 
0x000000004111aa: and al, 0xc; call rbp; 
0x0000000045c33f: and al, 0xc; mov r8d, eax; mov eax, 0x3; syscall; 
0x0000000045c2c7: and al, 0xc; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x000000004269d3: and al, 0xc; mov rdi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000411202: and al, 0xc; mov rsi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x00000000408de9: and al, 0xd4; ret; 
0x0000000047b5cd: and al, 0xd8; add [rax], al; add [rax-0x39], cl; ret; 
0x0000000041e14b: and al, 0xe0; add [rax], al; add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x0000000049e9d1: and al, 0xe8; movups [rdi], xmm0; mov [rdx], eax; mov eax, 0x2; ret; 
0x0000000041946a: and al, 0xe8; push rax; ret far; 
0x000000004186ef: and al, 0xe8; ret far; 
0x0000000041c4f7: and al, 0xe8; ret; 
0x00000000416d4c: and al, 0xe9; idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000419381: and al, 0xe9; ret far; 
0x00000000416f3c: and al, 0xe9; xchg edi, eax; idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000004a7df2: and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x000000004836f3: and al, 0xf; mov dh, 0xf3; call rbp; 
0x00000000414ec4: and al, [rax-0x80]; call far fword ptr [rax+0xf]; 
0x0000000040a425: and al, [rcx+0x8ff]; shl byte ptr [rbp+0x72], 0x48; mov eax, 0x4ded80; ret; 
0x00000000424b6a: and al, [rcx]; add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000455384: and al, [rsi]; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000046d9a6: and bh, bh; jmp qword ptr [rsi+0xf]; 
0x00000000460194: and bh, bh; loop 0x00000000004601fe; nop [rax+rax]; ret; 
0x000000004563a7: and bl, al; nop [rax]; ret; 
0x0000000045639b: and bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x0000000045639a: and bl, r14b; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x0000000045a838: and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000004841d2: and ch, 0xf; je short 0x00000000004841f0; add rax, 0x2; ret; 
0x000000004841bd: and cl, 0xf; je short 0x00000000004841e0; ret; 
0x00000000476f09: and cl, ch; ret far; 
0x00000000431be2: and dh, 0x2; lea rax, [rip+0x14914]; lea rdx, [rip+0x16b5d]; cmovne rax, rdx; ret; 
0x00000000431049: and dh, 0x2; lea rax, [rip+0x3afd]; lea rdx, [rip+0x5356]; cmovne rax, rdx; ret; 
0x000000004318f0: and dh, 0x2; lea rax, [rip+0x7a86]; lea rdx, [rip+0x25b3f]; cmovne rax, rdx; ret; 
0x0000000045a7a3: and dh, 0xf0; mov edx, 0x0; pop rbx; cmove rax, rdx; ret; 
0x0000000045b8ed: and dh, ah; mov edi, edx; mov eax, r8d; syscall; 
0x0000000045fb11: and dh, al; sub [r9], r8b; ret; 
0x0000000045fb7d: and dh, al; sub [rcx], al; ret; 
0x0000000042798b: and dword ptr [rbx], 0xffffffef; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000004279e3: and dword ptr [rbx], 0xffffffef; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000044326a: and dword ptr [rcx+0x4c000000], 0xffffff8d; sbb eax, 0x73dba; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004658bb: and dword ptr [rsp+rax], 0x0; add [rax-0x77], cl; ret far; 
0x00000000411adf: and eax, 0x0; ret; 
0x0000000045c0a7: and eax, 0x18; test eax, eax; jne short 0x000000000045c0c0; syscall; 
0x0000000045c147: and eax, 0x18; test eax, eax; jne short 0x000000000045c160; mov eax, 0x1; syscall; 
0x0000000045c27b: and eax, 0x18; test eax, eax; jne short 0x000000000045c2b0; mov eax, 0x48; syscall; 
0x0000000045c317: and eax, 0x18; test eax, eax; jne short 0x000000000045c330; mov eax, 0x3; syscall; 
0x00000000426157: and eax, 0x18; test edx, edx; jne short 0x0000000000426170; sub dword ptr [rip+0xbeb49], 0x1; ret; 
0x00000000428923: and eax, 0x18; test edx, edx; jne short 0x0000000000428938; sub dword ptr [rip+0xbc37d], 0x1; ret; 
0x00000000497e41: and eax, 0x18; test edx, edx; jne short 0x0000000000497e50; sub dword ptr [rdi], 0x1; ret; 
0x000000004304b1: and eax, 0x1; cmovne rax, rdx; ret; 
0x000000004a39bf: and eax, 0x1; mov [rsi], eax; mov rax, [rdi+0x98]; ret; 
0x00000000402af4: and eax, 0x28; jne 0x0000000000402b8f; add rsp, 0xc8; ret; 
0x00000000402ca4: and eax, 0x28; jne 0x0000000000402d3f; add rsp, 0xc8; ret; 
0x0000000045c261: and eax, 0x28; jne 0x000000000045c305; add rsp, 0x68; ret; 
0x00000000470233: and eax, 0x28; jne 0x00000000004702d6; add rsp, 0x98; ret; 
0x0000000049e58d: and eax, 0x28; jne 0x000000000049e615; leave; ret; 
0x00000000404fe5: and eax, 0x28; jne short 0x0000000000404ff1; add rsp, 0x48; ret; 
0x00000000405348: and eax, 0x28; jne short 0x000000000040536c; add rsp, 0x10; pop rbp; ret; 
0x00000000408b07: and eax, 0x28; jne short 0x0000000000408b13; add rsp, 0x18; ret; 
0x0000000041e1a7: and eax, 0x28; jne short 0x000000000041e1d4; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000041f943: and eax, 0x28; jne short 0x000000000041f952; add rsp, 0xd8; ret; 
0x0000000042d667: and eax, 0x28; jne short 0x000000000042d674; add rsp, 0x10; pop rbp; ret; 
0x0000000045aede: and eax, 0x28; jne short 0x000000000045af04; add rsp, 0x20; pop rbx; ret; 
0x0000000045be86: and eax, 0x28; jne short 0x000000000045bea1; add rsp, 0x28; ret; 
0x0000000045cbb6: and eax, 0x28; jne short 0x000000000045cc03; add rsp, 0x68; ret; 
0x0000000045cc45: and eax, 0x28; jne short 0x000000000045cc93; add rsp, 0x18; ret; 
0x0000000045ccfd: and eax, 0x28; jne short 0x000000000045cd4b; add rsp, 0x58; ret; 
0x0000000045cd9b: and eax, 0x28; jne short 0x000000000045cdeb; add rsp, 0x58; ret; 
0x0000000045cfd9: and eax, 0x28; jne short 0x000000000045cfe5; add rsp, 0x28; ret; 
0x0000000045f9dc: and eax, 0x28; jne short 0x000000000045f9eb; add rsp, 0xd8; ret; 
0x0000000046fec0: and eax, 0x28; jne short 0x000000000046fecc; add rsp, 0x18; ret; 
0x0000000047013b: and eax, 0x28; jne short 0x0000000000470184; mov eax, r9d; add rsp, 0x148; ret; 
0x00000000471f73: and eax, 0x28; jne short 0x0000000000471f82; add rsp, 0xd8; ret; 
0x0000000048502e: and eax, 0x28; jne short 0x000000000048503d; movzx eax, al; add rsp, 0x58; ret; 
0x000000004850e8: and eax, 0x28; jne short 0x0000000000485114; mov eax, r9d; add rsp, 0x38; ret; 
0x000000004918c9: and eax, 0x28; jne short 0x00000000004918d6; add rsp, 0x20; pop rbx; ret; 
0x000000004919c4: and eax, 0x28; jne short 0x00000000004919f3; add rsp, 0x38; ret; 
0x00000000491a90: and eax, 0x28; jne short 0x0000000000491ac4; add rsp, 0x58; ret; 
0x00000000491c02: and eax, 0x28; jne short 0x0000000000491c44; add rsp, 0x68; ret; 
0x00000000491f20: and eax, 0x28; jne short 0x0000000000491f54; add rsp, 0x58; ret; 
0x00000000492710: and eax, 0x28; jne short 0x0000000000492735; add rsp, 0x38; ret; 
0x000000004984b7: and eax, 0x28; jne short 0x00000000004984c3; add rsp, 0x28; ret; 
0x000000004985a5: and eax, 0x28; jne short 0x00000000004985b1; add rsp, 0x38; ret; 
0x0000000049eb20: and eax, 0x28; jne short 0x000000000049eb2c; add rsp, 0x38; ret; 
0x0000000040b09e: and eax, 0x2964c06b; ret; 
0x0000000049c96c: and eax, 0x2; sub eax, 0x1; ret; 
0x0000000049e80a: and eax, 0x2c7; add [rax], al; mov eax, 0x1; ret; 
0x0000000041ec34: and eax, 0x30; call rax; 
0x0000000041ec16: and eax, 0x30; call rdx; 
0x0000000045a7be: and eax, 0x3fc00; ret; 
0x0000000045a8b8: and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x0000000045a809: and eax, 0x3fffc00; ret; 
0x0000000045cd77: and eax, 0x410000; cmp eax, 0x410000; je short 0x000000000045cdb0; mov eax, 0x101; syscall; 
0x0000000047f297: and eax, 0x48000002; lea ecx, [rip+0x497a2]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000004241d7: and eax, 0x48000002; lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x000000004850ee: and eax, 0x48c88944; add esp, 0x38; ret; 
0x0000000043f147: and eax, 0x49000778; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bf87: and eax, 0x490007a8; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048b68b: and eax, 0x57af0; or byte ptr [rdi+0x31d], 0x4; ret; 
0x00000000401d5d: and eax, 0x5d01000e; ret; 
0x00000000444af7: and eax, 0x63490007; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444af6: and eax, 0x63490007; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000480e1a: and eax, 0x6e0f4866; ret; 
0x0000000045a8a1: and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x0000000045a857: and eax, 0x7ff80000; ret; 
0x0000000048c46e: and eax, 0x8348df74; ret; 
0x0000000048191b: and eax, 0xc; cmp eax, 0x4; je short 0x0000000000481924; ret; 
0x00000000430d14: and eax, 0xe8f63120; ret; 
0x000000004803e7: and eax, 0xebfffa2f; ret; 
0x00000000499576: and eax, 0xf; cmp al, 0xa; jne 0x00000000004994f9; nop [rax]; call r13; 
0x0000000045a78c: and eax, 0xf; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x0000000043b190: and eax, 0xff; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000043a8c3: and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000004038e8: and eax, 0xffffff83; ret; 
0x00000000410bba: and eax, 0xffffffc0; mov [rip+0xd423c], rax; add rsp, 0x88; pop rbx; ret; 
0x00000000462056: and eax, 0xffffffc7; or eax, 0x10; mov [rip+0x838f2], eax; pop rbx; ret; 
0x000000004620b7: and eax, 0xffffffc7; or eax, 0x18; mov [rip+0x83891], eax; ret; 
0x00000000462087: and eax, 0xffffffc7; or eax, 0x8; mov [rip+0x838c1], eax; ret; 
0x0000000040aadb: and eax, 0xffffffdf; ret; 
0x00000000408857: and eax, 0xffffffea; ret; 
0x000000004a16d5: and eax, 0xfffffff8; mov r8, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x00000000461fe7: and eax, 0xfffffff8; or eax, 0x1; mov [rip+0x83961], eax; ret; 
0x00000000461fb6: and eax, 0xfffffff8; or eax, 0x2; mov [rip+0x83992], eax; pop rbx; ret; 
0x00000000462017: and eax, 0xfffffff8; or eax, 0x3; mov [rip+0x83931], eax; ret; 
0x0000000040396b: and eax, 0xfffffffe; add rsp, 0x18; ret; 
0x0000000047df35: and eax, [rax]; add [rax+0x39], cl; ret; 
0x00000000452b09: and eax, [rdx]; add [rax], al; ret; 
0x00000000455286: and eax, [rsi]; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000482c42: and eax, ecx; je 0x0000000000482e10; bsr rax, rax; add rax, rdi; ret; 
0x0000000048b72a: and eax, esi; cmp rdi, rax; jne short 0x000000000048b738; pop rbx; ret; 
0x0000000040b5eb: and eax, esp; or [rax], eax; ret; 
0x0000000042798c: and ebp, edi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000004279e4: and ebp, edi; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000045c8d5: and ebp, edi; jmp qword ptr [rcx+rax*2-0x75]; 
0x000000004818b6: and ebx, 0xffffffbb; cmp r11d, 0xa; je short 0x00000000004818c0; ret; 
0x00000000423384: and ebx, [rbx+0x4c]; mov eax, eax; pop rbp; pop r12; ret; 
0x000000004a070a: and ecx, 0x39447fff; ret; 
0x0000000045a7d8: and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000043b195: and ecx, 0xff; sub eax, ecx; ret; 
0x0000000043a8c8: and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000040aa44: and ecx, [rax-0x77]; out dx, al; mov rdi, r13; call rdx; 
0x00000000429cd5: and ecx, [rcx+rcx*4-0x20]; pop rbx; pop rbp; pop r12; ret; 
0x00000000485252: and ecx, [rsi+0x10]; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000044ed87: and ecx, ebp; ret; 
0x000000004a1657: and edi, 0x20; je short 0x00000000004a166c; movss xmm0, [rip+0x2ec14]; divss xmm0, [rip+0x2ec10]; ret; 
0x000000004a1806: and edi, 0x60; jne 0x000000000040171e; xor eax, eax; add rsp, 0x8; ret; 
0x000000004a4574: and edi, [rax+rsi]; jne short 0x00000000004a4588; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x000000004a45d4: and edi, [rax+rsi]; jne short 0x00000000004a45e8; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x0000000048f932: and edi, eax; jmp qword ptr [rsi+0x2e]; 
0x0000000049d6a1: and edi, esp; jmp qword ptr [rsi+0x2e]; 
0x00000000431c5d: and edx, 0x8; lea rax, [rip+0x9568]; lea rdx, [rip+0xeaf1]; cmovne rax, rdx; ret; 
0x00000000431aed: and edx, 0x8; lea rax, [rip+0x96b8]; lea rdx, [rip+0xec41]; cmovne rax, rdx; ret; 
0x0000000043198d: and edx, 0x8; lea rax, [rip+0xc218]; lea rdx, [rip+0x118b1]; cmovne rax, rdx; ret; 
0x0000000045a81e: and edx, 0xf; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x0000000049c1fc: and esi, 0x2; syscall; 
0x00000000482ed2: and esi, eax; je 0x0000000000482e10; bsr rax, rsi; add rax, rdi; ret; 
0x00000000482cdc: and esi, ecx; je 0x0000000000482e10; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000040b543: and esp, eax; or [rax], eax; ret; 
0x000000004563a6: and r11b, r8b; nop [rax]; ret; 
0x000000004818b5: and r11d, 0xffffffbb; cmp r11d, 0xa; je short 0x00000000004818c0; ret; 
0x0000000045531f: and r8, [r14]; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004a16d4: and rax, 0xfffffffffffffff8; mov r8, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x00000000482c41: and rax, rcx; je 0x0000000000482e10; bsr rax, rax; add rax, rdi; ret; 
0x0000000048b729: and rax, rsi; cmp rdi, rax; jne short 0x000000000048b738; pop rbx; ret; 
0x00000000482ed1: and rsi, rax; je 0x0000000000482e10; bsr rax, rsi; add rax, rdi; ret; 
0x00000000482cdb: and rsi, rcx; je 0x0000000000482e10; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000045fb7c: and sil, al; sub [rcx], al; ret; 
0x0000000042367e: bnd call qword ptr [r12+0x70]; 
0x00000000421045: bnd call qword ptr [rax+0x70]; 
0x000000004731f9: bnd call qword ptr [rbx+0x38]; 
0x0000000048fdff: bnd call r11; 
0x0000000043c82c: bnd jb short 0x000000000043c837; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c8dc: bnd jb short 0x000000000043c8e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f20c: bnd jb short 0x000000000043f217; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f2bc: bnd jb short 0x000000000043f2c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000483d78: bnd je short 0x0000000000483d7f; test edx, edx; jne short 0x0000000000483d70; ret; 
0x0000000048fdd3: bnd jmp r11; 
0x0000000048fee5: bnd ret; 
0x00000000439331: bsf eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000439341: bsf eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000043936f: bsf eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000044e1a4: bsf eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x0000000043908a: bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x00000000439286: bsf eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x00000000439200: bsf eax, eax; add rax, rdi; ret; 
0x0000000044e5d1: bsf eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000439321: bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000439210: bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x00000000439220: bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000004391f0: bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x000000004391d9: bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x0000000044dd37: bsf eax, eax; lea rax, [rdi+rax]; ret; 
0x000000004828d0: bsf eax, eax; sub rdx, rax; jbe short 0x0000000000482910; add rax, rdi; ret; 
0x000000004828e0: bsf eax, eax; sub rdx, rax; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x10]; ret; 
0x000000004828f0: bsf eax, eax; sub rdx, rax; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x20]; ret; 
0x00000000482900: bsf eax, eax; sub rdx, rax; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x30]; ret; 
0x00000000498c30: bsf eax, eax; sub rdx, rax; jbe short 0x0000000000498c70; add rax, rdi; ret; 
0x00000000498c40: bsf eax, eax; sub rdx, rax; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x10]; ret; 
0x00000000498c50: bsf eax, eax; sub rdx, rax; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x20]; ret; 
0x00000000498c60: bsf eax, eax; sub rdx, rax; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x30]; ret; 
0x0000000044e35a: bsf eax, edx; ret; 
0x00000000483e27: bsf eax, edx; shr rax, 0x2; ret; 
0x0000000043339a: bsf ecx, ecx; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x00000000433460: bsf ecx, edi; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x00000000433230: bsf edx, eax; movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x0000000044e4b2: bsf edx, edx; add rax, rdx; sub rax, rdi; ret; 
0x00000000483f37: bsf edx, edx; add rax, rdx; sub rax, rdi; shr rax, 0x2; ret; 
0x00000000456991: bsf edx, edx; lea r11, [rip+0x60ea9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456959: bsf edx, edx; lea r11, [rip+0x60ee1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456934: bsf edx, edx; lea r11, [rip+0x60f06]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456917: bsf edx, edx; lea r11, [rip+0x60f23]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559cd: bsf edx, edx; lea r11, [rip+0x61d19]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559a4: bsf edx, edx; lea r11, [rip+0x61d42]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455351: bsf edx, edx; lea r11, [rip+0x62315]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455319: bsf edx, edx; lea r11, [rip+0x6234d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004552f4: bsf edx, edx; lea r11, [rip+0x62372]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004552d7: bsf edx, edx; lea r11, [rip+0x6238f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004331c1: bsf edx, edx; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x0000000044de50: bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x0000000044e3a2: bsf rax, rdx; ret; 
0x00000000483e26: bsf rax, rdx; shr rax, 0x2; ret; 
0x00000000433399: bsf rcx, rcx; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000043345f: bsf rcx, rdi; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x0000000043322f: bsf rdx, rax; movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x0000000044e4b1: bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000483f36: bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 0x2; ret; 
0x00000000456990: bsf rdx, rdx; lea r11, [rip+0x60ea9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456958: bsf rdx, rdx; lea r11, [rip+0x60ee1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456933: bsf rdx, rdx; lea r11, [rip+0x60f06]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456916: bsf rdx, rdx; lea r11, [rip+0x60f23]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559cc: bsf rdx, rdx; lea r11, [rip+0x61d19]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559a3: bsf rdx, rdx; lea r11, [rip+0x61d42]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455350: bsf rdx, rdx; lea r11, [rip+0x62315]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455318: bsf rdx, rdx; lea r11, [rip+0x6234d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004552f3: bsf rdx, rdx; lea r11, [rip+0x62372]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004552d6: bsf rdx, rdx; lea r11, [rip+0x6238f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004331c0: bsf rdx, rdx; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x00000000482c4b: bsr eax, eax; add rax, rdi; ret; 
0x00000000483031: bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x00000000482edb: bsr eax, esi; add rax, rdi; ret; 
0x00000000482de9: bsr esi, esi; lea rax, [rcx+rsi]; ret; 
0x00000000482ce5: bsr esi, esi; lea rax, [rdi+rsi]; ret; 
0x00000000482c4a: bsr rax, rax; add rax, rdi; ret; 
0x00000000482eda: bsr rax, rsi; add rax, rdi; ret; 
0x00000000482de6: bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x00000000482de8: bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x00000000482ce4: bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x000000004398fe: bswap ecx; mov al, [rdi+rdx-0x1]; mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x0000000049e991: bts eax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x00000000483273: bts edx, ebx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000049e821: bts esi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x0000000049e990: bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x00000000483272: bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000049e820: bts rsi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x0000000040bfe4: call far fword ptr [rax+0x174840f]; 
0x0000000040b394: call far fword ptr [rax+0x184840f]; 
0x0000000047389b: call far fword ptr [rax+0x44]; 
0x0000000047602b: call far fword ptr [rax+0x48]; 
0x00000000413b94: call far fword ptr [rax+0xf]; 
0x0000000040bd17: call far fword ptr [rax]; 
0x000000004028c8: call far fword ptr [rbp+0x41]; 
0x000000004025d1: call far fword ptr [rbp+0x44]; 
0x00000000421e24: call far fword ptr [rbp-0x3d]; 
0x0000000040c0cb: call far fword ptr [rbx+0x15d840f]; 
0x0000000040b3f7: call far fword ptr [rbx+0x191840f]; 
0x000000004089b7: call far fword ptr [rbx+0x31]; 
0x0000000040b209: call far fword ptr [rbx+0x44]; 
0x00000000404db3: call far fword ptr [rbx+0x48]; 
0x000000004a6693: call far fword ptr [rbx+0x4c]; 
0x000000004029f4: call far fword ptr [rbx+0x5d]; 
0x0000000048fa6a: call far fword ptr [rbx+0x64]; 
0x000000004023e8: call far fword ptr [rbx-0x3d]; 
0x00000000404f52: call far fword ptr [rbx-0x48]; 
0x0000000040bfc0: call far fword ptr [rcx+0x158840f]; 
0x0000000040b370: call far fword ptr [rcx+0x168840f]; 
0x0000000040b68b: call far fword ptr [rdi+0xf00000f]; 
0x0000000041e992: call far fword ptr [rdi]; 
0x0000000040bfb7: call far fword ptr [rdx+0x131840f]; 
0x0000000040b367: call far fword ptr [rdx+0x141840f]; 
0x00000000430fb8: call far fword ptr [rdx+0x31]; 
0x0000000048aafe: call far fword ptr [rsi+0x5f]; 
0x000000004813ff: call far fword ptr [rsi]; 
0x0000000047427c: call qword ptr [r11+rax*8-0x40]; 
0x0000000042845d: call qword ptr [r12+0x18]; 
0x000000004797d7: call qword ptr [r12+0x38]; 
0x0000000048a36b: call qword ptr [r12+0x60]; 
0x0000000042367f: call qword ptr [r12+0x70]; 
0x000000004246f0: call qword ptr [r12+0x80]; 
0x00000000425378: call qword ptr [r12+0x88]; 
0x00000000428297: call qword ptr [r13+0x18]; 
0x00000000424bd7: call qword ptr [r13+0x20]; 
0x00000000472465: call qword ptr [r13+0x38]; 
0x00000000420b31: call qword ptr [r13+0x58]; 
0x00000000427441: call qword ptr [r13+0x60]; 
0x000000004219d3: call qword ptr [r13+0x80]; 
0x00000000424b74: call qword ptr [r13+0x90]; 
0x00000000480b4d: call qword ptr [r14+0x18]; 
0x0000000048130e: call qword ptr [r14+0x20]; 
0x00000000478446: call qword ptr [r14+0x38]; 
0x0000000042523d: call qword ptr [r14+0x78]; 
0x000000004216ed: call qword ptr [r14+0x80]; 
0x00000000421621: call qword ptr [r14+0x90]; 
0x00000000423771: call qword ptr [r15+0x18]; 
0x0000000042091d: call qword ptr [r15+0x38]; 
0x00000000423997: call qword ptr [r15+0x40]; 
0x00000000427ed2: call qword ptr [r15+0x58]; 
0x00000000423db7: call qword ptr [r15+0x80]; 
0x0000000042392e: call qword ptr [r15+0x90]; 
0x00000000411a20: call qword ptr [r15+rbx*8]; 
0x00000000479c94: call qword ptr [r8+0x38]; 
0x0000000048c04e: call qword ptr [rax+0x10438b48]; 
0x000000004865ae: call qword ptr [rax+0x107d8348]; 
0x00000000430a45: call qword ptr [rax+0x121d8948]; 
0x0000000047ec2e: call qword ptr [rax+0x1428d4c]; 
0x0000000048dc4e: call qword ptr [rax+0x142b60f]; 
0x0000000046310e: call qword ptr [rax+0x14673945]; 
0x0000000040c026: call qword ptr [rax+0x17a840f]; 
0x0000000046112e: call qword ptr [rax+0x17e9c031]; 
0x0000000045f54e: call qword ptr [rax+0x17f8d4c]; 
0x000000004862ee: call qword ptr [rax+0x18858b48]; 
0x00000000476b6e: call qword ptr [rax+0x188d8944]; 
0x000000004213a0: call qword ptr [rax+0x18]; 
0x0000000040b3a6: call qword ptr [rax+0x192840f]; 
0x0000000047855e: call qword ptr [rax+0x1b9]; 
0x0000000042a20e: call qword ptr [rax+0x1bac031]; 
0x0000000049c1de: call qword ptr [rax+0x1f88041]; 
0x0000000042235e: call qword ptr [rax+0x20758b48]; 
0x0000000049a66e: call qword ptr [rax+0x2086c641]; 
0x0000000047e8fe: call qword ptr [rax+0x20c0c748]; 
0x000000004047de: call qword ptr [rax+0x230d8d48]; 
0x0000000040712e: call qword ptr [rax+0x242444c7]; 
0x0000000048de8e: call qword ptr [rax+0x242b60f]; 
0x0000000049de2e: call qword ptr [rax+0x24348b48]; 
0x0000000042bd9e: call qword ptr [rax+0x2444894c]; 
0x000000004a0cbe: call qword ptr [rax+0x24448d48]; 
0x000000004068ee: call qword ptr [rax+0x2444c748]; 
0x00000000490bee: call qword ptr [rax+0x24548b48]; 
0x000000004a58fe: call qword ptr [rax+0x245c8948]; 
0x0000000040713e: call qword ptr [rax+0x24748b48]; 
0x0000000040685e: call qword ptr [rax+0x2484c748]; 
0x00000000406ace: call qword ptr [rax+0x24b48b48]; 
0x00000000496cce: call qword ptr [rax+0x28458b48]; 
0x0000000048effe: call qword ptr [rax+0x2bf5850]; 
0x000000004a69ce: call qword ptr [rax+0x30658b4c]; 
0x0000000047e19e: call qword ptr [rax+0x30be]; 
0x00000000421a8e: call qword ptr [rax+0x31ee8948]; 
0x00000000485a65: call qword ptr [rax+0x31f1894c]; 
0x0000000048e4ce: call qword ptr [rax+0x37bb41]; 
0x00000000475165: call qword ptr [rax+0x38]; 
0x000000004243ca: call qword ptr [rax+0x40]; 
0x00000000452fee: call qword ptr [rax+0x416f0ff3]; 
0x000000004303be: call qword ptr [rax+0x41f0c031]; 
0x00000000430a0d: call qword ptr [rax+0x421d8948]; 
0x0000000042afee: call qword ptr [rax+0x43d8d48]; 
0x0000000045306e: call qword ptr [rax+0x44318b48]; 
0x0000000048102e: call qword ptr [rax+0x44a8d48]; 
0x0000000049b295: call qword ptr [rax+0x44b04d8b]; 
0x00000000409b9e: call qword ptr [rax+0x44e48545]; 
0x0000000042cf0e: call qword ptr [rax+0x4587c031]; 
0x0000000047ff6e: call qword ptr [rax+0x458b48]; 
0x0000000049d40e: call qword ptr [rax+0x48068b48]; 
0x0000000047f56e: call qword ptr [rax+0x48087e8b]; 
0x00000000415cde: call qword ptr [rax+0x480ab60f]; 
0x000000004811ae: call qword ptr [rax+0x487d8348]; 
0x0000000049461e: call qword ptr [rax+0x48858b48]; 
0x00000000475317: call qword ptr [rax+0x48]; 
0x000000004983fe: call qword ptr [rax+0x48b78b48]; 
0x0000000042f8ce: call qword ptr [rax+0x48ed0148]; 
0x0000000041e5ae: call qword ptr [rax+0x4cee894c]; 
0x0000000042ffdd: call qword ptr [rax+0x4cef8948]; 
0x0000000042b34e: call qword ptr [rax+0x4cef894c]; 
0x000000004660ee: call qword ptr [rax+0x4cf1894c]; 
0x0000000048c47e: call qword ptr [rax+0x4cf8894c]; 
0x0000000042849e: call qword ptr [rax+0x50738b48]; 
0x00000000412bdb: call qword ptr [rax+0x50]; 
0x000000004a296e: call qword ptr [rax+0x56415741]; 
0x000000004949ce: call qword ptr [rax+0x5c958b44]; 
0x0000000046518e: call qword ptr [rax+0x5fd8341]; 
0x0000000043039e: call qword ptr [rax+0x630d8d48]; 
0x000000004725ee: call qword ptr [rax+0x688d8b48]; 
0x00000000480d5b: call qword ptr [rax+0x68]; 
0x0000000042bbce: call qword ptr [rax+0x6c0d05f6]; 
0x0000000047709e: call qword ptr [rax+0x709d894c]; 
0x00000000421046: call qword ptr [rax+0x70]; 
0x0000000046304e: call qword ptr [rax+0x70b58b48]; 
0x000000004a1675: call qword ptr [rax+0x74]; 
0x00000000409f8e: call qword ptr [rax+0x758b48]; 
0x0000000046d87e: call qword ptr [rax+0x76148d48]; 
0x0000000042a64e: call qword ptr [rax+0x787c031]; 
0x000000004249c5: call qword ptr [rax+0x78]; 
0x00000000423cd7: call qword ptr [rax+0x80]; 
0x0000000048ac5e: call qword ptr [rax+0x83d8348]; 
0x000000004200ee: call qword ptr [rax+0x847c748]; 
0x0000000048f0be: call qword ptr [rax+0x8498b48]; 
0x00000000476e9e: call qword ptr [rax+0x84e8b49]; 
0x0000000047f43e: call qword ptr [rax+0x8578b44]; 
0x00000000497aee: call qword ptr [rax+0x8be]; 
0x000000004a5a1e: call qword ptr [rax+0x8c48348]; 
0x00000000423b79: call qword ptr [rax+0x90]; 
0x0000000042231e: call qword ptr [rax+0xc08d8b]; 
0x00000000491e6e: call qword ptr [rax+0xee9c031]; 
0x0000000049de8e: call qword ptr [rax+0xf66c031]; 
0x0000000045dd5e: call qword ptr [rax+0xfc98548]; 
0x0000000048c0fe: call qword ptr [rax+0xfd83948]; 
0x0000000048bf7e: call qword ptr [rax+0xfdb854d]; 
0x0000000041e5fe: call qword ptr [rax+0xfef894c]; 
0x0000000042678e: call qword ptr [rax+0xff0c889]; 
0x0000000047278a: call qword ptr [rax+r9*8]; 
0x0000000047278b: call qword ptr [rax+rcx*8]; 
0x0000000042f76e: call qword ptr [rax-0x1076b370]; 
0x00000000487662: call qword ptr [rax-0x1107a3a]; 
0x000000004943ee: call qword ptr [rax-0x1374a75]; 
0x0000000045f2be: call qword ptr [rax-0x1600cebb]; 
0x0000000047237e: call qword ptr [rax-0x161176b3]; 
0x0000000040471e: call qword ptr [rax-0x163976b7]; 
0x0000000042c5de: call qword ptr [rax-0x16c272b8]; 
0x000000004a5e5e: call qword ptr [rax-0x16d272b4]; 
0x00000000499ee3: call qword ptr [rax-0x170876b4]; 
0x00000000496c3e: call qword ptr [rax-0x171076b8]; 
0x0000000042fd1e: call qword ptr [rax-0x1876b370]; 
0x0000000047b7da: call qword ptr [rax-0x18]; 
0x0000000047531f: call qword ptr [rax-0x1]; 
0x00000000424f7e: call qword ptr [rax-0x1c7418]; 
0x000000004a256e: call qword ptr [rax-0x2049f0c0]; 
0x0000000040692e: call qword ptr [rax-0x214418]; 
0x0000000042545e: call qword ptr [rax-0x215418]; 
0x00000000407dae: call qword ptr [rax-0x276b7ab]; 
0x0000000049800e: call qword ptr [rax-0x2ff5ea75]; 
0x0000000042c56e: call qword ptr [rax-0x3f3f38b8]; 
0x00000000472fbe: call qword ptr [rax-0x3f7c3977]; 
0x0000000042047e: call qword ptr [rax-0x41fb3380]; 
0x0000000049f48e: call qword ptr [rax-0x4bf7a77]; 
0x0000000049b53e: call qword ptr [rax-0x4c117]; 
0x0000000047cfee: call qword ptr [rax-0x4f77a75]; 
0x000000004089ce: call qword ptr [rax-0x5e1f00d]; 
0x000000004605ae: call qword ptr [rax-0x5eea76b4]; 
0x00000000496d3e: call qword ptr [rax-0x5f7a74b8]; 
0x000000004610be: call qword ptr [rax-0x66d274b8]; 
0x0000000042b08e: call qword ptr [rax-0x6ec272b8]; 
0x0000000042ed8e: call qword ptr [rax-0x6efa74b8]; 
0x000000004920de: call qword ptr [rax-0x70143fcf]; 
0x0000000047f40e: call qword ptr [rax-0x72fbb975]; 
0x0000000047b7b8: call qword ptr [rax-0x75]; 
0x0000000048598e: call qword ptr [rax-0x76378a75]; 
0x0000000042d42e: call qword ptr [rax-0x76c272b8]; 
0x0000000047dbfe: call qword ptr [rax-0x77276b4]; 
0x0000000048bf1e: call qword ptr [rax-0x77ba74b8]; 
0x00000000420d8e: call qword ptr [rax-0x77cf879]; 
0x000000004a013e: call qword ptr [rax-0x7af0fc58]; 
0x00000000401fe7: call qword ptr [rax-0xc3c3670]; 
0x0000000048757e: call qword ptr [rax-0xdb4a75]; 
0x000000004033b5: call qword ptr [rax]; 
0x0000000040bfc9: call qword ptr [rbp+0x15f840f]; 
0x0000000040b379: call qword ptr [rbp+0x16f840f]; 
0x000000004268c2: call qword ptr [rbp+0x18]; 
0x00000000424bd8: call qword ptr [rbp+0x20]; 
0x00000000427983: call qword ptr [rbp+0x30]; 
0x00000000472466: call qword ptr [rbp+0x38]; 
0x00000000402ee0: call qword ptr [rbp+0x48]; 
0x00000000408f98: call qword ptr [rbp+0x49]; 
0x0000000048e083: call qword ptr [rbp+0x53]; 
0x00000000420b32: call qword ptr [rbp+0x58]; 
0x00000000420563: call qword ptr [rbp+0x60]; 
0x0000000042cde6: call qword ptr [rbp+0x64]; 
0x00000000420bf4: call qword ptr [rbp+0x68]; 
0x00000000424566: call qword ptr [rbp+0x70]; 
0x000000004219d4: call qword ptr [rbp+0x80]; 
0x00000000424b75: call qword ptr [rbp+0x90]; 
0x0000000047301d: call qword ptr [rbp+rax]; 
0x00000000411aa8: call qword ptr [rbp+rbx*8]; 
0x00000000410fc1: call qword ptr [rbx+0x10]; 
0x0000000040b3c1: call qword ptr [rbx+0x147840f]; 
0x0000000040c065: call qword ptr [rbx+0x16b840f]; 
0x00000000426b29: call qword ptr [rbx+0x18]; 
0x000000004731fa: call qword ptr [rbx+0x38]; 
0x00000000430af5: call qword ptr [rbx+0x48]; 
0x000000004a3bae: call qword ptr [rbx+0x52]; 
0x00000000484d04: call qword ptr [rbx+0x64]; 
0x000000004203cf: call qword ptr [rbx+0x80]; 
0x00000000425be4: call qword ptr [rbx+0x88]; 
0x0000000047fa3d: call qword ptr [rbx+0x90]; 
0x00000000475780: call qword ptr [rbx+0xf]; 
0x0000000047427d: call qword ptr [rbx+rax*8-0x40]; 
0x00000000475326: call qword ptr [rbx-0x18]; 
0x0000000041ed38: call qword ptr [rbx]; 
0x0000000040c080: call qword ptr [rcx+0x168840f]; 
0x0000000040b3dc: call qword ptr [rcx+0x194840f]; 
0x00000000473413: call qword ptr [rcx+0x38]; 
0x0000000040310d: call qword ptr [rcx-0x38b7fffb]; 
0x00000000417a69: call qword ptr [rcx]; 
0x0000000040bfa5: call qword ptr [rdi+0x13b840f]; 
0x0000000040b355: call qword ptr [rdi+0x143840f]; 
0x00000000423772: call qword ptr [rdi+0x18]; 
0x0000000042091e: call qword ptr [rdi+0x38]; 
0x00000000423998: call qword ptr [rdi+0x40]; 
0x00000000427ed3: call qword ptr [rdi+0x58]; 
0x00000000423db8: call qword ptr [rdi+0x80]; 
0x0000000042392f: call qword ptr [rdi+0x90]; 
0x00000000411a21: call qword ptr [rdi+rbx*8]; 
0x0000000040c0d4: call qword ptr [rdi+rcx+0x14c84]; 
0x0000000040b400: call qword ptr [rdi+rcx+0x19084]; 
0x0000000040a3d9: call qword ptr [rdi+rcx]; 
0x0000000040187d: call qword ptr [rdi]; 
0x0000000040c01d: call qword ptr [rdx+0x12b840f]; 
0x0000000040b39d: call qword ptr [rdx+0x18b840f]; 
0x000000004a3360: call qword ptr [rdx]; 
0x0000000040bfd2: call qword ptr [rsi+0x166840f]; 
0x0000000040b382: call qword ptr [rsi+0x176840f]; 
0x00000000480b4e: call qword ptr [rsi+0x18]; 
0x0000000048130f: call qword ptr [rsi+0x20]; 
0x00000000478447: call qword ptr [rsi+0x38]; 
0x0000000042523e: call qword ptr [rsi+0x78]; 
0x000000004216ee: call qword ptr [rsi+0x80]; 
0x00000000421622: call qword ptr [rsi+0x90]; 
0x0000000042c148: call qword ptr [rsi+rsi*2]; 
0x0000000040a3e4: call qword ptr [rsi]; 
0x0000000042845e: call qword ptr [rsp+0x18]; 
0x000000004797d8: call qword ptr [rsp+0x38]; 
0x0000000048a36c: call qword ptr [rsp+0x60]; 
0x00000000423680: call qword ptr [rsp+0x70]; 
0x000000004246f1: call qword ptr [rsp+0x80]; 
0x00000000425379: call qword ptr [rsp+0x88]; 
0x0000000048800d: call qword ptr [rsp+rax]; 
0x0000000048c387: call r10; 
0x0000000048fe00: call r11; 
0x00000000422cb4: call r12; 
0x0000000046738c: call r13; 
0x00000000463d57: call r14; 
0x00000000465b86: call r15; 
0x0000000047f60a: call r8; 
0x00000000401014: call rax; 
0x0000000040a95e: call rax; 
0x000000004111ac: call rbp; 
0x000000004836f6: call rbp; 
0x00000000404145: call rbx; 
0x000000004922e6: call rcx; 
0x00000000465b87: call rdi; 
0x0000000040aa4b: call rdx; 
0x0000000046344e: call rsi; 
0x00000000422cb5: call rsp; 
0x00000000436867: cdq; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000414caa: cdq; add [rax], al; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000475da3: cdqe; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000475502: cdqe; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047304f: cdqe; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000476398: cdqe; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0x6909b]; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004758e8: cdqe; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0x69d4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000475b54: cdqe; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x69cdf]; jmp qword ptr [rax+rdx*8]; 
0x00000000475951: cdqe; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x69de2]; jmp qword ptr [rax+rdx*8]; 
0x0000000045bebf: clc; add [rdi+0x2d], esi; mov eax, 0x4; syscall; 
0x00000000484f4f: clc; add [rdi+0x2d], esi; mov eax, 0x6; syscall; 
0x0000000045bf1e: clc; add [rdi+0x2e], esi; mov eax, 0x5; syscall; 
0x00000000421a4c: clc; add cl, [rax+0xf]; scasd [rdi]; ret; 
0x00000000483fc2: clc; add cl, [rax-0x7b]; ror byte ptr [rax+0xf], cl; ret; 
0x0000000049fcff: clc; add cl, ch; out dx, al; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000049edad: clc; add ebx, [rbx+0x5d]; pop r12; ret; 
0x00000000411a9d: clc; add esi, [rbp+rdx+0x48]; lea ebx, [rax-0x1]; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x0000000043908f: clc; add rax, rcx; ret; 
0x0000000044e51b: clc; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000043928b: clc; add rax, rcx; vzeroupper; ret; 
0x0000000047df34: clc; and eax, [rax]; add [rax+0x39], cl; ret; 
0x0000000045c8d4: clc; and ebp, edi; jmp qword ptr [rcx+rax*2-0x75]; 
0x000000004a66cf: clc; call far fword ptr [rbx+0x4c]; 
0x0000000047866c: clc; call far fword ptr [rbx+0x5d]; 
0x0000000048de8d: clc; call qword ptr [rax+0x242b60f]; 
0x0000000048f0bd: clc; call qword ptr [rax+0x8498b48]; 
0x0000000049169d: clc; call qword ptr [rax-0x5e1f00d]; 
0x0000000043a72c: clc; cmp rcx, rax; jne 0x000000000043b163; xor eax, eax; ret; 
0x0000000043b138: clc; cmp rcx, rax; jne short 0x000000000043b163; xor eax, eax; ret; 
0x00000000474408: clc; dec dword ptr [rax-0x77]; ret; 
0x000000004a669e: clc; dec dword ptr [rax-0x7d]; ret; 
0x0000000047d8c3: clc; fdivp st(7), st; call far fword ptr [rdi]; 
0x00000000473600: clc; idiv bh; call qword ptr [rax]; 
0x00000000479e96: clc; idiv bh; dec dword ptr [rbp+0x63]; ret; 
0x0000000047a619: clc; idiv bh; inc dword ptr [rcx]; ret far; 
0x0000000047a55a: clc; idiv bh; jmp qword ptr [rsi-0x70]; 
0x000000004732a6: clc; idiv edi; jmp qword ptr [rsi+0xf]; 
0x000000004772b6: clc; in al, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000483554: clc; ja short 0x000000000048351a; nop [rax+rax]; xor eax, eax; ret; 
0x000000004846c8: clc; ja short 0x000000000048468e; nop [rax+rax]; xor eax, eax; ret; 
0x0000000043c04c: clc; jb short 0x000000000043c057; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c0fc: clc; jb short 0x000000000043c107; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ea2c: clc; jb short 0x000000000043ea37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043eadc: clc; jb short 0x000000000043eae7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000421cad: clc; jbe 0x0000000000421dd8; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000042727a: clc; jbe 0x00000000004273f0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x00000000481304: clc; jbe 0x00000000004814c0; mov rdi, r13; call qword ptr [r14+0x20]; 
0x000000004233fd: clc; jbe short 0x0000000000423420; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000428452: clc; jbe short 0x00000000004284b0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x0000000048002f: clc; jmp qword ptr [rsi+0x2e]; 
0x0000000048f122: clc; jmp qword ptr [rsi+0x66]; 
0x00000000483b30: clc; jmp qword ptr [rsi+0xf]; 
0x00000000440656: clc; lea r11, [rip+0x76312]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004404a0: clc; lea r11, [rip+0x764c8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043db82: clc; lea r11, [rip+0x78c26]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043daa8: clc; lea r11, [rip+0x78d00]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004a3d02: clc; leave; ret; 
0x0000000043cc47: clc; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043d59b: clc; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d79b: clc; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d99b: clc; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043cc2b: clc; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043cc63: clc; mov [rdi-0x8], rdx; ret; 
0x0000000043d5b7: clc; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000442536: clc; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043d7b7: clc; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004424a6: clc; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043d9b7: clc; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000442416: clc; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000044f047: clc; mov [rdi], rcx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x0000000045a392: clc; mov [rdi], rcx; ret; 
0x0000000045a511: clc; mov [rdi], rcx; vzeroupper; ret; 
0x00000000445edf: clc; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000045960e: clc; mov [rdi], rsi; ret; 
0x000000004a16d7: clc; mov r8, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x000000004a3e6f: clc; mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x00000000459606: clc; mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x0000000047f1a8: clc; notrack jmp rax; 
0x0000000049254b: clc; or [rdi-0x2f], esi; mov rax, r8; ret; 
0x00000000461fe9: clc; or eax, 0x1; mov [rip+0x83961], eax; ret; 
0x00000000461fb8: clc; or eax, 0x2; mov [rip+0x83992], eax; pop rbx; ret; 
0x00000000462019: clc; or eax, 0x3; mov [rip+0x83931], eax; ret; 
0x00000000403100: clc; out dx, eax; or eax, 0xffffff00; inc dword ptr [rbp-0x17fa8101]; call qword ptr [rcx-0x38b7fffb]; 
0x00000000428896: clc; ret; 
0x0000000049d0e9: clc; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x00000000483f3f: clc; shr rax, 0x2; ret; 
0x000000004916b1: clc; std; jbe short 0x00000000004916c0; ret; 
0x0000000046da0b: clc; std; je short 0x000000000046da28; pop rbx; ret; 
0x0000000047f19e: clc; sub [rdi+0xe], esi; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x000000004527e0: clc; sub r8, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000452d30; ret; 
0x000000004529d6: clc; sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000452d30; ret; 
0x000000004529f8: clc; sub r8, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000452d30; ret; 
0x00000000452a1e: clc; sub r8, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000452d30; ret; 
0x00000000452a36: clc; sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000452d30; ret; 
0x00000000452a5c: clc; sub r8, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000452d30; ret; 
0x00000000452a7e: clc; sub r8, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000452d30; ret; 
0x00000000452a9c: clc; sub r8, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000452d30; ret; 
0x00000000452778: clc; sub r8, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000452d30; ret; 
0x00000000452abe: clc; sub r8, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000452d30; ret; 
0x00000000452ade: clc; sub r8, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000452d30; ret; 
0x00000000452afe: clc; sub r8, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000452d30; ret; 
0x00000000452b1e: clc; sub r8, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000452d30; ret; 
0x00000000452b40: clc; sub r8, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000452d30; ret; 
0x00000000452b60: clc; sub r8, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000452d30; ret; 
0x00000000452b80: clc; sub r8, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000452d30; ret; 
0x00000000484396: clc; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044e5d6: clc; sub rax, rdx; vzeroupper; ret; 
0x00000000439326: clc; vzeroupper; ret; 
0x0000000049e587: clc; xor rax, fs:[0x28]; jne 0x000000000049e615; leave; ret; 
0x000000004310ad: cld; add [rax], eax; cmovne rax, rdx; ret; 
0x0000000045a7db: cld; add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000045a7c0: cld; add eax, [rax]; ret; 
0x0000000049b293: cld; call qword ptr [rax+0x44b04d8b]; 
0x00000000499ee2: cld; call qword ptr [rax-0x170876b4]; 
0x0000000049b53c: cld; call qword ptr [rax-0x4c117]; 
0x00000000458970: cld; cmp eax, ecx; jne 0x0000000000458b80; xor eax, eax; ret; 
0x0000000043a755: cld; cmp ecx, eax; jne 0x000000000043b16f; xor eax, eax; ret; 
0x000000004645f2: cld; dec dword ptr [rax-0x77]; ret; 
0x0000000045a8ba: cld; inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x0000000045a80b: cld; inc dword ptr [rbx]; ret; 
0x0000000043bb0c: cld; jb short 0x000000000043bb17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bbbc: cld; jb short 0x000000000043bbc7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e4ec: cld; jb short 0x000000000043e4f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e59c: cld; jb short 0x000000000043e5a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000431d92: cld; jmp qword ptr [rsi+0x2e]; 
0x00000000431d91: cld; jmp qword ptr [rsi+0x2e]; 
0x0000000048f021: cld; jmp qword ptr [rsi+0x66]; 
0x0000000046e3b8: cld; jmp qword ptr [rsi+0xf]; 
0x0000000043ce0a: cld; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043cfea: cld; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d1ca: cld; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d3aa: cld; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d3d2: cld; mov [rdi-0x4], edx; ret; 
0x0000000043d5d4: cld; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043d7d4: cld; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043d9d4: cld; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043ce26: cld; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000442745: cld; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043d006: cld; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x000000004426c5: cld; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043d1e6: cld; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000442645: cld; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043d3c6: cld; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x000000004425c5: cld; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000044f026: cld; mov [rdi], ecx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x0000000045a39a: cld; mov [rdi], ecx; ret; 
0x0000000045a51c: cld; mov [rdi], ecx; vzeroupper; ret; 
0x00000000445ef1: cld; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x0000000045961c: cld; mov [rdi], esi; ret; 
0x00000000459616: cld; mov esi, [rsi]; mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x00000000482326: cld; or [rax+0xf], cl; ret; 
0x000000004991de: cld; push rbx; nop edx, edi; mov eax, [rip+0x4c79e]; ret; 
0x0000000043ccb1: cld; ret; 
0x00000000446061: cld; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x00000000445e27: cld; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x000000004592af: cld; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000044f02d: cld; vzeroupper; ret; 
0x00000000493fd9: cli; adc [rax], eax; add al, ch; ret; 
0x0000000045a385: cli; add [rdi+0x15], esi; jb short 0x000000000045a38d; mov [rdi], cl; ret; 
0x0000000045933f: cli; add [rdx+0x2], esi; mov [rdi], cl; ret; 
0x00000000445f10: cli; add [rdx+0x4], esi; mov cl, [rsi]; mov [rdi], cl; ret; 
0x0000000049893b: cli; add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x00000000481749: cli; add ch, [rcx]; rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x00000000459332: cli; add dh, [rdx+0x8]; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x00000000468204: cli; add ecx, [rdi]; xchg [rax*1+0x39480000], esp; ret; 
0x000000004847d4: cli; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000045a2e4: cli; and [rdi+0xb], dh; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x000000004592fb: cli; and [rdx+0xa], dh; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000475164: cli; call qword ptr [rax+0x38]; 
0x00000000472789: cli; call qword ptr [rax+r9*8]; 
0x0000000046da5c: cli; call qword ptr [rax-0x5e1f00d]; 
0x00000000426df3: cli; cmp qword ptr [rdi+0x38], 0x0; je short 0x0000000000426e00; ret; 
0x00000000423313: cli; cmp qword ptr [rip+0xbec84], 0x0; je short 0x000000000042331f; ret; 
0x0000000045b977: cli; dec dword ptr [rax-0x77]; ret; 
0x0000000045c802: cli; dec dword ptr [rax-0x77]; ror dword ptr [rax-0x73], 0x40; inc esi; jmp far fword ptr [r15]; 
0x0000000046a663: cli; dec dword ptr [rbp-0x77]; ret; 
0x0000000046a3db: cli; dec dword ptr [rcx-0x77]; ret far; 
0x0000000048a285: cli; dec dword ptr [rcx-0x77]; ret; 
0x0000000040cce3: cli; enter 0x9, 0xc3; lea rax, [rip+0x9c87b]; ret; 
0x0000000045a7df: cli; inc dword ptr [rax]; add [rax], al; cmove rax, rcx; ret; 
0x00000000480cd2: cli; inc dword ptr [rcx+rcx*4-0x2]; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x00000000480cd3: cli; inc dword ptr [rcx+rcx*4-0x2]; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000043bdac: cli; jb short 0x000000000043bdb7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043be5c: cli; jb short 0x000000000043be67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e78c: cli; jb short 0x000000000043e797; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e83c: cli; jb short 0x000000000043e847; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004592e8: cli; jb short 0x00000000004592fa; vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000445ecb: cli; jg short 0x0000000000445ed5; vmovdqu [r9-0x10], xmm1; ret; 
0x0000000044e9bb: cli; jg short 0x000000000044e9d5; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x0000000044f06c: cli; jg short 0x000000000044f086; vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x0000000044f111: cli; jg short 0x000000000044f11b; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x0000000045930a: cli; jg short 0x0000000000459314; vmovdqu [rsi-0x10], xmm0; ret; 
0x0000000045997d: cli; jg short 0x0000000000459987; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x00000000459de5: cli; jg short 0x0000000000459def; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x0000000045a506: cli; jg short 0x000000000045a510; vzeroupper; ret; 
0x0000000045a6dc: cli; jg short 0x000000000045a6e6; vzeroupper; ret; 
0x00000000486cdb: cli; jmp far fword ptr [rdx]; 
0x00000000462b00: cli; jmp qword ptr [rsi+0x2e]; 
0x00000000464200: cli; jmp qword ptr [rsi+0x66]; 
0x00000000465568: cli; jmp qword ptr [rsi+0xf]; 
0x000000004638ec: cli; jmp qword ptr [rsi-0x70]; 
0x00000000462d92: cli; jrcxz 0x0000000000462d8e; jmp qword ptr [rsi+0xf]; 
0x00000000485a62: cli; lahf; std; call qword ptr [rax+0x31f1894c]; 
0x00000000461303: cli; lea rax, [rip+0x81f55]; ret; 
0x00000000402163: cli; lea rax, [rip+0xa6f3d]; ret; 
0x000000004a39d3: cli; mov [rdi+0x98], rsi; ret; 
0x0000000043d7d8: cli; mov [rdi-0x4], ecx; ret; 
0x0000000045cf33: cli; mov eax, 0x10; syscall; 
0x0000000045be23: cli; mov eax, 0x18; syscall; 
0x0000000045ce23: cli; mov eax, 0x1; syscall; 
0x0000000045d143: cli; mov eax, 0x1c; syscall; 
0x0000000045c3a3: cli; mov eax, 0x20; syscall; 
0x0000000049ed23: cli; mov eax, 0x26; syscall; 
0x00000000498f93: cli; mov eax, 0x27; syscall; 
0x0000000045cb33: cli; mov eax, 0x3; syscall; 
0x00000000484ed3: cli; mov eax, 0x3f; syscall; 
0x0000000045f903: cli; mov eax, 0x63; syscall; 
0x00000000484f03: cli; mov eax, 0x66; syscall; 
0x00000000484f23: cli; mov eax, 0x68; syscall; 
0x00000000484f13: cli; mov eax, 0x6b; syscall; 
0x00000000484f33: cli; mov eax, 0x6c; syscall; 
0x0000000045c1e3: cli; mov eax, 0x8; syscall; 
0x0000000045d113: cli; mov eax, 0xa; syscall; 
0x0000000045d0e3: cli; mov eax, 0xb; syscall; 
0x00000000485123: cli; mov eax, 0xc; syscall; 
0x00000000426eb3: cli; mov eax, 0xffffffff; ret; 
0x00000000428513: cli; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x000000004a5a93: cli; mov eax, [rdi]; test eax, eax; jne short 0x00000000004a5aa0; ret; 
0x000000004a5cd3: cli; mov eax, [rdi]; test eax, eax; jne short 0x00000000004a5ce0; ret; 
0x000000004991e3: cli; mov eax, [rip+0x4c79e]; ret; 
0x00000000461313: cli; mov eax, [rip+0x846d6]; test eax, eax; je short 0x0000000000461320; ret; 
0x000000004037d3: cli; mov eax, [rip+0xde92a]; ret; 
0x00000000403153: cli; mov eax, [rip+0xdefae]; test eax, eax; js short 0x0000000000403160; ret; 
0x00000000402173: cli; mov eax, [rip+0xe2156]; test eax, eax; je short 0x0000000000402180; ret; 
0x0000000045c0a3: cli; mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000045c0c0; syscall; 
0x0000000043d7d2: cli; mov ecx, [rsi-0x4]; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x00000000428963: cli; mov qword ptr [rip+0xbc341], 0x0; mov qword ptr [rip+0xbc33e], 0x0; ret; 
0x00000000498fa3: cli; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000045f8a3: cli; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000045f8d3: cli; mov r10, rcx; mov eax, 0x9d; syscall; 
0x00000000402583: cli; mov rax, 0x4e2130; mov rax, [rax]; mov eax, [rax]; ret; 
0x00000000411ad3: cli; mov rax, 0xffffffffffffffc0; add rax, fs:[0x0]; ret; 
0x0000000048fa63: cli; mov rax, 0xffffffffffffffc0; pop rbx; mov eax, fs:[rax]; ret; 
0x0000000046fe03: cli; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046fde3: cli; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046fdc3: cli; mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x00000000427933: cli; mov rax, 0xffffffffffffffff; ret; 
0x000000004916e3: cli; mov rax, [rax+0x8]; ret; 
0x000000004916f3: cli; mov rax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x00000000428883: cli; mov rax, [rdi+0x68]; ret; 
0x000000004a3933: cli; mov rax, [rdi+0x90]; ret; 
0x000000004a39a3: cli; mov rax, [rdi+0x98]; ret; 
0x00000000480d33: cli; mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x0000000000480d48; ret; 
0x000000004a39e3: cli; mov rax, [rdi+0xa0]; ret; 
0x000000004a3a43: cli; mov rax, [rdi+0xa8]; ret; 
0x000000004a3a33: cli; mov rax, [rdi+0xb0]; ret; 
0x000000004a39f3: cli; mov rax, [rdi+0xb8]; ret; 
0x00000000429723: cli; mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000429730; ret; 
0x00000000429383: cli; mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000429390; ret; 
0x00000000429783: cli; mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000429790; ret; 
0x000000004293c3: cli; mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x00000000004293d0; ret; 
0x0000000049bfd3: cli; mov rax, [rdi]; cmp rax, rsi; je short 0x000000000049bfe0; ret; 
0x000000004293e3: cli; mov rax, [rdi]; nop; mov [rip+0xb93b9], rax; ret; 
0x00000000429373: cli; mov rax, [rdi]; nop; mov [rip+0xb93d9], rax; ret; 
0x00000000429363: cli; mov rax, [rdi]; nop; mov [rip+0xb93f1], rax; ret; 
0x00000000429773: cli; mov rax, [rdi]; nop; mov [rip+0xbb5b6], eax; ret; 
0x0000000046d203: cli; mov rax, [rip+0x77c45]; ret; 
0x00000000463853: cli; mov rax, [rip+0x821ad]; ret; 
0x0000000045cf63: cli; mov rax, [rip+0x861ed]; test rax, rax; je short 0x000000000045cf71; ret; 
0x00000000428863: cli; mov rax, [rip+0xb98f5]; ret; 
0x00000000428893: cli; mov rax, rdi; ret; 
0x000000004a5871: cli; mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x00000000475810: cli; mov rsi, r11; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x000000004707ed: cli; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000042455f: cli; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000475631: cli; mov rsi, r8; mov rdi, r12; call qword ptr [rax+0x38]; 
0x00000000403173: cli; movzx edi, dil; mov [rip+0xdef8a], edi; ret; 
0x00000000439479: cli; movzx edx, dl; sub eax, edx; ret; 
0x00000000405a9a: cli; notrack jmp rdx; 
0x00000000459314: cli; or [rdx+0xa], dh; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x0000000045a2b6: cli; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000401cb3: cli; ret; 
0x0000000040aac7: cli; sbb [rdi+0xd], dh; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x00000000429313: cli; setae al; ret; 
0x000000004a8163: cli; sub rsp, 0x8; add rsp, 0x8; ret; 
0x00000000483158: cli; test rdx, rdx; je 0x0000000000483200; bsf rax, rdx; ret; 
0x0000000044e3f9: cli; test rdx, rdx; je short 0x000000000044e410; bsf rax, rdx; ret; 
0x0000000044e39c: cli; test rdx, rdx; je short 0x000000000044e420; bsf rax, rdx; ret; 
0x000000004831c8: cli; test rdx, rdx; je short 0x00000000004831f0; bsf rax, rdx; ret; 
0x0000000045a2a3: cli; test rdx, rdx; jne short 0x000000000045a2ad; mov rax, rdi; ret; 
0x000000004830c3: cli; test rsi, rsi; jne short 0x00000000004830cd; xor rax, rax; ret; 
0x00000000483d83: cli; test rsi, rsi; jne short 0x0000000000483d8d; xor rax, rax; ret; 
0x00000000446331: cli; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x000000004278b3: cli; xor eax, eax; ret; 
0x0000000045cdf3: cli; xor eax, eax; syscall; 
0x00000000425193: cli; xor eax, eax; test rdx, rdx; jne short 0x00000000004251a0; ret; 
0x000000004568c6: clts; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000040a882: cmc; adc [rax], al; add [rax], al; ret; 
0x0000000040a8ca: cmc; adc al, 0x0; add [rax], al; ret; 
0x00000000495ac2: cmc; add al, 0x0; syscall; 
0x0000000043e577: cmc; add dword ptr [rdi], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004841d1: cmc; and ch, 0xf; je short 0x00000000004841f0; add rax, 0x2; ret; 
0x00000000428867: cmc; cwde; or eax, [rax]; ret; 
0x000000004a18df: cmc; dec dword ptr [rcx+0x63]; add al, 0x86; add rax, r14; notrack jmp rax; 
0x0000000043c43c: cmc; jb short 0x000000000043c447; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c4ec: cmc; jb short 0x000000000043c4f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ee1c: cmc; jb short 0x000000000043ee27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043eecc: cmc; jb short 0x000000000043eed7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004a30c4: cmc; jmp qword ptr [rsi+0x2e]; 
0x000000004a37d0: cmc; jmp qword ptr [rsi+0x66]; 
0x0000000044264a: cmc; mov [rdi-0x4], ecx; ret; 
0x0000000043d05d: cmc; mov [rdi-0x4], edx; ret; 
0x00000000442643: cmc; mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043d1e2: cmc; mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x000000004586b2: cmc; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x00000000480451: cmc; std; jmp qword ptr [rsi+0x2e]; 
0x000000004586b7: cmc; sub eax, edx; ret; 
0x00000000498f61: cmova edx, eax; mov eax, 0xd9; syscall; 
0x00000000498f60: cmova rdx, rax; mov eax, 0xd9; syscall; 
0x000000004292bd: cmovae eax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x000000004292bc: cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x0000000042930c: cmovbe edx, eax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x0000000042930b: cmovbe rdx, rax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x0000000048e52a: cmove eax, eax; mov rax, r8; ret; 
0x00000000483fc8: cmove eax, ebx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000045a7e5: cmove eax, ecx; ret; 
0x00000000430e47: cmove eax, edx; add rsp, 0x8; ret; 
0x00000000430ff1: cmove eax, edx; ret; 
0x000000004025f3: cmove esp, eax; mov eax, r12d; pop r12; pop r13; ret; 
0x000000004025f2: cmove r12d, eax; mov eax, r12d; pop r12; pop r13; ret; 
0x0000000048e529: cmove r8, rax; mov rax, r8; ret; 
0x00000000483fc7: cmove rax, rbx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000045a7e4: cmove rax, rcx; ret; 
0x00000000430e46: cmove rax, rdx; add rsp, 0x8; ret; 
0x00000000430ff0: cmove rax, rdx; ret; 
0x00000000426813: cmovg eax, ecx; test rdx, rdx; jne short 0x0000000000426808; ret; 
0x000000004806bb: cmovg eax, ecx; test rdx, rdx; jne short 0x00000000004806b0; ret; 
0x00000000420639: cmovg edx, ecx; mov [rdi+0xd8], rdx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x00000000426812: cmovg rax, rcx; test rdx, rdx; jne short 0x0000000000426808; ret; 
0x000000004806ba: cmovg rax, rcx; test rdx, rdx; jne short 0x00000000004806b0; ret; 
0x00000000420638: cmovg rdx, rcx; mov [rdi+0xd8], rdx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x000000004570ca: cmovl ecx, [rcx+0x48f9174c]; lea eax, [rdi+rdx]; vzeroupper; ret; 
0x000000004a3a18: cmovne eax, [rsp+0x10]; add rsp, 0x28; ret; 
0x0000000049893e: cmovne eax, eax; mov rax, r8; ret; 
0x00000000422bd4: cmovne eax, ecx; ret; 
0x000000004297a2: cmovne eax, edx; mov [rip+0xbb58c], rax; ret; 
0x0000000040a87a: cmovne eax, edx; ret; 
0x0000000044df84: cmovne eax, edx; vzeroupper; ret; 
0x00000000482de1: cmovne ecx, edi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x00000000482de5: cmovne esi, edx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x0000000040dbf3: cmovne esp, eax; mov rax, r12; pop r12; ret; 
0x0000000040dbf2: cmovne r12, rax; mov rax, r12; pop r12; ret; 
0x0000000049893d: cmovne r8, rax; mov rax, r8; ret; 
0x000000004a3a17: cmovne rax, [rsp+0x10]; add rsp, 0x28; ret; 
0x00000000422bd2: cmovne rax, rcx; ret; 
0x000000004297a1: cmovne rax, rdx; mov [rip+0xbb58c], rax; ret; 
0x000000004304b4: cmovne rax, rdx; ret; 
0x0000000044df83: cmovne rax, rdx; vzeroupper; ret; 
0x00000000482de0: cmovne rcx, rdi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x00000000482de4: cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x00000000456061: cmovns eax, [rbx-0x72b7e018]; jg short 0x0000000000456089; jne 0x00000000004564f0; ret; 
0x00000000455eff: cmovns eax, [rbx-0x72b7e818]; jg short 0x0000000000455f1f; jne 0x00000000004564f0; ret; 
0x00000000455e7d: cmovns eax, [rbx-0x72b7ec18]; jg short 0x0000000000455e99; jne 0x00000000004564f0; ret; 
0x00000000455d38: cmovns eax, [rbx-0x72b7f618]; jg short 0x0000000000455d4a; jne 0x00000000004564f0; ret; 
0x00000000455cb6: cmovns eax, [rbx-0x72b7fa18]; jg short 0x0000000000455cc4; jne 0x00000000004564f0; ret; 
0x0000000040b617: cmovns eax, edx; add rsp, 0x8; ret; 
0x00000000455efe: cmovns r8, [r11-0x72b7e818]; jg short 0x0000000000455f1f; jne 0x00000000004564f0; ret; 
0x00000000455e7c: cmovns r8, [r11-0x72b7ec18]; jg short 0x0000000000455e99; jne 0x00000000004564f0; ret; 
0x00000000464f90: cmovs eax, edx; ret; 
0x00000000455e01: cmovs ecx, [rbp-0x7af0f081]; in al, 0x6; add [rax], al; ret; 
0x00000000445ed9: cmovs ecx, [rbx+0x498b4836]; clc; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000042ae33: cmovs ecx, [rbx-0x173ef7be]; add al, 0x39; ret; 
0x000000004554b9: cmovs ecx, [rcx-0x6f3cf8a9]; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x0000000045a820: cmovs esp, [rbx+0x4]; xchg esi, eax; add rax, rsi; notrack jmp rax; 
0x00000000426e77: cmp [r11+0x5d], bl; pop r12; ret; 
0x000000004275e0: cmp [r13+0x41], r11b; pop rsp; ret; 
0x0000000048566a: cmp [r8], rax; je short 0x00000000004856a8; leave; xor eax, eax; ret; 
0x00000000426dd0: cmp [r9-0x3b7cb7fd], cl; sbb [rbx+0x5d], bl; ret; 
0x00000000429733: cmp [rax+0x1000b], edx; add [rax], al; mov [rip+0xb900e], rax; ret; 
0x000000004828d7: cmp [rax+0x1], cl; clc; ret; 
0x0000000047bb13: cmp [rax+0x39], cl; ret; 
0x000000004376c7: cmp [rax+rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000437ea7: cmp [rax+rax], ecx; add [rbp-0x77], cl; ret far; 
0x00000000407cf4: cmp [rax-0x73], cl; adc eax, 0xa16fc; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000468f0d: cmp [rax-0x75], cl; and al, 0x20; call rax; 
0x000000004917f9: cmp [rax-0x75], cl; and al, 0x40; add rsp, 0x48; jmp qword ptr [rax]; 
0x00000000491777: cmp [rax-0x75], cl; and al, 0x40; add rsp, 0x58; jmp qword ptr [rax]; 
0x000000004275ad: cmp [rax-0x77], cl; ret; 
0x00000000439316: cmp [rax-0x7f], ecx; mov dword ptr [rax-0x15000000], 0xbc0ff3d0; ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x000000004348f3: cmp [rax], ah; movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000439226: cmp [rax], ah; ret; 
0x00000000426df7: cmp [rax], al; je short 0x0000000000426e00; ret; 
0x000000004a28e1: cmp [rax], al; je short 0x00000000004a2934; add rsp, 0x18; ret; 
0x0000000044db14: cmp [rax], dh; cmovne rax, rdx; ret; 
0x00000000439216: cmp [rax], dl; ret; 
0x0000000048566b: cmp [rax], eax; je short 0x00000000004856a8; leave; xor eax, eax; ret; 
0x00000000439215: cmp [rax], r10b; ret; 
0x000000004348f2: cmp [rax], r12b; movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000439225: cmp [rax], r12b; ret; 
0x0000000044db13: cmp [rax], sil; cmovne rax, rdx; ret; 
0x000000004275e1: cmp [rbp+0x41], bl; pop rsp; ret; 
0x0000000040a05f: cmp [rbp+0x5d89015e], cl; or [rcx], bh; ret far; 
0x000000004078b9: cmp [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000426e78: cmp [rbx+0x5d], bl; pop r12; ret; 
0x000000004228b6: cmp [rbx+0x5d], bl; ret; 
0x0000000042e35e: cmp [rbx+0xb69ba2d], eax; add [rcx], al; pop rbx; ret; 
0x0000000042ed84: cmp [rcx+rcx*4-0x9], cl; call rax; 
0x00000000404da9: cmp [rcx+rdi+0x6d], al; or [rdi], cl; xchg [rdi+rdi*8-0x1], esp; call far fword ptr [rbx+0x48]; 
0x00000000426dd1: cmp [rcx-0x3b7cb7fd], cl; sbb [rbx+0x5d], bl; ret; 
0x00000000408853: cmp [rcx], al; sbb eax, eax; and eax, 0xffffffea; ret; 
0x0000000042ad2e: cmp [rcx], dh; ror byte ptr [rax-0x75], 0x46; or [rax-0x77], cl; ret; 
0x000000004292b9: cmp [rdi+0x10], eax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x000000004292b8: cmp [rdi+0x10], rax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x000000004077f3: cmp [rdi+0x14], eax; sete al; ret; 
0x00000000443777: cmp [rdi], al; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000042c83e: cmp [rdi], cl; sbb dword ptr [rcx-0x4], 0xffffffff; jmp qword ptr [rsi+0x49]; 
0x0000000043a60d: cmp [rdi], dl; ret; 
0x0000000046fd70: cmp [rdi], esi; je short 0x000000000046fd78; ret; 
0x0000000046fd6f: cmp [rdi], rsi; je short 0x000000000046fd78; ret; 
0x00000000422bd1: cmp [rdx+0x48], eax; cmovne eax, ecx; ret; 
0x00000000422bcf: cmp [rdx+0x48], r8; cmovne eax, ecx; ret; 
0x000000004089ff: cmp [rdx], esi; jne short 0x00000000004089f0; mov eax, 0xffffffef; ret; 
0x000000004109dd: cmp [rip+0x32048b00], ecx; mov [rip+0xd38ff], eax; lea rax, [rip+0xd38f0]; ret; 
0x00000000465d46: cmp [rip+0x3d8d4800], al; pop rsi; cmp [rip-0x41041800], al; cli; jmp qword ptr [rsi+0x66]; 
0x000000004318a6: cmp [rip+0x4810000b], esi; lea edx, [rip-0x362]; lea rax, [rip+0x272f7]; cmove rax, rdx; ret; 
0x00000000465c3e: cmp [rip-0x3ff51800], eax; cli; jmp qword ptr [rsi+0x2e]; 
0x00000000465d4d: cmp [rip-0x41041800], al; cli; jmp qword ptr [rsi+0x66]; 
0x000000004a435e: cmp [rsi+0x8], ecx; ja short 0x00000000004a4365; sbb eax, eax; ret; 
0x000000004a435d: cmp [rsi+0x8], rcx; ja short 0x00000000004a4365; sbb eax, eax; ret; 
0x000000004a3bd6: cmp ah, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000004348f8: cmp ah, [rax]; sub eax, edx; vzeroupper; ret; 
0x0000000049881f: cmp ah, [rbx-0x25]; cmp ch, [rcx]; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x0000000049c1f7: cmp al, 0x1; sbb esi, esi; and esi, 0x2; syscall; 
0x000000004a17d5: cmp al, 0x20; jne short 0x00000000004a1800; mov rax, [rsi+0xa8]; add rsp, 0x8; ret; 
0x000000004269d7: cmp al, 0x24; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000045dfa3: cmp al, 0x24; call rbx; 
0x0000000041e316: cmp al, 0x24; mov rdx, r14; mov rax, [rsp]; call rax; 
0x000000004836f2: cmp al, 0x24; movzx esi, bl; call rbp; 
0x000000004837b6: cmp al, 0x24; push 0x0; lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x00000000425175: cmp al, 0x24; sbb eax, 0xe6ebe074; nop [rax]; xor eax, eax; ret; 
0x00000000499d03: cmp al, 0x28; add [rdi], cl; test [rdi+rdi*8-0x1], ebp; call far fword ptr [rbx+0x48]; 
0x000000004a18d9: cmp al, 0x2f; ja 0x0000000000401723; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x000000004a4575: cmp al, 0x30; jne short 0x00000000004a4588; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x000000004a45d5: cmp al, 0x30; jne short 0x00000000004a45e8; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x000000004704ae: cmp al, 0x30; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x0000000046555a: cmp al, 0x40; add eax, 0x3d8d4800; add eax, 0xc6e6e800; cli; jmp qword ptr [rsi+0xf]; 
0x000000004a17e8: cmp al, 0x40; jne short 0x00000000004a1820; mov rax, [rsi+0xb8]; add rsp, 0x8; ret; 
0x000000004a4588: cmp al, 0x50; jne short 0x00000000004a45b3; xor eax, eax; add rsp, 0x8; ret; 
0x000000004a45e8: cmp al, 0x50; jne short 0x00000000004a4613; xor eax, eax; add rsp, 0x8; ret; 
0x000000004a5f98: cmp al, 0x50; jne short 0x00000000004a5fbb; xor eax, eax; add rsp, 0x8; ret; 
0x00000000455fb0: cmp al, 0x5; add [rax], al; ret; 
0x0000000047c360: cmp al, 0x6; add [rcx-0x77], cl; ret far; 
0x000000004a3976: cmp al, 0x8; jne 0x000000000040175a; mov [rcx], rdx; add rsp, 0x8; ret; 
0x00000000499579: cmp al, 0xa; jne 0x00000000004994f9; nop [rax]; call r13; 
0x0000000040d833: cmp al, 0xbd; or [rax], eax; ret; 
0x00000000414cd0: cmp al, [rax-0x80]; call far fword ptr [rax+0xf]; 
0x00000000431050: cmp al, [rax]; add [rax-0x73], cl; adc eax, 0x5356; cmovne rax, rdx; ret; 
0x000000004435f6: cmp al, [rdi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004435f7: cmp al, [rdi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000458a1e: cmp al, [rsi-0x1]; jne 0x0000000000458b95; xor eax, eax; ret; 
0x00000000458b76: cmp al, [rsi-0x1]; jne short 0x0000000000458b95; xor eax, eax; ret; 
0x00000000427a60: cmp al, bl; nop [rax+rax]; sub rax, rcx; sub eax, 0x1; ret; 
0x00000000464608: cmp al, ch; push rdx; ret far; 
0x00000000420faf: cmp al, ch; ret far; 
0x00000000403041: cmp al, ch; test eax, 0x85000078; sar byte ptr [rax+0x19], 0x89; ret; 
0x000000004391f6: cmp al, dh; ret; 
0x000000004391f5: cmp al, r14b; ret; 
0x000000004a450b: cmp bh, 0x3; jne short 0x00000000004a4530; add rsp, 0x8; ret; 
0x0000000046da32: cmp bh, [rdi]; add al, [rax]; mov qword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x00000000425682: cmp bh, [rdx-0x76b70003]; ret; 
0x0000000046fd12: cmp bl, [rdi]; cli; jmp qword ptr [rsi+0x2e]; 
0x0000000042792c: cmp bl, ch; test al, 0x90; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x000000004856a8: cmp byte ptr [r8+0x8], 0x2f; jne short 0x000000000048566f; leave; mov eax, 0x1; ret; 
0x000000004856a9: cmp byte ptr [rax+0x8], 0x2f; jne short 0x000000000048566f; leave; mov eax, 0x1; ret; 
0x000000004a3912: cmp byte ptr [rdx+rsi], 0x8; jne 0x0000000000401755; mov rax, [rax]; add rsp, 0x8; ret; 
0x0000000048f134: cmp byte ptr [rip+0x5674d], 0x0; jne short 0x000000000048f150; mov r8, [rip+0x5632c]; mov rax, r8; ret; 
0x0000000043b62a: cmp ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000498822: cmp ch, [rcx]; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x0000000045921d: cmp cl, [rax+0x63]; leave; add rax, rcx; sub rax, rdi; ret; 
0x0000000048de13: cmp cl, [rcx-0x77]; ret far; 
0x0000000049e8b5: cmp cx, 0x7fff; jne short 0x000000000049e89c; mov eax, 0x1; ret; 
0x00000000430000: cmp dh, 0xff; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000004a40d8: cmp dh, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000044df81: cmp dh, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000045a6be: cmp dh, [rdx+0x2]; mov [rdi], cl; vzeroupper; ret; 
0x000000004a450a: cmp dil, 0x3; jne short 0x00000000004a4530; add rsp, 0x8; ret; 
0x0000000045a384: cmp dl, 0x1; ja short 0x000000000045a39e; jb short 0x000000000045a38d; mov [rdi], cl; ret; 
0x00000000445f0f: cmp dl, 0x1; jb short 0x0000000000445f18; mov cl, [rsi]; mov [rdi], cl; ret; 
0x0000000045933e: cmp dl, 0x1; jb short 0x0000000000459345; mov [rdi], cl; ret; 
0x000000004592fa: cmp dl, 0x20; jb short 0x0000000000459309; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000459331: cmp dl, 0x2; jb short 0x000000000045933e; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x000000004592e7: cmp dl, 0x40; jb short 0x00000000004592fa; vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000459326: cmp dl, 0x4; jb short 0x0000000000459331; mov [rdi], ecx; mov [rsi-0x4], ecx; ret; 
0x00000000459313: cmp dl, 0x8; jb short 0x0000000000459322; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x000000004296a2: cmp dl, [rcx+0x141000b]; adc eax, [rbp+0x1]; sbb [r8+0x39], cl; ret; 
0x00000000463ee2: cmp dl, [rsi+0x5]; add [rcx], dh; div byte ptr [rcx]; jmp qword ptr [rsi+0xf]; 
0x0000000040c1a3: cmp dl, ah; or [rax], eax; ret; 
0x00000000430515: cmp dl, al; jne short 0x0000000000430500; sub rax, 0x10; ret; 
0x00000000430514: cmp dl, r8b; jne short 0x0000000000430500; sub rax, 0x10; ret; 
0x00000000480d3c: cmp dword ptr [rax+0x30], 0x0; je short 0x0000000000480d48; ret; 
0x000000004a28df: cmp dword ptr [rcx+0x38], 0x0; je short 0x00000000004a2934; add rsp, 0x18; ret; 
0x00000000486af2: cmp dword ptr [rcx+0x4c000003], 0xffffff89; ret far; 
0x00000000426df5: cmp dword ptr [rdi+0x38], 0x0; je short 0x0000000000426e00; ret; 
0x00000000408851: cmp dword ptr [rdi+0x38], 0x1; sbb eax, eax; and eax, 0xffffffea; ret; 
0x00000000423315: cmp dword ptr [rip+0xbec84], 0x0; je short 0x000000000042331f; ret; 
0x0000000047c3b9: cmp dword ptr [rsi+rax], 0x0; jmp qword ptr [rcx+rax*8]; 
0x000000004a5744: cmp eax, 0x148b4908; and al, 0x4c; mov edi, esi; call rbp; 
0x00000000461403: cmp eax, 0x16; ja short 0x0000000000461420; movsxd rax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x0000000046144a: cmp eax, 0x17; ja short 0x0000000000461420; movsxd rax, [rbp+rax*4]; add rax, rbp; notrack jmp rax; 
0x0000000044f321: cmp eax, 0x1; ja 0x000000000044eff0; je 0x000000000044efe0; vzeroupper; ret; 
0x0000000044f1fd: cmp eax, 0x1; ja 0x000000000044f0d0; je 0x000000000044f0c0; vzeroupper; ret; 
0x0000000045bebe: cmp eax, 0x1; ja short 0x000000000045bef0; mov eax, 0x4; syscall; 
0x0000000045bf1d: cmp eax, 0x1; ja short 0x000000000045bf50; mov eax, 0x5; syscall; 
0x00000000484f4e: cmp eax, 0x1; ja short 0x0000000000484f80; mov eax, 0x6; syscall; 
0x000000004030b4: cmp eax, 0x1; je short 0x00000000004030c0; xor eax, eax; pop r12; ret; 
0x0000000040a51a: cmp eax, 0x1; sbb eax, eax; and eax, 0xffffffea; ret; 
0x0000000046028d: cmp eax, 0x1e; ja short 0x00000000004602b0; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000429728: cmp eax, 0x2000000; jbe short 0x0000000000429730; ret; 
0x0000000047f19d: cmp eax, 0x29; ja short 0x000000000047f1b0; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x0000000045ad8f: cmp eax, 0x2; je short 0x000000000045ada8; xor eax, eax; ret; 
0x0000000048f801: cmp eax, 0x3a91d; mov eax, 0x59; mov rbp, rsp; mov rsi, rbp; syscall; 
0x000000004a7d49: cmp eax, 0x3d232; syscall; 
0x0000000048c2b8: cmp eax, 0x3d8bb; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x00000000429388: cmp eax, 0x408; jbe short 0x0000000000429390; ret; 
0x0000000045cd7c: cmp eax, 0x410000; je short 0x000000000045cdb0; mov eax, 0x101; syscall; 
0x0000000047f239: cmp eax, 0x4974a; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000048191e: cmp eax, 0x4; je short 0x0000000000481924; ret; 
0x00000000497dc9: cmp eax, 0x4d246; syscall; 
0x00000000497b45: cmp eax, 0x4d4c6; syscall; 
0x00000000479672: cmp eax, 0x4ef89; lea rsi, [rip+0x663c2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000495ac1: cmp eax, 0x4f542; syscall; 
0x00000000495981: cmp eax, 0x4f682; syscall; 
0x000000004916a6: cmp eax, 0x53955; lea rax, [rdi-0x1]; cmp rax, 0xfffffffffffffffd; jbe short 0x00000000004916c0; ret; 
0x0000000048f135: cmp eax, 0x5674d; add [rbp+0x13], dh; mov r8, [rip+0x5632c]; mov rax, r8; ret; 
0x000000004600e2: cmp eax, 0x58361; mov eax, 0x15; syscall; 
0x0000000047c3a9: cmp eax, 0x5a; ja 0x000000000047b868; movzx eax, byte ptr [rdx+rax]; lea rcx, [rip+0x63c83]; jmp qword ptr [rcx+rax*8]; 
0x0000000047c7ce: cmp eax, 0x5a; ja 0x000000000047b868; movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x6375e]; jmp qword ptr [rax+rcx*8]; 
0x0000000047c5ed: cmp eax, 0x5a; ja 0x000000000047b868; movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x6383f]; jmp qword ptr [rax+rcx*8]; 
0x00000000443273: cmp eax, 0x63490007; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000407d33: cmp eax, 0x6; ja short 0x0000000000407d14; mov eax, 0x1; ret; 
0x00000000471909: cmp eax, 0x73672; syscall; 
0x00000000471844: cmp eax, 0x73737; syscall; 
0x000000004716a2: cmp eax, 0x738d9; syscall; 
0x000000004715c8: cmp eax, 0x739b3; syscall; 
0x000000004727e6: cmp eax, 0x7; ja 0x0000000000472e91; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000478c36: cmp eax, 0x7; ja 0x00000000004794f1; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000463df9: cmp eax, 0x81c12; syscall; 
0x00000000463c8d: cmp eax, 0x81d7e; syscall; 
0x00000000463b6d: cmp eax, 0x81e9e; syscall; 
0x0000000045b425: cmp eax, 0x8a5e6; syscall; 
0x000000004486ff: cmp eax, 0x8b000726; or al, 0x8a; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000049254a: cmp eax, 0x9; ja short 0x0000000000492520; mov rax, r8; ret; 
0x00000000429788: cmp eax, 0xa0; jbe short 0x0000000000429790; ret; 
0x00000000430aa5: cmp eax, 0xb1d36; syscall; 
0x0000000042dea5: cmp eax, 0xb4936; syscall; 
0x0000000042de45: cmp eax, 0xb4996; syscall; 
0x0000000042da85: cmp eax, 0xb4d56; syscall; 
0x0000000042d825: cmp eax, 0xb4fb6; syscall; 
0x0000000042d24d: cmp eax, 0xb558e; syscall; 
0x0000000042d215: cmp eax, 0xb55c6; syscall; 
0x0000000042ee05: cmp eax, 0xb5f26; syscall; 
0x0000000042e3b9: cmp eax, 0xb6962; syscall; 
0x0000000042a516: cmp eax, 0xba805; syscall; 
0x0000000042a4e5: cmp eax, 0xba846; syscall; 
0x0000000042a265: cmp eax, 0xbaac6; syscall; 
0x00000000429d41: cmp eax, 0xbafea; syscall; 
0x00000000428957: cmp eax, 0xbc354; syscall; 
0x00000000428397: cmp eax, 0xbc914; syscall; 
0x0000000042802b: cmp eax, 0xbcc80; syscall; 
0x00000000427ce9: cmp eax, 0xbcfc2; syscall; 
0x00000000426783: cmp eax, 0xbe528; syscall; 
0x000000004264e3: cmp eax, 0xbe7c8; syscall; 
0x0000000042618f: cmp eax, 0xbeb1c; syscall; 
0x00000000420195: cmp eax, 0xc5876; syscall; 
0x0000000041f144: cmp eax, 0xc6767; syscall; 
0x0000000041f004: cmp eax, 0xc68a7; syscall; 
0x0000000041edcd: cmp eax, 0xc6ade; syscall; 
0x0000000041ed92: cmp eax, 0xc6b19; syscall; 
0x0000000041ecae: cmp eax, 0xc6bfd; syscall; 
0x000000004935ff: cmp eax, 0xc7000015; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x000000004156e2: cmp eax, 0xcf151; syscall; 
0x00000000413d3f: cmp eax, 0xd0abc; syscall; 
0x00000000412bc0: cmp eax, 0xd1b93; syscall; 
0x00000000412b92: cmp eax, 0xd1bc1; syscall; 
0x00000000412a46: cmp eax, 0xd1d0d; syscall; 
0x00000000403179: cmp eax, 0xdef8a; ret; 
0x000000004012de: cmp eax, 0xe356d; syscall; 
0x000000004293c8: cmp eax, 0xffff; jbe short 0x00000000004293d0; ret; 
0x0000000045becb: cmp eax, 0xfffff000; ja short 0x000000000045bed8; ret; 
0x0000000045bf2a: cmp eax, 0xfffff000; ja short 0x000000000045bf38; ret; 
0x0000000045c0b3: cmp eax, 0xfffff000; ja short 0x000000000045c110; ret; 
0x0000000045c158: cmp eax, 0xfffff000; ja short 0x000000000045c1b0; ret; 
0x0000000045c1ec: cmp eax, 0xfffff000; ja short 0x000000000045c1f8; ret; 
0x0000000045c328: cmp eax, 0xfffff000; ja short 0x000000000045c370; ret; 
0x0000000045cb3c: cmp eax, 0xfffff000; ja short 0x000000000045cb48; ret; 
0x0000000045cdf9: cmp eax, 0xfffff000; ja short 0x000000000045ce08; ret; 
0x0000000045ce2c: cmp eax, 0xfffff000; ja short 0x000000000045ce38; ret; 
0x0000000045ce65: cmp eax, 0xfffff000; ja short 0x000000000045ce70; ret; 
0x0000000045d057: cmp eax, 0xfffff000; ja short 0x000000000045d0c0; pop rbx; pop rbp; ret; 
0x00000000484f5b: cmp eax, 0xfffff000; ja short 0x0000000000484f68; ret; 
0x00000000484fc0: cmp eax, 0xfffff000; ja short 0x0000000000484fd0; ret; 
0x00000000498f6c: cmp eax, 0xfffff000; ja short 0x0000000000498f78; ret; 
0x00000000498faf: cmp eax, 0xfffff000; ja short 0x0000000000498fc0; ret; 
0x0000000045be2c: cmp eax, 0xfffff001; jae short 0x000000000045be34; ret; 
0x0000000045c3ac: cmp eax, 0xfffff001; jae short 0x000000000045c3b4; ret; 
0x0000000045cf3c: cmp eax, 0xfffff001; jae short 0x000000000045cf44; ret; 
0x0000000045d00e: cmp eax, 0xfffff001; jae short 0x000000000045d016; ret; 
0x0000000045d0ec: cmp eax, 0xfffff001; jae short 0x000000000045d0f4; ret; 
0x0000000045d11c: cmp eax, 0xfffff001; jae short 0x000000000045d124; ret; 
0x0000000045d14c: cmp eax, 0xfffff001; jae short 0x000000000045d154; ret; 
0x0000000045f8af: cmp eax, 0xfffff001; jae short 0x000000000045f8b7; ret; 
0x0000000045f8df: cmp eax, 0xfffff001; jae short 0x000000000045f8e7; ret; 
0x0000000045f90c: cmp eax, 0xfffff001; jae short 0x000000000045f914; ret; 
0x00000000484edc: cmp eax, 0xfffff001; jae short 0x0000000000484ee4; ret; 
0x0000000049ed2c: cmp eax, 0xfffff001; jae short 0x000000000049ed34; ret; 
0x000000004916b0: cmp eax, 0xfffffffd; jbe short 0x00000000004916c0; ret; 
0x0000000046da0a: cmp eax, 0xfffffffd; je short 0x000000000046da28; pop rbx; ret; 
0x00000000430e43: cmp eax, 0xffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x0000000048f693: cmp eax, 0xffffffff; cmove rax, rdx; ret; 
0x000000004115e9: cmp eax, 0xffffffff; je 0x00000000004116d8; add rsp, 0x98; ret; 
0x000000004983ac: cmp eax, [rbx]; add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x0000000048f6d4: cmp eax, [rcx+rsi+0x10]; jae short 0x000000000048f685; xor eax, eax; ret; 
0x0000000044347e: cmp eax, [rdi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000461351: cmp eax, [rdx]; add [rcx], bh; ret; 
0x00000000499016: cmp eax, [rip+0x4c114]; jae short 0x000000000049902a; mov rdx, [rip+0x4c113]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000048f0d9: cmp eax, eax; ja short 0x000000000048f0e8; add rsp, 0x8; ret; 
0x00000000423765: cmp eax, ebp; jae short 0x00000000004237c0; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [r15+0x18]; 
0x00000000421611: cmp eax, ebx; jae 0x0000000000421cf0; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x00000000424bcc: cmp eax, ebx; jae 0x0000000000424c80; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000426810: cmp eax, ecx; cmovg rax, rcx; test rdx, rdx; jne short 0x0000000000426808; ret; 
0x000000004806b8: cmp eax, ecx; cmovg rax, rcx; test rdx, rdx; jne short 0x00000000004806b0; ret; 
0x0000000041ffd1: cmp eax, ecx; jbe 0x0000000000420130; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x00000000422513: cmp eax, ecx; jbe 0x00000000004225f0; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000423fcc: cmp eax, ecx; jbe 0x0000000000424080; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000042536d: cmp eax, ecx; jbe 0x0000000000425460; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x00000000426b19: cmp eax, ecx; jbe 0x0000000000426ba0; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000426cf1: cmp eax, ecx; jbe 0x0000000000426d80; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000004271fd: cmp eax, ecx; jbe 0x00000000004273a8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000427436: cmp eax, ecx; jbe 0x0000000000427508; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000427b50: cmp eax, ecx; jbe 0x0000000000427cc0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x00000000478438: cmp eax, ecx; jbe 0x0000000000478550; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000047e815: cmp eax, ecx; jbe 0x000000000047e918; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000047fa2f: cmp eax, ecx; jbe 0x000000000047fb30; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x00000000480b3f: cmp eax, ecx; jbe 0x0000000000480cd0; mov esi, r15d; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x00000000425bdd: cmp eax, ecx; jbe short 0x0000000000425c18; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x00000000425ec9: cmp eax, ecx; jbe short 0x0000000000425f28; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000426e36: cmp eax, ecx; jbe short 0x0000000000426ea0; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000426eec: cmp eax, ecx; jbe short 0x0000000000426f18; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000042797c: cmp eax, ecx; jbe short 0x00000000004279b0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000427a0f: cmp eax, ecx; jbe short 0x0000000000427a30; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000047245b: cmp eax, ecx; jbe short 0x00000000004724c0; movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000047888a: cmp eax, ecx; jbe short 0x0000000000478908; movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x000000004815a1: cmp eax, ecx; jbe short 0x00000000004815d0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000458972: cmp eax, ecx; jne 0x0000000000458b80; xor eax, eax; ret; 
0x00000000458ada: cmp eax, ecx; jne 0x0000000000458b95; xor eax, eax; ret; 
0x0000000040cd73: cmp eax, ecx; or [rax], eax; ret; 
0x00000000458b93: cmp eax, ecx; sbb eax, eax; sbb eax, 0xffffffff; ret; 
0x00000000421cac: cmp eax, edi; jbe 0x0000000000421dd8; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x00000000427279: cmp eax, edi; jbe 0x00000000004273f0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x00000000481303: cmp eax, edi; jbe 0x00000000004814c0; mov rdi, r13; call qword ptr [r14+0x20]; 
0x000000004233fc: cmp eax, edi; jbe short 0x0000000000423420; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000428451: cmp eax, edi; jbe short 0x00000000004284b0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x000000004289af: cmp eax, edx; jae short 0x00000000004289d8; movzx eax, byte ptr [rax]; ret; 
0x00000000481d10: cmp eax, edx; lea rdx, [rip+0x11d7]; lea rax, [rip+0xed0]; cmove rax, rdx; ret; 
0x00000000481cd0: cmp eax, edx; lea rdx, [rip+0x1607]; lea rax, [rip+0x13e0]; cmove rax, rdx; ret; 
0x00000000431d20: cmp eax, edx; lea rdx, [rip+0x1c407]; lea rax, [rip+0x1bfc0]; cmove rax, rdx; ret; 
0x00000000430fe0: cmp eax, edx; lea rdx, [rip+0x1d4d7]; lea rax, [rip+0x1d330]; cmove rax, rdx; ret; 
0x000000004988d0: cmp eax, edx; lea rdx, [rip+0x3a7]; lea rax, [rip+0x70]; cmove rax, rdx; ret; 
0x00000000431ce0: cmp eax, edx; lea rdx, [rip+0x7547]; lea rax, [rip+0x7330]; cmove rax, rdx; ret; 
0x00000000481dd0: cmp eax, edx; lea rdx, [rip+0xb47]; lea rax, [rip+0x810]; cmove rax, rdx; ret; 
0x00000000483620: cmp eax, edx; lea rdx, [rip+0xc57]; lea rax, [rip+0x9b0]; cmove rax, rdx; ret; 
0x0000000048167a: cmp eax, esi; ja short 0x0000000000481670; lea eax, [rdx+rdi]; ret; 
0x00000000428287: cmp eax, esi; jbe 0x0000000000428340; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x0000000042055c: cmp eax, esi; jbe short 0x00000000004205b8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000420bed: cmp eax, esi; jbe short 0x0000000000420c64; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x000000004268b6: cmp eax, esi; jbe short 0x0000000000426918; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x00000000480a2c: cmp eax, esi; jbe short 0x0000000000480a68; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000048163f: cmp eax, esi; jbe short 0x0000000000481650; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000049bfd8: cmp eax, esi; je short 0x000000000049bfe0; ret; 
0x0000000046f130: cmp ebp, 0xc; ja 0x000000000046f213; movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x000000004248c2: cmp ebp, edx; jbe 0x0000000000424a70; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x000000004818ba: cmp ebx, 0xa; je short 0x00000000004818c0; ret; 
0x00000000423920: cmp ebx, eax; jbe 0x0000000000423a58; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x00000000424b66: cmp ebx, eax; jbe 0x0000000000424c90; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000424d82: cmp ebx, eax; jbe 0x0000000000424f18; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000424ed1: cmp ebx, eax; jbe 0x0000000000424f80; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x000000004296ae: cmp ebx, eax; je short 0x00000000004296b5; pop rbx; pop rbp; ret; 
0x00000000461336: cmp ebx, eax; je short 0x0000000000461348; mov [rip+0x80760], eax; pop rbx; ret; 
0x000000004241d3: cmp ebx, edx; jbe 0x0000000000424400; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000461335: cmp ebx, r8d; je short 0x0000000000461348; mov [rip+0x80760], eax; pop rbx; ret; 
0x00000000407d22: cmp ecx, 0x1; ja short 0x0000000000407ce8; cmp esi, edx; setb al; ret; 
0x00000000484fb3: cmp ecx, 0x1; ja short 0x0000000000484fe8; mov eax, 0x106; syscall; 
0x000000004096cd: cmp ecx, 0x7; ja 0x000000000040938f; movsxd rax, [rbx+rcx*4]; add rax, rbx; notrack jmp rax; 
0x0000000049e8b6: cmp ecx, 0xe0757fff; mov eax, 0x1; ret; 
0x0000000045fb75: cmp ecx, [rax+0x18]; ja short 0x000000000045fb8c; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000045fb97: cmp ecx, [rax+0x18]; jg short 0x000000000045fb8c; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000049c926: cmp ecx, [rax+0x28]; jae short 0x000000000049c910; mov eax, 0x1; ret; 
0x00000000462b38: cmp ecx, [rax-0x7d]; ret; 
0x000000004a29ef: cmp ecx, [rcx-0x7d]; ret; 
0x000000004111fd: cmp ecx, [rip+0x247c8b00]; or al, 0x48; mov esi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x000000004111a0: cmp ecx, [rip+0x748b4800]; and al, 0x10; mov edi, [rsp+0xc]; call rbp; 
0x00000000401cd9: cmp ecx, [rsi]; jmp rax; 
0x00000000490dab: cmp ecx, eax; je 0x0000000000490cfa; mov eax, ecx; sub eax, r8d; ret; 
0x0000000043a72f: cmp ecx, eax; jne 0x000000000043b163; xor eax, eax; ret; 
0x0000000043a757: cmp ecx, eax; jne 0x000000000043b16f; xor eax, eax; ret; 
0x0000000043b13b: cmp ecx, eax; jne short 0x000000000043b163; xor eax, eax; ret; 
0x0000000049c968: cmp ecx, eax; sbb eax, eax; and eax, 0x2; sub eax, 0x1; ret; 
0x0000000048566e: cmp ecx, ecx; xor eax, eax; ret; 
0x000000004077d4: cmp ecx, edx; je short 0x00000000004077e0; ret; 
0x0000000048e3be: cmp ecx, edx; jne short 0x000000000048e398; mov eax, [rcx]; ret; 
0x00000000427a5a: cmp ecx, esi; ja short 0x0000000000427a50; lea eax, [rdx+rdi]; ret; 
0x00000000490daa: cmp ecx, r8d; je 0x0000000000490cfa; mov eax, ecx; sub eax, r8d; ret; 
0x0000000040a3e3: cmp edi, 0x16; jne 0x000000000040a4a0; mov rax, 0x4def00; ret; 
0x0000000040a3c0: cmp edi, 0x40000028; jne 0x000000000040a4a0; mov rax, 0x4decc0; ret; 
0x00000000403374: cmp edi, 0x7fc00000; je short 0x0000000000403380; ret; 
0x0000000040336c: cmp edi, 0x80000000; je short 0x0000000000403390; cmp edi, 0x7fc00000; je short 0x0000000000403380; ret; 
0x0000000040a362: cmp edi, 0x80000008; jne 0x000000000040a4a0; mov rax, 0x4dedc0; ret; 
0x0000000040a450: cmp edi, 0x80000016; jne short 0x000000000040a4a0; mov rax, 0x4def40; ret; 
0x0000000040a426: cmp edi, 0xc0000008; jne short 0x000000000040a4a0; mov rax, 0x4ded80; ret; 
0x0000000040a400: cmp edi, 0xc00000b7; jne 0x000000000040a4a0; mov rax, 0x4e11e0; ret; 
0x0000000040a3a0: cmp edi, 0xe0000008; jne 0x000000000040a4a0; mov rax, 0x4dee00; ret; 
0x0000000040a43b: cmp edi, 0xf; jne short 0x000000000040a4a0; mov rax, 0x4e1220; ret; 
0x00000000402078: cmp edi, 0xffffff83; je short 0x0000000000402082; cmp edi, 0xffffffa1; jne short 0x0000000000402083; ret; 
0x0000000040207d: cmp edi, 0xffffffa1; jne short 0x0000000000402083; ret; 
0x0000000040d82b: cmp edi, [rbp+0x48c30009]; lea eax, [rip+0x9bd3c]; ret; 
0x0000000048513b: cmp edi, eax; ja short 0x0000000000485168; xor eax, eax; ret; 
0x0000000048b72d: cmp edi, eax; jne short 0x000000000048b738; pop rbx; ret; 
0x00000000495891: cmp edi, ecx; ja short 0x0000000000495878; mov eax, r8d; ret; 
0x000000004595dd: cmp edi, ecx; jb 0x0000000000459748; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000459948: cmp edi, ecx; jb 0x0000000000459b15; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000459d93: cmp edi, ecx; jb 0x0000000000459fd0; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000045956b: cmp edi, edx; jb short 0x0000000000459572; rep movsb [rdi], [rsi]; ret; 
0x0000000040aaa9: cmp edx, 0x14; ja short 0x000000000040aac0; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x0000000040b729: cmp edx, 0x14; ja short 0x000000000040b740; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x0000000040c249: cmp edx, 0x14; ja short 0x000000000040c260; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x0000000040cd89: cmp edx, 0x14; ja short 0x000000000040cda0; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x0000000040aac6: cmp edx, 0x18; ja short 0x000000000040aad8; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000040b746: cmp edx, 0x18; ja short 0x000000000040b758; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000040c266: cmp edx, 0x18; ja short 0x000000000040c278; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000040cda6: cmp edx, 0x18; ja short 0x000000000040cdb8; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000045a273: cmp edx, 0x20; ja 0x000000000045a2fc; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000045a2e3: cmp edx, 0x20; ja short 0x000000000045a2f3; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000040a8b1: cmp edx, 0x2; lea eax, [rsi*8+0x10]; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x0000000040a86b: cmp edx, 0x2; lea eax, [rsi*8+0x14]; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x0000000049893a: cmp edx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x00000000487123: cmp edx, 0x7; ja 0x000000000048724d; movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x00000000498f55: cmp edx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x0000000045a7de: cmp edx, 0xff; cmove rax, rcx; ret; 
0x00000000480e84: cmp edx, [rax+0x18]; jbe short 0x0000000000480ea8; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000045fb09: cmp edx, [rdi+0x18]; ja short 0x000000000045fb24; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045fb2f: cmp edx, [rdi+0x18]; jg short 0x000000000045fb24; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x00000000482b15: cmp edx, eax; jbe short 0x0000000000482b80; add rax, rdi; vzeroupper; ret; 
0x00000000498e75: cmp edx, eax; jbe short 0x0000000000498ee0; add rax, rdi; vzeroupper; ret; 
0x00000000423cca: cmp edx, ebx; jae 0x0000000000424000; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000423b69: cmp edx, ebx; jae 0x0000000000424038; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x000000004924c6: cmp edx, ecx; jae short 0x00000000004924ac; mov rax, r8; ret; 
0x000000004987ec: cmp edx, ecx; jle 0x0000000000498890; ret; 
0x0000000045916a: cmp edx, ecx; jle short 0x0000000000459184; movsxd rax, ecx; ret; 
0x00000000459169: cmp edx, ecx; jle short 0x0000000000459184; movsxd rax, ecx; ret; 
0x0000000045a36f: cmp edx, ecx; jne short 0x000000000045a357; rep ret; 
0x0000000045a4d6: cmp edx, ecx; jne short 0x000000000045a4bb; vzeroupper; ret; 
0x0000000045a699: cmp edx, ecx; jne short 0x000000000045a676; vzeroupper; ret; 
0x00000000429312: cmp edx, edi; setae al; ret; 
0x00000000483d77: cmp edx, esi; je short 0x0000000000483d7f; test edx, edx; jne short 0x0000000000483d70; ret; 
0x0000000046d9e8: cmp esi, 0x3; je short 0x000000000046d9f0; ret; 
0x00000000469d92: cmp esi, 0x860f07ff; pushfq; add [rax], eax; add [rcx+0x3948fc51], cl; ret; 
0x0000000046a528: cmp esi, 0x8d49ffff; add cl, [rax+0x39]; ret far; 
0x0000000045cb99: cmp esi, 0x9; je short 0x000000000045cbc8; mov eax, 0x48; syscall; 
0x0000000045cc28: cmp esi, 0x9; je short 0x000000000045cc58; mov eax, 0x48; syscall; 
0x00000000424f7b: cmp esi, 0xffffffff; call qword ptr [rax-0x1c7418]; 
0x00000000459969: cmp esi, [rdx+0x5]; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000407d27: cmp esi, edx; setb al; ret; 
0x00000000480cd1: cmp esp, [rsi]; cli; inc dword ptr [rcx+rcx*4-0x2]; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000046fd6e: cmp fs:[rdi], rsi; je short 0x000000000046fd78; ret; 
0x000000004a28de: cmp qword ptr [r9+0x38], 0x0; je short 0x00000000004a2934; add rsp, 0x18; ret; 
0x00000000480d3b: cmp qword ptr [rax+0x30], 0x0; je short 0x0000000000480d48; ret; 
0x00000000426df4: cmp qword ptr [rdi+0x38], 0x0; je short 0x0000000000426e00; ret; 
0x00000000423314: cmp qword ptr [rip+0xbec84], 0x0; je short 0x000000000042331f; ret; 
0x0000000042792b: cmp r11b, r13b; test al, 0x90; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x000000004818b9: cmp r11d, 0xa; je short 0x00000000004818c0; ret; 
0x000000004248c1: cmp r13, rdx; jbe 0x0000000000424a70; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000040a43a: cmp r15d, 0xf; jne short 0x000000000040a4a0; mov rax, 0x4e1220; ret; 
0x0000000048f6d3: cmp r8, [rcx+rsi+0x10]; jae short 0x000000000048f685; xor eax, eax; ret; 
0x0000000049c1f6: cmp r8b, 0x1; sbb esi, esi; and esi, 0x2; syscall; 
0x0000000044f320: cmp r8d, 0x1; ja 0x000000000044eff0; je 0x000000000044efe0; vzeroupper; ret; 
0x0000000044f1fc: cmp r8d, 0x1; ja 0x000000000044f0d0; je 0x000000000044f0c0; vzeroupper; ret; 
0x0000000045bebd: cmp r8d, 0x1; ja short 0x000000000045bef0; mov eax, 0x4; syscall; 
0x0000000045bf1c: cmp r8d, 0x1; ja short 0x000000000045bf50; mov eax, 0x5; syscall; 
0x00000000484f4d: cmp r8d, 0x1; ja short 0x0000000000484f80; mov eax, 0x6; syscall; 
0x00000000484fb2: cmp r9d, 0x1; ja short 0x0000000000484fe8; mov eax, 0x106; syscall; 
0x00000000461402: cmp rax, 0x16; ja short 0x0000000000461420; movsxd rax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x00000000461449: cmp rax, 0x17; ja short 0x0000000000461420; movsxd rax, [rbp+rax*4]; add rax, rbp; notrack jmp rax; 
0x0000000040a519: cmp rax, 0x1; sbb eax, eax; and eax, 0xffffffea; ret; 
0x0000000046028c: cmp rax, 0x1e; ja short 0x00000000004602b0; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000429727: cmp rax, 0x2000000; jbe short 0x0000000000429730; ret; 
0x00000000429387: cmp rax, 0x408; jbe short 0x0000000000429390; ret; 
0x00000000492549: cmp rax, 0x9; ja short 0x0000000000492520; mov rax, r8; ret; 
0x00000000429787: cmp rax, 0xa0; jbe short 0x0000000000429790; ret; 
0x000000004293c7: cmp rax, 0xffff; jbe short 0x00000000004293d0; ret; 
0x0000000045beca: cmp rax, 0xfffffffffffff000; ja short 0x000000000045bed8; ret; 
0x0000000045bf29: cmp rax, 0xfffffffffffff000; ja short 0x000000000045bf38; ret; 
0x0000000045c0b2: cmp rax, 0xfffffffffffff000; ja short 0x000000000045c110; ret; 
0x0000000045c157: cmp rax, 0xfffffffffffff000; ja short 0x000000000045c1b0; ret; 
0x0000000045c1eb: cmp rax, 0xfffffffffffff000; ja short 0x000000000045c1f8; ret; 
0x0000000045c327: cmp rax, 0xfffffffffffff000; ja short 0x000000000045c370; ret; 
0x0000000045cb3b: cmp rax, 0xfffffffffffff000; ja short 0x000000000045cb48; ret; 
0x0000000045cdf8: cmp rax, 0xfffffffffffff000; ja short 0x000000000045ce08; ret; 
0x0000000045ce2b: cmp rax, 0xfffffffffffff000; ja short 0x000000000045ce38; ret; 
0x0000000045ce64: cmp rax, 0xfffffffffffff000; ja short 0x000000000045ce70; ret; 
0x0000000045d056: cmp rax, 0xfffffffffffff000; ja short 0x000000000045d0c0; pop rbx; pop rbp; ret; 
0x00000000484f5a: cmp rax, 0xfffffffffffff000; ja short 0x0000000000484f68; ret; 
0x00000000484fbf: cmp rax, 0xfffffffffffff000; ja short 0x0000000000484fd0; ret; 
0x00000000498f6b: cmp rax, 0xfffffffffffff000; ja short 0x0000000000498f78; ret; 
0x00000000498fae: cmp rax, 0xfffffffffffff000; ja short 0x0000000000498fc0; ret; 
0x0000000045be2b: cmp rax, 0xfffffffffffff001; jae short 0x000000000045be34; ret; 
0x0000000045c3ab: cmp rax, 0xfffffffffffff001; jae short 0x000000000045c3b4; ret; 
0x0000000045cf3b: cmp rax, 0xfffffffffffff001; jae short 0x000000000045cf44; ret; 
0x0000000045d00d: cmp rax, 0xfffffffffffff001; jae short 0x000000000045d016; ret; 
0x0000000045d0eb: cmp rax, 0xfffffffffffff001; jae short 0x000000000045d0f4; ret; 
0x0000000045d11b: cmp rax, 0xfffffffffffff001; jae short 0x000000000045d124; ret; 
0x0000000045d14b: cmp rax, 0xfffffffffffff001; jae short 0x000000000045d154; ret; 
0x0000000045f8ae: cmp rax, 0xfffffffffffff001; jae short 0x000000000045f8b7; ret; 
0x0000000045f8de: cmp rax, 0xfffffffffffff001; jae short 0x000000000045f8e7; ret; 
0x0000000045f90b: cmp rax, 0xfffffffffffff001; jae short 0x000000000045f914; ret; 
0x00000000484edb: cmp rax, 0xfffffffffffff001; jae short 0x0000000000484ee4; ret; 
0x0000000049ed2b: cmp rax, 0xfffffffffffff001; jae short 0x000000000049ed34; ret; 
0x000000004916af: cmp rax, 0xfffffffffffffffd; jbe short 0x00000000004916c0; ret; 
0x00000000430e42: cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x0000000048f692: cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x00000000499015: cmp rax, [rip+0x4c114]; jae short 0x000000000049902a; mov rdx, [rip+0x4c113]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000423764: cmp rax, r13; jae short 0x00000000004237c0; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [r15+0x18]; 
0x0000000048f0d8: cmp rax, r8; ja short 0x000000000048f0e8; add rsp, 0x8; ret; 
0x00000000421610: cmp rax, rbx; jae 0x0000000000421cf0; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x00000000424bcb: cmp rax, rbx; jae 0x0000000000424c80; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000042680f: cmp rax, rcx; cmovg rax, rcx; test rdx, rdx; jne short 0x0000000000426808; ret; 
0x000000004806b7: cmp rax, rcx; cmovg rax, rcx; test rdx, rdx; jne short 0x00000000004806b0; ret; 
0x0000000041ffd0: cmp rax, rcx; jbe 0x0000000000420130; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x00000000422512: cmp rax, rcx; jbe 0x00000000004225f0; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000423fcb: cmp rax, rcx; jbe 0x0000000000424080; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000042536c: cmp rax, rcx; jbe 0x0000000000425460; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x00000000426b18: cmp rax, rcx; jbe 0x0000000000426ba0; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000426cf0: cmp rax, rcx; jbe 0x0000000000426d80; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000004271fc: cmp rax, rcx; jbe 0x00000000004273a8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000427435: cmp rax, rcx; jbe 0x0000000000427508; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000427b4f: cmp rax, rcx; jbe 0x0000000000427cc0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x00000000478437: cmp rax, rcx; jbe 0x0000000000478550; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000047e814: cmp rax, rcx; jbe 0x000000000047e918; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000047fa2e: cmp rax, rcx; jbe 0x000000000047fb30; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x00000000480b3e: cmp rax, rcx; jbe 0x0000000000480cd0; mov esi, r15d; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x00000000425bdc: cmp rax, rcx; jbe short 0x0000000000425c18; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x00000000425ec8: cmp rax, rcx; jbe short 0x0000000000425f28; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000426e35: cmp rax, rcx; jbe short 0x0000000000426ea0; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000426eeb: cmp rax, rcx; jbe short 0x0000000000426f18; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000042797b: cmp rax, rcx; jbe short 0x00000000004279b0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000427a0e: cmp rax, rcx; jbe short 0x0000000000427a30; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000047245a: cmp rax, rcx; jbe short 0x00000000004724c0; movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x00000000478889: cmp rax, rcx; jbe short 0x0000000000478908; movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x000000004815a0: cmp rax, rcx; jbe short 0x00000000004815d0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000421cab: cmp rax, rdi; jbe 0x0000000000421dd8; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x00000000427278: cmp rax, rdi; jbe 0x00000000004273f0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x00000000481302: cmp rax, rdi; jbe 0x00000000004814c0; mov rdi, r13; call qword ptr [r14+0x20]; 
0x000000004233fb: cmp rax, rdi; jbe short 0x0000000000423420; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000428450: cmp rax, rdi; jbe short 0x00000000004284b0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x000000004289ae: cmp rax, rdx; jae short 0x00000000004289d8; movzx eax, byte ptr [rax]; ret; 
0x00000000481d0f: cmp rax, rdx; lea rdx, [rip+0x11d7]; lea rax, [rip+0xed0]; cmove rax, rdx; ret; 
0x00000000481ccf: cmp rax, rdx; lea rdx, [rip+0x1607]; lea rax, [rip+0x13e0]; cmove rax, rdx; ret; 
0x00000000431d1f: cmp rax, rdx; lea rdx, [rip+0x1c407]; lea rax, [rip+0x1bfc0]; cmove rax, rdx; ret; 
0x00000000430fdf: cmp rax, rdx; lea rdx, [rip+0x1d4d7]; lea rax, [rip+0x1d330]; cmove rax, rdx; ret; 
0x000000004988cf: cmp rax, rdx; lea rdx, [rip+0x3a7]; lea rax, [rip+0x70]; cmove rax, rdx; ret; 
0x00000000431cdf: cmp rax, rdx; lea rdx, [rip+0x7547]; lea rax, [rip+0x7330]; cmove rax, rdx; ret; 
0x00000000481dcf: cmp rax, rdx; lea rdx, [rip+0xb47]; lea rax, [rip+0x810]; cmove rax, rdx; ret; 
0x0000000048361f: cmp rax, rdx; lea rdx, [rip+0xc57]; lea rax, [rip+0x9b0]; cmove rax, rdx; ret; 
0x00000000481679: cmp rax, rsi; ja short 0x0000000000481670; lea eax, [rdx+rdi]; ret; 
0x00000000428286: cmp rax, rsi; jbe 0x0000000000428340; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x0000000042055b: cmp rax, rsi; jbe short 0x00000000004205b8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000420bec: cmp rax, rsi; jbe short 0x0000000000420c64; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x000000004268b5: cmp rax, rsi; jbe short 0x0000000000426918; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x00000000480a2b: cmp rax, rsi; jbe short 0x0000000000480a68; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000048163e: cmp rax, rsi; jbe short 0x0000000000481650; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000049bfd7: cmp rax, rsi; je short 0x000000000049bfe0; ret; 
0x0000000042391f: cmp rbx, rax; jbe 0x0000000000423a58; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x00000000424b65: cmp rbx, rax; jbe 0x0000000000424c90; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000424d81: cmp rbx, rax; jbe 0x0000000000424f18; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000424ed0: cmp rbx, rax; jbe 0x0000000000424f80; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x000000004296ad: cmp rbx, rax; je short 0x00000000004296b5; pop rbx; pop rbp; ret; 
0x000000004241d2: cmp rbx, rdx; jbe 0x0000000000424400; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x000000004241d1: cmp rbx, rdx; jbe 0x0000000000424400; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000045fb74: cmp rcx, [rax+0x18]; ja short 0x000000000045fb8c; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000045fb96: cmp rcx, [rax+0x18]; jg short 0x000000000045fb8c; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000049c925: cmp rcx, [rax+0x28]; jae short 0x000000000049c910; mov eax, 0x1; ret; 
0x000000004111fc: cmp rcx, [rip+0x247c8b00]; or al, 0x48; mov esi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x0000000043a72e: cmp rcx, rax; jne 0x000000000043b163; xor eax, eax; ret; 
0x0000000043b13a: cmp rcx, rax; jne short 0x000000000043b163; xor eax, eax; ret; 
0x0000000049c967: cmp rcx, rax; sbb eax, eax; and eax, 0x2; sub eax, 0x1; ret; 
0x0000000048e3bd: cmp rcx, rdx; jne short 0x000000000048e398; mov eax, [rcx]; ret; 
0x00000000427a59: cmp rcx, rsi; ja short 0x0000000000427a50; lea eax, [rdx+rdi]; ret; 
0x000000004595dc: cmp rdi, r9; jb 0x0000000000459748; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000459947: cmp rdi, r9; jb 0x0000000000459b15; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000459d92: cmp rdi, r9; jb 0x0000000000459fd0; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000048513a: cmp rdi, rax; ja short 0x0000000000485168; xor eax, eax; ret; 
0x0000000048b72c: cmp rdi, rax; jne short 0x000000000048b738; pop rbx; ret; 
0x0000000045956a: cmp rdi, rdx; jb short 0x0000000000459572; rep movsb [rdi], [rsi]; ret; 
0x0000000045a272: cmp rdx, 0x20; ja 0x000000000045a2fc; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000045a2e2: cmp rdx, 0x20; ja short 0x000000000045a2f3; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x00000000498939: cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x00000000498f54: cmp rdx, 0x7fffffff; mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x00000000480e83: cmp rdx, [rax+0x18]; jbe short 0x0000000000480ea8; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x0000000045fb08: cmp rdx, [rdi+0x18]; ja short 0x000000000045fb24; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045fb2e: cmp rdx, [rdi+0x18]; jg short 0x000000000045fb24; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x00000000482b14: cmp rdx, rax; jbe short 0x0000000000482b80; add rax, rdi; vzeroupper; ret; 
0x00000000498e74: cmp rdx, rax; jbe short 0x0000000000498ee0; add rax, rdi; vzeroupper; ret; 
0x00000000423cc9: cmp rdx, rbx; jae 0x0000000000424000; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000423cc8: cmp rdx, rbx; jae 0x0000000000424000; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000423b67: cmp rdx, rbx; jae 0x0000000000424038; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000423b68: cmp rdx, rbx; jae 0x0000000000424038; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x000000004924c5: cmp rdx, rcx; jae short 0x00000000004924ac; mov rax, r8; ret; 
0x0000000045a36d: cmp rdx, rcx; jne short 0x000000000045a357; rep ret; 
0x0000000045a4d5: cmp rdx, rcx; jne short 0x000000000045a4bb; vzeroupper; ret; 
0x0000000045a698: cmp rdx, rcx; jne short 0x000000000045a676; vzeroupper; ret; 
0x00000000429311: cmp rdx, rdi; setae al; ret; 
0x0000000044df80: cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000004248c6: cmpsb [rsi], [rdi]; add [rax], eax; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x0000000043abb9: cmpsb [rsi], [rdi]; add eax, 0xc0310000; ret; 
0x0000000048bd83: cmpsb [rsi], [rdi]; add rax, rsi; notrack jmp rax; 
0x000000004a0d66: cmpsb [rsi], [rdi]; in al, dx; sti; jmp qword ptr [rsi+0xf]; 
0x0000000045fa56: cmpsb [rsi], [rdi]; xor eax, 0xecebfffc; nop [rax]; endbr64; ret; 
0x00000000424ed5: cmpsd [rsi], [rdi]; add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [r13+0x20]; 
0x00000000431c95: cmpsd [rsi], [rdi]; add byte ptr [rdx], 0x0; cmove rax, rdx; ret; 
0x00000000430fb5: cmpsd [rsi], [rdi]; add ch, bh; call far fword ptr [rdx+0x31]; 
0x0000000048c2c0: cmpsd [rsi], [rdi]; add rax, rdi; notrack jmp rax; 
0x0000000042a5b2: cmpxchg [rip+0xb8227], edx; lea rax, [rip+0xb8220]; add rsp, 0x10; pop rbp; ret; 
0x000000004288c8: cmpxchg [rip+0xbc3e1], edx; mov [rip+0xbc3e2], rbx; add dword ptr [rip+0xbc3d7], 0x1; pop rbx; ret; 
0x000000004a0b42: cwde; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x0000000049c1ac: cwde; add al, 0x0; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x00000000475da4: cwde; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000475503: cwde; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000473050: cwde; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000476399: cwde; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0x6909b]; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004758e9: cwde; movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0x69d4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000475b55: cwde; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x69cdf]; jmp qword ptr [rax+rdx*8]; 
0x00000000475952: cwde; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x69de2]; jmp qword ptr [rax+rdx*8]; 
0x00000000428868: cwde; or eax, [rax]; ret; 
0x00000000403cc4: cwde; ret far; 
0x00000000428918: cwde; ret; 
0x0000000043bd36: data16 ret far; 
0x00000000403d14: data64 ret far; 
0x0000000045a01f: dec byte ptr [rax+0x6f]; add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x0000000045a025: dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x00000000446486: dec byte ptr [rax+0x6f]; pop rcx; jmp qword ptr [rdx-0x2f]; 
0x0000000045a087: dec byte ptr [rax+0x7f]; jg short 0x000000000045a08f; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000045a211: dec byte ptr [rax+0x7f]; jg short 0x000000000045a219; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x00000000459eb1: dec byte ptr [rax+0x7f]; jl short 0x0000000000459ecd; cld; vzeroupper; ret; 
0x00000000459fc1: dec byte ptr [rax+0x7f]; std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000042c720: dec byte ptr [rax-0x73]; ret; 
0x00000000480b49: dec byte ptr [rax-0x77]; out dx, eax; call qword ptr [r14+0x18]; 
0x000000004243c6: dec byte ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x40]; 
0x00000000414675: dec byte ptr [rax-0x77]; ret; 
0x0000000045d3b8: dec byte ptr [rbp-0x75]; pop rdx; or [rcx-0xa], al; ret; 
0x0000000049194e: dec byte ptr [rbx-0x76b70001]; adc [r8+0x5a], bl; pop rbx; ret; 
0x000000004704d0: dec byte ptr [rcx+rcx*4-0x19]; call rbx; 
0x0000000045cb9a: dec byte ptr [rcx]; je short 0x000000000045cbc8; mov eax, 0x48; syscall; 
0x0000000045cc29: dec byte ptr [rcx]; je short 0x000000000045cc58; mov eax, 0x48; syscall; 
0x00000000459624: dec byte ptr [rdi]; mov bh, 0x36; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x0000000043aa32: dec dword ptr [r15]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x0000000043a7e5: dec dword ptr [r15]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x000000004916ad: dec dword ptr [r8-0x7d]; clc; std; jbe short 0x00000000004916c0; ret; 
0x00000000490966: dec dword ptr [rax+0x1]; ret; 
0x000000004731f6: dec dword ptr [rax+0x29]; bnd call qword ptr [rbx+0x38]; 
0x00000000462360: dec dword ptr [rax+0x29]; ret far; 
0x00000000415035: dec dword ptr [rax+0x29]; ret; 
0x00000000467a69: dec dword ptr [rax+0x3948074a]; ret; 
0x0000000049cc00: dec dword ptr [rax+0x39]; ret far; 
0x0000000041d99a: dec dword ptr [rax+0x39]; ret; 
0x0000000046fe68: dec dword ptr [rax+0x5]; add [rdx], al; add [rax], al; mov fs:[rdx], rax; ret; 
0x000000004096d5: dec dword ptr [rax+0x63]; add al, 0x8b; add rax, rbx; notrack jmp rax; 
0x000000004034b1: dec dword ptr [rax+0x63]; add al, 0xba; add rax, rdx; notrack jmp rax; 
0x0000000046fdaa: dec dword ptr [rax+0x63]; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000048df81: dec dword ptr [rax+0x63]; ret; 
0x00000000482ed9: dec dword ptr [rax+0xf]; mov ebp, 0xf80148c6; ret; 
0x00000000482507: dec dword ptr [rax-0x39]; add [r8], r8b; add [rax], al; add bl, ch; ret far; 
0x0000000041287a: dec dword ptr [rax-0x39]; mov al, [0xfff868e9ffffffff]; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000412c73: dec dword ptr [rax-0x39]; ret; 
0x000000004a25b7: dec dword ptr [rax-0x46]; mov eax, 0xf; syscall; 
0x00000000409768: dec dword ptr [rax-0x73]; adc eax, 0x9fd78; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x00000000401be9: dec dword ptr [rax-0x73]; adc eax, 0xb5df3; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x000000004318b1: dec dword ptr [rax-0x73]; add eax, 0x272f7; cmove rax, rdx; ret; 
0x0000000047f003: dec dword ptr [rax-0x73]; lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x0000000043b726: dec dword ptr [rax-0x73]; push rdx; sar byte ptr [rsi], 0x41; jmp rcx; 
0x00000000452eea: dec dword ptr [rax-0x75]; add [rax-0x77], ecx; add cl, [rax-0x77]; clc; ret; 
0x000000004a23ea: dec dword ptr [rax-0x75]; add ecx, [rbp-0x73]; or ecx, [eax-0x7d]; ret; 
0x000000004036f2: dec dword ptr [rax-0x75]; jl short 0x000000000040371b; adc al, ch; ret; 
0x00000000463446: dec dword ptr [rax-0x75]; jne short 0x00000000004633db; mov rdi, rbx; call rsi; 
0x00000000491910: dec dword ptr [rax-0x77]; adc [r8+0x5a], bl; pop rbx; ret; 
0x0000000042bdf7: dec dword ptr [rax-0x77]; add al, 0x24; call rdx; 
0x0000000042e4ce: dec dword ptr [rax-0x77]; add eax, 0xb42ea; ret; 
0x0000000042e4c0: dec dword ptr [rax-0x77]; add eax, 0xb4300; lea rax, [rip-0xc6f]; mov [rip+0xb42ea], rax; ret; 
0x000000004a0a2b: dec dword ptr [rax-0x77]; add ebx, [rax+0x5a]; pop rbx; ret; 
0x0000000047cc75: dec dword ptr [rax-0x77]; fimul st, dword ptr [rcx+rcx*4-0x32]; mov rdi, r12; call qword ptr [rax+0x38]; 
0x000000004248ce: dec dword ptr [rax-0x77]; out dx, eax; call qword ptr [rax+0x18]; 
0x00000000426b25: dec dword ptr [rax-0x77]; out dx, eax; call qword ptr [rbx+0x18]; 
0x000000004793c4: dec dword ptr [rax-0x77]; ret far; 
0x00000000409d34: dec dword ptr [rax-0x77]; ret; 
0x0000000045c804: dec dword ptr [rax-0x77]; ror dword ptr [rax-0x73], 0x40; inc esi; jmp far fword ptr [r15]; 
0x0000000047899f: dec dword ptr [rax-0x77]; test [rax], ebp; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000047255a: dec dword ptr [rax-0x77]; test [rax], edi; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000004985d2: dec dword ptr [rax-0x7b]; shl byte ptr [rax+rcx+0x5b], 0x5d; pop r12; ret; 
0x00000000474405: dec dword ptr [rax-0x7d]; clc; dec dword ptr [rax-0x77]; ret; 
0x000000004916ae: dec dword ptr [rax-0x7d]; clc; std; jbe short 0x00000000004916c0; ret; 
0x00000000409e64: dec dword ptr [rax-0x7d]; ret; 
0x0000000045f359: dec dword ptr [rax-0x7f]; ret; 
0x000000004739be: dec dword ptr [rax-0x91c7b]; inc dword ptr [rcx-0x7d]; in al, dx; add ch, cl; ret far; 
0x00000000429869: dec dword ptr [rax-0x9]; fisttp dword ptr [rax+0x21], st; ret; 
0x0000000040a427: dec dword ptr [rax]; add [rax], al; shl byte ptr [rbp+0x72], 0x48; mov eax, 0x4ded80; ret; 
0x00000000479e99: dec dword ptr [rbp+0x63]; ret; 
0x000000004a00d3: dec dword ptr [rbp+r9*4+0x74]; ret; 
0x000000004a00d4: dec dword ptr [rbp+rcx*4+0x74]; ret; 
0x00000000462864: dec dword ptr [rbp+rcx*4+0x7b]; jmp qword ptr [rbp+rax*2-0x75]; 
0x000000004159eb: dec dword ptr [rbp-0x73]; je short 0x00000000004159f6; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x00000000415943: dec dword ptr [rbp-0x73]; jl short 0x000000000041594f; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x0000000046a664: dec dword ptr [rbp-0x77]; ret; 
0x00000000408f63: dec dword ptr [rbx+0x480c2444]; add esp, 0x18; pop rbp; pop r12; ret; 
0x0000000047a556: dec dword ptr [rbx+rcx*4-0x5b]; clc; idiv bh; jmp qword ptr [rsi-0x70]; 
0x0000000047a615: dec dword ptr [rbx+rcx*4-0x73]; clc; idiv bh; inc dword ptr [rcx]; ret far; 
0x0000000047cd94: dec dword ptr [rbx-0x4d76b]; dec dword ptr [rcx-0x4df73]; jmp far fword ptr [rcx]; 
0x00000000464a6f: dec dword ptr [rbx-0x8b63]; jmp qword ptr [rcx+rcx*4+0x18]; 
0x00000000473702: dec dword ptr [rbx-0x8ef4b]; inc dword ptr [rbp-0x7b]; in al, 0xf; lahf; ret; 
0x000000004736df: dec dword ptr [rbx-0x8ef7b]; inc dword ptr [rcx]; ret; 
0x00000000413232: dec dword ptr [rbx-0xd34b]; jmp qword ptr [rcx+rcx*4+0x30]; 
0x00000000412fca: dec dword ptr [rbx-0xd363]; jmp qword ptr [rcx+rcx*4+0x18]; 
0x00000000413154: dec dword ptr [rbx-0xd373]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x0000000046a1dc: dec dword ptr [rcx+0x3948fc51]; ret; 
0x000000004a15ad: dec dword ptr [rcx+0x39]; ret far; 
0x0000000041491b: dec dword ptr [rcx+0x3c8348c9]; ret far; 
0x000000004a18e0: dec dword ptr [rcx+0x63]; add al, 0x86; add rax, r14; notrack jmp rax; 
0x00000000471649: dec dword ptr [rcx+rcx*4+0x65]; mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000475158: dec dword ptr [rcx+rcx*4-0x12]; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000048f277: dec dword ptr [rcx+rcx*4-0x20]; pop rbx; pop rbp; pop r12; ret; 
0x00000000478e19: dec dword ptr [rcx+rcx*4-0x36]; mov rsi, r12; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x0000000042376d: dec dword ptr [rcx+rcx*4-0x39]; call qword ptr [r15+0x18]; 
0x0000000042139c: dec dword ptr [rcx+rcx*4-0x39]; call qword ptr [rax+0x18]; 
0x000000004756fd: dec dword ptr [rcx+rcx*4-0x3a]; mov rdi, r12; sub r15, r8; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000047a079: dec dword ptr [rcx+rcx*4-0x3e]; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000494255: dec dword ptr [rcx+rcx*4-0x3e]; mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x0000000047580d: dec dword ptr [rcx+rcx*4-0x6]; mov rsi, r11; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x0000000047562e: dec dword ptr [rcx+rcx*4-0x6]; mov rsi, r8; mov rdi, r12; call qword ptr [rax+0x38]; 
0x00000000487278: dec dword ptr [rcx-0x13343]; jmp qword ptr [rsi-0x7d]; 
0x00000000490db2: dec dword ptr [rcx-0x3fd6bb38]; ret; 
0x0000000047c186: dec dword ptr [rcx-0x4df73]; jmp far fword ptr [rcx]; 
0x0000000046a52b: dec dword ptr [rcx-0x73]; add cl, [rax+0x39]; ret far; 
0x000000004a43dd: dec dword ptr [rcx-0x73]; sbb al, 0xcc; mov rsi, [rbx]; call rax; 
0x00000000484bf8: dec dword ptr [rcx-0x74bb9b11]; sub ebp, eax; sub al, 0x7f; std; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000004a43ae: dec dword ptr [rcx-0x75]; adc cl, [rax-0x75]; and al, 0x8; mov [rsp+0x10], r10; call rax; 
0x000000004836ef: dec dword ptr [rcx-0x75]; cmp al, 0x24; movzx esi, bl; call rbp; 
0x000000004a678a: dec dword ptr [rcx-0x75]; jge short 0x00000000004a679f; add rdi, rbp; call r12; 
0x0000000045f451: dec dword ptr [rcx-0x77]; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000046a3a9: dec dword ptr [rcx-0x77]; ret far; 
0x0000000041f6ef: dec dword ptr [rcx-0x77]; ret; 
0x0000000042b761: dec dword ptr [rcx-0x7b]; ret; 
0x0000000046b254: dec dword ptr [rcx-0x7d]; ret; 
0x0000000042946e: dec dword ptr [rcx-0x9]; ret; 
0x0000000042768d: dec dword ptr [rdi]; adc [rdi+0xa0], eax; ret; 
0x0000000040a43c: dec dword ptr [rdi]; jne short 0x000000000040a4a0; mov rax, 0x4e1220; ret; 
0x000000004748c7: dec dword ptr [rdi]; mov bh, 0x8d; pop rsp; idiv edi; jmp qword ptr [rsi-0x77]; 
0x00000000490c82: dec dword ptr [rdi]; mov dh, 0x45; add ecx, [rax-0x7d]; ret; 
0x0000000047c3b1: dec dword ptr [rdi]; mov dh, 0x4; add cl, [rax-0x73]; or eax, 0x63c83; jmp qword ptr [rcx+rax*8]; 
0x0000000047c9cf: dec dword ptr [rdi]; mov dh, 0x4; add cl, [rcx-0x77]; ret far; 
0x0000000043aa33: dec dword ptr [rdi]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x000000004a27b2: dec dword ptr [rdi]; mov dh, 0x53; add cl, [rax-0x7d]; ret; 
0x0000000043a7e6: dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x00000000494626: dec dword ptr [rdi]; mov dh, 0x58; or al, 0x89; fdiv st, st(6); ret; 
0x00000000492f83: dec dword ptr [rdi]; mov dh, 0x58; or al, 0xf6; ret; 
0x000000004a29d3: dec dword ptr [rdi]; mov dh, 0xc0; movsxd rax, [r13+rax*4]; add rax, r13; notrack jmp rax; 
0x0000000047c7d6: dec dword ptr [rdi]; mov dh, 0xc; add cl, [rax-0x73]; add eax, 0x6375e; jmp qword ptr [rax+rcx*8]; 
0x0000000047c5f5: dec dword ptr [rdi]; mov dh, 0xc; add cl, [rax-0x73]; add eax, 0x6383f; jmp qword ptr [rax+rcx*8]; 
0x0000000045e124: dec dword ptr [rdi]; test [rbp+0x49000002], esi; mov edi, [rsi]; call rbx; 
0x0000000045eac0: dec dword ptr [rdi]; test [rbx+0x4c000005], esi; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045e4f6: dec dword ptr [rdi]; test [rbx+0x4c000009], eax; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045e154: dec dword ptr [rdi]; test [rbx], ebp; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000045e184: dec dword ptr [rdi]; test [rcx+0x49000001], esp; mov edi, [rsi]; call rbx; 
0x0000000045e0c4: dec dword ptr [rdi]; test [rdi], eax; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000045e0f4: dec dword ptr [rdi]; test [rdi], edi; add eax, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000045ea89: dec dword ptr [rdi]; test [rdx+0x4c000001], ebx; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045e63d: dec dword ptr [rdi]; test [rdx+0x4c000007], esi; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045e674: dec dword ptr [rdi]; test [rip+0x4c00000a], ebp; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x00000000458a1f: dec dword ptr [rdi]; test [rsi+0x1], ebp; add [rax], al; xor eax, eax; ret; 
0x0000000045e863: dec dword ptr [rdi]; test [rsi+0x4c000004], esp; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x00000000414915: dec dword ptr [rdi]; test [rsp+rdi*8-0x1], al; dec dword ptr [rcx+0x3c8348c9]; ret far; 
0x00000000475510: dec dword ptr [rdi]; test cl, al; or [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx]; 
0x0000000045e1b4: dec dword ptr [rdi]; test ecx, ebx; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x00000000430d10: dec dword ptr [rdx-0x73]; jl short 0x0000000000430d3a; and [rcx], dh; imul al; ret; 
0x00000000467a68: dec qword ptr [rax+0x3948074a]; ret; 
0x0000000046d9e5: div byte ptr [rax+rcx-0x7d]; inc byte ptr [rbx]; je short 0x000000000046d9f0; ret; 
0x0000000045e090: div byte ptr [rbp+0x1d]; mov rdi, [r13]; call rbx; 
0x0000000049e808: div byte ptr [rbp+0x25]; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000049e899: div byte ptr [rbp+0x2c]; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x000000004830c6: div byte ptr [rbp+0x4]; xor rax, rax; ret; 
0x0000000045dde5: div byte ptr [rbp+0x8]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000045de93: div byte ptr [rbp+0xa]; pop rbp; pop r12; pop r13; ret; 
0x0000000046ff59: div byte ptr [rbp+0xc]; mov [rbx+0x40], esi; xor eax, eax; pop rbx; ret; 
0x0000000049e8b2: div byte ptr [rbp-0x13]; cmp cx, 0x7fff; jne short 0x000000000049e89c; mov eax, 0x1; ret; 
0x0000000048e4b1: div byte ptr [rbx+rax+0x48]; mov [rsi], edi; mov rax, r8; ret; 
0x00000000463ee7: div byte ptr [rcx]; jmp qword ptr [rsi+0xf]; 
0x0000000043c2ec: div byte ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000430499: div byte ptr [rsp+rcx+0x48]; lea eax, [rax-0x10]; ret; 
0x0000000043c19d: div dword ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004958a5: div ecx; add r8d, eax; mov eax, r8d; ret; 
0x0000000045a8bd: div ecx; mov eax, eax; ret; 
0x0000000045a8a6: div esi; mov eax, eax; ret; 
0x0000000043c19c: div qword ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004a1665: divps xmm0, [rip+0x2ec10]; ret; 
0x000000004a1664: divss xmm0, [rip+0x2ec10]; ret; 
0x000000004847d1: endbr64; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000426df0: endbr64; cmp qword ptr [rdi+0x38], 0x0; je short 0x0000000000426e00; ret; 
0x00000000423310: endbr64; cmp qword ptr [rip+0xbec84], 0x0; je short 0x000000000042331f; ret; 
0x00000000461300: endbr64; lea rax, [rip+0x81f55]; ret; 
0x00000000402160: endbr64; lea rax, [rip+0xa6f3d]; ret; 
0x000000004a39d0: endbr64; mov [rdi+0x98], rsi; ret; 
0x0000000045cf30: endbr64; mov eax, 0x10; syscall; 
0x0000000045be20: endbr64; mov eax, 0x18; syscall; 
0x0000000045ce20: endbr64; mov eax, 0x1; syscall; 
0x0000000045d140: endbr64; mov eax, 0x1c; syscall; 
0x0000000045c3a0: endbr64; mov eax, 0x20; syscall; 
0x0000000049ed20: endbr64; mov eax, 0x26; syscall; 
0x00000000498f90: endbr64; mov eax, 0x27; syscall; 
0x0000000045cb30: endbr64; mov eax, 0x3; syscall; 
0x00000000484ed0: endbr64; mov eax, 0x3f; syscall; 
0x0000000045f900: endbr64; mov eax, 0x63; syscall; 
0x00000000484f00: endbr64; mov eax, 0x66; syscall; 
0x00000000484f20: endbr64; mov eax, 0x68; syscall; 
0x00000000484f10: endbr64; mov eax, 0x6b; syscall; 
0x00000000484f30: endbr64; mov eax, 0x6c; syscall; 
0x0000000045c1e0: endbr64; mov eax, 0x8; syscall; 
0x0000000045d110: endbr64; mov eax, 0xa; syscall; 
0x0000000045d0e0: endbr64; mov eax, 0xb; syscall; 
0x00000000485120: endbr64; mov eax, 0xc; syscall; 
0x00000000426eb0: endbr64; mov eax, 0xffffffff; ret; 
0x00000000428510: endbr64; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x000000004a5a90: endbr64; mov eax, [rdi]; test eax, eax; jne short 0x00000000004a5aa0; ret; 
0x000000004a5cd0: endbr64; mov eax, [rdi]; test eax, eax; jne short 0x00000000004a5ce0; ret; 
0x000000004991e0: endbr64; mov eax, [rip+0x4c79e]; ret; 
0x00000000461310: endbr64; mov eax, [rip+0x846d6]; test eax, eax; je short 0x0000000000461320; ret; 
0x000000004037d0: endbr64; mov eax, [rip+0xde92a]; ret; 
0x00000000403150: endbr64; mov eax, [rip+0xdefae]; test eax, eax; js short 0x0000000000403160; ret; 
0x00000000402170: endbr64; mov eax, [rip+0xe2156]; test eax, eax; je short 0x0000000000402180; ret; 
0x0000000045c0a0: endbr64; mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000045c0c0; syscall; 
0x00000000428960: endbr64; mov qword ptr [rip+0xbc341], 0x0; mov qword ptr [rip+0xbc33e], 0x0; ret; 
0x00000000498fa0: endbr64; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000045f8a0: endbr64; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000045f8d0: endbr64; mov r10, rcx; mov eax, 0x9d; syscall; 
0x00000000402580: endbr64; mov rax, 0x4e2130; mov rax, [rax]; mov eax, [rax]; ret; 
0x00000000411ad0: endbr64; mov rax, 0xffffffffffffffc0; add rax, fs:[0x0]; ret; 
0x0000000048fa60: endbr64; mov rax, 0xffffffffffffffc0; pop rbx; mov eax, fs:[rax]; ret; 
0x0000000046fe00: endbr64; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046fde0: endbr64; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046fdc0: endbr64; mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x00000000427930: endbr64; mov rax, 0xffffffffffffffff; ret; 
0x000000004916e0: endbr64; mov rax, [rax+0x8]; ret; 
0x000000004916f0: endbr64; mov rax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x00000000428880: endbr64; mov rax, [rdi+0x68]; ret; 
0x000000004a3930: endbr64; mov rax, [rdi+0x90]; ret; 
0x000000004a39a0: endbr64; mov rax, [rdi+0x98]; ret; 
0x00000000480d30: endbr64; mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x0000000000480d48; ret; 
0x000000004a39e0: endbr64; mov rax, [rdi+0xa0]; ret; 
0x000000004a3a40: endbr64; mov rax, [rdi+0xa8]; ret; 
0x000000004a3a30: endbr64; mov rax, [rdi+0xb0]; ret; 
0x000000004a39f0: endbr64; mov rax, [rdi+0xb8]; ret; 
0x00000000429720: endbr64; mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000429730; ret; 
0x00000000429380: endbr64; mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000429390; ret; 
0x00000000429780: endbr64; mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000429790; ret; 
0x000000004293c0: endbr64; mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x00000000004293d0; ret; 
0x0000000049bfd0: endbr64; mov rax, [rdi]; cmp rax, rsi; je short 0x000000000049bfe0; ret; 
0x000000004293e0: endbr64; mov rax, [rdi]; nop; mov [rip+0xb93b9], rax; ret; 
0x00000000429370: endbr64; mov rax, [rdi]; nop; mov [rip+0xb93d9], rax; ret; 
0x00000000429360: endbr64; mov rax, [rdi]; nop; mov [rip+0xb93f1], rax; ret; 
0x00000000429770: endbr64; mov rax, [rdi]; nop; mov [rip+0xbb5b6], eax; ret; 
0x0000000046d200: endbr64; mov rax, [rip+0x77c45]; ret; 
0x00000000463850: endbr64; mov rax, [rip+0x821ad]; ret; 
0x0000000045cf60: endbr64; mov rax, [rip+0x861ed]; test rax, rax; je short 0x000000000045cf71; ret; 
0x00000000428860: endbr64; mov rax, [rip+0xb98f5]; ret; 
0x00000000428890: endbr64; mov rax, rdi; ret; 
0x00000000403170: endbr64; movzx edi, dil; mov [rip+0xdef8a], edi; ret; 
0x00000000401cb0: endbr64; ret; 
0x000000004a8160: endbr64; sub rsp, 0x8; add rsp, 0x8; ret; 
0x0000000045a2a0: endbr64; test rdx, rdx; jne short 0x000000000045a2ad; mov rax, rdi; ret; 
0x000000004830c0: endbr64; test rsi, rsi; jne short 0x00000000004830cd; xor rax, rax; ret; 
0x00000000483d80: endbr64; test rsi, rsi; jne short 0x0000000000483d8d; xor rax, rax; ret; 
0x000000004278b0: endbr64; xor eax, eax; ret; 
0x0000000045cdf0: endbr64; xor eax, eax; syscall; 
0x00000000425190: endbr64; xor eax, eax; test rdx, rdx; jne short 0x00000000004251a0; ret; 
0x00000000402b02: enter 0x0, 0x0; ret; 
0x000000004269ad: enter 0x1076, 0x48; mov eax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000044e1a9: enter 0x148, 0xf8; vzeroupper; ret; 
0x00000000458b90: enter 0x275, 0x39; enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x00000000426eed: enter 0x2876, 0x48; mov edi, ebx; call qword ptr [rbp+0x20]; 
0x0000000049e8e6: enter 0x289, 0xb8; add [rax], eax; add [rax], al; ret; 
0x00000000490db4: enter 0x2944, 0xc0; ret; 
0x000000004233f7: enter 0x2948, 0xcf; cmp rax, rdi; jbe short 0x0000000000423420; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000004842de: enter 0x2948, 0xd0; shr rax, 0x2; vzeroupper; ret; 
0x0000000044e51e: enter 0x2948, 0xd0; vzeroupper; ret; 
0x000000004591a7: enter 0x2948, 0xf8; ret; 
0x000000004815a2: enter 0x2b76, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000042797d: enter 0x3076, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x000000004802e4: enter 0x3176, 0x48; movsxd edx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x000000004331cd: enter 0x31c3, 0xc0; ret; 
0x00000000425bde: enter 0x3776, 0x48; mov edi, ebp; call qword ptr [rbx+0x88]; 
0x000000004785c8: enter 0x415d, 0x5c; pop r13; pop r14; ret; 
0x0000000042513f: enter 0x4676, 0x31; idiv byte ptr [rcx+0x3]; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x00000000488abd: enter 0x4800, 0x89; ret; 
0x0000000041e160: enter 0x50f, 0x48; mov edi, eax; mov eax, 0xba; syscall; 
0x00000000403964: enter 0x595, 0x0; sar eax, 0x1f; and eax, 0xfffffffe; add rsp, 0x18; ret; 
0x00000000425eca: enter 0x5b76, 0xba; add [rax], eax; add [rax], al; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000415d69: enter 0x5d5b, 0x41; pop rsp; ret; 
0x0000000047245c: enter 0x6176, 0x4d; movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000041ec2e: enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000425067: enter 0x6676, 0x31; idiv byte ptr [rdx+0x2]; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000426e37: enter 0x6676, 0x48; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x00000000426f82: enter 0x6b76, 0x41; movzx esi, byte ptr [rsi]; lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x00000000439dbb: enter 0x7, 0x49; movsxd ecx, [rbx+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000004404a4: enter 0x764, 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000047888b: enter 0x7a76, 0x48; movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x000000004658b9: enter 0x830f, 0x24; add al, 0x0; add [rax-0x77], cl; ret far; 
0x00000000482c43: enter 0x840f, 0xc6; add [rax], eax; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000041ffd2: enter 0x860f, 0x57; add [rax], eax; add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x00000000427b51: enter 0x860f, 0x68; add [rax], eax; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x00000000426b1a: enter 0x860f, 0x7f; add [rax], al; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000426cf2: enter 0x860f, 0x87; add [rax], al; add [rsi-0x1], bh; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000480b40: enter 0x860f, 0x89; add [rax], eax; add [rcx+rcx*4-0x2], al; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x00000000422514: enter 0x860f, 0xd5; add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000041128a: enter 0x8902, 0xc2; mov esi, edx; mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x0000000046201b: enter 0x8903, 0x5; xor [rcx], edi; or [rax], al; ret; 
0x0000000049d0e6: enter 0x894c, 0x47; clc; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000049d066: enter 0x894c, 0x7; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x0000000049d180: enter 0x894c, 0x7; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x0000000045d005: enter 0x8b4c, 0x4c; and al, 0x8; syscall; 
0x000000004817b2: enter 0x8d49, 0x14; nop; mov [rax], rdx; xor eax, eax; ret; 
0x000000004255c4: enter 0x8fb, 0x0; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000040cd6b: enter 0x9, 0xc3; lea rax, [rip+0x9c839]; ret; 
0x0000000040cd5c: enter 0x9, 0xc3; lea rax, [rip+0x9c840]; ret; 
0x0000000040cd63: enter 0x9, 0xc3; lea rax, [rip+0x9c848]; ret; 
0x0000000040cd24: enter 0x9, 0xc3; lea rax, [rip+0x9c85d]; ret; 
0x0000000040cd2c: enter 0x9, 0xc3; lea rax, [rip+0x9c85e]; ret; 
0x0000000040cce4: enter 0x9, 0xc3; lea rax, [rip+0x9c87b]; ret; 
0x0000000040ccec: enter 0x9, 0xc3; lea rax, [rip+0x9c87c]; ret; 
0x0000000040cd54: enter 0x9, 0xc3; lea rax, [rip+0x9c8b1]; ret; 
0x0000000040cd4c: enter 0x9, 0xc3; lea rax, [rip+0x9c8b2]; ret; 
0x0000000040cd44: enter 0x9, 0xc3; lea rax, [rip+0x9c8b4]; ret; 
0x0000000040cd3c: enter 0x9, 0xc3; lea rax, [rip+0x9c8b6]; ret; 
0x0000000040cd04: enter 0x9, 0xc3; lea rax, [rip+0x9c8b9]; ret; 
0x0000000040cd0c: enter 0x9, 0xc3; lea rax, [rip+0x9c8bf]; ret; 
0x0000000040ccfc: enter 0x9, 0xc3; lea rax, [rip+0x9c8c8]; ret; 
0x0000000040cc2c: enter 0x9, 0xc3; lea rax, [rip+0x9c8f7]; ret; 
0x0000000040cd14: enter 0x9, 0xc3; lea rax, [rip+0xbead0]; ret; 
0x0000000040cc94: enter 0x9, 0xc3; nop [rax+rax]; lea rax, [rip+0x9c8b7]; ret; 
0x0000000040cc74: enter 0x9, 0xc3; nop [rax+rax]; lea rax, [rip+0x9c8c0]; ret; 
0x0000000040cc64: enter 0x9, 0xc3; nop [rax+rax]; lea rax, [rip+0x9c8c4]; ret; 
0x0000000040cc54: enter 0x9, 0xc3; nop [rax+rax]; lea rax, [rip+0x9c8cc]; ret; 
0x0000000040cc84: enter 0x9, 0xc3; nop [rax+rax]; lea rax, [rip+0x9c8ce]; ret; 
0x0000000040cc34: enter 0x9, 0xc3; nop [rax+rax]; lea rax, [rip+0x9c90c]; ret; 
0x0000000040cca4: enter 0x9, 0xc3; nop [rax+rax]; lea rax, [rip+0x9c93f]; ret; 
0x0000000040cd03: enter 0x9c8, 0x0; ret; 
0x000000004293d4: enter 0xb93, 0x0; ret; 
0x0000000048044e: enter 0xbce8, 0xf5; std; jmp qword ptr [rsi+0x2e]; 
0x000000004264e4: enter 0xbe7, 0x0; syscall; 
0x00000000458b94: enter 0xc019, 0x83; fdivr st, st(7); ret; 
0x000000004841b2: enter 0xc148, 0xe8; add al, [rdx+rdx*8-0x2e77ea8c]; and cl, 0xf; je short 0x00000000004841e0; ret; 
0x0000000049e841: enter 0xd348, 0xe6; mov [rdi], rsi; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000427a6a: enter 0xe883, 0x1; ret; 
0x0000000048031e: enter 0xece8, 0xf6; std; jmp qword ptr [rsi+0x2e]; 
0x000000004963ab: enter 0xf41, 0x94; ret; 
0x00000000426811: enter 0xf48, 0x4f; ror dword ptr [rax-0x7b], 0xd2; jne short 0x0000000000426808; ret; 
0x000000004806b9: enter 0xf48, 0x4f; ror dword ptr [rax-0x7b], 0xd2; jne short 0x00000000004806b0; ret; 
0x0000000044db69: enter 0xf66, 0xeb; ret; 
0x00000000434a50: enter 0xf8c5, 0x77; ret; 
0x0000000043b18a: enter 0xfc3, 0x1f; add [rip+0xff], spl; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000439917: enter 0xfc3, 0x1f; add byte ptr [rax], 0x0; add [rax], al; xor eax, eax; ret; 
0x00000000408a3c: enter 0xff3e, 0xe0; mov eax, [rdi+0x24]; mov [rdx], eax; xor eax, eax; ret; 
0x000000004399c4: enter 0xfffe, 0xff; ret; 
0x00000000413aed: fadd st, dword ptr [rax-0x80]; jmp far fword ptr [rdi+0x41]; 
0x0000000042063f: fadd st, dword ptr [rax]; add [rax], al; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x0000000041f94d: fadd st, dword ptr [rax]; add [rax], al; ret; 
0x0000000047611f: fadd st, dword ptr [rbp-0x777af040]; add eax, 0x89440000; ror byte ptr [rcx-0x4ef73], 0x1; jmp far fword ptr [rcx]; 
0x00000000488d69: fadd st, dword ptr [rbx+rcx*4+0x3d]; scasd [rdi]; ret far; 
0x0000000048c2ba: fadd st, dword ptr [rbx]; add [rdx+0x63], cl; add al, 0xa7; add rax, rdi; notrack jmp rax; 
0x00000000404465: fadd st, dword ptr [rcx+0x5c]; pop r13; pop r14; pop r15; ret; 
0x0000000048e526: fadd st, dword ptr [rcx+rcx*8-0x3fbbf0b4]; mov rax, r8; ret; 
0x00000000431b96: fadd st, dword ptr [rcx]; add [rax-0x73], cl; adc eax, 0x21cc0; cmovne rax, rdx; ret; 
0x0000000040b513: fadd st, dword ptr [rdx]; or al, 0x0; ret; 
0x0000000044e63b: fcmovnb st, st(5); std; xlat [rbx]; ret; 
0x000000004a37cf: fcomip st, st(5); jmp qword ptr [rsi+0x66]; 
0x0000000048986b: fcomp st, dword ptr [rbx+0x5d]; pop r12; pop r13; pop r14; ret; 
0x0000000042508a: fcomp st, dword ptr [rbx+0x5d]; pop r12; ret; 
0x00000000404ed1: fcomp st, dword ptr [rbx+0x5d]; ret; 
0x000000004a1655: fcomp st, dword ptr [rbx+0x7420e783]; adc bl, dh; movups xmm0, [rip+0x2ec14]; divss xmm0, [rip+0x2ec10]; ret; 
0x000000004907fb: fdiv st(1), st; dec dword ptr [rax-0x77]; ret; 
0x000000004836ed: fdiv st(5), st; dec dword ptr [rcx-0x75]; cmp al, 0x24; movzx esi, bl; call rbp; 
0x0000000047dbfc: fdiv st(7), st; call qword ptr [rax-0x77276b4]; 
0x00000000474c13: fdiv st(7), st; jmp qword ptr [rsi+0x2e]; 
0x000000004290d3: fdiv st(7), st; jmp qword ptr [rsi+0xf]; 
0x0000000049462c: fdiv st, st(6); ret; 
0x0000000047c6fd: fdivp st(7), st; call far fword ptr [rdi]; 
0x00000000409f8b: fdivp st(7), st; call qword ptr [rax+0x758b48]; 
0x00000000474a4f: fdivp st(7), st; jmp qword ptr [rsi+0xf]; 
0x000000004096dc: fdivr st, dword ptr [rsi]; jmp rax; 
0x00000000407d37: fdivr st, qword ptr [rax+0x1]; ret; 
0x0000000048217b: fdivr st, st(5); jmp qword ptr [rsi-0x70]; 
0x0000000047e19c: fdivr st, st(7); call qword ptr [rax+0x30be]; 
0x000000004a6169: fdivr st, st(7); dec dword ptr [rax-0x77]; ret; 
0x00000000458b98: fdivr st, st(7); ret; 
0x000000004347d1: ffreep st(5); std; xlat [rbx]; ret far; 
0x0000000046f135: fiadd st, dword ptr [rax]; add [rax], al; movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x00000000493fd4: fiadd st, dword ptr [rbp-0x57bf037]; adc [rax], eax; add al, ch; ret; 
0x0000000042067c: fiadd st, word ptr [rax]; add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x0000000044ef6e: fiadd st, word ptr [rcx]; add [rax], al; vzeroupper; ret; 
0x0000000049c1d7: fiadd st, word ptr [rdx]; add al, ch; and [rax-0x1], esp; call qword ptr [rax+0x1f88041]; 
0x0000000045e78a: fiadd st, word ptr [rip-0x76b40000]; and al, 0x8; mov rdi, [r8]; call rbx; 
0x000000004839c2: fidiv st, dword ptr [rbp+0x39480005]; ret; 
0x0000000041db72: fidivr st, dword ptr [rsi]; jmp r10; 
0x00000000422f7f: fidivr st, word ptr [rdi+0x2]; mov eax, r9d; syscall; 
0x0000000040254e: fidivr st, word ptr [rdi]; add [rax-0x7b], cl; shl byte ptr [rcx+rcx-0x75], 0x0; add rsp, 0x8; ret; 
0x0000000041a9ed: fild st, word ptr [rax+0x1]; add cl, ch; pop rdx; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x00000000473895: fild st, word ptr [rax-0x8df43]; call far fword ptr [rax+0x44]; 
0x000000004a18d5: fild st, word ptr [rip+0x2f3c0000]; ja 0x0000000000401723; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000483275: fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x00000000483f35: fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 0x2; ret; 
0x0000000045d04b: fimul st, dword ptr [rax-0x77]; out dx, eax; mov eax, 0x9; syscall; 
0x00000000473a9f: fimul st, dword ptr [rcx+rcx*4-0x1a]; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000047cc78: fimul st, dword ptr [rcx+rcx*4-0x32]; mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000049e74c: fimul st, word ptr [rbp+0x11]; ret far; 
0x0000000046082b: fimul st, word ptr [rbp-0x75]; sbb [rax+0x1], ecx; ret far; 
0x00000000475813: fimul st, word ptr [rcx+rcx*4-0x19]; call qword ptr [rcx+0x38]; 
0x000000004767ae: fimul st, word ptr [rcx+rcx*4-0x19]; mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x00000000476271: fimul st, word ptr [rcx+rcx*4-0x19]; mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x00000000476a03: fimul st, word ptr [rcx+rcx*4-0x19]; mov [rbp-0x508], r10d; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x0000000042fc02: fimul st, word ptr [rcx+rcx*4-0x3e]; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000004772b1: fistp dword ptr [rsi-0x7160008], st; in al, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000042f182: fistp qword ptr [rax+0xca], st; syscall; 
0x000000004251fc: fistp qword ptr [rdx+0x1], st; call qword ptr [r14+0x80]; 
0x0000000042986c: fisttp dword ptr [rax+0x21], st; ret; 
0x000000004a150a: fisttp dword ptr [rax+0x9], st; ror dword ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000049d725: fisttp dword ptr [rax-0x77], st; ret; 
0x0000000045f352: fisttp dword ptr [rax-0x7f], st; jrcxz 0x000000000045f357; loop 0x000000000045f358; dec dword ptr [rax-0x7f]; ret; 
0x00000000465986: fisttp dword ptr [rcx+0x39], st; test dword ptr [rdi], 0x33486; add [rcx-0xa], al; ret; 
0x00000000475777: fisttp dword ptr [rdi], st; test [rdx], esp; sbb [rax], eax; add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x0000000043031a: fisttp qword ptr [rax-0x3f], st; in eax, dx; or [rax-0x7f], ecx; sti; jmp far fword ptr [rcx]; 
0x0000000045d724: fisttp qword ptr [rax-0x77], st; out dx, eax; call r12; 
0x00000000409286: fisttp qword ptr [rax-0x7b], st; ror byte ptr [rdi], 0x84; lock add [rax], al; add [rax-0x77], cl; ret; 
0x0000000047b60c: fisttp qword ptr [rcx-0x3f], st; std; add cl, [rcx+rcx*4-0x16]; call qword ptr [rax+0x38]; 
0x0000000042367b: fisttp word ptr [rax+0x29], st; bnd call qword ptr [r12+0x70]; 
0x00000000421042: fisttp word ptr [rax+0x29], st; bnd call qword ptr [rax+0x70]; 
0x00000000411a23: fisttp word ptr [rax-0x7d], st; ret; 
0x0000000049d7be: fisttp word ptr [rax], st; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x00000000408905: fisttp word ptr [rbp-0x73], st; ret; 
0x0000000044218d: fisttp word ptr [rbx+0x7], st; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000040d85c: fisttp word ptr [rbx], st; add bl, al; lea rax, [rip+0x9bd1d]; ret; 
0x00000000415201: fisttp word ptr [rdi], st; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x0000000049eb2d: fisttp word ptr [rsi], st; cld; jmp qword ptr [rsi+0x2e]; 
0x00000000498f65: fld st, dword ptr [rax]; add [rax], al; syscall; 
0x0000000045e1b7: fld st, dword ptr [rdx]; add [rax], al; mov rdi, [r14]; call rbx; 
0x000000004a78fd: fld st, qword ptr [rax]; mov rax, [rax+rbx*8]; test rax, rax; je short 0x00000000004a790a; call rax; 
0x0000000048bd7d: fld st, qword ptr [rbx]; add [rdx+0x63], cl; add al, 0xa6; add rax, rsi; notrack jmp rax; 
0x0000000041e0ae: fld st, st(3); ret; 
0x0000000048fed5: fld st, tbyte ptr [rsp+0x30]; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x30; bnd ret; 
0x00000000498b39: fldenv [rsi+0xf]; jbe short 0x0000000000498b8d; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000004391c7: fldenv [rsi+0xf]; je short 0x000000000043921b; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000004827d9: fldenv [rsi+0xf]; je short 0x000000000048282d; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000004390e1: fldenv [rsi+0xf]; xlat [rbx]; ret; 
0x0000000049e7b4: fmul st, dword ptr [rax+0x11]; rcr byte ptr [rbp+0x5b], 0x1; ret; 
0x0000000042270e: fmul st, dword ptr [rax-0x77]; ret; 
0x000000004a374d: fmul st, dword ptr [rcx+rcx*4-0x1f]; or esi, 0x2; mov edi, 0x1; call rax; 
0x00000000424bcd: fmul st, dword ptr [rdi]; sub dword ptr [rax+rax-0x76b80000], 0xffffffef; call qword ptr [r13+0x20]; 
0x0000000045cec0: fmul st, dword ptr [rdi]; xchg edx, eax; rol byte ptr [rax+rax*8-0x38b7af8c], 0xc0; sar bh, 0xff; jmp qword ptr [rdi+rax*8]; 
0x000000004905e3: fmul st, qword ptr [rax-0x75]; sbb al, 0x24; add rsp, 0x18; bnd jmp r11; 
0x0000000048fdca: fmul st, qword ptr [rax-0x75]; sbb al, 0x24; add rsp, 0x30; bnd jmp r11; 
0x0000000048fedc: fmul st, qword ptr [rax-0x75]; sbb al, 0x24; add rsp, 0x30; bnd ret; 
0x0000000045c444: fmul st, qword ptr [rax-0x77]; std; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x00000000488542: fmul st, qword ptr [rax-0x7d]; ret; 
0x0000000049a723: fnstcw [rdx-0x1]; jmp qword ptr [rsi+0xf]; 
0x0000000043b1f0: fnstcw [rsi]; jmp r9; 
0x00000000439b87: fnstcw [rsi]; jmp rcx; 
0x0000000047c35f: fnstsw [rsi+rax]; add [rcx-0x77], cl; ret far; 
0x0000000042916f: fnstsw [rsi-0x3]; dec dword ptr [rax-0x77]; ret; 
0x0000000045921c: fstp tbyte ptr [rdx], st; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000431fcf: fsub st(1), st; imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x0000000045be3c: fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000045bee0: fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000045c118: fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x00000000485150: fsub st, dword ptr [rcx+rcx*4+0x2]; xor eax, eax; mov qword ptr [rip+0x5fe37], 0xffffffffffffffff; ret; 
0x0000000049eb94: fsub st, dword ptr [rcx]; add [rax], al; mov [rbx+0x18], rax; pop rbx; ret; 
0x0000000044f7b4: fsub st, dword ptr [rsi+0xf]; xlat [rbx]; ret; 
0x0000000044dc8c: fsub st, qword ptr [rsi+0xf]; xlat [rbx]; ret; 
0x00000000438ed3: fsubr st, qword ptr [rcx]; enter 0xf8c5, 0x77; ret; 
0x000000004888f4: fucomi st, st(3); ret; 
0x0000000045b8b1: fwait; movsxd edi, ebx; jmp qword ptr [rsi+0x2e]; 
0x00000000497d74: fwait; rol byte ptr [rax+rax], cl; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x0000000042a6c1: fwait; xor [rax], eax; add [rax-0x77], cl; add eax, 0xb80f4; ret; 
0x0000000047f234: hint-not-taken ja short 0x000000000047f260; lea rdi, [rip+0x4974a]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x000000004a5875: hlt; adc [rcx+rcx*4-0x11], cl; call rax; 
0x0000000043c58c: hlt; jb short 0x000000000043c597; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c63c: hlt; jb short 0x000000000043c647; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ef6c: hlt; jb short 0x000000000043ef77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f01c: hlt; jb short 0x000000000043f027; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004425ca: hlt; mov [rdi-0x4], ecx; ret; 
0x0000000043d24d: hlt; mov [rdi-0x4], edx; ret; 
0x000000004425c3: hlt; mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000045b8ee: hlt; mov edi, edx; mov eax, r8d; syscall; 
0x0000000043d3c2: hlt; mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000049887b: hlt; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000004586a2: hlt; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x00000000401cae: hlt; nop; endbr64; ret; 
0x0000000042a6c8: hlt; or byte ptr [rbx], 0x0; ret; 
0x0000000040c20b: hlt; ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d3f2]; ret; 
0x0000000048f654: hlt; stc; jmp qword ptr [rsi+0xf]; 
0x0000000046f643: hlt; sti; jmp qword ptr [rsi+0x2e]; 
0x000000004586a7: hlt; sub eax, edx; ret; 
0x0000000048c47c: idiv bh; call qword ptr [rax+0x4cf8894c]; 
0x000000004610bc: idiv bh; call qword ptr [rax-0x66d274b8]; 
0x00000000473601: idiv bh; call qword ptr [rax]; 
0x00000000479e97: idiv bh; dec dword ptr [rbp+0x63]; ret; 
0x0000000047a554: idiv bh; dec dword ptr [rbx+rcx*4-0x5b]; clc; idiv bh; jmp qword ptr [rsi-0x70]; 
0x000000004143d6: idiv bh; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x0000000048c468: idiv bh; inc dword ptr [rbx+0x7425087b]; fisttp word ptr [rax-0x7d], st; ret; 
0x000000004739c2: idiv bh; inc dword ptr [rcx-0x7d]; in al, dx; add ch, cl; ret far; 
0x0000000047a61a: idiv bh; inc dword ptr [rcx]; ret far; 
0x000000004747be: idiv bh; inc edi; test eax, edi; idiv bh; call qword ptr [rax]; 
0x00000000478cdd: idiv bh; inc esi; test esp, ecx; idiv bh; jmp qword ptr [rax]; 
0x00000000478ce3: idiv bh; jmp qword ptr [rax]; 
0x0000000041a9f3: idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000042a570: idiv bh; jmp qword ptr [rsi+0x66]; 
0x00000000406904: idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000476fd6: idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000047982b: idiv bh; jmp qword ptr [rsi-0x70]; 
0x00000000425143: idiv byte ptr [rcx+0x3]; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x000000004112c0: idiv byte ptr [rdi+0x3003]; mov eax, 0x9e; syscall; 
0x00000000421bc0: idiv byte ptr [rdx+0x1]; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x00000000423f38: idiv byte ptr [rdx+0x1]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000004219ca: idiv byte ptr [rdx+0x2]; mov rdi, r15; call qword ptr [r13+0x80]; 
0x000000004203c6: idiv byte ptr [rdx+0x2]; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000042506b: idiv byte ptr [rdx+0x2]; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000464f8a: idiv byte ptr [rdx-0x1]; cmovs eax, edx; ret; 
0x00000000480321: idiv ch; jmp qword ptr [rsi+0x2e]; 
0x0000000049722e: idiv dil; jmp qword ptr [rsi+0xf]; 
0x000000004a3975: idiv dword ptr [rax+rcx]; jne 0x000000000040175a; mov [rcx], rdx; add rsp, 0x8; ret; 
0x00000000473899: idiv edi; call far fword ptr [rax+0x44]; 
0x000000004068ec: idiv edi; call qword ptr [rax+0x2444c748]; 
0x000000004725ec: idiv edi; call qword ptr [rax+0x688d8b48]; 
0x0000000047709c: idiv edi; call qword ptr [rax+0x709d894c]; 
0x00000000476f0c: idiv edi; call qword ptr [rax-0x77cf879]; 
0x000000004793c2: idiv edi; dec dword ptr [rax-0x77]; ret far; 
0x0000000047899d: idiv edi; dec dword ptr [rax-0x77]; test [rax], ebp; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000472558: idiv edi; dec dword ptr [rax-0x77]; test [rax], edi; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000474403: idiv edi; dec dword ptr [rax-0x7d]; clc; dec dword ptr [rax-0x77]; ret; 
0x00000000478e17: idiv edi; dec dword ptr [rcx+rcx*4-0x36]; mov rsi, r12; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x0000000047a077: idiv edi; dec dword ptr [rcx+rcx*4-0x3e]; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000049960e: idiv edi; endbr64; ret; 
0x000000004142a5: idiv edi; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000473a27: idiv edi; inc dword ptr [rax]; add [rax], al; add [rax-0x77], cl; ret; 
0x00000000473706: idiv edi; inc dword ptr [rbp-0x7b]; in al, 0xf; lahf; ret; 
0x00000000474279: idiv edi; inc dword ptr [rcx-0x1]; push rsp; ret; 
0x000000004736e3: idiv edi; inc dword ptr [rcx]; ret; 
0x00000000473fd2: idiv edi; jmp far fword ptr [rcx]; 
0x0000000047255f: idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000047356f: idiv edi; jmp qword ptr [rax]; 
0x00000000460f73: idiv edi; jmp qword ptr [rsi+0x2e]; 
0x00000000478300: idiv edi; jmp qword ptr [rsi+0x66]; 
0x00000000416d4f: idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000416d4e: idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000047c88b: idiv edi; jmp qword ptr [rsi-0x70]; 
0x000000004748cc: idiv edi; jmp qword ptr [rsi-0x77]; 
0x00000000474278: idiv rdi; inc dword ptr [rcx-0x1]; push rsp; ret; 
0x00000000478a32: idiv rdi; jmp qword ptr [rsi+0x2e]; 
0x00000000484c6b: imul al; outsd dx, [rsi]; jne short 0x0000000000484c6d; jmp qword ptr [rsi+0xf]; 
0x00000000411bd7: imul al; push rbx; mov ah, 0x4; add [rax-0x77], cl; ret; 
0x00000000430d17: imul al; ret; 
0x0000000040775d: imul eax, 0xc2b2ae35; mov edx, eax; shr edx, 0x10; xor eax, edx; ret; 
0x00000000413ae6: imul eax, [rcx+0xf], 0x945c094; fadd st, dword ptr [rax-0x80]; jmp far fword ptr [rdi+0x41]; 
0x00000000426f84: imul eax, [rcx+0xf], 0xffffffb6; lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x00000000484c95: imul eax, [rcx+rax], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000431bf0: imul eax, [rcx], 0x0; cmovne rax, rdx; ret; 
0x00000000436227: imul eax, [rcx], 0x894d0000; ret far; 
0x00000000435c27: imul eax, [rdi], 0x894d0000; ret far; 
0x000000004461ce: imul eax, [rip+0x487c5162], 0x62067111; push rcx; jl short 0x0000000000446223; adc [rcx+0x7], edi; ret; 
0x0000000045ea55: imul eax, [rip-0x76b40000], 0x49082444; mov edi, [rax]; call rbx; 
0x0000000045e89d: imul eax, [rsi], 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000470471: imul eax, edi; lea r12, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x0000000048976f: imul eax; sti; ret; 
0x00000000422df3: imul eax; xlat [rbx]; ret; 
0x0000000041efa5: imul ecx, [rax+rax], 0xc4834801; sbb [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x0000000041ecb0: imul ecx, [rax+rax], 0xf; add eax, 0xffff28e9; jmp qword ptr [rsi+0xf]; 
0x0000000042e3bb: imul ecx, [rbx], 0x5b050f00; ret; 
0x00000000436f97: imul ecx, [rbx], 0x894d0000; ret far; 
0x00000000421b84: imul ecx, [rcx+0x2b], 0x47; and [rax+0x1], cl; ret; 
0x00000000438177: imul ecx, [rcx], 0x894d0000; ret far; 
0x00000000435927: imul ecx, [rdx], 0x894d0000; ret far; 
0x00000000431fd1: imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x0000000042ac06: imul edi, ebp, 0x3145ffff; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x00000000446067: imul edi, ebp, 0x487c5162; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x00000000445e2d: imul edi, ebp, 0x487cd162; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x00000000476b6b: imul edi, ebx, 0xffffffff; call qword ptr [rax+0x188d8944]; 
0x00000000498195: imul edi, ecx, 0x66d1ebff; nop [rax+rax]; pop rbp; ret; 
0x00000000435327: imul edx, [rax], 0x894d0000; ret far; 
0x00000000435027: imul edx, [rbx], 0x894d0000; ret far; 
0x00000000456593: imul edx, [rdx], 0x634b0006; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000434d27: imul edx, [rsi], 0x894d0000; ret far; 
0x000000004626c1: imul esi, 0x1; add [rax-0x77], cl; ret; 
0x00000000428419: imul esp, [rax+0x5b], 0x5d; pop r12; ret; 
0x000000004296cc: imul esp, [rbx*2+0x10438941], 0x41; mov dword ptr [rbx+0x14], 0x0; ret; 
0x00000000485668: imul esp, [rdx+0x49], 0x39740039; leave; xor eax, eax; ret; 
0x000000004712a1: imul esp, edi, 0xfffffffe; jmp qword ptr [rsi+0x2e]; 
0x00000000470470: imul rax, rdi; lea r12, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x000000004847e6: in al, 0x0; add [rax], al; syscall; 
0x00000000430f46: in al, 0x1; add [rax-0x73], cl; adc eax, 0x1e5e0; cmovne rax, rdx; ret; 
0x0000000049ec58: in al, 0x1d; add [rax], al; mov [rbx+0x20], rax; pop rbx; ret; 
0x000000004676af: in al, 0x29; ret; 
0x0000000048a366: in al, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x0000000043d246: in al, 0x4c; mov [rdi-0x14], ebx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000040dc92: in al, 0x4c; mov eax, esp; pop r12; ret; 
0x00000000472461: in al, 0x4c; mov edx, esp; call qword ptr [r13+0x38]; 
0x00000000411d95: in al, 0x5b; pop rbp; mov rax, r12; pop r12; ret; 
0x00000000481d96: in al, 0x5d; mov rax, r12; pop r12; pop r13; ret; 
0x00000000455e08: in al, 0x6; add [rax], al; ret; 
0x0000000045df5d: in al, 0x75; sub [rax-0x75], cl; jge short 0x000000000045df64; call rbx; 
0x000000004864e0: in al, 0xb9; add eax, 0x401f0f00; add [rax-0x77], cl; ret far; 
0x000000004a8073: in al, 0xe9; ret far; 
0x00000000484bcb: in al, 0xeb; ret far; 
0x000000004425a9: in al, 0xf3; movq [rdi-0x10], mm1; ret; 
0x0000000045a372: in al, 0xf3; ret; 
0x0000000047370b: in al, 0xf; lahf; ret; 
0x000000004772b7: in al, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000042d86a: in al, dx; adc [rax-0x7d], cl; call qword ptr [rax]; 
0x000000004735af: in al, dx; add [rax-0x8ff43], eax; jmp qword ptr [rax]; 
0x00000000431afb: in al, dx; add [rax], al; cmovne rax, rdx; ret; 
0x000000004a1661: in al, dx; add al, [rax]; divss xmm0, [rip+0x2ec10]; ret; 
0x000000004a1669: in al, dx; add al, [rax]; ret; 
0x000000004739c7: in al, dx; add ch, cl; ret far; 
0x0000000040a4d4: in al, dx; add r11b, r8b; nop [rax+rax]; mov rax, 0x4dec40; ret; 
0x0000000040a4e3: in al, dx; add r11b, r8b; nop [rax+rax]; mov rax, 0x4dee80; ret; 
0x00000000480320: in al, dx; idiv ch; jmp qword ptr [rsi+0x2e]; 
0x0000000044299f: in al, dx; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043d24a: in al, dx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x000000004645f0: in al, dx; mov bh, 0xfc; dec dword ptr [rax-0x77]; ret; 
0x000000004707ea: in al, dx; mov rdx, r15; mov rsi, r12; mov rdi, r14; call rbp; 
0x000000004429a9: in al, dx; movdqu [rdi-0x10], xmm1; ret; 
0x0000000045fa5b: in al, dx; nop [rax]; endbr64; ret; 
0x00000000408b3f: in al, dx; or [rax+0x63], cl; add al, 0xb1; add rax, rcx; notrack jmp rax; 
0x000000004033c8: in al, dx; or [rax+0x63], cl; add al, 0xba; add rax, rdx; notrack jmp rax; 
0x0000000040340b: in al, dx; or eax, 0x79c08500; ret far; 
0x000000004a4459: in al, dx; sbb [rax-0x75], cl; or [rax-0x77], cl; ret; 
0x00000000472fbc: in al, dx; stc; call qword ptr [rax-0x3f7c3977]; 
0x000000004a0d67: in al, dx; sti; jmp qword ptr [rsi+0xf]; 
0x00000000404c54: in al, dx; xor eax, eax; ret; 
0x0000000049f757: in eax, 0x0; add [rax], al; add al, ch; call far fword ptr [rax]; 
0x0000000048f80d: in eax, 0x48; mov esi, ebp; syscall; 
0x0000000043d056: in eax, 0x4c; mov [rdi-0x13], ebx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x000000004347cf: in eax, 0x74; ffreep st(5); std; xlat [rbx]; ret far; 
0x0000000049c92a: in eax, 0xb8; add [rax], eax; add [rax], al; ret; 
0x00000000426785: in eax, 0xb; add [rdi], cl; add eax, 0xffff2be9; call qword ptr [rax+0xff0c889]; 
0x000000004960e6: in eax, 0xdf; loopne 0x0000000000496073; ret; 
0x0000000045a839: in eax, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x00000000442629: in eax, 0xf3; movq [rdi-0x10], mm1; ret; 
0x00000000462b7c: in eax, 0xf9; call qword ptr [rax-0x5e1f00d]; 
0x00000000462baf: in eax, 0xf9; jmp qword ptr [rsi+0xf]; 
0x000000004841d3: in eax, 0xf; je short 0x00000000004841f0; add rax, 0x2; ret; 
0x0000000047d543: in eax, 0xff; jmp qword ptr [rsi+0x2e]; 
0x000000004954bf: in eax, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000040a7f4: in eax, dx; add [r13-0x3d], r11b; mov rax, 0x4dee40; pop rbp; ret; 
0x00000000494852: in eax, dx; add [rax+0x39], ecx; ret; 
0x0000000040a464: in eax, dx; add r11b, r8b; nop [rax+rax]; mov rax, 0x4deec0; ret; 
0x0000000040a483: in eax, dx; add r11b, r8b; nop [rax+rax]; mov rax, 0x4e11a0; ret; 
0x0000000049e8b4: in eax, dx; cmp cx, 0x7fff; jne short 0x000000000049e89c; mov eax, 0x1; ret; 
0x0000000045df9e: in eax, dx; jne short 0x000000000045dff0; mov rdi, [r12]; call rbx; 
0x0000000045dfce: in eax, dx; jne short 0x000000000045e050; mov rdi, [r12]; call rbx; 
0x00000000442a1f: in eax, dx; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000458ec2: in eax, dx; lea rax, [rcx-0x1]; ret; 
0x0000000043d05a: in eax, dx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000408a02: in eax, dx; mov eax, 0xffffffef; ret; 
0x00000000442a29: in eax, dx; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043031d: in eax, dx; or [rax-0x7f], ecx; sti; jmp far fword ptr [rcx]; 
0x0000000042681a: in eax, dx; ret; 
0x00000000459012: in eax, dx; sub rax, 0x1; ret; 
0x0000000045933b: inc bl; cmp dl, 0x1; jb short 0x0000000000459345; mov [rdi], cl; ret; 
0x0000000045eafa: inc byte ptr [rax]; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045d526: inc byte ptr [rbp-0x60f0be2e]; vpaddsw ymm0, ymm15, [rcx+0xf]; lahf; ret; 
0x0000000046d9e9: inc byte ptr [rbx]; je short 0x000000000046d9f0; ret; 
0x00000000485137: inc byte ptr [rip-0x38c6b800]; ja short 0x0000000000485168; xor eax, eax; ret; 
0x0000000048efac: inc dword ptr [r8+0x10]; pop rbx; pop rbp; ret; 
0x0000000048efad: inc dword ptr [rax+0x10]; pop rbx; pop rbp; ret; 
0x00000000420c00: inc dword ptr [rax+0x3145fde6]; ror byte ptr [rcx-0xc916ed], 0xff; jmp qword ptr [rsi-0x70]; 
0x00000000414128: inc dword ptr [rax+0xf000678]; test [rcx+rdi*8-0x1], eax; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x0000000041429d: inc dword ptr [rax+0xf000a78]; test edi, ecx; idiv edi; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x000000004a2b88: inc dword ptr [rax+0xf]; mov dh, 0xf6; movsxd rax, [r12+rsi*4]; add rax, r12; notrack jmp rax; 
0x000000004a2b4b: inc dword ptr [rax+0xf]; mov dh, 0xf6; movsxd rax, [r9+rsi*4]; add rax, r9; notrack jmp rax; 
0x00000000495392: inc dword ptr [rax-0x13b43]; jmp qword ptr [rdi+0x75]; 
0x0000000049503b: inc dword ptr [rax-0x13b43]; jmp qword ptr [rdi-0x75]; 
0x0000000045bc4b: inc dword ptr [rax-0x7af0f506]; ret; 
0x000000004888c1: inc dword ptr [rax-0x7bf0c506]; ret; 
0x00000000413b5e: inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000473ea0: inc dword ptr [rax-0x8ff43]; jmp qword ptr [rax]; 
0x0000000047a476: inc dword ptr [rax-0x93343]; jmp qword ptr [rax]; 
0x000000004a138a: inc dword ptr [rax]; add [rax-0x75], cl; je short 0x00000000004a13b5; adc [rcx-0x77], cl; ret; 
0x0000000047cab5: inc dword ptr [rax]; add [rax], al; add [rax-0x75], cl; add al, 0xc6; jmp rax; 
0x00000000473a29: inc dword ptr [rax]; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000043b191: inc dword ptr [rax]; add [rax], al; and ecx, 0xff; sub eax, ecx; ret; 
0x0000000045a7e0: inc dword ptr [rax]; add [rax], al; cmove rax, rcx; ret; 
0x0000000043b197: inc dword ptr [rax]; add [rax], al; sub eax, ecx; ret; 
0x000000004293ca: inc dword ptr [rax]; add [rsi+0x1], dh; ret; 
0x00000000475775: inc dword ptr [rbp+0x22850fdb]; sbb [rax], eax; add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x0000000040dc8f: inc dword ptr [rbp+0x31]; in al, 0x4c; mov eax, esp; pop r12; ret; 
0x00000000484bc8: inc dword ptr [rbp+0x31]; in al, 0xeb; ret far; 
0x0000000045c69e: inc dword ptr [rbp+0x31]; jmp qword ptr [rdi+rax*8]; 
0x000000004201d2: inc dword ptr [rbp+0x31]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000042c576: inc dword ptr [rbp+0x31]; shl byte ptr [rdi+rax*8], 0xc; add [rax], al; add [rcx+rcx*4-0x40], cl; ret; 
0x00000000408f48: inc dword ptr [rbp+0x480b78c0]; add esp, 0x18; pop rbp; pop r12; ret; 
0x00000000497e94: inc dword ptr [rbp+0x480e74c0]; lea eax, [rip+0x4d1a0]; mov [rip+0x4d181], rax; add rsp, 0x8; ret; 
0x0000000048fa42: inc dword ptr [rbp+0x481975c0]; mov dword ptr [rbx], 0x0; pop rbx; or dword ptr [rip+0x536f2], 0x1; ret; 
0x0000000049a88f: inc dword ptr [rbp+0x481a74c0]; lea ebx, [rbp+rdx*8]; nop [rax]; call qword ptr [rbx]; 
0x00000000407fa2: inc dword ptr [rbp+0x48b979c0]; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000403107: inc dword ptr [rbp-0x17fa8101]; call qword ptr [rcx-0x38b7fffb]; 
0x0000000049eb66: inc dword ptr [rbp-0x3f6af040]; add rsp, 0x8; movzx eax, al; neg eax; ret; 
0x00000000473708: inc dword ptr [rbp-0x7b]; in al, 0xf; lahf; ret; 
0x0000000040263e: inc dword ptr [rbp-0x7b]; shl byte ptr [rsp+rcx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000048c46a: inc dword ptr [rbx+0x7425087b]; fisttp word ptr [rax-0x7d], st; ret; 
0x000000004030b3: inc dword ptr [rbx+0x77401f8]; xor eax, eax; pop r12; ret; 
0x00000000464d00: inc dword ptr [rbx+0x801340d]; add [rdx], al; add rsp, 0x8; ret; 
0x00000000465c98: inc dword ptr [rbx-0x16feeb93]; ret far; 
0x0000000047d02f: inc dword ptr [rbx-0x4ef43]; jmp qword ptr [rax]; 
0x0000000041c902: inc dword ptr [rbx-0x7af0fe08]; jmp rbx; 
0x000000004188a3: inc dword ptr [rbx-0x7af0fe08]; ret far; 
0x00000000402079: inc dword ptr [rbx-0x7cfa8c]; mov eax, [0xfffffff2b8c30175]; ret; 
0x0000000046ee73: inc dword ptr [rbx-0x80]; jl short 0x000000000046eeb4; jmp far fword ptr [rsi]; 
0x000000004739a8: inc dword ptr [rbx-0x90743]; call qword ptr [rax]; 
0x00000000494c21: inc dword ptr [rbx-0x9b43]; jmp qword ptr [rsi+0xf]; 
0x0000000045a8bb: inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000004a450c: inc dword ptr [rbx]; jne short 0x00000000004a4530; add rsp, 0x8; ret; 
0x0000000045a80c: inc dword ptr [rbx]; ret; 
0x00000000402675: inc dword ptr [rcx+0x5c]; pop r13; ret; 
0x00000000473047: inc dword ptr [rcx+0xf]; mov esi, 0x20e883c3; cdqe; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000475d94: inc dword ptr [rcx+0xf]; mov esi, 0x358d48c7; mov al, [0x984820e88300069b]; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000049ea11: inc dword ptr [rcx+rbp-0x40]; mov [rdx], eax; mov eax, 0x2; ret; 
0x0000000042540b: inc dword ptr [rcx+rcx*4-0x20]; pop rbx; pop rbp; pop r12; ret; 
0x00000000480cd4: inc dword ptr [rcx+rcx*4-0x2]; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000047c731: inc dword ptr [rcx+rcx*4-0x7b]; mov eax, 0xe8fffffa; xchg edx, eax; ret far; 
0x0000000047427b: inc dword ptr [rcx-0x1]; push rsp; ret; 
0x00000000417a60: inc dword ptr [rcx-0x75]; add [rbx-0x7bf0fd08], al; call qword ptr [rcx]; 
0x0000000047611c: inc dword ptr [rcx-0x77]; fadd st, dword ptr [rbp-0x777af040]; add eax, 0x89440000; ror byte ptr [rcx-0x4ef73], 0x1; jmp far fword ptr [rcx]; 
0x0000000046a5c1: inc dword ptr [rcx-0x77]; ret; 
0x000000004739c4: inc dword ptr [rcx-0x7d]; in al, dx; add ch, cl; ret far; 
0x00000000476028: inc dword ptr [rcx-0x80]; call far fword ptr [rax+0x48]; 
0x00000000476df9: inc dword ptr [rcx-0x80]; jmp qword ptr [rdi+rcx]; 
0x0000000047b625: inc dword ptr [rcx]; add [rax], al; add [rax+0x39], cl; ret; 
0x0000000047b996: inc dword ptr [rcx]; add [rax], al; add [rax-0x75], cl; add al, 0xc6; jmp rax; 
0x0000000047c5ab: inc dword ptr [rcx]; add [rax], al; add [rax-0x75], cl; add al, 0xf0; jmp rax; 
0x000000004768a3: inc dword ptr [rcx]; ret far; 
0x00000000407a37: inc dword ptr [rcx]; ret; 
0x00000000431e2d: inc dword ptr [rsi+0x8]; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004590ea: inc eax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000004590e7: inc eax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000004a815e: inc ebx; endbr64; sub rsp, 0x8; add rsp, 0x8; ret; 
0x0000000040bbde: inc ebx; mov eax, 0xffffff20; ret; 
0x0000000040af90: inc ebx; mov eax, 0xffffff21; ret; 
0x0000000040af8a: inc ebx; mov eax, 0xffffff22; ret; 
0x0000000040af84: inc ebx; mov eax, 0xffffff23; ret; 
0x0000000040af7e: inc ebx; mov eax, 0xffffff2a; ret; 
0x0000000040af78: inc ebx; mov eax, 0xffffff2b; ret; 
0x0000000040af72: inc ebx; mov eax, 0xffffff2c; ret; 
0x0000000040af6c: inc ebx; mov eax, 0xffffff2d; ret; 
0x0000000040af66: inc ebx; mov eax, 0xffffff34; ret; 
0x0000000040af60: inc ebx; mov eax, 0xffffff35; ret; 
0x0000000040af54: inc ebx; mov eax, 0xffffff36; ret; 
0x0000000040af5a: inc ebx; mov eax, 0xffffff37; ret; 
0x0000000040af30: inc ebx; mov eax, 0xffffff88; ret; 
0x0000000040af1e: inc ebx; mov eax, 0xffffff89; ret; 
0x0000000040af18: inc ebx; mov eax, 0xffffff8b; ret; 
0x0000000040af2a: inc ebx; mov eax, 0xffffff8c; ret; 
0x0000000040af00: inc ebx; mov eax, 0xffffff8d; ret; 
0x0000000040af3c: inc ebx; mov eax, 0xffffff8e; ret; 
0x0000000040af42: inc ebx; mov eax, 0xffffff8f; ret; 
0x0000000040af12: inc ebx; mov eax, 0xffffff90; ret; 
0x0000000040af36: inc ebx; mov eax, 0xffffff91; ret; 
0x0000000040af0c: inc ebx; mov eax, 0xffffff92; ret; 
0x0000000040af24: inc ebx; mov eax, 0xffffff93; ret; 
0x0000000040af4e: inc ebx; mov eax, 0xffffff94; ret; 
0x0000000040aef4: inc ebx; mov eax, 0xffffff95; ret; 
0x0000000040aefa: inc ebx; mov eax, 0xffffff96; ret; 
0x0000000040af06: inc ebx; mov eax, 0xffffff98; ret; 
0x0000000040af48: inc ebx; mov eax, 0xffffff9b; ret; 
0x000000004023e2: inc ebx; mov eax, 0xffffffea; pop rbx; ret; 
0x0000000040a9ec: inc ebx; mov eax, 0xffffffea; ret; 
0x0000000045f8f6: inc ebx; nop [rax+rax]; endbr64; mov eax, 0x63; syscall; 
0x00000000428818: inc ebx; nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000428848: inc ebx; nop [rax+rax]; endbr64; ret; 
0x00000000456423: inc ebx; nop [rax+rax]; mov [rdi], rdx; ret; 
0x0000000040aec4: inc ebx; nop [rax+rax]; mov eax, 0xffffff8a; ret; 
0x0000000040aeb4: inc ebx; nop [rax+rax]; mov eax, 0xffffff97; ret; 
0x0000000040aee4: inc ebx; nop [rax+rax]; mov eax, 0xffffff99; ret; 
0x0000000040aed4: inc ebx; nop [rax+rax]; mov eax, 0xffffff9a; ret; 
0x000000004564a4: inc ebx; nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000004563e2: inc ebx; nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x00000000458b99: inc ebx; nop [rax+rax]; xor eax, eax; ret; 
0x0000000045ce1a: inc ebx; nop [rax]; endbr64; mov eax, 0x1; syscall; 
0x00000000498f8a: inc ebx; nop [rax]; endbr64; mov eax, 0x27; syscall; 
0x0000000042880a: inc ebx; nop [rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000042882a: inc ebx; nop [rax]; endbr64; xor eax, eax; ret; 
0x00000000408a07: inc ebx; nop [rax]; xor eax, eax; ret; 
0x00000000490dbd: inc ebx; sub eax, edx; ret; 
0x0000000049b282: inc edi; sbb [rdx], al; add [rax], al; add [rax-0x77], cl; ret; 
0x000000004747c0: inc edi; test eax, edi; idiv bh; call qword ptr [rax]; 
0x0000000045c80a: inc esi; jmp far fword ptr [r15]; 
0x0000000047356b: inc esi; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x00000000478cdf: inc esi; test esp, ecx; idiv bh; jmp qword ptr [rax]; 
0x000000004564a3: inc r11d; nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000004590e9: inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000004590e6: inc rax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x00000000407e1f: insb [rdi], dx; add al, [rax]; nop [rax+rax]; ret; 
0x0000000049d6a0: insb [rdi], dx; and edi, esp; jmp qword ptr [rsi+0x2e]; 
0x00000000485667: insb [rdi], dx; imul esp, [rdx+0x49], 0x39740039; leave; xor eax, eax; ret; 
0x000000004221f7: insb [rdi], dx; ret far; 
0x0000000041e7aa: insb [rdi], dx; ret; 
0x00000000426e73: insb [rdi], dx; ror dword ptr [rdi], 0x11; cmp [r11+0x5d], bl; pop r12; ret; 
0x00000000464f0c: insb [rdi], dx; ror dword ptr [rdi], 0x11; ret; 
0x00000000480d98: insb [rdi], dx; ror dword ptr [rdi], 0x11; xor [rcx+0x5d5b7453], cl; pop r12; ret; 
0x0000000042a56f: insd [rdi], dx; idiv bh; jmp qword ptr [rsi+0x66]; 
0x00000000404dac: insd [rdi], dx; or [rdi], cl; xchg [rdi+rdi*8-0x1], esp; call far fword ptr [rbx+0x48]; 
0x00000000426871: insd [rdi], dx; ror byte ptr [rax-0x77], 0x57; sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x00000000421b5d: insd [rdi], dx; sbb [rax-0x77], cl; ret far; 
0x0000000048897b: iretd; add eax, 0x3d8b4800; ret; 
0x00000000482de2: iretd; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx+rsi]; ret; 
0x000000004233fa: iretd; cmp rax, rdi; jbe short 0x0000000000423420; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000040cc53: iretd; enter 0x9, 0xc3; nop [rax+rax]; lea rax, [rip+0x9c8cc]; ret; 
0x000000004142a4: iretd; idiv edi; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000495892: iretd; ja short 0x0000000000495878; mov eax, r8d; ret; 
0x000000004595de: iretd; jb 0x0000000000459748; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000459949: iretd; jb 0x0000000000459b15; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000459d94: iretd; jb 0x0000000000459fd0; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000433462: iretd; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x00000000499323: iretd; nop [rax]; call rax; 
0x00000000427ceb: iretd; or eax, [rax]; syscall; 
0x000000004a45ad: iretd; xchg ax, ax; xor eax, eax; ret; 
0x000000004a18db: ja 0x0000000000401723; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x000000004a29ce: ja 0x0000000000401737; movzx eax, al; movsxd rax, [r13+rax*4]; add rax, r13; notrack jmp rax; 
0x000000004a2b83: ja 0x0000000000401737; movzx esi, sil; movsxd rax, [r12+rsi*4]; add rax, r12; notrack jmp rax; 
0x000000004a2b46: ja 0x0000000000401737; movzx esi, sil; movsxd rax, [r9+rsi*4]; add rax, r9; notrack jmp rax; 
0x00000000401be3: ja 0x00000000004019d0; lea rdx, [rip+0xb5df3]; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x00000000401be4: ja 0x00000000004019d0; lea rdx, [rip+0xb5df3]; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x00000000405ad7: ja 0x0000000000405b80; mov eax, [rbx+0x20]; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x00000000405a8b: ja 0x0000000000405b80; mov edx, [rbx+0x10]; movsxd rdx, [r15+rdx*4]; add rdx, r15; notrack jmp rdx; 
0x00000000409763: ja 0x000000000040938f; lea rdx, [rip+0x9fd78]; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x000000004096d0: ja 0x000000000040938f; movsxd rax, [rbx+rcx*4]; add rax, rbx; notrack jmp rax; 
0x0000000040dbac: ja 0x000000000040dcfc; lea rcx, [rip+0x9c0e7]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000044e8c9: ja 0x000000000044e960; je short 0x000000000044e950; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x0000000044f324: ja 0x000000000044eff0; je 0x000000000044efe0; vzeroupper; ret; 
0x0000000044f200: ja 0x000000000044f0d0; je 0x000000000044f0c0; vzeroupper; ret; 
0x0000000045a276: ja 0x000000000045a2fc; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000045a74c: ja 0x000000000045a8c2; lea rsi, [rip+0x5d1e7]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x0000000046f133: ja 0x000000000046f213; movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x000000004727e9: ja 0x0000000000472e91; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000478c39: ja 0x00000000004794f1; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000047c3ac: ja 0x000000000047b868; movzx eax, byte ptr [rdx+rax]; lea rcx, [rip+0x63c83]; jmp qword ptr [rcx+rax*8]; 
0x0000000047c7d1: ja 0x000000000047b868; movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x6375e]; jmp qword ptr [rax+rcx*8]; 
0x0000000047c5f0: ja 0x000000000047b868; movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x6383f]; jmp qword ptr [rax+rcx*8]; 
0x0000000047eae1: ja 0x000000000047ed30; lea rcx, [rip+0x49d12]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000047f295: ja 0x000000000047f4c0; lea rcx, [rip+0x497a2]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000487126: ja 0x000000000048724d; movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x0000000048bd73: ja 0x000000000048c3a0; lea rsi, [rip+0x3dd60]; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x0000000048c2b0: ja 0x000000000048cf37; lea rdi, [rip+0x3d8bb]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x000000004a32c4: ja 0x00000000004a3356; mov eax, [rbx+0x8]; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x00000000402062: ja short 0x0000000000402083; lea rcx, [rip+0xa6f9d]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000407d25: ja short 0x0000000000407ce8; cmp esi, edx; setb al; ret; 
0x00000000407d36: ja short 0x0000000000407d14; mov eax, 0x1; ret; 
0x00000000407cf3: ja short 0x0000000000407d2d; lea rdx, [rip+0xa16fc]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000407d63: ja short 0x0000000000407d97; lea rdx, [rip+0xa16cc]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000407d43: ja short 0x0000000000407da3; lea rdx, [rip+0xa16cc]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000040aaac: ja short 0x000000000040aac0; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x0000000040aac9: ja short 0x000000000040aad8; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000040b4b3: ja short 0x000000000040b495; or [rax], eax; ret; 
0x0000000040b72c: ja short 0x000000000040b740; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x0000000040b749: ja short 0x000000000040b758; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000040c24c: ja short 0x000000000040c260; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x0000000040c269: ja short 0x000000000040c278; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000040cd8c: ja short 0x000000000040cda0; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x0000000040cda9: ja short 0x000000000040cdb8; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000040d7e3: ja short 0x000000000040d7a2; or [rax], eax; ret; 
0x0000000040dc62: ja short 0x000000000040dbf6; lea rdx, [rip+0x9c04d]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000411495: ja short 0x0000000000411515; lea rsi, [rip+0xa3381]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000411d6b: ja short 0x0000000000411d93; lea rdx, [rip+0xa2c70]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000427a5c: ja short 0x0000000000427a50; lea eax, [rdx+rdi]; ret; 
0x000000004285ed: ja short 0x0000000000428607; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x00000000429168: ja short 0x000000000042919b; test byte ptr [rcx+rcx*4-0x11], 0xe8; fnstsw [rsi-0x3]; dec dword ptr [rax-0x77]; ret; 
0x00000000430908: ja short 0x0000000000430968; lea rdx, [rip+0x85ba7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004319c5: ja short 0x000000000043194a; add al, [rax]; cmove rax, rdx; ret; 
0x00000000438ed8: ja short 0x0000000000438e9d; nop [rax+rax]; xor eax, eax; vzeroupper; ret; 
0x0000000043f1e6: ja short 0x000000000043f1ef; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000446337: ja short 0x0000000000446332; vmovups [rdi-0x200], zmm15; ret; 
0x0000000044f0ba: ja short 0x000000000044f07f; nop [rax]; mov [rdi], dl; vzeroupper; ret; 
0x0000000044f0c4: ja short 0x000000000044f089; nop [rax+rax]; mov [rdi], dx; vzeroupper; ret; 
0x000000004553f7: ja short 0x00000000004553fb; ret; 
0x00000000455413: ja short 0x0000000000455419; mov [rdi], ecx; ret; 
0x00000000455454: ja short 0x000000000045545e; mov [rdi], rcx; ret; 
0x000000004554d9: ja short 0x00000000004554eb; ret; 
0x0000000045552f: ja short 0x0000000000455545; ret; 
0x000000004555b1: ja short 0x00000000004555cb; ret; 
0x00000000455c77: ja short 0x0000000000455c7b; sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000004564f0; ret; 
0x00000000455e39: ja short 0x0000000000455e4b; sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000004564f0; ret; 
0x00000000455ebf: ja short 0x0000000000455ed5; sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000004564f0; ret; 
0x00000000455f41: ja short 0x0000000000455f5b; sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000004564f0; ret; 
0x000000004565e7: ja short 0x0000000000456609; sub r8, 0x10; jb 0x0000000000455b99; movdqu [rdi+0x30], xmm7; ret; 
0x00000000456a37: ja short 0x0000000000456a3b; lea rax, [rdi+0x2]; ret; 
0x00000000456a53: ja short 0x0000000000456a59; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x00000000456aa4: ja short 0x0000000000456aae; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x00000000456b89: ja short 0x0000000000456b9b; lea rax, [rdi+0x10]; ret; 
0x00000000456bff: ja short 0x0000000000456c15; lea rax, [rdi+0x14]; ret; 
0x00000000456c81: ja short 0x0000000000456c9b; lea rax, [rdi+0x18]; ret; 
0x000000004595f8: ja short 0x0000000000459620; jb short 0x0000000000459601; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000004597c4: ja short 0x00000000004597e6; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x00000000459892: ja short 0x00000000004598b4; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x00000000459968: ja short 0x00000000004599a5; jb short 0x0000000000459971; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000459bac: ja short 0x0000000000459bee; vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x00000000459cc8: ja short 0x0000000000459d0a; vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x00000000459db8: ja short 0x0000000000459e0d; jb short 0x0000000000459dc1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000045a083: ja short 0x000000000045a087; vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000045a20d: ja short 0x000000000045a211; vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000045a2e6: ja short 0x000000000045a2f3; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000045a387: ja short 0x000000000045a39e; jb short 0x000000000045a38d; mov [rdi], cl; ret; 
0x0000000045a43d: ja short 0x000000000045a44e; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x0000000045a3ed: ja short 0x000000000045a457; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x0000000045a4fd: ja short 0x000000000045a4c2; vmovdqu [rdi+rdx-0x10], xmm0; vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x0000000045a50b: ja short 0x000000000045a4d0; mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; vzeroupper; ret; 
0x0000000045a517: ja short 0x000000000045a4dc; mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; vzeroupper; ret; 
0x0000000045a521: ja short 0x000000000045a4e6; mov [rdi+rdx-0x2], cx; mov [rdi], cx; vzeroupper; ret; 
0x0000000045a4f5: ja short 0x000000000045a523; jb short 0x000000000045a4fb; mov [rdi], cl; vzeroupper; ret; 
0x0000000045a5d7: ja short 0x000000000045a5eb; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x0000000045a577: ja short 0x000000000045a5f4; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x0000000045a6c5: ja short 0x000000000045a68a; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x0000000045a6d3: ja short 0x000000000045a698; vmovdqu [rdi+rdx-0x10], xmm0; vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x0000000045a6e1: ja short 0x000000000045a6a6; mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; vzeroupper; ret; 
0x0000000045a6ed: ja short 0x000000000045a6b2; mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; vzeroupper; ret; 
0x0000000045a6f7: ja short 0x000000000045a6bc; mov [rdi+rdx-0x2], cx; mov [rdi], cx; vzeroupper; ret; 
0x0000000045a6bd: ja short 0x000000000045a6f9; jb short 0x000000000045a6c3; mov [rdi], cl; vzeroupper; ret; 
0x0000000045b8ec: ja short 0x000000000045b910; hlt; mov edi, edx; mov eax, r8d; syscall; 
0x0000000045bb1e: ja short 0x000000000045bb88; lea rdx, [rip+0x5c375]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000045bed0: ja short 0x000000000045bed8; ret; 
0x0000000045bec1: ja short 0x000000000045bef0; mov eax, 0x4; syscall; 
0x0000000045bf2f: ja short 0x000000000045bf38; ret; 
0x0000000045bf20: ja short 0x000000000045bf50; mov eax, 0x5; syscall; 
0x0000000045c0b8: ja short 0x000000000045c110; ret; 
0x0000000045c15d: ja short 0x000000000045c1b0; ret; 
0x0000000045c1f1: ja short 0x000000000045c1f8; ret; 
0x0000000045c32d: ja short 0x000000000045c370; ret; 
0x0000000045cb41: ja short 0x000000000045cb48; ret; 
0x0000000045cdfe: ja short 0x000000000045ce08; ret; 
0x0000000045ce31: ja short 0x000000000045ce38; ret; 
0x0000000045ce6a: ja short 0x000000000045ce70; ret; 
0x0000000045d05c: ja short 0x000000000045d0c0; pop rbx; pop rbp; ret; 
0x0000000045fb0c: ja short 0x000000000045fb24; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045fb22: ja short 0x000000000045fb44; ret; 
0x0000000045fb78: ja short 0x000000000045fb8c; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x00000000460290: ja short 0x00000000004602b0; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000046144d: ja short 0x0000000000461420; movsxd rax, [rbp+rax*4]; add rax, rbp; notrack jmp rax; 
0x00000000461406: ja short 0x0000000000461420; movsxd rax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x0000000047e9e5: ja short 0x000000000047ea10; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000047f1a0: ja short 0x000000000047f1b0; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x0000000047f235: ja short 0x000000000047f260; lea rdi, [rip+0x4974a]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000048167c: ja short 0x0000000000481670; lea eax, [rdx+rdi]; ret; 
0x00000000483545: ja short 0x000000000048350a; nop [rax+rax]; mov rax, r8; vzeroupper; ret; 
0x00000000483555: ja short 0x000000000048351a; nop [rax+rax]; xor eax, eax; ret; 
0x000000004834d8: ja short 0x0000000000483522; add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x000000004846c9: ja short 0x000000000048468e; nop [rax+rax]; xor eax, eax; ret; 
0x000000004847f5: ja short 0x00000000004847c0; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000484f60: ja short 0x0000000000484f68; ret; 
0x00000000484f51: ja short 0x0000000000484f80; mov eax, 0x6; syscall; 
0x00000000484fc5: ja short 0x0000000000484fd0; ret; 
0x00000000484fb6: ja short 0x0000000000484fe8; mov eax, 0x106; syscall; 
0x0000000048513d: ja short 0x0000000000485168; xor eax, eax; ret; 
0x0000000048f0db: ja short 0x000000000048f0e8; add rsp, 0x8; ret; 
0x0000000048fdf9: ja short 0x000000000048fe1b; mov rdi, [rdi+0x28]; bnd call r11; 
0x00000000490289: ja short 0x00000000004902ab; mov rdi, [rdi+0x28]; bnd call r11; 
0x000000004904e5: ja short 0x0000000000490507; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000049254d: ja short 0x0000000000492520; mov rax, r8; ret; 
0x00000000495893: ja short 0x0000000000495878; mov eax, r8d; ret; 
0x00000000498f71: ja short 0x0000000000498f78; ret; 
0x00000000498fb4: ja short 0x0000000000498fc0; ret; 
0x000000004a4361: ja short 0x00000000004a4365; sbb eax, eax; ret; 
0x000000004218f0: jae 0x0000000000421be0; mov edx, r12d; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x000000004216dd: jae 0x0000000000421cd0; mov [rsp+0x10], rcx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000421613: jae 0x0000000000421cf0; lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x0000000042366f: jae 0x0000000000423790; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x00000000423988: jae 0x0000000000423a48; mov rdx, r13; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x00000000423ccc: jae 0x0000000000424000; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000423b6b: jae 0x0000000000424038; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x000000004243bb: jae 0x0000000000424480; mov rdx, r13; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000424bce: jae 0x0000000000424c80; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000439849: jae 0x0000000000439ae0; xor eax, eax; vzeroupper; ret; 
0x00000000443269: jae 0x0000000000443310; lea r11, [rip+0x73dba]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000408850: jae 0x000000001941c0d5; rol byte ptr [rbx+0xfc3eae0], 0x1f; add [rax], r8b; mov eax, 0xffffffea; ret; 
0x0000000040c629: jae short 0x000000000040c63f; add [rax], al; nop [rax]; mov eax, 0xffffff94; ret; 
0x00000000420bf0: jae short 0x0000000000420c3a; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x0000000042103a: jae short 0x000000000042104c; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000421392: jae short 0x00000000004213f5; mov rax, [rsp]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x00000000422a59: jae short 0x0000000000422a9b; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x00000000422b48: jae short 0x0000000000422b52; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x00000000423767: jae short 0x00000000004237c0; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [r15+0x18]; 
0x000000004289b1: jae short 0x00000000004289d8; movzx eax, byte ptr [rax]; ret; 
0x0000000045a8de: jae short 0x000000000045a8db; jmp qword ptr [rsi+0x66]; 
0x0000000045be31: jae short 0x000000000045be34; ret; 
0x0000000045c3b1: jae short 0x000000000045c3b4; ret; 
0x0000000045cf41: jae short 0x000000000045cf44; ret; 
0x0000000045d013: jae short 0x000000000045d016; ret; 
0x0000000045d0f1: jae short 0x000000000045d0f4; ret; 
0x0000000045d121: jae short 0x000000000045d124; ret; 
0x0000000045d151: jae short 0x000000000045d154; ret; 
0x0000000045f8b4: jae short 0x000000000045f8b7; ret; 
0x0000000045f8e4: jae short 0x000000000045f8e7; ret; 
0x0000000045f911: jae short 0x000000000045f914; ret; 
0x0000000046a3d9: jae short 0x000000000046a453; cli; dec dword ptr [rcx-0x77]; ret far; 
0x0000000046ff5d: jae short 0x000000000046ff9f; xor eax, eax; pop rbx; ret; 
0x0000000046ff80: jae short 0x000000000046ffc2; pop rbx; ret; 
0x00000000484ee1: jae short 0x0000000000484ee4; ret; 
0x0000000048f6d8: jae short 0x000000000048f685; xor eax, eax; ret; 
0x000000004924c8: jae short 0x00000000004924ac; mov rax, r8; ret; 
0x0000000049887a: jae short 0x0000000000498870; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000049901c: jae short 0x000000000049902a; mov rdx, [rip+0x4c113]; add word ptr [rdx+rax*2], 0x1; ret; 
0x0000000049c929: jae short 0x000000000049c910; mov eax, 0x1; ret; 
0x0000000049d152: jae short 0x000000000049d19d; shr ecx, cl; mov [rdi], r9; ret; 
0x0000000049ed31: jae short 0x000000000049ed34; ret; 
0x0000000044f250: jb 0x000000000044ee65; vmovdqu [rdi+0x60], ymm7; vzeroupper; ret; 
0x00000000456683: jb 0x0000000000455ad0; lea r11, [rip+0x610e0]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b6e: jb 0x0000000000455ad0; lea r11, [rip+0x61bf5]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b4f: jb 0x0000000000455ad0; lea r11, [rip+0x61c14]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004565ed: jb 0x0000000000455b99; movdqu [rdi+0x30], xmm7; ret; 
0x000000004595df: jb 0x0000000000459748; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000045994a: jb 0x0000000000459b15; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x00000000459d95: jb 0x0000000000459fd0; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000040a42d: jb short 0x000000000040a477; mov eax, 0x4ded80; ret; 
0x0000000040d893: jb short 0x000000000040d852; or [rax], eax; ret; 
0x0000000041d864: jb short 0x000000000041d86f; add [rcx+0x146348d2], cl; xchg esi, eax; add rdx, rsi; notrack jmp rdx; 
0x0000000043b71e: jb short 0x000000000043b727; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043b77d: jb short 0x000000000043b78d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043b7ce: jb short 0x000000000043b7d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043b82b: jb short 0x000000000043b836; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043b86e: jb short 0x000000000043b877; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043b8cd: jb short 0x000000000043b8dd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043b91e: jb short 0x000000000043b927; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043b97b: jb short 0x000000000043b986; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043b9be: jb short 0x000000000043b9c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ba1d: jb short 0x000000000043ba2d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043ba6e: jb short 0x000000000043ba77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bacb: jb short 0x000000000043bad6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bb0e: jb short 0x000000000043bb17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bb6d: jb short 0x000000000043bb7d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043bbbe: jb short 0x000000000043bbc7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bc1b: jb short 0x000000000043bc26; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bc5e: jb short 0x000000000043bc67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bcbd: jb short 0x000000000043bccd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043bd0e: jb short 0x000000000043bd17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bd6b: jb short 0x000000000043bd76; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bdae: jb short 0x000000000043bdb7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043be0d: jb short 0x000000000043be1d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043be5e: jb short 0x000000000043be67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bebb: jb short 0x000000000043bec6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043befe: jb short 0x000000000043bf07; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bf5d: jb short 0x000000000043bf6d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043bfae: jb short 0x000000000043bfb7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c00b: jb short 0x000000000043c016; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c04e: jb short 0x000000000043c057; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c0ab: jb short 0x000000000043c0c0; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c0fe: jb short 0x000000000043c107; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c15b: jb short 0x000000000043c166; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c19e: jb short 0x000000000043c1a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c1fd: jb short 0x000000000043c20d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c24e: jb short 0x000000000043c257; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c2ab: jb short 0x000000000043c2b6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c2ee: jb short 0x000000000043c2f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c34d: jb short 0x000000000043c35d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c39e: jb short 0x000000000043c3a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c3fb: jb short 0x000000000043c406; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c43e: jb short 0x000000000043c447; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c49d: jb short 0x000000000043c4ad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c4ee: jb short 0x000000000043c4f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c54b: jb short 0x000000000043c556; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c58e: jb short 0x000000000043c597; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c5ed: jb short 0x000000000043c5fd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c63e: jb short 0x000000000043c647; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c69b: jb short 0x000000000043c6a6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c6dc: jb short 0x000000000043c6e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c6de: jb short 0x000000000043c6e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c73d: jb short 0x000000000043c74d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c78c: jb short 0x000000000043c797; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c78e: jb short 0x000000000043c797; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c7eb: jb short 0x000000000043c7f6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c82e: jb short 0x000000000043c837; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c88d: jb short 0x000000000043c89d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c8de: jb short 0x000000000043c8e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c93b: jb short 0x000000000043c946; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c97e: jb short 0x000000000043c987; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c9dd: jb short 0x000000000043c9ed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043ca2e: jb short 0x000000000043ca37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ca8b: jb short 0x000000000043ca96; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e0fe: jb short 0x000000000043e107; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e15d: jb short 0x000000000043e16d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e1ae: jb short 0x000000000043e1b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e20b: jb short 0x000000000043e216; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e24e: jb short 0x000000000043e257; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e2ad: jb short 0x000000000043e2bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e2fe: jb short 0x000000000043e307; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e35b: jb short 0x000000000043e366; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e39e: jb short 0x000000000043e3a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e3fd: jb short 0x000000000043e40d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e44e: jb short 0x000000000043e457; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e4ab: jb short 0x000000000043e4b6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e4ee: jb short 0x000000000043e4f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e54d: jb short 0x000000000043e55d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e59e: jb short 0x000000000043e5a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e5fb: jb short 0x000000000043e606; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e63e: jb short 0x000000000043e647; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e69d: jb short 0x000000000043e6ad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e6ee: jb short 0x000000000043e6f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e74b: jb short 0x000000000043e756; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e78e: jb short 0x000000000043e797; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e7ed: jb short 0x000000000043e7fd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e83e: jb short 0x000000000043e847; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e89b: jb short 0x000000000043e8a6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e8de: jb short 0x000000000043e8e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e93d: jb short 0x000000000043e94d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e98e: jb short 0x000000000043e997; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e9eb: jb short 0x000000000043e9f6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ea2e: jb short 0x000000000043ea37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ea8b: jb short 0x000000000043eaa0; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043eade: jb short 0x000000000043eae7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043eb3b: jb short 0x000000000043eb46; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043eb7e: jb short 0x000000000043eb87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ebdd: jb short 0x000000000043ebed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043ec2e: jb short 0x000000000043ec37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ec8b: jb short 0x000000000043ec96; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ecce: jb short 0x000000000043ecd7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ed2d: jb short 0x000000000043ed3d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043ed7e: jb short 0x000000000043ed87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043eddb: jb short 0x000000000043ede6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ee1e: jb short 0x000000000043ee27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ee7d: jb short 0x000000000043ee8d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043eece: jb short 0x000000000043eed7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ef2b: jb short 0x000000000043ef36; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ef6e: jb short 0x000000000043ef77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043efcd: jb short 0x000000000043efdd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043f01e: jb short 0x000000000043f027; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f07b: jb short 0x000000000043f086; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f0be: jb short 0x000000000043f0c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f0bc: jb short 0x000000000043f0c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f11d: jb short 0x000000000043f12d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043f16e: jb short 0x000000000043f177; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f16c: jb short 0x000000000043f177; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f1cb: jb short 0x000000000043f1d6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f20e: jb short 0x000000000043f217; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f26d: jb short 0x000000000043f27d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043f2be: jb short 0x000000000043f2c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f31b: jb short 0x000000000043f326; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f35e: jb short 0x000000000043f367; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f3bd: jb short 0x000000000043f3cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043f40e: jb short 0x000000000043f417; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f46b: jb short 0x000000000043f476; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000445f12: jb short 0x0000000000445f18; mov cl, [rsi]; mov [rdi], cl; ret; 
0x00000000455b31: jb short 0x0000000000455ad0; lea r11, [rip+0x61c36]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b01: jb short 0x0000000000455ad0; lea r11, [rip+0x61c66]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004592e9: jb short 0x00000000004592fa; vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592fd: jb short 0x0000000000459309; vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000459316: jb short 0x0000000000459322; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x00000000459329: jb short 0x0000000000459331; mov [rdi], ecx; mov [rsi-0x4], ecx; ret; 
0x00000000459334: jb short 0x000000000045933e; mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x00000000459341: jb short 0x0000000000459345; mov [rdi], cl; ret; 
0x0000000045956d: jb short 0x0000000000459572; rep movsb [rdi], [rsi]; ret; 
0x000000004595f9: jb short 0x0000000000459601; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000004595fa: jb short 0x0000000000459601; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000045996a: jb short 0x0000000000459971; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000459dba: jb short 0x0000000000459dc1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000045a389: jb short 0x000000000045a38d; mov [rdi], cl; ret; 
0x0000000045a4f7: jb short 0x000000000045a4fb; mov [rdi], cl; vzeroupper; ret; 
0x0000000045a6bf: jb short 0x000000000045a6c3; mov [rdi], cl; vzeroupper; ret; 
0x0000000049aa03: jb short 0x000000000049a9fd; jmp qword ptr [rsi+0xf]; 
0x000000004a788b: jb short 0x00000000004a7886; call qword ptr [rax-0x5e1f00d]; 
0x0000000041ffd3: jbe 0x0000000000420130; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x000000004203bf: jbe 0x00000000004204cb; xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000042090e: jbe 0x00000000004209e8; mov rdx, r12; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000420b22: jbe 0x0000000000420c10; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x000000004219c3: jbe 0x0000000000421db2; xor esi, esi; mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000421bb9: jbe 0x0000000000421dbc; xor esi, esi; mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x00000000421cae: jbe 0x0000000000421dd8; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x00000000422515: jbe 0x00000000004225f0; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000423922: jbe 0x0000000000423a58; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x00000000423da8: jbe 0x0000000000423ff0; mov edx, r13d; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x00000000423e5d: jbe 0x000000000042406c; xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000423f31: jbe 0x0000000000424076; xor esi, esi; mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000423fce: jbe 0x0000000000424080; xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000004241d5: jbe 0x0000000000424400; lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000424557: jbe 0x0000000000424628; mov rdx, r15; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x000000004246e2: jbe 0x0000000000424790; xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x000000004248c4: jbe 0x0000000000424a70; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000424b68: jbe 0x0000000000424c90; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000424d84: jbe 0x0000000000424f18; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000424ed3: jbe 0x0000000000424f80; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000042522e: jbe 0x00000000004252e0; mov rdx, rbp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x000000004251f1: jbe 0x00000000004252f0; sub rsi, rdx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x0000000042536f: jbe 0x0000000000425460; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x00000000426b1b: jbe 0x0000000000426ba0; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000426cf3: jbe 0x0000000000426d80; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000004271ff: jbe 0x00000000004273a8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x0000000042727b: jbe 0x00000000004273f0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x00000000427438: jbe 0x0000000000427508; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000427b52: jbe 0x0000000000427cc0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x00000000427ec5: jbe 0x0000000000428060; xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [r15+0x58]; 
0x00000000428289: jbe 0x0000000000428340; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x000000004736ad: jbe 0x00000000004746e7; mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000473d52: jbe 0x00000000004746ff; mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000473404: jbe 0x0000000000474815; mov rdx, r13; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000473a97: jbe 0x00000000004749d9; mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000474026: jbe 0x0000000000474a58; mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000047843a: jbe 0x0000000000478550; movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000047e817: jbe 0x000000000047e918; movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000047fa31: jbe 0x000000000047fb30; mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000047fbd8: jbe 0x000000000047fc60; mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000480b41: jbe 0x0000000000480cd0; mov esi, r15d; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x00000000481305: jbe 0x00000000004814c0; mov rdi, r13; call qword ptr [r14+0x20]; 
0x0000000048266f: jbe 0x0000000000482910; add rax, rdi; add rax, rcx; ret; 
0x0000000048299c: jbe 0x0000000000482b80; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000004989cf: jbe 0x0000000000498c70; add rax, rdi; add rax, rcx; ret; 
0x00000000498cfc: jbe 0x0000000000498ee0; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000040a360: jbe short 0x000000000040a3b4; cmp edi, 0x80000008; jne 0x000000000040a4a0; mov rax, 0x4dedc0; ret; 
0x0000000040a39e: jbe short 0x000000000040a3f4; cmp edi, 0xe0000008; jne 0x000000000040a4a0; mov rax, 0x4dee00; ret; 
0x0000000040a3e1: jbe short 0x000000000040a436; cmp edi, 0x16; jne 0x000000000040a4a0; mov rax, 0x4def00; ret; 
0x0000000040a424: jbe short 0x000000000040a448; cmp edi, 0xc0000008; jne short 0x000000000040a4a0; mov rax, 0x4ded80; ret; 
0x0000000040d883: jbe short 0x000000000040d842; or [rax], eax; ret; 
0x000000004118a3: jbe short 0x00000000004118b5; syscall; 
0x00000000420196: jbe short 0x00000000004201f0; or al, 0x0; syscall; 
0x0000000042055e: jbe short 0x00000000004205b8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000420bef: jbe short 0x0000000000420c64; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x000000004233fe: jbe short 0x0000000000423420; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000425068: jbe short 0x00000000004250d0; xor esi, esi; mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000425bdf: jbe short 0x0000000000425c18; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x00000000425ecb: jbe short 0x0000000000425f28; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000004268b8: jbe short 0x0000000000426918; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x000000004269ae: jbe short 0x00000000004269c0; mov rax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000426e38: jbe short 0x0000000000426ea0; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000426eee: jbe short 0x0000000000426f18; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000426f83: jbe short 0x0000000000426ff0; movzx esi, byte ptr [r14]; lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x000000004270ca: jbe short 0x00000000004270e0; mov rax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000042797e: jbe short 0x00000000004279b0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000427a11: jbe short 0x0000000000427a30; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000428453: jbe short 0x00000000004284b0; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x0000000042938d: jbe short 0x0000000000429390; ret; 
0x000000004293cd: jbe short 0x00000000004293d0; ret; 
0x0000000042972d: jbe short 0x0000000000429730; ret; 
0x0000000042978d: jbe short 0x0000000000429790; ret; 
0x00000000436387: jbe short 0x0000000000436394; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x00000000437af7: jbe short 0x0000000000437b04; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x00000000438ad7: jbe short 0x0000000000438ae4; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x0000000043f298: jbe short 0x000000000043f2a1; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f336: jbe short 0x000000000043f33f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000047245d: jbe short 0x00000000004724c0; movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x000000004731ee: jbe short 0x0000000000473208; mov rdx, [r14+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000047888c: jbe short 0x0000000000478908; movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x000000004802e5: jbe short 0x0000000000480318; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000480415: jbe short 0x0000000000480448; movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000480a2e: jbe short 0x0000000000480a68; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000480e87: jbe short 0x0000000000480ea8; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x000000004815a3: jbe short 0x00000000004815d0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x00000000481641: jbe short 0x0000000000481650; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x000000004828d6: jbe short 0x0000000000482910; add rax, rdi; ret; 
0x000000004828e6: jbe short 0x0000000000482910; lea rax, [rdi+rax+0x10]; ret; 
0x000000004828f6: jbe short 0x0000000000482910; lea rax, [rdi+rax+0x20]; ret; 
0x00000000482906: jbe short 0x0000000000482910; lea rax, [rdi+rax+0x30]; ret; 
0x00000000482b27: jbe short 0x0000000000482b80; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000482b47: jbe short 0x0000000000482b80; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000482b67: jbe short 0x0000000000482b80; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000482b17: jbe short 0x0000000000482b80; add rax, rdi; vzeroupper; ret; 
0x000000004834d7: jbe short 0x0000000000483550; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000004916b3: jbe short 0x00000000004916c0; ret; 
0x00000000498b3c: jbe short 0x0000000000498b8d; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x00000000498bde: jbe short 0x0000000000498c2f; adc [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x00000000498c36: jbe short 0x0000000000498c70; add rax, rdi; ret; 
0x00000000498c46: jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x10]; ret; 
0x00000000498c56: jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x20]; ret; 
0x00000000498c66: jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x30]; ret; 
0x00000000498e87: jbe short 0x0000000000498ee0; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000498ea7: jbe short 0x0000000000498ee0; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000498ec7: jbe short 0x0000000000498ee0; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000498e77: jbe short 0x0000000000498ee0; add rax, rdi; vzeroupper; ret; 
0x0000000040a3b9: je 0x000000000040a460; cmp edi, 0x40000028; jne 0x000000000040a4a0; mov rax, 0x4decc0; ret; 
0x0000000040a3fa: je 0x000000000040a490; cmp edi, 0xc00000b7; jne 0x000000000040a4a0; mov rax, 0x4e11e0; ret; 
0x0000000040dc8a: je 0x000000000040dbde; xor r12d, r12d; mov rax, r12; pop r12; ret; 
0x000000004112b9: je 0x0000000000410fb8; xor esi, esi; mov edi, 0x3003; mov eax, 0x9e; syscall; 
0x000000004115ec: je 0x00000000004116d8; add rsp, 0x98; ret; 
0x0000000044f32a: je 0x000000000044efe0; vzeroupper; ret; 
0x0000000044f206: je 0x000000000044f0c0; vzeroupper; ret; 
0x00000000452ee5: je 0x0000000000452a90; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000045a84d: je 0x000000000045a76a; lea eax, [rdx+rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x0000000045d33f: je 0x000000000045d6cd; mov rsi, [r14]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x00000000482c44: je 0x0000000000482e10; bsr rax, rax; add rax, rdi; ret; 
0x00000000482ed4: je 0x0000000000482e10; bsr rax, rsi; add rax, rdi; ret; 
0x00000000482cde: je 0x0000000000482e10; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000048315c: je 0x0000000000483200; bsf rax, rdx; ret; 
0x00000000483e20: je 0x0000000000483ec0; bsf rax, rdx; shr rax, 0x2; ret; 
0x00000000490dad: je 0x0000000000490cfa; mov eax, ecx; sub eax, r8d; ret; 
0x00000000401012: je short 0x0000000000401016; call rax; 
0x00000000401cd5: je short 0x0000000000401ce0; mov edi, 0x4e3b70; jmp rax; 
0x00000000401d17: je short 0x0000000000401d20; mov edi, 0x4e3b70; jmp rax; 
0x0000000040207b: je short 0x0000000000402082; cmp edi, 0xffffffa1; jne short 0x0000000000402083; ret; 
0x0000000040217c: je short 0x0000000000402180; ret; 
0x00000000402555: je short 0x0000000000402560; mov eax, [rax]; add rsp, 0x8; ret; 
0x00000000402642: je short 0x0000000000402650; pop rbp; pop r12; pop r13; ret; 
0x000000004026b2: je short 0x00000000004026c0; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000402718: je short 0x0000000000402720; pop rbp; ret; 
0x00000000402772: je short 0x0000000000402780; pop rbp; pop r12; pop r13; ret; 
0x000000004027c2: je short 0x00000000004027d0; pop rbp; pop r12; pop r13; ret; 
0x00000000402eaa: je short 0x0000000000402eb0; pop rbp; ret; 
0x000000004030b7: je short 0x00000000004030c0; xor eax, eax; pop r12; ret; 
0x0000000040337a: je short 0x0000000000403380; ret; 
0x00000000403372: je short 0x0000000000403390; cmp edi, 0x7fc00000; je short 0x0000000000403380; ret; 
0x000000004077d6: je short 0x00000000004077e0; ret; 
0x0000000040a44e: je short 0x000000000040a470; cmp edi, 0x80000016; jne short 0x000000000040a4a0; mov rax, 0x4def40; ret; 
0x0000000040a439: je short 0x000000000040a480; cmp edi, 0xf; jne short 0x000000000040a4a0; mov rax, 0x4e1220; ret; 
0x0000000040a901: je short 0x000000000040a908; jmp rax; 
0x0000000040a920: je short 0x000000000040a928; jmp rax; 
0x0000000040a970: je short 0x000000000040a988; call rax; 
0x0000000040a967: je short 0x000000000040a988; mov rax, [rbp+0x10]; test rax, rax; je short 0x000000000040a988; call rax; 
0x0000000040a95a: je short 0x000000000040a988; mov rbx, rsi; call rax; 
0x0000000040a9be: je short 0x000000000040a9e8; push rbx; mov rbx, rsi; mov rdi, rsi; call rax; 
0x0000000040aa43: je short 0x000000000040aa68; mov rsi, rbp; mov rdi, r13; call rdx; 
0x0000000040d88b: je short 0x000000000040d84a; or [rax], eax; ret; 
0x0000000041119a: je short 0x00000000004111ae; mov rdx, [rip+0xd3ba5]; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x00000000411206: je short 0x000000000041122c; adc [rax-0x75], cl; and al, 0x18; call rax; 
0x00000000411a9f: je short 0x0000000000411ab6; lea rbx, [rax-0x1]; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x000000004159ee: je short 0x00000000004159f6; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x0000000042161b: je short 0x0000000000421641; xor [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x90]; 
0x0000000042331c: je short 0x000000000042331f; ret; 
0x00000000423b73: je short 0x0000000000423b99; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x000000004241dd: je short 0x0000000000424203; adc [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x90]; 
0x00000000426df9: je short 0x0000000000426e00; ret; 
0x000000004277cb: je short 0x00000000004277dc; mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x00000000427a57: je short 0x0000000000427a68; cmp rcx, rsi; ja short 0x0000000000427a50; lea eax, [rdx+rdi]; ret; 
0x000000004296b0: je short 0x00000000004296b5; pop rbx; pop rbp; ret; 
0x0000000042c143: je short 0x000000000042c169; sub [rax-0x7d], cl; call qword ptr [rsi+rsi*2]; 
0x0000000042d3ec: je short 0x000000000042d3f3; add [rax-0x77], cl; ret; 
0x0000000042e652: je short 0x000000000042e678; sbb [rbx+0x5d], bl; pop r12; jmp rax; 
0x0000000042ed82: je short 0x000000000042eda8; cmp [rcx+rcx*4-0x9], cl; call rax; 
0x0000000042ffa2: je short 0x000000000042ffc8; sub [rcx+rcx*4-0x19], cl; call rax; 
0x0000000043049a: je short 0x00000000004304a8; lea rax, [rax-0x10]; ret; 
0x00000000430495: je short 0x00000000004304c8; test rsi, rsi; je short 0x00000000004304a8; lea rax, [rax-0x10]; ret; 
0x00000000431916: je short 0x00000000004318e1; lea rax, [rip+0x7e61]; test byte ptr [rip+0xb34bf], 0x1; je short 0x00000000004318e1; ret; 
0x00000000431926: je short 0x00000000004318e1; ret; 
0x00000000437bd3: je short 0x0000000000437b96; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000438aba: je short 0x0000000000438abd; xchg edx, eax; sub eax, edx; ret; 
0x00000000439088: je short 0x00000000004390a0; bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x000000004391ca: je short 0x000000000043921b; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x000000004398d5: je short 0x00000000004398e0; sbb eax, eax; or eax, 0x1; ret; 
0x00000000439979: je short 0x000000000043994c; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000439890; ret; 
0x000000004399b7: je short 0x00000000004399d0; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000439890; ret; 
0x0000000043aef7: je short 0x000000000043aefb; add [rax], al; xor eax, eax; ret; 
0x0000000043f486: je short 0x000000000043f48f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044a9a3: je short 0x000000000044a966; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044c543: je short 0x000000000044c506; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044dd35: je short 0x000000000044dd40; bsf eax, eax; lea rax, [rdi+rax]; ret; 
0x0000000044e358: je short 0x000000000044e35e; bsf eax, edx; ret; 
0x0000000044e3fd: je short 0x000000000044e410; bsf rax, rdx; ret; 
0x0000000044e3a0: je short 0x000000000044e420; bsf rax, rdx; ret; 
0x0000000044e8cf: je short 0x000000000044e950; mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x00000000456fdf: je short 0x0000000000457060; mov byte ptr [rdi], 0x0; lea rax, [rdi]; vzeroupper; ret; 
0x000000004591a0: je short 0x0000000000459178; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000459687: je short 0x00000000004596a0; ror byte ptr [rdi], 0x1; adc [rdi+rdx-0x40], edi; ret; 
0x00000000459eac: je short 0x0000000000459ec5; std; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x0000000045ad8d: je short 0x000000000045ada0; cmp eax, 0x2; je short 0x000000000045ada8; xor eax, eax; ret; 
0x0000000045ad92: je short 0x000000000045ada8; xor eax, eax; ret; 
0x0000000045ade4: je short 0x000000000045adc8; ret; 
0x0000000045b652: je short 0x000000000045b678; sbb [rcx+rcx*4-0x1f], cl; mov rdx, r13; call rbx; 
0x0000000045c0de: je short 0x000000000045c104; adc [rcx-0x77], al; ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x0000000045c443: je short 0x000000000045c421; mov rbp, rdi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000045cb9c: je short 0x000000000045cbc8; mov eax, 0x48; syscall; 
0x0000000045cc2b: je short 0x000000000045cc58; mov eax, 0x48; syscall; 
0x0000000045cd81: je short 0x000000000045cdb0; mov eax, 0x101; syscall; 
0x0000000045cf6e: je short 0x000000000045cf71; ret; 
0x0000000045d047: je short 0x000000000045d080; mov r10d, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x0000000045d192: je short 0x000000000045d1c5; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045d222: je short 0x000000000045d255; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045d71d: je short 0x000000000045d740; mov rsi, [rbx]; mov r13, rbx; mov rdi, rbp; call r12; 
0x0000000045de09: je short 0x000000000045de3a; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045deba: je short 0x000000000045deed; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000046018e: je short 0x00000000004601a0; lea rdi, [rcx+rsi+0x20]; jmp rdx; 
0x00000000460189: je short 0x00000000004601a0; test rdx, rdx; je short 0x00000000004601a0; lea rdi, [rcx+rsi+0x20]; jmp rdx; 
0x0000000046131c: je short 0x0000000000461320; ret; 
0x00000000461338: je short 0x0000000000461348; mov [rip+0x80760], eax; pop rbx; ret; 
0x00000000464cf0: je short 0x0000000000464cf8; ret; 
0x00000000465150: je short 0x0000000000465176; push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x000000004653ff: je short 0x0000000000465425; push rax; mov rdi, [rsp+0x58]; call r14; 
0x0000000046573b: je short 0x0000000000465761; pop rax; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x00000000465b7e: je short 0x0000000000465ba4; pop rax; mov rdi, [rsp+0x60]; call r15; 
0x00000000465ef3: je short 0x0000000000465f19; push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000466169: je short 0x000000000046618f; push rax; mov rdi, [rsp+0x58]; call rbx; 
0x000000004664ca: je short 0x00000000004664f0; push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x0000000046694f: je short 0x0000000000466975; push rax; mov rdi, [rsp+0x58]; call r15; 
0x00000000466cf1: je short 0x0000000000466d17; push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000466f66: je short 0x0000000000466f8c; push rax; mov rdi, [rsp+0x58]; call rbx; 
0x00000000467385: je short 0x00000000004673ab; push rax; mov rdi, [rsp+0x48]; call r13; 
0x00000000467885: je short 0x00000000004678ab; push rax; mov rdi, [rsp+0x48]; call rbx; 
0x00000000467f78: je short 0x0000000000467f9e; mov rdi, [rsp+0x40]; call r14; 
0x000000004684c6: je short 0x00000000004684ec; mov rdi, [rsp+0x40]; call rbx; 
0x00000000468f06: je short 0x0000000000468f2c; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x000000004694fa: je short 0x0000000000469520; mov rdi, [rsp+0x38]; call r15; 
0x00000000469e9a: je short 0x0000000000469ec0; pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x0000000046a284: je short 0x000000000046a2aa; pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046a865: je short 0x000000000046a88b; push rax; mov rdi, [rsp+0x48]; call r13; 
0x0000000046ae05: je short 0x000000000046ae2b; push rax; mov rdi, [rsp+0x48]; call rbx; 
0x0000000046b597: je short 0x000000000046b5bd; pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x0000000046b9e9: je short 0x000000000046ba0f; pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046bfc5: je short 0x000000000046bfeb; push rax; mov rdi, [rsp+0x48]; call r13; 
0x0000000046c568: je short 0x000000000046c58e; push rax; mov rdi, [rsp+0x48]; call rbx; 
0x0000000046cdb2: je short 0x000000000046cdd8; mov rdi, [rsp+0x38]; call r15; 
0x0000000046cf17: je short 0x000000000046cf3d; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000046d9e6: je short 0x000000000046d9f0; cmp esi, 0x3; je short 0x000000000046d9f0; ret; 
0x0000000046d9eb: je short 0x000000000046d9f0; ret; 
0x0000000046da0d: je short 0x000000000046da28; pop rbx; ret; 
0x0000000046e214: je short 0x000000000046e218; call rax; 
0x0000000046e49a: je short 0x000000000046e49e; call rax; 
0x0000000046f60f: je short 0x000000000046f613; call rax; 
0x0000000046fd72: je short 0x000000000046fd78; ret; 
0x0000000048079b: je short 0x00000000004807e6; add esp, 0x18; pop rbx; pop rbp; ret; 
0x00000000480d40: je short 0x0000000000480d48; ret; 
0x00000000480d53: je short 0x0000000000480d9d; mov eax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000480da0: je short 0x0000000000480dfd; pop rbp; pop r12; ret; 
0x00000000481677: je short 0x0000000000481688; cmp rax, rsi; ja short 0x0000000000481670; lea eax, [rdx+rdi]; ret; 
0x000000004818bd: je short 0x00000000004818c0; ret; 
0x00000000481921: je short 0x0000000000481924; ret; 
0x000000004827dc: je short 0x000000000048282d; xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x0000000048287e: je short 0x00000000004828cf; adc [rsi+0xf], ah; xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x0000000048306f: je short 0x0000000000483024; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x00000000483094: je short 0x00000000004830b0; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x000000004831cc: je short 0x00000000004831f0; bsf rax, rdx; ret; 
0x00000000483d79: je short 0x0000000000483d7f; test edx, edx; jne short 0x0000000000483d70; ret; 
0x00000000483e8c: je short 0x0000000000483eb0; bsf rax, rdx; shr rax, 0x2; ret; 
0x000000004841b9: je short 0x00000000004841d0; mov cl, dl; and cl, 0xf; je short 0x00000000004841e0; ret; 
0x000000004841c0: je short 0x00000000004841e0; ret; 
0x000000004841d5: je short 0x00000000004841f0; add rax, 0x2; ret; 
0x000000004847aa: je short 0x00000000004847e0; call rax; 
0x0000000048566d: je short 0x00000000004856a8; leave; xor eax, eax; ret; 
0x0000000048e4b2: je short 0x000000000048e4b7; mov [rsi], rdi; mov rax, r8; ret; 
0x0000000048efa9: je short 0x000000000048efac; lock inc dword ptr [r8+0x10]; pop rbx; pop rbp; ret; 
0x00000000497e97: je short 0x0000000000497ea7; lea rax, [rip+0x4d1a0]; mov [rip+0x4d181], rax; add rsp, 0x8; ret; 
0x00000000498337: je short 0x0000000000498343; lea rdx, [rip+0x4b7c0]; mov [rax], rdx; add rsp, 0x8; ret; 
0x000000004985b3: je short 0x00000000004985b1; jmp qword ptr [rsi+0x2e]; 
0x000000004985d6: je short 0x00000000004985e0; pop rbx; pop rbp; pop r12; ret; 
0x0000000049a892: je short 0x000000000049a8ae; lea rbx, [rbp+rdx*8]; nop [rax]; call qword ptr [rbx]; 
0x0000000049bfda: je short 0x000000000049bfe0; ret; 
0x000000004a138f: je short 0x00000000004a13b5; adc [rcx-0x77], cl; ret; 
0x000000004a165a: je short 0x00000000004a166c; movss xmm0, [rip+0x2ec14]; divss xmm0, [rip+0x2ec10]; ret; 
0x000000004a28e3: je short 0x00000000004a2934; add rsp, 0x18; ret; 
0x000000004a429e: je short 0x00000000004a42b0; mov edi, 0x1; jmp rax; 
0x000000004a573f: je short 0x00000000004a5768; mov rsi, [r13+r15+0x8]; mov rdx, [r12]; mov rdi, r14; call rbp; 
0x000000004a5743: je short 0x00000000004a5782; or [rcx-0x75], cl; adc al, 0x24; mov rdi, r14; call rbp; 
0x000000004a5874: je short 0x00000000004a586a; adc [rcx+rcx*4-0x11], cl; call rax; 
0x000000004a668c: je short 0x00000000004a66b2; adc al, ch; push 0xfffffffffffffffb; call far fword ptr [rbx+0x4c]; 
0x000000004a7906: je short 0x00000000004a790a; call rax; 
0x000000004a7bdb: je short 0x00000000004a7be4; call rax; 
0x000000004a7bd2: je short 0x00000000004a7be9; mov rax, [rdi+0x20]; test rax, rax; je short 0x00000000004a7be4; call rax; 
0x000000004a7dce: je short 0x00000000004a7db8; xor eax, eax; add rsp, 0x10; pop rbx; ret; 
0x0000000040254f: jg short 0x0000000000402551; add [rax-0x7b], cl; shl byte ptr [rcx+rcx-0x75], 0x0; add rsp, 0x8; ret; 
0x0000000040c173: jg short 0x000000000040c149; or [rax], eax; ret; 
0x0000000040d75d: jg short 0x000000000040d762; add [rax], al; nop [rax]; lea rax, [rip+0x9bdb0]; ret; 
0x0000000040d853: jg short 0x000000000040d812; or [rax], eax; ret; 
0x00000000426b1d: jg short 0x0000000000426b1f; add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000004290b3: jg short 0x00000000004290b2; dec dword ptr [rax-0x77]; ret; 
0x0000000043196c: jg short 0x0000000000431971; add [rax-0x73], cl; add eax, 0x27f89; cmove rax, rdx; ret; 
0x0000000043b825: jg short 0x000000000043b7e7; movaps [rdi+0x10], xmm3; jb short 0x000000000043b836; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043b840: jg short 0x000000000043b842; lea r11, [rip+0x7af67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b975: jg short 0x000000000043b937; movaps [rdi+0x10], xmm3; jb short 0x000000000043b986; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043b990: jg short 0x000000000043b992; lea r11, [rip+0x7ae17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bac5: jg short 0x000000000043ba87; movaps [rdi+0x10], xmm3; jb short 0x000000000043bad6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bae0: jg short 0x000000000043bae2; lea r11, [rip+0x7acc7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bc15: jg short 0x000000000043bbd7; movaps [rdi+0x10], xmm3; jb short 0x000000000043bc26; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bc30: jg short 0x000000000043bc32; lea r11, [rip+0x7ab77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bd65: jg short 0x000000000043bd27; movaps [rdi+0x10], xmm3; jb short 0x000000000043bd76; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bd80: jg short 0x000000000043bd82; lea r11, [rip+0x7aa27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043beb5: jg short 0x000000000043be77; movaps [rdi+0x10], xmm3; jb short 0x000000000043bec6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bed0: jg short 0x000000000043bed2; lea r11, [rip+0x7a8d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c005: jg short 0x000000000043bfc7; movaps [rdi+0x10], xmm3; jb short 0x000000000043c016; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c020: jg short 0x000000000043c022; lea r11, [rip+0x7a787]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c0d5: jg short 0x000000000043c0d7; lea r11, [rip+0x7a6d2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c155: jg short 0x000000000043c117; movaps [rdi+0x10], xmm3; jb short 0x000000000043c166; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c170: jg short 0x000000000043c172; lea r11, [rip+0x7a637]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c2a5: jg short 0x000000000043c267; movaps [rdi+0x10], xmm3; jb short 0x000000000043c2b6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c2c0: jg short 0x000000000043c2c2; lea r11, [rip+0x7a4e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c3f5: jg short 0x000000000043c3b7; movaps [rdi+0x10], xmm3; jb short 0x000000000043c406; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c410: jg short 0x000000000043c412; lea r11, [rip+0x7a397]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c545: jg short 0x000000000043c507; movaps [rdi+0x10], xmm3; jb short 0x000000000043c556; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c560: jg short 0x000000000043c562; lea r11, [rip+0x7a247]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c695: jg short 0x000000000043c657; movaps [rdi+0x10], xmm3; jb short 0x000000000043c6a6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c6b0: jg short 0x000000000043c6b2; lea r11, [rip+0x7a0f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c7e5: jg short 0x000000000043c7a7; movaps [rdi+0x10], xmm3; jb short 0x000000000043c7f6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c800: jg short 0x000000000043c802; lea r11, [rip+0x79fa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c935: jg short 0x000000000043c8f7; movaps [rdi+0x10], xmm3; jb short 0x000000000043c946; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c950: jg short 0x000000000043c952; lea r11, [rip+0x79e57]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ca85: jg short 0x000000000043ca47; movaps [rdi+0x10], xmm3; jb short 0x000000000043ca96; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043caa0: jg short 0x000000000043caa2; lea r11, [rip+0x79d07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043d409: jg short 0x000000000043d45a; ret; 
0x0000000043d450: jg short 0x000000000043d499; mov ebx, 0x4f7f0ff3; ret far; 
0x0000000043d455: jg short 0x000000000043d4a6; ret far; 
0x0000000043d48f: jg short 0x000000000043d4d8; ret; 
0x0000000043d4cf: jg short 0x000000000043d518; ret far; 
0x0000000043e205: jg short 0x000000000043e1c7; movaps [rdi+0x10], xmm3; jb short 0x000000000043e216; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e220: jg short 0x000000000043e222; lea r11, [rip+0x78747]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e355: jg short 0x000000000043e317; movaps [rdi+0x10], xmm3; jb short 0x000000000043e366; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e370: jg short 0x000000000043e372; lea r11, [rip+0x785f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e4a5: jg short 0x000000000043e467; movaps [rdi+0x10], xmm3; jb short 0x000000000043e4b6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e4c0: jg short 0x000000000043e4c2; lea r11, [rip+0x784a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e5f5: jg short 0x000000000043e5b7; movaps [rdi+0x10], xmm3; jb short 0x000000000043e606; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e610: jg short 0x000000000043e612; lea r11, [rip+0x78357]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e745: jg short 0x000000000043e707; movaps [rdi+0x10], xmm3; jb short 0x000000000043e756; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e760: jg short 0x000000000043e762; lea r11, [rip+0x78207]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e895: jg short 0x000000000043e857; movaps [rdi+0x10], xmm3; jb short 0x000000000043e8a6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e8b0: jg short 0x000000000043e8b2; lea r11, [rip+0x780b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e9e5: jg short 0x000000000043e9a7; movaps [rdi+0x10], xmm3; jb short 0x000000000043e9f6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ea00: jg short 0x000000000043ea02; lea r11, [rip+0x77f67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ea05: jg short 0x000000000043ea0f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eab5: jg short 0x000000000043eab7; lea r11, [rip+0x77eb2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eb35: jg short 0x000000000043eaf7; movaps [rdi+0x10], xmm3; jb short 0x000000000043eb46; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043eb50: jg short 0x000000000043eb52; lea r11, [rip+0x77e17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ec85: jg short 0x000000000043ec47; movaps [rdi+0x10], xmm3; jb short 0x000000000043ec96; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043eca0: jg short 0x000000000043eca2; lea r11, [rip+0x77cc7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043edd5: jg short 0x000000000043ed97; movaps [rdi+0x10], xmm3; jb short 0x000000000043ede6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043edf0: jg short 0x000000000043edf2; lea r11, [rip+0x77b77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ef25: jg short 0x000000000043eee7; movaps [rdi+0x10], xmm3; jb short 0x000000000043ef36; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ef40: jg short 0x000000000043ef42; lea r11, [rip+0x77a27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f075: jg short 0x000000000043f037; movaps [rdi+0x10], xmm3; jb short 0x000000000043f086; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f090: jg short 0x000000000043f092; lea r11, [rip+0x778d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f1c5: jg short 0x000000000043f187; movaps [rdi+0x10], xmm3; jb short 0x000000000043f1d6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f1e0: jg short 0x000000000043f1e2; lea r11, [rip+0x77787]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f315: jg short 0x000000000043f2d7; movaps [rdi+0x10], xmm3; jb short 0x000000000043f326; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f330: jg short 0x000000000043f332; lea r11, [rip+0x77637]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f465: jg short 0x000000000043f427; movaps [rdi+0x10], xmm3; jb short 0x000000000043f476; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f480: jg short 0x000000000043f482; lea r11, [rip+0x774e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043fde9: jg short 0x000000000043fe3a; ret; 
0x0000000043fe30: jg short 0x000000000043fe79; mov ebx, 0x4f7f0ff3; ret far; 
0x0000000043fe35: jg short 0x000000000043fe86; ret far; 
0x0000000043fe6f: jg short 0x000000000043feb8; ret; 
0x0000000043feaf: jg short 0x000000000043fef8; ret far; 
0x000000004423f8: jg short 0x0000000000442441; loope 0x00000000004423ef; movq [rdi-0x10], mm1; ret; 
0x00000000442488: jg short 0x00000000004424d1; loop 0x000000000044247f; movq [rdi-0x10], mm1; ret; 
0x000000004424ff: jg short 0x0000000000442548; ret; 
0x00000000442518: jg short 0x0000000000442561; jrcxz 0x000000000044250f; movq [rdi-0x10], mm1; ret; 
0x000000004425a8: jg short 0x00000000004425f1; in al, 0xf3; movq [rdi-0x10], mm1; ret; 
0x00000000442628: jg short 0x0000000000442671; in eax, 0xf3; movq [rdi-0x10], mm1; ret; 
0x000000004426a8: jg short 0x00000000004426f1; out 0xf3, al; movq [rdi-0x10], mm1; ret; 
0x00000000442728: jg short 0x0000000000442771; out 0xf3, eax; movq [rdi-0x10], mm1; ret; 
0x00000000442905: jg short 0x000000000044294e; mov ebx, 0x46f00ff2; ret far; 
0x0000000044290f: jg short 0x0000000000442958; ret far; 
0x000000004429a8: jg short 0x00000000004429f1; in al, dx; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442a28: jg short 0x0000000000442a71; in eax, dx; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442ab8: jg short 0x0000000000442b01; out dx, al; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442b38: jg short 0x0000000000442b81; out dx, eax; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442bac: jg short 0x0000000000442bb5; ret; 
0x00000000442c06: jg short 0x0000000000442c17; ret; 
0x00000000442c01: jg short 0x0000000000442c4a; psllq mm1, [rdi]; jg short 0x0000000000442c17; ret; 
0x00000000442c76: jg short 0x0000000000442c87; ret; 
0x00000000442ce6: jg short 0x0000000000442cf7; ret; 
0x00000000442ce1: jg short 0x0000000000442d2a; or eax, 0xf7f0ff3; ret; 
0x00000000442d56: jg short 0x0000000000442d67; ret; 
0x00000000442d51: jg short 0x0000000000442d9a; or al, 0xf3; movq [rdi], mm1; ret; 
0x00000000442dc6: jg short 0x0000000000442dd7; ret; 
0x00000000442dc1: jg short 0x0000000000442e0a; or esi, ebx; movq [rdi], mm1; ret; 
0x00000000442e36: jg short 0x0000000000442e47; ret; 
0x00000000442e31: jg short 0x0000000000442e7a; or dh, bl; movq [rdi], mm1; ret; 
0x00000000442ea6: jg short 0x0000000000442eb7; ret; 
0x00000000442ea1: jg short 0x0000000000442eea; or ebx, esi; movq [rdi], mm1; ret; 
0x00000000442f16: jg short 0x0000000000442f27; ret; 
0x00000000442f11: jg short 0x0000000000442f5a; or bl, dh; movq [rdi], mm1; ret; 
0x00000000442f86: jg short 0x0000000000442f97; ret; 
0x00000000442ff6: jg short 0x0000000000443007; ret; 
0x00000000443066: jg short 0x0000000000443077; ret; 
0x00000000443061: jg short 0x00000000004430aa; add eax, 0xf7f0ff3; ret; 
0x000000004430d6: jg short 0x00000000004430e7; ret; 
0x000000004430d1: jg short 0x000000000044311a; add al, 0xf3; movq [rdi], mm1; ret; 
0x00000000443146: jg short 0x0000000000443157; ret; 
0x00000000443141: jg short 0x000000000044318a; add esi, ebx; movq [rdi], mm1; ret; 
0x000000004431b6: jg short 0x00000000004431c7; ret; 
0x000000004431b1: jg short 0x00000000004431fa; add dh, bl; movq [rdi], mm1; ret; 
0x00000000443226: jg short 0x0000000000443237; ret; 
0x00000000443221: jg short 0x000000000044326a; add ebx, esi; movq [rdi], mm1; ret; 
0x00000000444f28: jg short 0x0000000000444f71; loope 0x0000000000444f1f; movq [rdi-0x10], mm1; ret; 
0x00000000444fb8: jg short 0x0000000000445001; loop 0x0000000000444faf; movq [rdi-0x10], mm1; ret; 
0x0000000044502f: jg short 0x0000000000445078; ret; 
0x00000000445048: jg short 0x0000000000445091; jrcxz 0x000000000044503f; movq [rdi-0x10], mm1; ret; 
0x000000004450d8: jg short 0x0000000000445121; in al, 0xf3; movq [rdi-0x10], mm1; ret; 
0x00000000445158: jg short 0x00000000004451a1; in eax, 0xf3; movq [rdi-0x10], mm1; ret; 
0x000000004451d8: jg short 0x0000000000445221; out 0xf3, al; movq [rdi-0x10], mm1; ret; 
0x00000000445258: jg short 0x00000000004452a1; out 0xf3, eax; movq [rdi-0x10], mm1; ret; 
0x00000000445435: jg short 0x000000000044547e; mov ebx, 0x46f00ff2; ret far; 
0x0000000044543f: jg short 0x0000000000445488; ret far; 
0x000000004454d8: jg short 0x0000000000445521; in al, dx; movdqu [rdi-0x10], xmm1; ret; 
0x00000000445558: jg short 0x00000000004455a1; in eax, dx; movdqu [rdi-0x10], xmm1; ret; 
0x000000004455e8: jg short 0x0000000000445631; out dx, al; movdqu [rdi-0x10], xmm1; ret; 
0x00000000445668: jg short 0x00000000004456b1; out dx, eax; movdqu [rdi-0x10], xmm1; ret; 
0x000000004456dc: jg short 0x00000000004456e5; ret; 
0x00000000445736: jg short 0x0000000000445747; ret; 
0x00000000445731: jg short 0x000000000044577a; psllq mm1, [rdi]; jg short 0x0000000000445747; ret; 
0x000000004457a6: jg short 0x00000000004457b7; ret; 
0x00000000445816: jg short 0x0000000000445827; ret; 
0x00000000445811: jg short 0x000000000044585a; or eax, 0xf7f0ff3; ret; 
0x00000000445886: jg short 0x0000000000445897; ret; 
0x00000000445881: jg short 0x00000000004458ca; or al, 0xf3; movq [rdi], mm1; ret; 
0x000000004458f6: jg short 0x0000000000445907; ret; 
0x000000004458f1: jg short 0x000000000044593a; or esi, ebx; movq [rdi], mm1; ret; 
0x00000000445966: jg short 0x0000000000445977; ret; 
0x00000000445961: jg short 0x00000000004459aa; or dh, bl; movq [rdi], mm1; ret; 
0x000000004459d6: jg short 0x00000000004459e7; ret; 
0x000000004459d1: jg short 0x0000000000445a1a; or ebx, esi; movq [rdi], mm1; ret; 
0x00000000445a46: jg short 0x0000000000445a57; ret; 
0x00000000445a41: jg short 0x0000000000445a8a; or bl, dh; movq [rdi], mm1; ret; 
0x00000000445ab6: jg short 0x0000000000445ac7; ret; 
0x00000000445b26: jg short 0x0000000000445b37; ret; 
0x00000000445b96: jg short 0x0000000000445ba7; ret; 
0x00000000445b91: jg short 0x0000000000445bda; add eax, 0xf7f0ff3; ret; 
0x00000000445c06: jg short 0x0000000000445c17; ret; 
0x00000000445c01: jg short 0x0000000000445c4a; add al, 0xf3; movq [rdi], mm1; ret; 
0x00000000445c76: jg short 0x0000000000445c87; ret; 
0x00000000445c71: jg short 0x0000000000445cba; add esi, ebx; movq [rdi], mm1; ret; 
0x00000000445ce6: jg short 0x0000000000445cf7; ret; 
0x00000000445ce1: jg short 0x0000000000445d2a; add dh, bl; movq [rdi], mm1; ret; 
0x00000000445d56: jg short 0x0000000000445d67; ret; 
0x00000000445d51: jg short 0x0000000000445d9a; add ebx, esi; movq [rdi], mm1; ret; 
0x00000000445e94: jg short 0x0000000000445e9d; vmovdqu [rdi+0x20], ymm1; vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x00000000445eb8: jg short 0x0000000000445ec1; vmovdqu [r9-0x20], ymm1; ret; 
0x00000000445ecc: jg short 0x0000000000445ed5; vmovdqu [r9-0x10], xmm1; ret; 
0x0000000044633e: jg short 0x0000000000446338; ret; 
0x0000000044e762: jg short 0x000000000044e778; pextrw edi, mm5, 0x74; ret far; 
0x0000000044e9bc: jg short 0x000000000044e9d5; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x0000000044e9dc: jg short 0x000000000044e9f5; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x0000000044eb5d: jg short 0x000000000044eb73; pextrw edi, mm5, 0x74; ret far; 
0x0000000044ed1e: jg short 0x000000000044ed21; jne 0x000000000044f150; vzeroupper; ret; 
0x0000000044eecc: jg short 0x000000000044eed0; jne 0x000000000044f150; vzeroupper; ret; 
0x0000000044eef0: jg short 0x000000000044eef5; jne 0x000000000044f150; vzeroupper; ret; 
0x0000000044ef0a: jg short 0x000000000044ef10; jne 0x000000000044f150; vzeroupper; ret; 
0x0000000044f06d: jg short 0x000000000044f086; vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x0000000044f08d: jg short 0x000000000044f0a6; vmovdqu [rdi+r8-0x20], ymm3; vzeroupper; ret; 
0x0000000044f0ae: jg short 0x000000000044f0c7; vmovdqu [rdi+0x20], ymm3; mov [rdi+0x40], cl; vzeroupper; ret; 
0x0000000044f112: jg short 0x000000000044f11b; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x0000000044f259: jg short 0x000000000044f2bb; vzeroupper; ret; 
0x000000004554c6: jg short 0x00000000004554cf; ret; 
0x000000004554d6: jg short 0x00000000004554df; mov [rdi+0x10], dh; ret; 
0x000000004554ea: jg short 0x00000000004554f3; mov [rdi+0x10], cx; ret; 
0x00000000455509: jg short 0x0000000000455512; mov [rdi+0xf], ecx; ret; 
0x00000000455519: jg short 0x0000000000455522; mov [rdi+0x10], ecx; ret; 
0x00000000455529: jg short 0x0000000000455532; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x0000000045554a: jg short 0x0000000000455553; mov [rdi+0xe], rcx; ret; 
0x0000000045556a: jg short 0x0000000000455573; mov [rdi+0xf], rcx; ret; 
0x0000000045558a: jg short 0x0000000000455593; mov [rdi+0x10], rcx; ret; 
0x000000004555aa: jg short 0x00000000004555b3; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x000000004555ce: jg short 0x00000000004555d7; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000004555ed: jg short 0x00000000004555f6; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x0000000045560d: jg short 0x0000000000455616; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x0000000045562b: jg short 0x0000000000455634; movdqu [rdi+0xd], xmm2; ret; 
0x0000000045564b: jg short 0x0000000000455654; movdqu [rdi+0xe], xmm2; ret; 
0x0000000045566b: jg short 0x0000000000455674; movdqu [rdi+0xf], xmm2; ret; 
0x0000000045568b: jg short 0x0000000000455694; movdqu [rdi+0x10], xmm2; ret; 
0x00000000455c38: jg short 0x0000000000455c3b; jne 0x00000000004564f0; ret; 
0x00000000455c5c: jg short 0x0000000000455c60; jne 0x00000000004564f0; ret; 
0x00000000455c7f: jg short 0x0000000000455c84; jne 0x00000000004564f0; ret; 
0x00000000455c9a: jg short 0x0000000000455ca0; jne 0x00000000004564f0; ret; 
0x00000000455cbd: jg short 0x0000000000455cc4; jne 0x00000000004564f0; ret; 
0x00000000455ce2: jg short 0x0000000000455cea; jne 0x00000000004564f0; ret; 
0x00000000455d00: jg short 0x0000000000455d09; jne 0x00000000004564f0; ret; 
0x00000000455d1c: jg short 0x0000000000455d26; jne 0x00000000004564f0; ret; 
0x00000000455d3f: jg short 0x0000000000455d4a; jne 0x00000000004564f0; ret; 
0x00000000455d64: jg short 0x0000000000455d70; jne 0x00000000004564f0; ret; 
0x00000000455d82: jg short 0x0000000000455d8f; jne 0x00000000004564f0; ret; 
0x00000000455da2: jg short 0x0000000000455db0; jne 0x00000000004564f0; ret; 
0x00000000455dc4: jg short 0x0000000000455dd3; jne 0x00000000004564f0; ret; 
0x00000000455de4: jg short 0x0000000000455df4; jne 0x00000000004564f0; ret; 
0x00000000455e04: jg short 0x0000000000455e15; jne 0x00000000004564f0; ret; 
0x00000000455e16: jg short 0x0000000000455e1f; sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000004564f0; ret; 
0x00000000455e1e: jg short 0x0000000000455e30; jne 0x00000000004564f0; ret; 
0x00000000455e41: jg short 0x0000000000455e54; jne 0x00000000004564f0; ret; 
0x00000000455e66: jg short 0x0000000000455e7a; jne 0x00000000004564f0; ret; 
0x00000000455e84: jg short 0x0000000000455e99; jne 0x00000000004564f0; ret; 
0x00000000455ea4: jg short 0x0000000000455eba; jne 0x00000000004564f0; ret; 
0x00000000455ec7: jg short 0x0000000000455ede; jne 0x00000000004564f0; ret; 
0x00000000455ee6: jg short 0x0000000000455efe; jne 0x00000000004564f0; ret; 
0x00000000455f06: jg short 0x0000000000455f1f; jne 0x00000000004564f0; ret; 
0x00000000455f26: jg short 0x0000000000455f40; jne 0x00000000004564f0; ret; 
0x00000000455f49: jg short 0x0000000000455f64; jne 0x00000000004564f0; ret; 
0x00000000455f7e: jg short 0x0000000000455f9a; jne 0x00000000004564f0; ret; 
0x00000000455fac: jg short 0x0000000000455fc9; jne 0x00000000004564f0; ret; 
0x00000000455fdc: jg short 0x0000000000455ffa; jne 0x00000000004564f0; ret; 
0x00000000456008: jg short 0x0000000000456027; jne 0x00000000004564f0; ret; 
0x00000000456038: jg short 0x0000000000456058; jne 0x00000000004564f0; ret; 
0x00000000455fff: jg short 0x0000000000456058; or eax, 0x1de88349; lea rdi, [rdi+0x1d]; jne 0x00000000004564f0; ret; 
0x00000000456068: jg short 0x0000000000456089; jne 0x00000000004564f0; ret; 
0x0000000045605f: jg short 0x00000000004560b8; cmovns eax, [rbx-0x72b7e018]; jg short 0x0000000000456089; jne 0x00000000004564f0; ret; 
0x00000000456098: jg short 0x00000000004560ba; jne 0x00000000004564f0; ret; 
0x000000004561b6: jg short 0x00000000004561bf; ret; 
0x000000004561c9: jg short 0x00000000004561d2; mov [rdi+0x10], cl; ret; 
0x000000004561da: jg short 0x00000000004561e3; mov [rdi+0x10], cx; ret; 
0x000000004561f9: jg short 0x0000000000456202; mov [rdi+0xf], ecx; ret; 
0x00000000456209: jg short 0x0000000000456212; mov [rdi+0x10], ecx; ret; 
0x0000000045621c: jg short 0x0000000000456225; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x0000000045623a: jg short 0x0000000000456243; mov [rdi+0xe], rcx; ret; 
0x0000000045625a: jg short 0x0000000000456263; mov [rdi+0xf], rcx; ret; 
0x0000000045627a: jg short 0x0000000000456283; mov [rdi+0x10], rcx; ret; 
0x0000000045629d: jg short 0x00000000004562a6; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000004562be: jg short 0x00000000004562c7; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x000000004562dd: jg short 0x00000000004562e6; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000004562fd: jg short 0x0000000000456306; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x0000000045631b: jg short 0x0000000000456324; movdqu [rdi+0xd], xmm2; ret; 
0x0000000045633b: jg short 0x0000000000456344; movdqu [rdi+0xe], xmm2; ret; 
0x0000000045635b: jg short 0x0000000000456364; movdqu [rdi+0xf], xmm2; ret; 
0x0000000045637b: jg short 0x0000000000456384; movdqu [rdi+0x10], xmm2; ret; 
0x0000000045639e: jg short 0x00000000004563a7; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x000000004564b2: jg short 0x00000000004564bb; ret; 
0x000000004564a2: jg short 0x00000000004564eb; inc ebx; nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000004565f6: jg short 0x0000000000456628; ret; 
0x00000000456b76: jg short 0x0000000000456b7f; lea rax, [rdi+0xf]; ret; 
0x00000000456b86: jg short 0x0000000000456b8f; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x00000000456b9a: jg short 0x0000000000456ba3; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x00000000456bb9: jg short 0x0000000000456bc2; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x00000000456bd9: jg short 0x0000000000456be2; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x00000000456bf9: jg short 0x0000000000456c02; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x00000000456c1a: jg short 0x0000000000456c23; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x00000000456c3a: jg short 0x0000000000456c43; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x00000000456c5a: jg short 0x0000000000456c63; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x00000000456c7a: jg short 0x0000000000456c83; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x00000000456c9e: jg short 0x0000000000456ca7; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x00000000456cbd: jg short 0x0000000000456cc6; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x00000000456cdd: jg short 0x0000000000456ce6; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x00000000456cfb: jg short 0x0000000000456d04; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x00000000456d1b: jg short 0x0000000000456d24; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x00000000456d3b: jg short 0x0000000000456d44; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x00000000456cff: jg short 0x0000000000456d58; or eax, 0x1c478d48; ret; 
0x00000000456d5b: jg short 0x0000000000456d64; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x00000000456e72: jg short 0x0000000000456e88; pextrw edi, mm5, 0x74; ret far; 
0x000000004570ec: jg short 0x0000000000457105; vmovdqu [rdi+rdx-0xf], xmm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000045710c: jg short 0x0000000000457125; vmovdqu [rdi+rdx-0x1f], ymm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000045930b: jg short 0x0000000000459314; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000459301: jg short 0x000000000045931a; vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000459305: jg short 0x000000000045935d; loopne 0x00000000004592cc; vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x000000004597c8: jg short 0x00000000004597fa; movups [r11], xmm8; ret; 
0x00000000459896: jg short 0x00000000004598c8; movups [r11], xmm8; ret; 
0x000000004598d7: jg short 0x00000000004598e0; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x00000000459923: jg short 0x000000000045992c; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x0000000045997e: jg short 0x0000000000459987; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x00000000459b0f: jg short 0x0000000000459b34; vzeroupper; ret; 
0x00000000459b09: jg short 0x0000000000459b4c; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000459b04: jg short 0x0000000000459b7f; rol ch, 0x7e; jg short 0x0000000000459b4c; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000459bb6: jg short 0x0000000000459bbb; vzeroupper; ret; 
0x00000000459bb1: jg short 0x0000000000459c13; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x00000000459c42: jg short 0x0000000000459c67; vzeroupper; ret; 
0x00000000459c3c: jg short 0x0000000000459c7f; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000459c37: jg short 0x0000000000459cb2; rol ch, 0x7e; jg short 0x0000000000459c7f; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000459cd2: jg short 0x0000000000459cd7; vzeroupper; ret; 
0x00000000459d1f: jg short 0x0000000000459d29; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x00000000459ccd: jg short 0x0000000000459d2f; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x00000000459d6b: jg short 0x0000000000459d75; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x00000000459dce: jg short 0x0000000000459dd7; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x00000000459de6: jg short 0x0000000000459def; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x00000000459fc9: jg short 0x0000000000459fef; vzeroupper; ret; 
0x00000000459fc2: jg short 0x000000000045a006; std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x00000000459fb4: jg short 0x000000000045a028; jmp qword ptr [rdx-0xf]; 
0x0000000045a08a: jg short 0x000000000045a08f; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000045a08f: jg short 0x000000000045a095; vzeroupper; ret; 
0x0000000045a04f: jg short 0x000000000045a09b; jmp qword ptr [rdx-0x2f]; 
0x0000000045a154: jg short 0x000000000045a17a; vzeroupper; ret; 
0x0000000045a14d: jg short 0x000000000045a191; std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000045a13f: jg short 0x000000000045a1b3; jmp qword ptr [rdx-0xf]; 
0x0000000045a214: jg short 0x000000000045a219; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000045a219: jg short 0x000000000045a21f; vzeroupper; ret; 
0x0000000045a284: jg short 0x000000000045a28d; ret; 
0x0000000045a2f0: jg short 0x000000000045a2f9; ret; 
0x0000000045a304: jg short 0x000000000045a30d; movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x0000000045a308: jg short 0x000000000045a351; adc bl, dh; movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x0000000045a3f8: jg short 0x000000000045a401; vzeroupper; ret; 
0x0000000045a448: jg short 0x000000000045a451; vzeroupper; ret; 
0x0000000045a507: jg short 0x000000000045a510; vzeroupper; ret; 
0x0000000045a584: jg short 0x000000000045a58e; vzeroupper; ret; 
0x0000000045a5e4: jg short 0x000000000045a5ee; vzeroupper; ret; 
0x0000000045a6cf: jg short 0x000000000045a6d8; vzeroupper; ret; 
0x0000000045a6dd: jg short 0x000000000045a6e6; vzeroupper; ret; 
0x0000000045a85b: jg short 0x000000000045a820; nop [rax]; mov rax, rdx; pop rbx; ret; 
0x0000000045dfd0: jg short 0x000000000045e01b; mov edi, [rsp]; call rbx; 
0x0000000045e238: jg short 0x000000000045e23d; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000045fb32: jg short 0x000000000045fb24; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045fb9a: jg short 0x000000000045fb8c; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x000000004746c9: jg short 0x0000000000474656; mov ch, 0x0; idiv edi; jmp far fword ptr [rcx]; 
0x0000000047a605: jg short 0x000000000047a592; lea eax, [rax]; idiv edi; jmp far fword ptr [rcx]; 
0x00000000484c01: jg short 0x0000000000484c00; jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000048a53d: jg short 0x000000000048a552; std; jmp qword ptr [rsi+0x66]; 
0x0000000048fdfd: jg short 0x000000000048fe27; bnd call r11; 
0x0000000049028d: jg short 0x00000000004902b7; bnd call r11; 
0x000000004904e9: jg short 0x0000000000490513; bnd call r11; 
0x0000000049807f: jg short 0x0000000000498037; dec dword ptr [rax-0x77]; ret; 
0x000000004987e4: jg short 0x00000000004987f4; pcmpistri xmm2, xmm2, 0x3a; cmp edx, ecx; jle 0x0000000000498890; ret; 
0x00000000498f5f: jg short 0x0000000000498fa9; cmova edx, eax; mov eax, 0xd9; syscall; 
0x0000000049e8b9: jg short 0x000000000049e930; loopne 0x000000000049e875; add [rax], eax; add [rax], al; ret; 
0x00000000411497: jge short 0x00000000004114e1; lea esi, [rip+0xa3381]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000416d46: jge short 0x0000000000416d49; add [rbx+rcx*4+0x4], cl; and al, 0xe9; idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000431acd: jge short 0x0000000000431ad1; add [rax-0x73], cl; add eax, 0x27e19; cmove rax, rdx; ret; 
0x0000000043ec08: jge short 0x000000000043ec11; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ec07: jge short 0x000000000043ec11; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045a1d1: jge short 0x000000000045a21b; out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x0000000045bbca: jge short 0x000000000045bb8e; add eax, 0xe8c03100; ret far; 
0x0000000045d2b1: jge short 0x000000000045d2b3; call rbx; 
0x0000000045d2a8: jge short 0x000000000045d2ba; test rdi, rdi; jne short 0x000000000045d2d6; mov rdi, [rbp]; call rbx; 
0x0000000045df62: jge short 0x000000000045df64; call rbx; 
0x0000000045e00d: jge short 0x000000000045e00f; call rbx; 
0x0000000045e03d: jge short 0x000000000045e03f; call rbx; 
0x0000000045e06d: jge short 0x000000000045e06f; call rbx; 
0x0000000045e095: jge short 0x000000000045e097; call rbx; 
0x0000000045e4cf: jge short 0x000000000045e51a; mov edi, [rdi]; call rbx; 
0x0000000045e52d: jge short 0x000000000045e538; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000486cda: jge short 0x0000000000486cd6; jmp far fword ptr [rdx]; 
0x00000000486cd9: jge short 0x0000000000486cd6; jmp far fword ptr [rdx]; 
0x00000000488abc: jge short 0x0000000000488a86; add [rax-0x77], cl; ret; 
0x000000004982a7: jge short 0x000000000049825f; dec dword ptr [rax-0x77]; ret; 
0x0000000049d038: jge short 0x000000000049d083; shl ecx, cl; mov [rdi], r9; ret; 
0x0000000049e594: jge short 0x000000000049e596; add [rax], al; leave; ret; 
0x000000004a3d01: jge short 0x00000000004a3cfb; leave; ret; 
0x000000004a3e6e: jge short 0x00000000004a3e68; mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x000000004a3fc9: jge short 0x00000000004a3fc3; leave; ret; 
0x000000004a4012: jge short 0x00000000004a400c; mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x000000004a419b: jge short 0x00000000004a4195; mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x000000004a41eb: jge short 0x00000000004a41e5; leave; ret; 
0x000000004a427e: jge short 0x00000000004a4278; mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x000000004a678d: jge short 0x00000000004a679f; add rdi, rbp; call r12; 
0x000000004036f5: jl short 0x000000000040371b; adc al, ch; ret; 
0x0000000040ccf3: jl short 0x000000000040ccbd; or [rax], eax; ret; 
0x0000000040ccfb: jl short 0x000000000040ccc5; or [rax], eax; ret; 
0x00000000411201: jl short 0x0000000000411227; or al, 0x48; mov esi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x00000000415946: jl short 0x000000000041594f; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x00000000420fad: jl short 0x0000000000420fd3; cmp al, ch; ret far; 
0x0000000042d1a8: jl short 0x000000000042d1aa; add [rax], al; sub dword ptr [rip+0xb562d], 0x1; pop rbp; ret; 
0x00000000430d13: jl short 0x0000000000430d3a; and [rcx], dh; imul al; ret; 
0x00000000431c3d: jl short 0x0000000000431c41; add [rax-0x73], cl; add eax, 0x27cb9; cmove rax, rdx; ret; 
0x0000000043eca6: jl short 0x000000000043ecaf; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ed58: jl short 0x000000000043ed61; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000445e2a: jl short 0x0000000000445e74; adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x00000000445e31: jl short 0x0000000000445e7b; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x00000000445e38: jl short 0x0000000000445e82; adc [rcx-0x1], edi; ret; 
0x00000000445e66: jl short 0x0000000000445eb0; adc [rdi+0x1], ecx; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x00000000445e6d: jl short 0x0000000000445eb7; adc [rcx-0x2], edx; vmovups [r9-0x40], zmm3; ret; 
0x00000000445e74: jl short 0x0000000000445ebe; adc [rcx-0x1], ebx; ret; 
0x00000000446064: jl short 0x00000000004460ae; adc [rcx-0x3], ebp; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x0000000044606b: jl short 0x00000000004460b5; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x00000000446072: jl short 0x00000000004460bc; adc [rcx-0x1], edi; ret; 
0x000000004461cb: jl short 0x0000000000446215; adc [rcx+0x5], ebp; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000004461d2: jl short 0x000000000044621c; adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x000000004461d9: jl short 0x0000000000446223; adc [rcx+0x7], edi; ret; 
0x0000000044632d: jl short 0x0000000000446377; adc [rdi-0x6], ebp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000446334: jl short 0x000000000044637e; adc [rdi-0x7], esi; vmovups [rdi-0x200], zmm15; ret; 
0x0000000044633b: jl short 0x0000000000446385; adc [rdi-0x8], edi; ret; 
0x0000000044ed85: jl short 0x000000000044ed9e; and ecx, ebp; ret; 
0x0000000044eed0: jl short 0x000000000044eed4; add [rax], al; vzeroupper; ret; 
0x000000004592b2: jl short 0x00000000004592fc; adc [rsi-0x3], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592b9: jl short 0x0000000000459303; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592c0: jl short 0x000000000045930a; adc [rsi-0x1], edx; ret; 
0x000000004592d3: jl short 0x000000000045931d; adc [rdi+0x1], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592da: jl short 0x0000000000459324; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592e1: jl short 0x000000000045932b; adc [rsi-0x1], edx; ret; 
0x000000004592ee: jl short 0x0000000000459338; adc [rdi], edx; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592f4: jl short 0x000000000045933e; adc [rsi-0x1], edx; ret; 
0x000000004593bb: jl short 0x0000000000459405; adc [rsi-0x3], edx; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004593c2: jl short 0x000000000045940c; adc [rsi-0x2], edx; vmovups [rsi-0x40], zmm2; ret; 
0x000000004593c9: jl short 0x0000000000459413; adc [rsi-0x1], edx; ret; 
0x00000000459413: jl short 0x000000000045945d; adc [rsi+0x1], edx; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000045941a: jl short 0x0000000000459464; adc [rsi+0x2], edx; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000459421: jl short 0x000000000045946b; adc [rsi+0x3], edx; ret; 
0x000000004594b0: jl short 0x00000000004594fa; adc [rsi+0x5], edx; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004594b7: jl short 0x0000000000459501; adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004594be: jl short 0x0000000000459508; adc [rsi+0x7], edx; ret; 
0x00000000459eb4: jl short 0x0000000000459ecd; cld; vzeroupper; ret; 
0x0000000045c185: jl short 0x000000000045c1ab; or [rax+0x1], bh; syscall; 
0x0000000045c2cd: jl short 0x000000000045c2f3; or [rax+0x48], bh; syscall; 
0x0000000045c33e: jl short 0x000000000045c364; or al, 0x41; mov eax, eax; mov eax, 0x3; syscall; 
0x00000000460192: jl short 0x00000000004601c5; and bh, bh; loop 0x00000000004601fe; nop [rax+rax]; ret; 
0x00000000465155: jl short 0x000000000046517b; pop rax; mov rax, [rsp+0x28]; call rax; 
0x00000000465404: jl short 0x000000000046542a; pop rax; call r14; 
0x00000000465ef8: jl short 0x0000000000465f1e; pop rax; mov rax, [rsp+0x30]; call rax; 
0x0000000046616e: jl short 0x0000000000466194; pop rax; call rbx; 
0x000000004664cf: jl short 0x00000000004664f5; pop rax; mov rax, [rsp+0x18]; call rax; 
0x00000000466954: jl short 0x000000000046697a; pop rax; call r15; 
0x00000000466cf6: jl short 0x0000000000466d1c; pop rax; mov rax, [rsp+0x20]; call rax; 
0x00000000466f6b: jl short 0x0000000000466f91; pop rax; call rbx; 
0x0000000046738a: jl short 0x00000000004673b0; call r13; 
0x0000000046750e: jl short 0x0000000000467534; add [rax-0x78], eax; mov esp, 0x8514; add [rax+0x39], cl; ret far; 
0x0000000046788a: jl short 0x00000000004678b0; call rbx; 
0x00000000467f7d: jl short 0x0000000000467fa3; call r14; 
0x000000004684cb: jl short 0x00000000004684f1; call rbx; 
0x00000000468f0b: jl short 0x0000000000468f31; cmp [rax-0x75], cl; and al, 0x20; call rax; 
0x00000000469e9f: jl short 0x0000000000469ec5; push rax; mov rax, [rsp+0x20]; call rax; 
0x0000000046a289: jl short 0x000000000046a2af; push rax; call rbx; 
0x0000000046a86a: jl short 0x000000000046a890; call r13; 
0x0000000046ae0a: jl short 0x000000000046ae30; call rbx; 
0x0000000046b59c: jl short 0x000000000046b5c2; push rax; mov rax, [rsp+0x18]; call rax; 
0x0000000046b9ee: jl short 0x000000000046ba14; push rax; call rbx; 
0x0000000046bfca: jl short 0x000000000046bff0; call r13; 
0x0000000046c56d: jl short 0x000000000046c593; call rbx; 
0x0000000046ee76: jl short 0x000000000046eeb4; jmp far fword ptr [rsi]; 
0x000000004884c2: jl short 0x00000000004884f3; jmp far fword ptr [rdi]; 
0x0000000048f605: jl short 0x000000000048f60c; or al, ch; ret; 
0x000000004922d8: jl short 0x00000000004922da; add [rax], al; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x000000004960e2: jl short 0x0000000000496108; adc cl, bl; in eax, 0xdf; loopne 0x0000000000496073; ret; 
0x00000000499ee0: jl short 0x0000000000499f3d; cld; call qword ptr [rax-0x170876b4]; 
0x000000004987ee: jle 0x0000000000498890; ret; 
0x00000000426f8b: jle short 0x0000000000426f8e; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x0000000042814c: jle short 0x000000000042810b; jmp qword ptr [rax+rcx*2-0x75]; 
0x00000000429170: jle short 0x000000000042916f; dec dword ptr [rax-0x77]; ret; 
0x0000000042923b: jle short 0x000000000042923a; dec dword ptr [rax-0x77]; ret; 
0x0000000042e24d: jle short 0x000000000042e257; add al, ch; pop rbx; mov ch, 0xff; jmp qword ptr [rsi+0x66]; 
0x0000000043eabb: jle short 0x000000000043eac4; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eb56: jle short 0x000000000043eb5f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044e3a1: jle short 0x000000000044e3eb; bsf eax, edx; ret; 
0x0000000045916c: jle short 0x0000000000459184; movsxd rax, ecx; ret; 
0x00000000459b08: jle short 0x0000000000459b89; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000459c3b: jle short 0x0000000000459cbc; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x0000000045e0c0: jle short 0x000000000045e0d2; test r15, r15; jne 0x000000000045e2d2; mov rdi, [r14]; call rbx; 
0x0000000045e0f0: jle short 0x000000000045e102; test r15, r15; jne 0x000000000045e43a; mov rdi, [r14]; call rbx; 
0x0000000045e120: jle short 0x000000000045e132; test r15, r15; jne 0x000000000045e3e0; mov rdi, [r14]; call rbx; 
0x0000000045e150: jle short 0x000000000045e162; test r15, r15; jne 0x000000000045e386; mov rdi, [r14]; call rbx; 
0x0000000045e180: jle short 0x000000000045e192; test r15, r15; jne 0x000000000045e32c; mov rdi, [r14]; call rbx; 
0x0000000045e1b0: jle short 0x000000000045e1c2; test r15, r15; jne 0x000000000045e494; mov rdi, [r14]; call rbx; 
0x0000000045e1dc: jle short 0x000000000045e1ee; test r15, r15; jne short 0x000000000045e221; mov rdi, [r14]; call rbx; 
0x0000000045e208: jle short 0x000000000045e21a; test r15, r15; jne short 0x000000000045e278; mov rdi, [r14]; call rbx; 
0x00000000463c8e: jle short 0x0000000000463cad; or [rax], al; syscall; 
0x0000000046da1a: jle short 0x000000000046da40; sub eax, 0x1; mov [rdx+0x8], eax; pop rbx; ret; 
0x0000000049484d: jle short 0x0000000000494852; add [rcx-0x7d], al; in eax, dx; add [rax+0x39], ecx; ret; 
0x000000004a37ce: jle short 0x00000000004a37af; cmc; jmp qword ptr [rsi+0x66]; 
0x0000000045c80d: jmp far fword ptr [r15]; 
0x00000000487a51: jmp far fword ptr [rax+0x7850f01]; 
0x0000000047f05f: jmp far fword ptr [rax-0x38f38bfe]; 
0x0000000048a818: jmp far fword ptr [rax-0x5d7bf0fc]; 
0x00000000466a68: jmp far fword ptr [rax-0x777af0fe]; 
0x000000004742ca: jmp far fword ptr [rax-0x7bf0f0]; 
0x0000000040a3c1: jmp far fword ptr [rax]; 
0x00000000493f48: jmp far fword ptr [rbp+0x7f]; 
0x0000000040b451: jmp far fword ptr [rbx]; 
0x00000000425cf4: jmp far fword ptr [rcx+0x202]; 
0x00000000413ae5: jmp far fword ptr [rcx+0x41]; 
0x00000000409852: jmp far fword ptr [rcx]; 
0x0000000040b70b: jmp far fword ptr [rdi+0x17]; 
0x0000000042c660: jmp far fword ptr [rdi+0x32760000]; 
0x00000000413af0: jmp far fword ptr [rdi+0x41]; 
0x000000004878b4: jmp far fword ptr [rdi+0x48]; 
0x0000000040b445: jmp far fword ptr [rdi+rdi*8]; 
0x00000000460721: jmp far fword ptr [rdi-0x45]; 
0x00000000430332: jmp far fword ptr [rdi-0x78f10000]; 
0x00000000415824: jmp far fword ptr [rdi]; 
0x00000000483c2c: jmp far fword ptr [rdx+0x1]; 
0x0000000048bd44: jmp far fword ptr [rdx+0x9]; 
0x0000000040b45d: jmp far fword ptr [rdx]; 
0x0000000046cd9b: jmp far fword ptr [rdx]; 
0x00000000410654: jmp far fword ptr [rsi]; 
0x0000000043aa36: jmp far tbyte ptr [rcx]; 
0x0000000044630d: jmp qword ptr [r10+0x71]; 
0x000000004462c5: jmp qword ptr [r10-0x2f]; 
0x00000000446254: jmp qword ptr [r10-0xf]; 
0x00000000451183: jmp qword ptr [r14+0x66]; 
0x0000000044f8e8: jmp qword ptr [r14+0xf]; 
0x0000000048eedd: jmp qword ptr [rax+0x5]; 
0x0000000042f07f: jmp qword ptr [rax+rax*4+0x3c]; 
0x00000000463610: jmp qword ptr [rax+rcx*2+0x33]; 
0x00000000411ada: jmp qword ptr [rax+rcx*2+0x3]; 
0x00000000411f63: jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000046fd7e: jmp qword ptr [rax+rcx*2-0x77]; 
0x0000000047c601: jmp qword ptr [rax+rcx*8]; 
0x0000000047595e: jmp qword ptr [rax+rdx*8]; 
0x0000000040b48d: jmp qword ptr [rax]; 
0x00000000462868: jmp qword ptr [rbp+rax*2-0x75]; 
0x00000000411606: jmp qword ptr [rbx+rax*4+0x38]; 
0x0000000042a474: jmp qword ptr [rbx+rax*4+0x3c]; 
0x0000000046470a: jmp qword ptr [rbx+rcx*4+0x18]; 
0x0000000049f4c6: jmp qword ptr [rbx+rcx*4+0x30]; 
0x00000000412887: jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000474ffc: jmp qword ptr [rbx+rcx*4]; 
0x0000000040b469: jmp qword ptr [rbx]; 
0x0000000048edb5: jmp qword ptr [rcx+0x5]; 
0x00000000413add: jmp qword ptr [rcx+rax*2+0xf]; 
0x0000000045c8d7: jmp qword ptr [rcx+rax*2-0x75]; 
0x0000000041e716: jmp qword ptr [rcx+rax*2-0x77]; 
0x0000000047c3bd: jmp qword ptr [rcx+rax*8]; 
0x00000000412fd0: jmp qword ptr [rcx+rcx*4+0x18]; 
0x0000000049f4de: jmp qword ptr [rcx+rcx*4+0x1]; 
0x0000000041e1ce: jmp qword ptr [rcx+rcx*4+0x2]; 
0x00000000413238: jmp qword ptr [rcx+rcx*4+0x30]; 
0x0000000041315a: jmp qword ptr [rcx+rcx*4+0x8]; 
0x0000000040207e: jmp qword ptr [rcx-0x473cfe8b]; 
0x0000000040b481: jmp qword ptr [rcx]; 
0x0000000048e699: jmp qword ptr [rdi+0x6d]; 
0x00000000495398: jmp qword ptr [rdi+0x75]; 
0x0000000048ab9f: jmp qword ptr [rdi+rax*8+0x4]; 
0x0000000041f396: jmp qword ptr [rdi+rax*8]; 
0x00000000413b61: jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000475519: jmp qword ptr [rdi+rcx]; 
0x00000000495041: jmp qword ptr [rdi-0x75]; 
0x000000004461a6: jmp qword ptr [rdx+0x51]; 
0x00000000446307: jmp qword ptr [rdx+0x71]; 
0x000000004462bf: jmp qword ptr [rdx-0x2f]; 
0x00000000445e05: jmp qword ptr [rdx-0xf]; 
0x0000000040b475: jmp qword ptr [rdx]; 
0x00000000401790: jmp qword ptr [rsi+0x2e]; 
0x00000000497377: jmp qword ptr [rsi+0x3d]; 
0x00000000407645: jmp qword ptr [rsi+0x41]; 
0x00000000458f13: jmp qword ptr [rsi+0x44]; 
0x00000000440abf: jmp qword ptr [rsi+0x45]; 
0x000000004630b9: jmp qword ptr [rsi+0x48]; 
0x0000000042c844: jmp qword ptr [rsi+0x49]; 
0x00000000402150: jmp qword ptr [rsi+0x66]; 
0x00000000401d96: jmp qword ptr [rsi+0xf]; 
0x00000000473055: jmp qword ptr [rsi+rax*8]; 
0x0000000040279d: jmp qword ptr [rsi-0x70]; 
0x000000004748ce: jmp qword ptr [rsi-0x77]; 
0x0000000048c2f6: jmp qword ptr [rsi-0x7b]; 
0x0000000045c859: jmp qword ptr [rsi-0x7d]; 
0x0000000046e579: jmp qword ptr [rsi-0x7f]; 
0x0000000041c3cd: jmp qword ptr [rsi]; 
0x00000000493608: jmp qword ptr [rsi]; 
0x0000000042b4f1: jmp qword ptr [rsp+rax*2-0x75]; 
0x000000004257cb: jmp qword ptr [rsp+rax*2-0x77]; 
0x0000000041f1aa: jmp qword ptr [rsp+rcx*2-0x75]; 
0x00000000414ea8: jmp qword ptr [rsp+rsi*2+0x6b]; 
0x0000000041db74: jmp r10; 
0x0000000048fdd4: jmp r11; 
0x0000000046f141: jmp r8; 
0x0000000043b1f2: jmp r9; 
0x00000000401bf9: jmp rax; 
0x00000000417bbd: jmp rbx; 
0x000000004114a7: jmp rcx; 
0x00000000402073: jmp rdx; 
0x000000004741a4: jmp rsi; 
0x000000004772d3: jmp rsp; 
0x000000004a1809: jne 0x000000000040171e; xor eax, eax; add rsp, 0x8; ret; 
0x000000004a3916: jne 0x0000000000401755; mov rax, [rax]; add rsp, 0x8; ret; 
0x000000004a3978: jne 0x000000000040175a; mov [rcx], rdx; add rsp, 0x8; ret; 
0x00000000401fe2: jne 0x0000000000401ecc; nop; nop; leave; ret; 
0x00000000402af9: jne 0x0000000000402b8f; add rsp, 0xc8; ret; 
0x00000000402ca9: jne 0x0000000000402d3f; add rsp, 0xc8; ret; 
0x00000000403244: jne 0x0000000000403355; add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x00000000408610: jne 0x000000000040873f; add rsp, 0x18; pop rbx; pop r12; ret; 
0x0000000040a3c5: jne 0x000000000040a4a0; mov rax, 0x4decc0; ret; 
0x0000000040a368: jne 0x000000000040a4a0; mov rax, 0x4dedc0; ret; 
0x0000000040a3a6: jne 0x000000000040a4a0; mov rax, 0x4dee00; ret; 
0x0000000040a3e6: jne 0x000000000040a4a0; mov rax, 0x4def00; ret; 
0x0000000040a406: jne 0x000000000040a4a0; mov rax, 0x4e11e0; ret; 
0x00000000421f00: jne 0x0000000000421f9a; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000004228ad: jne 0x000000000042299c; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000042d1a6: jne 0x000000000042d228; sub dword ptr [rip+0xb562d], 0x1; pop rbp; ret; 
0x00000000434b43: jne 0x0000000000434a30; sub eax, ecx; vzeroupper; ret; 
0x0000000043900c: jne 0x0000000000438eb0; sub eax, ecx; vzeroupper; ret; 
0x00000000439984: jne 0x0000000000439890; ret; 
0x00000000439acf: jne 0x0000000000439890; vzeroupper; ret; 
0x0000000043ad37: jne 0x000000000043b163; movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x0000000043a7dd: jne 0x000000000043b163; movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x0000000043a731: jne 0x000000000043b163; xor eax, eax; ret; 
0x0000000043a828: jne 0x000000000043b16f; movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x0000000043a759: jne 0x000000000043b16f; xor eax, eax; ret; 
0x0000000043aa2a: jne 0x000000000043b17a; movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x0000000043a8bd: jne 0x000000000043b190; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000044ed20: jne 0x000000000044f150; vzeroupper; ret; 
0x00000000452781: jne 0x0000000000452d30; ret; 
0x00000000455c0f: jne 0x0000000000455b67; lea r11, [rip+0x61b54]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455c3a: jne 0x00000000004564f0; ret; 
0x000000004572b0: jne 0x00000000004571a0; lea rax, [rdi+0xb]; ret; 
0x00000000457269: jne 0x00000000004571a0; lea rax, [rdi+0xf]; ret; 
0x0000000045720c: jne 0x0000000000457380; test dl, 0x4; jne short 0x00000000004571a0; lea rax, [rdi+0x3]; ret; 
0x000000004572ee: jne 0x00000000004573b0; test al, 0x40; jne 0x00000000004573c0; lea rax, [rdi+0x7]; ret; 
0x000000004572f5: jne 0x00000000004573c0; lea rax, [rdi+0x7]; ret; 
0x000000004571dd: jne 0x00000000004573c0; test dl, 0x40; jne short 0x00000000004571a0; lea rax, [rdi+0x7]; ret; 
0x000000004572a7: jne 0x00000000004573f0; test dh, 0x4; jne 0x00000000004571a0; lea rax, [rdi+0xb]; ret; 
0x00000000457340: jne 0x0000000000457420; test ah, 0x40; jne 0x0000000000457430; lea rax, [rdi+0xf]; ret; 
0x00000000457348: jne 0x0000000000457430; lea rax, [rdi+0xf]; ret; 
0x00000000457260: jne 0x0000000000457430; test dh, 0x40; jne 0x00000000004571a0; lea rax, [rdi+0xf]; ret; 
0x00000000458974: jne 0x0000000000458b80; xor eax, eax; ret; 
0x00000000458ad4: jne 0x0000000000458b95; cmp eax, ecx; jne 0x0000000000458b95; xor eax, eax; ret; 
0x00000000458a21: jne 0x0000000000458b95; xor eax, eax; ret; 
0x0000000045b38c: jne 0x000000000045b431; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000045bfe5: jne 0x000000000045c091; add rsp, 0x68; pop rbp; pop r12; ret; 
0x0000000045c266: jne 0x000000000045c305; add rsp, 0x68; ret; 
0x0000000045e065: jne 0x000000000045e110; mov rdi, [r13]; call rbx; 
0x0000000045e035: jne 0x000000000045e170; mov rdi, [r13]; call rbx; 
0x0000000045e005: jne 0x000000000045e1d0; mov rdi, [r13]; call rbx; 
0x0000000045e0c5: jne 0x000000000045e2d2; mov rdi, [r14]; call rbx; 
0x0000000045e185: jne 0x000000000045e32c; mov rdi, [r14]; call rbx; 
0x0000000045e155: jne 0x000000000045e386; mov rdi, [r14]; call rbx; 
0x0000000045e125: jne 0x000000000045e3e0; mov rdi, [r14]; call rbx; 
0x0000000045e0f5: jne 0x000000000045e43a; mov rdi, [r14]; call rbx; 
0x0000000045e1b5: jne 0x000000000045e494; mov rdi, [r14]; call rbx; 
0x0000000045e236: jne 0x000000000045e5bb; mov rdi, [r15]; call rbx; 
0x0000000045e39b: jne 0x000000000045e629; mov rdi, [r15]; call rbx; 
0x0000000045e2ba: jne 0x000000000045e697; mov rdi, [r15]; call rbx; 
0x0000000045e44f: jne 0x000000000045e705; mov rdi, [r15]; call rbx; 
0x0000000045e314: jne 0x000000000045e773; mov rdi, [r15]; call rbx; 
0x0000000045e2e7: jne 0x000000000045e7e1; mov rdi, [r15]; call rbx; 
0x0000000045e36e: jne 0x000000000045e84f; mov rdi, [r15]; call rbx; 
0x0000000045e3f5: jne 0x000000000045e8bd; mov rdi, [r15]; call rbx; 
0x0000000045e260: jne 0x000000000045e92b; mov rdi, [r15]; call rbx; 
0x0000000045e341: jne 0x000000000045e999; mov rdi, [r15]; call rbx; 
0x0000000045e422: jne 0x000000000045ea07; mov rdi, [r15]; call rbx; 
0x0000000045e28d: jne 0x000000000045ea75; mov rdi, [r15]; call rbx; 
0x0000000045e3c8: jne 0x000000000045eae3; mov rdi, [r15]; call rbx; 
0x0000000045e47c: jne 0x000000000045eb51; mov rdi, [r15]; call rbx; 
0x0000000045eaf8: jne 0x000000000045ebfc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045ea8a: jne 0x000000000045ec2a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045ea1c: jne 0x000000000045ec58; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e9ae: jne 0x000000000045ec86; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e940: jne 0x000000000045ecb4; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e8d2: jne 0x000000000045ece2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e864: jne 0x000000000045ed10; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e7f6: jne 0x000000000045ed3e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e788: jne 0x000000000045ed6c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e71a: jne 0x000000000045ed9a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e6ac: jne 0x000000000045edc8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e63e: jne 0x000000000045edf6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e5d0: jne 0x000000000045ee24; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e562: jne 0x000000000045ee52; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e4f7: jne 0x000000000045ee80; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e52b: jne 0x000000000045eeae; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e6e3: jne 0x000000000045eedc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e89b: jne 0x000000000045ef0a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e607: jne 0x000000000045ef38; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e977: jne 0x000000000045ef66; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e7bf: jne 0x000000000045ef94; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045ea53: jne 0x000000000045efc2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e599: jne 0x000000000045eff0; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e909: jne 0x000000000045f01e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e751: jne 0x000000000045f04c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045eac1: jne 0x000000000045f07a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e675: jne 0x000000000045f0a8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e9e5: jne 0x000000000045f0d6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e82d: jne 0x000000000045f104; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045eb2f: jne 0x000000000045f132; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000470238: jne 0x00000000004702d6; add rsp, 0x98; ret; 
0x000000004827e5: jne 0x00000000004828c0; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x00000000482857: jne 0x0000000000482900; xor eax, eax; ret; 
0x00000000482ac6: jne 0x0000000000482b60; xor eax, eax; vzeroupper; ret; 
0x0000000048348a: jne 0x0000000000483530; mov rax, r8; vzeroupper; ret; 
0x000000004845fd: jne 0x00000000004846a0; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x000000004922d6: jne 0x0000000000492358; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x00000000497f5b: jne 0x0000000000498135; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000498b45: jne 0x0000000000498c20; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x00000000498bb7: jne 0x0000000000498c60; xor eax, eax; ret; 
0x00000000498e26: jne 0x0000000000498ec0; xor eax, eax; vzeroupper; ret; 
0x0000000049957b: jne 0x00000000004994f9; nop [rax]; call r13; 
0x0000000049c1a2: jne 0x000000000049c4c0; lea rsi, [rip+0x49831]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x0000000049e592: jne 0x000000000049e615; leave; ret; 
0x000000004a0b39: jne 0x00000000004a0d65; add rsp, 0x98; pop rbp; pop r12; ret; 
0x000000004a0e0c: jne 0x00000000004a0fa4; add rsp, 0x78; pop rbp; pop r12; ret; 
0x000000004a126d: jne 0x00000000004a11c0; add rsp, 0x38; ret; 
0x000000004017c8: jne short 0x00000000004017cb; ret; 
0x00000000402080: jne short 0x0000000000402083; ret; 
0x0000000040209b: jne short 0x00000000004020b0; mov eax, 0x1; mov [rip+0xe2228], eax; add rsp, 0x8; ret; 
0x00000000402963: jne short 0x0000000000402987; add rsp, 0x18; pop rbp; pop r12; ret; 
0x00000000404fea: jne short 0x0000000000404ff1; add rsp, 0x48; ret; 
0x0000000040534d: jne short 0x000000000040536c; add rsp, 0x10; pop rbp; ret; 
0x000000004077ee: jne short 0x00000000004077d8; mov eax, [rsi+0x14]; cmp [rdi+0x14], eax; sete al; ret; 
0x00000000407c3f: jne short 0x0000000000407c28; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000040884f: jne short 0x0000000000408860; cmp dword ptr [rdi+0x38], 0x1; sbb eax, eax; and eax, 0xffffffea; ret; 
0x000000004088a2: jne short 0x00000000004088c0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000408a01: jne short 0x00000000004089f0; mov eax, 0xffffffef; ret; 
0x00000000408b0c: jne short 0x0000000000408b13; add rsp, 0x18; ret; 
0x0000000040a42c: jne short 0x000000000040a4a0; mov rax, 0x4ded80; ret; 
0x0000000040a456: jne short 0x000000000040a4a0; mov rax, 0x4def40; ret; 
0x0000000040a43e: jne short 0x000000000040a4a0; mov rax, 0x4e1220; ret; 
0x0000000040a764: jne short 0x000000000040a76d; mov rax, 0x4e12e0; pop rbp; ret; 
0x0000000040aacd: jne short 0x000000000040aacf; add [rax], al; xor eax, eax; ret; 
0x0000000040b74d: jne short 0x000000000040b74f; add [rax], al; xor eax, eax; ret; 
0x0000000040c26d: jne short 0x000000000040c26f; add [rax], al; xor eax, eax; ret; 
0x0000000040cdad: jne short 0x000000000040cdaf; add [rax], al; xor eax, eax; ret; 
0x0000000041e0ad: jne short 0x000000000041e088; ret; 
0x0000000041e1ac: jne short 0x000000000041e1d4; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000041e312: jne short 0x000000000041e314; mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x0000000041f948: jne short 0x000000000041f952; add rsp, 0xd8; ret; 
0x00000000422bcc: jne short 0x0000000000422be0; mov eax, [rdx+0x4c]; cmp [rdx+0x48], eax; cmovne eax, ecx; ret; 
0x00000000425199: jne short 0x00000000004251a0; ret; 
0x0000000042615e: jne short 0x0000000000426170; sub dword ptr [rip+0xbeb49], 0x1; ret; 
0x00000000426819: jne short 0x0000000000426808; ret; 
0x00000000427766: jne short 0x0000000000427758; ret; 
0x00000000427a21: jne short 0x00000000004279e3; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004284fe: jne short 0x00000000004284f0; ret; 
0x00000000428537: jne short 0x0000000000428548; sub edx, [rax+0x18]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000042892a: jne short 0x0000000000428938; sub dword ptr [rip+0xbc37d], 0x1; ret; 
0x000000004294e7: jne short 0x00000000004294c8; nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000042bab0: jne short 0x000000000042babd; add [rbp+0x39], cl; ret; 
0x0000000042d66c: jne short 0x000000000042d674; add rsp, 0x10; pop rbp; ret; 
0x0000000042e2be: jne short 0x000000000042e2a0; pop rbx; pop rbp; pop r12; ret; 
0x0000000042e35d: jne short 0x000000000042e398; sub dword ptr [rip+0xb69ba], 0x1; pop rbx; ret; 
0x0000000042e467: jne short 0x000000000042e44f; test r8b, r8b; jne short 0x000000000042e479; mov dword ptr [rip+0xb68a8], 0x0; ret; 
0x0000000042e46c: jne short 0x000000000042e479; mov dword ptr [rip+0xb68a8], 0x0; ret; 
0x00000000430517: jne short 0x0000000000430500; sub rax, 0x10; ret; 
0x00000000431ce5: jne short 0x0000000000431ce8; add [rax-0x73], cl; add eax, 0x7330; cmove rax, rdx; ret; 
0x0000000043348c: jne short 0x0000000000433470; xor eax, eax; sub eax, ecx; ret; 
0x00000000434a4d: jne short 0x0000000000434a30; sub eax, ecx; vzeroupper; ret; 
0x00000000438ed2: jne short 0x0000000000438eb0; sub eax, ecx; vzeroupper; ret; 
0x000000004391d3: jne short 0x0000000000439220; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x0000000043988a: jne short 0x0000000000439890; vzeroupper; ret; 
0x0000000043b13d: jne short 0x000000000043b163; xor eax, eax; ret; 
0x0000000043b17c: jne short 0x000000000043b190; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000043f3e8: jne short 0x000000000043f3f1; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000457215: jne short 0x00000000004571a0; lea rax, [rdi+0x3]; ret; 
0x000000004571e6: jne short 0x00000000004571a0; lea rax, [rdi+0x7]; ret; 
0x00000000457196: jne short 0x00000000004571a4; nop [rax+rax]; xor rax, rax; ret; 
0x00000000458644: jne short 0x00000000004586c0; movzx eax, byte ptr [rdi-0x9]; movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x00000000458b91: jne short 0x0000000000458b95; cmp eax, ecx; sbb eax, eax; sbb eax, 0xffffffff; ret; 
0x00000000458b79: jne short 0x0000000000458b95; xor eax, eax; ret; 
0x00000000458ca1: jne short 0x0000000000458c90; ret; 
0x00000000458c98: jne short 0x0000000000458cb0; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x0000000000458c90; ret; 
0x00000000458d51: jne short 0x0000000000458d40; ret; 
0x00000000458d48: jne short 0x0000000000458d60; movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x0000000000458d40; ret; 
0x00000000458ec1: jne short 0x0000000000458eb0; lea rax, [rcx-0x1]; ret; 
0x00000000459011: jne short 0x0000000000459000; sub rax, 0x1; ret; 
0x0000000045a2a7: jne short 0x000000000045a2ad; mov rax, rdi; ret; 
0x0000000045a371: jne short 0x000000000045a357; rep ret; 
0x0000000045a4d8: jne short 0x000000000045a4bb; vzeroupper; ret; 
0x0000000045a69b: jne short 0x000000000045a676; vzeroupper; ret; 
0x0000000045aee3: jne short 0x000000000045af04; add rsp, 0x20; pop rbx; ret; 
0x0000000045bb23: jne short 0x000000000045bae8; add eax, 0x4634800; stosb [rdi]; add rax, rdx; notrack jmp rax; 
0x0000000045be8b: jne short 0x000000000045bea1; add rsp, 0x28; ret; 
0x0000000045c0ae: jne short 0x000000000045c0c0; syscall; 
0x0000000045c14e: jne short 0x000000000045c160; mov eax, 0x1; syscall; 
0x0000000045c282: jne short 0x000000000045c2b0; mov eax, 0x48; syscall; 
0x0000000045c31e: jne short 0x000000000045c330; mov eax, 0x3; syscall; 
0x0000000045cbbb: jne short 0x000000000045cc03; add rsp, 0x68; ret; 
0x0000000045cc4a: jne short 0x000000000045cc93; add rsp, 0x18; ret; 
0x0000000045cd02: jne short 0x000000000045cd4b; add rsp, 0x58; ret; 
0x0000000045cda0: jne short 0x000000000045cdeb; add rsp, 0x58; ret; 
0x0000000045cfde: jne short 0x000000000045cfe5; add rsp, 0x28; ret; 
0x0000000045d1a4: jne short 0x000000000045d1d8; mov rdi, rbp; mov edx, r13d; mov esi, 0x1; call r12; 
0x0000000045d234: jne short 0x000000000045d268; mov rdi, rbp; mov rdx, r13; mov esi, 0x1; call r12; 
0x0000000045d2ad: jne short 0x000000000045d2d6; mov rdi, [rbp]; call rbx; 
0x0000000045dde6: jne short 0x000000000045ddf0; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000045de1b: jne short 0x000000000045de70; mov rdi, rbp; xor edx, edx; mov esi, 0x1; call r12; 
0x0000000045de94: jne short 0x000000000045dea0; pop rbp; pop r12; pop r13; ret; 
0x0000000045decc: jne short 0x000000000045df18; mov rdi, rbp; mov rdx, r13; mov esi, 0x1; call r12; 
0x0000000045df5e: jne short 0x000000000045df88; mov rdi, [rbp]; call rbx; 
0x0000000045df9f: jne short 0x000000000045dff0; mov rdi, [r12]; call rbx; 
0x0000000045e000: jne short 0x000000000045e012; test r14, r14; jne 0x000000000045e1d0; mov rdi, [r13]; call rbx; 
0x0000000045e030: jne short 0x000000000045e042; test r14, r14; jne 0x000000000045e170; mov rdi, [r13]; call rbx; 
0x0000000045dfcf: jne short 0x000000000045e050; mov rdi, [r12]; call rbx; 
0x0000000045e060: jne short 0x000000000045e072; test r14, r14; jne 0x000000000045e110; mov rdi, [r13]; call rbx; 
0x0000000045e08c: jne short 0x000000000045e09e; test r14, r14; jne short 0x000000000045e0b0; mov rdi, [r13]; call rbx; 
0x0000000045e091: jne short 0x000000000045e0b0; mov rdi, [r13]; call rbx; 
0x0000000045e1e1: jne short 0x000000000045e221; mov rdi, [r14]; call rbx; 
0x0000000045e20d: jne short 0x000000000045e278; mov rdi, [r14]; call rbx; 
0x0000000045e4a5: jne short 0x000000000045e4e2; mov rdi, [r15]; call rbx; 
0x0000000045e4ce: jne short 0x000000000045e54d; mov rdi, [r15]; call rbx; 
0x0000000045eb62: jne short 0x000000000045ebaf; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045eb91: jne short 0x000000000045ebd7; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045f77a: jne short 0x000000000045f786; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000045f80a: jne short 0x000000000045f816; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000045f9e1: jne short 0x000000000045f9eb; add rsp, 0xd8; ret; 
0x00000000463449: jne short 0x00000000004633db; mov rdi, rbx; call rsi; 
0x000000004641f9: jne short 0x0000000000464248; add eax, 0xda4ee800; cli; jmp qword ptr [rsi+0x66]; 
0x0000000046a662: jne short 0x000000000046a65e; dec dword ptr [rbp-0x77]; ret; 
0x0000000046fec5: jne short 0x000000000046fecc; add rsp, 0x18; ret; 
0x0000000046ff5a: jne short 0x000000000046ff68; mov [rbx+0x40], esi; xor eax, eax; pop rbx; ret; 
0x00000000470140: jne short 0x0000000000470184; mov eax, r9d; add rsp, 0x148; ret; 
0x000000004718be: jne short 0x00000000004718e8; sub dword ptr [rip+0x736b9], 0x1; xor eax, eax; add rsp, 0x8; ret; 
0x00000000471f78: jne short 0x0000000000471f82; add rsp, 0xd8; ret; 
0x000000004806c1: jne short 0x00000000004806b0; ret; 
0x00000000480d52: jne short 0x0000000000480dc8; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x000000004818b3: jne short 0x000000000048189c; and r11d, 0xffffffbb; cmp r11d, 0xa; je short 0x00000000004818c0; ret; 
0x00000000482887: jne short 0x00000000004828e0; xor eax, eax; ret; 
0x00000000482b03: jne short 0x0000000000482b20; xor eax, eax; vzeroupper; ret; 
0x000000004830c7: jne short 0x00000000004830cd; xor rax, rax; ret; 
0x000000004834c3: jne short 0x00000000004834f0; mov rax, r8; vzeroupper; ret; 
0x00000000483d7d: jne short 0x0000000000483d70; ret; 
0x00000000483d87: jne short 0x0000000000483d8d; xor rax, rax; ret; 
0x00000000484633: jne short 0x0000000000484660; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x00000000484c6e: jne short 0x0000000000484c6d; jmp qword ptr [rsi+0xf]; 
0x00000000484e93: jne short 0x0000000000484eca; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x00000000485033: jne short 0x000000000048503d; movzx eax, al; add rsp, 0x58; ret; 
0x000000004850ed: jne short 0x0000000000485114; mov eax, r9d; add rsp, 0x38; ret; 
0x00000000485243: jne short 0x0000000000485250; ret; 
0x000000004856ad: jne short 0x000000000048566f; leave; mov eax, 0x1; ret; 
0x0000000048b72f: jne short 0x000000000048b738; pop rbx; ret; 
0x0000000048bab4: jne short 0x000000000048bac9; mov r14, [rbx]; mov rax, [rbx+0x10]; add rax, [r13]; call rax; 
0x0000000048bf03: jne short 0x000000000048bf07; call rax; 
0x0000000048c091: jne short 0x000000000048c095; call rax; 
0x0000000048c7a0: jne short 0x000000000048c7a4; call rax; 
0x0000000048c8d5: jne short 0x000000000048c8e7; mov [rbp-0xd8], r11; call rax; 
0x0000000048e3c0: jne short 0x000000000048e398; mov eax, [rcx]; ret; 
0x0000000048f042: jne short 0x000000000048f050; lea rax, [r8+0x1]; mov [rip+0x56421], rax; ret; 
0x0000000048f13b: jne short 0x000000000048f150; mov r8, [rip+0x5632c]; mov rax, r8; ret; 
0x0000000048fa45: jne short 0x000000000048fa60; mov qword ptr [rbx], 0x0; pop rbx; or dword ptr [rip+0x536f2], 0x1; ret; 
0x00000000490d2e: jne short 0x0000000000490cfe; movsx eax, dl; neg eax; ret; 
0x000000004918ce: jne short 0x00000000004918d6; add rsp, 0x20; pop rbx; ret; 
0x000000004919c9: jne short 0x00000000004919f3; add rsp, 0x38; ret; 
0x00000000491a95: jne short 0x0000000000491ac4; add rsp, 0x58; ret; 
0x00000000491c07: jne short 0x0000000000491c44; add rsp, 0x68; ret; 
0x00000000491f25: jne short 0x0000000000491f54; add rsp, 0x58; ret; 
0x0000000049231c: jne short 0x000000000049236f; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x00000000492715: jne short 0x0000000000492735; add rsp, 0x38; ret; 
0x00000000497d70: jne short 0x0000000000497da8; sub dword ptr [rip+0x4d29b], 0x1; mov eax, r8d; pop rbx; ret; 
0x00000000497e48: jne short 0x0000000000497e50; sub dword ptr [rdi], 0x1; ret; 
0x0000000049843a: jne short 0x0000000000498460; mov rdx, [rbx+0x10]; mov [rdx], rax; pop rbx; ret; 
0x000000004984bc: jne short 0x00000000004984c3; add rsp, 0x28; ret; 
0x000000004985aa: jne short 0x00000000004985b1; add rsp, 0x38; ret; 
0x00000000498be7: jne short 0x0000000000498c40; xor eax, eax; ret; 
0x00000000498e63: jne short 0x0000000000498e80; xor eax, eax; vzeroupper; ret; 
0x0000000049930b: jne short 0x0000000000499310; mov [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x0000000049ba00: jne short 0x000000000049ba08; ret; 
0x0000000049e809: jne short 0x000000000049e830; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000049e8ba: jne short 0x000000000049e89c; mov eax, 0x1; ret; 
0x0000000049e8b3: jne short 0x000000000049e8a2; cmp cx, 0x7fff; jne short 0x000000000049e89c; mov eax, 0x1; ret; 
0x0000000049e89a: jne short 0x000000000049e8c8; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000049e97c: jne short 0x000000000049e9e0; mov dword ptr [rdx], 0x0; mov eax, 0x2; ret; 
0x0000000049eb25: jne short 0x000000000049eb2c; add rsp, 0x38; ret; 
0x0000000049ec2a: jne short 0x000000000049ec36; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x0000000049ed08: jne short 0x000000000049ed14; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x000000004a17d7: jne short 0x00000000004a1800; mov rax, [rsi+0xa8]; add rsp, 0x8; ret; 
0x000000004a17e9: jne short 0x00000000004a1820; mov rax, [rsi+0xb8]; add rsp, 0x8; ret; 
0x000000004a28dc: jne short 0x00000000004a28e5; cmp qword ptr [r9+0x38], 0x0; je short 0x00000000004a2934; add rsp, 0x18; ret; 
0x000000004a3cfd: jne short 0x00000000004a3cef; mov r15, [rbp-0x8]; leave; ret; 
0x000000004a3fc5: jne short 0x00000000004a3fb7; mov r15, [rbp-0x8]; leave; ret; 
0x000000004a41e7: jne short 0x00000000004a41d9; mov r15, [rbp-0x8]; leave; ret; 
0x000000004a450e: jne short 0x00000000004a4530; add rsp, 0x8; ret; 
0x000000004a451b: jne short 0x00000000004a4553; mov eax, 0x8; add rsp, 0x8; ret; 
0x000000004a4577: jne short 0x00000000004a4588; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x000000004a458a: jne short 0x00000000004a45b3; xor eax, eax; add rsp, 0x8; ret; 
0x000000004a45d7: jne short 0x00000000004a45e8; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x000000004a45ea: jne short 0x00000000004a4613; xor eax, eax; add rsp, 0x8; ret; 
0x000000004a5a98: jne short 0x00000000004a5aa0; ret; 
0x000000004a5cd8: jne short 0x00000000004a5ce0; ret; 
0x000000004a5f9a: jne short 0x00000000004a5fbb; xor eax, eax; add rsp, 0x8; ret; 
0x000000004a6576: jne short 0x00000000004a6560; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004a65c9: jne short 0x00000000004a65a0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004a671d: jne short 0x00000000004a6700; pop rbx; ret; 
0x000000004a6835: jne short 0x00000000004a681d; pop rbx; ret; 
0x000000004a69cc: jne short 0x00000000004a69c9; call qword ptr [rax+0x30658b4c]; 
0x000000004a7c5e: jne short 0x00000000004a7c40; pop rbx; pop rbp; pop r12; ret; 
0x0000000040d89b: jno short 0x000000000040d85a; or [rax], eax; ret; 
0x0000000043a9ee: jno short 0x000000000043a9f7; add [rax], al; xor eax, eax; ret; 
0x00000000445e34: jno short 0x0000000000445e34; vmovups [r9-0x40], zmm7; ret; 
0x0000000044606e: jno short 0x000000000044606e; vmovups [r9-0x40], zmm15; ret; 
0x000000004461d5: jno short 0x00000000004461dd; vmovups [r9+0x1c0], zmm15; ret; 
0x0000000044632c: jno short 0x00000000004463aa; adc [rdi-0x6], rbp; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000446333: jno short 0x00000000004463b1; adc [rdi-0x7], rsi; vmovups [rdi-0x200], zmm15; ret; 
0x0000000044633a: jno short 0x00000000004463b8; adc [rdi-0x8], rdi; ret; 
0x00000000459738: jno short 0x000000000045972a; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x00000000459826: jno short 0x0000000000459818; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x00000000478827: jno short 0x0000000000478827; jmp qword ptr [rsi+0xf]; 
0x000000004a30c2: jno short 0x00000000004a30aa; cmc; jmp qword ptr [rsi+0x2e]; 
0x0000000040cceb: jnp short 0x000000000040ccb5; or [rax], eax; ret; 
0x000000004319db: jnp short 0x00000000004319df; add [rax-0x73], cl; add eax, 0x27bbb; cmove rax, rdx; ret; 
0x0000000043edf6: jnp short 0x000000000043edff; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048c46c: jnp short 0x000000000048c476; and eax, 0x8348df74; ret; 
0x000000004982c2: jnp short 0x00000000004982bd; dec dword ptr [rax-0x77]; ret; 
0x0000000040a978: jns 0xffffffffe0c9ed81; pop rbx; pop rbp; pop r12; ret; 
0x00000000407fa5: jns short 0x0000000000407f60; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000040c233: jns short 0x000000000040c208; or [rax], eax; ret; 
0x0000000040d84b: jns short 0x000000000040d80a; or [rax], eax; ret; 
0x00000000429801: jns short 0x0000000000429800; jmp qword ptr [rsi+0x66]; 
0x0000000042e7dd: jns short 0x000000000042e7e7; add al, ch; ret far; 
0x00000000431b3b: jns short 0x0000000000431b3f; add [rax-0x73], cl; add eax, 0x27a4b; cmove rax, rdx; ret; 
0x0000000043eff8: jns short 0x000000000043f001; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000445e3b: jns short 0x0000000000445e3c; ret; 
0x00000000446075: jns short 0x0000000000446076; ret; 
0x000000004461dc: jns short 0x00000000004461e5; ret; 
0x0000000045973c: jns short 0x000000000045971e; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x0000000045982a: jns short 0x000000000045980c; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x00000000459b05: jns short 0x0000000000459ac7; vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x00000000459c38: jns short 0x0000000000459bfa; vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x00000000459fbd: jns short 0x0000000000459fbd; vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000045a148: jns short 0x000000000045a148; vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000048f653: jns short 0x000000000048f649; stc; jmp qword ptr [rsi+0xf]; 
0x000000004a28e0: jns short 0x00000000004a291a; add [rdi+rcx*2+0x48], dh; add esp, 0x18; ret; 
0x00000000401cd8: jo short 0x0000000000401d15; add dil, r15b; loopne 0x0000000000401d45; nop; ret; 
0x0000000040b6f1: jo short 0x000000000040b70a; add [rax], al; cmovns eax, edx; add rsp, 0x8; ret; 
0x00000000410fa2: jo short 0x0000000000410f63; add [rax], esi; add [rax], al; mov eax, 0x9e; syscall; 
0x00000000411d70: jo short 0x0000000000411d9e; or al, [rax]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000041ec46: jo short 0x000000000041ec68; mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000041ed1c: jo short 0x000000000041ed60; add [rax+0x39], r9b; ret; 
0x0000000042b77d: jo short 0x000000000042b78a; add [rax+0x39], cl; ret; 
0x00000000431c3c: jo short 0x0000000000431cba; add al, [rax]; lea rax, [rip+0x27cb9]; cmove rax, rdx; ret; 
0x0000000045fb8a: jo short 0x000000000045fbac; ret; 
0x00000000467a65: jo short 0x0000000000467a76; mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x000000004687c1: jo short 0x00000000004687d2; mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x0000000046afe9: jo short 0x000000000046affa; mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x0000000046c741: jo short 0x000000000046c752; mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x00000000470d8b: jo short 0x0000000000470d9b; mov rsi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x000000004817ee: jo short 0x0000000000481830; mov [rax], rdx; xor eax, eax; ret; 
0x0000000048397c: jo short 0x00000000004839d9; pop rbp; pop r12; ret; 
0x000000004988dc: jo short 0x00000000004988de; add [rax], al; cmove rax, rdx; ret; 
0x000000004318f7: jp short 0x00000000004318f9; add [rax-0x73], cl; adc eax, 0x25b3f; cmovne rax, rdx; ret; 
0x0000000043eea8: jp short 0x000000000043eeb1; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ef46: jp short 0x000000000043ef4f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044efd2: jp short 0x000000000044efd5; add [rax], al; vzeroupper; ret; 
0x0000000045e71c: jp short 0x000000000045e724; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000047888d: jp short 0x00000000004788d7; movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x00000000490a8a: jp short 0x0000000000490b00; adc ecx, [rdi]; mov dh, 0x45; add cl, [rax-0x7d]; ret; 
0x0000000049a724: jp short 0x000000000049a725; jmp qword ptr [rsi+0xf]; 
0x0000000043d417: jrcxz 0x000000000043d465; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d45f: jrcxz 0x000000000043d4ad; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d49d: jrcxz 0x000000000043d4eb; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d4d9: jrcxz 0x000000000043d527; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d513: jrcxz 0x000000000043d561; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d54b: jrcxz 0x000000000043d599; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d573: jrcxz 0x000000000043d5c1; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043fdf7: jrcxz 0x000000000043fe45; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043fe3f: jrcxz 0x000000000043fe8d; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043fe7d: jrcxz 0x000000000043fecb; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043feb9: jrcxz 0x000000000043ff07; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043fef3: jrcxz 0x000000000043ff41; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043ff2b: jrcxz 0x000000000043ff79; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043ff53: jrcxz 0x000000000043ffa1; mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000442519: jrcxz 0x000000000044250f; movq [rdi-0x10], mm1; ret; 
0x00000000445049: jrcxz 0x000000000044503f; movq [rdi-0x10], mm1; ret; 
0x0000000045f355: jrcxz 0x000000000045f357; loop 0x000000000045f358; dec dword ptr [rax-0x7f]; ret; 
0x00000000462d93: jrcxz 0x0000000000462d8e; jmp qword ptr [rsi+0xf]; 
0x00000000462deb: jrcxz 0x0000000000462de6; jmp qword ptr [rsi+0xf]; 
0x000000004638eb: jrcxz 0x00000000004638e7; jmp qword ptr [rsi-0x70]; 
0x0000000046a399: jrcxz 0x000000000046a3c4; ret; 
0x0000000046b37d: jrcxz 0x000000000046b383; add al, ch; ret far; 
0x00000000474517: jrcxz 0x0000000000474518; jmp qword ptr [rsi+0xf]; 
0x000000004818b7: jrcxz 0x0000000000481874; cmp r11d, 0xa; je short 0x00000000004818c0; ret; 
0x00000000495894: jrcxz 0x00000000004958da; mov eax, eax; ret; 
0x00000000470482: js 0x0000000000470fba; mov rdi, [rsp+0x18]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x000000004553f5: js 0x0000000067085672; nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x00000000401e84: js short 0x0000000000401e8e; add [rax], al; leave; ret; 
0x00000000403044: js short 0x0000000000403046; add [rbp-0x76e68740], al; ret; 
0x00000000403062: js short 0x0000000000403078; mov dword ptr [rip+0xdf09a], 0x0; xor eax, eax; pop rbx; ret; 
0x0000000040315c: js short 0x0000000000403160; ret; 
0x0000000040657d: js short 0x000000000040658b; add [rdi], ecx; ret far; 
0x00000000408f4b: js short 0x0000000000408f58; add rsp, 0x18; pop rbp; pop r12; ret; 
0x0000000040976c: js short 0x000000000040976b; or [rax], eax; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x0000000040a9cd: js short 0x000000000040a9db; xor eax, eax; pop rbx; ret; 
0x0000000040b4a3: js short 0x000000000040b485; or [rax], eax; ret; 
0x00000000413b8b: js short 0x0000000000413b9c; test [rdi+rcx-0x7fc00000], ah; call far fword ptr [rax+0xf]; 
0x0000000041412a: js short 0x0000000000414132; add [rdi], cl; test [rcx+rdi*8-0x1], eax; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x000000004142d4: js short 0x00000000004142e5; test bh, al; or al, [rax]; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x00000000414c34: js short 0x0000000000414c45; test [rbx], ch; add [rax], eax; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x00000000414cce: js short 0x0000000000414d44; cmp al, [rax-0x80]; call far fword ptr [rax+0xf]; 
0x00000000414e28: js short 0x0000000000414e39; test [rbx], ch; add [rax], eax; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x00000000414ec2: js short 0x0000000000414f38; and al, [rax-0x80]; call far fword ptr [rax+0xf]; 
0x00000000431cab: js short 0x0000000000431caf; add [rax-0x73], cl; add eax, 0x278eb; cmove rax, rdx; ret; 
0x0000000043f096: js short 0x000000000043f09f; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f148: js short 0x000000000043f151; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004612f1: js short 0x00000000004612f9; add al, ch; push rsi; or ebx, edi; jmp qword ptr [rsi+0xf]; 
0x0000000046a3da: js short 0x000000000046a3d6; dec dword ptr [rcx-0x77]; ret far; 
0x00000000470060: js short 0x0000000000470071; adc [rsp+0x88], edi; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x00000000473878: js short 0x0000000000473840; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x0000000047465e: js short 0x0000000000474627; test eax, edi; idiv bh; call qword ptr [rax]; 
0x000000004817ea: js short 0x00000000004817fc; mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x00000000491553: js short 0x0000000000491559; add [rcx], dh; shr al, 0xb2; ret far; 
0x00000000498137: js short 0x0000000000498135; jmp qword ptr [rsi+0xf]; 
0x000000004a0e15: js short 0x00000000004a0e74; pop r12; ret; 
0x000000004a16be: js short 0x00000000004a16e8; mov [r9], r8; add rsp, 0x8; ret; 
0x000000004a466e: js short 0x00000000004a4698; mov [r9], r8; add rsp, 0x8; ret; 
0x000000004a600e: js short 0x00000000004a6038; mov [r9], r8; add rsp, 0x8; ret; 
0x0000000049b9fd: lahf; add al, 0x0; jne short 0x000000000049ba08; ret; 
0x0000000045d531: lahf; ret; 
0x0000000043a4cd: lahf; rol dword ptr [rdi], 0x0; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000485a63: lahf; std; call qword ptr [rax+0x31f1894c]; 
0x0000000045d52b: lahf; vpaddsw ymm0, ymm15, [rcx+0xf]; lahf; ret; 
0x0000000045d3ed: lar eax, [rax]; add [rcx-0x7d], cl; ret far; 
0x00000000442b9c: lddqu xmm0, [rsi+0x10]; movdqu [rdi+0x10], xmm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x00000000443216: lddqu xmm0, [rsi+0x1]; lddqu xmm1, [rsi]; movdqu [rdi+0x1], xmm0; movdqu [rdi], xmm1; ret; 
0x000000004431a6: lddqu xmm0, [rsi+0x2]; lddqu xmm1, [rsi]; movdqu [rdi+0x2], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000443136: lddqu xmm0, [rsi+0x3]; lddqu xmm1, [rsi]; movdqu [rdi+0x3], xmm0; movdqu [rdi], xmm1; ret; 
0x000000004430c6: lddqu xmm0, [rsi+0x4]; lddqu xmm1, [rsi]; movdqu [rdi+0x4], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000443056: lddqu xmm0, [rsi+0x5]; lddqu xmm1, [rsi]; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442fe6: lddqu xmm0, [rsi+0x6]; lddqu xmm1, [rsi]; movdqu [rdi+0x6], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442f76: lddqu xmm0, [rsi+0x7]; lddqu xmm1, [rsi]; movdqu [rdi+0x7], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442f06: lddqu xmm0, [rsi+0x8]; lddqu xmm1, [rsi]; movdqu [rdi+0x8], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442e96: lddqu xmm0, [rsi+0x9]; lddqu xmm1, [rsi]; movdqu [rdi+0x9], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442e26: lddqu xmm0, [rsi+0xa]; lddqu xmm1, [rsi]; movdqu [rdi+0xa], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442db6: lddqu xmm0, [rsi+0xb]; lddqu xmm1, [rsi]; movdqu [rdi+0xb], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442d46: lddqu xmm0, [rsi+0xc]; lddqu xmm1, [rsi]; movdqu [rdi+0xc], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442cd6: lddqu xmm0, [rsi+0xd]; lddqu xmm1, [rsi]; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442c66: lddqu xmm0, [rsi+0xe]; lddqu xmm1, [rsi]; movdqu [rdi+0xe], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442bf6: lddqu xmm0, [rsi+0xf]; lddqu xmm1, [rsi]; movdqu [rdi+0xf], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442386: lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x00000000442b2c: lddqu xmm0, [rsi-0x11]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442aac: lddqu xmm0, [rsi-0x12]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442a1c: lddqu xmm0, [rsi-0x13]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000044299c: lddqu xmm0, [rsi-0x14]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000044291c: lddqu xmm0, [rsi-0x15]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x15], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000044289c: lddqu xmm0, [rsi-0x16]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x16], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000044281c: lddqu xmm0, [rsi-0x17]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x17], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000044279c: lddqu xmm0, [rsi-0x18]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x18], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000044271c: lddqu xmm0, [rsi-0x19]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x19], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000044269c: lddqu xmm0, [rsi-0x1a]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1a], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000044261c: lddqu xmm0, [rsi-0x1b]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1b], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000044259c: lddqu xmm0, [rsi-0x1c]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1c], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000044250c: lddqu xmm0, [rsi-0x1d]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1d], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000044247c: lddqu xmm0, [rsi-0x1e]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1e], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004423ec: lddqu xmm0, [rsi-0x1f]; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1f], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000044237c: lddqu xmm0, [rsi-0x20]; movdqu [rdi-0x20], xmm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x00000000442ba6: lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x00000000442b31: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442ab1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442a21: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004429a1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442921: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x15], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004428a1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x16], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442821: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x17], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004427a1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x18], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442721: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x19], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004426a1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1a], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442621: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1b], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004425a1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1c], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442511: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1d], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442481: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1e], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004423f1: lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x1f], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000044321b: lddqu xmm1, [rsi]; movdqu [rdi+0x1], xmm0; movdqu [rdi], xmm1; ret; 
0x000000004431ab: lddqu xmm1, [rsi]; movdqu [rdi+0x2], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000044313b: lddqu xmm1, [rsi]; movdqu [rdi+0x3], xmm0; movdqu [rdi], xmm1; ret; 
0x000000004430cb: lddqu xmm1, [rsi]; movdqu [rdi+0x4], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000044305b: lddqu xmm1, [rsi]; movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442feb: lddqu xmm1, [rsi]; movdqu [rdi+0x6], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442f7b: lddqu xmm1, [rsi]; movdqu [rdi+0x7], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442f0b: lddqu xmm1, [rsi]; movdqu [rdi+0x8], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442e9b: lddqu xmm1, [rsi]; movdqu [rdi+0x9], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442e2b: lddqu xmm1, [rsi]; movdqu [rdi+0xa], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442dbb: lddqu xmm1, [rsi]; movdqu [rdi+0xb], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442d4b: lddqu xmm1, [rsi]; movdqu [rdi+0xc], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442cdb: lddqu xmm1, [rsi]; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442c6b: lddqu xmm1, [rsi]; movdqu [rdi+0xe], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442bfb: lddqu xmm1, [rsi]; movdqu [rdi+0xf], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000048f045: lea eax, [rax+0x1]; mov [rip+0x56421], rax; ret; 
0x000000004a16dc: lea eax, [rax+0x8]; mov [rcx], r8; ret; 
0x00000000439214: lea eax, [rax+rdi+0x10]; ret; 
0x00000000439224: lea eax, [rax+rdi+0x20]; ret; 
0x000000004391f4: lea eax, [rax+rdi-0x10]; ret; 
0x0000000048b103: lea eax, [rax+rdx*4]; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x0000000048b0d1: lea eax, [rax+rdx*4]; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x0000000043049d: lea eax, [rax-0x10]; ret; 
0x0000000047a607: lea eax, [rax]; idiv edi; jmp far fword ptr [rcx]; 
0x00000000482ded: lea eax, [rcx+rsi]; ret; 
0x00000000458ec4: lea eax, [rcx-0x1]; ret; 
0x00000000456b8c: lea eax, [rdi+0x10]; ret; 
0x00000000456ba1: lea eax, [rdi+0x11]; ret; 
0x00000000456bbf: lea eax, [rdi+0x12]; ret; 
0x00000000456bdf: lea eax, [rdi+0x13]; ret; 
0x00000000456c02: lea eax, [rdi+0x14]; ret; 
0x00000000456c21: lea eax, [rdi+0x15]; ret; 
0x00000000456c41: lea eax, [rdi+0x16]; ret; 
0x00000000456c61: lea eax, [rdi+0x17]; ret; 
0x00000000456c84: lea eax, [rdi+0x18]; ret; 
0x00000000456ca9: lea eax, [rdi+0x19]; ret; 
0x00000000456a27: lea eax, [rdi+0x1]; ret; 
0x00000000457067: lea eax, [rdi+0x1]; vzeroupper; ret; 
0x00000000456cc7: lea eax, [rdi+0x1a]; ret; 
0x00000000456ce7: lea eax, [rdi+0x1b]; ret; 
0x00000000456d03: lea eax, [rdi+0x1c]; ret; 
0x00000000456d23: lea eax, [rdi+0x1d]; ret; 
0x00000000456d43: lea eax, [rdi+0x1e]; ret; 
0x00000000456d63: lea eax, [rdi+0x1f]; ret; 
0x00000000456a3a: lea eax, [rdi+0x2]; ret; 
0x0000000045707b: lea eax, [rdi+0x2]; vzeroupper; ret; 
0x00000000456a45: lea eax, [rdi+0x3]; ret; 
0x00000000457095: lea eax, [rdi+0x3]; vzeroupper; ret; 
0x00000000456a58: lea eax, [rdi+0x4]; ret; 
0x00000000456a6d: lea eax, [rdi+0x5]; ret; 
0x00000000456a8b: lea eax, [rdi+0x6]; ret; 
0x00000000456a97: lea eax, [rdi+0x7]; ret; 
0x00000000456aaa: lea eax, [rdi+0x8]; ret; 
0x00000000456abf: lea eax, [rdi+0x9]; ret; 
0x00000000456add: lea eax, [rdi+0xa]; ret; 
0x00000000456afd: lea eax, [rdi+0xb]; ret; 
0x00000000456b1f: lea eax, [rdi+0xc]; ret; 
0x00000000456b3f: lea eax, [rdi+0xd]; ret; 
0x00000000456b5f: lea eax, [rdi+0xe]; ret; 
0x00000000456b79: lea eax, [rdi+0xf]; ret; 
0x000000004828e9: lea eax, [rdi+rax+0x10]; ret; 
0x0000000044e0b7: lea eax, [rdi+rax+0x20]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000004828f9: lea eax, [rdi+rax+0x20]; ret; 
0x000000004391dd: lea eax, [rdi+rax+0x30]; ret; 
0x0000000044e0d7: lea eax, [rdi+rax+0x40]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000044e115: lea eax, [rdi+rax+0x60]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000483035: lea eax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000044db10: lea eax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000044df7d: lea eax, [rdi+rax]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000044dd3b: lea eax, [rdi+rax]; ret; 
0x000000004570ad: lea eax, [rdi+rdx]; vzeroupper; ret; 
0x00000000482ce9: lea eax, [rdi+rsi]; ret; 
0x000000004916ac: lea eax, [rdi-0x1]; cmp rax, 0xfffffffffffffffd; jbe short 0x00000000004916c0; ret; 
0x0000000043daad: lea eax, [rdi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000456a13: lea eax, [rdi]; ret; 
0x00000000456fe5: lea eax, [rdi]; vzeroupper; ret; 
0x00000000454f17: lea eax, [rdx+0x1]; ret; 
0x00000000454f2d: lea eax, [rdx+0x2]; ret; 
0x00000000454f45: lea eax, [rdx+0x3]; ret; 
0x00000000454f5b: lea eax, [rdx+0x4]; ret; 
0x00000000454f6d: lea eax, [rdx+0x5]; ret; 
0x00000000454f8b: lea eax, [rdx+0x6]; ret; 
0x00000000454e97: lea eax, [rdx+0x7]; ret; 
0x00000000454f9d: lea eax, [rdx+0x8]; ret; 
0x00000000454fbd: lea eax, [rdx+0x9]; ret; 
0x00000000454fdd: lea eax, [rdx+0xa]; ret; 
0x00000000454ffd: lea eax, [rdx+0xb]; ret; 
0x0000000045501f: lea eax, [rdx+0xc]; ret; 
0x0000000045503f: lea eax, [rdx+0xd]; ret; 
0x0000000045505f: lea eax, [rdx+0xe]; ret; 
0x00000000454eef: lea eax, [rdx+0xf]; ret; 
0x00000000427a5e: lea eax, [rdx+rdi]; ret; 
0x00000000427a5d: lea eax, [rdx+rdi]; ret; 
0x0000000045a853: lea eax, [rdx+rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x00000000454f05: lea eax, [rdx]; ret; 
0x00000000481cda: lea eax, [rip+0x13e0]; cmove rax, rdx; ret; 
0x00000000431be6: lea eax, [rip+0x14914]; lea rdx, [rip+0x16b5d]; cmovne rax, rdx; ret; 
0x00000000431d2a: lea eax, [rip+0x1bfc0]; cmove rax, rdx; ret; 
0x00000000430e83: lea eax, [rip+0x1cc37]; lea rdx, [rip+0x26290]; cmovne rax, rdx; ret; 
0x00000000430fea: lea eax, [rip+0x1d330]; cmove rax, rdx; ret; 
0x00000000431b93: lea eax, [rip+0x1d8a7]; lea rdx, [rip+0x21cc0]; cmovne rax, rdx; ret; 
0x00000000430f43: lea eax, [rip+0x1e407]; lea rdx, [rip+0x1e5e0]; cmovne rax, rdx; ret; 
0x00000000483d43: lea eax, [rip+0x257]; lea rdx, [rip+0x30]; cmovne rax, rdx; ret; 
0x000000004318b3: lea eax, [rip+0x272f7]; cmove rax, rdx; ret; 
0x00000000431caf: lea eax, [rip+0x278eb]; cmove rax, rdx; ret; 
0x00000000431b3f: lea eax, [rip+0x27a4b]; cmove rax, rdx; ret; 
0x000000004319df: lea eax, [rip+0x27bbb]; cmove rax, rdx; ret; 
0x00000000431c41: lea eax, [rip+0x27cb9]; cmove rax, rdx; ret; 
0x00000000431ad1: lea eax, [rip+0x27e19]; cmove rax, rdx; ret; 
0x00000000431971: lea eax, [rip+0x27f89]; cmove rax, rdx; ret; 
0x00000000431c93: lea eax, [rip+0x280a7]; cmove rax, rdx; ret; 
0x00000000430f73: lea eax, [rip+0x280d7]; cmovne rax, rdx; ret; 
0x00000000431b23: lea eax, [rip+0x28207]; cmove rax, rdx; ret; 
0x000000004319c3: lea eax, [rip+0x28377]; cmove rax, rdx; ret; 
0x00000000431a5a: lea eax, [rip+0x287f0]; cmovne rax, rdx; ret; 
0x00000000431a3b: lea eax, [rip+0x289df]; cmove rax, rdx; ret; 
0x00000000431a83: lea eax, [rip+0x28b27]; cmove rax, rdx; ret; 
0x0000000042a6bf: lea eax, [rip+0x319b]; mov [rip+0xb80f4], rax; ret; 
0x0000000042a6b1: lea eax, [rip+0x3429]; mov [rip+0xb810a], rax; lea rax, [rip+0x319b]; mov [rip+0xb80f4], rax; ret; 
0x0000000043104d: lea eax, [rip+0x3afd]; lea rdx, [rip+0x5356]; cmovne rax, rdx; ret; 
0x00000000497eb1: lea eax, [rip+0x4d189]; mov [rip+0x4d16a], rax; ret; 
0x00000000497e9a: lea eax, [rip+0x4d1a0]; mov [rip+0x4d181], rax; add rsp, 0x8; ret; 
0x0000000048a35e: lea eax, [rip+0x58e5c]; shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x0000000047c805: lea eax, [rip+0x63335]; mov r11, rcx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047c7dc: lea eax, [rip+0x6375e]; jmp qword ptr [rax+rcx*8]; 
0x0000000047c59d: lea eax, [rip+0x6379d]; mov r11, rcx; mov dword ptr [rbp-0x4e8], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047c5fb: lea eax, [rip+0x6383f]; jmp qword ptr [rax+rcx*8]; 
0x00000000498663: lea eax, [rip+0x67]; cmovne rax, rdx; ret; 
0x0000000047639f: lea eax, [rip+0x6909b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000475b5b: lea eax, [rip+0x69cdf]; jmp qword ptr [rax+rdx*8]; 
0x000000004758ef: lea eax, [rip+0x69d4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000475958: lea eax, [rip+0x69de2]; jmp qword ptr [rax+rdx*8]; 
0x000000004988da: lea eax, [rip+0x70]; cmove rax, rdx; ret; 
0x00000000431cea: lea eax, [rip+0x7330]; cmove rax, rdx; ret; 
0x0000000046e48d: lea eax, [rip+0x737ad]; mov rax, [rax+rbp*8]; test rax, rax; je short 0x000000000046e49e; call rax; 
0x0000000046e207: lea eax, [rip+0x73a33]; mov rax, [rax+r12*8]; test rax, rax; je short 0x000000000046e218; call rax; 
0x000000004318f4: lea eax, [rip+0x7a86]; lea rdx, [rip+0x25b3f]; cmovne rax, rdx; ret; 
0x00000000431919: lea eax, [rip+0x7e61]; test byte ptr [rip+0xb34bf], 0x1; je short 0x00000000004318e1; ret; 
0x00000000481dda: lea eax, [rip+0x810]; cmove rax, rdx; ret; 
0x00000000461305: lea eax, [rip+0x81f55]; ret; 
0x00000000431c62: lea eax, [rip+0x9568]; lea rdx, [rip+0xeaf1]; cmovne rax, rdx; ret; 
0x00000000431af2: lea eax, [rip+0x96b8]; lea rdx, [rip+0xec41]; cmovne rax, rdx; ret; 
0x0000000048362a: lea eax, [rip+0x9b0]; cmove rax, rdx; ret; 
0x0000000040d8b1: lea eax, [rip+0x9bcf9]; ret; 
0x0000000040d8a1: lea eax, [rip+0x9bd00]; ret; 
0x0000000040d8a9: lea eax, [rip+0x9bd08]; ret; 
0x0000000040d861: lea eax, [rip+0x9bd1d]; ret; 
0x0000000040d871: lea eax, [rip+0x9bd1e]; ret; 
0x0000000040d829: lea eax, [rip+0x9bd3b]; ret; 
0x0000000040d831: lea eax, [rip+0x9bd3c]; ret; 
0x0000000040d899: lea eax, [rip+0x9bd71]; ret; 
0x0000000040d891: lea eax, [rip+0x9bd72]; ret; 
0x0000000040d889: lea eax, [rip+0x9bd74]; ret; 
0x0000000040d881: lea eax, [rip+0x9bd76]; ret; 
0x0000000040d7e1: lea eax, [rip+0x9bd77]; ret; 
0x0000000040d849: lea eax, [rip+0x9bd79]; ret; 
0x0000000040d851: lea eax, [rip+0x9bd7f]; ret; 
0x0000000040d7c1: lea eax, [rip+0x9bd80]; ret; 
0x0000000040d7b1: lea eax, [rip+0x9bd84]; ret; 
0x0000000040d841: lea eax, [rip+0x9bd88]; ret; 
0x0000000040d7a1: lea eax, [rip+0x9bd8c]; ret; 
0x0000000040d7d1: lea eax, [rip+0x9bd8e]; ret; 
0x0000000040d791: lea eax, [rip+0x9bd8f]; ret; 
0x0000000040d769: lea eax, [rip+0x9bdb0]; ret; 
0x0000000040d771: lea eax, [rip+0x9bdb7]; ret; 
0x0000000040d821: lea eax, [rip+0x9bdba]; ret; 
0x0000000040d781: lea eax, [rip+0x9bdcc]; ret; 
0x0000000040d811: lea eax, [rip+0x9bdd1]; ret; 
0x0000000040d801: lea eax, [rip+0x9bde8]; ret; 
0x0000000040d7f1: lea eax, [rip+0x9bdff]; ret; 
0x0000000040cd71: lea eax, [rip+0x9c839]; ret; 
0x0000000040cd61: lea eax, [rip+0x9c840]; ret; 
0x0000000040cd69: lea eax, [rip+0x9c848]; ret; 
0x0000000040cd21: lea eax, [rip+0x9c85d]; ret; 
0x0000000040cd31: lea eax, [rip+0x9c85e]; ret; 
0x0000000040cce9: lea eax, [rip+0x9c87b]; ret; 
0x0000000040ccf1: lea eax, [rip+0x9c87c]; ret; 
0x0000000040cd59: lea eax, [rip+0x9c8b1]; ret; 
0x0000000040cd51: lea eax, [rip+0x9c8b2]; ret; 
0x0000000040cd49: lea eax, [rip+0x9c8b4]; ret; 
0x0000000040cd41: lea eax, [rip+0x9c8b6]; ret; 
0x0000000040cca1: lea eax, [rip+0x9c8b7]; ret; 
0x0000000040cd09: lea eax, [rip+0x9c8b9]; ret; 
0x0000000040cd11: lea eax, [rip+0x9c8bf]; ret; 
0x0000000040cc81: lea eax, [rip+0x9c8c0]; ret; 
0x0000000040cc71: lea eax, [rip+0x9c8c4]; ret; 
0x0000000040cd01: lea eax, [rip+0x9c8c8]; ret; 
0x0000000040cc61: lea eax, [rip+0x9c8cc]; ret; 
0x0000000040cc91: lea eax, [rip+0x9c8ce]; ret; 
0x0000000040cc51: lea eax, [rip+0x9c8cf]; ret; 
0x0000000040cc29: lea eax, [rip+0x9c8f0]; ret; 
0x0000000040cc31: lea eax, [rip+0x9c8f7]; ret; 
0x0000000040cce1: lea eax, [rip+0x9c8fa]; ret; 
0x0000000040cc41: lea eax, [rip+0x9c90c]; ret; 
0x0000000040ccd1: lea eax, [rip+0x9c911]; ret; 
0x0000000040ccc1: lea eax, [rip+0x9c928]; ret; 
0x0000000040ccb1: lea eax, [rip+0x9c93f]; ret; 
0x0000000040c231: lea eax, [rip+0x9d379]; ret; 
0x0000000040c221: lea eax, [rip+0x9d380]; ret; 
0x0000000040c229: lea eax, [rip+0x9d388]; ret; 
0x0000000040c1e1: lea eax, [rip+0x9d39d]; ret; 
0x0000000040c1f1: lea eax, [rip+0x9d39e]; ret; 
0x0000000040c1a9: lea eax, [rip+0x9d3bb]; ret; 
0x0000000040c1b1: lea eax, [rip+0x9d3bc]; ret; 
0x0000000040c219: lea eax, [rip+0x9d3f1]; ret; 
0x0000000040c211: lea eax, [rip+0x9d3f2]; ret; 
0x0000000040c209: lea eax, [rip+0x9d3f4]; ret; 
0x0000000040c201: lea eax, [rip+0x9d3f6]; ret; 
0x0000000040c161: lea eax, [rip+0x9d3f7]; ret; 
0x0000000040c1c9: lea eax, [rip+0x9d3f9]; ret; 
0x0000000040c1d1: lea eax, [rip+0x9d3ff]; ret; 
0x0000000040c141: lea eax, [rip+0x9d400]; ret; 
0x0000000040c131: lea eax, [rip+0x9d404]; ret; 
0x0000000040c1c1: lea eax, [rip+0x9d408]; ret; 
0x0000000040c121: lea eax, [rip+0x9d40c]; ret; 
0x0000000040c151: lea eax, [rip+0x9d40e]; ret; 
0x0000000040c111: lea eax, [rip+0x9d40f]; ret; 
0x0000000040c0e9: lea eax, [rip+0x9d430]; ret; 
0x0000000040c0f1: lea eax, [rip+0x9d437]; ret; 
0x0000000040c1a1: lea eax, [rip+0x9d43a]; ret; 
0x0000000040c101: lea eax, [rip+0x9d44c]; ret; 
0x0000000040c191: lea eax, [rip+0x9d451]; ret; 
0x0000000040c181: lea eax, [rip+0x9d468]; ret; 
0x0000000040c171: lea eax, [rip+0x9d47f]; ret; 
0x0000000040b5f9: lea eax, [rip+0x9e004]; ret; 
0x0000000040b5f1: lea eax, [rip+0x9e012]; ret; 
0x0000000040b561: lea eax, [rip+0x9e014]; ret; 
0x0000000040b569: lea eax, [rip+0x9e015]; ret; 
0x0000000040b579: lea eax, [rip+0x9e016]; ret; 
0x0000000040b5b9: lea eax, [rip+0x9e017]; ret; 
0x0000000040b589: lea eax, [rip+0x9e018]; ret; 
0x0000000040b591: lea eax, [rip+0x9e019]; ret; 
0x0000000040b5c1: lea eax, [rip+0x9e01a]; ret; 
0x0000000040b5a1: lea eax, [rip+0x9e01b]; ret; 
0x0000000040b551: lea eax, [rip+0x9e01c]; ret; 
0x0000000040b5e9: lea eax, [rip+0x9e021]; ret; 
0x0000000040b541: lea eax, [rip+0x9e023]; ret; 
0x0000000040b531: lea eax, [rip+0x9e02e]; ret; 
0x0000000040b521: lea eax, [rip+0x9e037]; ret; 
0x0000000040b501: lea eax, [rip+0x9e040]; ret; 
0x0000000040b4f1: lea eax, [rip+0x9e044]; ret; 
0x0000000040b4e1: lea eax, [rip+0x9e04c]; ret; 
0x0000000040b4d1: lea eax, [rip+0x9e04f]; ret; 
0x0000000040b4b1: lea eax, [rip+0x9e077]; ret; 
0x0000000040b4a1: lea eax, [rip+0x9e078]; ret; 
0x0000000040b4c1: lea eax, [rip+0x9e08c]; ret; 
0x00000000402165: lea eax, [rip+0xa6f3d]; ret; 
0x0000000042a5ba: lea eax, [rip+0xb8220]; add rsp, 0x10; pop rbp; ret; 
0x0000000040d859: lea eax, [rip+0xbdf90]; ret; 
0x0000000040cd19: lea eax, [rip+0xbead0]; ret; 
0x0000000040c1d9: lea eax, [rip+0xbf610]; ret; 
0x0000000040b511: lea eax, [rip+0xc02d8]; ret; 
0x00000000431992: lea eax, [rip+0xc218]; lea rdx, [rip+0x118b1]; cmovne rax, rdx; ret; 
0x000000004310a3: lea eax, [rip+0xc97]; lea rdx, [rip+0x1fc30]; cmovne rax, rdx; ret; 
0x000000004109ea: lea eax, [rip+0xd38f0]; ret; 
0x00000000430ee3: lea eax, [rip+0xeb7]; lea rdx, [rip+0x25b0]; cmovne rax, rdx; ret; 
0x00000000481d1a: lea eax, [rip+0xed0]; cmove rax, rdx; ret; 
0x00000000498933: lea eax, [rip-0x3e589]; cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x0000000042e4bb: lea eax, [rip-0x9e1]; mov [rip+0xb4300], rax; lea rax, [rip-0xc6f]; mov [rip+0xb42ea], rax; ret; 
0x0000000042e4c9: lea eax, [rip-0xc6f]; mov [rip+0xb42ea], rax; ret; 
0x0000000040a8b4: lea eax, [rsi*8+0x10]; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x0000000040a880: lea eax, [rsi*8+0x10]; ret; 
0x0000000040a86e: lea eax, [rsi*8+0x14]; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x0000000040a8c8: lea eax, [rsi*8+0x14]; ret; 
0x0000000046cf20: lea eax, [rsp+0xa0]; call r15; 
0x0000000048f1a7: lea ebp, [rdi]; add eax, 0x7894800; mov rax, [rip+0x562b3]; mov [rsi], rax; ret; 
0x00000000411aa2: lea ebx, [rax-0x1]; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x0000000049a895: lea ebx, [rbp+rdx*8]; nop [rax]; call qword ptr [rbx]; 
0x00000000493a0e: lea ebx, [rdi+rdi*8-0x1]; jmp qword ptr [rsi+0xf]; 
0x00000000472556: lea ebx, [rdi+rsi*8-0x1]; dec dword ptr [rax-0x77]; test [rax], edi; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000004748ca: lea ebx, [rdi+rsi*8-0x1]; jmp qword ptr [rsi-0x77]; 
0x000000004569f6: lea ebx, [rip+0x60e48]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004569c1: lea ebx, [rip+0x60e7d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456995: lea ebx, [rip+0x60ea9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045697f: lea ebx, [rip+0x60ebf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045695d: lea ebx, [rip+0x60ee1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456938: lea ebx, [rip+0x60f06]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045691b: lea ebx, [rip+0x60f23]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004568c3: lea ebx, [rip+0x60f7b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045668a: lea ebx, [rip+0x610e0]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456591: lea ebx, [rip+0x61269]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045657b: lea ebx, [rip+0x6127f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045655b: lea ebx, [rip+0x6129f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455c16: lea ebx, [rip+0x61b54]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455bed: lea ebx, [rip+0x61b7d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455bcd: lea ebx, [rip+0x61b9d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455ba4: lea ebx, [rip+0x61bc6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b75: lea ebx, [rip+0x61bf5]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b56: lea ebx, [rip+0x61c14]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455ad1: lea ebx, [rip+0x61c19]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b34: lea ebx, [rip+0x61c36]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b04: lea ebx, [rip+0x61c66]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559ff: lea ebx, [rip+0x61ceb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559d1: lea ebx, [rip+0x61d19]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559a8: lea ebx, [rip+0x61d42]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004553b6: lea ebx, [rip+0x622b4]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455381: lea ebx, [rip+0x622e9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455355: lea ebx, [rip+0x62315]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045533f: lea ebx, [rip+0x6232b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045531d: lea ebx, [rip+0x6234d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004552f8: lea ebx, [rip+0x62372]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004552db: lea ebx, [rip+0x6238f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455283: lea ebx, [rip+0x623e7]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000444e52: lea ebx, [rip+0x721d8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444af4: lea ebx, [rip+0x72536]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444c9f: lea ebx, [rip+0x725cb]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444974: lea ebx, [rip+0x726b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444a37: lea ebx, [rip+0x72833]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004447f4: lea ebx, [rip+0x72836]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004448b7: lea ebx, [rip+0x729b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444674: lea ebx, [rip+0x729b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444737: lea ebx, [rip+0x72b33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004444f4: lea ebx, [rip+0x72b36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004445b8: lea ebx, [rip+0x72cb2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444374: lea ebx, [rip+0x72cb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444437: lea ebx, [rip+0x72e33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004441f4: lea ebx, [rip+0x72e36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004442b7: lea ebx, [rip+0x72fb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444074: lea ebx, [rip+0x72fb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444137: lea ebx, [rip+0x73133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443ef4: lea ebx, [rip+0x73136]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443fb7: lea ebx, [rip+0x732b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443d74: lea ebx, [rip+0x732b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443e37: lea ebx, [rip+0x73433]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443bf4: lea ebx, [rip+0x73436]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443cb7: lea ebx, [rip+0x735b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443a74: lea ebx, [rip+0x735b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443b37: lea ebx, [rip+0x73733]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004438f4: lea ebx, [rip+0x73736]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004439b7: lea ebx, [rip+0x738b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443774: lea ebx, [rip+0x738b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443837: lea ebx, [rip+0x73a33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004435f4: lea ebx, [rip+0x73a36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044347b: lea ebx, [rip+0x73baf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004436b7: lea ebx, [rip+0x73bb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443537: lea ebx, [rip+0x73d33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443270: lea ebx, [rip+0x73dba]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004433fa: lea ebx, [rip+0x73e70]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443293: lea ebx, [rip+0x73fd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443350: lea ebx, [rip+0x7419a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x000000004432e9: lea ebx, [rip+0x741c1]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000044231e: lea ebx, [rip+0x7480c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441ff4: lea ebx, [rip+0x74b36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044218b: lea ebx, [rip+0x74bdf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441e74: lea ebx, [rip+0x74cb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441f37: lea ebx, [rip+0x74e33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441cf4: lea ebx, [rip+0x74e36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441db7: lea ebx, [rip+0x74fb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441b74: lea ebx, [rip+0x74fb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441c37: lea ebx, [rip+0x75133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004419f4: lea ebx, [rip+0x75136]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441ab8: lea ebx, [rip+0x752b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441874: lea ebx, [rip+0x752b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441937: lea ebx, [rip+0x75433]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004416f4: lea ebx, [rip+0x75436]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004417b7: lea ebx, [rip+0x755b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441574: lea ebx, [rip+0x755b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441637: lea ebx, [rip+0x75733]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004413f4: lea ebx, [rip+0x75736]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004414b7: lea ebx, [rip+0x758b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441274: lea ebx, [rip+0x758b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441337: lea ebx, [rip+0x75a33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004410f4: lea ebx, [rip+0x75a36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004411b7: lea ebx, [rip+0x75bb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440f74: lea ebx, [rip+0x75bb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441037: lea ebx, [rip+0x75d33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440df4: lea ebx, [rip+0x75d36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440eb7: lea ebx, [rip+0x75eb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440c74: lea ebx, [rip+0x75eb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440d37: lea ebx, [rip+0x76033]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440af4: lea ebx, [rip+0x76036]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044097b: lea ebx, [rip+0x761af]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440bb7: lea ebx, [rip+0x761b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440715: lea ebx, [rip+0x76255]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440658: lea ebx, [rip+0x76312]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440a37: lea ebx, [rip+0x76333]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440790: lea ebx, [rip+0x7639a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044056d: lea ebx, [rip+0x763fd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004408fa: lea ebx, [rip+0x76470]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004404a2: lea ebx, [rip+0x764c8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044077c: lea ebx, [rip+0x765ee]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440850: lea ebx, [rip+0x7679a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x000000004407ee: lea ebx, [rip+0x767bc]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000043f483: lea ebx, [rip+0x774e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f3e5: lea ebx, [rip+0x77585]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f333: lea ebx, [rip+0x77637]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f295: lea ebx, [rip+0x776d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f1e3: lea ebx, [rip+0x77787]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f145: lea ebx, [rip+0x77825]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f093: lea ebx, [rip+0x778d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eff5: lea ebx, [rip+0x77975]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ef43: lea ebx, [rip+0x77a27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eea5: lea ebx, [rip+0x77ac5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043edf3: lea ebx, [rip+0x77b77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ed55: lea ebx, [rip+0x77c15]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eca3: lea ebx, [rip+0x77cc7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ec05: lea ebx, [rip+0x77d65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eb53: lea ebx, [rip+0x77e17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eab8: lea ebx, [rip+0x77eb2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ea03: lea ebx, [rip+0x77f67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e965: lea ebx, [rip+0x78005]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e8b3: lea ebx, [rip+0x780b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e815: lea ebx, [rip+0x78155]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e763: lea ebx, [rip+0x78207]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e6c5: lea ebx, [rip+0x782a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e613: lea ebx, [rip+0x78357]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e575: lea ebx, [rip+0x783f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e4c3: lea ebx, [rip+0x784a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e425: lea ebx, [rip+0x78545]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e373: lea ebx, [rip+0x785f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e2d5: lea ebx, [rip+0x78695]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e223: lea ebx, [rip+0x78747]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e185: lea ebx, [rip+0x787e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e0d7: lea ebx, [rip+0x78893]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dfe6: lea ebx, [rip+0x78984]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043df27: lea ebx, [rip+0x78a43]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043debd: lea ebx, [rip+0x78aad]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ddbe: lea ebx, [rip+0x78bac]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043db84: lea ebx, [rip+0x78c26]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dcf9: lea ebx, [rip+0x78c71]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043daaa: lea ebx, [rip+0x78d00]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dc86: lea ebx, [rip+0x78e64]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043dc2c: lea ebx, [rip+0x78e7e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043caa3: lea ebx, [rip+0x79d07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ca05: lea ebx, [rip+0x79da5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c953: lea ebx, [rip+0x79e57]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c8b5: lea ebx, [rip+0x79ef5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c803: lea ebx, [rip+0x79fa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c765: lea ebx, [rip+0x7a045]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c6b3: lea ebx, [rip+0x7a0f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c615: lea ebx, [rip+0x7a195]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c563: lea ebx, [rip+0x7a247]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c4c5: lea ebx, [rip+0x7a2e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c413: lea ebx, [rip+0x7a397]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c375: lea ebx, [rip+0x7a435]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c2c3: lea ebx, [rip+0x7a4e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c225: lea ebx, [rip+0x7a585]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c173: lea ebx, [rip+0x7a637]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c0d8: lea ebx, [rip+0x7a6d2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c023: lea ebx, [rip+0x7a787]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bf85: lea ebx, [rip+0x7a825]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bed3: lea ebx, [rip+0x7a8d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043be35: lea ebx, [rip+0x7a975]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bd83: lea ebx, [rip+0x7aa27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bce5: lea ebx, [rip+0x7aac5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bc33: lea ebx, [rip+0x7ab77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bb95: lea ebx, [rip+0x7ac15]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bae3: lea ebx, [rip+0x7acc7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ba45: lea ebx, [rip+0x7ad65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b993: lea ebx, [rip+0x7ae17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b8f5: lea ebx, [rip+0x7aeb5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b843: lea ebx, [rip+0x7af67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b7a5: lea ebx, [rip+0x7b005]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b6f7: lea ebx, [rip+0x7b0b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b606: lea ebx, [rip+0x7b1a4]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b547: lea ebx, [rip+0x7b263]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b4dd: lea ebx, [rip+0x7b2cd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b3de: lea ebx, [rip+0x7b3cc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b319: lea ebx, [rip+0x7b491]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b2a6: lea ebx, [rip+0x7b684]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043b245: lea ebx, [rip+0x7b6a5]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043a5d4: lea ebx, [rip+0x7c096]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a55a: lea ebx, [rip+0x7c110]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a4cb: lea ebx, [rip+0x7c19f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a2c0: lea ebx, [rip+0x7c3aa]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a18e: lea ebx, [rip+0x7c4dc]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a0c8: lea ebx, [rip+0x7c5a2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a04a: lea ebx, [rip+0x7c620]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439fb5: lea ebx, [rip+0x7c6b5]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439db8: lea ebx, [rip+0x7c8b2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439c86: lea ebx, [rip+0x7c9e4]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439b7b: lea ebx, [rip+0x7caef]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000042555e: lea ebx, [rip+0x8fb74]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000425590: lea ebx, [rip+0x8fb9e]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x000000004255c2: lea ebx, [rip+0x8fbc8]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x000000004255f4: lea ebx, [rip+0x8fbf2]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000041db62: lea ebx, [rip+0x96fb0]; movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x000000004a43df: lea ebx, [rsp+rcx*8]; mov rsi, [rbx]; call rax; 
0x0000000042ce68: lea ecx, [r8+0x280]; shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x000000004837bb: lea ecx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x0000000042ce69: lea ecx, [rax+0x280]; shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x0000000048394e: lea ecx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x00000000422cab: lea ecx, [rbp-0x40]; mov rcx, r14; mov rdi, r15; call r12; 
0x0000000047f005: lea ecx, [rbx+0x40]; lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x0000000047f5ff: lea ecx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x0000000043b250: lea ecx, [rbx+rcx]; notrack jmp r9; 
0x0000000045528e: lea ecx, [rbx+rcx]; notrack jmp rcx; 
0x00000000472784: lea ecx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000043b721: lea ecx, [rcx-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000040bfdc: lea ecx, [rdi]; test [rip-0x7cffffff], bl; call far fword ptr [rax+0x174840f]; 
0x0000000040b38c: lea ecx, [rdi]; test [rip-0x7cffffff], ch; call far fword ptr [rax+0x184840f]; 
0x000000004527e6: lea ecx, [rdx+0x10]; jne 0x0000000000452d30; ret; 
0x000000004529dc: lea ecx, [rdx+0x1]; jne 0x0000000000452d30; ret; 
0x000000004529fe: lea ecx, [rdx+0x2]; jne 0x0000000000452d30; ret; 
0x00000000452a24: lea ecx, [rdx+0x3]; jne 0x0000000000452d30; ret; 
0x00000000452a3c: lea ecx, [rdx+0x4]; jne 0x0000000000452d30; ret; 
0x00000000452a62: lea ecx, [rdx+0x5]; jne 0x0000000000452d30; ret; 
0x00000000452a84: lea ecx, [rdx+0x6]; jne 0x0000000000452d30; ret; 
0x00000000452aa2: lea ecx, [rdx+0x7]; jne 0x0000000000452d30; ret; 
0x0000000045277e: lea ecx, [rdx+0x8]; jne 0x0000000000452d30; ret; 
0x00000000452ac4: lea ecx, [rdx+0x9]; jne 0x0000000000452d30; ret; 
0x00000000452ae4: lea ecx, [rdx+0xa]; jne 0x0000000000452d30; ret; 
0x00000000452b04: lea ecx, [rdx+0xb]; jne 0x0000000000452d30; ret; 
0x00000000452b24: lea ecx, [rdx+0xc]; jne 0x0000000000452d30; ret; 
0x00000000452b46: lea ecx, [rdx+0xd]; jne 0x0000000000452d30; ret; 
0x00000000452b66: lea ecx, [rdx+0xe]; jne 0x0000000000452d30; ret; 
0x00000000452b86: lea ecx, [rdx+0xf]; jne 0x0000000000452d30; ret; 
0x00000000437c80: lea ecx, [rdx+rcx-0x10]; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x000000004a5fdb: lea ecx, [rip+0x2a877]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000004a463b: lea ecx, [rip+0x2c1d7]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000004a168b: lea ecx, [rip+0x2ebef]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000047f29c: lea ecx, [rip+0x497a2]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000047eae8: lea ecx, [rip+0x49d12]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000047c3b7: lea ecx, [rip+0x63c83]; jmp qword ptr [rcx+rax*8]; 
0x0000000044da59: lea ecx, [rip+0x6d2e1]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044c644: lea ecx, [rip+0x6e6f6]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000044c3d9: lea ecx, [rip+0x6e961]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044ab04: lea ecx, [rip+0x70236]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000040dbb3: lea ecx, [rip+0x9c0e7]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000408a2e: lea ecx, [rip+0xa0a24]; mov esi, esi; movsxd rax, [rcx+rsi*4]; add rax, rcx; notrack jmp rax; 
0x00000000407cce: lea ecx, [rip+0xa1704]; mov r8d, ecx; movsxd rdx, [r9+r8*4]; add rdx, r9; notrack jmp rdx; 
0x00000000402065: lea ecx, [rip+0xa6f9d]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000004234e6: lea ecx, [rip+0xc0794]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000045fabe: lea ecx, [rip-0x64]; mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x00000000485256: lea ecx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000048523b: lea ecx, [rsi+rcx*4]; mov edx, [rcx+rdx]; test edx, edx; jne short 0x0000000000485250; ret; 
0x00000000422a62: lea ecx, [rsp+0x18]; call rbp; 
0x000000004838e2: lea ecx, [rsp+0x20]; call rbx; 
0x000000004837bf: lea ecx, [rsp+0x28]; call rbx; 
0x00000000483aed: lea ecx, [rsp+0x30]; call rbx; 
0x000000004704ad: lea edi, [rax+rsi]; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x00000000460191: lea edi, [rcx+rsi+0x20]; jmp rdx; 
0x00000000455e1d: lea edi, [rdi+0x10]; jne 0x00000000004564f0; ret; 
0x00000000455e40: lea edi, [rdi+0x11]; jne 0x00000000004564f0; ret; 
0x00000000455e65: lea edi, [rdi+0x12]; jne 0x00000000004564f0; ret; 
0x00000000455e83: lea edi, [rdi+0x13]; jne 0x00000000004564f0; ret; 
0x00000000455ea3: lea edi, [rdi+0x14]; jne 0x00000000004564f0; ret; 
0x00000000455ec6: lea edi, [rdi+0x15]; jne 0x00000000004564f0; ret; 
0x00000000455ee5: lea edi, [rdi+0x16]; jne 0x00000000004564f0; ret; 
0x00000000455f05: lea edi, [rdi+0x17]; jne 0x00000000004564f0; ret; 
0x00000000455f25: lea edi, [rdi+0x18]; jne 0x00000000004564f0; ret; 
0x00000000455f48: lea edi, [rdi+0x19]; jne 0x00000000004564f0; ret; 
0x0000000044ed1d: lea edi, [rdi+0x1]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c37: lea edi, [rdi+0x1]; jne 0x00000000004564f0; ret; 
0x00000000455f7d: lea edi, [rdi+0x1a]; jne 0x00000000004564f0; ret; 
0x00000000455fab: lea edi, [rdi+0x1b]; jne 0x00000000004564f0; ret; 
0x00000000455fdb: lea edi, [rdi+0x1c]; jne 0x00000000004564f0; ret; 
0x00000000456007: lea edi, [rdi+0x1d]; jne 0x00000000004564f0; ret; 
0x00000000456037: lea edi, [rdi+0x1e]; jne 0x00000000004564f0; ret; 
0x00000000456067: lea edi, [rdi+0x1f]; jne 0x00000000004564f0; ret; 
0x00000000456097: lea edi, [rdi+0x20]; jne 0x00000000004564f0; ret; 
0x0000000044eecb: lea edi, [rdi+0x2]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c5b: lea edi, [rdi+0x2]; jne 0x00000000004564f0; ret; 
0x0000000044eeef: lea edi, [rdi+0x3]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c7e: lea edi, [rdi+0x3]; jne 0x00000000004564f0; ret; 
0x0000000044ef09: lea edi, [rdi+0x4]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c99: lea edi, [rdi+0x4]; jne 0x00000000004564f0; ret; 
0x00000000455cbc: lea edi, [rdi+0x5]; jne 0x00000000004564f0; ret; 
0x00000000455ce1: lea edi, [rdi+0x6]; jne 0x00000000004564f0; ret; 
0x00000000455cff: lea edi, [rdi+0x7]; jne 0x00000000004564f0; ret; 
0x00000000455d1b: lea edi, [rdi+0x8]; jne 0x00000000004564f0; ret; 
0x00000000455d3e: lea edi, [rdi+0x9]; jne 0x00000000004564f0; ret; 
0x00000000455d63: lea edi, [rdi+0xa]; jne 0x00000000004564f0; ret; 
0x00000000455d81: lea edi, [rdi+0xb]; jne 0x00000000004564f0; ret; 
0x00000000455da1: lea edi, [rdi+0xc]; jne 0x00000000004564f0; ret; 
0x00000000455dc3: lea edi, [rdi+0xd]; jne 0x00000000004564f0; ret; 
0x00000000455de3: lea edi, [rdi+0xe]; jne 0x00000000004564f0; ret; 
0x00000000455e03: lea edi, [rdi+0xf]; jne 0x00000000004564f0; ret; 
0x0000000044ef34: lea edi, [rdi+rdx+0x1]; jne 0x000000000044f150; vzeroupper; ret; 
0x0000000043b824: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043b836; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043b974: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043b986; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bac4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043bad6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bc14: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043bc26; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bd64: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043bd76; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043beb4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043bec6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c004: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c016; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c154: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c166; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c2a4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c2b6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c3f4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c406; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c544: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c556; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c694: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c6a6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c7e4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c7f6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c934: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c946; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ca84: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043ca96; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e204: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043e216; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e354: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043e366; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e4a4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043e4b6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e5f4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043e606; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e744: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043e756; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e894: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043e8a6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e9e4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043e9f6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043eb34: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043eb46; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ec84: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043ec96; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043edd4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043ede6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ef24: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043ef36; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f074: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043f086; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f1c4: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043f1d6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f314: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043f326; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f464: lea edi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043f476; movaps [rdi], xmm4; notrack jmp r9; 
0x00000000476061: lea edi, [rdx+rdi*8-0x76b60001]; ret; 
0x0000000048f800: lea edi, [rip+0x3a91d]; mov eax, 0x59; mov rbp, rsp; mov rsi, rbp; syscall; 
0x000000004a7d48: lea edi, [rip+0x3d232]; syscall; 
0x0000000048c2b7: lea edi, [rip+0x3d8bb]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000047f238: lea edi, [rip+0x4974a]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x00000000497dc8: lea edi, [rip+0x4d246]; syscall; 
0x00000000497b44: lea edi, [rip+0x4d4c6]; syscall; 
0x00000000479671: lea edi, [rip+0x4ef89]; lea rsi, [rip+0x663c2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000495ac0: lea edi, [rip+0x4f542]; syscall; 
0x00000000495980: lea edi, [rip+0x4f682]; syscall; 
0x000000004600e1: lea edi, [rip+0x58361]; mov eax, 0x15; syscall; 
0x00000000471908: lea edi, [rip+0x73672]; syscall; 
0x00000000471843: lea edi, [rip+0x73737]; syscall; 
0x000000004716a1: lea edi, [rip+0x738d9]; syscall; 
0x000000004715c7: lea edi, [rip+0x739b3]; syscall; 
0x00000000463df8: lea edi, [rip+0x81c12]; syscall; 
0x00000000463c8c: lea edi, [rip+0x81d7e]; syscall; 
0x00000000463b6c: lea edi, [rip+0x81e9e]; syscall; 
0x0000000045b424: lea edi, [rip+0x8a5e6]; syscall; 
0x00000000430aa4: lea edi, [rip+0xb1d36]; syscall; 
0x0000000042dea4: lea edi, [rip+0xb4936]; syscall; 
0x0000000042de44: lea edi, [rip+0xb4996]; syscall; 
0x0000000042da84: lea edi, [rip+0xb4d56]; syscall; 
0x0000000042d824: lea edi, [rip+0xb4fb6]; syscall; 
0x0000000042d24c: lea edi, [rip+0xb558e]; syscall; 
0x0000000042d214: lea edi, [rip+0xb55c6]; syscall; 
0x0000000042ee04: lea edi, [rip+0xb5f26]; syscall; 
0x0000000042e3b8: lea edi, [rip+0xb6962]; syscall; 
0x0000000042a515: lea edi, [rip+0xba805]; syscall; 
0x0000000042a4e4: lea edi, [rip+0xba846]; syscall; 
0x0000000042a264: lea edi, [rip+0xbaac6]; syscall; 
0x00000000429d40: lea edi, [rip+0xbafea]; syscall; 
0x00000000428956: lea edi, [rip+0xbc354]; syscall; 
0x00000000428396: lea edi, [rip+0xbc914]; syscall; 
0x0000000042802a: lea edi, [rip+0xbcc80]; syscall; 
0x00000000427ce8: lea edi, [rip+0xbcfc2]; syscall; 
0x00000000426782: lea edi, [rip+0xbe528]; syscall; 
0x000000004264e2: lea edi, [rip+0xbe7c8]; syscall; 
0x0000000042618e: lea edi, [rip+0xbeb1c]; syscall; 
0x00000000420194: lea edi, [rip+0xc5876]; syscall; 
0x0000000041f143: lea edi, [rip+0xc6767]; syscall; 
0x0000000041f003: lea edi, [rip+0xc68a7]; syscall; 
0x0000000041edcc: lea edi, [rip+0xc6ade]; syscall; 
0x0000000041ed91: lea edi, [rip+0xc6b19]; syscall; 
0x0000000041ecad: lea edi, [rip+0xc6bfd]; syscall; 
0x000000004156e1: lea edi, [rip+0xcf151]; syscall; 
0x00000000413d3e: lea edi, [rip+0xd0abc]; syscall; 
0x00000000412bbf: lea edi, [rip+0xd1b93]; syscall; 
0x00000000412b91: lea edi, [rip+0xd1bc1]; syscall; 
0x00000000412a45: lea edi, [rip+0xd1d0d]; syscall; 
0x000000004012dd: lea edi, [rip+0xe356d]; syscall; 
0x00000000426f8a: lea edi, [rsi+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x0000000040b6af: lea edx, [rax+0x1388]; cmovns eax, edx; add rsp, 0x8; ret; 
0x0000000040b6ef: lea edx, [rax+0x1770]; cmovns eax, edx; add rsp, 0x8; ret; 
0x000000004293b4: lea edx, [rax+0x1]; mov [rip+0xb93d2], rdx; ret; 
0x0000000040b66f: lea edx, [rax+0xfa0]; cmovns eax, edx; add rsp, 0x8; ret; 
0x000000004077cf: lea edx, [rax+rdx*2]; xor eax, eax; cmp ecx, edx; je short 0x00000000004077e0; ret; 
0x000000004817b4: lea edx, [rax+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x00000000422ca7: lea edx, [rbp-0x48]; lea r9, [rbp-0x40]; mov rcx, r14; mov rdi, r15; call r12; 
0x0000000047f5fb: lea edx, [rbx+0x34]; lea rcx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x0000000047f009: lea edx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x0000000043b324: lea edx, [rbx+rdx]; notrack jmp rdx; 
0x00000000412c2e: lea edx, [rdi+rdi*8-0x1]; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000043dc27: lea edx, [rdx+rcx]; lea r11, [rip+0x78e7e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000431e36: lea edx, [rdx+rcx]; notrack jmp r10; 
0x0000000043b728: lea edx, [rdx-0x40]; notrack jmp r9; 
0x00000000431999: lea edx, [rip+0x118b1]; cmovne rax, rdx; ret; 
0x00000000481d13: lea edx, [rip+0x11d7]; lea rax, [rip+0xed0]; cmove rax, rdx; ret; 
0x0000000049865c: lea edx, [rip+0x11e]; lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x00000000481cd3: lea edx, [rip+0x1607]; lea rax, [rip+0x13e0]; cmove rax, rdx; ret; 
0x00000000431bed: lea edx, [rip+0x16b5d]; cmovne rax, rdx; ret; 
0x00000000431d23: lea edx, [rip+0x1c407]; lea rax, [rip+0x1bfc0]; cmove rax, rdx; ret; 
0x00000000430fe3: lea edx, [rip+0x1d4d7]; lea rax, [rip+0x1d330]; cmove rax, rdx; ret; 
0x00000000430f4a: lea edx, [rip+0x1e5e0]; cmovne rax, rdx; ret; 
0x000000004310aa: lea edx, [rip+0x1fc30]; cmovne rax, rdx; ret; 
0x00000000431b9a: lea edx, [rip+0x21cc0]; cmovne rax, rdx; ret; 
0x00000000430eea: lea edx, [rip+0x25b0]; cmovne rax, rdx; ret; 
0x000000004318fb: lea edx, [rip+0x25b3f]; cmovne rax, rdx; ret; 
0x00000000430e8a: lea edx, [rip+0x26290]; cmovne rax, rdx; ret; 
0x00000000431ca8: lea edx, [rip+0x27832]; lea rax, [rip+0x278eb]; cmove rax, rdx; ret; 
0x00000000431b38: lea edx, [rip+0x27992]; lea rax, [rip+0x27a4b]; cmove rax, rdx; ret; 
0x000000004319d8: lea edx, [rip+0x27b02]; lea rax, [rip+0x27bbb]; cmove rax, rdx; ret; 
0x00000000431c3a: lea edx, [rip+0x27c70]; lea rax, [rip+0x27cb9]; cmove rax, rdx; ret; 
0x00000000431aca: lea edx, [rip+0x27dd0]; lea rax, [rip+0x27e19]; cmove rax, rdx; ret; 
0x0000000043196a: lea edx, [rip+0x27f40]; lea rax, [rip+0x27f89]; cmove rax, rdx; ret; 
0x00000000431c8c: lea edx, [rip+0x2805e]; lea rax, [rip+0x280a7]; cmove rax, rdx; ret; 
0x00000000430f6c: lea edx, [rip+0x2818e]; lea rax, [rip+0x280d7]; cmovne rax, rdx; ret; 
0x00000000431b1c: lea edx, [rip+0x281be]; lea rax, [rip+0x28207]; cmove rax, rdx; ret; 
0x000000004319bc: lea edx, [rip+0x2832e]; lea rax, [rip+0x28377]; cmove rax, rdx; ret; 
0x00000000431a53: lea edx, [rip+0x28867]; lea rax, [rip+0x287f0]; cmovne rax, rdx; ret; 
0x00000000431a34: lea edx, [rip+0x28996]; lea rax, [rip+0x289df]; cmove rax, rdx; ret; 
0x00000000431a7c: lea edx, [rip+0x28ace]; lea rax, [rip+0x28b27]; cmove rax, rdx; ret; 
0x00000000483d4a: lea edx, [rip+0x30]; cmovne rax, rdx; ret; 
0x000000004983a9: lea edx, [rip+0x33bed]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004988d3: lea edx, [rip+0x3a7]; lea rax, [rip+0x70]; cmove rax, rdx; ret; 
0x0000000049833a: lea edx, [rip+0x4b7c0]; mov [rax], rdx; add rsp, 0x8; ret; 
0x00000000431054: lea edx, [rip+0x5356]; cmovne rax, rdx; ret; 
0x0000000045bb21: lea edx, [rip+0x5c375]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000044c537: lea edx, [rip+0x6b0f3]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044a997: lea edx, [rip+0x6cc43]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044daa7: lea edx, [rip+0x6d293]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044da8d: lea edx, [rip+0x6d2ad]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044c427: lea edx, [rip+0x6e913]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044c40d: lea edx, [rip+0x6e92d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044884b: lea edx, [rip+0x6ed4f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044a877: lea edx, [rip+0x704c3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044a85d: lea edx, [rip+0x704dd]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004465fb: lea edx, [rip+0x70f5f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000448717: lea edx, [rip+0x72623]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004486fd: lea edx, [rip+0x7263d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000431ce3: lea edx, [rip+0x7547]; lea rax, [rip+0x7330]; cmove rax, rdx; ret; 
0x00000000437bc7: lea edx, [rip+0x7ea63]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043645b: lea edx, [rip+0x8018f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000434bfb: lea edx, [rip+0x819af]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043352b: lea edx, [rip+0x8303f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000431e2b: lea edx, [rip+0x846ff]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043090b: lea edx, [rip+0x85ba7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000042552c: lea edx, [rip+0x8fb4a]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000425626: lea edx, [rip+0x8fc1c]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x0000000040dc65: lea edx, [rip+0x9c04d]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000040976a: lea edx, [rip+0x9fd78]; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x0000000040948e: lea edx, [rip+0xa0014]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000407d46: lea edx, [rip+0xa16cc]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000407cf6: lea edx, [rip+0xa16fc]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000410955: lea edx, [rip+0xa2b45]; movsxd rax, [rcx+rax*4]; add rax, rdx; ret; 
0x00000000411d6e: lea edx, [rip+0xa2c70]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004034aa: lea edx, [rip+0xa5c50]; mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x00000000481dd3: lea edx, [rip+0xb47]; lea rax, [rip+0x810]; cmove rax, rdx; ret; 
0x00000000401beb: lea edx, [rip+0xb5df3]; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x00000000483623: lea edx, [rip+0xc57]; lea rax, [rip+0x9b0]; cmove rax, rdx; ret; 
0x00000000431c69: lea edx, [rip+0xeaf1]; cmovne rax, rdx; ret; 
0x00000000431af9: lea edx, [rip+0xec41]; cmovne rax, rdx; ret; 
0x000000004318ac: lea edx, [rip-0x362]; lea rax, [rip+0x272f7]; cmove rax, rdx; ret; 
0x00000000459567: lea edx, [rsi+rcx]; cmp rdi, rdx; jb short 0x0000000000459572; rep movsb [rdi], [rsi]; ret; 
0x0000000045cbc9: lea edx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000047aa88: lea esi, [rax]; idiv edi; inc dword ptr [rcx-0x1]; push rsp; ret; 
0x0000000048dba4: lea esi, [rbp-0x430]; mov eax, 0x14; syscall; 
0x00000000422a58: lea esi, [rbx+0x40]; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x00000000422b47: lea esi, [rbx+0x8]; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000048bd7a: lea esi, [rip+0x3dd60]; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x0000000049c1a9: lea esi, [rip+0x49831]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x0000000047ea8c: lea esi, [rip+0x49cb2]; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000045a753: lea esi, [rip+0x5d1e7]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x0000000047caa0: lea esi, [rip+0x6319a]; mov dword ptr [rbp-0x530], 0x1; mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047cb25: lea esi, [rip+0x63515]; mov r11, rcx; mov dword ptr [rbp-0x508], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047caeb: lea esi, [rip+0x6354f]; mov r11, rcx; mov dword ptr [rbp-0x520], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047ca1d: lea esi, [rip+0x6361d]; mov r11, rcx; mov dword ptr [rbp-0x4f8], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c9d8: lea esi, [rip+0x63662]; mov dword ptr [rbp-0x4e0], 0x1; mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c3dd: lea esi, [rip+0x63c5d]; mov r11, rcx; mov dword ptr [rbp-0x514], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c35d: lea esi, [rip+0x63cdd]; mov r11, rcx; mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479678: lea esi, [rip+0x663c2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000475d9a: lea esi, [rip+0x69ba0]; sub eax, 0x20; cdqe; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000041d861: lea esi, [rip+0x97279]; mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000411499: lea esi, [rip+0xa3381]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000459578: lea esi, [rsi+rcx-0x1]; std; rep movsb [rdi], [rsi]; cld; ret; 
0x00000000423b72: lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000042161a: lea esi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x00000000410f9f: lea esi, [rsp+0x70]; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000048a35a: lea esp, [rax+rax*8]; lea rax, [rip+0x58e5c]; shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x0000000041ed31: lea esp, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x00000000470475: lea esp, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x00000000431e35: lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044c536: lea r10, [rip+0x6b0f3]; movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044a996: lea r10, [rip+0x6cc43]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044884a: lea r10, [rip+0x6ed4f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004465fa: lea r10, [rip+0x70f5f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000437bc6: lea r10, [rip+0x7ea63]; movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043645a: lea r10, [rip+0x8018f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000434bfa: lea r10, [rip+0x819af]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043352a: lea r10, [rip+0x8303f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000431e2a: lea r10, [rip+0x846ff]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042552b: lea r10, [rip+0x8fb4a]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000425625: lea r10, [rip+0x8fc1c]; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x000000004569f5: lea r11, [rip+0x60e48]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004569c0: lea r11, [rip+0x60e7d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456994: lea r11, [rip+0x60ea9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045697e: lea r11, [rip+0x60ebf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045695c: lea r11, [rip+0x60ee1]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456937: lea r11, [rip+0x60f06]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045691a: lea r11, [rip+0x60f23]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004568c2: lea r11, [rip+0x60f7b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456689: lea r11, [rip+0x610e0]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456590: lea r11, [rip+0x61269]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045657a: lea r11, [rip+0x6127f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045655a: lea r11, [rip+0x6129f]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455c15: lea r11, [rip+0x61b54]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455bec: lea r11, [rip+0x61b7d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455bcc: lea r11, [rip+0x61b9d]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455ba3: lea r11, [rip+0x61bc6]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b74: lea r11, [rip+0x61bf5]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b55: lea r11, [rip+0x61c14]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455ad0: lea r11, [rip+0x61c19]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b33: lea r11, [rip+0x61c36]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b03: lea r11, [rip+0x61c66]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559fe: lea r11, [rip+0x61ceb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559d0: lea r11, [rip+0x61d19]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559a7: lea r11, [rip+0x61d42]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004553b5: lea r11, [rip+0x622b4]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455380: lea r11, [rip+0x622e9]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455354: lea r11, [rip+0x62315]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045533e: lea r11, [rip+0x6232b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045531c: lea r11, [rip+0x6234d]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004552f7: lea r11, [rip+0x62372]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004552da: lea r11, [rip+0x6238f]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455282: lea r11, [rip+0x623e7]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000444e51: lea r11, [rip+0x721d8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444af3: lea r11, [rip+0x72536]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444c9e: lea r11, [rip+0x725cb]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444973: lea r11, [rip+0x726b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444a36: lea r11, [rip+0x72833]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004447f3: lea r11, [rip+0x72836]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004448b6: lea r11, [rip+0x729b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444673: lea r11, [rip+0x729b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444736: lea r11, [rip+0x72b33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004444f3: lea r11, [rip+0x72b36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004445b7: lea r11, [rip+0x72cb2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444373: lea r11, [rip+0x72cb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444436: lea r11, [rip+0x72e33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004441f3: lea r11, [rip+0x72e36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004442b6: lea r11, [rip+0x72fb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444073: lea r11, [rip+0x72fb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444136: lea r11, [rip+0x73133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443ef3: lea r11, [rip+0x73136]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443fb6: lea r11, [rip+0x732b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443d73: lea r11, [rip+0x732b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443e36: lea r11, [rip+0x73433]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443bf3: lea r11, [rip+0x73436]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443cb6: lea r11, [rip+0x735b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443a73: lea r11, [rip+0x735b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443b36: lea r11, [rip+0x73733]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004438f3: lea r11, [rip+0x73736]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004439b6: lea r11, [rip+0x738b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443773: lea r11, [rip+0x738b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443836: lea r11, [rip+0x73a33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004435f3: lea r11, [rip+0x73a36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044347a: lea r11, [rip+0x73baf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004436b6: lea r11, [rip+0x73bb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443536: lea r11, [rip+0x73d33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044326f: lea r11, [rip+0x73dba]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004433f9: lea r11, [rip+0x73e70]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443292: lea r11, [rip+0x73fd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044334f: lea r11, [rip+0x7419a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x000000004432e8: lea r11, [rip+0x741c1]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000044231d: lea r11, [rip+0x7480c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441ff3: lea r11, [rip+0x74b36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044218a: lea r11, [rip+0x74bdf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441e73: lea r11, [rip+0x74cb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441f36: lea r11, [rip+0x74e33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441cf3: lea r11, [rip+0x74e36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441db6: lea r11, [rip+0x74fb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441b73: lea r11, [rip+0x74fb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441c36: lea r11, [rip+0x75133]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004419f3: lea r11, [rip+0x75136]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441ab7: lea r11, [rip+0x752b2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441873: lea r11, [rip+0x752b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441936: lea r11, [rip+0x75433]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004416f3: lea r11, [rip+0x75436]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004417b6: lea r11, [rip+0x755b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441573: lea r11, [rip+0x755b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441636: lea r11, [rip+0x75733]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004413f3: lea r11, [rip+0x75736]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004414b6: lea r11, [rip+0x758b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441273: lea r11, [rip+0x758b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441336: lea r11, [rip+0x75a33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004410f3: lea r11, [rip+0x75a36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004411b6: lea r11, [rip+0x75bb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440f73: lea r11, [rip+0x75bb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441036: lea r11, [rip+0x75d33]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440df3: lea r11, [rip+0x75d36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440eb6: lea r11, [rip+0x75eb3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440c73: lea r11, [rip+0x75eb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440d36: lea r11, [rip+0x76033]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440af3: lea r11, [rip+0x76036]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044097a: lea r11, [rip+0x761af]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440bb6: lea r11, [rip+0x761b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440713: lea r11, [rip+0x76255]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440657: lea r11, [rip+0x76312]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440a36: lea r11, [rip+0x76333]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044078f: lea r11, [rip+0x7639a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044056c: lea r11, [rip+0x763fd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004408f9: lea r11, [rip+0x76470]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004404a1: lea r11, [rip+0x764c8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044077b: lea r11, [rip+0x765ee]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044084f: lea r11, [rip+0x7679a]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x000000004407ed: lea r11, [rip+0x767bc]; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000043f482: lea r11, [rip+0x774e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f3e4: lea r11, [rip+0x77585]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f332: lea r11, [rip+0x77637]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f294: lea r11, [rip+0x776d5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f1e2: lea r11, [rip+0x77787]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f144: lea r11, [rip+0x77825]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f092: lea r11, [rip+0x778d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eff4: lea r11, [rip+0x77975]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ef42: lea r11, [rip+0x77a27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eea4: lea r11, [rip+0x77ac5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043edf2: lea r11, [rip+0x77b77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ed54: lea r11, [rip+0x77c15]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eca2: lea r11, [rip+0x77cc7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ec04: lea r11, [rip+0x77d65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eb52: lea r11, [rip+0x77e17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eab7: lea r11, [rip+0x77eb2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ea02: lea r11, [rip+0x77f67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e964: lea r11, [rip+0x78005]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e8b2: lea r11, [rip+0x780b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e814: lea r11, [rip+0x78155]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e762: lea r11, [rip+0x78207]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e6c4: lea r11, [rip+0x782a5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e612: lea r11, [rip+0x78357]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e574: lea r11, [rip+0x783f5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e4c2: lea r11, [rip+0x784a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e424: lea r11, [rip+0x78545]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e372: lea r11, [rip+0x785f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e2d4: lea r11, [rip+0x78695]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e222: lea r11, [rip+0x78747]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e184: lea r11, [rip+0x787e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e0d6: lea r11, [rip+0x78893]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dfe4: lea r11, [rip+0x78984]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043df25: lea r11, [rip+0x78a43]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043debc: lea r11, [rip+0x78aad]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ddbd: lea r11, [rip+0x78bac]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043db83: lea r11, [rip+0x78c26]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dcf8: lea r11, [rip+0x78c71]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043daa9: lea r11, [rip+0x78d00]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dc85: lea r11, [rip+0x78e64]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043dc2b: lea r11, [rip+0x78e7e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043caa2: lea r11, [rip+0x79d07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ca04: lea r11, [rip+0x79da5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c952: lea r11, [rip+0x79e57]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c8b4: lea r11, [rip+0x79ef5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c802: lea r11, [rip+0x79fa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c764: lea r11, [rip+0x7a045]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c6b2: lea r11, [rip+0x7a0f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c614: lea r11, [rip+0x7a195]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c562: lea r11, [rip+0x7a247]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c4c4: lea r11, [rip+0x7a2e5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c412: lea r11, [rip+0x7a397]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c374: lea r11, [rip+0x7a435]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c2c2: lea r11, [rip+0x7a4e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c224: lea r11, [rip+0x7a585]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c172: lea r11, [rip+0x7a637]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c0d7: lea r11, [rip+0x7a6d2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c022: lea r11, [rip+0x7a787]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bf84: lea r11, [rip+0x7a825]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bed2: lea r11, [rip+0x7a8d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043be34: lea r11, [rip+0x7a975]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bd82: lea r11, [rip+0x7aa27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bce4: lea r11, [rip+0x7aac5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bc32: lea r11, [rip+0x7ab77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bb94: lea r11, [rip+0x7ac15]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bae2: lea r11, [rip+0x7acc7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ba44: lea r11, [rip+0x7ad65]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b992: lea r11, [rip+0x7ae17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b8f4: lea r11, [rip+0x7aeb5]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b842: lea r11, [rip+0x7af67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b7a4: lea r11, [rip+0x7b005]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b6f6: lea r11, [rip+0x7b0b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b604: lea r11, [rip+0x7b1a4]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b545: lea r11, [rip+0x7b263]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b4dc: lea r11, [rip+0x7b2cd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b3dd: lea r11, [rip+0x7b3cc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b318: lea r11, [rip+0x7b491]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b2a5: lea r11, [rip+0x7b684]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043b244: lea r11, [rip+0x7b6a5]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043a5d3: lea r11, [rip+0x7c096]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a559: lea r11, [rip+0x7c110]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a4ca: lea r11, [rip+0x7c19f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a2bf: lea r11, [rip+0x7c3aa]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a18d: lea r11, [rip+0x7c4dc]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a0c7: lea r11, [rip+0x7c5a2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a049: lea r11, [rip+0x7c620]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439fb4: lea r11, [rip+0x7c6b5]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439db7: lea r11, [rip+0x7c8b2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439c85: lea r11, [rip+0x7c9e4]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439b7a: lea r11, [rip+0x7caef]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000042555d: lea r11, [rip+0x8fb74]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000042558f: lea r11, [rip+0x8fb9e]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x000000004255c1: lea r11, [rip+0x8fbc8]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x000000004255f3: lea r11, [rip+0x8fbf2]; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000041db61: lea r11, [rip+0x96fb0]; movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000048a359: lea r12, [rax+rax*8]; lea rax, [rip+0x58e5c]; shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x0000000041ed30: lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x00000000470474: lea r12, [rcx+rax]; mov r13, rax; mov rdi, r12; call rbx; 
0x00000000426f88: lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x00000000426f89: lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x000000004704ac: lea r15, [rax+r14]; mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x0000000046cf1f: lea r8, [rsp+0xa0]; call r15; 
0x0000000043b24f: lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043b720: lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000422caa: lea r9, [rbp-0x40]; mov rcx, r14; mov rdi, r15; call r12; 
0x00000000407ccd: lea r9, [rip+0xa1704]; mov r8d, ecx; movsxd rdx, [r9+r8*4]; add rdx, r9; notrack jmp rdx; 
0x00000000422a61: lea r9, [rsp+0x18]; call rbp; 
0x000000004838e1: lea r9, [rsp+0x20]; call rbx; 
0x000000004837be: lea r9, [rsp+0x28]; call rbx; 
0x00000000483aec: lea r9, [rsp+0x30]; call rbx; 
0x0000000048f044: lea rax, [r8+0x1]; mov [rip+0x56421], rax; ret; 
0x000000004a16db: lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x00000000439213: lea rax, [rax+rdi+0x10]; ret; 
0x00000000439223: lea rax, [rax+rdi+0x20]; ret; 
0x000000004391f3: lea rax, [rax+rdi-0x10]; ret; 
0x0000000048b102: lea rax, [rax+rdx*4]; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x0000000048b0d0: lea rax, [rax+rdx*4]; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x0000000043049c: lea rax, [rax-0x10]; ret; 
0x00000000482dec: lea rax, [rcx+rsi]; ret; 
0x00000000458ec3: lea rax, [rcx-0x1]; ret; 
0x00000000456b8b: lea rax, [rdi+0x10]; ret; 
0x00000000456ba0: lea rax, [rdi+0x11]; ret; 
0x00000000456bbe: lea rax, [rdi+0x12]; ret; 
0x00000000456bde: lea rax, [rdi+0x13]; ret; 
0x00000000456c01: lea rax, [rdi+0x14]; ret; 
0x00000000456c20: lea rax, [rdi+0x15]; ret; 
0x00000000456c40: lea rax, [rdi+0x16]; ret; 
0x00000000456c60: lea rax, [rdi+0x17]; ret; 
0x00000000456c83: lea rax, [rdi+0x18]; ret; 
0x00000000456ca8: lea rax, [rdi+0x19]; ret; 
0x00000000456a26: lea rax, [rdi+0x1]; ret; 
0x00000000457066: lea rax, [rdi+0x1]; vzeroupper; ret; 
0x00000000456cc6: lea rax, [rdi+0x1a]; ret; 
0x00000000456ce6: lea rax, [rdi+0x1b]; ret; 
0x00000000456d02: lea rax, [rdi+0x1c]; ret; 
0x00000000456d22: lea rax, [rdi+0x1d]; ret; 
0x00000000456d42: lea rax, [rdi+0x1e]; ret; 
0x00000000456d62: lea rax, [rdi+0x1f]; ret; 
0x00000000456a39: lea rax, [rdi+0x2]; ret; 
0x0000000045707a: lea rax, [rdi+0x2]; vzeroupper; ret; 
0x00000000456a44: lea rax, [rdi+0x3]; ret; 
0x00000000457094: lea rax, [rdi+0x3]; vzeroupper; ret; 
0x00000000456a57: lea rax, [rdi+0x4]; ret; 
0x00000000456a6c: lea rax, [rdi+0x5]; ret; 
0x00000000456a8a: lea rax, [rdi+0x6]; ret; 
0x00000000456a96: lea rax, [rdi+0x7]; ret; 
0x00000000456aa9: lea rax, [rdi+0x8]; ret; 
0x00000000456abe: lea rax, [rdi+0x9]; ret; 
0x00000000456adc: lea rax, [rdi+0xa]; ret; 
0x00000000456afc: lea rax, [rdi+0xb]; ret; 
0x00000000456b1e: lea rax, [rdi+0xc]; ret; 
0x00000000456b3e: lea rax, [rdi+0xd]; ret; 
0x00000000456b5e: lea rax, [rdi+0xe]; ret; 
0x00000000456b78: lea rax, [rdi+0xf]; ret; 
0x000000004828e8: lea rax, [rdi+rax+0x10]; ret; 
0x0000000044e0b6: lea rax, [rdi+rax+0x20]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000004828f8: lea rax, [rdi+rax+0x20]; ret; 
0x000000004391dc: lea rax, [rdi+rax+0x30]; ret; 
0x0000000044e0d6: lea rax, [rdi+rax+0x40]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000044e114: lea rax, [rdi+rax+0x60]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000483034: lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000044db0f: lea rax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000044df7c: lea rax, [rdi+rax]; cmp sil, [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000044dd3a: lea rax, [rdi+rax]; ret; 
0x000000004570ac: lea rax, [rdi+rdx]; vzeroupper; ret; 
0x00000000482ce8: lea rax, [rdi+rsi]; ret; 
0x000000004916ab: lea rax, [rdi-0x1]; cmp rax, 0xfffffffffffffffd; jbe short 0x00000000004916c0; ret; 
0x00000000456a12: lea rax, [rdi]; ret; 
0x00000000456fe4: lea rax, [rdi]; vzeroupper; ret; 
0x00000000454f16: lea rax, [rdx+0x1]; ret; 
0x00000000454f2c: lea rax, [rdx+0x2]; ret; 
0x00000000454f44: lea rax, [rdx+0x3]; ret; 
0x00000000454f5a: lea rax, [rdx+0x4]; ret; 
0x00000000454f6c: lea rax, [rdx+0x5]; ret; 
0x00000000454f8a: lea rax, [rdx+0x6]; ret; 
0x00000000454e96: lea rax, [rdx+0x7]; ret; 
0x00000000454f9c: lea rax, [rdx+0x8]; ret; 
0x00000000454fbc: lea rax, [rdx+0x9]; ret; 
0x00000000454fdc: lea rax, [rdx+0xa]; ret; 
0x00000000454ffc: lea rax, [rdx+0xb]; ret; 
0x0000000045501e: lea rax, [rdx+0xc]; ret; 
0x0000000045503e: lea rax, [rdx+0xd]; ret; 
0x0000000045505e: lea rax, [rdx+0xe]; ret; 
0x00000000454eee: lea rax, [rdx+0xf]; ret; 
0x00000000454f04: lea rax, [rdx]; ret; 
0x00000000481cd9: lea rax, [rip+0x13e0]; cmove rax, rdx; ret; 
0x00000000431be5: lea rax, [rip+0x14914]; lea rdx, [rip+0x16b5d]; cmovne rax, rdx; ret; 
0x00000000431d29: lea rax, [rip+0x1bfc0]; cmove rax, rdx; ret; 
0x00000000430e81: lea rax, [rip+0x1cc37]; lea rdx, [rip+0x26290]; cmovne rax, rdx; ret; 
0x00000000430fe9: lea rax, [rip+0x1d330]; cmove rax, rdx; ret; 
0x00000000431b92: lea rax, [rip+0x1d8a7]; lea rdx, [rip+0x21cc0]; cmovne rax, rdx; ret; 
0x00000000430f42: lea rax, [rip+0x1e407]; lea rdx, [rip+0x1e5e0]; cmovne rax, rdx; ret; 
0x00000000483d42: lea rax, [rip+0x257]; lea rdx, [rip+0x30]; cmovne rax, rdx; ret; 
0x000000004318b2: lea rax, [rip+0x272f7]; cmove rax, rdx; ret; 
0x00000000431cae: lea rax, [rip+0x278eb]; cmove rax, rdx; ret; 
0x00000000431b3e: lea rax, [rip+0x27a4b]; cmove rax, rdx; ret; 
0x000000004319de: lea rax, [rip+0x27bbb]; cmove rax, rdx; ret; 
0x00000000431c40: lea rax, [rip+0x27cb9]; cmove rax, rdx; ret; 
0x00000000431ad0: lea rax, [rip+0x27e19]; cmove rax, rdx; ret; 
0x00000000431970: lea rax, [rip+0x27f89]; cmove rax, rdx; ret; 
0x00000000431c92: lea rax, [rip+0x280a7]; cmove rax, rdx; ret; 
0x00000000430f72: lea rax, [rip+0x280d7]; cmovne rax, rdx; ret; 
0x00000000431b22: lea rax, [rip+0x28207]; cmove rax, rdx; ret; 
0x000000004319c2: lea rax, [rip+0x28377]; cmove rax, rdx; ret; 
0x00000000431a59: lea rax, [rip+0x287f0]; cmovne rax, rdx; ret; 
0x00000000431a3a: lea rax, [rip+0x289df]; cmove rax, rdx; ret; 
0x00000000431a82: lea rax, [rip+0x28b27]; cmove rax, rdx; ret; 
0x0000000042a6be: lea rax, [rip+0x319b]; mov [rip+0xb80f4], rax; ret; 
0x0000000042a6b0: lea rax, [rip+0x3429]; mov [rip+0xb810a], rax; lea rax, [rip+0x319b]; mov [rip+0xb80f4], rax; ret; 
0x0000000043104c: lea rax, [rip+0x3afd]; lea rdx, [rip+0x5356]; cmovne rax, rdx; ret; 
0x00000000497eb0: lea rax, [rip+0x4d189]; mov [rip+0x4d16a], rax; ret; 
0x00000000497e99: lea rax, [rip+0x4d1a0]; mov [rip+0x4d181], rax; add rsp, 0x8; ret; 
0x0000000048a35d: lea rax, [rip+0x58e5c]; shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x0000000047c804: lea rax, [rip+0x63335]; mov r11, rcx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047c7db: lea rax, [rip+0x6375e]; jmp qword ptr [rax+rcx*8]; 
0x0000000047c59c: lea rax, [rip+0x6379d]; mov r11, rcx; mov dword ptr [rbp-0x4e8], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047c5fa: lea rax, [rip+0x6383f]; jmp qword ptr [rax+rcx*8]; 
0x00000000498662: lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x0000000047639e: lea rax, [rip+0x6909b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000475b5a: lea rax, [rip+0x69cdf]; jmp qword ptr [rax+rdx*8]; 
0x000000004758ee: lea rax, [rip+0x69d4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x00000000475957: lea rax, [rip+0x69de2]; jmp qword ptr [rax+rdx*8]; 
0x000000004988d9: lea rax, [rip+0x70]; cmove rax, rdx; ret; 
0x00000000431ce9: lea rax, [rip+0x7330]; cmove rax, rdx; ret; 
0x0000000046e48c: lea rax, [rip+0x737ad]; mov rax, [rax+rbp*8]; test rax, rax; je short 0x000000000046e49e; call rax; 
0x0000000046e206: lea rax, [rip+0x73a33]; mov rax, [rax+r12*8]; test rax, rax; je short 0x000000000046e218; call rax; 
0x000000004318f3: lea rax, [rip+0x7a86]; lea rdx, [rip+0x25b3f]; cmovne rax, rdx; ret; 
0x00000000431918: lea rax, [rip+0x7e61]; test byte ptr [rip+0xb34bf], 0x1; je short 0x00000000004318e1; ret; 
0x00000000481dd9: lea rax, [rip+0x810]; cmove rax, rdx; ret; 
0x00000000461304: lea rax, [rip+0x81f55]; ret; 
0x00000000431c61: lea rax, [rip+0x9568]; lea rdx, [rip+0xeaf1]; cmovne rax, rdx; ret; 
0x00000000431af1: lea rax, [rip+0x96b8]; lea rdx, [rip+0xec41]; cmovne rax, rdx; ret; 
0x00000000483629: lea rax, [rip+0x9b0]; cmove rax, rdx; ret; 
0x0000000040d8b0: lea rax, [rip+0x9bcf9]; ret; 
0x0000000040d8a0: lea rax, [rip+0x9bd00]; ret; 
0x0000000040d8a8: lea rax, [rip+0x9bd08]; ret; 
0x0000000040d860: lea rax, [rip+0x9bd1d]; ret; 
0x0000000040d870: lea rax, [rip+0x9bd1e]; ret; 
0x0000000040d828: lea rax, [rip+0x9bd3b]; ret; 
0x0000000040d830: lea rax, [rip+0x9bd3c]; ret; 
0x0000000040d898: lea rax, [rip+0x9bd71]; ret; 
0x0000000040d890: lea rax, [rip+0x9bd72]; ret; 
0x0000000040d888: lea rax, [rip+0x9bd74]; ret; 
0x0000000040d880: lea rax, [rip+0x9bd76]; ret; 
0x0000000040d7e0: lea rax, [rip+0x9bd77]; ret; 
0x0000000040d848: lea rax, [rip+0x9bd79]; ret; 
0x0000000040d850: lea rax, [rip+0x9bd7f]; ret; 
0x0000000040d7c0: lea rax, [rip+0x9bd80]; ret; 
0x0000000040d7b0: lea rax, [rip+0x9bd84]; ret; 
0x0000000040d840: lea rax, [rip+0x9bd88]; ret; 
0x0000000040d7a0: lea rax, [rip+0x9bd8c]; ret; 
0x0000000040d7d0: lea rax, [rip+0x9bd8e]; ret; 
0x0000000040d790: lea rax, [rip+0x9bd8f]; ret; 
0x0000000040d768: lea rax, [rip+0x9bdb0]; ret; 
0x0000000040d770: lea rax, [rip+0x9bdb7]; ret; 
0x0000000040d820: lea rax, [rip+0x9bdba]; ret; 
0x0000000040d780: lea rax, [rip+0x9bdcc]; ret; 
0x0000000040d810: lea rax, [rip+0x9bdd1]; ret; 
0x0000000040d800: lea rax, [rip+0x9bde8]; ret; 
0x0000000040d7f0: lea rax, [rip+0x9bdff]; ret; 
0x0000000040cd70: lea rax, [rip+0x9c839]; ret; 
0x0000000040cd60: lea rax, [rip+0x9c840]; ret; 
0x0000000040cd68: lea rax, [rip+0x9c848]; ret; 
0x0000000040cd20: lea rax, [rip+0x9c85d]; ret; 
0x0000000040cd30: lea rax, [rip+0x9c85e]; ret; 
0x0000000040cce8: lea rax, [rip+0x9c87b]; ret; 
0x0000000040ccf0: lea rax, [rip+0x9c87c]; ret; 
0x0000000040cd58: lea rax, [rip+0x9c8b1]; ret; 
0x0000000040cd50: lea rax, [rip+0x9c8b2]; ret; 
0x0000000040cd48: lea rax, [rip+0x9c8b4]; ret; 
0x0000000040cd40: lea rax, [rip+0x9c8b6]; ret; 
0x0000000040cca0: lea rax, [rip+0x9c8b7]; ret; 
0x0000000040cd08: lea rax, [rip+0x9c8b9]; ret; 
0x0000000040cd10: lea rax, [rip+0x9c8bf]; ret; 
0x0000000040cc80: lea rax, [rip+0x9c8c0]; ret; 
0x0000000040cc70: lea rax, [rip+0x9c8c4]; ret; 
0x0000000040cd00: lea rax, [rip+0x9c8c8]; ret; 
0x0000000040cc60: lea rax, [rip+0x9c8cc]; ret; 
0x0000000040cc90: lea rax, [rip+0x9c8ce]; ret; 
0x0000000040cc50: lea rax, [rip+0x9c8cf]; ret; 
0x0000000040cc28: lea rax, [rip+0x9c8f0]; ret; 
0x0000000040cc30: lea rax, [rip+0x9c8f7]; ret; 
0x0000000040cce0: lea rax, [rip+0x9c8fa]; ret; 
0x0000000040cc40: lea rax, [rip+0x9c90c]; ret; 
0x0000000040ccd0: lea rax, [rip+0x9c911]; ret; 
0x0000000040ccc0: lea rax, [rip+0x9c928]; ret; 
0x0000000040ccb0: lea rax, [rip+0x9c93f]; ret; 
0x0000000040c230: lea rax, [rip+0x9d379]; ret; 
0x0000000040c220: lea rax, [rip+0x9d380]; ret; 
0x0000000040c228: lea rax, [rip+0x9d388]; ret; 
0x0000000040c1e0: lea rax, [rip+0x9d39d]; ret; 
0x0000000040c1f0: lea rax, [rip+0x9d39e]; ret; 
0x0000000040c1a8: lea rax, [rip+0x9d3bb]; ret; 
0x0000000040c1b0: lea rax, [rip+0x9d3bc]; ret; 
0x0000000040c218: lea rax, [rip+0x9d3f1]; ret; 
0x0000000040c210: lea rax, [rip+0x9d3f2]; ret; 
0x0000000040c208: lea rax, [rip+0x9d3f4]; ret; 
0x0000000040c200: lea rax, [rip+0x9d3f6]; ret; 
0x0000000040c160: lea rax, [rip+0x9d3f7]; ret; 
0x0000000040c1c8: lea rax, [rip+0x9d3f9]; ret; 
0x0000000040c1d0: lea rax, [rip+0x9d3ff]; ret; 
0x0000000040c140: lea rax, [rip+0x9d400]; ret; 
0x0000000040c130: lea rax, [rip+0x9d404]; ret; 
0x0000000040c1c0: lea rax, [rip+0x9d408]; ret; 
0x0000000040c120: lea rax, [rip+0x9d40c]; ret; 
0x0000000040c150: lea rax, [rip+0x9d40e]; ret; 
0x0000000040c110: lea rax, [rip+0x9d40f]; ret; 
0x0000000040c0e8: lea rax, [rip+0x9d430]; ret; 
0x0000000040c0f0: lea rax, [rip+0x9d437]; ret; 
0x0000000040c1a0: lea rax, [rip+0x9d43a]; ret; 
0x0000000040c100: lea rax, [rip+0x9d44c]; ret; 
0x0000000040c190: lea rax, [rip+0x9d451]; ret; 
0x0000000040c180: lea rax, [rip+0x9d468]; ret; 
0x0000000040c170: lea rax, [rip+0x9d47f]; ret; 
0x0000000040b5f8: lea rax, [rip+0x9e004]; ret; 
0x0000000040b5f0: lea rax, [rip+0x9e012]; ret; 
0x0000000040b560: lea rax, [rip+0x9e014]; ret; 
0x0000000040b568: lea rax, [rip+0x9e015]; ret; 
0x0000000040b578: lea rax, [rip+0x9e016]; ret; 
0x0000000040b5b8: lea rax, [rip+0x9e017]; ret; 
0x0000000040b588: lea rax, [rip+0x9e018]; ret; 
0x0000000040b590: lea rax, [rip+0x9e019]; ret; 
0x0000000040b5c0: lea rax, [rip+0x9e01a]; ret; 
0x0000000040b5a0: lea rax, [rip+0x9e01b]; ret; 
0x0000000040b550: lea rax, [rip+0x9e01c]; ret; 
0x0000000040b5e8: lea rax, [rip+0x9e021]; ret; 
0x0000000040b540: lea rax, [rip+0x9e023]; ret; 
0x0000000040b530: lea rax, [rip+0x9e02e]; ret; 
0x0000000040b520: lea rax, [rip+0x9e037]; ret; 
0x0000000040b500: lea rax, [rip+0x9e040]; ret; 
0x0000000040b4f0: lea rax, [rip+0x9e044]; ret; 
0x0000000040b4e0: lea rax, [rip+0x9e04c]; ret; 
0x0000000040b4d0: lea rax, [rip+0x9e04f]; ret; 
0x0000000040b4b0: lea rax, [rip+0x9e077]; ret; 
0x0000000040b4a0: lea rax, [rip+0x9e078]; ret; 
0x0000000040b4c0: lea rax, [rip+0x9e08c]; ret; 
0x00000000402164: lea rax, [rip+0xa6f3d]; ret; 
0x0000000042a5b9: lea rax, [rip+0xb8220]; add rsp, 0x10; pop rbp; ret; 
0x0000000040d858: lea rax, [rip+0xbdf90]; ret; 
0x0000000040cd18: lea rax, [rip+0xbead0]; ret; 
0x0000000040c1d8: lea rax, [rip+0xbf610]; ret; 
0x0000000040b510: lea rax, [rip+0xc02d8]; ret; 
0x00000000431991: lea rax, [rip+0xc218]; lea rdx, [rip+0x118b1]; cmovne rax, rdx; ret; 
0x000000004310a2: lea rax, [rip+0xc97]; lea rdx, [rip+0x1fc30]; cmovne rax, rdx; ret; 
0x000000004109e9: lea rax, [rip+0xd38f0]; ret; 
0x00000000430ee2: lea rax, [rip+0xeb7]; lea rdx, [rip+0x25b0]; cmovne rax, rdx; ret; 
0x00000000481d19: lea rax, [rip+0xed0]; cmove rax, rdx; ret; 
0x00000000498932: lea rax, [rip-0x3e589]; cmp rdx, 0x4; cmovne r8, rax; mov rax, r8; ret; 
0x0000000042e4ba: lea rax, [rip-0x9e1]; mov [rip+0xb4300], rax; lea rax, [rip-0xc6f]; mov [rip+0xb42ea], rax; ret; 
0x0000000042e4c8: lea rax, [rip-0xc6f]; mov [rip+0xb42ea], rax; ret; 
0x000000004a43de: lea rbx, [r12+rcx*8]; mov rsi, [rbx]; call rax; 
0x00000000411aa1: lea rbx, [rax-0x1]; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x0000000049a894: lea rbx, [rbp+rdx*8]; nop [rax]; call qword ptr [rbx]; 
0x0000000045528d: lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004837ba: lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x0000000048394d: lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x0000000047f004: lea rcx, [rbx+0x40]; lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x0000000047f5fe: lea rcx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x00000000472783: lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x000000004527e5: lea rcx, [rdx+0x10]; jne 0x0000000000452d30; ret; 
0x000000004529db: lea rcx, [rdx+0x1]; jne 0x0000000000452d30; ret; 
0x000000004529fd: lea rcx, [rdx+0x2]; jne 0x0000000000452d30; ret; 
0x00000000452a23: lea rcx, [rdx+0x3]; jne 0x0000000000452d30; ret; 
0x00000000452a3b: lea rcx, [rdx+0x4]; jne 0x0000000000452d30; ret; 
0x00000000452a61: lea rcx, [rdx+0x5]; jne 0x0000000000452d30; ret; 
0x00000000452a83: lea rcx, [rdx+0x6]; jne 0x0000000000452d30; ret; 
0x00000000452aa1: lea rcx, [rdx+0x7]; jne 0x0000000000452d30; ret; 
0x0000000045277d: lea rcx, [rdx+0x8]; jne 0x0000000000452d30; ret; 
0x00000000452ac3: lea rcx, [rdx+0x9]; jne 0x0000000000452d30; ret; 
0x00000000452ae3: lea rcx, [rdx+0xa]; jne 0x0000000000452d30; ret; 
0x00000000452b03: lea rcx, [rdx+0xb]; jne 0x0000000000452d30; ret; 
0x00000000452b23: lea rcx, [rdx+0xc]; jne 0x0000000000452d30; ret; 
0x00000000452b45: lea rcx, [rdx+0xd]; jne 0x0000000000452d30; ret; 
0x00000000452b65: lea rcx, [rdx+0xe]; jne 0x0000000000452d30; ret; 
0x00000000452b85: lea rcx, [rdx+0xf]; jne 0x0000000000452d30; ret; 
0x00000000437c7f: lea rcx, [rdx+rcx-0x10]; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x000000004a5fda: lea rcx, [rip+0x2a877]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000004a463a: lea rcx, [rip+0x2c1d7]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000004a168a: lea rcx, [rip+0x2ebef]; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000047f29b: lea rcx, [rip+0x497a2]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000047eae7: lea rcx, [rip+0x49d12]; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000047c3b6: lea rcx, [rip+0x63c83]; jmp qword ptr [rcx+rax*8]; 
0x0000000044da58: lea rcx, [rip+0x6d2e1]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044c643: lea rcx, [rip+0x6e6f6]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000044c3d8: lea rcx, [rip+0x6e961]; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044ab03: lea rcx, [rip+0x70236]; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000040dbb2: lea rcx, [rip+0x9c0e7]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000408a2d: lea rcx, [rip+0xa0a24]; mov esi, esi; movsxd rax, [rcx+rsi*4]; add rax, rcx; notrack jmp rax; 
0x00000000402064: lea rcx, [rip+0xa6f9d]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000004234e5: lea rcx, [rip+0xc0794]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000045fabd: lea rcx, [rip-0x64]; mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x00000000485255: lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000048523a: lea rcx, [rsi+rcx*4]; mov edx, [rcx+rdx]; test edx, edx; jne short 0x0000000000485250; ret; 
0x00000000460190: lea rdi, [rcx+rsi+0x20]; jmp rdx; 
0x00000000455e1c: lea rdi, [rdi+0x10]; jne 0x00000000004564f0; ret; 
0x00000000455e3f: lea rdi, [rdi+0x11]; jne 0x00000000004564f0; ret; 
0x00000000455e64: lea rdi, [rdi+0x12]; jne 0x00000000004564f0; ret; 
0x00000000455e82: lea rdi, [rdi+0x13]; jne 0x00000000004564f0; ret; 
0x00000000455ea2: lea rdi, [rdi+0x14]; jne 0x00000000004564f0; ret; 
0x00000000455ec5: lea rdi, [rdi+0x15]; jne 0x00000000004564f0; ret; 
0x00000000455ee4: lea rdi, [rdi+0x16]; jne 0x00000000004564f0; ret; 
0x00000000455f04: lea rdi, [rdi+0x17]; jne 0x00000000004564f0; ret; 
0x00000000455f24: lea rdi, [rdi+0x18]; jne 0x00000000004564f0; ret; 
0x00000000455f47: lea rdi, [rdi+0x19]; jne 0x00000000004564f0; ret; 
0x0000000044ed1c: lea rdi, [rdi+0x1]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c36: lea rdi, [rdi+0x1]; jne 0x00000000004564f0; ret; 
0x00000000455f7c: lea rdi, [rdi+0x1a]; jne 0x00000000004564f0; ret; 
0x00000000455faa: lea rdi, [rdi+0x1b]; jne 0x00000000004564f0; ret; 
0x00000000455fda: lea rdi, [rdi+0x1c]; jne 0x00000000004564f0; ret; 
0x00000000456006: lea rdi, [rdi+0x1d]; jne 0x00000000004564f0; ret; 
0x00000000456036: lea rdi, [rdi+0x1e]; jne 0x00000000004564f0; ret; 
0x00000000456066: lea rdi, [rdi+0x1f]; jne 0x00000000004564f0; ret; 
0x00000000456096: lea rdi, [rdi+0x20]; jne 0x00000000004564f0; ret; 
0x0000000044eeca: lea rdi, [rdi+0x2]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c5a: lea rdi, [rdi+0x2]; jne 0x00000000004564f0; ret; 
0x0000000044eeee: lea rdi, [rdi+0x3]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c7d: lea rdi, [rdi+0x3]; jne 0x00000000004564f0; ret; 
0x0000000044ef08: lea rdi, [rdi+0x4]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c98: lea rdi, [rdi+0x4]; jne 0x00000000004564f0; ret; 
0x00000000455cbb: lea rdi, [rdi+0x5]; jne 0x00000000004564f0; ret; 
0x00000000455ce0: lea rdi, [rdi+0x6]; jne 0x00000000004564f0; ret; 
0x00000000455cfe: lea rdi, [rdi+0x7]; jne 0x00000000004564f0; ret; 
0x00000000455d1a: lea rdi, [rdi+0x8]; jne 0x00000000004564f0; ret; 
0x00000000455d3d: lea rdi, [rdi+0x9]; jne 0x00000000004564f0; ret; 
0x00000000455d62: lea rdi, [rdi+0xa]; jne 0x00000000004564f0; ret; 
0x00000000455d80: lea rdi, [rdi+0xb]; jne 0x00000000004564f0; ret; 
0x00000000455da0: lea rdi, [rdi+0xc]; jne 0x00000000004564f0; ret; 
0x00000000455dc2: lea rdi, [rdi+0xd]; jne 0x00000000004564f0; ret; 
0x00000000455de2: lea rdi, [rdi+0xe]; jne 0x00000000004564f0; ret; 
0x00000000455e02: lea rdi, [rdi+0xf]; jne 0x00000000004564f0; ret; 
0x0000000044ef33: lea rdi, [rdi+rdx+0x1]; jne 0x000000000044f150; vzeroupper; ret; 
0x0000000043b823: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043b836; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043b973: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043b986; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bac3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043bad6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bc13: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043bc26; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bd63: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043bd76; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043beb3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043bec6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c003: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c016; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c153: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c166; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c2a3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c2b6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c3f3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c406; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c543: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c556; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c693: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c6a6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c7e3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c7f6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c933: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043c946; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ca83: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043ca96; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e203: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043e216; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e353: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043e366; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e4a3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043e4b6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e5f3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043e606; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e743: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043e756; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e893: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043e8a6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e9e3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043e9f6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043eb33: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043eb46; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ec83: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043ec96; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043edd3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043ede6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ef23: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043ef36; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f073: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043f086; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f1c3: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043f1d6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f313: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043f326; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f463: lea rdi, [rdi-0x40]; movaps [rdi+0x10], xmm3; jb short 0x000000000043f476; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000048f7ff: lea rdi, [rip+0x3a91d]; mov eax, 0x59; mov rbp, rsp; mov rsi, rbp; syscall; 
0x000000004a7d47: lea rdi, [rip+0x3d232]; syscall; 
0x0000000048c2b6: lea rdi, [rip+0x3d8bb]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000047f237: lea rdi, [rip+0x4974a]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x00000000497dc7: lea rdi, [rip+0x4d246]; syscall; 
0x00000000497b43: lea rdi, [rip+0x4d4c6]; syscall; 
0x00000000479670: lea rdi, [rip+0x4ef89]; lea rsi, [rip+0x663c2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000495abf: lea rdi, [rip+0x4f542]; syscall; 
0x0000000049597f: lea rdi, [rip+0x4f682]; syscall; 
0x000000004600e0: lea rdi, [rip+0x58361]; mov eax, 0x15; syscall; 
0x00000000471907: lea rdi, [rip+0x73672]; syscall; 
0x00000000471842: lea rdi, [rip+0x73737]; syscall; 
0x000000004716a0: lea rdi, [rip+0x738d9]; syscall; 
0x000000004715c6: lea rdi, [rip+0x739b3]; syscall; 
0x00000000463df7: lea rdi, [rip+0x81c12]; syscall; 
0x00000000463c8b: lea rdi, [rip+0x81d7e]; syscall; 
0x00000000463b6b: lea rdi, [rip+0x81e9e]; syscall; 
0x0000000045b423: lea rdi, [rip+0x8a5e6]; syscall; 
0x00000000430aa3: lea rdi, [rip+0xb1d36]; syscall; 
0x0000000042dea3: lea rdi, [rip+0xb4936]; syscall; 
0x0000000042de43: lea rdi, [rip+0xb4996]; syscall; 
0x0000000042da83: lea rdi, [rip+0xb4d56]; syscall; 
0x0000000042d823: lea rdi, [rip+0xb4fb6]; syscall; 
0x0000000042d24b: lea rdi, [rip+0xb558e]; syscall; 
0x0000000042d213: lea rdi, [rip+0xb55c6]; syscall; 
0x0000000042ee03: lea rdi, [rip+0xb5f26]; syscall; 
0x0000000042e3b7: lea rdi, [rip+0xb6962]; syscall; 
0x0000000042a514: lea rdi, [rip+0xba805]; syscall; 
0x0000000042a4e3: lea rdi, [rip+0xba846]; syscall; 
0x0000000042a263: lea rdi, [rip+0xbaac6]; syscall; 
0x00000000429d3f: lea rdi, [rip+0xbafea]; syscall; 
0x00000000428955: lea rdi, [rip+0xbc354]; syscall; 
0x00000000428395: lea rdi, [rip+0xbc914]; syscall; 
0x00000000428029: lea rdi, [rip+0xbcc80]; syscall; 
0x00000000427ce7: lea rdi, [rip+0xbcfc2]; syscall; 
0x00000000426781: lea rdi, [rip+0xbe528]; syscall; 
0x000000004264e1: lea rdi, [rip+0xbe7c8]; syscall; 
0x0000000042618d: lea rdi, [rip+0xbeb1c]; syscall; 
0x00000000420193: lea rdi, [rip+0xc5876]; syscall; 
0x0000000041f142: lea rdi, [rip+0xc6767]; syscall; 
0x0000000041f002: lea rdi, [rip+0xc68a7]; syscall; 
0x0000000041edcb: lea rdi, [rip+0xc6ade]; syscall; 
0x0000000041ed90: lea rdi, [rip+0xc6b19]; syscall; 
0x0000000041ecac: lea rdi, [rip+0xc6bfd]; syscall; 
0x000000004156e0: lea rdi, [rip+0xcf151]; syscall; 
0x00000000413d3d: lea rdi, [rip+0xd0abc]; syscall; 
0x00000000412bbe: lea rdi, [rip+0xd1b93]; syscall; 
0x00000000412b90: lea rdi, [rip+0xd1bc1]; syscall; 
0x00000000412a44: lea rdi, [rip+0xd1d0d]; syscall; 
0x000000004012dc: lea rdi, [rip+0xe356d]; syscall; 
0x0000000043b323: lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004817b3: lea rdx, [r8+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x000000004293b3: lea rdx, [rax+0x1]; mov [rip+0xb93d2], rdx; ret; 
0x00000000422ca6: lea rdx, [rbp-0x48]; lea r9, [rbp-0x40]; mov rcx, r14; mov rdi, r15; call r12; 
0x0000000047f5fa: lea rdx, [rbx+0x34]; lea rcx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x0000000047f006: lea rdx, [rbx+0x34]; mov esi, 0x1; mov rdi, rbx; call rax; 
0x0000000043b727: lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000431998: lea rdx, [rip+0x118b1]; cmovne rax, rdx; ret; 
0x00000000481d12: lea rdx, [rip+0x11d7]; lea rax, [rip+0xed0]; cmove rax, rdx; ret; 
0x0000000049865b: lea rdx, [rip+0x11e]; lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x00000000481cd2: lea rdx, [rip+0x1607]; lea rax, [rip+0x13e0]; cmove rax, rdx; ret; 
0x00000000431bec: lea rdx, [rip+0x16b5d]; cmovne rax, rdx; ret; 
0x00000000431d22: lea rdx, [rip+0x1c407]; lea rax, [rip+0x1bfc0]; cmove rax, rdx; ret; 
0x00000000430fe2: lea rdx, [rip+0x1d4d7]; lea rax, [rip+0x1d330]; cmove rax, rdx; ret; 
0x00000000430f49: lea rdx, [rip+0x1e5e0]; cmovne rax, rdx; ret; 
0x000000004310a9: lea rdx, [rip+0x1fc30]; cmovne rax, rdx; ret; 
0x00000000431b99: lea rdx, [rip+0x21cc0]; cmovne rax, rdx; ret; 
0x00000000430ee9: lea rdx, [rip+0x25b0]; cmovne rax, rdx; ret; 
0x000000004318fa: lea rdx, [rip+0x25b3f]; cmovne rax, rdx; ret; 
0x00000000430e89: lea rdx, [rip+0x26290]; cmovne rax, rdx; ret; 
0x00000000431ca7: lea rdx, [rip+0x27832]; lea rax, [rip+0x278eb]; cmove rax, rdx; ret; 
0x00000000431b37: lea rdx, [rip+0x27992]; lea rax, [rip+0x27a4b]; cmove rax, rdx; ret; 
0x000000004319d7: lea rdx, [rip+0x27b02]; lea rax, [rip+0x27bbb]; cmove rax, rdx; ret; 
0x00000000431c39: lea rdx, [rip+0x27c70]; lea rax, [rip+0x27cb9]; cmove rax, rdx; ret; 
0x00000000431ac9: lea rdx, [rip+0x27dd0]; lea rax, [rip+0x27e19]; cmove rax, rdx; ret; 
0x00000000431969: lea rdx, [rip+0x27f40]; lea rax, [rip+0x27f89]; cmove rax, rdx; ret; 
0x00000000431c8b: lea rdx, [rip+0x2805e]; lea rax, [rip+0x280a7]; cmove rax, rdx; ret; 
0x00000000430f6b: lea rdx, [rip+0x2818e]; lea rax, [rip+0x280d7]; cmovne rax, rdx; ret; 
0x00000000431b1b: lea rdx, [rip+0x281be]; lea rax, [rip+0x28207]; cmove rax, rdx; ret; 
0x000000004319bb: lea rdx, [rip+0x2832e]; lea rax, [rip+0x28377]; cmove rax, rdx; ret; 
0x00000000431a52: lea rdx, [rip+0x28867]; lea rax, [rip+0x287f0]; cmovne rax, rdx; ret; 
0x00000000431a33: lea rdx, [rip+0x28996]; lea rax, [rip+0x289df]; cmove rax, rdx; ret; 
0x00000000431a7b: lea rdx, [rip+0x28ace]; lea rax, [rip+0x28b27]; cmove rax, rdx; ret; 
0x00000000483d49: lea rdx, [rip+0x30]; cmovne rax, rdx; ret; 
0x000000004983a8: lea rdx, [rip+0x33bed]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004988d2: lea rdx, [rip+0x3a7]; lea rax, [rip+0x70]; cmove rax, rdx; ret; 
0x00000000498339: lea rdx, [rip+0x4b7c0]; mov [rax], rdx; add rsp, 0x8; ret; 
0x00000000431053: lea rdx, [rip+0x5356]; cmovne rax, rdx; ret; 
0x0000000045bb20: lea rdx, [rip+0x5c375]; movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000044daa6: lea rdx, [rip+0x6d293]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044da8c: lea rdx, [rip+0x6d2ad]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044c426: lea rdx, [rip+0x6e913]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044c40c: lea rdx, [rip+0x6e92d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044a876: lea rdx, [rip+0x704c3]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000044a85c: lea rdx, [rip+0x704dd]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000448716: lea rdx, [rip+0x72623]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x000000004486fc: lea rdx, [rip+0x7263d]; mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000431ce2: lea rdx, [rip+0x7547]; lea rax, [rip+0x7330]; cmove rax, rdx; ret; 
0x0000000043090a: lea rdx, [rip+0x85ba7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000040dc64: lea rdx, [rip+0x9c04d]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000409769: lea rdx, [rip+0x9fd78]; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x0000000040948d: lea rdx, [rip+0xa0014]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000407d45: lea rdx, [rip+0xa16cc]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000407cf5: lea rdx, [rip+0xa16fc]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000410954: lea rdx, [rip+0xa2b45]; movsxd rax, [rcx+rax*4]; add rax, rdx; ret; 
0x00000000411d6d: lea rdx, [rip+0xa2c70]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000411d6c: lea rdx, [rip+0xa2c70]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004034a9: lea rdx, [rip+0xa5c50]; mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x00000000481dd2: lea rdx, [rip+0xb47]; lea rax, [rip+0x810]; cmove rax, rdx; ret; 
0x00000000401bea: lea rdx, [rip+0xb5df3]; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x00000000483622: lea rdx, [rip+0xc57]; lea rax, [rip+0x9b0]; cmove rax, rdx; ret; 
0x00000000431c68: lea rdx, [rip+0xeaf1]; cmovne rax, rdx; ret; 
0x00000000431af8: lea rdx, [rip+0xec41]; cmovne rax, rdx; ret; 
0x000000004318ab: lea rdx, [rip-0x362]; lea rax, [rip+0x272f7]; cmove rax, rdx; ret; 
0x00000000459566: lea rdx, [rsi+rcx]; cmp rdi, rdx; jb short 0x0000000000459572; rep movsb [rdi], [rsi]; ret; 
0x0000000045cbc8: lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000048dba3: lea rsi, [rbp-0x430]; mov eax, 0x14; syscall; 
0x00000000422a57: lea rsi, [rbx+0x40]; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x00000000422b46: lea rsi, [rbx+0x8]; xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000048bd79: lea rsi, [rip+0x3dd60]; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x0000000049c1a8: lea rsi, [rip+0x49831]; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x0000000047ea8b: lea rsi, [rip+0x49cb2]; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000045a752: lea rsi, [rip+0x5d1e7]; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x0000000047ca9f: lea rsi, [rip+0x6319a]; mov dword ptr [rbp-0x530], 0x1; mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047cb24: lea rsi, [rip+0x63515]; mov r11, rcx; mov dword ptr [rbp-0x508], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047caea: lea rsi, [rip+0x6354f]; mov r11, rcx; mov dword ptr [rbp-0x520], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047ca1c: lea rsi, [rip+0x6361d]; mov r11, rcx; mov dword ptr [rbp-0x4f8], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c9d7: lea rsi, [rip+0x63662]; mov dword ptr [rbp-0x4e0], 0x1; mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c3dc: lea rsi, [rip+0x63c5d]; mov r11, rcx; mov dword ptr [rbp-0x514], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c35c: lea rsi, [rip+0x63cdd]; mov r11, rcx; mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479677: lea rsi, [rip+0x663c2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000475d99: lea rsi, [rip+0x69ba0]; sub eax, 0x20; cdqe; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000041d860: lea rsi, [rip+0x97279]; mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000411498: lea rsi, [rip+0xa3381]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000459577: lea rsi, [rsi+rcx-0x1]; std; rep movsb [rdi], [rsi]; cld; ret; 
0x00000000423b71: lea rsi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000421619: lea rsi, [rsp+0x30]; mov rdi, r15; call qword ptr [r14+0x90]; 
0x00000000410f9e: lea rsi, [rsp+0x70]; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x00000000437837: leave; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000438717: leave; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x000000004591a4: leave; add rax, rcx; sub rax, rdi; ret; 
0x000000004847f6: leave; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000048e528: leave; cmove r8, rax; mov rax, r8; ret; 
0x00000000458ca0: leave; jne short 0x0000000000458c90; ret; 
0x00000000458d50: leave; jne short 0x0000000000458d40; ret; 
0x00000000459010: leave; jne short 0x0000000000459000; sub rax, 0x1; ret; 
0x0000000048bf02: leave; jne short 0x000000000048bf07; call rax; 
0x0000000048c8d4: leave; jne short 0x000000000048c8e7; mov [rbp-0xd8], r11; call rax; 
0x00000000448849: leave; lea r10, [rip+0x6ed4f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004465f9: leave; lea r10, [rip+0x70f5f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000436459: leave; lea r10, [rip+0x8018f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000434bf9: leave; lea r10, [rip+0x819af]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000433529: leave; lea r10, [rip+0x8303f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000431e29: leave; lea r10, [rip+0x846ff]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000431917: leave; lea rax, [rip+0x7e61]; test byte ptr [rip+0xb34bf], 0x1; je short 0x00000000004318e1; ret; 
0x000000004398ff: leave; mov al, [rdi+rdx-0x1]; mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x0000000047b990: leave; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004856af: leave; mov eax, 0x1; ret; 
0x0000000046cf14: leave; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000043339c: leave; movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x000000004a4546: leave; nop [rax+rax]; xor eax, eax; ret; 
0x0000000040cc44: leave; or [rax], eax; ret; 
0x00000000428399: leave; or eax, [rax]; syscall; 
0x0000000046caeb: leave; ret far; 
0x00000000401e88: leave; ret; 
0x0000000048566f: leave; xor eax, eax; ret; 
0x000000004a79b2: lock add [r9], r14b; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000040928c: lock add [rax], al; add [rax-0x77], cl; ret; 
0x00000000401cab: lock add [rax], al; hlt; nop; endbr64; ret; 
0x0000000048efab: lock inc dword ptr [r8+0x10]; pop rbx; pop rbp; ret; 
0x00000000424bd0: lodsb [rsi]; add [rax], al; add [rax-0x77], cl; out dx, eax; call qword ptr [r13+0x20]; 
0x00000000485460: lodsb [rsi]; movsd [rdi], [rsi]; std; jmp qword ptr [rsi+0x2e]; 
0x0000000049d17f: lodsd [rsi]; enter 0x894c, 0x7; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x0000000049d1b2: lodsd [rsi]; ret; 
0x00000000420916: loop 0x0000000000420964; mov esi, esi; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000420b2a: loop 0x0000000000420b74; mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x000000004218f8: loop 0x0000000000421942; mov esi, ebp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x000000004288d2: loop 0x0000000000428897; or eax, [rax]; add dword ptr [rip+0xbc3d7], 0x1; pop rbx; ret; 
0x0000000043198f: loop 0x0000000000431999; lea rax, [rip+0xc218]; lea rdx, [rip+0x118b1]; cmovne rax, rdx; ret; 
0x00000000431aef: loop 0x0000000000431af9; lea rax, [rip+0x96b8]; lea rdx, [rip+0xec41]; cmovne rax, rdx; ret; 
0x00000000431c5f: loop 0x0000000000431c69; lea rax, [rip+0x9568]; lea rdx, [rip+0xeaf1]; cmovne rax, rdx; ret; 
0x0000000043348d: loop 0x00000000004334c0; shr byte ptr [rcx], 0xc8; ret; 
0x0000000043d617: loop 0x000000000043d665; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d65f: loop 0x000000000043d6ad; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d69d: loop 0x000000000043d6eb; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d6d5: loop 0x000000000043d723; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d713: loop 0x000000000043d761; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d74b: loop 0x000000000043d799; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d773: loop 0x000000000043d7c1; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043fff7: loop 0x0000000000440045; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000044003f: loop 0x000000000044008d; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000044007d: loop 0x00000000004400cb; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004400b5: loop 0x0000000000440103; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004400f3: loop 0x0000000000440141; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000044012b: loop 0x0000000000440179; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000440153: loop 0x00000000004401a1; mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000442489: loop 0x000000000044247f; movq [rdi-0x10], mm1; ret; 
0x00000000444fb9: loop 0x0000000000444faf; movq [rdi-0x10], mm1; ret; 
0x0000000044de4b: loop 0x000000000044de7d; or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x00000000455f0a: loop 0x0000000000455f11; add [rax], al; ret; 
0x0000000045a81f: loop 0x000000000045a830; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x0000000045ade5: loop 0x000000000045adaa; nop [rax+rax]; xor eax, eax; ret; 
0x0000000045bfbb: loop 0x000000000045c005; mov esi, ebp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000045cc5a: loop 0x000000000045cc1a; adc [rax], al; add [rax], al; mov eax, 0x48; syscall; 
0x0000000045e28f: loop 0x000000000045e298; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000045f357: loop 0x000000000045f358; dec dword ptr [rax-0x7f]; ret; 
0x00000000460196: loop 0x00000000004601fe; nop [rax+rax]; ret; 
0x00000000472464: loop 0x00000000004724a7; call qword ptr [rbp+0x38]; 
0x00000000472781: loop 0x0000000000472785; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x000000004753ea: loop 0x0000000000475382; sti; jmp qword ptr [rsi-0x70]; 
0x00000000478bd1: loop 0x0000000000478bd5; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000047fbe0: loop 0x000000000047fc2a; mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000483a00: loop 0x00000000004839fb; jmp qword ptr [rsi+0x2e]; 
0x00000000484e3f: loop 0x0000000000484e29; ret far; 
0x00000000485072: loop 0x000000000048502c; adc [rax], al; add [rax], al; syscall; 
0x000000004907fa: loop 0x00000000004907d8; stc; dec dword ptr [rax-0x77]; ret; 
0x000000004924c9: loop 0x0000000000492517; mov eax, eax; ret; 
0x00000000409850: loope 0x0000000000409851; jmp far fword ptr [rcx]; 
0x00000000434a4e: loope 0x0000000000434a79; enter 0xf8c5, 0x77; ret; 
0x0000000043d817: loope 0x000000000043d865; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d85f: loope 0x000000000043d8ad; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d89d: loope 0x000000000043d8eb; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d8d5: loope 0x000000000043d923; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d913: loope 0x000000000043d961; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d94b: loope 0x000000000043d999; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d973: loope 0x000000000043d9c1; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004401f7: loope 0x0000000000440245; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000044023f: loope 0x000000000044028d; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000044027d: loope 0x00000000004402cb; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004402b5: loope 0x0000000000440303; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004402f3: loope 0x0000000000440341; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000044032b: loope 0x0000000000440379; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000440353: loope 0x00000000004403a1; mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004423f9: loope 0x00000000004423ef; movq [rdi-0x10], mm1; ret; 
0x00000000444f29: loope 0x0000000000444f1f; movq [rdi-0x10], mm1; ret; 
0x00000000452b4b: loope 0x0000000000452b4e; add [rax], al; ret; 
0x000000004553c6: loope 0x000000000045542e; nop [rax+rax]; mov [rdi], dh; ret; 
0x00000000456a06: loope 0x0000000000456a6e; nop [rax+rax]; mov [rdi], dh; lea rax, [rdi]; ret; 
0x00000000457113: loope 0x000000000045715d; lea eax, [rdi+rdx]; vzeroupper; ret; 
0x0000000045734b: loope 0x000000000045734d; add [rax], al; lea rax, [rdi+0xf]; ret; 
0x0000000045b657: loope 0x000000000045b6a5; mov edx, ebp; call rbx; 
0x00000000462173: loope 0x0000000000462178; pop r12; shl eax, cl; ret; 
0x00000000483b2f: loope 0x0000000000483b29; jmp qword ptr [rsi+0xf]; 
0x000000004841be: loope 0x00000000004841cf; je short 0x00000000004841e0; ret; 
0x0000000048f6d1: loope 0x000000000048f6d7; cmp r8, [rcx+rsi+0x10]; jae short 0x000000000048f685; xor eax, eax; ret; 
0x0000000049d03b: loope 0x000000000049d089; mov [rdi], ecx; ret; 
0x0000000049d06c: loope 0x000000000049d0ba; mov [rdi-0x8], ecx; ret; 
0x0000000049d0ed: loope 0x000000000049d13b; mov [rdi-0x10], ecx; ret; 
0x000000004a3824: loope 0x00000000004a37e4; or al, [rax]; add [rax], al; mov edi, 0x1; call rax; 
0x000000004a384b: loope 0x00000000004a380b; or al, [rax]; add [rax], al; mov edi, 0x1; call rax; 
0x000000004a38a1: loope 0x00000000004a3861; sbb al, [rax]; add [rax], al; mov edi, 0x1; call rax; 
0x000000004a671e: loope 0x00000000004a677b; ret; 
0x00000000401cdd: loopne 0x0000000000401d45; nop; ret; 
0x00000000402484: loopne 0x00000000004024e3; pop r12; ret; 
0x000000004025d5: loopne 0x0000000000402618; pop rsp; pop r13; ret; 
0x000000004025f4: loopne 0x000000000040263b; mov eax, esp; pop r12; pop r13; ret; 
0x000000004025f8: loopne 0x000000000040263b; pop rsp; pop r13; ret; 
0x00000000402ef0: loopne 0x0000000000402f4f; pop r12; pop r13; ret; 
0x00000000402f29: loopne 0x0000000000402f70; mov eax, esp; pop r12; pop r13; ret; 
0x00000000402f2d: loopne 0x0000000000402f70; pop rsp; pop r13; ret; 
0x00000000402f8c: loopne 0x0000000000402feb; pop r12; pop r13; ret; 
0x00000000403250: loopne 0x0000000000403293; pop rsp; ret; 
0x000000004038e9: loopne 0x000000000040386e; ret; 
0x00000000403929: loopne 0x00000000004038ae; ret; 
0x0000000040396c: loopne 0x000000000040396c; add rsp, 0x18; ret; 
0x00000000404e12: loopne 0x0000000000404e71; pop r12; ret; 
0x00000000404e50: loopne 0x0000000000404eaf; pop r12; ret; 
0x00000000405ae6: loopne 0x0000000000405b26; jmp rax; 
0x00000000407a19: loopne 0x0000000000407a76; pop rbp; pop r12; ret; 
0x00000000407b1a: loopne 0x0000000000407b77; pop rbp; pop r12; ret; 
0x00000000407c8d: loopne 0x0000000000407cea; pop r12; ret; 
0x00000000408858: loopne 0x0000000000408844; ret; 
0x00000000408ef3: loopne 0x0000000000408f52; pop r12; ret; 
0x0000000040a4c3: loopne 0x000000000040a4d7; add bl, r8b; nop [rax+rax]; mov rax, 0x4dec80; ret; 
0x0000000040a520: loopne 0x000000000040a50c; ret; 
0x0000000040a992: loopne 0x000000000040a9d5; pop rsp; ret; 
0x0000000040a97d: loopne 0x000000000040a9da; pop rbp; pop r12; ret; 
0x0000000040aa5a: loopne 0x000000000040aab9; pop r12; pop r13; ret; 
0x0000000040aadc: loopne 0x000000000040aabd; ret; 
0x0000000040b1c4: loopne 0x000000000040b221; pop rbp; pop r12; pop r13; ret; 
0x0000000040b20d: loopne 0x000000000040b26c; pop r12; pop r13; ret; 
0x0000000040b2c9: loopne 0x000000000040b326; pop rbp; pop r12; pop r13; ret; 
0x0000000040b4a4: loopne 0x000000000040b4af; add bl, al; nop [rax+rax]; lea rax, [rip+0x9e077]; ret; 
0x0000000040b4b4: loopne 0x000000000040b4bf; add bl, al; nop [rax+rax]; lea rax, [rip+0x9e08c]; ret; 
0x0000000040b4c4: loopne 0x000000000040b4cf; add bl, al; nop [rax+rax]; lea rax, [rip+0x9e04f]; ret; 
0x0000000040b4d3: loopne 0x000000000040b4df; add bl, al; nop [rax+rax]; lea rax, [rip+0x9e04c]; ret; 
0x0000000040b4e3: loopne 0x000000000040b4ef; add bl, al; nop [rax+rax]; lea rax, [rip+0x9e044]; ret; 
0x0000000040b4f3: loopne 0x000000000040b4ff; add bl, al; nop [rax+rax]; lea rax, [rip+0x9e040]; ret; 
0x0000000040b503: loopne 0x000000000040b50f; add bl, al; nop [rax+rax]; lea rax, [rip+0xc02d8]; ret; 
0x0000000040b524: loopne 0x000000000040b52f; add bl, al; nop [rax+rax]; lea rax, [rip+0x9e02e]; ret; 
0x0000000040b533: loopne 0x000000000040b53f; add bl, al; nop [rax+rax]; lea rax, [rip+0x9e023]; ret; 
0x0000000040b534: loopne 0x000000000040b53f; add bl, al; nop [rax+rax]; lea rax, [rip+0x9e023]; ret; 
0x0000000040b544: loopne 0x000000000040b54f; add bl, al; nop [rax+rax]; lea rax, [rip+0x9e01c]; ret; 
0x0000000040b554: loopne 0x000000000040b55f; add bl, al; nop [rax+rax]; lea rax, [rip+0x9e014]; ret; 
0x0000000040b564: loopne 0x000000000040b56f; add bl, al; lea rax, [rip+0x9e015]; ret; 
0x0000000040b56c: loopne 0x000000000040b577; add bl, al; lea rax, [rip+0x9e015]; ret; 
0x0000000040b574: loopne 0x000000000040b57f; add bl, al; lea rax, [rip+0x9e016]; ret; 
0x0000000040b57c: loopne 0x000000000040b587; add bl, al; lea rax, [rip+0x9e015]; ret; 
0x0000000040b584: loopne 0x000000000040b58f; add bl, al; lea rax, [rip+0x9e018]; ret; 
0x0000000040b58c: loopne 0x000000000040b597; add bl, al; lea rax, [rip+0x9e019]; ret; 
0x0000000040b594: loopne 0x000000000040b59f; add bl, al; lea rax, [rip+0x9e018]; ret; 
0x0000000040b59c: loopne 0x000000000040b5a7; add bl, al; lea rax, [rip+0x9e01b]; ret; 
0x0000000040b5a4: loopne 0x000000000040b5af; add bl, al; lea rax, [rip+0x9e019]; ret; 
0x0000000040b5ac: loopne 0x000000000040b5b7; add bl, al; lea rax, [rip+0x9e018]; ret; 
0x0000000040b5b4: loopne 0x000000000040b5bf; add bl, al; lea rax, [rip+0x9e017]; ret; 
0x0000000040b5bc: loopne 0x000000000040b5c7; add bl, al; lea rax, [rip+0x9e01a]; ret; 
0x0000000040b5c4: loopne 0x000000000040b5cf; add bl, al; lea rax, [rip+0x9e019]; ret; 
0x0000000040b5cc: loopne 0x000000000040b5d7; add bl, al; lea rax, [rip+0x9e018]; ret; 
0x0000000040b5d4: loopne 0x000000000040b5df; add bl, al; lea rax, [rip+0x9e017]; ret; 
0x0000000040b5dc: loopne 0x000000000040b5e7; add bl, al; lea rax, [rip+0x9e016]; ret; 
0x0000000040b5e4: loopne 0x000000000040b5ef; add bl, al; lea rax, [rip+0x9e021]; ret; 
0x0000000040b5ec: loopne 0x000000000040b5f7; add bl, al; lea rax, [rip+0x9e012]; ret; 
0x0000000040b5f4: loopne 0x000000000040b5ff; add bl, al; lea rax, [rip+0x9e004]; ret; 
0x0000000040b75c: loopne 0x000000000040b73d; ret; 
0x0000000040bd74: loopne 0x000000000040bdd1; pop rbp; pop r12; pop r13; ret; 
0x0000000040be31: loopne 0x000000000040be8e; pop rbp; pop r12; pop r13; ret; 
0x0000000040be4d: loopne 0x000000000040beac; pop r12; pop r13; ret; 
0x0000000040c27c: loopne 0x000000000040c25d; ret; 
0x0000000040c944: loopne 0x000000000040c9a1; pop rbp; pop r12; pop r13; ret; 
0x0000000040c98d: loopne 0x000000000040c9ec; pop r12; pop r13; ret; 
0x0000000040ca49: loopne 0x000000000040caa6; pop rbp; pop r12; pop r13; ret; 
0x0000000040cdbc: loopne 0x000000000040cd9d; ret; 
0x0000000040d484: loopne 0x000000000040d4e1; pop rbp; pop r12; pop r13; ret; 
0x0000000040d4cd: loopne 0x000000000040d52c; pop r12; pop r13; ret; 
0x0000000040d589: loopne 0x000000000040d5e6; pop rbp; pop r12; pop r13; ret; 
0x0000000040dbf8: loopne 0x000000000040dc3b; pop rsp; ret; 
0x0000000040dbf4: loopne 0x000000000040dc43; mov eax, esp; pop r12; ret; 
0x0000000040dc95: loopne 0x000000000040dcd8; pop rsp; ret; 
0x00000000410bbb: loopne 0x0000000000410b7d; mov [rip+0xd423c], rax; add rsp, 0x88; pop rbx; ret; 
0x00000000411cfc: loopne 0x0000000000411d59; pop rbp; pop r12; ret; 
0x00000000411d9a: loopne 0x0000000000411ddd; pop rsp; ret; 
0x0000000041e14c: loopne 0x000000000041e14e; add [rax], al; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000042006e: loopne 0x00000000004200cb; pop rbp; pop r12; ret; 
0x0000000042064d: loopne 0x000000000042064f; add [rax], al; ret; 
0x00000000420823: loopne 0x0000000000420880; pop rbp; pop r12; pop r13; ret; 
0x00000000420849: loopne 0x00000000004208a6; pop rbp; pop r12; pop r13; ret; 
0x00000000421e10: loopne 0x0000000000421e12; add [rax], al; mov rax, [rax+0x20]; jmp rax; 
0x00000000421e19: loopne 0x0000000000421e81; nop [rax+rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x000000004234ef: loopne 0x00000000004234f1; add [rax], al; pop rbx; ret; 
0x00000000424bca: loopne 0x0000000000424c14; cmp eax, ebx; jae 0x0000000000424c80; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000424ecf: loopne 0x0000000000424f19; cmp ebx, eax; jbe 0x0000000000424f80; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000042540e: loopne 0x000000000042546b; pop rbp; pop r12; ret; 
0x00000000429944: loopne 0x00000000004299a1; pop rbp; pop r12; pop r13; ret; 
0x0000000042997c: loopne 0x00000000004299db; pop r12; pop r13; ret; 
0x00000000429ce7: loopne 0x0000000000429d2a; pop rsp; ret; 
0x00000000429cd8: loopne 0x0000000000429d35; pop rbp; pop r12; ret; 
0x0000000042a147: loopne 0x000000000042a1a4; pop rbp; pop r12; pop r13; ret; 
0x0000000042b6d7: loopne 0x000000000042b6d8; jmp qword ptr [rsi+0xf]; 
0x0000000042e2bf: loopne 0x000000000042e31c; pop rbp; pop r12; ret; 
0x000000004304b2: loopne 0x00000000004304b5; cmovne rax, rdx; ret; 
0x00000000430f4c: loopne 0x0000000000430f33; add [rax], eax; cmovne rax, rdx; ret; 
0x0000000043b782: loopne 0x000000000043b793; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043b8d2: loopne 0x000000000043b8e3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043ba22: loopne 0x000000000043ba33; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043bb72: loopne 0x000000000043bb83; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043bcc2: loopne 0x000000000043bcd3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043be12: loopne 0x000000000043be23; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043bf62: loopne 0x000000000043bf73; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c0b0: loopne 0x000000000043c0c1; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c202: loopne 0x000000000043c213; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c352: loopne 0x000000000043c363; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c4a2: loopne 0x000000000043c4b3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c5f2: loopne 0x000000000043c603; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c742: loopne 0x000000000043c753; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c892: loopne 0x000000000043c8a3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043c9e2: loopne 0x000000000043c9f3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043caee: loopne 0x000000000043cb3d; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000043cb2c: loopne 0x000000000043cb7b; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043cb64: loopne 0x000000000043cbb3; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000043cba2: loopne 0x000000000043cbf1; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043cbda: loopne 0x000000000043cc29; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043cc02: loopne 0x000000000043cc51; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043e162: loopne 0x000000000043e173; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043e2b2: loopne 0x000000000043e2c3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043e402: loopne 0x000000000043e413; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043e552: loopne 0x000000000043e563; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043e6a2: loopne 0x000000000043e6b3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043e7f2: loopne 0x000000000043e803; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043e942: loopne 0x000000000043e953; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043ea90: loopne 0x000000000043eaa1; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043ebe2: loopne 0x000000000043ebf3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043ed32: loopne 0x000000000043ed43; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043ee82: loopne 0x000000000043ee93; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043efd2: loopne 0x000000000043efe3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043f122: loopne 0x000000000043f133; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043f272: loopne 0x000000000043f283; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043f3c2: loopne 0x000000000043f3d3; sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043f4ce: loopne 0x000000000043f51d; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000043f50c: loopne 0x000000000043f55b; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043f544: loopne 0x000000000043f593; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000043f582: loopne 0x000000000043f5d1; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043f5ba: loopne 0x000000000043f609; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043f5e2: loopne 0x000000000043f631; mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000044237f: loopne 0x0000000000442375; movq [rdi-0x20], mm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x00000000444eaf: loopne 0x0000000000444ea5; movq [rdi-0x20], mm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x0000000045600c: loopne 0x0000000000456012; add [rax], al; ret; 
0x00000000459307: loopne 0x00000000004592cc; vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000459684: loopne 0x0000000000459695; adc [rdi+rdx-0x30], esi; movups [rdi+rdx-0x40], xmm7; ret; 
0x0000000045973d: loopne 0x0000000000459783; movups [rcx-0x30], xmm0; movups [r11], xmm4; ret; 
0x0000000045982b: loopne 0x0000000000459871; movups [rcx-0x30], xmm0; movups [r11], xmm4; ret; 
0x0000000045a78d: loopne 0x000000000045a79e; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x0000000045cee3: loopne 0x000000000045cf40; pop r12; ret; 
0x0000000045cf2b: loopne 0x000000000045cf88; pop r12; ret; 
0x0000000045d1ca: loopne 0x000000000045d229; pop r12; pop r13; jmp rax; 
0x0000000045d25a: loopne 0x000000000045d2b9; pop r12; pop r13; jmp rax; 
0x0000000045de43: loopne 0x000000000045dea2; pop r12; jmp rax; 
0x0000000045def2: loopne 0x000000000045df51; pop r12; pop r13; jmp rax; 
0x0000000045def9: loopne 0x000000000045df61; nop [rax+rax]; ret; 
0x0000000045f6de: loopne 0x000000000045f73b; pop rbp; pop r12; pop r13; ret; 
0x00000000461fb7: loopne 0x0000000000461fb1; or eax, 0x2; mov [rip+0x83992], eax; pop rbx; ret; 
0x00000000461fe8: loopne 0x0000000000461fe2; or eax, 0x1; mov [rip+0x83961], eax; ret; 
0x00000000462018: loopne 0x0000000000462012; or eax, 0x3; mov [rip+0x83931], eax; ret; 
0x00000000462057: loopne 0x0000000000462020; or eax, 0x10; mov [rip+0x838f2], eax; pop rbx; ret; 
0x00000000462088: loopne 0x0000000000462051; or eax, 0x8; mov [rip+0x838c1], eax; ret; 
0x000000004620b8: loopne 0x0000000000462081; or eax, 0x18; mov [rip+0x83891], eax; ret; 
0x000000004630b7: loopne 0x00000000004630b2; jmp qword ptr [rsi+0x48]; 
0x0000000046db95: loopne 0x000000000046dbf4; pop r12; pop r13; ret; 
0x0000000046dc17: loopne 0x000000000046dc76; pop r12; pop r13; ret; 
0x0000000046e210: loopne 0x000000000046e25a; test eax, eax; je short 0x000000000046e218; call rax; 
0x0000000047486f: loopne 0x0000000000474870; jmp qword ptr [rsi+0xf]; 
0x0000000047ee92: loopne 0x000000000047eeef; pop rbp; pop r12; pop r13; ret; 
0x0000000047f69e: loopne 0x000000000047f6fb; pop rbp; pop r12; ret; 
0x00000000480d57: loopne 0x0000000000480d59; add [rax], al; call qword ptr [rax+0x68]; 
0x00000000480e8c: loopne 0x0000000000480e8e; add [rax], al; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000481326: loopne 0x0000000000481385; pop r12; pop r13; pop r14; ret; 
0x0000000048191c: loopne 0x000000000048192a; cmp eax, 0x4; je short 0x0000000000481924; ret; 
0x00000000481cdc: loopne 0x0000000000481cf1; add [rax], al; cmove rax, rdx; ret; 
0x00000000481d9a: loopne 0x0000000000481ddd; pop rsp; pop r13; ret; 
0x00000000481d83: loopne 0x0000000000481de2; pop r12; pop r13; ret; 
0x000000004848f7: loopne 0x0000000000484954; pop rbp; pop r12; pop r13; ret; 
0x00000000484a77: loopne 0x0000000000484ad4; pop rbp; pop r12; pop r13; ret; 
0x00000000484b9f: loopne 0x0000000000484bfc; pop rbp; pop r12; pop r13; ret; 
0x000000004854bc: loopne 0x0000000000485519; pop rbp; pop r12; pop r13; ret; 
0x000000004854f4: loopne 0x0000000000485553; pop r12; pop r13; ret; 
0x00000000488091: loopne 0x00000000004880f0; pop r12; pop r13; pop r14; ret; 
0x0000000048810c: loopne 0x000000000048816b; pop r12; pop r13; pop r14; ret; 
0x0000000048e0a7: loopne 0x000000000048e104; pop rbp; pop r12; pop r13; ret; 
0x0000000048f267: loopne 0x000000000048f2c4; pop rbp; pop r12; ret; 
0x0000000048f287: loopne 0x000000000048f2ca; pop rsp; ret; 
0x0000000048f27a: loopne 0x000000000048f2d7; pop rbp; pop r12; ret; 
0x0000000048f8e8: loopne 0x000000000048f945; pop rbp; pop r12; pop r13; ret; 
0x0000000048f967: loopne 0x000000000048f9c6; pop r12; ret; 
0x00000000492327: loopne 0x000000000049236a; pop rsp; ret; 
0x000000004927a6: loopne 0x0000000000492803; pop r12; ret; 
0x0000000049283e: loopne 0x000000000049289b; pop r12; ret; 
0x00000000492865: loopne 0x00000000004928c2; pop r12; ret; 
0x00000000492882: loopne 0x00000000004928df; pop r12; ret; 
0x000000004960e8: loopne 0x0000000000496073; ret; 
0x000000004986a6: loopne 0x0000000000498703; pop r12; ret; 
0x000000004986bd: loopne 0x000000000049871a; pop r12; ret; 
0x00000000499577: loopne 0x0000000000499588; cmp al, 0xa; jne 0x00000000004994f9; nop [rax]; call r13; 
0x00000000499989: loopne 0x00000000004999e6; pop r12; ret; 
0x0000000049999e: loopne 0x00000000004999fb; pop r12; ret; 
0x0000000049c96d: loopne 0x000000000049c971; sub eax, 0x1; ret; 
0x0000000049e8bb: loopne 0x000000000049e875; add [rax], eax; add [rax], al; ret; 
0x0000000049ec32: loopne 0x000000000049ec75; pop rsp; ret; 
0x0000000049ed10: loopne 0x000000000049ed53; pop rsp; ret; 
0x000000004a09a8: loopne 0x00000000004a0a05; pop rbp; pop r12; pop r13; ret; 
0x000000004a09d7: loopne 0x00000000004a0a34; pop rbp; pop r12; pop r13; ret; 
0x000000004a09ea: loopne 0x00000000004a0a49; pop r12; pop r13; ret; 
0x000000004a16d6: loopne 0x00000000004a16d0; mov r8, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x000000004a2b93: loopne 0x00000000004a2bd3; jmp rax; 
0x000000004a32d3: loopne 0x00000000004a3313; jmp rax; 
0x000000004a39c0: loopne 0x00000000004a39c3; mov [rsi], eax; mov rax, [rdi+0x98]; ret; 
0x000000004a3cba: loopne 0x00000000004a3d08; mov ecx, esi; mov esi, 0x1; mov edi, 0x1; call rax; 
0x000000004a42a6: loopne 0x00000000004a430e; nop [rax+rax]; ret; 
0x000000004a4686: loopne 0x00000000004a4680; mov r8, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x000000004a5c10: loopne 0x00000000004a5c6d; pop rbp; pop r12; ret; 
0x000000004a5c77: loopne 0x00000000004a5cba; pop rsp; ret; 
0x000000004a6026: loopne 0x00000000004a6020; mov r8, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x000000004a7c5f: loopne 0x00000000004a7cbc; pop rbp; pop r12; ret; 
0x00000000411193: mov [0x1274ed8548000003], al; mov rdx, [rip+0xd3ba5]; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x000000004a5c0b: mov [0x415d5be0894cffb5], eax; pop rsp; ret; 
0x000000004a5c0a: mov [0x415d5be0894cffb5], eax; pop rsp; ret; 
0x000000004a78ae: mov [0x48000000000003d5], al; add esp, 0x8; ret; 
0x000000004a78f6: mov [0x4800dd5489490003], eax; mov eax, [rax+rbx*8]; test rax, rax; je short 0x00000000004a790a; call rax; 
0x0000000047f29e: mov [0x4891146348000497], al; add edx, ecx; notrack jmp rdx; 
0x000000004727eb: mov [0x4c86046349000006], al; add eax, esi; notrack jmp rax; 
0x0000000043a0ca: mov [0x4c930c63490007c5], al; add ecx, ebx; notrack jmp rcx; 
0x0000000046142c: mov [0x5c415d5b08c48348], eax; pop r13; pop r14; pop r15; ret; 
0x00000000405ad9: mov [0x634920438b000000], eax; add al, 0x84; add rax, r12; notrack jmp rax; 
0x00000000410f9a: mov [0x7024748d480004f1], al; mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x0000000041ed08: mov [0x74ed844501000c6b], eax; xor [rax-0x39], ecx; ret; 
0x0000000043685e: mov [0x840fc9854d000012], al; cdq; adc al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000040b499: mov [0x8d48001f0f000026], eax; add eax, 0x9e078; ret; 
0x0000000043c4c8: mov [0x8d49931463490007], al; adc al, 0x13; notrack jmp rdx; 
0x0000000043c416: mov [0x8d49931463490007], eax; adc al, 0x13; notrack jmp rdx; 
0x0000000047fd32: mov [0xc483480000441f0f], eax; or [rax-0x1], bh; pop rbx; pop rbp; ret; 
0x00000000431a55: mov [edx], al; add [rax-0x73], cl; add eax, 0x287f0; cmovne rax, rdx; ret; 
0x000000004296cf: mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x000000004296ca: mov [r11+0x24], ebp; pop rbp; mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x00000000429b2d: mov [r11], cs; add [rax+0x1], cl; ret; 
0x00000000429b37: mov [r11], cs; add [rax+0x39], cl; ret; 
0x000000004824e1: mov [r12], r14; pop r12; pop r13; pop r14; ret; 
0x000000004a78fa: mov [r13+rbx*8], rdx; mov rax, [rax+rbx*8]; test rax, rax; je short 0x00000000004a790a; call rax; 
0x0000000042d9ab: mov [r8+rbp], cl; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000042d7b4: mov [r8+rbx], cl; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000048c00a: mov [r8-0x7b], r9b; ror byte ptr [rdi], 0x84; ret; 
0x00000000464492: mov [r8-0x7d], r9b; ret; 
0x0000000049e8fa: mov [r8], rax; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000445f09: mov [r9-0x2], cx; ret; 
0x00000000445f0a: mov [r9-0x2], ecx; ret; 
0x00000000445ef5: mov [r9-0x4], ecx; ret; 
0x0000000048bd4e: mov [r9-0x77], r9b; xchg [rax], ebx; add al, 0x0; add [rcx-0x77], cl; ret; 
0x00000000445ee4: mov [r9-0x8], rcx; ret; 
0x000000004a16c0: mov [r9], r8; add rsp, 0x8; ret; 
0x0000000048073b: mov [rax+0x10], ecx; mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x0000000045fac5: mov [rax+0x10], ecx; mov [rax+0x8], rdx; ret; 
0x000000004817e9: mov [rax+0x10], edi; mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x000000004806fd: mov [rax+0x10], edx; mov [rax+0x40], rcx; ret; 
0x0000000048073a: mov [rax+0x10], rcx; mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x0000000045fac4: mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x000000004817e8: mov [rax+0x10], rdi; mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x000000004806fc: mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x00000000480ecc: mov [rax+0x18], edx; xor eax, eax; mov [rbx], ecx; pop rbx; ret; 
0x00000000480ecb: mov [rax+0x18], rdx; xor eax, eax; mov [rbx], ecx; pop rbx; ret; 
0x0000000045fb7b: mov [rax+0x20], ecx; mov byte ptr [rax+0x28], 0x1; ret; 
0x00000000429e07: mov [rax+0x20], edx; add rsp, 0x8; ret; 
0x0000000045fb89: mov [rax+0x20], esi; ret; 
0x0000000045fb7a: mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x00000000429e06: mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x0000000045fb88: mov [rax+0x20], rsi; ret; 
0x00000000480701: mov [rax+0x40], ecx; ret; 
0x0000000048073f: mov [rax+0x40], edx; movups [rax], xmm0; ret; 
0x000000004817ed: mov [rax+0x40], esi; mov [rax], rdx; xor eax, eax; ret; 
0x00000000480700: mov [rax+0x40], rcx; ret; 
0x0000000048073e: mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x000000004817ec: mov [rax+0x40], rsi; mov [rax], rdx; xor eax, eax; ret; 
0x0000000045fac9: mov [rax+0x8], edx; ret; 
0x0000000045fac8: mov [rax+0x8], rdx; ret; 
0x00000000470d8a: mov [rax+0xe], dh; mov rsi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x00000000470d89: mov [rax+0xe], sil; mov rsi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000042d9ac: mov [rax+rbp], cl; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000042d7b5: mov [rax+rbx], cl; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x0000000042d433: mov [rax-0x2b17fff8], eax; ret; 
0x0000000048c00b: mov [rax-0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x00000000464493: mov [rax-0x7d], cl; ret; 
0x00000000470065: mov [rax], al; add [rax], al; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x0000000045f77f: mov [rax], al; add [rax], al; pop rbx; pop rbp; ret; 
0x00000000410bc7: mov [rax], al; add [rax], al; pop rbx; ret; 
0x00000000455c60: mov [rax], cs; add [rax], al; ret; 
0x0000000047786d: mov [rax], eax; add [rax+0x39], cl; ret; 
0x0000000049e8fb: mov [rax], eax; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000004983d5: mov [rax], edi; pop rbx; ret; 
0x00000000498341: mov [rax], edx; add rsp, 0x8; ret; 
0x000000004806fa: mov [rax], edx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x000000004983c9: mov [rax], edx; pop rbx; ret; 
0x000000004817b8: mov [rax], edx; xor eax, eax; ret; 
0x000000004905b4: mov [rax], es; add [rcx-0x77], cl; ret; 
0x000000004983d4: mov [rax], rdi; pop rbx; ret; 
0x00000000498340: mov [rax], rdx; add rsp, 0x8; ret; 
0x000000004806f9: mov [rax], rdx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x000000004983c8: mov [rax], rdx; pop rbx; ret; 
0x000000004817b7: mov [rax], rdx; xor eax, eax; ret; 
0x00000000407ea7: mov [rbp+0x18], ebx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000407ea6: mov [rbp+0x18], rbx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000042a658: mov [rbp+0x31], eax; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000040d843: mov [rbp+0x48c30009], bh; lea eax, [rip+0x9bd79]; ret; 
0x00000000480e31: mov [rbp+0x74], eax; mov eax, 0x1; pop rbp; pop r12; ret; 
0x000000004a78fb: mov [rbp+rbx*8], edx; mov rax, [rax+rbx*8]; test rax, rax; je short 0x00000000004a790a; call rax; 
0x0000000047bcf8: mov [rbp-0x4d8], ebx; call qword ptr [r8+0x38]; 
0x0000000047c2fd: mov [rbp-0x4d8], ebx; call qword ptr [rbx+0x38]; 
0x0000000047cc70: mov [rbp-0x4d8], ebx; mov rdx, rbx; mov rsi, r9; mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000047bcf7: mov [rbp-0x4d8], r11; call qword ptr [r8+0x38]; 
0x0000000047c2fc: mov [rbp-0x4d8], r11; call qword ptr [rbx+0x38]; 
0x0000000047cc6f: mov [rbp-0x4d8], r11; mov rdx, rbx; mov rsi, r9; mov rdi, r12; call qword ptr [rax+0x38]; 
0x00000000475808: mov [rbp-0x4e8], ecx; mov rdx, r15; mov rsi, r11; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x00000000475807: mov [rbp-0x4e8], r9d; mov rdx, r15; mov rsi, r11; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x000000004767b3: mov [rbp-0x4f0], ecx; call qword ptr [rax+0x38]; 
0x000000004767b2: mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x0000000047cf70: mov [rbp-0x4f8], ecx; call qword ptr [rax+0x38]; 
0x00000000476276: mov [rbp-0x4f8], ecx; call qword ptr [rbx+0x38]; 
0x00000000475629: mov [rbp-0x4f8], ecx; mov rdx, r15; mov rsi, r8; mov rdi, r12; call qword ptr [rax+0x38]; 
0x000000004752c4: mov [rbp-0x4f8], esi; jmp rax; 
0x0000000047cf6f: mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x00000000476275: mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x00000000475628: mov [rbp-0x4f8], r9d; mov rdx, r15; mov rsi, r8; mov rdi, r12; call qword ptr [rax+0x38]; 
0x000000004752c3: mov [rbp-0x4f8], rsi; jmp rax; 
0x00000000476a0f: mov [rbp-0x500], ebx; call qword ptr [rax+0x38]; 
0x0000000047cf69: mov [rbp-0x500], ebx; mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x00000000476a0e: mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x0000000047cf68: mov [rbp-0x500], r11; mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x00000000476a08: mov [rbp-0x508], edx; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x00000000476a07: mov [rbp-0x508], r10d; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x00000000474276: mov [rbp-0x8b8], ecx; call qword ptr [r11+rax*8-0x40]; 
0x00000000474275: mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000047aa87: mov [rbp-0x8d0], ecx; call qword ptr [r11+rax*8-0x40]; 
0x0000000047aa86: mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000047426f: mov [rbp-0x8e0], edx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000047426e: mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000047a074: mov [rbp-0x8f0], eax; mov rdx, r8; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000478e14: mov [rbp-0x8f0], ecx; mov rdx, r9; mov rsi, r12; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x00000000474268: mov [rbp-0x8f0], edx; mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x00000000474267: mov [rbp-0x8f0], r10; mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000047a073: mov [rbp-0x8f0], r8; mov rdx, r8; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000478e13: mov [rbp-0x8f0], r9; mov rdx, r9; mov rsi, r12; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x0000000047a6ad: mov [rbp-0x900], ecx; mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000047aa80: mov [rbp-0x900], edx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000047a6ac: mov [rbp-0x900], rcx; mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x0000000047aa7f: mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000047aa79: mov [rbp-0x908], edx; mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000047aa78: mov [rbp-0x908], r10; mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x00000000479c85: mov [rbp-0x928], ecx; mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r8+0x38]; 
0x00000000479c84: mov [rbp-0x928], rcx; mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r8+0x38]; 
0x00000000473152: mov [rbp-0x940], ebx; call rax; 
0x00000000473151: mov [rbp-0x940], r11d; call rax; 
0x0000000047314b: mov [rbp-0x94c], ecx; mov [rbp-0x940], r11d; call rax; 
0x0000000047314a: mov [rbp-0x94c], r9d; mov [rbp-0x940], r11d; call rax; 
0x0000000047998a: mov [rbp-0x958], cl; call rax; 
0x00000000479989: mov [rbp-0x958], r9b; call rax; 
0x00000000479983: mov [rbp-0x970], edx; mov [rbp-0x958], r9b; call rax; 
0x00000000479982: mov [rbp-0x970], r10d; mov [rbp-0x958], r9b; call rax; 
0x0000000048c8d8: mov [rbp-0xd8], ebx; call rax; 
0x0000000048ca8d: mov [rbp-0xd8], edx; call r15; 
0x0000000048ca8c: mov [rbp-0xd8], r10; call r15; 
0x0000000048c8d7: mov [rbp-0xd8], r11; call rax; 
0x00000000494260: mov [rbp-0xe8], eax; call rax; 
0x0000000049425f: mov [rbp-0xe8], r8; call rax; 
0x0000000048c381: mov [rbp-0xf0], ebx; call r10; 
0x0000000048ca86: mov [rbp-0xf0], ebx; mov [rbp-0xd8], r10; call r15; 
0x0000000048c380: mov [rbp-0xf0], r11; call r10; 
0x0000000048ca85: mov [rbp-0xf0], r11; mov [rbp-0xd8], r10; call r15; 
0x000000004296d0: mov [rbx+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x00000000491912: mov [rbx+0x10], eax; pop rax; pop rdx; pop rbx; ret; 
0x00000000491911: mov [rbx+0x10], rax; pop rax; pop rdx; pop rbx; ret; 
0x00000000491847: mov [rbx+0x18], eax; pop rax; pop rdx; pop rbx; ret; 
0x0000000049eb99: mov [rbx+0x18], eax; pop rbx; ret; 
0x00000000491846: mov [rbx+0x18], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000049eb98: mov [rbx+0x18], rax; pop rbx; ret; 
0x0000000049ec5d: mov [rbx+0x20], eax; pop rbx; ret; 
0x0000000049ec5c: mov [rbx+0x20], rax; pop rbx; ret; 
0x000000004296cb: mov [rbx+0x24], ebp; pop rbp; mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x00000000408d11: mov [rbx+0x28], edx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000046ff7f: mov [rbx+0x40], esi; pop rbx; ret; 
0x0000000046ff5c: mov [rbx+0x40], esi; xor eax, eax; pop rbx; ret; 
0x000000004816de: mov [rbx+0x60], ebp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000428418: mov [rbx+0x60], ebp; pop rbx; pop rbp; pop r12; ret; 
0x000000004816dd: mov [rbx+0x60], rbp; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000428417: mov [rbx+0x60], rbp; pop rbx; pop rbp; pop r12; ret; 
0x0000000048079a: mov [rbx+0x74], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000480d9e: mov [rbx+0x74], edx; pop rbx; pop rbp; pop r12; ret; 
0x0000000046da07: mov [rbx+0x8], eax; cmp eax, 0xfffffffd; je short 0x000000000046da28; pop rbx; ret; 
0x0000000042340f: mov [rbx+0x90], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000042340e: mov [rbx+0x90], rax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000004a36f7: mov [rbx+0x98], edx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004a36f6: mov [rbx+0x98], rdx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004234df: mov [rbx+0xd8], ecx; lea rcx, [rip+0xc0794]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x000000004234de: mov [rbx+0xd8], rcx; lea rcx, [rip+0xc0794]; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x00000000429b2e: mov [rbx], cs; add [rax+0x1], cl; ret; 
0x00000000429b38: mov [rbx], cs; add [rax+0x39], cl; ret; 
0x0000000040b6b1: mov [rbx], dl; add [rax], al; cmovns eax, edx; add rsp, 0x8; ret; 
0x0000000049930e: mov [rbx], eax; add rsp, 0x10; pop rbx; ret; 
0x00000000426dd2: mov [rbx], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000004a0a2d: mov [rbx], eax; pop rax; pop rdx; pop rbx; ret; 
0x00000000480ed1: mov [rbx], ecx; pop rbx; ret; 
0x0000000049930d: mov [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x000000004a0a2c: mov [rbx], rax; pop rax; pop rdx; pop rbx; ret; 
0x00000000452bc3: mov [rcx+0x2], dl; ret; 
0x00000000452c02: mov [rcx+0x3], edx; ret; 
0x00000000452be2: mov [rcx+0x4], dl; ret; 
0x00000000452bf2: mov [rcx+0x4], dx; ret; 
0x00000000452bf3: mov [rcx+0x4], edx; ret; 
0x00000000452c64: mov [rcx+0x5], edx; ret; 
0x00000000452c63: mov [rcx+0x5], rdx; ret; 
0x00000000452c74: mov [rcx+0x6], edx; ret; 
0x00000000452c73: mov [rcx+0x6], rdx; ret; 
0x00000000452c43: mov [rcx+0x7], edx; ret; 
0x00000000452c83: mov [rcx+0x7], rdx; ret; 
0x00000000452c23: mov [rcx+0x8], dl; ret; 
0x00000000452c33: mov [rcx+0x8], dx; ret; 
0x00000000452c34: mov [rcx+0x8], edx; ret; 
0x00000000452c93: mov [rcx+0x8], rdx; ret; 
0x00000000445f0b: mov [rcx-0x2], ecx; ret; 
0x00000000445ef6: mov [rcx-0x4], ecx; ret; 
0x0000000048bd4f: mov [rcx-0x77], cl; xchg [rax], ebx; add al, 0x0; add [rcx-0x77], cl; ret; 
0x00000000445ee5: mov [rcx-0x8], ecx; ret; 
0x00000000452ba0: mov [rcx], dl; ret; 
0x00000000452bc0: mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x00000000452bb0: mov [rcx], dx; ret; 
0x00000000480b43: mov [rcx], eax; add [rax], al; mov esi, r15d; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x000000004a16c1: mov [rcx], eax; add rsp, 0x8; ret; 
0x0000000045be3e: mov [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000004a16e0: mov [rcx], eax; ret; 
0x000000004a397f: mov [rcx], edx; add rsp, 0x8; ret; 
0x00000000452bc1: mov [rcx], edx; mov [rcx+0x2], dl; ret; 
0x00000000452c00: mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x00000000452be0: mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x00000000452bf0: mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x00000000452c61: mov [rcx], edx; mov [rcx+0x5], rdx; ret; 
0x00000000452c71: mov [rcx], edx; mov [rcx+0x6], rdx; ret; 
0x00000000452c41: mov [rcx], edx; mov [rcx+0x7], edx; ret; 
0x00000000452c81: mov [rcx], edx; mov [rcx+0x7], rdx; ret; 
0x00000000452c21: mov [rcx], edx; mov [rcx+0x8], dl; ret; 
0x00000000452c31: mov [rcx], edx; mov [rcx+0x8], dx; ret; 
0x00000000452c51: mov [rcx], edx; mov [rcx+0x8], edx; ret; 
0x00000000452c91: mov [rcx], edx; mov [rcx+0x8], rdx; ret; 
0x0000000046fd8c: mov [rcx], edx; mov rdx, 0xffffffffffffffe0; mov fs:[rdx], rax; ret; 
0x00000000452bb1: mov [rcx], edx; ret; 
0x000000004a16df: mov [rcx], r8; ret; 
0x000000004a397e: mov [rcx], rdx; add rsp, 0x8; ret; 
0x00000000452c60: mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x00000000452c70: mov [rcx], rdx; mov [rcx+0x6], rdx; ret; 
0x00000000452c40: mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x00000000452c80: mov [rcx], rdx; mov [rcx+0x7], rdx; ret; 
0x00000000452c20: mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x00000000452c30: mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x00000000452c50: mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x00000000452c90: mov [rcx], rdx; mov [rcx+0x8], rdx; ret; 
0x0000000046fd8b: mov [rcx], rdx; mov rdx, 0xffffffffffffffe0; mov fs:[rdx], rax; ret; 
0x00000000452c10: mov [rcx], rdx; ret; 
0x000000004561cb: mov [rdi+0x10], cl; ret; 
0x00000000456b9c: mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000004554ec: mov [rdi+0x10], cx; ret; 
0x00000000455e5c: mov [rdi+0x10], cx; sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000004564f0; ret; 
0x00000000456b88: mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000004554d8: mov [rdi+0x10], dh; ret; 
0x00000000455e38: mov [rdi+0x10], dh; sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000004564f0; ret; 
0x00000000456b9d: mov [rdi+0x10], ecx; lea rax, [rdi+0x11]; ret; 
0x00000000456bdb: mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x00000000456c5d: mov [rdi+0x10], ecx; lea rax, [rdi+0x17]; ret; 
0x00000000456bfb: mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x0000000045552b: mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x0000000045621e: mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x00000000456c7d: mov [rdi+0x10], ecx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000004555ad: mov [rdi+0x10], ecx; mov [rdi+0x18], dh; ret; 
0x000000004554ed: mov [rdi+0x10], ecx; ret; 
0x00000000455e5d: mov [rdi+0x10], ecx; sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000004564f0; ret; 
0x00000000455e9b: mov [rdi+0x10], ecx; sub r8, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000004564f0; ret; 
0x00000000455f1d: mov [rdi+0x10], ecx; sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000004564f0; ret; 
0x00000000456cc0: mov [rdi+0x10], edx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000004555f0: mov [rdi+0x10], edx; mov [rdi+0x17], ecx; ret; 
0x000000004562a0: mov [rdi+0x10], edx; mov [rdi+0x18], cl; ret; 
0x00000000456ca1: mov [rdi+0x10], edx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000004555d1: mov [rdi+0x10], edx; mov [rdi+0x18], cx; ret; 
0x00000000456ce0: mov [rdi+0x10], edx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x00000000455610: mov [rdi+0x10], edx; mov [rdi+0x18], ecx; ret; 
0x0000000049d1fe: mov [rdi+0x10], r9; ret; 
0x00000000456c5c: mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x00000000456c7c: mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000004555ac: mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x0000000045558c: mov [rdi+0x10], rcx; ret; 
0x00000000455f1c: mov [rdi+0x10], rcx; sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000004564f0; ret; 
0x00000000456cbf: mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000004555ef: mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x0000000045629f: mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x00000000456ca0: mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000004555d0: mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x00000000456cdf: mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x0000000045560f: mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x00000000456bfe: mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x0000000045552e: mov [rdi+0x14], dh; ret; 
0x00000000455ebe: mov [rdi+0x14], dh; sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000004564f0; ret; 
0x00000000456221: mov [rdi+0x14], dl; ret; 
0x00000000456cc3: mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000004555f3: mov [rdi+0x17], ecx; ret; 
0x00000000455fa3: mov [rdi+0x17], ecx; sub r8, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000004564f0; ret; 
0x000000004562a3: mov [rdi+0x18], cl; ret; 
0x00000000456ca4: mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000004555d4: mov [rdi+0x18], cx; ret; 
0x00000000455f74: mov [rdi+0x18], cx; sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000004564f0; ret; 
0x00000000456c80: mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000004555b0: mov [rdi+0x18], dh; ret; 
0x00000000455f40: mov [rdi+0x18], dh; sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000004564f0; ret; 
0x00000000426847: mov [rdi+0x18], eax; mov [rdi+0x8], rax; ret; 
0x00000000456ca5: mov [rdi+0x18], ecx; lea rax, [rdi+0x19]; ret; 
0x00000000456ce3: mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x000000004555d5: mov [rdi+0x18], ecx; ret; 
0x00000000455f75: mov [rdi+0x18], ecx; sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000004564f0; ret; 
0x00000000455fd3: mov [rdi+0x18], ecx; sub r8, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000004564f0; ret; 
0x00000000426874: mov [rdi+0x18], edx; mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x000000004285ec: mov [rdi+0x18], esi; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x00000000426845: mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x00000000426873: mov [rdi+0x18], rdx; mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x000000004285eb: mov [rdi+0x18], rsi; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x00000000443157: mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x00000000443158: mov [rdi+0x1], edx; mov [rdi], cx; ret; 
0x00000000443075: mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x00000000442eb8: mov [rdi+0x1], edx; mov [rdi], rcx; ret; 
0x00000000442eb7: mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x000000004563a5: mov [rdi+0x20], cl; ret; 
0x0000000045fb0f: mov [rdi+0x20], edx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045fb21: mov [rdi+0x20], esi; ret; 
0x0000000045fb0e: mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045fb20: mov [rdi+0x20], rsi; ret; 
0x00000000456a36: mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000004553f6: mov [rdi+0x2], dh; ret; 
0x00000000455c76: mov [rdi+0x2], dh; sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000004564f0; ret; 
0x000000004560e9: mov [rdi+0x2], dl; ret; 
0x00000000443005: mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x00000000442e48: mov [rdi+0x2], edx; mov [rdi], rcx; ret; 
0x00000000442e47: mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x0000000048b106: mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x0000000048b0d4: mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x0000000048b0ca: mov [rdi+0x308], eax; lea rax, [rax+rdx*4]; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x0000000048b10d: mov [rdi+0x308], eax; ret; 
0x0000000048b0c9: mov [rdi+0x308], rax; lea rax, [rax+rdx*4]; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x0000000048b10c: mov [rdi+0x308], rax; ret; 
0x0000000048b0fc: mov [rdi+0x310], eax; lea rax, [rax+rdx*4]; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x0000000048b0db: mov [rdi+0x310], eax; ret; 
0x0000000048b0fb: mov [rdi+0x310], rax; lea rax, [rax+rdx*4]; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x0000000048b0da: mov [rdi+0x310], rax; ret; 
0x00000000456a87: mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x00000000442f95: mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x00000000442dd8: mov [rdi+0x3], edx; mov [rdi], rcx; ret; 
0x00000000455437: mov [rdi+0x3], edx; ret; 
0x00000000455cf7: mov [rdi+0x3], edx; sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000004564f0; ret; 
0x00000000442dd7: mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x0000000044f0b5: mov [rdi+0x40], cl; vzeroupper; ret; 
0x00000000426878: mov [rdi+0x48], eax; movups [rdi+0x8], xmm0; ret; 
0x00000000426843: mov [rdi+0x48], edx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x00000000426877: mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x00000000426840: mov [rdi+0x48], rdx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x00000000456a52: mov [rdi+0x4], dh; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x00000000455412: mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x00000000456107: mov [rdi+0x4], dl; ret; 
0x00000000456a68: mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x00000000455428: mov [rdi+0x4], dx; ret; 
0x00000000455cd8: mov [rdi+0x4], dx; sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000004564f0; ret; 
0x00000000456a69: mov [rdi+0x4], edx; lea rax, [rdi+0x5]; ret; 
0x00000000442d68: mov [rdi+0x4], edx; mov [rdi], rcx; ret; 
0x00000000455429: mov [rdi+0x4], edx; ret; 
0x00000000455cd9: mov [rdi+0x4], edx; sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000004564f0; ret; 
0x00000000442d67: mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x00000000456b1b: mov [rdi+0x5], edx; lea rax, [rdi+0xc]; ret; 
0x00000000442cf8: mov [rdi+0x5], edx; mov [rdi], rcx; ret; 
0x0000000045549b: mov [rdi+0x5], edx; ret; 
0x00000000455dbb: mov [rdi+0x5], edx; sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000004564f0; ret; 
0x00000000456b1a: mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x00000000442cf7: mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x0000000045549a: mov [rdi+0x5], rdx; ret; 
0x00000000455dba: mov [rdi+0x5], rdx; sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000004564f0; ret; 
0x00000000456b3b: mov [rdi+0x6], edx; lea rax, [rdi+0xd]; ret; 
0x00000000442c88: mov [rdi+0x6], edx; mov [rdi], rcx; ret; 
0x000000004554ab: mov [rdi+0x6], edx; ret; 
0x00000000455ddb: mov [rdi+0x6], edx; sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000004564f0; ret; 
0x00000000456b3a: mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x00000000442c87: mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x000000004554aa: mov [rdi+0x6], rdx; ret; 
0x00000000455dda: mov [rdi+0x6], rdx; sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000004564f0; ret; 
0x00000000456ad9: mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x00000000456b5b: mov [rdi+0x7], edx; lea rax, [rdi+0xe]; ret; 
0x00000000442c18: mov [rdi+0x7], edx; mov [rdi], rcx; ret; 
0x00000000455479: mov [rdi+0x7], edx; ret; 
0x00000000455d79: mov [rdi+0x7], edx; sub r8, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000004564f0; ret; 
0x00000000455dfb: mov [rdi+0x7], edx; sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000004564f0; ret; 
0x00000000456b5a: mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x00000000442c17: mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x000000004554ba: mov [rdi+0x7], rdx; ret; 
0x00000000455dfa: mov [rdi+0x7], rdx; sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000004564f0; ret; 
0x00000000456aa3: mov [rdi+0x8], dh; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x00000000455453: mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x00000000456149: mov [rdi+0x8], dl; ret; 
0x00000000456aba: mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x0000000045546a: mov [rdi+0x8], dx; ret; 
0x00000000455d5a: mov [rdi+0x8], dx; sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000004564f0; ret; 
0x0000000049e996: mov [rdi+0x8], eax; mov eax, 0x2; ret; 
0x0000000042684b: mov [rdi+0x8], eax; ret; 
0x0000000049d1f8: mov [rdi+0x8], eax; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x000000004285b0: mov [rdi+0x8], eax; xor eax, eax; ret; 
0x0000000049d188: mov [rdi+0x8], ecx; ret; 
0x00000000456abb: mov [rdi+0x8], edx; lea rax, [rdi+0x9]; ret; 
0x00000000456af9: mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x0000000049e678: mov [rdi+0x8], edx; mov eax, ecx; adc eax, eax; ret; 
0x0000000045546b: mov [rdi+0x8], edx; ret; 
0x00000000455d5b: mov [rdi+0x8], edx; sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000004564f0; ret; 
0x00000000455d99: mov [rdi+0x8], edx; sub r8, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000004564f0; ret; 
0x0000000049e677: mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000049d1f7: mov [rdi+0x8], r8; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x0000000049d187: mov [rdi+0x8], r9; ret; 
0x0000000049e995: mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x0000000042684a: mov [rdi+0x8], rax; ret; 
0x000000004285af: mov [rdi+0x8], rax; xor eax, eax; ret; 
0x000000004a39d5: mov [rdi+0x98], esi; ret; 
0x000000004a39d4: mov [rdi+0x98], rsi; ret; 
0x0000000042063d: mov [rdi+0xd8], edx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x0000000042063c: mov [rdi+0xd8], rdx; mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x00000000456c1d: mov [rdi+0xe], ecx; lea rax, [rdi+0x15]; ret; 
0x0000000045554d: mov [rdi+0xe], ecx; ret; 
0x00000000455edd: mov [rdi+0xe], ecx; sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000004564f0; ret; 
0x00000000456c1c: mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x0000000045554c: mov [rdi+0xe], rcx; ret; 
0x00000000455edc: mov [rdi+0xe], rcx; sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000004564f0; ret; 
0x00000000456bbb: mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x00000000456c3d: mov [rdi+0xf], ecx; lea rax, [rdi+0x16]; ret; 
0x0000000045550b: mov [rdi+0xf], ecx; ret; 
0x00000000455e7b: mov [rdi+0xf], ecx; sub r8, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000004564f0; ret; 
0x00000000455efd: mov [rdi+0xf], ecx; sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000004564f0; ret; 
0x00000000456c3c: mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x0000000045556c: mov [rdi+0xf], rcx; ret; 
0x00000000455efc: mov [rdi+0xf], rcx; sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000004564f0; ret; 
0x0000000049d7bc: mov [rdi+r11*8+0x8], r9; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x0000000044f00c: mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000044f00d: mov [rdi+r8-0x2], edx; vzeroupper; ret; 
0x0000000044f029: mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x0000000044f04b: mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x0000000044f00e: mov [rdi+rax-0x2], edx; vzeroupper; ret; 
0x0000000044f02a: mov [rdi+rax-0x4], edx; vzeroupper; ret; 
0x0000000044f04c: mov [rdi+rax-0x8], edx; vzeroupper; ret; 
0x0000000049d7bd: mov [rdi+rbx*8+0x8], ecx; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x0000000045a39e: mov [rdi+rdx-0x2], cx; mov [rdi], cx; ret; 
0x0000000045a523: mov [rdi+rdx-0x2], cx; mov [rdi], cx; vzeroupper; ret; 
0x00000000459628: mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x00000000459627: mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x0000000045a39f: mov [rdi+rdx-0x2], ecx; mov [rdi], cx; ret; 
0x0000000045a524: mov [rdi+rdx-0x2], ecx; mov [rdi], cx; vzeroupper; ret; 
0x00000000459629: mov [rdi+rdx-0x2], ecx; mov [rdi], si; ret; 
0x000000004570a8: mov [rdi+rdx-0x3], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000044e988: mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x0000000045a397: mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; ret; 
0x0000000045a519: mov [rdi+rdx-0x4], ecx; mov [rdi], ecx; vzeroupper; ret; 
0x00000000459619: mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x00000000459618: mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x000000004570cc: mov [rdi+rdx-0x7], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000044e99c: mov [rdi+rdx-0x7], ecx; vzeroupper; ret; 
0x000000004570cb: mov [rdi+rdx-0x7], r9; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000044e99b: mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x0000000045a38f: mov [rdi+rdx-0x8], ecx; mov [rdi], rcx; ret; 
0x0000000045a50e: mov [rdi+rdx-0x8], ecx; mov [rdi], rcx; vzeroupper; ret; 
0x0000000045960b: mov [rdi+rdx-0x8], ecx; mov [rdi], rsi; ret; 
0x0000000045a38e: mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; ret; 
0x0000000045a50d: mov [rdi+rdx-0x8], rcx; mov [rdi], rcx; vzeroupper; ret; 
0x0000000045960a: mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x00000000459609: mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x000000004a3991: mov [rdi+rsi*8], edx; add rsp, 0x8; ret; 
0x000000004a3990: mov [rdi+rsi*8], rdx; add rsp, 0x8; ret; 
0x0000000043caf5: mov [rdi-0x10], ebx; mov [rdi-0x8], rcx; ret; 
0x0000000043cb33: mov [rdi-0x10], ebx; mov [rdi-0x8], rdx; ret; 
0x0000000049d0ef: mov [rdi-0x10], ecx; ret; 
0x0000000043caf4: mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000043cb32: mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000049d0ee: mov [rdi-0x10], r9; ret; 
0x0000000043cca8: mov [rdi-0x11], ebx; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x0000000043cda4: mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000043ccf0: mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043cca7: mov [rdi-0x11], r11; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x0000000043cda3: mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000043ccef: mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043ce78: mov [rdi-0x12], ebx; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043ce77: mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d058: mov [rdi-0x13], ebx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d057: mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d248: mov [rdi-0x14], ebx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d247: mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d419: mov [rdi-0x15], ebx; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d418: mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d619: mov [rdi-0x16], ebx; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d618: mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d819: mov [rdi-0x17], ebx; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d818: mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043caf1: mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000043cb2f: mov [rdi-0x18], edx; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043caf0: mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000043cb2e: mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043cca4: mov [rdi-0x19], edx; mov [rdi-0x11], r11; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x0000000043cda0: mov [rdi-0x19], edx; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000043ccec: mov [rdi-0x19], edx; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043cca3: mov [rdi-0x19], r10; mov [rdi-0x11], r11; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x0000000043cd9f: mov [rdi-0x19], r10; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000043cceb: mov [rdi-0x19], r10; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043cdab: mov [rdi-0x1], dl; ret; 
0x000000004563e0: mov [rdi-0x1], edx; ret; 
0x00000000456420: mov [rdi-0x1], rdx; ret; 
0x0000000043ce74: mov [rdi-0x1a], edx; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043ce73: mov [rdi-0x1a], r10; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d054: mov [rdi-0x1b], edx; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d053: mov [rdi-0x1b], r10; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d244: mov [rdi-0x1c], edx; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d243: mov [rdi-0x1c], r10; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d415: mov [rdi-0x1d], edx; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d414: mov [rdi-0x1d], r10; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d615: mov [rdi-0x1e], edx; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d614: mov [rdi-0x1e], r10; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d815: mov [rdi-0x1f], edx; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d814: mov [rdi-0x1f], r10; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043caed: mov [rdi-0x20], ecx; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000043cb2b: mov [rdi-0x20], ecx; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043caec: mov [rdi-0x20], r9; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rcx; ret; 
0x0000000043cb2a: mov [rdi-0x20], r9; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043d1fc: mov [rdi-0x2], cx; ret; 
0x0000000043d014: mov [rdi-0x2], dx; ret; 
0x0000000043d1fd: mov [rdi-0x2], ecx; ret; 
0x0000000043d015: mov [rdi-0x2], edx; ret; 
0x0000000043d1f8: mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x0000000043d1f9: mov [rdi-0x3], edx; mov [rdi-0x2], cx; ret; 
0x0000000043d5d9: mov [rdi-0x4], ecx; ret; 
0x0000000043ccaf: mov [rdi-0x4], edx; ret; 
0x0000000043d5d6: mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043d7d6: mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043d9d6: mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x0000000049d0e8: mov [rdi-0x8], eax; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000043caf9: mov [rdi-0x8], ecx; ret; 
0x0000000043cb37: mov [rdi-0x8], edx; ret; 
0x0000000049d0e7: mov [rdi-0x8], r8; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000049d06d: mov [rdi-0x8], r9; ret; 
0x0000000043caf8: mov [rdi-0x8], rcx; ret; 
0x000000004424ab: mov [rdi-0x8], rcx; ret; 
0x0000000043d61e: mov [rdi-0x8], rdx; ret; 
0x0000000043cb36: mov [rdi-0x8], rdx; ret; 
0x0000000043ccac: mov [rdi-0x9], eax; mov [rdi-0x4], edx; ret; 
0x0000000043cda8: mov [rdi-0x9], ecx; mov [rdi-0x1], dl; ret; 
0x0000000043ccf4: mov [rdi-0x9], ecx; mov [rdi-0x4], edx; ret; 
0x00000000442748: mov [rdi-0x9], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043ccab: mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x0000000043cda7: mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000043ccf3: mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000442747: mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043ce7c: mov [rdi-0xa], ecx; mov [rdi-0x4], edx; ret; 
0x000000004426c8: mov [rdi-0xa], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043ce7b: mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x000000004426c7: mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043d05c: mov [rdi-0xb], ecx; mov [rdi-0x4], edx; ret; 
0x00000000442648: mov [rdi-0xb], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043d05b: mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x00000000442647: mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043d24c: mov [rdi-0xc], ecx; mov [rdi-0x4], edx; ret; 
0x000000004425c8: mov [rdi-0xc], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043d24b: mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x000000004425c7: mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043d41d: mov [rdi-0xd], ecx; mov [rdi-0x8], rdx; ret; 
0x00000000442539: mov [rdi-0xd], edx; mov [rdi-0x8], rcx; ret; 
0x0000000043d41c: mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000442538: mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043d61d: mov [rdi-0xe], ecx; mov [rdi-0x8], rdx; ret; 
0x000000004424a9: mov [rdi-0xe], edx; mov [rdi-0x8], rcx; ret; 
0x0000000043d61c: mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x000000004424a8: mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043d81d: mov [rdi-0xf], ecx; mov [rdi-0x8], rdx; ret; 
0x00000000442419: mov [rdi-0xf], edx; mov [rdi-0x8], rcx; ret; 
0x0000000043d81c: mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000442418: mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043e0da: mov [rdi], al; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004a48a4: mov [rdi], cl; mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x00000000445f16: mov [rdi], cl; ret; 
0x0000000040b3d4: mov [rdi], cl; test [rbp-0x7cffffff], dl; call qword ptr [rcx+0x194840f]; 
0x0000000045a4f9: mov [rdi], cl; vzeroupper; ret; 
0x00000000456a33: mov [rdi], cx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000004553f3: mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x000000004560e6: mov [rdi], cx; mov [rdi+0x2], dl; ret; 
0x0000000044f009: mov [rdi], cx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x00000000459336: mov [rdi], cx; mov [rsi-0x2], cx; ret; 
0x00000000457073: mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x0000000044e963: mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x0000000044315b: mov [rdi], cx; ret; 
0x0000000045a528: mov [rdi], cx; vzeroupper; ret; 
0x00000000456a10: mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000004553d0: mov [rdi], dh; ret; 
0x00000000455c30: mov [rdi], dh; sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000004564f0; ret; 
0x00000000443233: mov [rdi], dl; ret; 
0x0000000044efe3: mov [rdi], dl; vzeroupper; ret; 
0x00000000456a23: mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x00000000457063: mov [rdi], dx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x0000000044f0e0: mov [rdi], dx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x000000004431c3: mov [rdi], dx; ret; 
0x00000000455c53: mov [rdi], dx; sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000004564f0; ret; 
0x0000000044e953: mov [rdi], dx; vzeroupper; ret; 
0x0000000043dfe9: mov [rdi], eax; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048f1ac: mov [rdi], eax; mov rax, [rip+0x562b3]; mov [rsi], rax; ret; 
0x0000000049d068: mov [rdi], eax; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x0000000049d182: mov [rdi], eax; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x00000000456a55: mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x00000000456aa7: mov [rdi], ecx; lea rax, [rdi+0x8]; ret; 
0x00000000456a34: mov [rdi], ecx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000004553f4: mov [rdi], ecx; mov [rdi+0x2], dh; ret; 
0x000000004560e7: mov [rdi], ecx; mov [rdi+0x2], dl; ret; 
0x00000000456a85: mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x00000000455435: mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x00000000456105: mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x00000000456a66: mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x00000000455426: mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x00000000456b18: mov [rdi], ecx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x00000000455498: mov [rdi], ecx; mov [rdi+0x5], rdx; ret; 
0x00000000456b38: mov [rdi], ecx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000004554a8: mov [rdi], ecx; mov [rdi+0x6], rdx; ret; 
0x00000000456ad7: mov [rdi], ecx; mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x00000000455477: mov [rdi], ecx; mov [rdi+0x7], edx; ret; 
0x00000000456b58: mov [rdi], ecx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x000000004554b8: mov [rdi], ecx; mov [rdi+0x7], rdx; ret; 
0x00000000456147: mov [rdi], ecx; mov [rdi+0x8], dl; ret; 
0x00000000456ab8: mov [rdi], ecx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x00000000455468: mov [rdi], ecx; mov [rdi+0x8], dx; ret; 
0x00000000456af7: mov [rdi], ecx; mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x00000000455487: mov [rdi], ecx; mov [rdi+0x8], edx; ret; 
0x0000000044f00a: mov [rdi], ecx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000044f027: mov [rdi], ecx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x0000000044f049: mov [rdi], ecx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x000000004570c9: mov [rdi], ecx; mov [rdi+rdx-0x7], r9; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000044e999: mov [rdi], ecx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x00000000459337: mov [rdi], ecx; mov [rsi-0x2], cx; ret; 
0x0000000045932b: mov [rdi], ecx; mov [rsi-0x4], ecx; ret; 
0x00000000457074: mov [rdi], ecx; mov byte ptr [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x0000000044e964: mov [rdi], ecx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x0000000044e982: mov [rdi], ecx; mov ecx, [rsi+rdx-0x3]; mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x00000000442c1c: mov [rdi], ecx; ret; 
0x00000000455cb5: mov [rdi], ecx; sub r8, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000004564f0; ret; 
0x00000000455d37: mov [rdi], ecx; sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000004564f0; ret; 
0x0000000040b3b9: mov [rdi], ecx; test [rax-0x7cffffff], ah; call qword ptr [rbx+0x147840f]; 
0x0000000045a513: mov [rdi], ecx; vzeroupper; ret; 
0x00000000456a24: mov [rdi], edx; lea rax, [rdi+0x1]; ret; 
0x00000000457064: mov [rdi], edx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x00000000456a42: mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x00000000457092: mov [rdi], edx; lea rax, [rdi+0x3]; vzeroupper; ret; 
0x00000000456a94: mov [rdi], edx; lea rax, [rdi+0x7]; ret; 
0x00000000456400: mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x00000000456410: mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x00000000456481: mov [rdi], edx; mov [rdi+0x5], rdx; ret; 
0x00000000456491: mov [rdi], edx; mov [rdi+0x6], rdx; ret; 
0x00000000456461: mov [rdi], edx; mov [rdi+0x7], edx; ret; 
0x00000000456441: mov [rdi], edx; mov [rdi+0x8], dl; ret; 
0x00000000456451: mov [rdi], edx; mov [rdi+0x8], dx; ret; 
0x00000000456471: mov [rdi], edx; mov [rdi+0x8], edx; ret; 
0x0000000044f0e1: mov [rdi], edx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000044f0f0: mov [rdi], edx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x0000000044f101: mov [rdi], edx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000442f24: mov [rdi], edx; ret; 
0x00000000455c54: mov [rdi], edx; sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000004564f0; ret; 
0x00000000455c92: mov [rdi], edx; sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000004564f0; ret; 
0x00000000455d14: mov [rdi], edx; sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000004564f0; ret; 
0x0000000044e954: mov [rdi], edx; vzeroupper; ret; 
0x0000000043db86: mov [rdi], es; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043db87: mov [rdi], es; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000445f07: mov [rdi], esi; mov [r9-0x2], cx; ret; 
0x00000000445ef3: mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x00000000445ee2: mov [rdi], esi; mov [r9-0x8], rcx; ret; 
0x0000000049e846: mov [rdi], esi; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000459610: mov [rdi], esi; ret; 
0x0000000049d067: mov [rdi], r8; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x0000000049d181: mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x0000000049d03c: mov [rdi], r9; ret; 
0x0000000048f1ab: mov [rdi], rax; mov rax, [rip+0x562b3]; mov [rsi], rax; ret; 
0x00000000456aa6: mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x00000000456b17: mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x00000000455497: mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x00000000456b37: mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000004554a7: mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x00000000456ad6: mov [rdi], rcx; mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x00000000455476: mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x00000000456b57: mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x000000004554b7: mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x00000000456146: mov [rdi], rcx; mov [rdi+0x8], dl; ret; 
0x00000000456ab7: mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x00000000455467: mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x00000000456af6: mov [rdi], rcx; mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x00000000455486: mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x0000000044f048: mov [rdi], rcx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x000000004570c8: mov [rdi], rcx; mov [rdi+rdx-0x7], r9; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000044e998: mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x00000000442c1b: mov [rdi], rcx; ret; 
0x00000000455d36: mov [rdi], rcx; sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000004564f0; ret; 
0x0000000045a512: mov [rdi], rcx; vzeroupper; ret; 
0x00000000456a93: mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x00000000456480: mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x00000000456490: mov [rdi], rdx; mov [rdi+0x6], rdx; ret; 
0x00000000456460: mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x00000000456440: mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x00000000456450: mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x00000000456470: mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x0000000044f100: mov [rdi], rdx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000442f23: mov [rdi], rdx; ret; 
0x00000000455d13: mov [rdi], rdx; sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000004564f0; ret; 
0x00000000445ee1: mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000049e845: mov [rdi], rsi; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000045960f: mov [rdi], rsi; ret; 
0x00000000445f06: mov [rdi], si; mov [r9-0x2], cx; ret; 
0x0000000045962d: mov [rdi], si; ret; 
0x00000000429dff: mov [rdx+0x28], ecx; mov rax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x00000000429dfe: mov [rdx+0x28], rcx; mov rax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x00000000454f29: mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x00000000450bf9: mov [rdx+0x2], al; mov rax, rdi; ret; 
0x00000000454f87: mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x00000000450c37: mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x00000000454f57: mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x00000000450c17: mov [rdx+0x4], al; mov rax, rdi; ret; 
0x00000000454f68: mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x00000000450c28: mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x00000000454f69: mov [rdx+0x4], eax; lea rax, [rdx+0x5]; ret; 
0x00000000450c29: mov [rdx+0x4], eax; mov rax, rdi; ret; 
0x00000000454f99: mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x0000000045501b: mov [rdx+0x5], eax; lea rax, [rdx+0xc]; ret; 
0x00000000450c49: mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x0000000045501a: mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x00000000450c8a: mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000454fb9: mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x0000000045503b: mov [rdx+0x6], eax; lea rax, [rdx+0xd]; ret; 
0x00000000450c59: mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x0000000045503a: mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000450caa: mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x00000000454fd9: mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x0000000045505b: mov [rdx+0x7], eax; lea rax, [rdx+0xe]; ret; 
0x00000000450c69: mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x0000000045505a: mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x00000000450cca: mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x00000000454ff9: mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x00000000454eeb: mov [rdx+0x8], eax; lea rax, [rdx+0xf]; ret; 
0x00000000450bbb: mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x0000000046da1f: mov [rdx+0x8], eax; pop rbx; ret; 
0x00000000454eea: mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000450bba: mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x00000000407e85: mov [rdx+0xd0], ecx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000407e84: mov [rdx+0xd0], rcx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004234ed: mov [rdx+0xe0], ecx; pop rbx; ret; 
0x0000000042064b: mov [rdx+0xe0], ecx; ret; 
0x000000004234ec: mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000042064a: mov [rdx+0xe0], rcx; ret; 
0x00000000431a56: mov [rdx], al; add [rax-0x73], cl; add eax, 0x287f0; cmovne rax, rdx; ret; 
0x0000000045e39d: mov [rdx], al; add [rax], al; mov rdi, [r15]; call rbx; 
0x00000000454f02: mov [rdx], al; lea rax, [rdx]; ret; 
0x00000000450bd2: mov [rdx], al; mov rax, rdi; ret; 
0x00000000454f13: mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x00000000454f23: mov [rdx], ax; mov al, [rcx+0x2]; mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x00000000450bf3: mov [rdx], ax; mov al, [rcx+0x2]; mov [rdx+0x2], al; mov rax, rdi; ret; 
0x00000000450be3: mov [rdx], ax; mov rax, rdi; ret; 
0x00000000431a37: mov [rdx], eax; add [rax-0x73], cl; add eax, 0x289df; cmove rax, rdx; ret; 
0x00000000454f14: mov [rdx], eax; lea rax, [rdx+0x1]; ret; 
0x00000000454f42: mov [rdx], eax; lea rax, [rdx+0x3]; ret; 
0x00000000454e94: mov [rdx], eax; lea rax, [rdx+0x7]; ret; 
0x00000000454f24: mov [rdx], eax; mov al, [rcx+0x2]; mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x00000000450bf4: mov [rdx], eax; mov al, [rcx+0x2]; mov [rdx+0x2], al; mov rax, rdi; ret; 
0x00000000454f52: mov [rdx], eax; mov al, [rcx+0x4]; mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x00000000450c12: mov [rdx], eax; mov al, [rcx+0x4]; mov [rdx+0x4], al; mov rax, rdi; ret; 
0x00000000454f62: mov [rdx], eax; mov ax, [rcx+0x4]; mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x00000000450c22: mov [rdx], eax; mov ax, [rcx+0x4]; mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x0000000049e848: mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000049e9d7: mov [rdx], eax; mov eax, 0x2; ret; 
0x0000000045bee2: mov [rdx], eax; mov eax, 0xffffffff; ret; 
0x00000000454f82: mov [rdx], eax; mov eax, [rcx+0x3]; mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x00000000450c32: mov [rdx], eax; mov eax, [rcx+0x3]; mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x00000000454f94: mov [rdx], eax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x00000000450c44: mov [rdx], eax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x00000000454fb4: mov [rdx], eax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x00000000450c54: mov [rdx], eax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x00000000454fd4: mov [rdx], eax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x00000000450c64: mov [rdx], eax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x00000000454ff4: mov [rdx], eax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x00000000450c74: mov [rdx], eax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x0000000045c11a: mov [rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000455014: mov [rdx], eax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x00000000450c84: mov [rdx], eax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000455034: mov [rdx], eax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000450ca4: mov [rdx], eax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x00000000455054: mov [rdx], eax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x00000000450cc4: mov [rdx], eax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x00000000454ee4: mov [rdx], eax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000450bb4: mov [rdx], eax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x00000000450b64: mov [rdx], eax; mov rax, rdi; ret; 
0x00000000498441: mov [rdx], eax; pop rbx; ret; 
0x00000000428509: mov [rdx], eax; ret; 
0x00000000485152: mov [rdx], eax; xor eax, eax; mov qword ptr [rip+0x5fe37], 0xffffffffffffffff; ret; 
0x00000000408a43: mov [rdx], eax; xor eax, eax; ret; 
0x00000000480a4c: mov [rdx], ecx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000454e93: mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x00000000454f93: mov [rdx], rax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x00000000450c43: mov [rdx], rax; mov eax, [rcx+0x5]; mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x00000000454fb3: mov [rdx], rax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x00000000450c53: mov [rdx], rax; mov eax, [rcx+0x6]; mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x00000000454fd3: mov [rdx], rax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x00000000450c63: mov [rdx], rax; mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x00000000454ff3: mov [rdx], rax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x00000000450c73: mov [rdx], rax; mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x00000000455013: mov [rdx], rax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x00000000450c83: mov [rdx], rax; mov rax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000455033: mov [rdx], rax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000450ca3: mov [rdx], rax; mov rax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x00000000455053: mov [rdx], rax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x00000000450cc3: mov [rdx], rax; mov rax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x00000000454ee3: mov [rdx], rax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000450bb3: mov [rdx], rax; mov rax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x00000000450b63: mov [rdx], rax; mov rax, rdi; ret; 
0x00000000498440: mov [rdx], rax; pop rbx; ret; 
0x00000000428508: mov [rdx], rax; ret; 
0x00000000480a4b: mov [rdx], rcx; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004a6714: mov [rip+0x3e576], ebx; test rbx, rbx; jne short 0x00000000004a6700; pop rbx; ret; 
0x000000004a6713: mov [rip+0x3e576], rbx; test rbx, rbx; jne short 0x00000000004a6700; pop rbx; ret; 
0x00000000497eb8: mov [rip+0x4d16a], eax; ret; 
0x00000000497eb7: mov [rip+0x4d16a], rax; ret; 
0x00000000497ea1: mov [rip+0x4d181], eax; add rsp, 0x8; ret; 
0x00000000497ea0: mov [rip+0x4d181], rax; add rsp, 0x8; ret; 
0x0000000048f049: mov [rip+0x56421], eax; ret; 
0x0000000048f048: mov [rip+0x56421], rax; ret; 
0x00000000485134: mov [rip+0x5fe5e], eax; cmp rdi, rax; ja short 0x0000000000485168; xor eax, eax; ret; 
0x00000000485133: mov [rip+0x5fe5e], rax; cmp rdi, rax; ja short 0x0000000000485168; xor eax, eax; ret; 
0x0000000046fd61: mov [rip+0x73cc9], eax; mov [rip+0x73cca], rdx; cmp fs:[rdi], rsi; je short 0x000000000046fd78; ret; 
0x0000000046fd60: mov [rip+0x73cc9], rax; mov [rip+0x73cca], rdx; cmp fs:[rdi], rsi; je short 0x000000000046fd78; ret; 
0x0000000046fd68: mov [rip+0x73cca], edx; cmp fs:[rdi], rsi; je short 0x000000000046fd78; ret; 
0x0000000046fd67: mov [rip+0x73cca], rdx; cmp fs:[rdi], rsi; je short 0x000000000046fd78; ret; 
0x0000000046133a: mov [rip+0x80760], eax; pop rbx; ret; 
0x0000000045f87d: mov [rip+0x8384d], eax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000045f87c: mov [rip+0x8384d], rax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004620bd: mov [rip+0x83891], eax; ret; 
0x0000000046208d: mov [rip+0x838c1], eax; ret; 
0x0000000046205c: mov [rip+0x838f2], eax; pop rbx; ret; 
0x0000000046201d: mov [rip+0x83931], eax; ret; 
0x00000000461fed: mov [rip+0x83961], eax; ret; 
0x00000000461fbc: mov [rip+0x83992], eax; pop rbx; ret; 
0x0000000042e4d0: mov [rip+0xb42ea], eax; ret; 
0x0000000042e4cf: mov [rip+0xb42ea], rax; ret; 
0x0000000042e4c2: mov [rip+0xb4300], eax; lea rax, [rip-0xc6f]; mov [rip+0xb42ea], rax; ret; 
0x0000000042e4c1: mov [rip+0xb4300], rax; lea rax, [rip-0xc6f]; mov [rip+0xb42ea], rax; ret; 
0x0000000042a6c6: mov [rip+0xb80f4], eax; ret; 
0x0000000042a6c5: mov [rip+0xb80f4], rax; ret; 
0x0000000042a6b8: mov [rip+0xb810a], eax; lea rax, [rip+0x319b]; mov [rip+0xb80f4], rax; ret; 
0x0000000042a6b7: mov [rip+0xb810a], rax; lea rax, [rip+0x319b]; mov [rip+0xb80f4], rax; ret; 
0x00000000429762: mov [rip+0xb9004], eax; ret; 
0x0000000042973c: mov [rip+0xb900e], eax; ret; 
0x0000000042973b: mov [rip+0xb900e], rax; ret; 
0x00000000429713: mov [rip+0xb902f], eax; ret; 
0x00000000429712: mov [rip+0xb902f], rax; ret; 
0x000000004296f3: mov [rip+0xb9047], eax; ret; 
0x000000004296f2: mov [rip+0xb9047], rax; ret; 
0x000000004293e9: mov [rip+0xb93b9], eax; ret; 
0x000000004293e8: mov [rip+0xb93b9], rax; ret; 
0x000000004293d2: mov [rip+0xb93c8], eax; ret; 
0x000000004293d1: mov [rip+0xb93c8], rax; ret; 
0x000000004293b8: mov [rip+0xb93d2], edx; ret; 
0x000000004293b7: mov [rip+0xb93d2], rdx; ret; 
0x00000000429379: mov [rip+0xb93d9], eax; ret; 
0x00000000429378: mov [rip+0xb93d9], rax; ret; 
0x00000000429369: mov [rip+0xb93f1], eax; ret; 
0x00000000429368: mov [rip+0xb93f1], rax; ret; 
0x000000004297a6: mov [rip+0xbb58c], eax; ret; 
0x000000004297a5: mov [rip+0xbb58c], rax; ret; 
0x00000000429778: mov [rip+0xbb5b6], eax; ret; 
0x000000004288d0: mov [rip+0xbc3e2], ebx; add dword ptr [rip+0xbc3d7], 0x1; pop rbx; ret; 
0x000000004288cf: mov [rip+0xbc3e2], rbx; add dword ptr [rip+0xbc3d7], 0x1; pop rbx; ret; 
0x000000004109e3: mov [rip+0xd38ff], eax; lea rax, [rip+0xd38f0]; ret; 
0x000000004109da: mov [rip+0xd3900], eax; mov eax, [rdx+rsi]; mov [rip+0xd38ff], eax; lea rax, [rip+0xd38f0]; ret; 
0x000000004109d9: mov [rip+0xd3900], rax; mov eax, [rdx+rsi]; mov [rip+0xd38ff], eax; lea rax, [rip+0xd38f0]; ret; 
0x00000000410bbe: mov [rip+0xd423c], eax; add rsp, 0x88; pop rbx; ret; 
0x00000000410bbd: mov [rip+0xd423c], rax; add rsp, 0x88; pop rbx; ret; 
0x00000000403504: mov [rip+0xdec16], esi; ret; 
0x000000004034f4: mov [rip+0xdec22], esi; ret; 
0x000000004034e4: mov [rip+0xdec26], esi; ret; 
0x000000004034d4: mov [rip+0xdec32], esi; ret; 
0x000000004034c4: mov [rip+0xdec5e], esi; ret; 
0x000000004033a4: mov [rip+0xded6a], esi; ret; 
0x00000000403394: mov [rip+0xded7e], esi; ret; 
0x00000000403384: mov [rip+0xded9a], esi; ret; 
0x00000000403178: mov [rip+0xdef8a], edi; ret; 
0x00000000403082: mov [rip+0xdf078], ebx; mov eax, 0x1; pop rbx; mov dword ptr [rip+0xdf070], 0x1; ret; 
0x0000000040223a: mov [rip+0xe2090], ebx; xor eax, eax; pop rbx; ret; 
0x000000004020a2: mov [rip+0xe2228], eax; add rsp, 0x8; ret; 
0x00000000476124: mov [rip-0x76bc0000], al; ror byte ptr [rcx-0x4ef73], 0x1; jmp far fword ptr [rcx]; 
0x000000004118a2: mov [rsi+0x10], esi; syscall; 
0x000000004118a0: mov [rsi+0x10], rsi; syscall; 
0x000000004118a1: mov [rsi+0x10], rsi; syscall; 
0x00000000411896: mov [rsi+0x8], eax; mov eax, 0x9e; mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x00000000411895: mov [rsi+0x8], rax; mov eax, 0x9e; mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x00000000459339: mov [rsi-0x2], cx; ret; 
0x0000000045933a: mov [rsi-0x2], ecx; ret; 
0x0000000045932d: mov [rsi-0x4], ecx; ret; 
0x0000000048002d: mov [rsi], dl; clc; jmp qword ptr [rsi+0x2e]; 
0x000000004a39c2: mov [rsi], eax; mov rax, [rdi+0x98]; ret; 
0x0000000048f1b6: mov [rsi], eax; ret; 
0x0000000048e4b5: mov [rsi], edi; mov rax, r8; ret; 
0x0000000041189f: mov [rsi], esi; mov [rsi+0x10], rsi; syscall; 
0x0000000048f1b5: mov [rsi], rax; ret; 
0x0000000048e4b4: mov [rsi], rdi; mov rax, r8; ret; 
0x0000000041189e: mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x0000000042bdde: mov [rsp+0x10], eax; call rax; 
0x000000004216e4: mov [rsp+0x10], ecx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x000000004a43b8: mov [rsp+0x10], edx; call rax; 
0x000000004a43b7: mov [rsp+0x10], r10; call rax; 
0x0000000042bddd: mov [rsp+0x10], r8; call rax; 
0x000000004216e3: mov [rsp+0x10], rcx; xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000042bdd9: mov [rsp+0x18], edx; mov [rsp+0x10], r8; call rax; 
0x0000000042bdd8: mov [rsp+0x18], r10; mov [rsp+0x10], r8; call rax; 
0x0000000045cb95: mov [rsp+0x20], eax; cmp esi, 0x9; je short 0x000000000045cbc8; mov eax, 0x48; syscall; 
0x0000000045cb94: mov [rsp+0x20], rax; cmp esi, 0x9; je short 0x000000000045cbc8; mov eax, 0x48; syscall; 
0x0000000048506a: mov [rsp+0x28], eax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x00000000485069: mov [rsp+0x28], rax; xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000045e4fe: mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000042173f: mov [rsp+0x8], ecx; mov rdi, r15; call rax; 
0x0000000045e4fd: mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000042173e: mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x0000000042173d: mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x0000000042bdf9: mov [rsp], eax; call rdx; 
0x0000000042497c: mov [rsp], eax; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x000000004249b9: mov [rsp], eax; mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x00000000423d20: mov [rsp], ecx; mov rdi, rbp; call rax; 
0x000000004824e2: mov [rsp], esi; pop r12; pop r13; pop r14; ret; 
0x0000000042497b: mov [rsp], r8; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x000000004249b8: mov [rsp], r8; mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000042bdf8: mov [rsp], rax; call rdx; 
0x00000000423d1f: mov [rsp], rcx; mov rdi, rbp; call rax; 
0x00000000423d1e: mov [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000040a3e8: mov ah, 0x0; add [rax], al; mov rax, 0x4def00; ret; 
0x00000000411bda: mov ah, 0x4; add [rax-0x77], cl; ret; 
0x000000004a2b90: mov ah, 0x4c; add eax, esp; notrack jmp rax; 
0x0000000043b31c: mov ah, 0x7; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000040cd4b: mov ah, 0xc8; or [rax], eax; ret; 
0x0000000041faff: mov ah, 0xe8; ret far; 
0x00000000476844: mov ah, 0xf9; jmp qword ptr [rsi+0xf]; 
0x00000000437bd0: mov ah, [rsi+0xf]; je short 0x0000000000437b96; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044a9a0: mov ah, [rsi+0xf]; je short 0x000000000044a966; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004a183b: mov al, 0x0; add [rax], al; add rsp, 0x8; ret; 
0x00000000408807: mov al, 0x0; add [rax], al; movups [rax+0xc0], xmm4; pop rbx; ret; 
0x000000004a3a37: mov al, 0x0; add [rax], al; ret; 
0x00000000430eec: mov al, 0x25; add [rax], al; cmovne rax, rdx; ret; 
0x0000000045e451: mov al, 0x2; add [rax], al; mov rdi, [r15]; call rbx; 
0x00000000423b53: mov al, 0x3b; add [rax-0x39], r9b; ret; 
0x0000000045603c: mov al, 0x4; add [rax], al; ret; 
0x0000000043b6fa: mov al, 0x7; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000042afe2: mov al, 0x80; add [rax], al; add [rsi-0x77], ah; psubsw mm2, [rsi+rdi*8-0x1]; call qword ptr [rax+0x43d8d48]; 
0x00000000455c3c: mov al, 0x8; add [rax], al; ret; 
0x0000000048362c: mov al, 0x9; add [rax], al; cmove rax, rdx; ret; 
0x0000000040d76b: mov al, 0xbd; or [rax], eax; ret; 
0x0000000044e0ff: mov al, 0xc5; std; xlat [rbx]; ret; 
0x0000000042e70c: mov al, 0xff; call qword ptr [rax+0x1bac031]; 
0x0000000040a41d: mov al, [0x227600000084840f]; cmp edi, 0xc0000008; jne short 0x000000000040a4a0; mov rax, 0x4ded80; ret; 
0x0000000040a3bc: mov al, [0x28ff81000000]; jne 0x000000000040a4a0; mov rax, 0x4decc0; ret; 
0x00000000480d37: mov al, [0x30788348000000]; je short 0x0000000000480d48; ret; 
0x0000000042168c: mov al, [0x3bc0c5c749000005]; add [rax-0x39], r9b; ret; 
0x000000004a39e7: mov al, [0x401f0fc3000000]; endbr64; mov rax, [rdi+0xb8]; ret; 
0x000000004a7883: mov al, [0x41e95def8948fffe]; jb short 0x00000000004a7886; call qword ptr [rax-0x5e1f00d]; 
0x00000000421e05: mov al, [0x485def8948000000]; mov eax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x00000000481549: mov al, [0x48c0ef0f66000000]; mov dword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x00000000427893: mov al, [0x48ffffffff000000]; mov dword ptr [rdi+0xa8], 0x0; ret; 
0x00000000459b0a: mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000496c54: mov al, [0x8304768b41000000]; ret; 
0x00000000496c80: mov al, [0x8324348b41000000]; ret; 
0x00000000407f0c: mov al, [0x8330458b4cfffffe]; ret; 
0x0000000040a493: mov al, [0x841f0fc3004e11]; add [rax], al; add [rax], al; xor eax, eax; ret; 
0x0000000040a4b3: mov al, [0x841f0fc3004e12]; add [rax], al; add [rax], al; mov rax, 0x4e12e0; ret; 
0x000000004788b3: mov al, [0x852c8d4c000000]; add [rax], al; add [rax+0x29], cl; ret; 
0x00000000480cce: mov al, [0x8944fffa263be890]; dec byte ptr [rax-0x77]; out dx, eax; call qword ptr [r14+0x18]; 
0x000000004983a1: mov al, [0x8d4808438b000000]; adc eax, 0x33bed; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000043c6b6: mov al, [0x8d49931463490007]; adc al, 0x13; notrack jmp rdx; 
0x00000000475d9c: mov al, [0x984820e88300069b]; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000408800: mov al, [0xb098110f000000]; add [rax], al; movups [rax+0xc0], xmm4; pop rbx; ret; 
0x00000000497e9c: mov al, [0xd1810589480004d1]; add al, 0x0; add rsp, 0x8; ret; 
0x00000000420646: mov al, [0xe08a8948000000]; add [rax], al; ret; 
0x000000004a79ab: mov al, [0xf040c2c748ffffff]; add [r9], r14b; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000041287d: mov al, [0xfff868e9ffffffff]; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000043df29: mov al, [r15]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000049073b: mov al, [rax]; add [rcx-0x77], cl; ret; 
0x00000000454f26: mov al, [rcx+0x2]; mov [rdx+0x2], al; lea rax, [rdx+0x2]; ret; 
0x00000000450bf6: mov al, [rcx+0x2]; mov [rdx+0x2], al; mov rax, rdi; ret; 
0x00000000454f54: mov al, [rcx+0x4]; mov [rdx+0x4], al; lea rax, [rdx+0x4]; ret; 
0x00000000450c14: mov al, [rcx+0x4]; mov [rdx+0x4], al; mov rax, rdi; ret; 
0x00000000491842: mov al, [rcx-0x76b80000]; sbb [r8+0x5a], bl; pop rbx; ret; 
0x00000000454f00: mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x00000000450bd0: mov al, [rcx]; mov [rdx], al; mov rax, rdi; ret; 
0x00000000439900: mov al, [rdi+rdx-0x1]; mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x0000000043dec0: mov al, [rdi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000431a7f: mov al, [rdx]; add [rax-0x73], cl; add eax, 0x28b27; cmove rax, rdx; ret; 
0x0000000044c540: mov al, ch; stc; je short 0x000000000044c506; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000454f64: mov ax, [rcx+0x4]; mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x00000000450c24: mov ax, [rcx+0x4]; mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x00000000454f10: mov ax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x00000000450be0: mov ax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x0000000040a402: mov bh, 0x0; add al, al; jne 0x000000000040a4a0; mov rax, 0x4e11e0; ret; 
0x00000000457061: mov bh, 0x16; mov [rdi], dx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x000000004431c1: mov bh, 0x16; mov [rdi], dx; ret; 
0x0000000044e951: mov bh, 0x16; mov [rdi], dx; vzeroupper; ret; 
0x00000000459626: mov bh, 0x36; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x00000000465385: mov bh, 0x42; add eax, 0xc8c2e800; cli; jmp qword ptr [rsi-0x70]; 
0x000000004571e8: mov bh, 0x48; lea eax, [rdi+0x7]; ret; 
0x000000004a5291: mov bh, 0x5d; and [rsi-0x9], ah; ret; 
0x000000004748c9: mov bh, 0x8d; pop rsp; idiv edi; jmp qword ptr [rsi-0x77]; 
0x00000000421ddf: mov bh, 0x90; add [rax], al; add cl, ch; ret far; 
0x0000000040d773: mov bh, 0xbd; or [rax], eax; ret; 
0x0000000040cca3: mov bh, 0xc8; or [rax], eax; ret; 
0x00000000430ee5: mov bh, 0xe; add [rax], al; lea rdx, [rip+0x25b0]; cmovne rax, rdx; ret; 
0x0000000044e961: mov bh, 0xe; mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x000000004645f1: mov bh, 0xfc; dec dword ptr [rax-0x77]; ret; 
0x00000000460132: mov bh, 0xff; jmp qword ptr [rsi+0x66]; 
0x00000000430cdf: mov bh, bh; jmp qword ptr [rsi+0xf]; 
0x00000000458ade: mov bl, 0x0; add [rax], al; xor eax, eax; ret; 
0x0000000045eac3: mov bl, 0x5; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000048f1b1: mov bl, 0x62; add eax, 0x6894800; ret; 
0x0000000043b3e1: mov bl, 0x7; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004a7852: mov bl, [rax-0x5]; jmp qword ptr [rsi+0x2e]; 
0x0000000040c22b: mov bl, dl; or [rax], eax; ret; 
0x00000000404983: mov byte ptr [rax+0x26], 0x1; mov qword ptr [rax+0x10], 0xffffffffffffffff; mov qword ptr [rax+0x18], 0xffffffffffffffff; add rsp, 0x8; ret; 
0x0000000045fb7e: mov byte ptr [rax+0x28], 0x1; ret; 
0x000000004586f7: mov byte ptr [rax+0x75], 0xc5; movzx eax, byte ptr [rdi-0x9]; movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x00000000464f87: mov byte ptr [rax-0x7c], 0xf6; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000004752bc: mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x4f8], rsi; jmp rax; 
0x00000000482c46: mov byte ptr [rcx], 0x0; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000045fb12: mov byte ptr [rdi+0x28], 0x1; ret; 
0x00000000457076: mov byte ptr [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x0000000044e966: mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x0000000046e8d0: mov byte ptr [rdi], 0x0; add rsp, 0x8; pop rbx; pop r14; ret; 
0x00000000456fe1: mov byte ptr [rdi], 0x0; lea rax, [rdi]; vzeroupper; ret; 
0x00000000439fb8: mov byte ptr [rdi], 0x0; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000044e8d1: mov byte ptr [rdi], 0x0; vzeroupper; ret; 
0x000000004a2134: mov byte ptr [rip+0x43035], 0x8; ret; 
0x000000004a212d: mov byte ptr [rip+0x4303b], 0x8; mov byte ptr [rip+0x43035], 0x8; ret; 
0x000000004a2126: mov byte ptr [rip+0x43041], 0x8; mov byte ptr [rip+0x4303b], 0x8; mov byte ptr [rip+0x43035], 0x8; ret; 
0x000000004a211f: mov byte ptr [rip+0x43047], 0x8; mov byte ptr [rip+0x43041], 0x8; mov byte ptr [rip+0x4303b], 0x8; mov byte ptr [rip+0x43035], 0x8; ret; 
0x00000000401d5a: mov byte ptr [rip+0xe251f], 0x1; pop rbp; ret; 
0x000000004746cb: mov ch, 0x0; idiv edi; jmp far fword ptr [rcx]; 
0x00000000481307: mov ch, 0x1; add [rax], al; mov rdi, r13; call qword ptr [r14+0x20]; 
0x0000000045e127: mov ch, 0x2; add [rax], al; mov rdi, [r14]; call rbx; 
0x000000004839c3: mov ch, 0x5; add [rax+0x39], cl; ret; 
0x0000000043aab6: mov ch, 0x6; add [rax], al; xor eax, eax; ret; 
0x000000004a5c92: mov ch, 0xf5; jmp qword ptr [rsi+0x2e]; 
0x000000004a5c93: mov ch, 0xf5; jmp qword ptr [rsi+0x2e]; 
0x0000000042e252: mov ch, 0xff; jmp qword ptr [rsi+0x66]; 
0x000000004841d0: mov ch, dh; and ch, 0xf; je short 0x00000000004841f0; add rax, 0x2; ret; 
0x0000000042828b: mov cl, 0x0; add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x0000000043199b: mov cl, 0x18; add [rax], eax; cmovne rax, rdx; ret; 
0x00000000408a39: mov cl, 0x48; add eax, ecx; notrack jmp rax; 
0x000000004a2b53: mov cl, 0x4c; add eax, ecx; notrack jmp rax; 
0x0000000049169b: mov cl, 0x5; clc; call qword ptr [rax-0x5e1f00d]; 
0x0000000043b609: mov cl, 0x7; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000040cd5b: mov cl, 0xc8; or [rax], eax; ret; 
0x000000004907a0: mov cl, 0xfc; jmp qword ptr [rsi+0x66]; 
0x00000000401bf4: mov cl, [rax+0x1]; sar byte ptr [rsi], 0x1; jmp rax; 
0x00000000448705: mov cl, [rbx-0x37d67dfc]; ret; 
0x0000000046f13c: mov cl, [rcx+0x1]; sar byte ptr [rsi], 0x1; jmp r8; 
0x00000000431e34: mov cl, [rdi-0x73]; adc al, 0xa; notrack jmp r10; 
0x000000004561c4: mov cl, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cl; ret; 
0x00000000456298: mov cl, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x00000000456399: mov cl, [rsi+0x20]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x00000000439904: mov cl, [rsi+rdx-0x1]; sub eax, ecx; ret; 
0x00000000445f14: mov cl, [rsi]; mov [rdi], cl; ret; 
0x000000004841bb: mov cl, dl; and cl, 0xf; je short 0x00000000004841e0; ret; 
0x00000000445f01: mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x00000000445f02: mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x00000000456b94: mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000004554e4: mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x000000004555c8: mov cx, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x0000000043d1f4: mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x00000000443154: mov cx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x00000000456a30: mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000004553f0: mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x000000004560e0: mov cx, [rsi]; mov dl, [rsi+0x2]; mov [rdi], cx; mov [rdi+0x2], dl; ret; 
0x00000000426b81: mov dh, 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004289b4: mov dh, 0x0; ret; 
0x0000000041e0a9: mov dh, 0x11; test dl, dl; jne short 0x000000000041e088; ret; 
0x00000000430511: mov dh, 0x14; add [rax+rdi-0x3e], eax; jne short 0x0000000000430500; sub rax, 0x10; ret; 
0x00000000475b57: mov dh, 0x14; add ecx, [rax-0x73]; add eax, 0x69cdf; jmp qword ptr [rax+rdx*8]; 
0x00000000475954: mov dh, 0x14; add ecx, [rax-0x73]; add eax, 0x69de2; jmp qword ptr [rax+rdx*8]; 
0x00000000443231: mov dh, 0x16; mov [rdi], dl; ret; 
0x0000000044efe1: mov dh, 0x16; mov [rdi], dl; vzeroupper; ret; 
0x00000000439455: mov dh, 0x16; sub eax, edx; ret; 
0x00000000426ae1: mov dh, 0x2; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000426f87: mov dh, 0x36; lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x00000000415203: mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x000000004a7df1: mov dh, 0x44; and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x00000000490a8e: mov dh, 0x45; add cl, [rax-0x7d]; ret; 
0x00000000490c84: mov dh, 0x45; add ecx, [rax-0x7d]; ret; 
0x00000000472ccc: mov dh, 0x46; or al, 0x83; ret; 
0x000000004586b1: mov dh, 0x47; cmc; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x0000000043aa31: mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x0000000043a7e4: mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x000000004586a1: mov dh, 0x47; hlt; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x00000000458691: mov dh, 0x47; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x00000000458681: mov dh, 0x47; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x00000000467a67: mov dh, 0x48; dec dword ptr [rax+0x3948074a]; ret; 
0x0000000047c3b3: mov dh, 0x4; add cl, [rax-0x73]; or eax, 0x63c83; jmp qword ptr [rcx+rax*8]; 
0x0000000047c9d1: mov dh, 0x4; add cl, [rcx-0x77]; ret far; 
0x00000000475505: mov dh, 0x4; add ecx, [rax-0x75]; add al, 0xc6; jmp rax; 
0x0000000041f3d1: mov dh, 0x4b; add [rax-0x7d], ecx; ret; 
0x0000000043aa35: mov dh, 0x4e; jmp far fword ptr [rcx]; 
0x0000000042d826: mov dh, 0x4f; or eax, [rax]; syscall; 
0x00000000415221: mov dh, 0x53; add [rax-0x7d], ecx; ret; 
0x000000004a27b4: mov dh, 0x53; add cl, [rax-0x7d]; ret; 
0x000000004348f6: mov dh, 0x54; cmp ah, [rax]; sub eax, edx; vzeroupper; ret; 
0x000000004586b5: mov dh, 0x56; cmc; sub eax, edx; ret; 
0x000000004586a5: mov dh, 0x56; hlt; sub eax, edx; ret; 
0x0000000043a7e8: mov dh, 0x56; jmp far fword ptr [rcx]; 
0x00000000458685: mov dh, 0x56; sub eax, edx; ret; 
0x00000000458695: mov dh, 0x56; sub eax, edx; ret; 
0x00000000494628: mov dh, 0x58; or al, 0x89; fdiv st, st(6); ret; 
0x00000000492f85: mov dh, 0x58; or al, 0xf6; ret; 
0x000000004839bc: mov dh, 0x5; add [rbp+rcx*4+0x25], cl; fidiv st, dword ptr [rbp+0x39480005]; ret; 
0x00000000486403: mov dh, 0x5; add [rbp-0x7d7af00a], al; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000413ad8: mov dh, 0x78; add eax, [rax-0x80]; jmp qword ptr [rcx+rax*2+0xf]; 
0x0000000043b248: mov dh, 0x7; add [rdi+0x63], cl; or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000439911: mov dh, 0x7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000439452: mov dh, 0x7; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x000000004331e4: mov dh, 0x7; sub eax, ecx; ret; 
0x00000000438ef4: mov dh, 0x7; sub eax, ecx; vzeroupper; ret; 
0x0000000042977a: mov dh, 0xb5; or eax, [rax]; ret; 
0x00000000462a6b: mov dh, 0xc0; add eax, 0x1; push rax; call rbx; 
0x00000000485036: mov dh, 0xc0; add rsp, 0x58; ret; 
0x00000000425533: mov dh, 0xc0; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000425565: mov dh, 0xc0; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x000000004a29d5: mov dh, 0xc0; movsxd rax, [r13+rax*4]; add rax, r13; notrack jmp rax; 
0x000000004a1692: mov dh, 0xc0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000047e9e8: mov dh, 0xc0; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000049eb71: mov dh, 0xc0; neg eax; ret; 
0x0000000049822e: mov dh, 0xc0; pop rbx; pop rbp; pop r12; ret; 
0x00000000439475: mov dh, 0xc0; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x0000000045a7f1: mov dh, 0xc1; pop rbx; ret; 
0x00000000425c84: mov dh, 0xc3; pop rbx; pop rbp; pop r12; ret; 
0x0000000045a2b2: mov dh, 0xc6; mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000464f86: mov dh, 0xc6; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000040cd43: mov dh, 0xc8; or [rax], eax; ret; 
0x0000000047c7d8: mov dh, 0xc; add cl, [rax-0x73]; add eax, 0x6375e; jmp qword ptr [rax+rcx*8]; 
0x0000000047c5f7: mov dh, 0xc; add cl, [rax-0x73]; add eax, 0x6383f; jmp qword ptr [rax+rcx*8]; 
0x0000000047639b: mov dh, 0xc; add ecx, [rax-0x73]; add eax, 0x6909b; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004758eb: mov dh, 0xc; add ecx, [rax-0x73]; add eax, 0x69d4b; mov rax, [rax+rcx*8]; jmp rax; 
0x0000000041db6a: mov dh, 0xd2; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000043947b: mov dh, 0xd2; sub eax, edx; ret; 
0x000000004595fd: mov dh, 0xe; mov [rdi], cl; ret; 
0x000000004331e1: mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x00000000438ef1: mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x00000000439914: mov dh, 0xe; sub eax, ecx; ret; 
0x000000004836f5: mov dh, 0xf3; call rbp; 
0x00000000403502: mov dh, 0xf6; mov [rip+0xdec16], esi; ret; 
0x000000004034f2: mov dh, 0xf6; mov [rip+0xdec22], esi; ret; 
0x000000004034e2: mov dh, 0xf6; mov [rip+0xdec26], esi; ret; 
0x000000004034d2: mov dh, 0xf6; mov [rip+0xdec32], esi; ret; 
0x000000004034c2: mov dh, 0xf6; mov [rip+0xdec5e], esi; ret; 
0x000000004033a2: mov dh, 0xf6; mov [rip+0xded6a], esi; ret; 
0x00000000403392: mov dh, 0xf6; mov [rip+0xded7e], esi; ret; 
0x00000000403382: mov dh, 0xf6; mov [rip+0xded9a], esi; ret; 
0x000000004a2b8b: mov dh, 0xf6; movsxd rax, [r12+rsi*4]; add rax, r12; notrack jmp rax; 
0x000000004a2b4e: mov dh, 0xf6; movsxd rax, [r9+rsi*4]; add rax, r9; notrack jmp rax; 
0x0000000042e174: mov dh, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000403176: mov dh, 0xff; mov [rip+0xdef8a], edi; ret; 
0x0000000049c012: mov dh, 0xff; nop [rax]; add rsp, 0x8; ret; 
0x0000000046f642: mov dh, ah; sti; jmp qword ptr [rsi+0x2e]; 
0x0000000046f04a: mov dl, 0x5; add [rax], al; xchg ax, ax; ret; 
0x0000000045e640: mov dl, 0x7; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000043b4e0: mov dl, 0x7; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000478c3b: mov dl, 0x8; add [rax], al; movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000407761: mov dl, 0xc2; mov edx, eax; shr edx, 0x10; xor eax, edx; ret; 
0x0000000040cd53: mov dl, 0xc8; or [rax], eax; ret; 
0x0000000041314a: mov dl, 0xce; mov esi, 0xc0c748ff; sar bh, 0xff; dec dword ptr [rbx-0xd373]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x00000000456217: mov dl, [rsi+0x14]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x000000004560e3: mov dl, [rsi+0x2]; mov [rdi], cx; mov [rdi+0x2], dl; ret; 
0x00000000456102: mov dl, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x00000000456143: mov dl, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dl; ret; 
0x0000000043ce30: mov dl, [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x000000004560c0: mov dl, [rsi]; mov [rdi], dl; ret; 
0x000000004296d3: mov dword ptr [r11+0x14], 0x0; ret; 
0x00000000409070: mov dword ptr [r12+0x28], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x0000000041ec05: mov dword ptr [rax+0x10], 0x0; mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x00000000404988: mov dword ptr [rax+0x10], 0xffffffff; mov qword ptr [rax+0x18], 0xffffffffffffffff; add rsp, 0x8; ret; 
0x00000000404990: mov dword ptr [rax+0x18], 0xffffffff; add rsp, 0x8; ret; 
0x00000000481552: mov dword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x00000000427705: mov dword ptr [rax+0x8], 0x0; movdqa xmm0, [rip+0x8dbbc]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x00000000427675: mov dword ptr [rax+0x8], 0x0; movdqa xmm0, [rip+0x8dc4c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x000000004277d5: mov dword ptr [rax+0x8], 0x0; ret; 
0x00000000423b6d: mov dword ptr [rax+rax], 0x748d4800; and al, 0x10; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x00000000439319: mov dword ptr [rax-0x15000000], 0xbc0ff3d0; ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x000000004277ce: mov dword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000049841d: mov dword ptr [rax], 0x0; mov rdx, [rdi+0x458]; mov [rax], rdx; pop rbx; ret; 
0x0000000045bef8: mov dword ptr [rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000045d070: mov dword ptr [rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000420684: mov dword ptr [rax], 0x89480000; ret; 
0x0000000042da2b: mov dword ptr [rax], 0xc; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x00000000485170: mov dword ptr [rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000042c57b: mov dword ptr [rax], 0xc; mov rax, r8; ret; 
0x0000000047b759: mov dword ptr [rbp-0x4c8], 0x0; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x0000000047ca66: mov dword ptr [rbp-0x4d0], 0x1; mov r9d, 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c80e: mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047b991: mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004752b2: mov dword ptr [rbp-0x4e0], 0x0; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x4f8], rsi; jmp rax; 
0x0000000047c9de: mov dword ptr [rbp-0x4e0], 0x1; mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047cab0: mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c5a6: mov dword ptr [rbp-0x4e8], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x00000000476444: mov dword ptr [rbp-0x4f0], 0x1; cdqe; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047b763: mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x0000000047c9e8: mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047ca26: mov dword ptr [rbp-0x4f8], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047b744: mov dword ptr [rbp-0x508], 0x0; mov dword ptr [rbp-0x514], 0x0; mov qword ptr [rbp-0x4c8], 0x0; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x0000000047cb2e: mov dword ptr [rbp-0x508], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047b74e: mov dword ptr [rbp-0x514], 0x0; mov qword ptr [rbp-0x4c8], 0x0; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x0000000047c3e6: mov dword ptr [rbp-0x514], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004752a7: mov dword ptr [rbp-0x51c], 0x0; mov qword ptr [rbp-0x4e0], 0x0; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x4f8], rsi; jmp rax; 
0x0000000047caf4: mov dword ptr [rbp-0x520], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c366: mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047caa6: mov dword ptr [rbp-0x530], 0x1; mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004763ef: mov dword ptr [rbp-0x53c], 0x1; cdqe; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000490cd6: mov dword ptr [rbx+0x10], 0x0; movups [rbx], xmm0; pop rbx; ret; 
0x0000000046da37: mov dword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x000000004296d4: mov dword ptr [rbx+0x14], 0x0; ret; 
0x00000000462089: mov dword ptr [rbx+0x58908c8], 0x838c1; ret; 
0x00000000462058: mov dword ptr [rbx+0x58910c8], 0x838f2; pop rbx; ret; 
0x000000004620b9: mov dword ptr [rbx+0x58918c8], 0x83891; ret; 
0x0000000042695d: mov dword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000042865d: mov dword ptr [rbx+0x58], 0x0; pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000424fae: mov dword ptr [rbx+0x70], 0xffffffff; pop rbx; ret; 
0x000000004a36a7: mov dword ptr [rbx+0x98], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000475b50: mov dword ptr [rbx-0x67b7df18], 0x314b60f; lea rax, [rip+0x69cdf]; jmp qword ptr [rax+rdx*8]; 
0x0000000047594d: mov dword ptr [rbx-0x67b7df18], 0x314b60f; lea rax, [rip+0x69de2]; jmp qword ptr [rax+rdx*8]; 
0x000000004638b7: mov dword ptr [rbx], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004a7dea: mov dword ptr [rbx], 0x0; movzx eax, byte ptr [rsp+0xf]; add rsp, 0x10; pop rbx; ret; 
0x0000000048fa48: mov dword ptr [rbx], 0x0; pop rbx; or dword ptr [rip+0x536f2], 0x1; ret; 
0x0000000048e4c8: mov dword ptr [rcx], 0xffff35e9; call qword ptr [rax+0x37bb41]; 
0x00000000427891: mov dword ptr [rdi+0xa0], 0xffffffff; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x00000000427884: mov dword ptr [rdi+0xa8], 0x0; ret; 
0x00000000427684: mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000040aaae: mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x0000000040aacb: mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000049e80b: mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000049e97e: mov dword ptr [rdx], 0x0; mov eax, 0x2; ret; 
0x0000000049e902: mov dword ptr [rdx], 0xffffc002; ret; 
0x000000004a7cfb: mov dword ptr [rip+0x3d273], 0x0; add rsp, 0x8; ret; 
0x000000004a78ac: mov dword ptr [rip+0x3d5a2], 0x0; add rsp, 0x8; ret; 
0x0000000049b9f0: mov dword ptr [rip+0x49746], 0x2; test byte ptr [rip+0x49f1f], 0x40; jne short 0x000000000049ba08; ret; 
0x000000004916d1: mov dword ptr [rip+0x53925], 0x0; add rsp, 0x8; ret; 
0x00000000485157: mov dword ptr [rip+0x5fe37], 0xffffffff; ret; 
0x0000000042e46e: mov dword ptr [rip+0xb68a8], 0x0; ret; 
0x00000000429758: mov dword ptr [rip+0xb9012], 0x1; mov [rip+0xb9004], eax; ret; 
0x00000000429731: mov dword ptr [rip+0xb9039], 0x1; mov [rip+0xb900e], rax; ret; 
0x00000000429708: mov dword ptr [rip+0xb9062], 0x1; mov [rip+0xb902f], rax; ret; 
0x000000004296e8: mov dword ptr [rip+0xb9082], 0x1; mov [rip+0xb9047], rax; ret; 
0x00000000428970: mov dword ptr [rip+0xbc33e], 0x0; ret; 
0x00000000428965: mov dword ptr [rip+0xbc341], 0x0; mov qword ptr [rip+0xbc33e], 0x0; ret; 
0x0000000040313e: mov dword ptr [rip+0xdefdc], 0xffffffff; add rsp, 0x8; ret; 
0x00000000403133: mov dword ptr [rip+0xdefdf], 0xffffffff; mov qword ptr [rip+0xdefdc], 0xffffffffffffffff; add rsp, 0x8; ret; 
0x00000000403128: mov dword ptr [rip+0xdefe2], 0xffffffff; mov qword ptr [rip+0xdefdf], 0xffffffffffffffff; mov qword ptr [rip+0xdefdc], 0xffffffffffffffff; add rsp, 0x8; ret; 
0x0000000040308e: mov dword ptr [rip+0xdf070], 0x1; ret; 
0x00000000403064: mov dword ptr [rip+0xdf09a], 0x0; xor eax, eax; pop rbx; ret; 
0x000000004017d5: mov dword ptr [rip+0xe3879], 0x0; pop rdx; ret; 
0x00000000409071: mov dword ptr [rsp+0x28], 0x0; pop rbx; pop rbp; pop r12; ret; 
0x00000000492332: mov dword ptr [rsp], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000045bef7: mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000045d06f: mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x0000000042da2a: mov dword ptr fs:[rax], 0xc; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000048516f: mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000042c57a: mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000443150: mov dx, [rsi+0x1]; mov cx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x00000000456a62: mov dx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x00000000455422: mov dx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x00000000456ab3: mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x00000000455463: mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x0000000043d010: mov dx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000043d1f0: mov dx, [rsi-0x3]; mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x00000000456a20: mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000004553e0: mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000045a833: mov eax, 0x0; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000040dbed: mov eax, 0x0; cmovne r12, rax; mov rax, r12; pop r12; ret; 
0x0000000040203b: mov eax, 0x0; leave; ret; 
0x00000000401009: mov eax, 0x0; test rax, rax; je short 0x0000000000401016; call rax; 
0x00000000401ccd: mov eax, 0x0; test rax, rax; je short 0x0000000000401ce0; mov edi, 0x4e3b70; jmp rax; 
0x00000000401d0f: mov eax, 0x0; test rax, rax; je short 0x0000000000401d20; mov edi, 0x4e3b70; jmp rax; 
0x0000000045bfc4: mov eax, 0x101; syscall; 
0x00000000484fb8: mov eax, 0x106; syscall; 
0x0000000042979c: mov eax, 0x10; cmovne rax, rdx; mov [rip+0xbb58c], rax; ret; 
0x0000000045a881: mov eax, 0x10; pop rbx; ret; 
0x0000000045cf34: mov eax, 0x10; syscall; 
0x00000000498fa7: mov eax, 0x11; syscall; 
0x0000000045ce5b: mov eax, 0x12e; xor edi, edi; syscall; 
0x0000000048dbaa: mov eax, 0x14; syscall; 
0x000000004600e7: mov eax, 0x15; syscall; 
0x00000000430e10: mov eax, 0x16; ret; 
0x0000000045be24: mov eax, 0x18; syscall; 
0x0000000045f8a7: mov eax, 0x19; syscall; 
0x0000000048e360: mov eax, 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004a4358: mov eax, 0x1; cmp [rsi+0x8], rcx; ja short 0x00000000004a4365; sbb eax, eax; ret; 
0x0000000049e825: mov eax, 0x1; mov [rdi], rsi; ret; 
0x0000000040209d: mov eax, 0x1; mov [rip+0xe2228], eax; add rsp, 0x8; ret; 
0x0000000049e8fd: mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000004275d9: mov eax, 0x1; movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x00000000497c29: mov eax, 0x1; pop rbp; pop r12; pop r13; ret; 
0x00000000480e34: mov eax, 0x1; pop rbp; pop r12; ret; 
0x00000000403088: mov eax, 0x1; pop rbx; mov dword ptr [rip+0xdf070], 0x1; ret; 
0x00000000481a63: mov eax, 0x1; pop rbx; pop rbp; pop r12; ret; 
0x0000000047fd1a: mov eax, 0x1; pop rbx; pop rbp; ret; 
0x00000000484211: mov eax, 0x1; ret; 
0x00000000407d38: mov eax, 0x1; ret; 
0x0000000045c150: mov eax, 0x1; syscall; 
0x0000000045d144: mov eax, 0x1c; syscall; 
0x0000000045a87a: mov eax, 0x20; pop rbx; ret; 
0x0000000045c3a4: mov eax, 0x20; syscall; 
0x0000000049ed24: mov eax, 0x26; syscall; 
0x00000000498f94: mov eax, 0x27; syscall; 
0x0000000049e984: mov eax, 0x2; ret; 
0x00000000484221: mov eax, 0x2; ret; 
0x0000000045a873: mov eax, 0x30; pop rbx; ret; 
0x00000000484231: mov eax, 0x3; ret; 
0x0000000045c320: mov eax, 0x3; syscall; 
0x00000000484ed4: mov eax, 0x3f; syscall; 
0x0000000045a86c: mov eax, 0x40; pop rbx; ret; 
0x0000000046d361: mov eax, 0x44000000; mov eax, eax; pop rbp; pop r12; ret; 
0x000000004a17ef: mov eax, 0x48000000; add esp, 0x8; ret; 
0x00000000431af4: mov eax, 0x48000096; lea edx, [rip+0xec41]; cmovne rax, rdx; ret; 
0x0000000045c284: mov eax, 0x48; syscall; 
0x000000004a4505: mov eax, 0x4; cmp dil, 0x3; jne short 0x00000000004a4530; add rsp, 0x8; ret; 
0x00000000484241: mov eax, 0x4; ret; 
0x0000000045bec3: mov eax, 0x4; syscall; 
0x0000000040a781: mov eax, 0x4dec40; pop rbp; ret; 
0x0000000040a4e1: mov eax, 0x4dec40; ret; 
0x0000000040a7a1: mov eax, 0x4dec80; pop rbp; ret; 
0x0000000040a4d1: mov eax, 0x4dec80; ret; 
0x0000000040a791: mov eax, 0x4decc0; pop rbp; ret; 
0x0000000040a3cd: mov eax, 0x4decc0; ret; 
0x0000000040a7e1: mov eax, 0x4ded00; pop rbp; ret; 
0x0000000040a461: mov eax, 0x4ded00; ret; 
0x0000000040a7d1: mov eax, 0x4ded40; pop rbp; ret; 
0x0000000040a481: mov eax, 0x4ded40; ret; 
0x0000000040a7f1: mov eax, 0x4ded80; pop rbp; ret; 
0x0000000040a42f: mov eax, 0x4ded80; ret; 
0x0000000040a7c1: mov eax, 0x4dedc0; pop rbp; ret; 
0x0000000040a36f: mov eax, 0x4dedc0; ret; 
0x0000000040a803: mov eax, 0x4dee00; pop rbp; ret; 
0x0000000040a3ad: mov eax, 0x4dee00; ret; 
0x0000000040a7fa: mov eax, 0x4dee40; pop rbp; ret; 
0x0000000040a4a9: mov eax, 0x4dee40; ret; 
0x0000000040a830: mov eax, 0x4dee80; pop rbp; ret; 
0x0000000040a4f1: mov eax, 0x4dee80; ret; 
0x0000000040a827: mov eax, 0x4deec0; pop rbp; ret; 
0x0000000040a471: mov eax, 0x4deec0; ret; 
0x0000000040a839: mov eax, 0x4def00; pop rbp; ret; 
0x0000000040a3ed: mov eax, 0x4def00; ret; 
0x0000000040a842: mov eax, 0x4def40; pop rbp; ret; 
0x0000000040a459: mov eax, 0x4def40; ret; 
0x0000000040a771: mov eax, 0x4e11a0; pop rbp; ret; 
0x0000000040a491: mov eax, 0x4e11a0; ret; 
0x0000000040a7b1: mov eax, 0x4e11e0; pop rbp; ret; 
0x0000000040a40d: mov eax, 0x4e11e0; ret; 
0x0000000040a815: mov eax, 0x4e1220; pop rbp; ret; 
0x0000000040a441: mov eax, 0x4e1220; ret; 
0x0000000040a80c: mov eax, 0x4e1260; pop rbp; ret; 
0x0000000040a501: mov eax, 0x4e1260; ret; 
0x0000000040a81e: mov eax, 0x4e12a0; pop rbp; ret; 
0x0000000040a4b1: mov eax, 0x4e12a0; ret; 
0x0000000040a767: mov eax, 0x4e12e0; pop rbp; ret; 
0x0000000040a4c1: mov eax, 0x4e12e0; ret; 
0x00000000402585: mov eax, 0x4e2130; mov rax, [rax]; mov eax, [rax]; ret; 
0x0000000045c44b: mov eax, 0x4f; syscall; 
0x0000000048f806: mov eax, 0x59; mov rbp, rsp; mov rsi, rbp; syscall; 
0x00000000484251: mov eax, 0x5; ret; 
0x0000000045bf22: mov eax, 0x5; syscall; 
0x0000000045bf21: mov eax, 0x5; syscall; 
0x0000000045a865: mov eax, 0x60; pop rbx; ret; 
0x0000000045f904: mov eax, 0x63; syscall; 
0x00000000402aec: mov eax, 0x64000000; xor rdx, [0x28]; jne 0x0000000000402b8f; add rsp, 0xc8; ret; 
0x00000000402c9c: mov eax, 0x64000000; xor rdx, [0x28]; jne 0x0000000000402d3f; add rsp, 0xc8; ret; 
0x00000000484f04: mov eax, 0x66; syscall; 
0x00000000484f24: mov eax, 0x68; syscall; 
0x00000000484261: mov eax, 0x6; ret; 
0x00000000484f53: mov eax, 0x6; syscall; 
0x00000000484f14: mov eax, 0x6b; syscall; 
0x00000000484f34: mov eax, 0x6c; syscall; 
0x00000000484271: mov eax, 0x7; ret; 
0x00000000498f5b: mov eax, 0x7fffffff; cmova rdx, rax; mov eax, 0xd9; syscall; 
0x0000000045a88f: mov eax, 0x80; pop rbx; ret; 
0x000000004a451d: mov eax, 0x8; add rsp, 0x8; ret; 
0x000000004a451c: mov eax, 0x8; add rsp, 0x8; ret; 
0x0000000045a888: mov eax, 0x8; pop rbx; ret; 
0x0000000045c1e4: mov eax, 0x8; syscall; 
0x00000000415941: mov eax, 0x8d4dfffe; jl short 0x000000000041594f; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x0000000045d04f: mov eax, 0x9; syscall; 
0x0000000045f8d7: mov eax, 0x9d; syscall; 
0x00000000411899: mov eax, 0x9e; mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x00000000410fa8: mov eax, 0x9e; syscall; 
0x0000000045d114: mov eax, 0xa; syscall; 
0x0000000045d0e4: mov eax, 0xb; syscall; 
0x0000000041e166: mov eax, 0xba; syscall; 
0x00000000422ca9: mov eax, 0xc04d8d4c; mov rcx, r14; mov rdi, r15; call r12; 
0x00000000485124: mov eax, 0xc; syscall; 
0x000000004a7d42: mov eax, 0xca; lea rdi, [rip+0x3d232]; syscall; 
0x00000000497dc2: mov eax, 0xca; lea rdi, [rip+0x4d246]; syscall; 
0x00000000497b3e: mov eax, 0xca; lea rdi, [rip+0x4d4c6]; syscall; 
0x00000000495aba: mov eax, 0xca; lea rdi, [rip+0x4f542]; syscall; 
0x0000000049597a: mov eax, 0xca; lea rdi, [rip+0x4f682]; syscall; 
0x00000000471902: mov eax, 0xca; lea rdi, [rip+0x73672]; syscall; 
0x0000000047183d: mov eax, 0xca; lea rdi, [rip+0x73737]; syscall; 
0x0000000047169b: mov eax, 0xca; lea rdi, [rip+0x738d9]; syscall; 
0x000000004715c1: mov eax, 0xca; lea rdi, [rip+0x739b3]; syscall; 
0x00000000463df2: mov eax, 0xca; lea rdi, [rip+0x81c12]; syscall; 
0x00000000463c86: mov eax, 0xca; lea rdi, [rip+0x81d7e]; syscall; 
0x00000000463b66: mov eax, 0xca; lea rdi, [rip+0x81e9e]; syscall; 
0x0000000045b41e: mov eax, 0xca; lea rdi, [rip+0x8a5e6]; syscall; 
0x00000000430a9e: mov eax, 0xca; lea rdi, [rip+0xb1d36]; syscall; 
0x0000000042de9e: mov eax, 0xca; lea rdi, [rip+0xb4936]; syscall; 
0x0000000042de3e: mov eax, 0xca; lea rdi, [rip+0xb4996]; syscall; 
0x0000000042da7e: mov eax, 0xca; lea rdi, [rip+0xb4d56]; syscall; 
0x0000000042d81e: mov eax, 0xca; lea rdi, [rip+0xb4fb6]; syscall; 
0x0000000042d246: mov eax, 0xca; lea rdi, [rip+0xb558e]; syscall; 
0x0000000042d20e: mov eax, 0xca; lea rdi, [rip+0xb55c6]; syscall; 
0x0000000042edfe: mov eax, 0xca; lea rdi, [rip+0xb5f26]; syscall; 
0x0000000042e3b2: mov eax, 0xca; lea rdi, [rip+0xb6962]; syscall; 
0x0000000042a50f: mov eax, 0xca; lea rdi, [rip+0xba805]; syscall; 
0x0000000042a4de: mov eax, 0xca; lea rdi, [rip+0xba846]; syscall; 
0x0000000042a25e: mov eax, 0xca; lea rdi, [rip+0xbaac6]; syscall; 
0x00000000429d3a: mov eax, 0xca; lea rdi, [rip+0xbafea]; syscall; 
0x00000000428950: mov eax, 0xca; lea rdi, [rip+0xbc354]; syscall; 
0x00000000428390: mov eax, 0xca; lea rdi, [rip+0xbc914]; syscall; 
0x00000000428024: mov eax, 0xca; lea rdi, [rip+0xbcc80]; syscall; 
0x00000000427ce2: mov eax, 0xca; lea rdi, [rip+0xbcfc2]; syscall; 
0x0000000042677c: mov eax, 0xca; lea rdi, [rip+0xbe528]; syscall; 
0x000000004264dc: mov eax, 0xca; lea rdi, [rip+0xbe7c8]; syscall; 
0x00000000426188: mov eax, 0xca; lea rdi, [rip+0xbeb1c]; syscall; 
0x0000000042018e: mov eax, 0xca; lea rdi, [rip+0xc5876]; syscall; 
0x0000000041f13d: mov eax, 0xca; lea rdi, [rip+0xc6767]; syscall; 
0x0000000041effd: mov eax, 0xca; lea rdi, [rip+0xc68a7]; syscall; 
0x0000000041edc6: mov eax, 0xca; lea rdi, [rip+0xc6ade]; syscall; 
0x0000000041ed8b: mov eax, 0xca; lea rdi, [rip+0xc6b19]; syscall; 
0x0000000041eca7: mov eax, 0xca; lea rdi, [rip+0xc6bfd]; syscall; 
0x000000004156db: mov eax, 0xca; lea rdi, [rip+0xcf151]; syscall; 
0x00000000413d38: mov eax, 0xca; lea rdi, [rip+0xd0abc]; syscall; 
0x00000000412bb9: mov eax, 0xca; lea rdi, [rip+0xd1b93]; syscall; 
0x00000000412b8b: mov eax, 0xca; lea rdi, [rip+0xd1bc1]; syscall; 
0x00000000412a3f: mov eax, 0xca; lea rdi, [rip+0xd1d0d]; syscall; 
0x000000004012d7: mov eax, 0xca; lea rdi, [rip+0xe356d]; syscall; 
0x00000000401446: mov eax, 0xca; syscall; 
0x0000000048192d: mov eax, 0xca; xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x00000000498f64: mov eax, 0xd9; syscall; 
0x0000000047006f: mov eax, 0xd; syscall; 
0x000000004847e5: mov eax, 0xe4; syscall; 
0x0000000042e24c: mov eax, 0xe800087e; pop rbx; mov ch, 0xff; jmp qword ptr [rsi+0x66]; 
0x0000000047c735: mov eax, 0xe8fffffa; xchg edx, eax; ret far; 
0x0000000041e194: mov eax, 0xe; syscall; 
0x0000000041e172: mov eax, 0xea; syscall; 
0x0000000046ffa1: mov eax, 0xf; syscall; 
0x00000000471644: mov eax, 0xfbd486e8; dec dword ptr [rcx+rcx*4+0x65]; mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000484ec9: mov eax, 0xfdab41e8; call qword ptr [rax-0x5e1f00d]; 
0x0000000047164c: mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000047164d: mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000049e8e0: mov eax, 0xffffc002; sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000049ea0d: mov eax, 0xffffc002; sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x0000000040aeb0: mov eax, 0xffffff20; ret; 
0x0000000040af92: mov eax, 0xffffff21; ret; 
0x0000000040af8c: mov eax, 0xffffff22; ret; 
0x0000000040af86: mov eax, 0xffffff23; ret; 
0x0000000040af80: mov eax, 0xffffff2a; ret; 
0x0000000040af7a: mov eax, 0xffffff2b; ret; 
0x0000000040af74: mov eax, 0xffffff2c; ret; 
0x0000000040af6e: mov eax, 0xffffff2d; ret; 
0x0000000040af68: mov eax, 0xffffff34; ret; 
0x0000000040af62: mov eax, 0xffffff35; ret; 
0x0000000040af56: mov eax, 0xffffff36; ret; 
0x0000000040af5c: mov eax, 0xffffff37; ret; 
0x0000000040af32: mov eax, 0xffffff88; ret; 
0x0000000040af20: mov eax, 0xffffff89; ret; 
0x0000000040aed0: mov eax, 0xffffff8a; ret; 
0x0000000040af1a: mov eax, 0xffffff8b; ret; 
0x0000000040af2c: mov eax, 0xffffff8c; ret; 
0x0000000040af02: mov eax, 0xffffff8d; ret; 
0x0000000040af3e: mov eax, 0xffffff8e; ret; 
0x0000000040af44: mov eax, 0xffffff8f; ret; 
0x0000000040af14: mov eax, 0xffffff90; ret; 
0x0000000040af38: mov eax, 0xffffff91; ret; 
0x0000000040af0e: mov eax, 0xffffff92; ret; 
0x0000000040af26: mov eax, 0xffffff93; ret; 
0x0000000040af50: mov eax, 0xffffff94; ret; 
0x0000000040aef6: mov eax, 0xffffff95; ret; 
0x0000000040aefc: mov eax, 0xffffff96; ret; 
0x0000000040aec0: mov eax, 0xffffff97; ret; 
0x0000000040af08: mov eax, 0xffffff98; ret; 
0x0000000040aef0: mov eax, 0xffffff99; ret; 
0x0000000040aee0: mov eax, 0xffffff9a; ret; 
0x0000000040af4a: mov eax, 0xffffff9b; ret; 
0x000000004033d8: mov eax, 0xffffffa1; add rsp, 0x8; ret; 
0x00000000403498: mov eax, 0xffffffa1; ret; 
0x0000000046fda5: mov eax, 0xffffffa8; movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000411ad5: mov eax, 0xffffffc0; add rax, fs:[0x0]; ret; 
0x0000000045bef1: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000045d069: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000485169: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000048fa65: mov eax, 0xffffffc0; pop rbx; mov eax, fs:[rax]; ret; 
0x0000000042c571: mov eax, 0xffffffc0; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x0000000040a9db: mov eax, 0xffffffdf; pop rbx; ret; 
0x000000004089bf: mov eax, 0xffffffdf; ret; 
0x0000000046fe05: mov eax, 0xffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046fde5: mov eax, 0xffffffe8; add rax, fs:[0x0]; ret; 
0x000000004024da: mov eax, 0xffffffea; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000402671: mov eax, 0xffffffea; pop r12; pop r13; ret; 
0x00000000409081: mov eax, 0xffffffea; pop rbp; pop r12; ret; 
0x000000004029f0: mov eax, 0xffffffea; pop rbx; pop rbp; pop r12; ret; 
0x000000004023e4: mov eax, 0xffffffea; pop rbx; ret; 
0x000000004023de: mov eax, 0xffffffea; ret; 
0x00000000402710: mov eax, 0xffffffea; test r8d, r8d; je short 0x0000000000402720; pop rbp; ret; 
0x00000000402ea2: mov eax, 0xffffffea; test r8d, r8d; je short 0x0000000000402eb0; pop rbp; ret; 
0x00000000408cd3: mov eax, 0xffffffef; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000408943: mov eax, 0xffffffef; pop rbx; pop rbp; pop r12; ret; 
0x00000000407fb4: mov eax, 0xffffffef; pop rbx; pop rbp; ret; 
0x00000000408a03: mov eax, 0xffffffef; ret; 
0x0000000046fdc5: mov eax, 0xfffffff0; add rax, fs:[0x0]; ret; 
0x00000000403859: mov eax, 0xfffffff2; pop rbx; pop rbp; ret; 
0x00000000402083: mov eax, 0xfffffff2; ret; 
0x00000000408b50: mov eax, 0xfffffff3; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000404f54: mov eax, 0xfffffff4; pop rbp; pop r12; ret; 
0x000000004716fe: mov eax, 0xffffffff; pop rbp; pop r12; pop r13; ret; 
0x000000004028c4: mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x00000000421e20: mov eax, 0xffffffff; pop rbp; ret; 
0x00000000422298: mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000004238c3: mov eax, 0xffffffff; pop rbx; ret; 
0x0000000040a908: mov eax, 0xffffffff; ret; 
0x00000000427935: mov eax, 0xffffffff; ret; 
0x0000000045c0a5: mov eax, [0x18]; test eax, eax; jne short 0x000000000045c0c0; syscall; 
0x0000000045c145: mov eax, [0x18]; test eax, eax; jne short 0x000000000045c160; mov eax, 0x1; syscall; 
0x0000000045c279: mov eax, [0x18]; test eax, eax; jne short 0x000000000045c2b0; mov eax, 0x48; syscall; 
0x0000000045c315: mov eax, [0x18]; test eax, eax; jne short 0x000000000045c330; mov eax, 0x3; syscall; 
0x00000000452b8b: mov eax, [0x2e6666c3c3000001]; nop [rax+rax]; nop [rax]; mov [rcx], dl; ret; 
0x0000000042890f: mov eax, [0x5c7484975000bc3]; cwde; ret; 
0x0000000044f090: mov eax, [0x77f8c5e0075c7f7e]; ret; 
0x0000000044f115: mov eax, [0x77f8c5f007447f7a]; ret; 
0x0000000044f070: mov eax, [0x77f8c5f0075c7f7a]; ret; 
0x0000000043c618: mov eax, [0x8d49931463490007]; adc al, 0x13; notrack jmp rdx; 
0x0000000040884e: mov eax, [0xc01901387f830f75]; and eax, 0xffffffea; ret; 
0x000000004605b3: mov eax, [0xfffffd0de900082b]; nop [rax]; ret; 
0x0000000040207f: mov eax, [0xfffffff2b8c30175]; ret; 
0x00000000409488: mov eax, [r12+0x4]; lea rdx, [rip+0xa0014]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000040a8fb: mov eax, [rax+0x10]; test rax, rax; je short 0x000000000040a908; jmp rax; 
0x0000000041ec29: mov eax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000040a91a: mov eax, [rax+0x18]; test rax, rax; je short 0x000000000040a928; jmp rax; 
0x0000000040a954: mov eax, [rax+0x18]; test rax, rax; je short 0x000000000040a988; mov rbx, rsi; call rax; 
0x00000000421e15: mov eax, [rax+0x20]; jmp rax; 
0x0000000046fe5f: mov eax, [rax+0x58]; mov rdx, 0xffffffffffffffe0; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x00000000427760: mov eax, [rax+0x68]; test rax, rax; jne short 0x0000000000427758; ret; 
0x000000004916e5: mov eax, [rax+0x8]; ret; 
0x000000004916f5: mov eax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x00000000480d55: mov eax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000480e8a: mov eax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000421e0e: mov eax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x0000000046e494: mov eax, [rax+rbp*8]; test rax, rax; je short 0x000000000046e49e; call rax; 
0x000000004a7900: mov eax, [rax+rbx*8]; test rax, rax; je short 0x00000000004a790a; call rax; 
0x000000004758f6: mov eax, [rax+rcx*8]; jmp rax; 
0x0000000046fdb3: mov eax, [rax+rdi*8+0x80]; ret; 
0x0000000047c5b1: mov eax, [rax+rsi*8]; jmp rax; 
0x00000000410906: mov eax, [rax+rsi]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000410907: mov eax, [rax+rsi]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000049067b: mov eax, [rax]; add [rcx-0x77], cl; ret; 
0x00000000402557: mov eax, [rax]; add rsp, 0x8; ret; 
0x000000004a16d9: mov eax, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x000000004a16e9: mov eax, [rax]; mov [r9], r8; add rsp, 0x8; ret; 
0x0000000040258c: mov eax, [rax]; mov eax, [rax]; ret; 
0x0000000046fdb0: mov eax, [rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000040258e: mov eax, [rax]; ret; 
0x0000000046e20e: mov eax, [rax]; test rax, rax; je short 0x000000000046e218; call rax; 
0x000000004284f9: mov eax, [rax]; test rax, rax; jne short 0x00000000004284f0; ret; 
0x0000000040a96a: mov eax, [rbp+0x10]; test rax, rax; je short 0x000000000040a988; call rax; 
0x0000000045d7ef: mov eax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x0000000049e586: mov eax, [rbp-0x8]; xor rax, fs:[0x28]; jne 0x000000000049e615; leave; ret; 
0x0000000048baba: mov eax, [rbx+0x10]; add rax, [r13]; call rax; 
0x0000000048befb: mov eax, [rbx+0x10]; add rax, [r15]; test ecx, ecx; jne short 0x000000000048bf07; call rax; 
0x0000000048c798: mov eax, [rbx+0x10]; add rax, [r15]; test edx, edx; jne short 0x000000000048c7a4; call rax; 
0x0000000048c088: mov eax, [rbx+0x10]; add rax, [r15]; test r11d, r11d; jne short 0x000000000048c095; call rax; 
0x000000004983d1: mov eax, [rbx+0x10]; mov [rax], rdi; pop rbx; ret; 
0x000000004983c1: mov eax, [rbx+0x10]; mov rdx, [rdi+0x30]; mov [rax], rdx; pop rbx; ret; 
0x000000004269b1: mov eax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000405add: mov eax, [rbx+0x20]; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x000000004270cd: mov eax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000042754f: mov eax, [rbx+0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x000000004983a5: mov eax, [rbx+0x8]; lea rdx, [rip+0x33bed]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004a32ca: mov eax, [rbx+0x8]; movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x00000000491697: mov eax, [rbx]; add al, ch; mov cl, 0x5; clc; call qword ptr [rax-0x5e1f00d]; 
0x00000000454f84: mov eax, [rcx+0x3]; mov [rdx+0x3], eax; lea rax, [rdx+0x6]; ret; 
0x00000000450c34: mov eax, [rcx+0x3]; mov [rdx+0x3], eax; mov rax, rdi; ret; 
0x00000000454f65: mov eax, [rcx+0x4]; mov [rdx+0x4], ax; lea rax, [rdx+0x5]; ret; 
0x00000000450c25: mov eax, [rcx+0x4]; mov [rdx+0x4], ax; mov rax, rdi; ret; 
0x00000000454f96: mov eax, [rcx+0x5]; mov [rdx+0x5], eax; lea rax, [rdx+0x8]; ret; 
0x00000000450c46: mov eax, [rcx+0x5]; mov [rdx+0x5], eax; mov rax, rdi; ret; 
0x00000000455017: mov eax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x00000000450c87: mov eax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000454fb6: mov eax, [rcx+0x6]; mov [rdx+0x6], eax; lea rax, [rdx+0x9]; ret; 
0x00000000450c56: mov eax, [rcx+0x6]; mov [rdx+0x6], eax; mov rax, rdi; ret; 
0x00000000455037: mov eax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000450ca7: mov eax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x00000000454fd6: mov eax, [rcx+0x7]; mov [rdx+0x7], eax; lea rax, [rdx+0xa]; ret; 
0x00000000450c66: mov eax, [rcx+0x7]; mov [rdx+0x7], eax; mov rax, rdi; ret; 
0x00000000455057: mov eax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x00000000450cc7: mov eax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x00000000454ff6: mov eax, [rcx+0x8]; mov [rdx+0x8], eax; lea rax, [rdx+0xb]; ret; 
0x00000000450c76: mov eax, [rcx+0x8]; mov [rdx+0x8], eax; mov rax, rdi; ret; 
0x00000000454ee7: mov eax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000450bb7: mov eax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x0000000044ab0a: mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000045addd: mov eax, [rcx+rax*4]; sub eax, [rcx+r8*4]; je short 0x000000000045adc8; ret; 
0x0000000044c3e2: mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x000000004304a9: mov eax, [rcx+rax+0x8]; sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x00000000480fef: mov eax, [rcx]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000454f11: mov eax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x00000000450be1: mov eax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x00000000454f40: mov eax, [rcx]; mov [rdx], eax; lea rax, [rdx+0x3]; ret; 
0x00000000450c00: mov eax, [rcx]; mov [rdx], eax; mov rax, rdi; ret; 
0x00000000454e91: mov eax, [rcx]; mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x00000000450b61: mov eax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000048e3c2: mov eax, [rcx]; ret; 
0x00000000408a80: mov eax, [rdi+0x10]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000428514: mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x0000000042853c: mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000048172e: mov eax, [rdi+0x10]; sub rdx, [rcx+0x10]; sar rdx, 0x2; sub eax, edx; ret; 
0x00000000481740: mov eax, [rdi+0x10]; sub rdx, [rcx+0x8]; sar rdx, 0x2; sub eax, edx; ret; 
0x0000000045e230: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045e5bb; mov rdi, [r15]; call rbx; 
0x0000000045e395: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045e629; mov rdi, [r15]; call rbx; 
0x0000000045e2b4: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045e697; mov rdi, [r15]; call rbx; 
0x0000000045e449: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045e705; mov rdi, [r15]; call rbx; 
0x0000000045e30e: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045e773; mov rdi, [r15]; call rbx; 
0x0000000045e2e1: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045e7e1; mov rdi, [r15]; call rbx; 
0x0000000045e368: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045e84f; mov rdi, [r15]; call rbx; 
0x0000000045e3ef: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045e8bd; mov rdi, [r15]; call rbx; 
0x0000000045e25a: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045e92b; mov rdi, [r15]; call rbx; 
0x0000000045e33b: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045e999; mov rdi, [r15]; call rbx; 
0x0000000045e41c: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045ea07; mov rdi, [r15]; call rbx; 
0x0000000045e287: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045ea75; mov rdi, [r15]; call rbx; 
0x0000000045e3c2: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045eae3; mov rdi, [r15]; call rbx; 
0x0000000045e476: mov eax, [rdi+0x10]; test r8, r8; jne 0x000000000045eb51; mov rdi, [r15]; call rbx; 
0x0000000045e49f: mov eax, [rdi+0x10]; test r8, r8; jne short 0x000000000045e4e2; mov rdi, [r15]; call rbx; 
0x0000000045e4c8: mov eax, [rdi+0x10]; test r8, r8; jne short 0x000000000045e54d; mov rdi, [r15]; call rbx; 
0x00000000408a90: mov eax, [rdi+0x14]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408aa0: mov eax, [rdi+0x18]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408ab0: mov eax, [rdi+0x1c]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408ac0: mov eax, [rdi+0x20]; mov [rdx], eax; xor eax, eax; ret; 
0x0000000046f606: mov eax, [rdi+0x20]; mov rbp, rdi; test rax, rax; je short 0x000000000046f613; call rax; 
0x000000004a7bd5: mov eax, [rdi+0x20]; test rax, rax; je short 0x00000000004a7be4; call rax; 
0x00000000408a40: mov eax, [rdi+0x24]; mov [rdx], eax; xor eax, eax; ret; 
0x000000004292b5: mov eax, [rdi+0x28]; cmp [rdi+0x10], rax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x00000000429e03: mov eax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x0000000042683f: mov eax, [rdi+0x48]; mov [rdi+0x48], rdx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x00000000408a50: mov eax, [rdi+0x4]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000428885: mov eax, [rdi+0x68]; ret; 
0x000000004289ab: mov eax, [rdi+0x8]; cmp rax, rdx; jae short 0x00000000004289d8; movzx eax, byte ptr [rax]; ret; 
0x00000000408a60: mov eax, [rdi+0x8]; mov [rdx], eax; xor eax, eax; ret; 
0x000000004a3935: mov eax, [rdi+0x90]; ret; 
0x000000004a39a5: mov eax, [rdi+0x98]; ret; 
0x00000000480d35: mov eax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x0000000000480d48; ret; 
0x000000004a39e5: mov eax, [rdi+0xa0]; ret; 
0x000000004a3a45: mov eax, [rdi+0xa8]; ret; 
0x000000004a3a35: mov eax, [rdi+0xb0]; ret; 
0x000000004a39f5: mov eax, [rdi+0xb8]; ret; 
0x00000000408a70: mov eax, [rdi+0xc]; mov [rdx], eax; xor eax, eax; ret; 
0x0000000043a754: mov eax, [rdi-0x4]; cmp ecx, eax; jne 0x000000000043b16f; xor eax, eax; ret; 
0x0000000043acb1: mov eax, [rdi-0x8]; cmp rcx, rax; jne 0x000000000043b163; xor eax, eax; ret; 
0x0000000043ddc1: mov eax, [rdi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000429725: mov eax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000429730; ret; 
0x00000000429385: mov eax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000429390; ret; 
0x00000000429785: mov eax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000429790; ret; 
0x000000004293c5: mov eax, [rdi]; cmp rax, 0xffff; jbe short 0x00000000004293d0; ret; 
0x0000000049bfd5: mov eax, [rdi]; cmp rax, rsi; je short 0x000000000049bfe0; ret; 
0x00000000428506: mov eax, [rdi]; mov [rdx], rax; ret; 
0x000000004293e5: mov eax, [rdi]; nop; mov [rip+0xb93b9], rax; ret; 
0x00000000429375: mov eax, [rdi]; nop; mov [rip+0xb93d9], rax; ret; 
0x00000000429365: mov eax, [rdi]; nop; mov [rip+0xb93f1], rax; ret; 
0x00000000429775: mov eax, [rdi]; nop; mov [rip+0xbb5b6], eax; ret; 
0x00000000429755: mov eax, [rdi]; nop; mov dword ptr [rip+0xb9012], 0x1; mov [rip+0xb9004], eax; ret; 
0x00000000429705: mov eax, [rdi]; nop; mov dword ptr [rip+0xb9062], 0x1; mov [rip+0xb902f], rax; ret; 
0x000000004296e5: mov eax, [rdi]; nop; mov dword ptr [rip+0xb9082], 0x1; mov [rip+0xb9047], rax; ret; 
0x000000004a5a94: mov eax, [rdi]; test eax, eax; jne short 0x00000000004a5aa0; ret; 
0x000000004a5cd4: mov eax, [rdi]; test eax, eax; jne short 0x00000000004a5ce0; ret; 
0x00000000422bce: mov eax, [rdx+0x4c]; cmp [rdx+0x48], eax; cmovne eax, ecx; ret; 
0x00000000448706: mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000048f68a: mov eax, [rdx+rax]; mov edx, 0x0; cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x000000004109e0: mov eax, [rdx+rsi]; mov [rip+0xd38ff], eax; lea rax, [rip+0xd38f0]; ret; 
0x000000004991e4: mov eax, [rip+0x4c79e]; ret; 
0x0000000048f1a5: mov eax, [rip+0x52f8d]; mov [rdi], rax; mov rax, [rip+0x562b3]; mov [rsi], rax; ret; 
0x0000000048f1af: mov eax, [rip+0x562b3]; mov [rsi], rax; ret; 
0x0000000048f13e: mov eax, [rip+0x5632c]; mov rax, r8; ret; 
0x0000000048f03c: mov eax, [rip+0x5642e]; jne short 0x000000000048f050; lea rax, [r8+0x1]; mov [rip+0x56421], rax; ret; 
0x000000004847a1: mov eax, [rip+0x5d2f1]; test rax, rax; je short 0x00000000004847e0; call rax; 
0x00000000478bc9: mov eax, [rip+0x6cef9]; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000472779: mov eax, [rip+0x73349]; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000046d205: mov eax, [rip+0x77c45]; ret; 
0x00000000464ce8: mov eax, [rip+0x8014e]; test eax, eax; je short 0x0000000000464cf8; ret; 
0x00000000463855: mov eax, [rip+0x821ad]; ret; 
0x00000000461314: mov eax, [rip+0x846d6]; test eax, eax; je short 0x0000000000461320; ret; 
0x0000000045f824: mov eax, [rip+0x8615e]; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x0000000045cf65: mov eax, [rip+0x861ed]; test rax, rax; je short 0x000000000045cf71; ret; 
0x00000000428865: mov eax, [rip+0xb98f5]; ret; 
0x000000004037d4: mov eax, [rip+0xde92a]; ret; 
0x00000000403154: mov eax, [rip+0xdefae]; test eax, eax; js short 0x0000000000403160; ret; 
0x00000000402174: mov eax, [rip+0xe2156]; test eax, eax; je short 0x0000000000402180; ret; 
0x000000004a457a: mov eax, [rsi+0x10]; add rsp, 0x8; ret; 
0x000000004077f0: mov eax, [rsi+0x14]; cmp [rdi+0x14], eax; sete al; ret; 
0x000000004a17da: mov eax, [rsi+0xa8]; add rsp, 0x8; ret; 
0x000000004a1839: mov eax, [rsi+0xb0]; add rsp, 0x8; ret; 
0x000000004a17ed: mov eax, [rsi+0xb8]; add rsp, 0x8; ret; 
0x00000000475509: mov eax, [rsi+rax*8]; jmp rax; 
0x0000000049233a: mov eax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000041120a: mov eax, [rsp+0x18]; call rax; 
0x00000000466cfa: mov eax, [rsp+0x20]; call rax; 
0x00000000465159: mov eax, [rsp+0x28]; call rax; 
0x00000000465efc: mov eax, [rsp+0x30]; call rax; 
0x0000000046cda7: mov eax, [rsp+0x48]; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000409489: mov eax, [rsp+0x4]; lea rdx, [rip+0xa0014]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000045c102: mov eax, [rsp+0x8]; add rsp, 0x28; ret; 
0x000000004a43b3: mov eax, [rsp+0x8]; mov [rsp+0x10], r10; call rax; 
0x0000000045d349: mov eax, [rsp+0x8]; mov rdi, r13; call rax; 
0x000000004a586b: mov eax, [rsp+0x8]; mov rdx, r15; mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x0000000046feb8: mov eax, [rsp+0x8]; xor rax, fs:[0x28]; jne short 0x000000000046fecc; add rsp, 0x18; ret; 
0x00000000408f64: mov eax, [rsp+0xc]; add rsp, 0x18; pop rbp; pop r12; ret; 
0x0000000045c35f: mov eax, [rsp+0xc]; add rsp, 0x18; ret; 
0x000000004a11cd: mov eax, [rsp]; add rsp, 0x38; ret; 
0x0000000041e31c: mov eax, [rsp]; call rax; 
0x00000000421395: mov eax, [rsp]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000041e481: mov eax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x0000000041e281: mov eax, [rsp]; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000041e40c: mov eax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x000000004905de: mov eax, [rsp]; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000041e1af: mov eax, eax; add rsp, 0x118; ret; 
0x0000000045c342: mov eax, eax; mov eax, 0x3; syscall; 
0x0000000045c036: mov eax, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000045c182: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x0000000045c2ca: mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x0000000045c0e2: mov eax, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x0000000042e89a: mov eax, eax; pop r12; pop r13; ret; 
0x00000000429b5e: mov eax, eax; pop r12; ret; 
0x0000000042e907: mov eax, eax; pop r13; ret; 
0x00000000420d08: mov eax, eax; pop rbp; pop r12; ret; 
0x0000000042d9b4: mov eax, eax; pop rbp; ret; 
0x00000000420d5e: mov eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000004050ef: mov eax, eax; pop rbx; pop rbp; ret; 
0x0000000041f0ee: mov eax, eax; pop rbx; ret; 
0x0000000041ef01: mov eax, eax; ret; 
0x00000000484604: mov eax, eax; shr rax, 0x2; vzeroupper; ret; 
0x0000000045b8f2: mov eax, eax; syscall; 
0x00000000483491: mov eax, eax; vzeroupper; ret; 
0x00000000405c5c: mov eax, ebp; add rsp, 0x8; pop rbp; pop r12; ret; 
0x000000004a389d: mov eax, ebp; mov rcx, r12; mov esi, 0x1a; mov edi, 0x1; call rax; 
0x000000004a3820: mov eax, ebp; mov rcx, r12; mov esi, 0xa; mov edi, 0x1; call rax; 
0x00000000499556: mov eax, ebp; pop r12; pop r13; ret; 
0x0000000045d749: mov eax, ebp; pop rbp; pop r12; pop r13; ret; 
0x0000000042472e: mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x000000004a3b53: mov eax, ebp; pop rbx; pop rbp; ret; 
0x0000000049e7b3: mov eax, ebx; adc rax, rdx; pop rbp; pop rbx; ret; 
0x00000000481919: mov eax, ebx; and eax, 0xc; cmp eax, 0x4; je short 0x0000000000481924; ret; 
0x000000004a374c: mov eax, ebx; mov rcx, r12; or esi, 0x2; mov edi, 0x1; call rax; 
0x00000000425089: mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x00000000404ed0: mov eax, ebx; pop rbx; pop rbp; ret; 
0x00000000404c47: mov eax, ebx; pop rbx; ret; 
0x0000000042e387: mov eax, ebx; syscall; 
0x0000000049e67b: mov eax, ecx; adc eax, eax; ret; 
0x00000000470143: mov eax, ecx; add rsp, 0x148; ret; 
0x000000004850f0: mov eax, ecx; add rsp, 0x38; ret; 
0x0000000045a89f: mov eax, ecx; and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x000000004817b1: mov eax, ecx; lea rdx, [r8+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x0000000045d004: mov eax, ecx; mov r9, [rsp+0x8]; syscall; 
0x00000000407cd5: mov eax, ecx; movsxd rdx, [r9+r8*4]; add rdx, r9; notrack jmp rdx; 
0x00000000415d96: mov eax, ecx; pop r12; ret; 
0x00000000478678: mov eax, ecx; pop r14; ret; 
0x00000000415d68: mov eax, ecx; pop rbx; pop rbp; pop r12; ret; 
0x0000000045a803: mov eax, ecx; pop rbx; shr eax, 0x6; and eax, 0x3fffc00; ret; 
0x0000000045a7b8: mov eax, ecx; pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x00000000490db3: mov eax, ecx; sub eax, r8d; ret; 
0x0000000041e15f: mov eax, ecx; syscall; 
0x0000000047866b: mov eax, edi; call far fword ptr [rbx+0x5d]; 
0x00000000428895: mov eax, edi; ret; 
0x000000004527df: mov eax, edi; sub r8, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000452d30; ret; 
0x000000004529d5: mov eax, edi; sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000452d30; ret; 
0x000000004529f7: mov eax, edi; sub r8, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000452d30; ret; 
0x00000000452a1d: mov eax, edi; sub r8, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000452d30; ret; 
0x00000000452a35: mov eax, edi; sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000452d30; ret; 
0x00000000452a5b: mov eax, edi; sub r8, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000452d30; ret; 
0x00000000452a7d: mov eax, edi; sub r8, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000452d30; ret; 
0x00000000452a9b: mov eax, edi; sub r8, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000452d30; ret; 
0x00000000452777: mov eax, edi; sub r8, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000452d30; ret; 
0x00000000452abd: mov eax, edi; sub r8, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000452d30; ret; 
0x00000000452add: mov eax, edi; sub r8, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000452d30; ret; 
0x00000000452afd: mov eax, edi; sub r8, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000452d30; ret; 
0x00000000452b1d: mov eax, edi; sub r8, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000452d30; ret; 
0x00000000452b3f: mov eax, edi; sub r8, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000452d30; ret; 
0x00000000452b5f: mov eax, edi; sub r8, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000452d30; ret; 
0x00000000452b7f: mov eax, edi; sub r8, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000452d30; ret; 
0x0000000044f341: mov eax, edi; vzeroupper; ret; 
0x0000000045a7d6: mov eax, edx; and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000045a861: mov eax, edx; pop rbx; ret; 
0x0000000044f529: mov eax, edx; ret; 
0x00000000411242: mov eax, edx; syscall; 
0x00000000470209: mov eax, esi; mov r10d, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x00000000492469: mov eax, esi; mov rsp, r8; mov rbp, r9; nop; jmp rdx; 
0x0000000045b8e2: mov eax, esi; syscall; 
0x000000004a3cb9: mov eax, esp; mov rcx, r14; mov esi, 0x1; mov edi, 0x1; call rax; 
0x000000004025d4: mov eax, esp; pop r12; pop r13; ret; 
0x0000000040324f: mov eax, esp; pop r12; ret; 
0x0000000045de42: mov eax, esp; pop rbp; pop r12; jmp rax; 
0x0000000045d1c9: mov eax, esp; pop rbp; pop r12; pop r13; jmp rax; 
0x00000000402eef: mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x00000000402483: mov eax, esp; pop rbp; pop r12; ret; 
0x00000000407c8c: mov eax, esp; pop rbx; pop r12; ret; 
0x00000000407a18: mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x0000000045c0a4: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000045c0c0; syscall; 
0x0000000045c144: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000045c160; mov eax, 0x1; syscall; 
0x0000000045c278: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000045c2b0; mov eax, 0x48; syscall; 
0x0000000045c314: mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000045c330; mov eax, 0x3; syscall; 
0x0000000048fa6c: mov eax, fs:[rax]; ret; 
0x0000000040b4c3: mov eax, fs; or [rax], eax; ret; 
0x00000000481918: mov eax, r11d; and eax, 0xc; cmp eax, 0x4; je short 0x0000000000481924; ret; 
0x000000004025d3: mov eax, r12d; pop r12; pop r13; ret; 
0x0000000040324e: mov eax, r12d; pop r12; ret; 
0x00000000402eee: mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x00000000402482: mov eax, r12d; pop rbp; pop r12; ret; 
0x000000004927a4: mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000407a17: mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000041e1ad: mov eax, r8d; add rsp, 0x118; ret; 
0x0000000041e1ae: mov eax, r8d; add rsp, 0x118; ret; 
0x00000000420d07: mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000420d5d: mov eax, r8d; pop rbx; pop rbp; pop r12; ret; 
0x000000004050ed: mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000041f0ed: mov eax, r8d; pop rbx; ret; 
0x00000000495895: mov eax, r8d; ret; 
0x0000000045b8f1: mov eax, r8d; syscall; 
0x00000000470141: mov eax, r9d; add rsp, 0x148; ret; 
0x000000004850ef: mov eax, r9d; add rsp, 0x38; ret; 
0x00000000422f85: mov eax, r9d; syscall; 
0x0000000040d8ac: mov ebp, 0x48c30009; lea eax, [rip+0x9bcf9]; ret; 
0x0000000040d89c: mov ebp, 0x48c30009; lea eax, [rip+0x9bd00]; ret; 
0x0000000040d8a4: mov ebp, 0x48c30009; lea eax, [rip+0x9bd08]; ret; 
0x0000000040d864: mov ebp, 0x48c30009; lea eax, [rip+0x9bd1d]; ret; 
0x0000000040d86c: mov ebp, 0x48c30009; lea eax, [rip+0x9bd1e]; ret; 
0x0000000040d824: mov ebp, 0x48c30009; lea eax, [rip+0x9bd3b]; ret; 
0x0000000040d82c: mov ebp, 0x48c30009; lea eax, [rip+0x9bd3c]; ret; 
0x0000000040d894: mov ebp, 0x48c30009; lea eax, [rip+0x9bd71]; ret; 
0x0000000040d88c: mov ebp, 0x48c30009; lea eax, [rip+0x9bd72]; ret; 
0x0000000040d884: mov ebp, 0x48c30009; lea eax, [rip+0x9bd74]; ret; 
0x0000000040d87c: mov ebp, 0x48c30009; lea eax, [rip+0x9bd76]; ret; 
0x0000000040d844: mov ebp, 0x48c30009; lea eax, [rip+0x9bd79]; ret; 
0x0000000040d84c: mov ebp, 0x48c30009; lea eax, [rip+0x9bd7f]; ret; 
0x0000000040d83c: mov ebp, 0x48c30009; lea eax, [rip+0x9bd88]; ret; 
0x0000000040d76c: mov ebp, 0x48c30009; lea eax, [rip+0x9bdb7]; ret; 
0x0000000040d854: mov ebp, 0x48c30009; lea eax, [rip+0xbdf90]; ret; 
0x00000000482c4c: mov ebp, 0xf80148c0; ret; 
0x00000000482edc: mov ebp, 0xf80148c6; ret; 
0x0000000047c6f8: mov ebp, 0xfffffb28; fdivp st(7), st; call far fword ptr [rdi]; 
0x0000000048db9e: mov ebp, 0xfffffba0; lea rsi, [rbp-0x430]; mov eax, 0x14; syscall; 
0x000000004a3cf8: mov ebp, [rbp-0x18]; mov r14, [rbp-0x10]; mov r15, [rbp-0x8]; leave; ret; 
0x000000004a3e71: mov ebp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x0000000045df98: mov ebp, [rsp+0x10]; test r13, r13; jne short 0x000000000045dff0; mov rdi, [r12]; call rbx; 
0x0000000045dfc8: mov ebp, [rsp+0x10]; test r13, r13; jne short 0x000000000045e050; mov rdi, [r12]; call rbx; 
0x00000000470479: mov ebp, eax; mov rdi, r12; call rbx; 
0x0000000045d723: mov ebp, ebx; mov rdi, rbp; call r12; 
0x0000000047b60b: mov ebp, ebx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x0000000049246f: mov ebp, ecx; nop; jmp rdx; 
0x0000000041e485: mov ebp, edi; add r15, r12; call rax; 
0x0000000045c446: mov ebp, edi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000046f60a: mov ebp, edi; test rax, rax; je short 0x000000000046f613; call rax; 
0x0000000048f80c: mov ebp, esp; mov rsi, rbp; syscall; 
0x00000000442907: mov ebx, 0x46f00ff2; ret far; 
0x00000000442901: mov ebx, 0x477f0ff3; mov ebx, 0x46f00ff2; ret far; 
0x000000004319e1: mov ebx, 0x4800027b; cmove eax, edx; ret; 
0x0000000048c2b9: mov ebx, 0x4a0003d8; movsxd eax, [rdi]; add rax, rdi; notrack jmp rax; 
0x0000000043d433: mov ebx, 0x4e6f0ff3; ret far; 
0x0000000043d452: mov ebx, 0x4f7f0ff3; ret far; 
0x00000000415ea4: mov ebx, 0x850f5f3c; test byte ptr [rax], 0x0; add [rax-0x7d], cl; ret; 
0x000000004818b8: mov ebx, 0xafb8341; je short 0x00000000004818c0; ret; 
0x0000000040c1ab: mov ebx, 0xc30009d3; lea rax, [rip+0x9d3bc]; ret; 
0x00000000491696: mov ebx, 0xe800038b; mov cl, 0x5; clc; call qword ptr [rax-0x5e1f00d]; 
0x00000000466a63: mov ebx, 0xffff6de9; jmp far fword ptr [rax-0x777af0fe]; 
0x0000000048ca78: mov ebx, [rbp-0xf0]; mov r10, [rbp-0xd8]; mov [rbp-0xf0], r11; mov [rbp-0xd8], r10; call r15; 
0x0000000048c377: mov ebx, [rbp-0xf0]; nop [rax]; mov [rbp-0xf0], r11; call r10; 
0x0000000043cc41: mov ebx, [rsi-0x10]; mov rdx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000004917f1: mov ebx, [rsp+0x30]; mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000049176f: mov ebx, [rsp+0x30]; mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x000000004905e5: mov ebx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000048fdcc: mov ebx, [rsp]; add rsp, 0x30; bnd jmp r11; 
0x0000000048fede: mov ebx, [rsp]; add rsp, 0x30; bnd ret; 
0x0000000047ca64: mov ebx, ecx; mov dword ptr [rbp-0x4d0], 0x1; mov r9d, 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c80c: mov ebx, ecx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047c5a4: mov ebx, ecx; mov dword ptr [rbp-0x4e8], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047ca24: mov ebx, ecx; mov dword ptr [rbp-0x4f8], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047cb2c: mov ebx, ecx; mov dword ptr [rbp-0x508], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c3e4: mov ebx, ecx; mov dword ptr [rbp-0x514], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047caf2: mov ebx, ecx; mov dword ptr [rbp-0x520], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c364: mov ebx, ecx; mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047b98c: mov ebx, ecx; xor r9d, r9d; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004021a7: mov ebx, edi; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000408b3b: mov ebx, edi; sub rsp, 0x8; movsxd rax, [rcx+rsi*4]; add rax, rcx; notrack jmp rax; 
0x00000000480d4d: mov ebx, edi; test byte ptr [rdi], 0x2; jne short 0x0000000000480dc8; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000040a95d: mov ebx, esi; call rax; 
0x0000000040a9c2: mov ebx, esi; mov rdi, rsi; call rax; 
0x000000004718c2: mov ecx, 0x1000736; xor eax, eax; add rsp, 0x8; ret; 
0x0000000047ca71: mov ecx, 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x000000004864e1: mov ecx, 0x1f0f0005; add [rax-0x77], cl; ret far; 
0x0000000049582f: mov ecx, 0x24e9fff6; out 0xff, eax; jmp qword ptr [rsi+0xf]; 
0x0000000041e15a: mov ecx, 0x27; mov eax, ecx; syscall; 
0x00000000425144: mov ecx, 0x3; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x00000000431c43: mov ecx, 0x4800027c; cmove eax, edx; ret; 
0x000000004096d2: mov ecx, 0x48fffffc; movsxd eax, [rbx+rcx*4]; add rax, rbx; notrack jmp rax; 
0x0000000041faf7: mov ecx, 0x894c0005; out 0x89, eax; mov r12b, 0xe8; ret far; 
0x000000004736dc: mov ecx, 0x8bfffff1; test [rax], edx; idiv edi; inc dword ptr [rcx]; ret; 
0x00000000407fa6: mov ecx, 0x8c48348; pop rbx; pop rbp; ret; 
0x0000000045d091: mov ecx, 0x9; xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x0000000040cd0b: mov ecx, 0xc30009c8; lea rax, [rip+0x9c8bf]; ret; 
0x0000000045be35: mov ecx, 0xffffffc0; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000046fd84: mov ecx, 0xffffffe8; mov fs:[rcx], rdx; mov rdx, 0xffffffffffffffe0; mov fs:[rdx], rax; ret; 
0x000000004806f6: mov ecx, [rax+0x10]; mov [rax], rdx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x000000004096d9: mov ecx, [rax+0x1]; fdivr st, dword ptr [rsi]; jmp rax; 
0x000000004407fe: mov ecx, [rbp+0x1]; fnstcw [rsi]; jmp r9; 
0x00000000445f03: mov ecx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x00000000445ef0: mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x00000000445eef: mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x00000000445ede: mov ecx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000048fdf4: mov ecx, [rdi+0x18]; mov rsi, [rdi+0x20]; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000043b24e: mov ecx, [rdi-0x73]; or al, 0xb; notrack jmp r9; 
0x00000000448703: mov ecx, [rdx+rcx*4]; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x0000000043dc7f: mov ecx, [rip+0xa5433]; lea r11, [rip+0x78e64]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043dc25: mov ecx, [rip+0xa548d]; lea r11, [rip+0x78e7e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043b29f: mov ecx, [rip+0xa7e13]; lea r11, [rip+0x7b684]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043b23e: mov ecx, [rip+0xa7e74]; lea r11, [rip+0x7b6a5]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000456b95: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000004554e5: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x00000000456bd4: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x00000000455524: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x00000000455514: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x00000000456c55: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000004555a5: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x00000000455585: mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x000000004555e8: mov ecx, [rsi+0x17]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x000000004555c9: mov ecx, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x00000000455608: mov ecx, [rsi+0x18]; movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x00000000456c15: mov ecx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x00000000455545: mov ecx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x00000000456bb4: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x00000000455504: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x00000000456c35: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x00000000455565: mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x000000004570a4: mov ecx, [rsi+rdx-0x3]; mov [rdi+rdx-0x3], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000044e984: mov ecx, [rsi+rdx-0x3]; mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x00000000459613: mov ecx, [rsi+rdx-0x4]; mov esi, [rsi]; mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x0000000044e994: mov ecx, [rsi+rdx-0x7]; mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x00000000459603: mov ecx, [rsi+rdx-0x8]; mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x0000000043d1f5: mov ecx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x0000000045896f: mov ecx, [rsi-0x4]; cmp eax, ecx; jne 0x0000000000458b80; xor eax, eax; ret; 
0x0000000043a9b6: mov ecx, [rsi-0x4]; cmp ecx, eax; jne 0x000000000043b16f; xor eax, eax; ret; 
0x0000000043d5d3: mov ecx, [rsi-0x4]; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043d7d3: mov ecx, [rsi-0x4]; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043d9d3: mov ecx, [rsi-0x4]; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x00000000442744: mov ecx, [rsi-0x4]; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x000000004426c4: mov ecx, [rsi-0x4]; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000442644: mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x000000004425c4: mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x0000000043a72b: mov ecx, [rsi-0x8]; cmp rcx, rax; jne 0x000000000043b163; xor eax, eax; ret; 
0x0000000043b137: mov ecx, [rsi-0x8]; cmp rcx, rax; jne short 0x000000000043b163; xor eax, eax; ret; 
0x00000000442535: mov ecx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x000000004424a5: mov ecx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000442415: mov ecx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043ce21: mov ecx, [rsi-0x9]; mov edx, [rsi-0x4]; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d001: mov ecx, [rsi-0xa]; mov edx, [rsi-0x4]; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d1e1: mov ecx, [rsi-0xb]; mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d3c1: mov ecx, [rsi-0xc]; mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d5b1: mov ecx, [rsi-0xd]; mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d7b1: mov ecx, [rsi-0xe]; mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d9b1: mov ecx, [rsi-0xf]; mov rdx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000443155: mov ecx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x00000000443073: mov ecx, [rsi]; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x00000000442eb5: mov ecx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x00000000443003: mov ecx, [rsi]; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x00000000442e45: mov ecx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x00000000442f93: mov ecx, [rsi]; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x00000000442dd5: mov ecx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x00000000456a50: mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; lea rax, [rdi+0x4]; ret; 
0x00000000455410: mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x00000000442d65: mov ecx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x00000000442cf5: mov ecx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x00000000442c85: mov ecx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x00000000442c15: mov ecx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x00000000456aa1: mov ecx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x00000000455451: mov ecx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x00000000456a31: mov ecx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; lea rax, [rdi+0x2]; ret; 
0x000000004553f1: mov ecx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x000000004560e1: mov ecx, [rsi]; mov dl, [rsi+0x2]; mov [rdi], cx; mov [rdi+0x2], dl; ret; 
0x00000000456100: mov ecx, [rsi]; mov dl, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dl; ret; 
0x00000000456141: mov ecx, [rsi]; mov dl, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dl; ret; 
0x00000000455420: mov ecx, [rsi]; mov dx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x00000000455461: mov ecx, [rsi]; mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x00000000455430: mov ecx, [rsi]; mov edx, [rsi+0x3]; mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x00000000455471: mov ecx, [rsi]; mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x00000000455481: mov ecx, [rsi]; mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x00000000455491: mov ecx, [rsi]; mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x000000004554a1: mov ecx, [rsi]; mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x000000004554b1: mov ecx, [rsi]; mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x000000004922dd: mov ecx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x00000000483c3b: mov ecx, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x0000000046a85a: mov ecx, [rsp+0x18]; mov rcx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000046cdac: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000467f72: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x000000004653f9: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x00000000466f60: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000046a27e: mov ecx, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000041f93b: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000041f952; add rsp, 0xd8; ret; 
0x0000000045ccf5: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000045cd4b; add rsp, 0x58; ret; 
0x0000000045cd93: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000045cdeb; add rsp, 0x58; ret; 
0x0000000045f9d4: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000045f9eb; add rsp, 0xd8; ret; 
0x00000000471f6b: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000471f82; add rsp, 0xd8; ret; 
0x000000004984af: mov ecx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x00000000004984c3; add rsp, 0x28; ret; 
0x0000000045b7d3: mov ecx, [rsp+0x20]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x0000000046737f: mov ecx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000466163: mov ecx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000465eed: mov ecx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x0000000046b9e3: mov ecx, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x00000000465b78: mov ecx, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call r15; 
0x0000000046a85f: mov ecx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000045c259: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne 0x000000000045c305; add rsp, 0x68; ret; 
0x0000000045cbae: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x000000000045cc03; add rsp, 0x68; ret; 
0x000000004919bc: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000004919f3; add rsp, 0x38; ret; 
0x00000000492708: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000492735; add rsp, 0x38; ret; 
0x0000000049eb18: mov ecx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x000000000049eb2c; add rsp, 0x38; ret; 
0x00000000467f6d: mov ecx, [rsp+0x30]; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x000000004694f4: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000468f00: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x000000004684c0: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000466ceb: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000046b591: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000469e94: mov ecx, [rsp+0x30]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000404fdd: mov ecx, [rsp+0x38]; xor rcx, fs:[0x28]; jne short 0x0000000000404ff1; add rsp, 0x48; ret; 
0x000000004917fb: mov ecx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x00000000491779: mov ecx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000491a88: mov ecx, [rsp+0x48]; xor rcx, fs:[0x28]; jne short 0x0000000000491ac4; add rsp, 0x58; ret; 
0x00000000491f18: mov ecx, [rsp+0x48]; xor rcx, fs:[0x28]; jne short 0x0000000000491f54; add rsp, 0x58; ret; 
0x00000000491bfa: mov ecx, [rsp+0x58]; xor rcx, fs:[0x28]; jne short 0x0000000000491c44; add rsp, 0x68; ret; 
0x00000000470228: mov ecx, [rsp+0x88]; xor rcx, fs:[0x28]; jne 0x00000000004702d6; add rsp, 0x98; ret; 
0x0000000045d007: mov ecx, [rsp+0x8]; syscall; 
0x00000000408aff: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x0000000000408b13; add rsp, 0x18; ret; 
0x0000000045cc3d: mov ecx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x000000000045cc93; add rsp, 0x18; ret; 
0x00000000485250: mov ecx, eax; and ecx, [rsi+0x10]; lea rcx, [rsi+rcx*4]; add eax, [rcx+rdx]; ret; 
0x0000000048e3bb: mov ecx, eax; cmp rcx, rdx; jne short 0x000000000048e398; mov eax, [rcx]; ret; 
0x0000000045addb: mov ecx, eax; mov eax, [rcx+rax*4]; sub eax, [rcx+r8*4]; je short 0x000000000045adc8; ret; 
0x00000000497eb3: mov ecx, edx; add al, 0x0; mov [rip+0x4d16a], rax; ret; 
0x000000004285aa: mov ecx, edx; add rax, rcx; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x000000004595e6: mov ecx, edx; rep movsb [rdi], [rsi]; ret; 
0x000000004a3cbc: mov ecx, esi; mov esi, 0x1; mov edi, 0x1; call rax; 
0x00000000422caf: mov ecx, esi; mov rdi, r15; call r12; 
0x0000000045b64e: mov ecx, esi; mov rsi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x000000004629f3: mov ecx, esi; mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x000000004a38a0: mov ecx, esp; mov esi, 0x1a; mov edi, 0x1; call rax; 
0x000000004a3823: mov ecx, esp; mov esi, 0xa; mov edi, 0x1; call rax; 
0x0000000045b656: mov ecx, esp; mov rdx, r13; call rbx; 
0x000000004a374f: mov ecx, esp; or esi, 0x2; mov edi, 0x1; call rax; 
0x00000000431921: mov edi, 0x1000b34; je short 0x00000000004318e1; ret; 
0x000000004a3754: mov edi, 0x1; call rax; 
0x000000004a42a0: mov edi, 0x1; jmp rax; 
0x0000000041e18f: mov edi, 0x2; mov eax, 0xe; syscall; 
0x00000000422f80: mov edi, 0x2; mov eax, r9d; syscall; 
0x00000000410fa3: mov edi, 0x3001; mov eax, 0x9e; syscall; 
0x00000000411290: mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x000000004112c1: mov edi, 0x3003; mov eax, 0x9e; syscall; 
0x0000000049c1af: mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x00000000456981: mov edi, 0x4900060e; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004243bd: mov edi, 0x4c000000; mov edx, ebp; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000401cd7: mov edi, 0x4e3b70; jmp rax; 
0x0000000040cd13: mov edi, 0xc30009c8; lea rax, [rip+0xbead0]; ret; 
0x0000000046d4bc: mov edi, 0xff254ee8; jmp qword ptr [rsi+0x66]; 
0x0000000045bfbf: mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000045e503: mov edi, [rax]; call rbx; 
0x000000004a678c: mov edi, [rbp+0x10]; add rdi, rbp; call r12; 
0x0000000045d2a7: mov edi, [rbp+0x10]; test rdi, rdi; jne short 0x000000000045d2d6; mov rdi, [rbp]; call rbx; 
0x0000000048db9d: mov edi, [rbp-0x460]; lea rsi, [rbp-0x430]; mov eax, 0x14; syscall; 
0x000000004a3d00: mov edi, [rbp-0x8]; leave; ret; 
0x000000004a3e6d: mov edi, [rbp-0x8]; mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x0000000045d2b0: mov edi, [rbp]; call rbx; 
0x0000000048fdfc: mov edi, [rdi+0x28]; bnd call r11; 
0x0000000045e23d: mov edi, [rdi]; call rbx; 
0x000000004916a5: mov edi, [rip+0x53955]; lea rax, [rdi-0x1]; cmp rax, 0xfffffffffffffffd; jbe short 0x00000000004916c0; ret; 
0x0000000045e0bf: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000045e2d2; mov rdi, [r14]; call rbx; 
0x0000000045e17f: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000045e32c; mov rdi, [r14]; call rbx; 
0x0000000045e14f: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000045e386; mov rdi, [r14]; call rbx; 
0x0000000045e11f: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000045e3e0; mov rdi, [r14]; call rbx; 
0x0000000045e0ef: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000045e43a; mov rdi, [r14]; call rbx; 
0x0000000045e1af: mov edi, [rsi+0x10]; test r15, r15; jne 0x000000000045e494; mov rdi, [r14]; call rbx; 
0x0000000045e1db: mov edi, [rsi+0x10]; test r15, r15; jne short 0x000000000045e221; mov rdi, [r14]; call rbx; 
0x0000000045e207: mov edi, [rsi+0x10]; test r15, r15; jne short 0x000000000045e278; mov rdi, [r14]; call rbx; 
0x0000000045e0cc: mov edi, [rsi]; call rbx; 
0x0000000049233f: mov edi, [rsp+0x18]; call rax; 
0x000000004922e2: mov edi, [rsp+0x18]; call rcx; 
0x00000000470489: mov edi, [rsp+0x18]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x0000000048fdc4: mov edi, [rsp+0x28]; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x30; bnd jmp r11; 
0x000000004694fe: mov edi, [rsp+0x38]; call r15; 
0x0000000046cf1b: mov edi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000468f0a: mov edi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x00000000467f7c: mov edi, [rsp+0x40]; call r14; 
0x000000004684ca: mov edi, [rsp+0x40]; call rbx; 
0x00000000467389: mov edi, [rsp+0x48]; call r13; 
0x00000000467889: mov edi, [rsp+0x48]; call rbx; 
0x0000000046a288: mov edi, [rsp+0x50]; call rbx; 
0x0000000046b59b: mov edi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000469e9e: mov edi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000465403: mov edi, [rsp+0x58]; call r14; 
0x00000000466953: mov edi, [rsp+0x58]; call r15; 
0x0000000046616d: mov edi, [rsp+0x58]; call rbx; 
0x000000004664ce: mov edi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000466cf5: mov edi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000465154: mov edi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000465ef7: mov edi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000465b82: mov edi, [rsp+0x60]; call r15; 
0x0000000046573f: mov edi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x00000000427103: mov edi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000045c184: mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x0000000045c2cc: mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x0000000045c0e4: mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x000000004111a8: mov edi, [rsp+0xc]; call rbp; 
0x0000000045c33d: mov edi, [rsp+0xc]; mov r8d, eax; mov eax, 0x3; syscall; 
0x00000000411200: mov edi, [rsp+0xc]; mov rsi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x000000004269d6: mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000045dfa2: mov edi, [rsp]; call rbx; 
0x0000000041e315: mov edi, [rsp]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x000000004836f1: mov edi, [rsp]; movzx esi, bl; call rbp; 
0x000000004837b5: mov edi, [rsp]; push 0x0; lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x0000000042376f: mov edi, eax; call qword ptr [r15+0x18]; 
0x0000000042139e: mov edi, eax; call qword ptr [rax+0x18]; 
0x000000004924c3: mov edi, eax; cmp rdx, rcx; jae short 0x00000000004924ac; mov rax, r8; ret; 
0x0000000041e164: mov edi, eax; mov eax, 0xba; syscall; 
0x00000000479673: mov edi, ebp; add al, 0x0; lea rsi, [rip+0x663c2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000424bd5: mov edi, ebp; call qword ptr [r13+0x20]; 
0x00000000424b72: mov edi, ebp; call qword ptr [r13+0x90]; 
0x00000000480b4b: mov edi, ebp; call qword ptr [r14+0x18]; 
0x0000000048130c: mov edi, ebp; call qword ptr [r14+0x20]; 
0x0000000047a081: mov edi, ebp; call qword ptr [r15+0x38]; 
0x00000000423995: mov edi, ebp; call qword ptr [r15+0x40]; 
0x00000000423db5: mov edi, ebp; call qword ptr [r15+0x80]; 
0x0000000042392c: mov edi, ebp; call qword ptr [r15+0x90]; 
0x00000000411a1e: mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x00000000479c92: mov edi, ebp; call qword ptr [r8+0x38]; 
0x000000004248d0: mov edi, ebp; call qword ptr [rax+0x18]; 
0x000000004243c8: mov edi, ebp; call qword ptr [rax+0x40]; 
0x000000004249c3: mov edi, ebp; call qword ptr [rax+0x78]; 
0x00000000423cd5: mov edi, ebp; call qword ptr [rax+0x80]; 
0x00000000423b77: mov edi, ebp; call qword ptr [rax+0x90]; 
0x000000004a0242: mov edi, ebp; call qword ptr [rax]; 
0x0000000041ffdc: mov edi, ebp; call qword ptr [rbx+0x10]; 
0x00000000426b27: mov edi, ebp; call qword ptr [rbx+0x18]; 
0x000000004203cd: mov edi, ebp; call qword ptr [rbx+0x80]; 
0x00000000425be2: mov edi, ebp; call qword ptr [rbx+0x88]; 
0x0000000047fa3b: mov edi, ebp; call qword ptr [rbx+0x90]; 
0x000000004a00e6: mov edi, ebp; call qword ptr [rbx]; 
0x00000000478e21: mov edi, ebp; call qword ptr [rcx+0x38]; 
0x0000000045d726: mov edi, ebp; call r12; 
0x0000000041e413: mov edi, ebp; call rax; 
0x000000004704b7: mov edi, ebp; call rbx; 
0x0000000040aa49: mov edi, ebp; call rdx; 
0x00000000422a5f: mov edi, ebp; lea r9, [rsp+0x18]; call rbp; 
0x00000000479980: mov edi, ebp; mov [rbp-0x970], r10d; mov [rbp-0x958], r9b; call rax; 
0x0000000045c449: mov edi, ebp; mov eax, 0x4f; syscall; 
0x0000000045d04d: mov edi, ebp; mov eax, 0x9; syscall; 
0x0000000042b0bd: mov edi, ebp; mov eax, 0xca; syscall; 
0x000000004847e3: mov edi, ebp; mov eax, 0xe4; syscall; 
0x0000000045d1a7: mov edi, ebp; mov edx, r13d; mov esi, 0x1; call r12; 
0x0000000045de3f: mov edi, ebp; mov rax, r12; pop rbp; pop r12; jmp rax; 
0x0000000045d237: mov edi, ebp; mov rdx, r13; mov esi, 0x1; call r12; 
0x0000000045b7d8: mov edi, ebp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000421e0a: mov edi, ebp; pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x00000000480ab4: mov edi, ebp; pop rbp; pop r12; jmp rax; 
0x0000000042e914: mov edi, ebp; pop rbp; pop r12; pop r13; jmp rax; 
0x00000000426a9c: mov edi, ebp; pop rbx; pop rbp; jmp rax; 
0x0000000042e08b: mov edi, ebp; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000041ec48: mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x000000004797ce: mov edi, ebp; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x0000000045de1e: mov edi, ebp; xor edx, edx; mov esi, 0x1; call r12; 
0x0000000045d195: mov edi, ebp; xor esi, esi; call r12; 
0x0000000042845b: mov edi, ebx; call qword ptr [r12+0x18]; 
0x000000004246ee: mov edi, ebx; call qword ptr [r12+0x80]; 
0x00000000425376: mov edi, ebx; call qword ptr [r12+0x88]; 
0x00000000428295: mov edi, ebx; call qword ptr [r13+0x18]; 
0x0000000047fbe5: mov edi, ebx; call qword ptr [r13+0x38]; 
0x00000000420b2f: mov edi, ebx; call qword ptr [r13+0x58]; 
0x0000000042743f: mov edi, ebx; call qword ptr [r13+0x60]; 
0x00000000478444: mov edi, ebx; call qword ptr [r14+0x38]; 
0x0000000042523b: mov edi, ebx; call qword ptr [r14+0x78]; 
0x00000000427b5e: mov edi, ebx; call qword ptr [r15+0x18]; 
0x0000000042091b: mov edi, ebx; call qword ptr [r15+0x38]; 
0x00000000427ed0: mov edi, ebx; call qword ptr [r15+0x58]; 
0x000000004268c0: mov edi, ebx; call qword ptr [rbp+0x18]; 
0x00000000426ef1: mov edi, ebx; call qword ptr [rbp+0x20]; 
0x00000000427981: mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000042514f: mov edi, ebx; call qword ptr [rbp+0x48]; 
0x00000000420561: mov edi, ebx; call qword ptr [rbp+0x60]; 
0x00000000420bf2: mov edi, ebx; call qword ptr [rbp+0x68]; 
0x00000000424564: mov edi, ebx; call qword ptr [rbp+0x70]; 
0x00000000422521: mov edi, ebx; call qword ptr [rbp+0x80]; 
0x00000000462cf5: mov edi, ebx; call r12; 
0x00000000463d55: mov edi, ebx; call r14; 
0x000000004a4304: mov edi, ebx; call r15; 
0x0000000047f608: mov edi, ebx; call r8; 
0x0000000047f012: mov edi, ebx; call rax; 
0x000000004638aa: mov edi, ebx; call rbp; 
0x0000000046344c: mov edi, ebx; call rsi; 
0x0000000042f181: mov edi, ebx; mov eax, 0xca; syscall; 
0x000000004251fb: mov edi, ebx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x0000000042367a: mov edi, ebx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x00000000421041: mov edi, ebx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x000000004219d1: mov edi, edi; call qword ptr [r13+0x80]; 
0x00000000480281: mov edi, edi; call qword ptr [r14+0x38]; 
0x000000004216eb: mov edi, edi; call qword ptr [r14+0x80]; 
0x0000000042161f: mov edi, edi; call qword ptr [r14+0x90]; 
0x000000004802ee: mov edi, edi; call qword ptr [rbp+0x38]; 
0x00000000421bc7: mov edi, edi; call qword ptr [rbp+0x80]; 
0x000000004736ba: mov edi, edi; call qword ptr [rbx+0x38]; 
0x00000000421cb7: mov edi, edi; call qword ptr [rbx+0x80]; 
0x00000000473411: mov edi, edi; call qword ptr [rcx+0x38]; 
0x00000000422cb2: mov edi, edi; call r12; 
0x00000000421744: mov edi, edi; call rax; 
0x0000000049194f: mov edi, edi; dec dword ptr [rax-0x77]; adc [r8+0x5a], bl; pop rbx; ret; 
0x000000004a43dc: mov edi, edi; lea rbx, [r12+rcx*8]; mov rsi, [rbx]; call rax; 
0x00000000473148: mov edi, edi; mov [rbp-0x94c], r9d; mov [rbp-0x940], r11d; call rax; 
0x000000004303fc: mov edi, edi; mov eax, 0xca; syscall; 
0x000000004a43ad: mov edi, edi; mov rdx, [r10]; mov rax, [rsp+0x8]; mov [rsp+0x10], r10; call rax; 
0x000000004034b0: mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000004731f5: mov edi, edi; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x000000004033c4: mov edi, edi; sub rsp, 0x8; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x00000000492547: mov edi, edx; cmp rax, 0x9; ja short 0x0000000000492520; mov rax, r8; ret; 
0x0000000045b8e0: mov edi, edx; mov eax, esi; syscall; 
0x0000000045b8ef: mov edi, edx; mov eax, r8d; syscall; 
0x0000000048302f: mov edi, esi; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000040a9c5: mov edi, esi; call rax; 
0x000000004707f2: mov edi, esi; call rbp; 
0x0000000040a8f8: mov edi, esi; mov rax, [r8+0x10]; test rax, rax; je short 0x000000000040a908; jmp rax; 
0x0000000040a917: mov edi, esi; mov rax, [r8+0x18]; test rax, rax; je short 0x000000000040a928; jmp rax; 
0x0000000045d7ec: mov edi, esi; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x00000000470594: mov edi, esi; mov rdx, r12; call rbp; 
0x00000000475636: mov edi, esp; call qword ptr [rax+0x38]; 
0x00000000426f8e: mov edi, esp; call qword ptr [rbx+0x18]; 
0x00000000475815: mov edi, esp; call qword ptr [rcx+0x38]; 
0x0000000041e28b: mov edi, esp; call rax; 
0x0000000047047c: mov edi, esp; call rbx; 
0x00000000483aea: mov edi, esp; lea r9, [rsp+0x30]; call rbx; 
0x0000000047bcf5: mov edi, esp; mov [rbp-0x4d8], r11; call qword ptr [r8+0x38]; 
0x0000000047c2fa: mov edi, esp; mov [rbp-0x4d8], r11; call qword ptr [rbx+0x38]; 
0x000000004767b0: mov edi, esp; mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x00000000476273: mov edi, esp; mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x0000000047cf66: mov edi, esp; mov [rbp-0x500], r11; mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x00000000476a05: mov edi, esp; mov [rbp-0x508], r10d; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x0000000049425d: mov edi, esp; mov [rbp-0xe8], r8; call rax; 
0x0000000042e228: mov edi, esp; mov eax, 0xca; syscall; 
0x00000000483c40: mov edi, esp; mov rsi, [rsp+0x18]; call rbx; 
0x0000000047515d: mov edi, esp; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000475702: mov edi, esp; sub r15, r8; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000047bb05: mov edi, esp; sub rbx, r8; sar rbx, 0x2; mov rdx, rbx; call qword ptr [rax+0x38]; 
0x00000000430e3d: mov edx, 0x0; cmp rax, 0xffffffffffffffff; cmove rax, rdx; add rsp, 0x8; ret; 
0x0000000048f68d: mov edx, 0x0; cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x0000000044db0a: mov edx, 0x0; lea rax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x0000000045a7a6: mov edx, 0x0; pop rbx; cmove rax, rdx; ret; 
0x0000000042e361: mov edx, 0x1000b69; pop rbx; ret; 
0x00000000480278: mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000004251fd: mov edx, 0x1; call qword ptr [r14+0x80]; 
0x000000004a7d38: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x3d232]; syscall; 
0x00000000497db8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4d246]; syscall; 
0x00000000497b34: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4d4c6]; syscall; 
0x00000000495ab0: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4f542]; syscall; 
0x00000000495970: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4f682]; syscall; 
0x000000004718f8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x73672]; syscall; 
0x00000000471833: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x73737]; syscall; 
0x00000000471691: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x738d9]; syscall; 
0x000000004715b7: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x739b3]; syscall; 
0x00000000463de8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x81c12]; syscall; 
0x00000000463c7c: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x81d7e]; syscall; 
0x00000000463b5c: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x81e9e]; syscall; 
0x0000000045b414: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x8a5e6]; syscall; 
0x00000000430a94: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb1d36]; syscall; 
0x0000000042de94: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4936]; syscall; 
0x0000000042de34: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4996]; syscall; 
0x0000000042da74: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4d56]; syscall; 
0x0000000042d814: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4fb6]; syscall; 
0x0000000042d23c: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb558e]; syscall; 
0x0000000042d204: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb55c6]; syscall; 
0x0000000042edf4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5f26]; syscall; 
0x0000000042e3a8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb6962]; syscall; 
0x0000000042a505: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba805]; syscall; 
0x0000000042a4d4: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba846]; syscall; 
0x0000000042a254: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbaac6]; syscall; 
0x00000000429d30: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbafea]; syscall; 
0x00000000428946: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc354]; syscall; 
0x00000000428386: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc914]; syscall; 
0x0000000042801a: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcc80]; syscall; 
0x00000000427cd8: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcfc2]; syscall; 
0x00000000426772: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe528]; syscall; 
0x000000004264d2: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe7c8]; syscall; 
0x0000000042617e: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbeb1c]; syscall; 
0x00000000420184: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc5876]; syscall; 
0x0000000041f133: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6767]; syscall; 
0x0000000041eff3: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc68a7]; syscall; 
0x0000000041edbc: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6ade]; syscall; 
0x0000000041ed81: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6b19]; syscall; 
0x0000000041ec9d: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6bfd]; syscall; 
0x000000004156d1: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcf151]; syscall; 
0x00000000413d2e: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd0abc]; syscall; 
0x00000000412baf: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd1b93]; syscall; 
0x00000000412b81: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd1bc1]; syscall; 
0x00000000412a35: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd1d0d]; syscall; 
0x000000004012cd: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xe356d]; syscall; 
0x0000000040143c: mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000042e37d: mov edx, 0x1; mov esi, 0x81; mov eax, ebx; syscall; 
0x0000000042e21d: mov edx, 0x1; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x0000000042f7b0: mov edx, 0x1; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x000000004303f1: mov edx, 0x1; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x0000000042b0b2: mov edx, 0x1; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000042f176: mov edx, 0x1; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000421bc1: mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x0000000042497f: mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000423f39: mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000425149: mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x0000000042251b: mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000422f78: mov edx, 0x1; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x0000000042933a: mov edx, 0x2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x000000004219cb: mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x000000004203c7: mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000042506c: mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000474739: mov edx, 0x39480000; ret; 
0x00000000411231: mov edx, 0x3c; nop [rax+rax]; xor edi, edi; mov eax, edx; syscall; 
0x000000004033cd: mov edx, 0x3ed00148; jmp rax; 
0x00000000443272: mov edx, 0x4900073d; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000042398a: mov edx, 0x4c000000; mov edx, ebp; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x0000000045f82a: mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x0000000049e992: mov edx, 0x894830e8; or [r8+0x2], r15b; ret; 
0x00000000425683: mov edx, 0x8948fffd; ret; 
0x0000000047006a: mov edx, 0x8; mov eax, 0xd; syscall; 
0x0000000047020c: mov edx, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x000000004287fb: mov edx, 0x90fffffe; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x0000000040d823: mov edx, 0xc30009bd; lea rax, [rip+0x9bd3b]; ret; 
0x000000004a25b9: mov edx, 0xfc0c7; add [rax], al; syscall; 
0x0000000045bed9: mov edx, 0xffffffc0; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000045c111: mov edx, 0xffffffc0; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000040a875: mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x0000000046fe63: mov edx, 0xffffffe0; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000046fd8f: mov edx, 0xffffffe0; mov fs:[rdx], rax; ret; 
0x00000000464f8b: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00000000426155: mov edx, [0x18]; test edx, edx; jne short 0x0000000000426170; sub dword ptr [rip+0xbeb49], 0x1; ret; 
0x00000000428921: mov edx, [0x18]; test edx, edx; jne short 0x0000000000428938; sub dword ptr [rip+0xbc37d], 0x1; ret; 
0x00000000497e3f: mov edx, [0x18]; test edx, edx; jne short 0x0000000000497e50; sub dword ptr [rdi], 0x1; ret; 
0x00000000423d19: mov edx, [rbp+0x40]; sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000048c51e: mov edx, [rbp-0x90]; call r10; 
0x0000000048ca7f: mov edx, [rbp-0xd8]; mov [rbp-0xf0], r11; mov [rbp-0xd8], r10; call r15; 
0x0000000048c370: mov edx, [rbp-0xf8]; mov r11, [rbp-0xf0]; nop [rax]; mov [rbp-0xf0], r11; call r10; 
0x0000000049843d: mov edx, [rbx+0x10]; mov [rdx], rax; pop rbx; ret; 
0x00000000405a91: mov edx, [rbx+0x10]; movsxd rdx, [r15+rdx*4]; add rdx, r15; notrack jmp rdx; 
0x00000000423676: mov edx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x0000000042103d: mov edx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x0000000044c3df: mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044ab0d: mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000045faba: mov edx, [rcx+rdx]; lea rcx, [rip-0x64]; mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x0000000048523e: mov edx, [rcx+rdx]; test edx, edx; jne short 0x0000000000485250; ret; 
0x000000004983c5: mov edx, [rdi+0x30]; mov [rax], rdx; pop rbx; ret; 
0x00000000421738: mov edx, [rdi+0x40]; sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x00000000498424: mov edx, [rdi+0x458]; mov [rax], rdx; pop rbx; ret; 
0x00000000420644: mov edx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x000000004089fd: mov edx, [rdx]; cmp [rdx], esi; jne short 0x00000000004089f0; mov eax, 0xffffffef; ret; 
0x000000004a43b0: mov edx, [rdx]; mov rax, [rsp+0x8]; mov [rsp+0x10], r10; call rax; 
0x0000000049901f: mov edx, [rip+0x4c113]; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000004111fa: mov edx, [rip+0xd3b48]; mov edi, [rsp+0xc]; mov rsi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x0000000041119d: mov edx, [rip+0xd3ba5]; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x00000000443151: mov edx, [rsi+0x1]; mov cx, [rsi]; mov [rdi+0x1], dx; mov [rdi], cx; ret; 
0x00000000443070: mov edx, [rsi+0x1]; mov ecx, [rsi]; mov [rdi+0x1], edx; mov [rdi], ecx; ret; 
0x00000000442eb1: mov edx, [rsi+0x1]; mov rcx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x000000004797ca: mov edx, [rsi+0x20]; mov rdi, r13; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x000000004731f1: mov edx, [rsi+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x00000000443000: mov edx, [rsi+0x2]; mov ecx, [rsi]; mov [rdi+0x2], edx; mov [rdi], ecx; ret; 
0x00000000442e41: mov edx, [rsi+0x2]; mov rcx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x00000000456a82: mov edx, [rsi+0x3]; mov [rdi], ecx; mov [rdi+0x3], edx; lea rax, [rdi+0x6]; ret; 
0x00000000455432: mov edx, [rsi+0x3]; mov [rdi], ecx; mov [rdi+0x3], edx; ret; 
0x00000000442f90: mov edx, [rsi+0x3]; mov ecx, [rsi]; mov [rdi+0x3], edx; mov [rdi], ecx; ret; 
0x00000000442dd1: mov edx, [rsi+0x3]; mov rcx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x00000000456a63: mov edx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; lea rax, [rdi+0x5]; ret; 
0x00000000455423: mov edx, [rsi+0x4]; mov [rdi], ecx; mov [rdi+0x4], dx; ret; 
0x00000000442d61: mov edx, [rsi+0x4]; mov rcx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x00000000456b14: mov edx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x00000000455494: mov edx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x00000000442cf1: mov edx, [rsi+0x5]; mov rcx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x00000000456b34: mov edx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000004554a4: mov edx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x00000000442c81: mov edx, [rsi+0x6]; mov rcx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x00000000456ad3: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; lea rax, [rdi+0xa]; ret; 
0x00000000455473: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x00000000456b54: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x000000004554b4: mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x00000000442c11: mov edx, [rsi+0x7]; mov rcx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x00000000456ab4: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; lea rax, [rdi+0x9]; ret; 
0x00000000455464: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x00000000456af3: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; lea rax, [rdi+0xb]; ret; 
0x00000000455483: mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x0000000044f022: mov edx, [rsi+r8-0x4]; mov [rdi], ecx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x0000000044f023: mov edx, [rsi+rax-0x4]; mov [rdi], ecx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x0000000044f044: mov edx, [rsi+rax-0x8]; mov [rdi], rcx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x0000000043d011: mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000043d1f1: mov edx, [rsi-0x3]; mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x0000000043ce08: mov edx, [rsi-0x4]; mov [rdi-0x11], r11; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043cfe8: mov edx, [rsi-0x4]; mov [rdi-0x12], r11; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d1c8: mov edx, [rsi-0x4]; mov [rdi-0x13], r11; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d3a8: mov edx, [rsi-0x4]; mov [rdi-0x14], r11; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d3d0: mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x0000000043ce24: mov edx, [rsi-0x4]; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d004: mov edx, [rsi-0x4]; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d1e4: mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d3c4: mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d5d0: mov edx, [rsi-0x5]; mov ecx, [rsi-0x4]; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043d7d0: mov edx, [rsi-0x6]; mov ecx, [rsi-0x4]; mov [rdi-0x6], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043d9d0: mov edx, [rsi-0x7]; mov ecx, [rsi-0x4]; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x0000000043cc45: mov edx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043d599: mov edx, [rsi-0x8]; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d799: mov edx, [rsi-0x8]; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d999: mov edx, [rsi-0x8]; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043cc29: mov edx, [rsi-0x8]; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043cc61: mov edx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x0000000043d5b5: mov edx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d7b5: mov edx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d9b5: mov edx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000442741: mov edx, [rsi-0x9]; mov ecx, [rsi-0x4]; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x000000004426c1: mov edx, [rsi-0xa]; mov ecx, [rsi-0x4]; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000442641: mov edx, [rsi-0xb]; mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x000000004425c1: mov edx, [rsi-0xc]; mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000442531: mov edx, [rsi-0xd]; mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x000000004424a1: mov edx, [rsi-0xe]; mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000442411: mov edx, [rsi-0xf]; mov rcx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000456a21: mov edx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000004553e1: mov edx, [rsi]; mov [rdi], dx; ret; 
0x00000000456a40: mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x00000000457090: mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; vzeroupper; ret; 
0x000000004430e0: mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000044e970: mov edx, [rsi]; mov [rdi], edx; vzeroupper; ret; 
0x00000000456a91: mov edx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x00000000442f21: mov edx, [rsi]; mov [rdi], rdx; ret; 
0x0000000045be7e: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000045bea1; add rsp, 0x28; ret; 
0x0000000045cfd1: mov edx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000045cfe5; add rsp, 0x28; ret; 
0x0000000049859d: mov edx, [rsp+0x28]; xor rdx, fs:[0x28]; jne short 0x00000000004985b1; add rsp, 0x38; ret; 
0x000000004917f6: mov edx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x00000000491774: mov edx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000465735: mov edx, [rsp+0x68]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x00000000402ae9: mov edx, [rsp+0xb8]; xor rdx, fs:[0x28]; jne 0x0000000000402b8f; add rsp, 0xc8; ret; 
0x00000000402c99: mov edx, [rsp+0xb8]; xor rdx, fs:[0x28]; jne 0x0000000000402d3f; add rsp, 0xc8; ret; 
0x000000004a5747: mov edx, [rsp]; mov rdi, r14; call rbp; 
0x0000000045a81c: mov edx, eax; and edx, 0xf; movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x0000000041e170: mov edx, eax; mov eax, 0xea; syscall; 
0x0000000041128c: mov edx, eax; mov esi, edx; mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x0000000045d001: mov edx, eax; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x000000004284f6: mov edx, eax; mov rax, [rax]; test rax, rax; jne short 0x00000000004284f0; ret; 
0x0000000047a07b: mov edx, eax; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x000000004249bd: mov edx, eax; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x00000000494257: mov edx, eax; mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x0000000045ccdb: mov edx, eax; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000042fc04: mov edx, eax; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000407763: mov edx, eax; shr edx, 0x10; xor eax, edx; ret; 
0x000000004a00a0: mov edx, ebp; add rax, [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x0000000047b612: mov edx, ebp; call qword ptr [rax+0x38]; 
0x0000000045b659: mov edx, ebp; call rbx; 
0x0000000045d1aa: mov edx, ebp; mov esi, 0x1; call r12; 
0x000000004a63f1: mov edx, ebp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x00000000483c38: mov edx, ebp; mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x00000000470d93: mov edx, ebp; mov rdi, r12; call rbx; 
0x000000004736b4: mov edx, ebp; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000473d59: mov edx, ebp; mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000047048e: mov edx, ebp; mov rsi, r12; call rbx; 
0x00000000411a19: mov edx, ebp; mov rsi, r12; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x000000004a023d: mov edx, ebp; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x000000004a00e1: mov edx, ebp; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000004704b1: mov edx, ebp; mov rsi, r12; mov rdi, r13; call rbx; 
0x0000000047340b: mov edx, ebp; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000042398f: mov edx, ebp; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x00000000423daf: mov edx, ebp; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x00000000425235: mov edx, ebp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x000000004704cc: mov edx, ebp; mov rsi, r15; mov rdi, r12; call rbx; 
0x000000004243c2: mov edx, ebp; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000483ae4: mov edx, ebp; xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x00000000478892: mov edx, ebx; call qword ptr [r13+0x38]; 
0x0000000047bb0f: mov edx, ebx; call qword ptr [rax+0x38]; 
0x0000000045d04a: mov edx, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x00000000473a9e: mov edx, ebx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000047cc77: mov edx, ebx; mov rsi, r9; mov rdi, r12; call qword ptr [rax+0x38]; 
0x00000000484fb0: mov edx, ecx; cmp r9d, 0x1; ja short 0x0000000000484fe8; mov eax, 0x106; syscall; 
0x00000000498fa5: mov edx, ecx; mov eax, 0x11; syscall; 
0x0000000045f8a5: mov edx, ecx; mov eax, 0x19; syscall; 
0x0000000045f8d5: mov edx, ecx; mov eax, 0x9d; syscall; 
0x0000000045cffe: mov edx, ecx; mov r10, r8; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x000000004a43d9: mov edx, ecx; mov rdi, r15; lea rbx, [r12+rcx*8]; mov rsi, [rbx]; call rax; 
0x000000004767aa: mov edx, ecx; mov rsi, r11; mov rdi, r12; mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x0000000047626d: mov edx, ecx; mov rsi, r11; mov rdi, r12; mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x0000000047a6b4: mov edx, ecx; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000479c8c: mov edx, ecx; mov rsi, r12; mov rdi, r13; call qword ptr [r8+0x38]; 
0x00000000478e1b: mov edx, ecx; mov rsi, r12; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x0000000047bcef: mov edx, ecx; mov rsi, r9; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [r8+0x38]; 
0x0000000047c2f4: mov edx, ecx; mov rsi, r9; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [rbx+0x38]; 
0x00000000475163: mov edx, edi; call qword ptr [rax+0x38]; 
0x000000004a5870: mov edx, edi; mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x0000000047580f: mov edx, edi; mov rsi, r11; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x000000004707ec: mov edx, edi; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000042455e: mov edx, edi; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000475630: mov edx, edi; mov rsi, r8; mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000045a2b5: mov edx, edi; rep stosb [rdi]; mov rax, rdx; ret; 
0x0000000041d867: mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000041e319: mov edx, esi; mov rax, [rsp]; call rax; 
0x0000000041e409: mov edx, esi; mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x0000000041e285: mov edx, esi; mov rsi, r13; mov rdi, r12; call rax; 
0x00000000472463: mov edx, esp; call qword ptr [r13+0x38]; 
0x00000000470597: mov edx, esp; call rbp; 
0x00000000485071: mov edx, esp; mov eax, 0x10; syscall; 
0x0000000045cc59: mov edx, esp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x00000000420915: mov edx, esp; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000045bfba: mov edx, esp; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000004218f7: mov edx, esp; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000047fbdf: mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000420b29: mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000426154: mov edx, fs:[0x18]; test edx, edx; jne short 0x0000000000426170; sub dword ptr [rip+0xbeb49], 0x1; ret; 
0x00000000428920: mov edx, fs:[0x18]; test edx, edx; jne short 0x0000000000428938; sub dword ptr [rip+0xbc37d], 0x1; ret; 
0x00000000497e3e: mov edx, fs:[0x18]; test edx, edx; jne short 0x0000000000497e50; sub dword ptr [rdi], 0x1; ret; 
0x0000000045bfb8: mov edx, r12d; mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x000000004218f6: mov edx, r12d; mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000045d1a9: mov edx, r13d; mov esi, 0x1; call r12; 
0x00000000423dae: mov edx, r13d; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000041e16f: mov edx, r8d; mov eax, 0xea; syscall; 
0x0000000045ccda: mov edx, r8d; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000045ccd9: mov edx, r8d; mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x00000000485258: mov es, [rbx]; add al, 0x11; ret; 
0x00000000430f6e: mov es, [rcx-0x72b7fffe]; add eax, 0x280d7; cmovne rax, rdx; ret; 
0x00000000424d86: mov es, [rcx]; add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000043dc2f: mov es, [rdi]; add [rdi+0x63], cl; or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000048a361: mov es, [rip-0x1b3eb700]; add al, 0x49; add esp, eax; call qword ptr [r12+0x60]; 
0x0000000043dc88: mov es, fs:[rdi]; add [rdi+0x63], cl; or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000045cbcd: mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000045d1ac: mov esi, 0x1; call r12; 
0x000000004a3cbe: mov esi, 0x1; mov edi, 0x1; call rax; 
0x0000000047f600: mov esi, 0x1; mov rdi, rbx; call r8; 
0x0000000047f00c: mov esi, 0x1; mov rdi, rbx; call rax; 
0x000000004a38a2: mov esi, 0x1a; mov edi, 0x1; call rax; 
0x000000004319d2: mov esi, 0x2000b33; lea rdx, [rip+0x27b02]; lea rax, [rip+0x27bbb]; cmove rax, rdx; ret; 
0x0000000047304a: mov esi, 0x20e883c3; cdqe; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000475b4f: mov esi, 0x20e883c7; cdqe; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x69cdf]; jmp qword ptr [rax+rdx*8]; 
0x0000000047594c: mov esi, 0x20e883c7; cdqe; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x69de2]; jmp qword ptr [rax+rdx*8]; 
0x00000000475d97: mov esi, 0x358d48c7; mov al, [0x984820e88300069b]; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000045d18d: mov esi, 0x3; je short 0x000000000045d1c5; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045d21d: mov esi, 0x3; je short 0x000000000045d255; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045de04: mov esi, 0x3; je short 0x000000000045de3a; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045deb5: mov esi, 0x3; je short 0x000000000045deed; mov rdi, rbp; xor esi, esi; call r12; 
0x0000000045a75c: mov esi, 0x3ef00148; jmp rax; 
0x000000004a63f3: mov esi, 0x40; mov rdi, r13; call rbx; 
0x00000000412879: mov esi, 0x45c748ff; mov al, [0xfff868e9ffffffff]; jmp qword ptr [rbx+rcx*4+0x4]; 
0x00000000431b1e: mov esi, 0x48000281; lea eax, [rip+0x28207]; cmove rax, rdx; ret; 
0x0000000049588f: mov esi, 0x77cf390e; jrcxz 0x00000000004958da; mov eax, eax; ret; 
0x0000000042933f: mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000048193c: mov esi, 0x80; syscall; 
0x000000004a7d3d: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x3d232]; syscall; 
0x00000000497dbd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4d246]; syscall; 
0x00000000497b39: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4d4c6]; syscall; 
0x00000000495ab5: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4f542]; syscall; 
0x00000000495975: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4f682]; syscall; 
0x000000004718fd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x73672]; syscall; 
0x00000000471838: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x73737]; syscall; 
0x00000000471696: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x738d9]; syscall; 
0x000000004715bc: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x739b3]; syscall; 
0x00000000463ded: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x81c12]; syscall; 
0x00000000463c81: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x81d7e]; syscall; 
0x00000000463b61: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x81e9e]; syscall; 
0x0000000045b419: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x8a5e6]; syscall; 
0x00000000430a99: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb1d36]; syscall; 
0x0000000042de99: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4936]; syscall; 
0x0000000042de39: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4996]; syscall; 
0x0000000042da79: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4d56]; syscall; 
0x0000000042d819: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4fb6]; syscall; 
0x0000000042d241: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb558e]; syscall; 
0x0000000042d209: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb55c6]; syscall; 
0x0000000042edf9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5f26]; syscall; 
0x0000000042e3ad: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb6962]; syscall; 
0x0000000042a50a: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba805]; syscall; 
0x0000000042a4d9: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba846]; syscall; 
0x0000000042a259: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbaac6]; syscall; 
0x00000000429d35: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbafea]; syscall; 
0x0000000042894b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc354]; syscall; 
0x0000000042838b: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc914]; syscall; 
0x0000000042801f: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcc80]; syscall; 
0x00000000427cdd: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcfc2]; syscall; 
0x00000000426777: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe528]; syscall; 
0x000000004264d7: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe7c8]; syscall; 
0x00000000426183: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbeb1c]; syscall; 
0x00000000420189: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc5876]; syscall; 
0x0000000041f138: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6767]; syscall; 
0x0000000041eff8: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc68a7]; syscall; 
0x0000000041edc1: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6ade]; syscall; 
0x0000000041ed86: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6b19]; syscall; 
0x0000000041eca2: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6bfd]; syscall; 
0x000000004156d6: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcf151]; syscall; 
0x00000000413d33: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd0abc]; syscall; 
0x00000000412bb4: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd1b93]; syscall; 
0x00000000412b86: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd1bc1]; syscall; 
0x00000000412a3a: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd1d0d]; syscall; 
0x000000004012d2: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xe356d]; syscall; 
0x00000000401441: mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000042e382: mov esi, 0x81; mov eax, ebx; syscall; 
0x0000000042e222: mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x0000000042f7b5: mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x000000004303f6: mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x0000000042b0b7: mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000042f17b: mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x0000000041f232: mov esi, 0x83480143; ret; 
0x000000004a3825: mov esi, 0xa; mov edi, 0x1; call rax; 
0x0000000041314c: mov esi, 0xc0c748ff; sar bh, 0xff; dec dword ptr [rbx-0xd373]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x00000000480e90: mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000423769: mov esi, 0xffffffff; mov rdi, r8; call qword ptr [r15+0x18]; 
0x00000000421398: mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000004248ca: mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rax+0x18]; 
0x00000000426b21: mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x00000000428455: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x0000000042828f: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r13+0x18]; 
0x00000000427b58: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x000000004268ba: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x00000000427a13: mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000041ec45: mov esi, [rax+0x20]; mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000045d7e9: mov esi, [rax]; mov rdi, r14; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x0000000045e05f: mov esi, [rbp+0x10]; test r14, r14; jne 0x000000000045e110; mov rdi, [r13]; call rbx; 
0x0000000045e02f: mov esi, [rbp+0x10]; test r14, r14; jne 0x000000000045e170; mov rdi, [r13]; call rbx; 
0x0000000045dfff: mov esi, [rbp+0x10]; test r14, r14; jne 0x000000000045e1d0; mov rdi, [r13]; call rbx; 
0x0000000045e08b: mov esi, [rbp+0x10]; test r14, r14; jne short 0x000000000045e0b0; mov rdi, [r13]; call rbx; 
0x000000004a5742: mov esi, [rbp+rdi+0x8]; mov rdx, [r12]; mov rdi, r14; call rbp; 
0x000000004a3cfc: mov esi, [rbp-0x10]; mov r15, [rbp-0x8]; leave; ret; 
0x00000000463448: mov esi, [rbp-0x70]; mov rdi, rbx; call rsi; 
0x0000000041e311: mov esi, [rbp]; mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x00000000421039: mov esi, [rbx+0x10]; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x000000004a43e3: mov esi, [rbx]; call rax; 
0x0000000045d720: mov esi, [rbx]; mov r13, rbx; mov rdi, rbp; call r12; 
0x0000000048bab7: mov esi, [rbx]; mov rax, [rbx+0x10]; add rax, [r13]; call rax; 
0x0000000048fdf8: mov esi, [rdi+0x20]; mov rdi, [rdi+0x28]; bnd call r11; 
0x000000004731ed: mov esi, [rsi+0x18]; mov rdx, [r14+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x00000000459617: mov esi, [rsi]; mov [rdi+rdx-0x4], ecx; mov [rdi], esi; ret; 
0x00000000459608: mov esi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x00000000445f00: mov esi, [rsi]; mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x00000000445eee: mov esi, [rsi]; mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x0000000045d346: mov esi, [rsi]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x00000000445edb: mov esi, [rsi]; mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x000000004111a4: mov esi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x0000000045c17d: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x0000000045c0dd: mov esi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x00000000411205: mov esi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x000000004270fe: mov esi, [rsp+0x10]; mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000470d8e: mov esi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000042eb69: mov esi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x0000000045b7db: mov esi, [rsp+0x18]; call rbx; 
0x0000000045b651: mov esi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000042e651: mov esi, [rsp+0x18]; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000004629f6: mov esi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x0000000042ffa1: mov esi, [rsp+0x28]; mov rdi, r12; call rax; 
0x0000000042ed81: mov esi, [rsp+0x38]; mov rdi, r14; call rax; 
0x000000004694f9: mov esi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000046cf16: mov esi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000468f05: mov esi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x00000000467f77: mov esi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x000000004684c5: mov esi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000467384: mov esi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000467884: mov esi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x000000004653fe: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x0000000046694e: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r15; 
0x00000000466168: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x000000004664c9: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000466cf0: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000046514f: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000465ef2: mov esi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x0000000046a283: mov esi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046b596: mov esi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000469e99: mov esi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000465b7d: mov esi, [rsp+0x58]; mov rdi, [rsp+0x60]; call r15; 
0x0000000046573a: mov esi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x0000000045c2c5: mov esi, [rsp+0xc]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x000000004269d1: mov esi, [rsp+0xc]; mov rdi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000004a5873: mov esi, [rsp+rsi*8+0x10]; mov rdi, r13; call rax; 
0x00000000470212: mov esi, eax; mov eax, 0xe; syscall; 
0x0000000041e16d: mov esi, eax; mov edx, r8d; mov eax, 0xea; syscall; 
0x00000000475633: mov esi, eax; mov rdi, r12; call qword ptr [rax+0x38]; 
0x000000004756ff: mov esi, eax; mov rdi, r12; sub r15, r8; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000045bfbd: mov esi, ebp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000045c033: mov esi, ebp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000041e47e: mov esi, ebp; mov rax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x0000000041e288: mov esi, ebp; mov rdi, r12; call rax; 
0x0000000047515a: mov esi, ebp; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000040aa46: mov esi, ebp; mov rdi, r13; call rdx; 
0x00000000470591: mov esi, ebp; mov rdi, r14; mov rdx, r12; call rbp; 
0x0000000048027e: mov esi, ebp; mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000004218fa: mov esi, ebp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x000000004802eb: mov esi, ebp; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x000000004246eb: mov esi, ebp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000047fbe2: mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000420b2c: mov esi, ebp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000041ec0c: mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000048f80f: mov esi, ebp; syscall; 
0x00000000422f7e: mov esi, ebx; mov edi, 0x2; mov eax, r9d; syscall; 
0x00000000475812: mov esi, ebx; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x000000004767ad: mov esi, ebx; mov rdi, r12; mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x00000000476270: mov esi, ebx; mov rdi, r12; mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x00000000476a02: mov esi, ebx; mov rdi, r12; mov [rbp-0x508], r10d; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x00000000474265: mov esi, ecx; mov [rbp-0x8f0], r10; mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000047aa76: mov esi, ecx; mov [rbp-0x908], r10; mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000041e18d: mov esi, ecx; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000045ccde: mov esi, ecx; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000047cc7a: mov esi, ecx; mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000047bcf2: mov esi, ecx; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [r8+0x38]; 
0x0000000047c2f7: mov esi, ecx; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [rbx+0x38]; 
0x0000000047cf63: mov esi, ecx; mov rdi, r12; mov [rbp-0x500], r11; mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x0000000045ce59: mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x000000004704cf: mov esi, edi; mov rdi, r12; call rbx; 
0x00000000480b48: mov esi, edi; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x000000004243c5: mov esi, edi; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x000000004a4299: mov esi, edi; test rax, rax; je short 0x00000000004a42b0; mov edi, 0x1; jmp rax; 
0x0000000045bebb: mov esi, edx; cmp r8d, 0x1; ja short 0x000000000045bef0; mov eax, 0x4; syscall; 
0x0000000045bf1a: mov esi, edx; cmp r8d, 0x1; ja short 0x000000000045bf50; mov eax, 0x5; syscall; 
0x00000000484f4b: mov esi, edx; cmp r8d, 0x1; ja short 0x0000000000484f80; mov eax, 0x6; syscall; 
0x0000000041128e: mov esi, edx; mov edi, 0x3002; mov eax, 0x9e; syscall; 
0x000000004736b7: mov esi, edx; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000473d5c: mov esi, edx; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000049425a: mov esi, esi; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x0000000047997d: mov esi, esi; mov rdi, r13; mov [rbp-0x970], r10d; mov [rbp-0x958], r9b; call rax; 
0x00000000473145: mov esi, esi; mov rdi, r15; mov [rbp-0x94c], r9d; mov [rbp-0x940], r11d; call rax; 
0x00000000420918: mov esi, esi; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000424561: mov esi, esi; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x000000004a4301: mov esi, esi; mov rdi, rbx; call r15; 
0x00000000408a34: mov esi, esi; movsxd rax, [rcx+rsi*4]; add rax, rcx; notrack jmp rax; 
0x00000000430c21: mov esi, esp; call rax; 
0x00000000470491: mov esi, esp; call rbx; 
0x00000000411a1c: mov esi, esp; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x000000004a0240: mov esi, esp; mov edi, ebp; call qword ptr [rax]; 
0x000000004a00e4: mov esi, esp; mov edi, ebp; call qword ptr [rbx]; 
0x000000004a00a6: mov esi, esp; mov edi, ebp; call rax; 
0x000000004847e1: mov esi, esp; mov edi, ebp; mov eax, 0xe4; syscall; 
0x0000000047a07e: mov esi, esp; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000479c8f: mov esi, esp; mov rdi, r13; call qword ptr [r8+0x38]; 
0x00000000478e1e: mov esi, esp; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x0000000041e410: mov esi, esp; mov rdi, r13; call rax; 
0x000000004704b4: mov esi, esp; mov rdi, r13; call rbx; 
0x000000004707ef: mov esi, esp; mov rdi, r14; call rbp; 
0x0000000047340e: mov esi, esp; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000424b6f: mov esi, esp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000423992: mov esi, esp; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x00000000423db2: mov esi, esp; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x00000000423929: mov esi, esp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x000000004249c0: mov esi, esp; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x0000000047fa38: mov esi, esp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x00000000425238: mov esi, esp; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x0000000042f912: mov esi, esp; pop r12; pop r13; jmp rax; 
0x00000000480b47: mov esi, r15d; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x00000000455352: mov esp, 0x1d8d4cd2; adc eax, 0x49000623; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559ce: mov esp, 0x1d8d4cd2; sbb [rip+0x63490006], ebx; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559a5: mov esp, 0x1d8d4cd2; sbb eax, 0x63490006; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456992: mov esp, 0x1d8d4cd2; test eax, 0x4900060e; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000439221: mov esp, 0x448d48c0; cmp [rax], ah; ret; 
0x00000000439211: mov esp, 0x448d48c0; cmp [rax], dl; ret; 
0x000000004391f1: mov esp, 0x448d48c0; cmp al, dh; ret; 
0x000000004407f0: mov esp, 0x48000767; sub edx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x00000000467513: mov esp, 0x8514; add [rax+0x39], cl; ret far; 
0x000000004222a9: mov esp, 0x8c48348; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000004117ff: mov esp, 0x90005; add [rax-0x77], cl; ret; 
0x000000004572f0: mov esp, 0xa8000000; jne 0x00000000004573c0; lea rax, [rdi+0x7]; ret; 
0x0000000044e602: mov esp, 0xc08348c0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000439342: mov esp, 0xc08348c0; add rax, rdi; vzeroupper; ret; 
0x00000000439332: mov esp, 0xc08348c0; and [rax+0x1], cl; clc; vzeroupper; ret; 
0x0000000048266a: mov esp, 0xc22948c0; jbe 0x0000000000482910; add rax, rdi; add rax, rcx; ret; 
0x000000004989ca: mov esp, 0xc22948c0; jbe 0x0000000000498c70; add rax, rdi; add rax, rcx; ret; 
0x000000004828d1: mov esp, 0xc22948c0; jbe short 0x0000000000482910; add rax, rdi; ret; 
0x000000004828e1: mov esp, 0xc22948c0; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x10]; ret; 
0x000000004828f1: mov esp, 0xc22948c0; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x20]; ret; 
0x00000000482901: mov esp, 0xc22948c0; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x30]; ret; 
0x00000000498c31: mov esp, 0xc22948c0; jbe short 0x0000000000498c70; add rax, rdi; ret; 
0x00000000498c41: mov esp, 0xc22948c0; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x10]; ret; 
0x00000000498c51: mov esp, 0xc22948c0; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x20]; ret; 
0x00000000498c61: mov esp, 0xc22948c0; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x30]; ret; 
0x00000000482b12: mov esp, 0xc23948c0; jbe short 0x0000000000482b80; add rax, rdi; vzeroupper; ret; 
0x00000000498e72: mov esp, 0xc23948c0; jbe short 0x0000000000498ee0; add rax, rdi; vzeroupper; ret; 
0x0000000040c1b3: mov esp, 0xc30009d3; lea rax, [rip+0x9d3bc]; ret; 
0x0000000040c1bb: mov esp, 0xc30009d3; lea rax, [rip+0x9d408]; ret; 
0x0000000044e1a5: mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x0000000044e4b3: mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x00000000483f38: mov esp, 0xd00148d2; sub rax, rdi; shr rax, 0x2; ret; 
0x0000000043908b: mov esp, 0xf80148c0; add rax, rcx; ret; 
0x0000000044e517: mov esp, 0xf80148c0; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x00000000439287: mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x00000000439201: mov esp, 0xf80148c0; ret; 
0x00000000484392: mov esp, 0xf80148c0; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044e5d2: mov esp, 0xf80148c0; sub rax, rdx; vzeroupper; ret; 
0x00000000439322: mov esp, 0xf80148c0; vzeroupper; ret; 
0x0000000045df58: mov esp, [rbp+0x10]; test r12, r12; jne short 0x000000000045df88; mov rdi, [rbp]; call rbx; 
0x0000000049246c: mov esp, eax; mov rbp, r9; nop; jmp rdx; 
0x000000004905e2: mov esp, ebx; mov rbx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000048fdc9: mov esp, ebx; mov rbx, [rsp]; add rsp, 0x30; bnd jmp r11; 
0x0000000048fedb: mov esp, ebx; mov rbx, [rsp]; add rsp, 0x30; bnd ret; 
0x000000004a3e75: mov esp, ecx; pop rcx; jmp rcx; 
0x00000000462bae: mov fs, bp; stc; jmp qword ptr [rsi+0xf]; 
0x0000000045be3d: mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000046fd8a: mov fs:[rcx], rdx; mov rdx, 0xffffffffffffffe0; mov fs:[rdx], rax; ret; 
0x0000000045bee1: mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000045c119: mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x00000000485151: mov fs:[rdx], eax; xor eax, eax; mov qword ptr [rip+0x5fe37], 0xffffffffffffffff; ret; 
0x0000000046fd95: mov fs:[rdx], rax; ret; 
0x00000000492331: mov qword ptr [r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000041ec04: mov qword ptr [rax+0x10], 0x0; mov esi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x00000000404987: mov qword ptr [rax+0x10], 0xffffffffffffffff; mov qword ptr [rax+0x18], 0xffffffffffffffff; add rsp, 0x8; ret; 
0x0000000040498f: mov qword ptr [rax+0x18], 0xffffffffffffffff; add rsp, 0x8; ret; 
0x00000000481551: mov qword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x00000000427704: mov qword ptr [rax+0x8], 0x0; movdqa xmm0, [rip+0x8dbbc]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x00000000427674: mov qword ptr [rax+0x8], 0x0; movdqa xmm0, [rip+0x8dc4c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x000000004277d4: mov qword ptr [rax+0x8], 0x0; ret; 
0x000000004277cd: mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000049841c: mov qword ptr [rax], 0x0; mov rdx, [rdi+0x458]; mov [rax], rdx; pop rbx; ret; 
0x0000000047b758: mov qword ptr [rbp-0x4c8], 0x0; mov dword ptr [rbp-0x4f0], 0x20; jmp rax; 
0x000000004752b1: mov qword ptr [rbp-0x4e0], 0x0; mov byte ptr [rbp-0x508], 0x20; mov [rbp-0x4f8], rsi; jmp rax; 
0x00000000490cd5: mov qword ptr [rbx+0x10], 0x0; movups [rbx], xmm0; pop rbx; ret; 
0x0000000046da36: mov qword ptr [rbx+0x10], 0x0; pop rbx; ret; 
0x0000000042695c: mov qword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000042865c: mov qword ptr [rbx+0x58], 0x0; pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x000000004a36a6: mov qword ptr [rbx+0x98], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004638b6: mov qword ptr [rbx], 0x0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004a7de9: mov qword ptr [rbx], 0x0; movzx eax, byte ptr [rsp+0xf]; add rsp, 0x10; pop rbx; ret; 
0x0000000048fa47: mov qword ptr [rbx], 0x0; pop rbx; or dword ptr [rip+0x536f2], 0x1; ret; 
0x00000000427890: mov qword ptr [rdi+0xa0], 0xffffffffffffffff; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x00000000427881: mov qword ptr [rdi+0xa8], 0x0; ret; 
0x000000004a7cfa: mov qword ptr [rip+0x3d273], 0x0; add rsp, 0x8; ret; 
0x000000004a78ab: mov qword ptr [rip+0x3d5a2], 0x0; add rsp, 0x8; ret; 
0x000000004916d0: mov qword ptr [rip+0x53925], 0x0; add rsp, 0x8; ret; 
0x00000000485156: mov qword ptr [rip+0x5fe37], 0xffffffffffffffff; ret; 
0x0000000042896f: mov qword ptr [rip+0xbc33e], 0x0; ret; 
0x00000000428964: mov qword ptr [rip+0xbc341], 0x0; mov qword ptr [rip+0xbc33e], 0x0; ret; 
0x0000000040313d: mov qword ptr [rip+0xdefdc], 0xffffffffffffffff; add rsp, 0x8; ret; 
0x00000000403132: mov qword ptr [rip+0xdefdf], 0xffffffffffffffff; mov qword ptr [rip+0xdefdc], 0xffffffffffffffff; add rsp, 0x8; ret; 
0x00000000403127: mov qword ptr [rip+0xdefe2], 0xffffffffffffffff; mov qword ptr [rip+0xdefdf], 0xffffffffffffffff; mov qword ptr [rip+0xdefdc], 0xffffffffffffffff; add rsp, 0x8; ret; 
0x000000004017d4: mov qword ptr [rip+0xe3879], 0x0; pop rdx; ret; 
0x00000000492330: mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x0000000048c51d: mov r10, [rbp-0x90]; call r10; 
0x0000000048ca7e: mov r10, [rbp-0xd8]; mov [rbp-0xf0], r11; mov [rbp-0xd8], r10; call r15; 
0x0000000048c36f: mov r10, [rbp-0xf8]; mov r11, [rbp-0xf0]; nop [rax]; mov [rbp-0xf0], r11; call r10; 
0x0000000045d000: mov r10, r8; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x00000000498fa4: mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000045f8a4: mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000045f8d4: mov r10, rcx; mov eax, 0x9d; syscall; 
0x00000000470069: mov r10d, 0x8; mov eax, 0xd; syscall; 
0x0000000047020b: mov r10d, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x0000000045d049: mov r10d, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x0000000048ca77: mov r11, [rbp-0xf0]; mov r10, [rbp-0xd8]; mov [rbp-0xf0], r11; mov [rbp-0xd8], r10; call r15; 
0x0000000048c376: mov r11, [rbp-0xf0]; nop [rax]; mov [rbp-0xf0], r11; call r10; 
0x0000000043cc40: mov r11, [rsi-0x10]; mov rdx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x000000004917f0: mov r11, [rsp+0x30]; mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x0000000049176e: mov r11, [rsp+0x30]; mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000047ca63: mov r11, rcx; mov dword ptr [rbp-0x4d0], 0x1; mov r9d, 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c80b: mov r11, rcx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047c5a3: mov r11, rcx; mov dword ptr [rbp-0x4e8], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000047ca23: mov r11, rcx; mov dword ptr [rbp-0x4f8], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047cb2b: mov r11, rcx; mov dword ptr [rbp-0x508], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c3e3: mov r11, rcx; mov dword ptr [rbp-0x514], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047caf1: mov r11, rcx; mov dword ptr [rbp-0x520], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c363: mov r11, rcx; mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047b98b: mov r11, rcx; xor r9d, r9d; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000442906: mov r11d, 0x46f00ff2; ret far; 
0x0000000043d451: mov r11d, 0x4f7f0ff3; ret far; 
0x0000000045df57: mov r12, [rbp+0x10]; test r12, r12; jne short 0x000000000045df88; mov rdi, [rbp]; call rbx; 
0x0000000041fafe: mov r12b, 0xe8; ret far; 
0x0000000045df97: mov r13, [r12+0x10]; test r13, r13; jne short 0x000000000045dff0; mov rdi, [r12]; call rbx; 
0x0000000045dfc7: mov r13, [r12+0x10]; test r13, r13; jne short 0x000000000045e050; mov rdi, [r12]; call rbx; 
0x000000004a3cf7: mov r13, [rbp-0x18]; mov r14, [rbp-0x10]; mov r15, [rbp-0x8]; leave; ret; 
0x0000000041e484: mov r13, r15; add r15, r12; call rax; 
0x00000000470478: mov r13, rax; mov rdi, r12; call rbx; 
0x0000000045d722: mov r13, rbx; mov rdi, rbp; call r12; 
0x0000000047b609: mov r13, rbx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x0000000047b60a: mov r13, rbx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x0000000045e05e: mov r14, [r13+0x10]; test r14, r14; jne 0x000000000045e110; mov rdi, [r13]; call rbx; 
0x0000000045e02e: mov r14, [r13+0x10]; test r14, r14; jne 0x000000000045e170; mov rdi, [r13]; call rbx; 
0x0000000045dffe: mov r14, [r13+0x10]; test r14, r14; jne 0x000000000045e1d0; mov rdi, [r13]; call rbx; 
0x0000000045e08a: mov r14, [r13+0x10]; test r14, r14; jne short 0x000000000045e0b0; mov rdi, [r13]; call rbx; 
0x000000004a3cfb: mov r14, [rbp-0x10]; mov r15, [rbp-0x8]; leave; ret; 
0x0000000048bab6: mov r14, [rbx]; mov rax, [rbx+0x10]; add rax, [r13]; call rax; 
0x0000000045e0be: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000045e2d2; mov rdi, [r14]; call rbx; 
0x0000000045e17e: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000045e32c; mov rdi, [r14]; call rbx; 
0x0000000045e14e: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000045e386; mov rdi, [r14]; call rbx; 
0x0000000045e11e: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000045e3e0; mov rdi, [r14]; call rbx; 
0x0000000045e0ee: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000045e43a; mov rdi, [r14]; call rbx; 
0x0000000045e1ae: mov r15, [r14+0x10]; test r15, r15; jne 0x000000000045e494; mov rdi, [r14]; call rbx; 
0x0000000045e1da: mov r15, [r14+0x10]; test r15, r15; jne short 0x000000000045e221; mov rdi, [r14]; call rbx; 
0x0000000045e206: mov r15, [r14+0x10]; test r15, r15; jne short 0x000000000045e278; mov rdi, [r14]; call rbx; 
0x000000004a3cff: mov r15, [rbp-0x8]; leave; ret; 
0x000000004a3e6c: mov r15, [rbp-0x8]; mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x0000000045d7f2: mov r15d, r13d; call rax; 
0x00000000486159: mov r8, 0xe9c0558b48c28949; ret; 
0x0000000045e22f: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045e5bb; mov rdi, [r15]; call rbx; 
0x0000000045e394: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045e629; mov rdi, [r15]; call rbx; 
0x0000000045e2b3: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045e697; mov rdi, [r15]; call rbx; 
0x0000000045e448: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045e705; mov rdi, [r15]; call rbx; 
0x0000000045e30d: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045e773; mov rdi, [r15]; call rbx; 
0x0000000045e2e0: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045e7e1; mov rdi, [r15]; call rbx; 
0x0000000045e367: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045e84f; mov rdi, [r15]; call rbx; 
0x0000000045e3ee: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045e8bd; mov rdi, [r15]; call rbx; 
0x0000000045e259: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045e92b; mov rdi, [r15]; call rbx; 
0x0000000045e33a: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045e999; mov rdi, [r15]; call rbx; 
0x0000000045e41b: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045ea07; mov rdi, [r15]; call rbx; 
0x0000000045e286: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045ea75; mov rdi, [r15]; call rbx; 
0x0000000045e3c1: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045eae3; mov rdi, [r15]; call rbx; 
0x0000000045e475: mov r8, [r15+0x10]; test r8, r8; jne 0x000000000045eb51; mov rdi, [r15]; call rbx; 
0x0000000045e49e: mov r8, [r15+0x10]; test r8, r8; jne short 0x000000000045e4e2; mov rdi, [r15]; call rbx; 
0x0000000045e4c7: mov r8, [r15+0x10]; test r8, r8; jne short 0x000000000045e54d; mov rdi, [r15]; call rbx; 
0x000000004a16e8: mov r8, [r8]; mov [r9], r8; add rsp, 0x8; ret; 
0x000000004a16d8: mov r8, [rax]; lea rax, [rax+0x8]; mov [rcx], r8; ret; 
0x0000000048f13d: mov r8, [rip+0x5632c]; mov rax, r8; ret; 
0x0000000048f03b: mov r8, [rip+0x5642e]; jne short 0x000000000048f050; lea rax, [r8+0x1]; mov [rip+0x56421], rax; ret; 
0x0000000046cda6: mov r8, [rsp+0x48]; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x000000004a3cb8: mov r8, r12; mov rcx, r14; mov esi, 0x1; mov edi, 0x1; call rax; 
0x000000004a389c: mov r8, r13; mov rcx, r12; mov esi, 0x1a; mov edi, 0x1; call rax; 
0x000000004a381f: mov r8, r13; mov rcx, r12; mov esi, 0xa; mov edi, 0x1; call rax; 
0x0000000045d003: mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x000000004a374b: mov r8, rbx; mov rcx, r12; or esi, 0x2; mov edi, 0x1; call rax; 
0x000000004817b0: mov r8, rcx; lea rdx, [r8+rdx*4]; mov [rax], rdx; xor eax, eax; ret; 
0x00000000470207: mov r8, rsi; mov r10d, 0x8; mov rsi, r8; mov eax, 0xe; syscall; 
0x0000000045c341: mov r8d, eax; mov eax, 0x3; syscall; 
0x0000000045c035: mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000045c181: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x0000000045c2c9: mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x0000000045c0e1: mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x00000000407cd4: mov r8d, ecx; movsxd rdx, [r9+r8*4]; add rdx, r9; notrack jmp rdx; 
0x0000000044e993: mov r9, [rsi+rdx-0x7]; mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x00000000483c3a: mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x0000000046a859: mov r9, [rsp+0x18]; mov rcx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x000000004653f8: mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x00000000466f5f: mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000046a27d: mov r9, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x00000000466162: mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000465eec: mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x0000000046b9e2: mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x00000000465b77: mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call r15; 
0x00000000467f6c: mov r9, [rsp+0x30]; mov rcx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x000000004694f3: mov r9, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000468eff: mov r9, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x000000004684bf: mov r9, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x0000000045d006: mov r9, [rsp+0x8]; syscall; 
0x0000000045b64d: mov r9, r14; mov rsi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x000000004629f2: mov r9, r14; mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x0000000045adda: mov r9, rax; mov eax, [rcx+rax*4]; sub eax, [rcx+r8*4]; je short 0x000000000045adc8; ret; 
0x0000000047ca70: mov r9d, 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000401008: mov rax, 0x0; test rax, rax; je short 0x0000000000401016; call rax; 
0x00000000484210: mov rax, 0x1; ret; 
0x00000000484220: mov rax, 0x2; ret; 
0x00000000484230: mov rax, 0x3; ret; 
0x00000000484240: mov rax, 0x4; ret; 
0x0000000040a780: mov rax, 0x4dec40; pop rbp; ret; 
0x0000000040a4e0: mov rax, 0x4dec40; ret; 
0x0000000040a7a0: mov rax, 0x4dec80; pop rbp; ret; 
0x0000000040a4d0: mov rax, 0x4dec80; ret; 
0x0000000040a790: mov rax, 0x4decc0; pop rbp; ret; 
0x0000000040a3cc: mov rax, 0x4decc0; ret; 
0x0000000040a7e0: mov rax, 0x4ded00; pop rbp; ret; 
0x0000000040a460: mov rax, 0x4ded00; ret; 
0x0000000040a7d0: mov rax, 0x4ded40; pop rbp; ret; 
0x0000000040a480: mov rax, 0x4ded40; ret; 
0x0000000040a7f0: mov rax, 0x4ded80; pop rbp; ret; 
0x0000000040a42e: mov rax, 0x4ded80; ret; 
0x0000000040a7c0: mov rax, 0x4dedc0; pop rbp; ret; 
0x0000000040a36e: mov rax, 0x4dedc0; ret; 
0x0000000040a802: mov rax, 0x4dee00; pop rbp; ret; 
0x0000000040a3ac: mov rax, 0x4dee00; ret; 
0x0000000040a7f9: mov rax, 0x4dee40; pop rbp; ret; 
0x0000000040a4a8: mov rax, 0x4dee40; ret; 
0x0000000040a82f: mov rax, 0x4dee80; pop rbp; ret; 
0x0000000040a4f0: mov rax, 0x4dee80; ret; 
0x0000000040a826: mov rax, 0x4deec0; pop rbp; ret; 
0x0000000040a470: mov rax, 0x4deec0; ret; 
0x0000000040a838: mov rax, 0x4def00; pop rbp; ret; 
0x0000000040a3ec: mov rax, 0x4def00; ret; 
0x0000000040a841: mov rax, 0x4def40; pop rbp; ret; 
0x0000000040a457: mov rax, 0x4def40; ret; 
0x0000000040a770: mov rax, 0x4e11a0; pop rbp; ret; 
0x0000000040a490: mov rax, 0x4e11a0; ret; 
0x0000000040a7b0: mov rax, 0x4e11e0; pop rbp; ret; 
0x0000000040a40c: mov rax, 0x4e11e0; ret; 
0x0000000040a814: mov rax, 0x4e1220; pop rbp; ret; 
0x0000000040a440: mov rax, 0x4e1220; ret; 
0x0000000040a80b: mov rax, 0x4e1260; pop rbp; ret; 
0x0000000040a500: mov rax, 0x4e1260; ret; 
0x0000000040a81d: mov rax, 0x4e12a0; pop rbp; ret; 
0x0000000040a4b0: mov rax, 0x4e12a0; ret; 
0x0000000040a766: mov rax, 0x4e12e0; pop rbp; ret; 
0x0000000040a4c0: mov rax, 0x4e12e0; ret; 
0x00000000402584: mov rax, 0x4e2130; mov rax, [rax]; mov eax, [rax]; ret; 
0x00000000484250: mov rax, 0x5; ret; 
0x00000000484260: mov rax, 0x6; ret; 
0x00000000484270: mov rax, 0x7; ret; 
0x0000000049e8f0: mov rax, 0x8000000000000000; mov [r8], rax; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000046ffa0: mov rax, 0xf; syscall; 
0x0000000046fda4: mov rax, 0xffffffffffffffa8; movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000411ad4: mov rax, 0xffffffffffffffc0; add rax, fs:[0x0]; ret; 
0x0000000045bef0: mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000045d068: mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x00000000485168: mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000048fa64: mov rax, 0xffffffffffffffc0; pop rbx; mov eax, fs:[rax]; ret; 
0x0000000042c570: mov rax, 0xffffffffffffffc0; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x0000000046fe04: mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046fde4: mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046fdc4: mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x00000000427934: mov rax, 0xffffffffffffffff; ret; 
0x0000000040a8fa: mov rax, [r8+0x10]; test rax, rax; je short 0x000000000040a908; jmp rax; 
0x0000000040a919: mov rax, [r8+0x18]; test rax, rax; je short 0x000000000040a928; jmp rax; 
0x0000000041ec28: mov rax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000040a953: mov rax, [rax+0x18]; test rax, rax; je short 0x000000000040a988; mov rbx, rsi; call rax; 
0x00000000421e14: mov rax, [rax+0x20]; jmp rax; 
0x0000000046fe5e: mov rax, [rax+0x58]; mov rdx, 0xffffffffffffffe0; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000042775f: mov rax, [rax+0x68]; test rax, rax; jne short 0x0000000000427758; ret; 
0x000000004916e4: mov rax, [rax+0x8]; ret; 
0x000000004916f4: mov rax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x00000000480d54: mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000480e89: mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000421e0d: mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x0000000046e20d: mov rax, [rax+r12*8]; test rax, rax; je short 0x000000000046e218; call rax; 
0x0000000046e493: mov rax, [rax+rbp*8]; test rax, rax; je short 0x000000000046e49e; call rax; 
0x000000004a78ff: mov rax, [rax+rbx*8]; test rax, rax; je short 0x00000000004a790a; call rax; 
0x000000004758f5: mov rax, [rax+rcx*8]; jmp rax; 
0x0000000046fdb2: mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000047c5b0: mov rax, [rax+rsi*8]; jmp rax; 
0x000000004a391c: mov rax, [rax]; add rsp, 0x8; ret; 
0x0000000040258b: mov rax, [rax]; mov eax, [rax]; ret; 
0x0000000046fdaf: mov rax, [rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x000000004284f8: mov rax, [rax]; test rax, rax; jne short 0x00000000004284f0; ret; 
0x0000000040a969: mov rax, [rbp+0x10]; test rax, rax; je short 0x000000000040a988; call rax; 
0x0000000045d7ee: mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x0000000049e585: mov rax, [rbp-0x8]; xor rax, fs:[0x28]; jne 0x000000000049e615; leave; ret; 
0x0000000048bab9: mov rax, [rbx+0x10]; add rax, [r13]; call rax; 
0x0000000048befa: mov rax, [rbx+0x10]; add rax, [r15]; test ecx, ecx; jne short 0x000000000048bf07; call rax; 
0x0000000048c797: mov rax, [rbx+0x10]; add rax, [r15]; test edx, edx; jne short 0x000000000048c7a4; call rax; 
0x0000000048c087: mov rax, [rbx+0x10]; add rax, [r15]; test r11d, r11d; jne short 0x000000000048c095; call rax; 
0x000000004983d0: mov rax, [rbx+0x10]; mov [rax], rdi; pop rbx; ret; 
0x000000004983c0: mov rax, [rbx+0x10]; mov rdx, [rdi+0x30]; mov [rax], rdx; pop rbx; ret; 
0x000000004269b0: mov rax, [rbx+0x18]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000004270cc: mov rax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x0000000042754e: mov rax, [rbx+0x48]; add rsp, 0x20; xor edx, edx; pop rbx; jmp rax; 
0x00000000455016: mov rax, [rcx+0x5]; mov [rdx+0x5], rax; lea rax, [rdx+0xc]; ret; 
0x00000000450c86: mov rax, [rcx+0x5]; mov [rdx+0x5], rax; mov rax, rdi; ret; 
0x00000000455036: mov rax, [rcx+0x6]; mov [rdx+0x6], rax; lea rax, [rdx+0xd]; ret; 
0x00000000450ca6: mov rax, [rcx+0x6]; mov [rdx+0x6], rax; mov rax, rdi; ret; 
0x00000000455056: mov rax, [rcx+0x7]; mov [rdx+0x7], rax; lea rax, [rdx+0xe]; ret; 
0x00000000450cc6: mov rax, [rcx+0x7]; mov [rdx+0x7], rax; mov rax, rdi; ret; 
0x00000000454ee6: mov rax, [rcx+0x8]; mov [rdx+0x8], rax; lea rax, [rdx+0xf]; ret; 
0x00000000450bb6: mov rax, [rcx+0x8]; mov [rdx+0x8], rax; mov rax, rdi; ret; 
0x000000004304a8: mov rax, [rcx+rax+0x8]; sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x00000000454e90: mov rax, [rcx]; mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x00000000450b60: mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000046f605: mov rax, [rdi+0x20]; mov rbp, rdi; test rax, rax; je short 0x000000000046f613; call rax; 
0x000000004a7bd4: mov rax, [rdi+0x20]; test rax, rax; je short 0x00000000004a7be4; call rax; 
0x000000004292b4: mov rax, [rdi+0x28]; cmp [rdi+0x10], rax; cmovae rax, [rdi+0x10]; sub rax, [rdi+0x18]; ret; 
0x00000000429e02: mov rax, [rdi+0x28]; mov [rax+0x20], rdx; add rsp, 0x8; ret; 
0x0000000042683e: mov rax, [rdi+0x48]; mov [rdi+0x48], rdx; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x00000000428884: mov rax, [rdi+0x68]; ret; 
0x000000004289aa: mov rax, [rdi+0x8]; cmp rax, rdx; jae short 0x00000000004289d8; movzx eax, byte ptr [rax]; ret; 
0x000000004a3934: mov rax, [rdi+0x90]; ret; 
0x000000004a39a4: mov rax, [rdi+0x98]; ret; 
0x00000000480d34: mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x0000000000480d48; ret; 
0x000000004a39e4: mov rax, [rdi+0xa0]; ret; 
0x000000004a3a44: mov rax, [rdi+0xa8]; ret; 
0x000000004a3a34: mov rax, [rdi+0xb0]; ret; 
0x000000004a39f4: mov rax, [rdi+0xb8]; ret; 
0x0000000043acb0: mov rax, [rdi-0x8]; cmp rcx, rax; jne 0x000000000043b163; xor eax, eax; ret; 
0x00000000429724: mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000429730; ret; 
0x00000000429384: mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000429390; ret; 
0x00000000429784: mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000429790; ret; 
0x000000004293c4: mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x00000000004293d0; ret; 
0x0000000049bfd4: mov rax, [rdi]; cmp rax, rsi; je short 0x000000000049bfe0; ret; 
0x00000000428505: mov rax, [rdi]; mov [rdx], rax; ret; 
0x000000004293e4: mov rax, [rdi]; nop; mov [rip+0xb93b9], rax; ret; 
0x00000000429374: mov rax, [rdi]; nop; mov [rip+0xb93d9], rax; ret; 
0x00000000429364: mov rax, [rdi]; nop; mov [rip+0xb93f1], rax; ret; 
0x00000000429774: mov rax, [rdi]; nop; mov [rip+0xbb5b6], eax; ret; 
0x00000000429754: mov rax, [rdi]; nop; mov dword ptr [rip+0xb9012], 0x1; mov [rip+0xb9004], eax; ret; 
0x00000000429704: mov rax, [rdi]; nop; mov dword ptr [rip+0xb9062], 0x1; mov [rip+0xb902f], rax; ret; 
0x000000004296e4: mov rax, [rdi]; nop; mov dword ptr [rip+0xb9082], 0x1; mov [rip+0xb9047], rax; ret; 
0x0000000048f689: mov rax, [rdx+rax]; mov edx, 0x0; cmp rax, 0xffffffffffffffff; cmove rax, rdx; ret; 
0x0000000048f1a4: mov rax, [rip+0x52f8d]; mov [rdi], rax; mov rax, [rip+0x562b3]; mov [rsi], rax; ret; 
0x0000000048f1ae: mov rax, [rip+0x562b3]; mov [rsi], rax; ret; 
0x000000004847a0: mov rax, [rip+0x5d2f1]; test rax, rax; je short 0x00000000004847e0; call rax; 
0x00000000478bc7: mov rax, [rip+0x6cef9]; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x00000000472777: mov rax, [rip+0x73349]; shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000046d204: mov rax, [rip+0x77c45]; ret; 
0x00000000463854: mov rax, [rip+0x821ad]; ret; 
0x0000000045cf64: mov rax, [rip+0x861ed]; test rax, rax; je short 0x000000000045cf71; ret; 
0x00000000428864: mov rax, [rip+0xb98f5]; ret; 
0x000000004a4579: mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x000000004a17d9: mov rax, [rsi+0xa8]; add rsp, 0x8; ret; 
0x000000004a1838: mov rax, [rsi+0xb0]; add rsp, 0x8; ret; 
0x000000004a17ec: mov rax, [rsi+0xb8]; add rsp, 0x8; ret; 
0x00000000475508: mov rax, [rsi+rax*8]; jmp rax; 
0x00000000492339: mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x00000000411209: mov rax, [rsp+0x18]; call rax; 
0x00000000466cf9: mov rax, [rsp+0x20]; call rax; 
0x00000000465158: mov rax, [rsp+0x28]; call rax; 
0x00000000465efb: mov rax, [rsp+0x30]; call rax; 
0x0000000045c101: mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x000000004a43b2: mov rax, [rsp+0x8]; mov [rsp+0x10], r10; call rax; 
0x0000000045d347: mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000045d348: mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x000000004a586a: mov rax, [rsp+0x8]; mov rdx, r15; mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x0000000046feb7: mov rax, [rsp+0x8]; xor rax, fs:[0x28]; jne short 0x000000000046fecc; add rsp, 0x18; ret; 
0x000000004a11cc: mov rax, [rsp]; add rsp, 0x38; ret; 
0x0000000041e31b: mov rax, [rsp]; call rax; 
0x0000000041e31a: mov rax, [rsp]; call rax; 
0x00000000421394: mov rax, [rsp]; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [rax+0x18]; 
0x0000000041e480: mov rax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x0000000041e280: mov rax, [rsp]; mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x0000000041e40b: mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x0000000041e40a: mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x000000004905dd: mov rax, [rsp]; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000046fdae: mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x00000000481d98: mov rax, r12; pop r12; pop r13; ret; 
0x0000000040dbf6: mov rax, r12; pop r12; ret; 
0x0000000045de41: mov rax, r12; pop rbp; pop r12; jmp rax; 
0x0000000045d1c8: mov rax, r12; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000042997a: mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x00000000404e10: mov rax, r12; pop rbp; pop r12; ret; 
0x00000000407c8b: mov rax, r12; pop rbx; pop r12; ret; 
0x00000000411cfa: mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x00000000499555: mov rax, r13; pop r12; pop r13; ret; 
0x0000000045d748: mov rax, r13; pop rbp; pop r12; pop r13; ret; 
0x0000000042e899: mov rax, r8; pop r12; pop r13; ret; 
0x00000000429b5d: mov rax, r8; pop r12; ret; 
0x0000000042e906: mov rax, r8; pop r13; ret; 
0x00000000423386: mov rax, r8; pop rbp; pop r12; ret; 
0x0000000042d9b3: mov rax, r8; pop rbp; ret; 
0x0000000042e0b9: mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x0000000041ef0b: mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000042d7bc: mov rax, r8; pop rbx; ret; 
0x0000000041ef00: mov rax, r8; ret; 
0x0000000048e4b6: mov rax, r8; ret; 
0x00000000484603: mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x00000000483490: mov rax, r8; vzeroupper; ret; 
0x00000000415d95: mov rax, r9; pop r12; ret; 
0x00000000478677: mov rax, r9; pop r14; ret; 
0x00000000415d67: mov rax, r9; pop rbx; pop rbp; pop r12; ret; 
0x00000000405c5b: mov rax, rbp; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000042472d: mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000004a3b52: mov rax, rbp; pop rbx; pop rbp; ret; 
0x00000000425088: mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x00000000404ecf: mov rax, rbx; pop rbx; pop rbp; ret; 
0x00000000404c46: mov rax, rbx; pop rbx; ret; 
0x00000000428894: mov rax, rdi; ret; 
0x000000004527de: mov rax, rdi; sub r8, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000452d30; ret; 
0x000000004529d4: mov rax, rdi; sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000452d30; ret; 
0x000000004529f6: mov rax, rdi; sub r8, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000452d30; ret; 
0x00000000452a1c: mov rax, rdi; sub r8, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000452d30; ret; 
0x00000000452a34: mov rax, rdi; sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000452d30; ret; 
0x00000000452a5a: mov rax, rdi; sub r8, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000452d30; ret; 
0x00000000452a7c: mov rax, rdi; sub r8, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000452d30; ret; 
0x00000000452a9a: mov rax, rdi; sub r8, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000452d30; ret; 
0x00000000452776: mov rax, rdi; sub r8, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000452d30; ret; 
0x00000000452abc: mov rax, rdi; sub r8, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000452d30; ret; 
0x00000000452adc: mov rax, rdi; sub r8, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000452d30; ret; 
0x00000000452afc: mov rax, rdi; sub r8, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000452d30; ret; 
0x00000000452b1c: mov rax, rdi; sub r8, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000452d30; ret; 
0x00000000452b3e: mov rax, rdi; sub r8, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000452d30; ret; 
0x00000000452b5e: mov rax, rdi; sub r8, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000452d30; ret; 
0x00000000452b7e: mov rax, rdi; sub r8, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000452d30; ret; 
0x0000000044f340: mov rax, rdi; vzeroupper; ret; 
0x0000000045a860: mov rax, rdx; pop rbx; ret; 
0x0000000044f528: mov rax, rdx; ret; 
0x000000004a3e70: mov rbp, [rbp]; mov rsp, rcx; pop rcx; jmp rcx; 
0x0000000049246e: mov rbp, r9; nop; jmp rdx; 
0x0000000045c445: mov rbp, rdi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000046f609: mov rbp, rdi; test rax, rax; je short 0x000000000046f613; call rax; 
0x0000000048f80b: mov rbp, rsp; mov rsi, rbp; syscall; 
0x000000004905e4: mov rbx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000048fdcb: mov rbx, [rsp]; add rsp, 0x30; bnd jmp r11; 
0x0000000048fedd: mov rbx, [rsp]; add rsp, 0x30; bnd ret; 
0x00000000408b3a: mov rbx, rdi; sub rsp, 0x8; movsxd rax, [rcx+rsi*4]; add rax, rcx; notrack jmp rax; 
0x00000000480d4c: mov rbx, rdi; test byte ptr [rdi], 0x2; jne short 0x0000000000480dc8; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x0000000040a95c: mov rbx, rsi; call rax; 
0x0000000040a9c1: mov rbx, rsi; mov rdi, rsi; call rax; 
0x0000000045be34: mov rcx, 0xffffffffffffffc0; neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000046fd83: mov rcx, 0xffffffffffffffe8; mov fs:[rcx], rdx; mov rdx, 0xffffffffffffffe0; mov fs:[rdx], rax; ret; 
0x000000004806f5: mov rcx, [rax+0x10]; mov [rax], rdx; mov [rax+0x10], rdx; mov [rax+0x40], rcx; ret; 
0x00000000445edc: mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x00000000445edd: mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x0000000048fdf3: mov rcx, [rdi+0x18]; mov rsi, [rdi+0x20]; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000043dc7e: mov rcx, [rip+0xa5433]; lea r11, [rip+0x78e64]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043dc24: mov rcx, [rip+0xa548d]; lea r11, [rip+0x78e7e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043b29e: mov rcx, [rip+0xa7e13]; lea r11, [rip+0x7b684]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043b23d: mov rcx, [rip+0xa7e74]; lea r11, [rip+0x7b6a5]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000456c54: mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x000000004555a4: mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x00000000455584: mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x00000000456c14: mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x00000000455544: mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x00000000456c34: mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x00000000455564: mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x00000000459602: mov rcx, [rsi+rdx-0x8]; mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x0000000043a72a: mov rcx, [rsi-0x8]; cmp rcx, rax; jne 0x000000000043b163; xor eax, eax; ret; 
0x0000000043b136: mov rcx, [rsi-0x8]; cmp rcx, rax; jne short 0x000000000043b163; xor eax, eax; ret; 
0x00000000442533: mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000442534: mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x000000004424a4: mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x000000004424a3: mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000442414: mov rcx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x0000000043ce20: mov rcx, [rsi-0x9]; mov edx, [rsi-0x4]; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d000: mov rcx, [rsi-0xa]; mov edx, [rsi-0x4]; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d1e0: mov rcx, [rsi-0xb]; mov edx, [rsi-0x4]; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d3c0: mov rcx, [rsi-0xc]; mov edx, [rsi-0x4]; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d5b0: mov rcx, [rsi-0xd]; mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d7b0: mov rcx, [rsi-0xe]; mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d9b0: mov rcx, [rsi-0xf]; mov rdx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000442eb4: mov rcx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x00000000442e44: mov rcx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x00000000442dd4: mov rcx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x00000000442d64: mov rcx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x00000000442cf4: mov rcx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x00000000442c84: mov rcx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x00000000442c14: mov rcx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x00000000456aa0: mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; lea rax, [rdi+0x8]; ret; 
0x00000000455450: mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x00000000456140: mov rcx, [rsi]; mov dl, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dl; ret; 
0x00000000455460: mov rcx, [rsi]; mov dx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], dx; ret; 
0x00000000455470: mov rcx, [rsi]; mov edx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], edx; ret; 
0x00000000455480: mov rcx, [rsi]; mov edx, [rsi+0x8]; mov [rdi], rcx; mov [rdi+0x8], edx; ret; 
0x00000000455490: mov rcx, [rsi]; mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x000000004554a0: mov rcx, [rsi]; mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x000000004554b0: mov rcx, [rsi]; mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x000000004922dc: mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x0000000046cdaa: mov rcx, [rsp+0x18]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000467f71: mov rcx, [rsp+0x18]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x0000000041f93a: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000041f952; add rsp, 0xd8; ret; 
0x0000000045ccf3: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000045cd4b; add rsp, 0x58; ret; 
0x0000000045cd91: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000045cdeb; add rsp, 0x58; ret; 
0x0000000045f9d3: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x000000000045f9eb; add rsp, 0xd8; ret; 
0x00000000471f6a: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x0000000000471f82; add rsp, 0xd8; ret; 
0x000000004984ae: mov rcx, [rsp+0x18]; xor rcx, fs:[0x28]; jne short 0x00000000004984c3; add rsp, 0x28; ret; 
0x0000000045b7d2: mov rcx, [rsp+0x20]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x0000000046737e: mov rcx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000046a85e: mov rcx, [rsp+0x28]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000045c258: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne 0x000000000045c305; add rsp, 0x68; ret; 
0x0000000045cbac: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x000000000045cc03; add rsp, 0x68; ret; 
0x000000004919bb: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x00000000004919f3; add rsp, 0x38; ret; 
0x00000000492707: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x0000000000492735; add rsp, 0x38; ret; 
0x0000000049eb17: mov rcx, [rsp+0x28]; xor rcx, fs:[0x28]; jne short 0x000000000049eb2c; add rsp, 0x38; ret; 
0x00000000466cea: mov rcx, [rsp+0x30]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000046b590: mov rcx, [rsp+0x30]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000469e93: mov rcx, [rsp+0x30]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000404fdc: mov rcx, [rsp+0x38]; xor rcx, fs:[0x28]; jne short 0x0000000000404ff1; add rsp, 0x48; ret; 
0x000000004917fa: mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x00000000491778: mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000491a87: mov rcx, [rsp+0x48]; xor rcx, fs:[0x28]; jne short 0x0000000000491ac4; add rsp, 0x58; ret; 
0x00000000491f17: mov rcx, [rsp+0x48]; xor rcx, fs:[0x28]; jne short 0x0000000000491f54; add rsp, 0x58; ret; 
0x00000000491bf9: mov rcx, [rsp+0x58]; xor rcx, fs:[0x28]; jne short 0x0000000000491c44; add rsp, 0x68; ret; 
0x00000000470227: mov rcx, [rsp+0x88]; xor rcx, fs:[0x28]; jne 0x00000000004702d6; add rsp, 0x98; ret; 
0x00000000408afe: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x0000000000408b13; add rsp, 0x18; ret; 
0x0000000045cc3b: mov rcx, [rsp+0x8]; xor rcx, fs:[0x28]; jne short 0x000000000045cc93; add rsp, 0x18; ret; 
0x000000004a389f: mov rcx, r12; mov esi, 0x1a; mov edi, 0x1; call rax; 
0x000000004a3822: mov rcx, r12; mov esi, 0xa; mov edi, 0x1; call rax; 
0x0000000045b655: mov rcx, r12; mov rdx, r13; call rbx; 
0x000000004a374e: mov rcx, r12; or esi, 0x2; mov edi, 0x1; call rax; 
0x000000004a3cbb: mov rcx, r14; mov esi, 0x1; mov edi, 0x1; call rax; 
0x00000000422cae: mov rcx, r14; mov rdi, r15; call r12; 
0x0000000048e3ba: mov rcx, rax; cmp rcx, rdx; jne short 0x000000000048e398; mov eax, [rcx]; ret; 
0x000000004285a9: mov rcx, rdx; add rax, rcx; mov [rdi+0x8], rax; xor eax, eax; ret; 
0x000000004595e5: mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000045dfa0: mov rdi, [r12]; call rbx; 
0x0000000041e314: mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x000000004836f0: mov rdi, [r12]; movzx esi, bl; call rbp; 
0x000000004837b4: mov rdi, [r12]; push 0x0; lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x000000004a678b: mov rdi, [r13+0x10]; add rdi, rbp; call r12; 
0x0000000045e00b: mov rdi, [r13]; call rbx; 
0x0000000045e0cb: mov rdi, [r14]; call rbx; 
0x0000000045e1e2: mov rdi, [r14]; call rbx; 
0x0000000045e23c: mov rdi, [r15]; call rbx; 
0x0000000045e502: mov rdi, [r8]; call rbx; 
0x0000000045d2a6: mov rdi, [rbp+0x10]; test rdi, rdi; jne short 0x000000000045d2d6; mov rdi, [rbp]; call rbx; 
0x0000000045d2af: mov rdi, [rbp]; call rbx; 
0x0000000048fdfb: mov rdi, [rdi+0x28]; bnd call r11; 
0x000000004916a4: mov rdi, [rip+0x53955]; lea rax, [rdi-0x1]; cmp rax, 0xfffffffffffffffd; jbe short 0x00000000004916c0; ret; 
0x0000000049233e: mov rdi, [rsp+0x18]; call rax; 
0x000000004922e1: mov rdi, [rsp+0x18]; call rcx; 
0x00000000470488: mov rdi, [rsp+0x18]; mov rdx, rbp; mov rsi, r12; call rbx; 
0x0000000048fdc3: mov rdi, [rsp+0x28]; mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x30; bnd jmp r11; 
0x000000004694fc: mov rdi, [rsp+0x38]; call r15; 
0x0000000046cf19: mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000468f08: mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x00000000467f7a: mov rdi, [rsp+0x40]; call r14; 
0x000000004684c8: mov rdi, [rsp+0x40]; call rbx; 
0x00000000467388: mov rdi, [rsp+0x48]; call r13; 
0x00000000467888: mov rdi, [rsp+0x48]; call rbx; 
0x0000000046a287: mov rdi, [rsp+0x50]; call rbx; 
0x0000000046b59a: mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000469e9d: mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000465402: mov rdi, [rsp+0x58]; call r14; 
0x00000000466952: mov rdi, [rsp+0x58]; call r15; 
0x0000000046616c: mov rdi, [rsp+0x58]; call rbx; 
0x000000004664cd: mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000466cf4: mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000465153: mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000465ef6: mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000465b81: mov rdi, [rsp+0x60]; call r15; 
0x0000000046573e: mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x00000000427102: mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x000000004269d5: mov rdi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x00000000475635: mov rdi, r12; call qword ptr [rax+0x38]; 
0x00000000426f8d: mov rdi, r12; call qword ptr [rbx+0x18]; 
0x00000000475814: mov rdi, r12; call qword ptr [rcx+0x38]; 
0x0000000041e28a: mov rdi, r12; call rax; 
0x0000000047047b: mov rdi, r12; call rbx; 
0x00000000483ae9: mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x0000000047bcf4: mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [r8+0x38]; 
0x0000000047c2f9: mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [rbx+0x38]; 
0x000000004767af: mov rdi, r12; mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x00000000476272: mov rdi, r12; mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x0000000047cf65: mov rdi, r12; mov [rbp-0x500], r11; mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x00000000476a04: mov rdi, r12; mov [rbp-0x508], r10d; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x0000000049425c: mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x0000000042e227: mov rdi, r12; mov eax, 0xca; syscall; 
0x00000000483c3f: mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x0000000047515c: mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000475701: mov rdi, r12; sub r15, r8; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000047bb04: mov rdi, r12; sub rbx, r8; sar rbx, 0x2; mov rdx, rbx; call qword ptr [rax+0x38]; 
0x0000000048130b: mov rdi, r13; call qword ptr [r14+0x20]; 
0x0000000047a080: mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000479c91: mov rdi, r13; call qword ptr [r8+0x38]; 
0x00000000478e20: mov rdi, r13; call qword ptr [rcx+0x38]; 
0x0000000041e412: mov rdi, r13; call rax; 
0x000000004704b6: mov rdi, r13; call rbx; 
0x0000000040aa48: mov rdi, r13; call rdx; 
0x00000000422a5e: mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000047997f: mov rdi, r13; mov [rbp-0x970], r10d; mov [rbp-0x958], r9b; call rax; 
0x0000000042f7ba: mov rdi, r13; mov eax, 0xca; syscall; 
0x000000004797cd: mov rdi, r13; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x0000000042ed85: mov rdi, r14; call rax; 
0x000000004707f1: mov rdi, r14; call rbp; 
0x0000000045d7eb: mov rdi, r14; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x00000000470593: mov rdi, r14; mov rdx, r12; call rbp; 
0x000000004219d0: mov rdi, r15; call qword ptr [r13+0x80]; 
0x00000000480280: mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000004216ea: mov rdi, r15; call qword ptr [r14+0x80]; 
0x0000000042161e: mov rdi, r15; call qword ptr [r14+0x90]; 
0x000000004802ed: mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000421bc6: mov rdi, r15; call qword ptr [rbp+0x80]; 
0x000000004736b9: mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000421cb6: mov rdi, r15; call qword ptr [rbx+0x80]; 
0x00000000473410: mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000422cb1: mov rdi, r15; call r12; 
0x00000000421743: mov rdi, r15; call rax; 
0x000000004a43db: mov rdi, r15; lea rbx, [r12+rcx*8]; mov rsi, [rbx]; call rax; 
0x00000000473147: mov rdi, r15; mov [rbp-0x94c], r9d; mov [rbp-0x940], r11d; call rax; 
0x000000004303fb: mov rdi, r15; mov eax, 0xca; syscall; 
0x000000004a43ac: mov rdi, r15; mov rdx, [r10]; mov rax, [rsp+0x8]; mov [rsp+0x10], r10; call rax; 
0x000000004731f4: mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000042376e: mov rdi, r8; call qword ptr [r15+0x18]; 
0x0000000042139d: mov rdi, r8; call qword ptr [rax+0x18]; 
0x000000004924c2: mov rdi, rax; cmp rdx, rcx; jae short 0x00000000004924ac; mov rax, r8; ret; 
0x0000000041e163: mov rdi, rax; mov eax, 0xba; syscall; 
0x00000000424bd4: mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000424b71: mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000480b4a: mov rdi, rbp; call qword ptr [r14+0x18]; 
0x00000000423994: mov rdi, rbp; call qword ptr [r15+0x40]; 
0x00000000423db4: mov rdi, rbp; call qword ptr [r15+0x80]; 
0x0000000042392b: mov rdi, rbp; call qword ptr [r15+0x90]; 
0x000000004248cf: mov rdi, rbp; call qword ptr [rax+0x18]; 
0x000000004243c7: mov rdi, rbp; call qword ptr [rax+0x40]; 
0x000000004249c2: mov rdi, rbp; call qword ptr [rax+0x78]; 
0x00000000423cd4: mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000423b76: mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000041ffdb: mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x00000000426b26: mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x000000004203cc: mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x00000000425be1: mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x0000000047fa3a: mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000045d725: mov rdi, rbp; call r12; 
0x00000000423d23: mov rdi, rbp; call rax; 
0x0000000045c448: mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000045d04c: mov rdi, rbp; mov eax, 0x9; syscall; 
0x0000000042b0bc: mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000045d1a6: mov rdi, rbp; mov edx, r13d; mov esi, 0x1; call r12; 
0x0000000045de3e: mov rdi, rbp; mov rax, r12; pop rbp; pop r12; jmp rax; 
0x0000000045d236: mov rdi, rbp; mov rdx, r13; mov esi, 0x1; call r12; 
0x0000000045b7d7: mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000421e09: mov rdi, rbp; pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x00000000480ab3: mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x0000000042e913: mov rdi, rbp; pop rbp; pop r12; pop r13; jmp rax; 
0x00000000426a9b: mov rdi, rbp; pop rbx; pop rbp; jmp rax; 
0x0000000042e08a: mov rdi, rbp; pop rbx; pop rbp; pop r12; jmp rax; 
0x0000000045de1d: mov rdi, rbp; xor edx, edx; mov esi, 0x1; call r12; 
0x0000000045d194: mov rdi, rbp; xor esi, esi; call r12; 
0x0000000042845a: mov rdi, rbx; call qword ptr [r12+0x18]; 
0x000000004246ed: mov rdi, rbx; call qword ptr [r12+0x80]; 
0x00000000425375: mov rdi, rbx; call qword ptr [r12+0x88]; 
0x00000000428294: mov rdi, rbx; call qword ptr [r13+0x18]; 
0x0000000047fbe4: mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000420b2e: mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000042743e: mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000478443: mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000042523a: mov rdi, rbx; call qword ptr [r14+0x78]; 
0x00000000427b5d: mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000042091a: mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000427ecf: mov rdi, rbx; call qword ptr [r15+0x58]; 
0x000000004268bf: mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x00000000426ef0: mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000427980: mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000042514e: mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x00000000420560: mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000420bf1: mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000424563: mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x00000000422520: mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000462cf4: mov rdi, rbx; call r12; 
0x00000000463d54: mov rdi, rbx; call r14; 
0x000000004a4303: mov rdi, rbx; call r15; 
0x0000000047f607: mov rdi, rbx; call r8; 
0x0000000047f011: mov rdi, rbx; call rax; 
0x000000004638a9: mov rdi, rbx; call rbp; 
0x0000000046344b: mov rdi, rbx; call rsi; 
0x0000000042f180: mov rdi, rbx; mov eax, 0xca; syscall; 
0x000000004251fa: mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x00000000423678: mov rdi, rbx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x0000000042103f: mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x00000000492546: mov rdi, rdx; cmp rax, 0x9; ja short 0x0000000000492520; mov rax, r8; ret; 
0x0000000048302e: mov rdi, rsi; bsr eax, eax; lea rax, [rdi+rax-0x20]; vzeroupper; ret; 
0x0000000040a9c3: mov rdi, rsi; call rax; 
0x0000000040a9c4: mov rdi, rsi; call rax; 
0x0000000040a8f7: mov rdi, rsi; mov rax, [r8+0x10]; test rax, rax; je short 0x000000000040a908; jmp rax; 
0x0000000045bed8: mov rdx, 0xffffffffffffffc0; neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000045c110: mov rdx, 0xffffffffffffffc0; neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000046fe62: mov rdx, 0xffffffffffffffe0; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x0000000046fd8e: mov rdx, 0xffffffffffffffe0; mov fs:[rdx], rax; ret; 
0x000000004a43af: mov rdx, [r10]; mov rax, [rsp+0x8]; mov [rsp+0x10], r10; call rax; 
0x000000004a5746: mov rdx, [r12]; mov rdi, r14; call rbp; 
0x000000004797c9: mov rdx, [r14+0x20]; mov rdi, r13; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x000000004731f0: mov rdx, [r14+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x00000000421737: mov rdx, [r15+0x40]; sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x00000000423d18: mov rdx, [rbp+0x40]; sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x0000000049843c: mov rdx, [rbx+0x10]; mov [rdx], rax; pop rbx; ret; 
0x00000000423675: mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x0000000042103c: mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x0000000045fab9: mov rdx, [rcx+rdx]; lea rcx, [rip-0x64]; mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x000000004983c4: mov rdx, [rdi+0x30]; mov [rax], rdx; pop rbx; ret; 
0x00000000498423: mov rdx, [rdi+0x458]; mov [rax], rdx; pop rbx; ret; 
0x00000000420643: mov rdx, [rdi+0xa0]; mov [rdx+0xe0], rcx; ret; 
0x000000004089fc: mov rdx, [rdx]; cmp [rdx], esi; jne short 0x00000000004089f0; mov eax, 0xffffffef; ret; 
0x0000000049901e: mov rdx, [rip+0x4c113]; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000004111f9: mov rdx, [rip+0xd3b48]; mov edi, [rsp+0xc]; mov rsi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x0000000041119c: mov rdx, [rip+0xd3ba5]; mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x00000000442eb0: mov rdx, [rsi+0x1]; mov rcx, [rsi]; mov [rdi+0x1], rdx; mov [rdi], rcx; ret; 
0x00000000442e40: mov rdx, [rsi+0x2]; mov rcx, [rsi]; mov [rdi+0x2], rdx; mov [rdi], rcx; ret; 
0x00000000442dd0: mov rdx, [rsi+0x3]; mov rcx, [rsi]; mov [rdi+0x3], rdx; mov [rdi], rcx; ret; 
0x00000000442d60: mov rdx, [rsi+0x4]; mov rcx, [rsi]; mov [rdi+0x4], rdx; mov [rdi], rcx; ret; 
0x00000000456b13: mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; lea rax, [rdi+0xc]; ret; 
0x00000000455493: mov rdx, [rsi+0x5]; mov [rdi], rcx; mov [rdi+0x5], rdx; ret; 
0x00000000442cf0: mov rdx, [rsi+0x5]; mov rcx, [rsi]; mov [rdi+0x5], rdx; mov [rdi], rcx; ret; 
0x00000000456b33: mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; lea rax, [rdi+0xd]; ret; 
0x000000004554a3: mov rdx, [rsi+0x6]; mov [rdi], rcx; mov [rdi+0x6], rdx; ret; 
0x00000000442c80: mov rdx, [rsi+0x6]; mov rcx, [rsi]; mov [rdi+0x6], rdx; mov [rdi], rcx; ret; 
0x00000000456b53: mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; lea rax, [rdi+0xe]; ret; 
0x000000004554b3: mov rdx, [rsi+0x7]; mov [rdi], rcx; mov [rdi+0x7], rdx; ret; 
0x00000000442c10: mov rdx, [rsi+0x7]; mov rcx, [rsi]; mov [rdi+0x7], rdx; mov [rdi], rcx; ret; 
0x0000000044f043: mov rdx, [rsi+r8-0x8]; mov [rdi], rcx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x0000000043cc44: mov rdx, [rsi-0x8]; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043d596: mov rdx, [rsi-0x8]; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d598: mov rdx, [rsi-0x8]; mov [rdi-0x15], r11; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d798: mov rdx, [rsi-0x8]; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d796: mov rdx, [rsi-0x8]; mov [rdi-0x16], r11; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d998: mov rdx, [rsi-0x8]; mov [rdi-0x17], r11; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043cc28: mov rdx, [rsi-0x8]; mov [rdi-0x18], r10; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043cc60: mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x0000000043d5b2: mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d5b4: mov rdx, [rsi-0x8]; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d7b4: mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d7b2: mov rdx, [rsi-0x8]; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d9b4: mov rdx, [rsi-0x8]; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x00000000442740: mov rdx, [rsi-0x9]; mov ecx, [rsi-0x4]; mov [rdi-0x9], rdx; mov [rdi-0x4], ecx; ret; 
0x000000004426c0: mov rdx, [rsi-0xa]; mov ecx, [rsi-0x4]; mov [rdi-0xa], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000442640: mov rdx, [rsi-0xb]; mov ecx, [rsi-0x4]; mov [rdi-0xb], rdx; mov [rdi-0x4], ecx; ret; 
0x000000004425c0: mov rdx, [rsi-0xc]; mov ecx, [rsi-0x4]; mov [rdi-0xc], rdx; mov [rdi-0x4], ecx; ret; 
0x00000000442530: mov rdx, [rsi-0xd]; mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x000000004424a0: mov rdx, [rsi-0xe]; mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000442410: mov rdx, [rsi-0xf]; mov rcx, [rsi-0x8]; mov [rdi-0xf], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000456a90: mov rdx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x00000000442f20: mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x0000000045be7d: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000045bea1; add rsp, 0x28; ret; 
0x0000000045cfd0: mov rdx, [rsp+0x18]; xor rdx, fs:[0x28]; jne short 0x000000000045cfe5; add rsp, 0x28; ret; 
0x0000000049859c: mov rdx, [rsp+0x28]; xor rdx, fs:[0x28]; jne short 0x00000000004985b1; add rsp, 0x38; ret; 
0x000000004917f5: mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x00000000491773: mov rdx, [rsp+0x38]; mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x00000000465734: mov rdx, [rsp+0x68]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x00000000402ae8: mov rdx, [rsp+0xb8]; xor rdx, fs:[0x28]; jne 0x0000000000402b8f; add rsp, 0xc8; ret; 
0x00000000402c98: mov rdx, [rsp+0xb8]; xor rdx, fs:[0x28]; jne 0x0000000000402d3f; add rsp, 0xc8; ret; 
0x00000000472462: mov rdx, r12; call qword ptr [r13+0x38]; 
0x00000000470596: mov rdx, r12; call rbp; 
0x00000000420914: mov rdx, r12; mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x0000000047fbde: mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000420b28: mov rdx, r12; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x000000004a009f: mov rdx, r13; add rax, [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x0000000047b611: mov rdx, r13; call qword ptr [rax+0x38]; 
0x0000000045b658: mov rdx, r13; call rbx; 
0x0000000045d239: mov rdx, r13; mov esi, 0x1; call r12; 
0x00000000483c37: mov rdx, r13; mov r9, [rsp+0x10]; mov rdi, r12; mov rsi, [rsp+0x18]; call rbx; 
0x000000004736b3: mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000473d58: mov rdx, r13; mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000411a18: mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x000000004a023c: mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x000000004a00e0: mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x0000000047340a: mov rdx, r13; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000042398e: mov rdx, r13; mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x000000004243c1: mov rdx, r13; mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000483ae3: mov rdx, r13; xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x0000000041e318: mov rdx, r14; mov rax, [rsp]; call rax; 
0x0000000041e408: mov rdx, r14; mov rax, [rsp]; mov rsi, r12; mov rdi, r13; call rax; 
0x0000000041e284: mov rdx, r14; mov rsi, r13; mov rdi, r12; call rax; 
0x00000000475162: mov rdx, r15; call qword ptr [rax+0x38]; 
0x000000004a586f: mov rdx, r15; mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x0000000047580e: mov rdx, r15; mov rsi, r11; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x000000004707eb: mov rdx, r15; mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000042455d: mov rdx, r15; mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x0000000047562f: mov rdx, r15; mov rsi, r8; mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000047a07a: mov rdx, r8; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x000000004249bc: mov rdx, r8; mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x00000000494256: mov rdx, r8; mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x0000000042fc03: mov rdx, r8; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000004a43d8: mov rdx, r9; mov rdi, r15; lea rbx, [r12+rcx*8]; mov rsi, [rbx]; call rax; 
0x00000000478e1a: mov rdx, r9; mov rsi, r12; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x000000004284f5: mov rdx, rax; mov rax, [rax]; test rax, rax; jne short 0x00000000004284f0; ret; 
0x000000004a63f0: mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x00000000470d92: mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000047048d: mov rdx, rbp; mov rsi, r12; call rbx; 
0x000000004704b0: mov rdx, rbp; mov rsi, r12; mov rdi, r13; call rbx; 
0x00000000425234: mov rdx, rbp; mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x000000004704cb: mov rdx, rbp; mov rsi, r15; mov rdi, r12; call rbx; 
0x00000000478891: mov rdx, rbx; call qword ptr [r13+0x38]; 
0x0000000047bb0e: mov rdx, rbx; call qword ptr [rax+0x38]; 
0x00000000473a9d: mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000047cc76: mov rdx, rbx; mov rsi, r9; mov rdi, r12; call qword ptr [rax+0x38]; 
0x00000000484faf: mov rdx, rcx; cmp r9d, 0x1; ja short 0x0000000000484fe8; mov eax, 0x106; syscall; 
0x0000000045cffd: mov rdx, rcx; mov r10, r8; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x000000004767a9: mov rdx, rcx; mov rsi, r11; mov rdi, r12; mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x0000000047626c: mov rdx, rcx; mov rsi, r11; mov rdi, r12; mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x0000000047a6b3: mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000479c8b: mov rdx, rcx; mov rsi, r12; mov rdi, r13; call qword ptr [r8+0x38]; 
0x0000000047bcee: mov rdx, rcx; mov rsi, r9; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [r8+0x38]; 
0x0000000047c2f3: mov rdx, rcx; mov rsi, r9; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [rbx+0x38]; 
0x0000000045a2b4: mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000485070: mov rdx, rsp; mov eax, 0x10; syscall; 
0x0000000045cc58: mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000004a5872: mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x000000004a5741: mov rsi, [r13+r15+0x8]; mov rdx, [r12]; mov rdi, r14; call rbp; 
0x0000000041e310: mov rsi, [r13]; mov rdi, [r12]; mov rdx, r14; mov rax, [rsp]; call rax; 
0x000000004731ec: mov rsi, [r14+0x18]; mov rdx, [r14+0x20]; mov rdi, r15; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000045d345: mov rsi, [r14]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000041ec44: mov rsi, [rax+0x20]; mov edi, ebp; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000045d7e8: mov rsi, [rax]; mov rdi, r14; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x00000000463447: mov rsi, [rbp-0x70]; mov rdi, rbx; call rsi; 
0x00000000421038: mov rsi, [rbx+0x10]; mov rdx, [rbx+0x40]; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x000000004a43e2: mov rsi, [rbx]; call rax; 
0x0000000045d71f: mov rsi, [rbx]; mov r13, rbx; mov rdi, rbp; call r12; 
0x0000000048fdf7: mov rsi, [rdi+0x20]; mov rdi, [rdi+0x28]; bnd call r11; 
0x00000000459607: mov rsi, [rsi]; mov [rdi+rdx-0x8], rcx; mov [rdi], rsi; ret; 
0x00000000445eda: mov rsi, [rsi]; mov rcx, [rcx-0x8]; mov [rdi], rsi; mov [r9-0x8], rcx; ret; 
0x000000004111a3: mov rsi, [rsp+0x10]; mov edi, [rsp+0xc]; call rbp; 
0x0000000045c17c: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; mov eax, 0x1; syscall; 
0x0000000045c0dc: mov rsi, [rsp+0x10]; mov r8d, eax; mov edi, [rsp+0x8]; xor eax, eax; syscall; 
0x00000000411204: mov rsi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x000000004270fd: mov rsi, [rsp+0x10]; mov rdi, [rsp+0x8]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000470d8d: mov rsi, [rsp+0x10]; mov rdx, rbp; mov rdi, r12; call rbx; 
0x0000000042eb68: mov rsi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x0000000045b7da: mov rsi, [rsp+0x18]; call rbx; 
0x0000000045b650: mov rsi, [rsp+0x18]; mov rcx, r12; mov rdx, r13; call rbx; 
0x0000000042e650: mov rsi, [rsp+0x18]; pop rbx; pop rbp; pop r12; jmp rax; 
0x000000004629f5: mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x0000000042ffa0: mov rsi, [rsp+0x28]; mov rdi, r12; call rax; 
0x0000000042ed80: mov rsi, [rsp+0x38]; mov rdi, r14; call rax; 
0x000000004694f8: mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000046cf15: mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000468f04: mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x00000000467f76: mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x000000004684c4: mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000467383: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x00000000467883: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x000000004653fd: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x0000000046694d: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r15; 
0x00000000466167: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x000000004664c8: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000466cef: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x0000000046514e: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000465ef1: mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x0000000046a282: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046b595: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000469e98: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000465b7c: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call r15; 
0x00000000465739: mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x000000004736b6: mov rsi, r10; mov rdi, r15; call qword ptr [rbx+0x38]; 
0x00000000473d5b: mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000475811: mov rsi, r11; mov rdi, r12; call qword ptr [rcx+0x38]; 
0x000000004767ac: mov rsi, r11; mov rdi, r12; mov [rbp-0x4f0], r9d; call qword ptr [rax+0x38]; 
0x0000000047626f: mov rsi, r11; mov rdi, r12; mov [rbp-0x4f8], r9d; call qword ptr [rbx+0x38]; 
0x00000000476a01: mov rsi, r11; mov rdi, r12; mov [rbp-0x508], r10d; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x00000000430c20: mov rsi, r12; call rax; 
0x00000000470490: mov rsi, r12; call rbx; 
0x00000000411a1b: mov rsi, r12; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x000000004a023f: mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x000000004a00e3: mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000004a00a5: mov rsi, r12; mov edi, ebp; call rax; 
0x000000004847e0: mov rsi, r12; mov edi, ebp; mov eax, 0xe4; syscall; 
0x0000000047a07d: mov rsi, r12; mov rdi, r13; call qword ptr [r15+0x38]; 
0x00000000479c8e: mov rsi, r12; mov rdi, r13; call qword ptr [r8+0x38]; 
0x00000000478e1d: mov rsi, r12; mov rdi, r13; call qword ptr [rcx+0x38]; 
0x0000000041e40f: mov rsi, r12; mov rdi, r13; call rax; 
0x000000004704b3: mov rsi, r12; mov rdi, r13; call rbx; 
0x000000004707ee: mov rsi, r12; mov rdi, r14; call rbp; 
0x0000000047340d: mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x00000000423991: mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x40]; 
0x00000000423db1: mov rsi, r12; mov rdi, rbp; call qword ptr [r15+0x80]; 
0x000000004249bf: mov rsi, r12; mov rdi, rbp; call qword ptr [rax+0x78]; 
0x00000000425237: mov rsi, r12; mov rdi, rbx; call qword ptr [r14+0x78]; 
0x0000000042f911: mov rsi, r12; pop r12; pop r13; jmp rax; 
0x0000000041e286: mov rsi, r13; mov rdi, r12; call rax; 
0x0000000041e287: mov rsi, r13; mov rdi, r12; call rax; 
0x00000000475159: mov rsi, r13; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000470590: mov rsi, r13; mov rdi, r14; mov rdx, r12; call rbp; 
0x0000000048027d: mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000004802ea: mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000494259: mov rsi, r14; mov rdi, r12; mov [rbp-0xe8], r8; call rax; 
0x0000000047997c: mov rsi, r14; mov rdi, r13; mov [rbp-0x970], r10d; mov [rbp-0x958], r9b; call rax; 
0x00000000473144: mov rsi, r14; mov rdi, r15; mov [rbp-0x94c], r9d; mov [rbp-0x940], r11d; call rax; 
0x00000000420917: mov rsi, r14; mov rdi, rbx; call qword ptr [r15+0x38]; 
0x00000000424560: mov rsi, r14; mov rdi, rbx; call qword ptr [rbp+0x70]; 
0x000000004a4300: mov rsi, r14; mov rdi, rbx; call r15; 
0x000000004704ce: mov rsi, r15; mov rdi, r12; call rbx; 
0x000000004243c4: mov rsi, r15; mov rdi, rbp; call qword ptr [rax+0x40]; 
0x00000000470211: mov rsi, r8; mov eax, 0xe; syscall; 
0x00000000475632: mov rsi, r8; mov rdi, r12; call qword ptr [rax+0x38]; 
0x000000004756fe: mov rsi, r8; mov rdi, r12; sub r15, r8; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000041e18c: mov rsi, r9; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000045ccdd: mov rsi, r9; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000047cc79: mov rsi, r9; mov rdi, r12; call qword ptr [rax+0x38]; 
0x0000000047bcf1: mov rsi, r9; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [r8+0x38]; 
0x0000000047c2f6: mov rsi, r9; mov rdi, r12; mov [rbp-0x4d8], r11; call qword ptr [rbx+0x38]; 
0x0000000047cf62: mov rsi, r9; mov rdi, r12; mov [rbp-0x500], r11; mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x0000000045bfbc: mov rsi, rbp; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000045c032: mov rsi, rbp; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000041e47d: mov rsi, rbp; mov rax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x0000000040aa45: mov rsi, rbp; mov rdi, r13; call rdx; 
0x000000004218f9: mov rsi, rbp; mov rdi, r15; call qword ptr [r14+0x80]; 
0x000000004246ea: mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000047fbe1: mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000420b2b: mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x0000000048f80e: mov rsi, rbp; syscall; 
0x00000000422f7d: mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x00000000474264: mov rsi, rcx; mov [rbp-0x8f0], r10; mov [rbp-0x8e0], rdx; mov [rbp-0x8b8], rcx; call qword ptr [r11+rax*8-0x40]; 
0x0000000047aa75: mov rsi, rcx; mov [rbp-0x908], r10; mov [rbp-0x900], rdx; mov [rbp-0x8d0], rcx; call qword ptr [r11+rax*8-0x40]; 
0x000000004a4298: mov rsi, rdi; test rax, rax; je short 0x00000000004a42b0; mov edi, 0x1; jmp rax; 
0x0000000045beba: mov rsi, rdx; cmp r8d, 0x1; ja short 0x000000000045bef0; mov eax, 0x4; syscall; 
0x0000000045bf19: mov rsi, rdx; cmp r8d, 0x1; ja short 0x000000000045bf50; mov eax, 0x5; syscall; 
0x00000000484f4a: mov rsi, rdx; cmp r8d, 0x1; ja short 0x0000000000484f80; mov eax, 0x6; syscall; 
0x00000000424b6e: mov rsi, rsp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x00000000423928: mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x0000000047fa37: mov rsi, rsp; mov rdi, rbp; call qword ptr [rbx+0x90]; 
0x0000000049246b: mov rsp, r8; mov rbp, r9; nop; jmp rdx; 
0x000000004905e1: mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x18; bnd jmp r11; 
0x0000000048fdc8: mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x30; bnd jmp r11; 
0x0000000048feda: mov rsp, rbx; mov rbx, [rsp]; add rsp, 0x30; bnd ret; 
0x000000004a3e74: mov rsp, rcx; pop rcx; jmp rcx; 
0x00000000445eff: mov si, [rsi]; mov cx, [rcx-0x2]; mov [rdi], si; mov [r9-0x2], cx; ret; 
0x00000000420c46: mov ss, [rsi+rdi*8+0x3145ffff]; sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000043b827: movaps [rdi+0x10], xmm3; jb short 0x000000000043b836; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043b977: movaps [rdi+0x10], xmm3; jb short 0x000000000043b986; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bac7: movaps [rdi+0x10], xmm3; jb short 0x000000000043bad6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bc17: movaps [rdi+0x10], xmm3; jb short 0x000000000043bc26; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bd67: movaps [rdi+0x10], xmm3; jb short 0x000000000043bd76; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043beb7: movaps [rdi+0x10], xmm3; jb short 0x000000000043bec6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c007: movaps [rdi+0x10], xmm3; jb short 0x000000000043c016; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c157: movaps [rdi+0x10], xmm3; jb short 0x000000000043c166; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c2a7: movaps [rdi+0x10], xmm3; jb short 0x000000000043c2b6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c3f7: movaps [rdi+0x10], xmm3; jb short 0x000000000043c406; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c547: movaps [rdi+0x10], xmm3; jb short 0x000000000043c556; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c697: movaps [rdi+0x10], xmm3; jb short 0x000000000043c6a6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c7e7: movaps [rdi+0x10], xmm3; jb short 0x000000000043c7f6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c937: movaps [rdi+0x10], xmm3; jb short 0x000000000043c946; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ca87: movaps [rdi+0x10], xmm3; jb short 0x000000000043ca96; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e207: movaps [rdi+0x10], xmm3; jb short 0x000000000043e216; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e357: movaps [rdi+0x10], xmm3; jb short 0x000000000043e366; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e4a7: movaps [rdi+0x10], xmm3; jb short 0x000000000043e4b6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e5f7: movaps [rdi+0x10], xmm3; jb short 0x000000000043e606; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e747: movaps [rdi+0x10], xmm3; jb short 0x000000000043e756; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e897: movaps [rdi+0x10], xmm3; jb short 0x000000000043e8a6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e9e7: movaps [rdi+0x10], xmm3; jb short 0x000000000043e9f6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043eb37: movaps [rdi+0x10], xmm3; jb short 0x000000000043eb46; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ec87: movaps [rdi+0x10], xmm3; jb short 0x000000000043ec96; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043edd7: movaps [rdi+0x10], xmm3; jb short 0x000000000043ede6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ef27: movaps [rdi+0x10], xmm3; jb short 0x000000000043ef36; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f077: movaps [rdi+0x10], xmm3; jb short 0x000000000043f086; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f1c7: movaps [rdi+0x10], xmm3; jb short 0x000000000043f1d6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f317: movaps [rdi+0x10], xmm3; jb short 0x000000000043f326; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f467: movaps [rdi+0x10], xmm3; jb short 0x000000000043f476; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043b783: movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043b77f: movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043b779: movaps [rdi-0x30], xmm3; jb short 0x000000000043b78d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043b8c9: movaps [rdi-0x30], xmm3; jb short 0x000000000043b8dd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043ba19: movaps [rdi-0x30], xmm3; jb short 0x000000000043ba2d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043bb69: movaps [rdi-0x30], xmm3; jb short 0x000000000043bb7d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043bcb9: movaps [rdi-0x30], xmm3; jb short 0x000000000043bccd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043be09: movaps [rdi-0x30], xmm3; jb short 0x000000000043be1d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043bf59: movaps [rdi-0x30], xmm3; jb short 0x000000000043bf6d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c0a7: movaps [rdi-0x30], xmm3; jb short 0x000000000043c0c0; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c1f9: movaps [rdi-0x30], xmm3; jb short 0x000000000043c20d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c349: movaps [rdi-0x30], xmm3; jb short 0x000000000043c35d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c499: movaps [rdi-0x30], xmm3; jb short 0x000000000043c4ad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c5e9: movaps [rdi-0x30], xmm3; jb short 0x000000000043c5fd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c739: movaps [rdi-0x30], xmm3; jb short 0x000000000043c74d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c889: movaps [rdi-0x30], xmm3; jb short 0x000000000043c89d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c9d9: movaps [rdi-0x30], xmm3; jb short 0x000000000043c9ed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e159: movaps [rdi-0x30], xmm3; jb short 0x000000000043e16d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e2a9: movaps [rdi-0x30], xmm3; jb short 0x000000000043e2bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e3f9: movaps [rdi-0x30], xmm3; jb short 0x000000000043e40d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e549: movaps [rdi-0x30], xmm3; jb short 0x000000000043e55d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e699: movaps [rdi-0x30], xmm3; jb short 0x000000000043e6ad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e7e9: movaps [rdi-0x30], xmm3; jb short 0x000000000043e7fd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e939: movaps [rdi-0x30], xmm3; jb short 0x000000000043e94d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043ea87: movaps [rdi-0x30], xmm3; jb short 0x000000000043eaa0; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043ebd9: movaps [rdi-0x30], xmm3; jb short 0x000000000043ebed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043ed29: movaps [rdi-0x30], xmm3; jb short 0x000000000043ed3d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043ee79: movaps [rdi-0x30], xmm3; jb short 0x000000000043ee8d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043efc9: movaps [rdi-0x30], xmm3; jb short 0x000000000043efdd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043f119: movaps [rdi-0x30], xmm3; jb short 0x000000000043f12d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043f269: movaps [rdi-0x30], xmm3; jb short 0x000000000043f27d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043f3b9: movaps [rdi-0x30], xmm3; jb short 0x000000000043f3cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043b82d: movaps [rdi], xmm4; notrack jmp r9; 
0x0000000041e138: movaps [rsp+0xc0], xmm0; movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000041e140: movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000041e148: movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000041e150: movaps [rsp+0xf0], xmm0; syscall; 
0x0000000043b71a: movaps xmm1, [rsi-0x1]; jb short 0x000000000043b727; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043b7ca: movaps xmm1, [rsi-0x1]; jb short 0x000000000043b7d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e0fa: movaps xmm1, [rsi-0x1]; jb short 0x000000000043e107; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e1aa: movaps xmm1, [rsi-0x1]; jb short 0x000000000043e1b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043b86a: movaps xmm1, [rsi-0x2]; jb short 0x000000000043b877; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043b91a: movaps xmm1, [rsi-0x2]; jb short 0x000000000043b927; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e24a: movaps xmm1, [rsi-0x2]; jb short 0x000000000043e257; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e2fa: movaps xmm1, [rsi-0x2]; jb short 0x000000000043e307; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043b9ba: movaps xmm1, [rsi-0x3]; jb short 0x000000000043b9c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ba6a: movaps xmm1, [rsi-0x3]; jb short 0x000000000043ba77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e39a: movaps xmm1, [rsi-0x3]; jb short 0x000000000043e3a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e44a: movaps xmm1, [rsi-0x3]; jb short 0x000000000043e457; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bb0a: movaps xmm1, [rsi-0x4]; jb short 0x000000000043bb17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bbba: movaps xmm1, [rsi-0x4]; jb short 0x000000000043bbc7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e4ea: movaps xmm1, [rsi-0x4]; jb short 0x000000000043e4f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e59a: movaps xmm1, [rsi-0x4]; jb short 0x000000000043e5a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bc5a: movaps xmm1, [rsi-0x5]; jb short 0x000000000043bc67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bd0a: movaps xmm1, [rsi-0x5]; jb short 0x000000000043bd17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e63a: movaps xmm1, [rsi-0x5]; jb short 0x000000000043e647; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e6ea: movaps xmm1, [rsi-0x5]; jb short 0x000000000043e6f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bdaa: movaps xmm1, [rsi-0x6]; jb short 0x000000000043bdb7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043be5a: movaps xmm1, [rsi-0x6]; jb short 0x000000000043be67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e78a: movaps xmm1, [rsi-0x6]; jb short 0x000000000043e797; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e83a: movaps xmm1, [rsi-0x6]; jb short 0x000000000043e847; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043befa: movaps xmm1, [rsi-0x7]; jb short 0x000000000043bf07; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bfaa: movaps xmm1, [rsi-0x7]; jb short 0x000000000043bfb7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e8da: movaps xmm1, [rsi-0x7]; jb short 0x000000000043e8e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e98a: movaps xmm1, [rsi-0x7]; jb short 0x000000000043e997; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c04a: movaps xmm1, [rsi-0x8]; jb short 0x000000000043c057; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c0fa: movaps xmm1, [rsi-0x8]; jb short 0x000000000043c107; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ea2a: movaps xmm1, [rsi-0x8]; jb short 0x000000000043ea37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043eada: movaps xmm1, [rsi-0x8]; jb short 0x000000000043eae7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c19a: movaps xmm1, [rsi-0x9]; jb short 0x000000000043c1a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c24a: movaps xmm1, [rsi-0x9]; jb short 0x000000000043c257; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043eb7a: movaps xmm1, [rsi-0x9]; jb short 0x000000000043eb87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ec2a: movaps xmm1, [rsi-0x9]; jb short 0x000000000043ec37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c2ea: movaps xmm1, [rsi-0xa]; jb short 0x000000000043c2f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c39a: movaps xmm1, [rsi-0xa]; jb short 0x000000000043c3a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ecca: movaps xmm1, [rsi-0xa]; jb short 0x000000000043ecd7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ed7a: movaps xmm1, [rsi-0xa]; jb short 0x000000000043ed87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c43a: movaps xmm1, [rsi-0xb]; jb short 0x000000000043c447; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c4ea: movaps xmm1, [rsi-0xb]; jb short 0x000000000043c4f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ee1a: movaps xmm1, [rsi-0xb]; jb short 0x000000000043ee27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043eeca: movaps xmm1, [rsi-0xb]; jb short 0x000000000043eed7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c58a: movaps xmm1, [rsi-0xc]; jb short 0x000000000043c597; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c63a: movaps xmm1, [rsi-0xc]; jb short 0x000000000043c647; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ef6a: movaps xmm1, [rsi-0xc]; jb short 0x000000000043ef77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f01a: movaps xmm1, [rsi-0xc]; jb short 0x000000000043f027; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c6da: movaps xmm1, [rsi-0xd]; jb short 0x000000000043c6e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c78a: movaps xmm1, [rsi-0xd]; jb short 0x000000000043c797; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f0ba: movaps xmm1, [rsi-0xd]; jb short 0x000000000043f0c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f16a: movaps xmm1, [rsi-0xd]; jb short 0x000000000043f177; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c82a: movaps xmm1, [rsi-0xe]; jb short 0x000000000043c837; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c8da: movaps xmm1, [rsi-0xe]; jb short 0x000000000043c8e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f20a: movaps xmm1, [rsi-0xe]; jb short 0x000000000043f217; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f2ba: movaps xmm1, [rsi-0xe]; jb short 0x000000000043f2c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c97a: movaps xmm1, [rsi-0xf]; jb short 0x000000000043c987; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ca2a: movaps xmm1, [rsi-0xf]; jb short 0x000000000043ca37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f35a: movaps xmm1, [rsi-0xf]; jb short 0x000000000043f367; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f40a: movaps xmm1, [rsi-0xf]; jb short 0x000000000043f417; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000464f03: movd mm3, eax; punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x00000000464f02: movd xmm3, eax; punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x0000000045a365: movdqa [rcx+0x30], xmm0; add rcx, 0x40; cmp rdx, rcx; jne short 0x000000000045a357; rep ret; 
0x0000000042770c: movdqa xmm0, [rip+0x8dbbc]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000042767c: movdqa xmm0, [rip+0x8dc4c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000043f47c: movdqu [r8], xmm0; lea r11, [rip+0x774e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f32c: movdqu [r8], xmm0; lea r11, [rip+0x77637]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f1dc: movdqu [r8], xmm0; lea r11, [rip+0x77787]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f08c: movdqu [r8], xmm0; lea r11, [rip+0x778d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ef3c: movdqu [r8], xmm0; lea r11, [rip+0x77a27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043edec: movdqu [r8], xmm0; lea r11, [rip+0x77b77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ec9c: movdqu [r8], xmm0; lea r11, [rip+0x77cc7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eb4c: movdqu [r8], xmm0; lea r11, [rip+0x77e17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eab2: movdqu [r8], xmm0; lea r11, [rip+0x77eb2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e9fc: movdqu [r8], xmm0; lea r11, [rip+0x77f67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e8ac: movdqu [r8], xmm0; lea r11, [rip+0x780b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e75c: movdqu [r8], xmm0; lea r11, [rip+0x78207]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e60c: movdqu [r8], xmm0; lea r11, [rip+0x78357]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e4bc: movdqu [r8], xmm0; lea r11, [rip+0x784a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e36c: movdqu [r8], xmm0; lea r11, [rip+0x785f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e21c: movdqu [r8], xmm0; lea r11, [rip+0x78747]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ca9c: movdqu [r8], xmm0; lea r11, [rip+0x79d07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c94c: movdqu [r8], xmm0; lea r11, [rip+0x79e57]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c7fc: movdqu [r8], xmm0; lea r11, [rip+0x79fa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c6ac: movdqu [r8], xmm0; lea r11, [rip+0x7a0f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c55c: movdqu [r8], xmm0; lea r11, [rip+0x7a247]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c40c: movdqu [r8], xmm0; lea r11, [rip+0x7a397]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c2bc: movdqu [r8], xmm0; lea r11, [rip+0x7a4e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c16c: movdqu [r8], xmm0; lea r11, [rip+0x7a637]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c0d2: movdqu [r8], xmm0; lea r11, [rip+0x7a6d2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c01c: movdqu [r8], xmm0; lea r11, [rip+0x7a787]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043becc: movdqu [r8], xmm0; lea r11, [rip+0x7a8d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bd7c: movdqu [r8], xmm0; lea r11, [rip+0x7aa27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bc2c: movdqu [r8], xmm0; lea r11, [rip+0x7ab77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043badc: movdqu [r8], xmm0; lea r11, [rip+0x7acc7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b98c: movdqu [r8], xmm0; lea r11, [rip+0x7ae17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b83c: movdqu [r8], xmm0; lea r11, [rip+0x7af67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000442ba1: movdqu [rdi+0x10], xmm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x0000000045a306: movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x00000000456d5d: movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x000000004563a0: movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x0000000045568d: movdqu [rdi+0x10], xmm2; ret; 
0x0000000045608d: movdqu [rdi+0x10], xmm2; sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000004564f0; ret; 
0x0000000044321f: movdqu [rdi+0x1], xmm0; movdqu [rdi], xmm1; ret; 
0x000000004565e4: movdqu [rdi+0x20], xmm6; sub r8, 0x10; jb 0x0000000000455b99; movdqu [rdi+0x30], xmm7; ret; 
0x000000004431af: movdqu [rdi+0x2], xmm0; movdqu [rdi], xmm1; ret; 
0x000000004565f3: movdqu [rdi+0x30], xmm7; ret; 
0x0000000044313f: movdqu [rdi+0x3], xmm0; movdqu [rdi], xmm1; ret; 
0x000000004430cf: movdqu [rdi+0x4], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000044305f: movdqu [rdi+0x5], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442fef: movdqu [rdi+0x6], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442f7f: movdqu [rdi+0x7], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442f0f: movdqu [rdi+0x8], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442e9f: movdqu [rdi+0x9], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442e2f: movdqu [rdi+0xa], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442dbf: movdqu [rdi+0xb], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442d4f: movdqu [rdi+0xc], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442cdf: movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000456cfd: movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x0000000045562d: movdqu [rdi+0xd], xmm2; ret; 
0x00000000455ffd: movdqu [rdi+0xd], xmm2; sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000004564f0; ret; 
0x00000000442c6f: movdqu [rdi+0xe], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000456d1d: movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x0000000045564d: movdqu [rdi+0xe], xmm2; ret; 
0x0000000045602d: movdqu [rdi+0xe], xmm2; sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000004564f0; ret; 
0x00000000442bff: movdqu [rdi+0xf], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000456d3d: movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x0000000045566d: movdqu [rdi+0xf], xmm2; ret; 
0x0000000045605d: movdqu [rdi+0xf], xmm2; sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000004564f0; ret; 
0x0000000045a30b: movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x0000000045a27c: movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi], xmm0; ret; 
0x0000000045a311: movdqu [rdi+rdx-0x20], xmm0; ret; 
0x0000000044238b: movdqu [rdi-0x10], xmm0; ret; 
0x000000004423fb: movdqu [rdi-0x10], xmm1; ret; 
0x00000000442b36: movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442ab6: movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442a26: movdqu [rdi-0x13], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004429a6: movdqu [rdi-0x14], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442926: movdqu [rdi-0x15], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004428a6: movdqu [rdi-0x16], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442826: movdqu [rdi-0x17], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004427a6: movdqu [rdi-0x18], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442726: movdqu [rdi-0x19], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004564a0: movdqu [rdi-0x1], xmm0; ret; 
0x000000004426a6: movdqu [rdi-0x1a], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442626: movdqu [rdi-0x1b], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004425a6: movdqu [rdi-0x1c], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442516: movdqu [rdi-0x1d], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442486: movdqu [rdi-0x1e], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004423f6: movdqu [rdi-0x1f], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442381: movdqu [rdi-0x20], xmm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x00000000456b74: movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x000000004561c7: movdqu [rdi], xmm0; mov [rdi+0x10], cl; ret; 
0x00000000456b98: movdqu [rdi], xmm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000004554e8: movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x00000000456b84: movdqu [rdi], xmm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000004554d4: movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x00000000456bd7: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x00000000456bf7: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x00000000455527: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x0000000045621a: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x00000000455517: movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x00000000456c58: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x00000000456c78: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000004555a8: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x00000000455588: movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x00000000456cbb: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000004555eb: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x0000000045629b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x00000000456c9c: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000004555cc: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x00000000456cdb: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x0000000045560b: movdqu [rdi], xmm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x00000000456c18: movdqu [rdi], xmm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x00000000455548: movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x00000000456bb7: movdqu [rdi], xmm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x00000000455507: movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x00000000456c38: movdqu [rdi], xmm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x00000000455568: movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x0000000045a302: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x00000000456d59: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x0000000045639c: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x00000000455689: movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000456cf9: movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x00000000455629: movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x00000000456d19: movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x00000000455649: movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x00000000456d39: movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x00000000455669: movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x00000000442baa: movdqu [rdi], xmm0; ret; 
0x00000000455e14: movdqu [rdi], xmm0; sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000004564f0; ret; 
0x00000000442c04: movdqu [rdi], xmm1; ret; 
0x000000004561c0: movdqu xmm0, [rsi]; mov cl, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cl; ret; 
0x000000004554e0: movdqu xmm0, [rsi]; mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x00000000455510: movdqu xmm0, [rsi]; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x00000000455500: movdqu xmm0, [rsi]; mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x00000000455580: movdqu xmm0, [rsi]; mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x00000000455540: movdqu xmm0, [rsi]; mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x00000000455560: movdqu xmm0, [rsi]; mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x00000000456b70: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x00000000456b80: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000004554d0: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x000000004554c0: movdqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x00000000455680: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000455620: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x00000000455640: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x00000000455660: movdqu xmm0, [rsi]; movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x00000000456d54: movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x00000000455684: movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000456cf4: movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x00000000455624: movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x00000000456d14: movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x00000000455644: movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x00000000456d34: movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x00000000455664: movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x0000000049e9cf: movhps xmm0, [rsp-0x18]; movups [rdi], xmm0; mov [rdx], eax; mov eax, 0x2; ret; 
0x00000000457351: movnti [r14+0x66], r12d; nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x0000000045550c: movnti [r8+0x66f0ff3], r10; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x0000000045550d: movnti [rax+0x66f0ff3], edx; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x00000000457352: movnti [rsi+0x66], esp; nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x00000000428538: movntps [rax+0x18], xmm2; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x0000000043f47e: movq [r8], mm0; lea r11, [rip+0x774e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f32e: movq [r8], mm0; lea r11, [rip+0x77637]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f1de: movq [r8], mm0; lea r11, [rip+0x77787]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f08e: movq [r8], mm0; lea r11, [rip+0x778d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ef3e: movq [r8], mm0; lea r11, [rip+0x77a27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043edee: movq [r8], mm0; lea r11, [rip+0x77b77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ec9e: movq [r8], mm0; lea r11, [rip+0x77cc7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eb4e: movq [r8], mm0; lea r11, [rip+0x77e17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eab3: movq [r8], mm0; lea r11, [rip+0x77eb2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e9fe: movq [r8], mm0; lea r11, [rip+0x77f67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e8ae: movq [r8], mm0; lea r11, [rip+0x780b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e75e: movq [r8], mm0; lea r11, [rip+0x78207]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e60e: movq [r8], mm0; lea r11, [rip+0x78357]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e4be: movq [r8], mm0; lea r11, [rip+0x784a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e36e: movq [r8], mm0; lea r11, [rip+0x785f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e21e: movq [r8], mm0; lea r11, [rip+0x78747]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ca9e: movq [r8], mm0; lea r11, [rip+0x79d07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c94e: movq [r8], mm0; lea r11, [rip+0x79e57]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c7fe: movq [r8], mm0; lea r11, [rip+0x79fa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c6ae: movq [r8], mm0; lea r11, [rip+0x7a0f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c55e: movq [r8], mm0; lea r11, [rip+0x7a247]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c40e: movq [r8], mm0; lea r11, [rip+0x7a397]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c2be: movq [r8], mm0; lea r11, [rip+0x7a4e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c16e: movq [r8], mm0; lea r11, [rip+0x7a637]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c0d3: movq [r8], mm0; lea r11, [rip+0x7a6d2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c01e: movq [r8], mm0; lea r11, [rip+0x7a787]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bece: movq [r8], mm0; lea r11, [rip+0x7a8d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bd7e: movq [r8], mm0; lea r11, [rip+0x7aa27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bc2e: movq [r8], mm0; lea r11, [rip+0x7ab77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bade: movq [r8], mm0; lea r11, [rip+0x7acc7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b98e: movq [r8], mm0; lea r11, [rip+0x7ae17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b83e: movq [r8], mm0; lea r11, [rip+0x7af67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f47f: movq [rax], mm0; lea r11, [rip+0x774e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f32f: movq [rax], mm0; lea r11, [rip+0x77637]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f1df: movq [rax], mm0; lea r11, [rip+0x77787]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f08f: movq [rax], mm0; lea r11, [rip+0x778d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ef3f: movq [rax], mm0; lea r11, [rip+0x77a27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043edef: movq [rax], mm0; lea r11, [rip+0x77b77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ec9f: movq [rax], mm0; lea r11, [rip+0x77cc7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eb4f: movq [rax], mm0; lea r11, [rip+0x77e17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eab4: movq [rax], mm0; lea r11, [rip+0x77eb2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e9ff: movq [rax], mm0; lea r11, [rip+0x77f67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e8af: movq [rax], mm0; lea r11, [rip+0x780b7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e75f: movq [rax], mm0; lea r11, [rip+0x78207]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e60f: movq [rax], mm0; lea r11, [rip+0x78357]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e4bf: movq [rax], mm0; lea r11, [rip+0x784a7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e36f: movq [rax], mm0; lea r11, [rip+0x785f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e21f: movq [rax], mm0; lea r11, [rip+0x78747]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ca9f: movq [rax], mm0; lea r11, [rip+0x79d07]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c94f: movq [rax], mm0; lea r11, [rip+0x79e57]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c7ff: movq [rax], mm0; lea r11, [rip+0x79fa7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c6af: movq [rax], mm0; lea r11, [rip+0x7a0f7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c55f: movq [rax], mm0; lea r11, [rip+0x7a247]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c40f: movq [rax], mm0; lea r11, [rip+0x7a397]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c2bf: movq [rax], mm0; lea r11, [rip+0x7a4e7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c16f: movq [rax], mm0; lea r11, [rip+0x7a637]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c0d4: movq [rax], mm0; lea r11, [rip+0x7a6d2]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c01f: movq [rax], mm0; lea r11, [rip+0x7a787]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043becf: movq [rax], mm0; lea r11, [rip+0x7a8d7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bd7f: movq [rax], mm0; lea r11, [rip+0x7aa27]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bc2f: movq [rax], mm0; lea r11, [rip+0x7ab77]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043badf: movq [rax], mm0; lea r11, [rip+0x7acc7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b98f: movq [rax], mm0; lea r11, [rip+0x7ae17]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b83f: movq [rax], mm0; lea r11, [rip+0x7af67]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045a366: movq [rcx+0x30], mm0; add rcx, 0x40; cmp rdx, rcx; jne short 0x000000000045a357; rep ret; 
0x00000000442ba2: movq [rdi+0x10], mm0; lddqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x0000000045a307: movq [rdi+0x10], mm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x00000000456d5e: movq [rdi+0x10], mm2; lea rax, [rdi+0x1f]; ret; 
0x000000004563a1: movq [rdi+0x10], mm2; mov [rdi+0x20], cl; ret; 
0x0000000045568e: movq [rdi+0x10], mm2; ret; 
0x0000000045608e: movq [rdi+0x10], mm2; sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000004564f0; ret; 
0x00000000443220: movq [rdi+0x1], mm0; movdqu [rdi], xmm1; ret; 
0x000000004565e5: movq [rdi+0x20], mm6; sub r8, 0x10; jb 0x0000000000455b99; movdqu [rdi+0x30], xmm7; ret; 
0x000000004431b0: movq [rdi+0x2], mm0; movdqu [rdi], xmm1; ret; 
0x000000004565f4: movq [rdi+0x30], mm7; ret; 
0x00000000443140: movq [rdi+0x3], mm0; movdqu [rdi], xmm1; ret; 
0x000000004430d0: movq [rdi+0x4], mm0; movdqu [rdi], xmm1; ret; 
0x00000000443060: movq [rdi+0x5], mm0; movdqu [rdi], xmm1; ret; 
0x00000000442ff0: movq [rdi+0x6], mm0; movdqu [rdi], xmm1; ret; 
0x00000000442f80: movq [rdi+0x7], mm0; movdqu [rdi], xmm1; ret; 
0x00000000442f10: movq [rdi+0x8], mm0; movdqu [rdi], xmm1; ret; 
0x00000000442ea0: movq [rdi+0x9], mm0; movdqu [rdi], xmm1; ret; 
0x00000000442e30: movq [rdi+0xa], mm0; movdqu [rdi], xmm1; ret; 
0x00000000442dc0: movq [rdi+0xb], mm0; movdqu [rdi], xmm1; ret; 
0x00000000442d50: movq [rdi+0xc], mm0; movdqu [rdi], xmm1; ret; 
0x00000000442ce0: movq [rdi+0xd], mm0; movdqu [rdi], xmm1; ret; 
0x00000000456cfe: movq [rdi+0xd], mm2; lea rax, [rdi+0x1c]; ret; 
0x0000000045562e: movq [rdi+0xd], mm2; ret; 
0x00000000455ffe: movq [rdi+0xd], mm2; sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000004564f0; ret; 
0x00000000442c70: movq [rdi+0xe], mm0; movdqu [rdi], xmm1; ret; 
0x00000000456d1e: movq [rdi+0xe], mm2; lea rax, [rdi+0x1d]; ret; 
0x0000000045564e: movq [rdi+0xe], mm2; ret; 
0x0000000045602e: movq [rdi+0xe], mm2; sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000004564f0; ret; 
0x00000000442c00: movq [rdi+0xf], mm0; movdqu [rdi], xmm1; ret; 
0x00000000456d3e: movq [rdi+0xf], mm2; lea rax, [rdi+0x1e]; ret; 
0x0000000045566e: movq [rdi+0xf], mm2; ret; 
0x0000000045605e: movq [rdi+0xf], mm2; sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000004564f0; ret; 
0x0000000045a30c: movq [rdi+rdx-0x10], mm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x0000000045a27d: movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x0000000045a312: movq [rdi+rdx-0x20], mm0; ret; 
0x0000000044238c: movq [rdi-0x10], mm0; ret; 
0x000000004423fc: movq [rdi-0x10], mm1; ret; 
0x00000000442b37: movq [rdi-0x11], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442ab7: movq [rdi-0x12], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442a27: movq [rdi-0x13], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004429a7: movq [rdi-0x14], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442927: movq [rdi-0x15], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004428a7: movq [rdi-0x16], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442827: movq [rdi-0x17], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004427a7: movq [rdi-0x18], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442727: movq [rdi-0x19], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004564a1: movq [rdi-0x1], mm0; ret; 
0x000000004426a7: movq [rdi-0x1a], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442627: movq [rdi-0x1b], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004425a7: movq [rdi-0x1c], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442517: movq [rdi-0x1d], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442487: movq [rdi-0x1e], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x000000004423f7: movq [rdi-0x1f], mm0; movdqu [rdi-0x10], xmm1; ret; 
0x00000000442382: movq [rdi-0x20], mm0; lddqu xmm0, [rsi-0x10]; movdqu [rdi-0x10], xmm0; ret; 
0x00000000456b75: movq [rdi], mm0; lea rax, [rdi+0xf]; ret; 
0x000000004561c8: movq [rdi], mm0; mov [rdi+0x10], cl; ret; 
0x00000000456b99: movq [rdi], mm0; mov [rdi+0x10], cx; lea rax, [rdi+0x11]; ret; 
0x000000004554e9: movq [rdi], mm0; mov [rdi+0x10], cx; ret; 
0x00000000456b85: movq [rdi], mm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000004554d5: movq [rdi], mm0; mov [rdi+0x10], dh; ret; 
0x00000000456bd8: movq [rdi], mm0; mov [rdi+0x10], ecx; lea rax, [rdi+0x13]; ret; 
0x00000000456bf8: movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; lea rax, [rdi+0x14]; ret; 
0x00000000455528: movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dh; ret; 
0x0000000045621b: movq [rdi], mm0; mov [rdi+0x10], ecx; mov [rdi+0x14], dl; ret; 
0x00000000455518: movq [rdi], mm0; mov [rdi+0x10], ecx; ret; 
0x00000000456c59: movq [rdi], mm0; mov [rdi+0x10], rcx; lea rax, [rdi+0x17]; ret; 
0x00000000456c79: movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; lea rax, [rdi+0x18]; ret; 
0x000000004555a9: movq [rdi], mm0; mov [rdi+0x10], rcx; mov [rdi+0x18], dh; ret; 
0x00000000455589: movq [rdi], mm0; mov [rdi+0x10], rcx; ret; 
0x00000000456cbc: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; lea rax, [rdi+0x1a]; ret; 
0x000000004555ec: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x17], ecx; ret; 
0x0000000045629c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x00000000456c9d: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; lea rax, [rdi+0x19]; ret; 
0x000000004555cd: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x00000000456cdc: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; lea rax, [rdi+0x1b]; ret; 
0x0000000045560c: movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x00000000456c19: movq [rdi], mm0; mov [rdi+0xe], rcx; lea rax, [rdi+0x15]; ret; 
0x00000000455549: movq [rdi], mm0; mov [rdi+0xe], rcx; ret; 
0x00000000456bb8: movq [rdi], mm0; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x00000000455508: movq [rdi], mm0; mov [rdi+0xf], ecx; ret; 
0x00000000456c39: movq [rdi], mm0; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x00000000455569: movq [rdi], mm0; mov [rdi+0xf], rcx; ret; 
0x0000000045a303: movq [rdi], mm0; movdqu [rdi+0x10], xmm0; movdqu [rdi+rdx-0x10], xmm0; movdqu [rdi+rdx-0x20], xmm0; ret; 
0x00000000456d5a: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x0000000045639d: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; mov [rdi+0x20], cl; ret; 
0x0000000045568a: movq [rdi], mm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000456cfa: movq [rdi], mm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x0000000045562a: movq [rdi], mm0; movdqu [rdi+0xd], xmm2; ret; 
0x00000000456d1a: movq [rdi], mm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x0000000045564a: movq [rdi], mm0; movdqu [rdi+0xe], xmm2; ret; 
0x00000000456d3a: movq [rdi], mm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x0000000045566a: movq [rdi], mm0; movdqu [rdi+0xf], xmm2; ret; 
0x00000000442bab: movq [rdi], mm0; ret; 
0x00000000455e15: movq [rdi], mm0; sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000004564f0; ret; 
0x00000000442c05: movq [rdi], mm1; ret; 
0x0000000042770d: movq mm0, [rip+0x8dbbc]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000042767d: movq mm0, [rip+0x8dc4c]; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x000000004561c1: movq mm0, [rsi]; mov cl, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cl; ret; 
0x000000004554e1: movq mm0, [rsi]; mov cx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], cx; ret; 
0x00000000455511: movq mm0, [rsi]; mov ecx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], ecx; ret; 
0x00000000455501: movq mm0, [rsi]; mov ecx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], ecx; ret; 
0x00000000455581: movq mm0, [rsi]; mov rcx, [rsi+0x10]; movdqu [rdi], xmm0; mov [rdi+0x10], rcx; ret; 
0x00000000455541: movq mm0, [rsi]; mov rcx, [rsi+0xe]; movdqu [rdi], xmm0; mov [rdi+0xe], rcx; ret; 
0x00000000455561: movq mm0, [rsi]; mov rcx, [rsi+0xf]; movdqu [rdi], xmm0; mov [rdi+0xf], rcx; ret; 
0x00000000456b71: movq mm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x00000000456b81: movq mm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; lea rax, [rdi+0x10]; ret; 
0x000000004554d1: movq mm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x000000004554c1: movq mm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x00000000455681: movq mm0, [rsi]; movdqu xmm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000455621: movq mm0, [rsi]; movdqu xmm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x00000000455641: movq mm0, [rsi]; movdqu xmm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x00000000455661: movq mm0, [rsi]; movdqu xmm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x00000000456d55: movq mm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; lea rax, [rdi+0x1f]; ret; 
0x00000000455685: movq mm2, [rsi+0x10]; movdqu [rdi], xmm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000456cf5: movq mm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x00000000455625: movq mm2, [rsi+0xd]; movdqu [rdi], xmm0; movdqu [rdi+0xd], xmm2; ret; 
0x00000000456d15: movq mm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; lea rax, [rdi+0x1d]; ret; 
0x00000000455645: movq mm2, [rsi+0xe]; movdqu [rdi], xmm0; movdqu [rdi+0xe], xmm2; ret; 
0x00000000456d35: movq mm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x00000000455665: movq mm2, [rsi+0xf]; movdqu [rdi], xmm0; movdqu [rdi+0xf], xmm2; ret; 
0x0000000045957e: movsb [rdi], [rsi]; cld; ret; 
0x00000000459570: movsb [rdi], [rsi]; ret; 
0x0000000045e067: movsd [rdi], [rsi]; add [rax], al; add [rcx-0x75], cl; jge short 0x000000000045e06f; call rbx; 
0x00000000479e95: movsd [rdi], [rsi]; clc; idiv bh; dec dword ptr [rbp+0x63]; ret; 
0x0000000047a559: movsd [rdi], [rsi]; clc; idiv bh; jmp qword ptr [rsi-0x70]; 
0x0000000041119f: movsd [rdi], [rsi]; cmp ecx, [rip+0x748b4800]; and al, 0x10; mov edi, [rsp+0xc]; call rbp; 
0x0000000049d065: movsd [rdi], [rsi]; enter 0x894c, 0x7; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x0000000048fdf2: movsd [rdi], [rsi]; mov rcx, [rdi+0x18]; mov rsi, [rdi+0x20]; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000045b427: movsd [rdi], [rsi]; or [rax], al; syscall; 
0x0000000049d0a2: movsd [rdi], [rsi]; ret; 
0x00000000485461: movsd [rdi], [rsi]; std; jmp qword ptr [rsi+0x2e]; 
0x0000000048fdf1: movsq [rdi], [rsi]; mov rcx, [rdi+0x18]; mov rsi, [rdi+0x20]; mov rdi, [rdi+0x28]; bnd call r11; 
0x000000004a165c: movss xmm0, [rip+0x2ec14]; divss xmm0, [rip+0x2ec10]; ret; 
0x00000000473049: movsx eax, bl; sub eax, 0x20; cdqe; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000490d30: movsx eax, dl; neg eax; ret; 
0x00000000473048: movsx eax, r11b; sub eax, 0x20; cdqe; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000049588e: movsx ecx, byte ptr [rsi]; cmp edi, ecx; ja short 0x0000000000495878; mov eax, r8d; ret; 
0x0000000045f905: movsxd eax, [rax]; add [rax], al; syscall; 
0x000000004a29d8: movsxd eax, [rbp+rax*4]; add rax, r13; notrack jmp rax; 
0x00000000461450: movsxd eax, [rbp+rax*4]; add rax, rbp; notrack jmp rax; 
0x00000000425568: movsxd eax, [rbx+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000461409: movsxd eax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x000000004096d7: movsxd eax, [rbx+rcx*4]; add rax, rbx; notrack jmp rax; 
0x0000000047eaef: movsxd eax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000041095c: movsxd eax, [rcx+rax*4]; add rax, rdx; ret; 
0x000000004021aa: movsxd eax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x000000004a2b51: movsxd eax, [rcx+rsi*4]; add rax, r9; notrack jmp rax; 
0x00000000408a37: movsxd eax, [rcx+rsi*4]; add rax, rcx; notrack jmp rax; 
0x000000004595e1: movsxd eax, [rcx]; add [rax], al; mov rcx, rdx; rep movsb [rdi], [rsi]; ret; 
0x0000000047f1a3: movsxd eax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000440570: movsxd eax, [rdi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048c2be: movsxd eax, [rdi]; add rax, rdi; notrack jmp rax; 
0x00000000425536: movsxd eax, [rdx+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000407cfd: movsxd eax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000045bb28: movsxd eax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x0000000046f13a: movsxd eax, [rdx+rcx*4]; add r8, rdx; notrack jmp r8; 
0x00000000401bf2: movsxd eax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x000000004033cb: movsxd eax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x00000000452ac9: movsxd eax, [rdx]; add [rax], al; ret; 
0x00000000462af3: movsxd eax, [rip+0x3d8d4800]; sti; movsxd eax, [rip-0xeb11800]; cli; jmp qword ptr [rsi+0x2e]; 
0x0000000048f141: movsxd eax, [rip-0x3f76b400]; ret; 
0x00000000462afa: movsxd eax, [rip-0xeb11800]; cli; jmp qword ptr [rsi+0x2e]; 
0x000000004727f0: movsxd eax, [rsi+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000047e9eb: movsxd eax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000045a75a: movsxd eax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x0000000045a822: movsxd eax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x0000000048bd81: movsxd eax, [rsi]; add rax, rsi; notrack jmp rax; 
0x00000000405ae1: movsxd eax, [rsp+rax*4]; add rax, r12; notrack jmp rax; 
0x000000004a2b8e: movsxd eax, [rsp+rsi*4]; add rax, r12; notrack jmp rax; 
0x0000000045916f: movsxd eax, ecx; ret; 
0x00000000498820: movsxd ebx, ebx; cmp ch, [rcx]; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x0000000047888f: movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x00000000455b0b: movsxd ecx, [rbx+rax*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004407fc: movsxd ecx, [rbx+rcx*4]; add r9, r11; notrack jmp r9; 
0x0000000043b24c: movsxd ecx, [rbx+rcx*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000439b82: movsxd ecx, [rbx+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043b1e5: movsxd ecx, [rbx+rdx*4]; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x0000000045528a: movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000040d169: movsxd ecx, [rcx]; add [rax], al; nop [rax]; mov eax, 0xffffff94; ret; 
0x0000000047f23f: movsxd ecx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x00000000431e32: movsxd ecx, [rdx+rcx*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000437bce: movsxd ecx, [rdx+rcx*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044c53e: movsxd ecx, [rdx+rcx*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000045a790: movsxd ecx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x000000004114a0: movsxd ecx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x000000004591a3: movsxd ecx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000004781c9: movsxd edi, ebx; dec dword ptr [rcx-0x77]; ret; 
0x0000000045b8b2: movsxd edi, ebx; jmp qword ptr [rsi+0x2e]; 
0x0000000046fdac: movsxd edi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000048712d: movsxd edx, [rbp+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x0000000041db6d: movsxd edx, [rbx+rdx*4]; add r10, r11; notrack jmp r10; 
0x0000000043b320: movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000407cd8: movsxd edx, [rcx+rax*4]; add rdx, r9; notrack jmp rdx; 
0x0000000040206c: movsxd edx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000405a95: movsxd edx, [rdi+rdx*4]; add rdx, r15; notrack jmp rdx; 
0x0000000041d86a: movsxd edx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x00000000478441: movsxd edx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000048db9b: movsxd edx, ebx; mov edi, [rbp-0x460]; lea rsi, [rbp-0x430]; mov eax, 0x14; syscall; 
0x000000004802e8: movsxd edx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000043b549: movsxd esi, [rdx+0x63490007]; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000472460: movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000041db6c: movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000047245f: movsxd r12, r12d; mov rdx, r12; call qword ptr [r13+0x38]; 
0x0000000046f139: movsxd r8, [rdx+r9*4]; add r8, rdx; notrack jmp r8; 
0x00000000431e31: movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000437bcd: movsxd r9, [r10+r9*4]; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044c53d: movsxd r9, [r10+r9*4]; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004407fb: movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000043b24b: movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043b1e4: movsxd r9, [r11+rdx*4]; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x00000000425535: movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000425567: movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000405ae0: movsxd rax, [r12+rax*4]; add rax, r12; notrack jmp rax; 
0x000000004a2b8d: movsxd rax, [r12+rsi*4]; add rax, r12; notrack jmp rax; 
0x000000004a29d7: movsxd rax, [r13+rax*4]; add rax, r13; notrack jmp rax; 
0x000000004727ef: movsxd rax, [r14+rax*4]; add rax, r14; notrack jmp rax; 
0x000000004a2b50: movsxd rax, [r9+rsi*4]; add rax, r9; notrack jmp rax; 
0x0000000046144f: movsxd rax, [rbp+rax*4]; add rax, rbp; notrack jmp rax; 
0x00000000461408: movsxd rax, [rbx+rax*4]; add rax, rbx; notrack jmp rax; 
0x000000004096d6: movsxd rax, [rbx+rcx*4]; add rax, rbx; notrack jmp rax; 
0x0000000047eaee: movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000041095b: movsxd rax, [rcx+rax*4]; add rax, rdx; ret; 
0x000000004021a9: movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000408a36: movsxd rax, [rcx+rsi*4]; add rax, rcx; notrack jmp rax; 
0x0000000048c2bd: movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x0000000047f1a2: movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000407cfc: movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000045bb27: movsxd rax, [rdx+rbp*4]; add rax, rdx; notrack jmp rax; 
0x00000000401bf1: movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x000000004033ca: movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x0000000048bd80: movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x0000000047e9ea: movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000045a759: movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x0000000045a821: movsxd rax, [rsi+rdx*4]; add rax, rsi; notrack jmp rax; 
0x0000000045916e: movsxd rax, ecx; ret; 
0x0000000047888e: movsxd rbx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x00000000455b0a: movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000439b81: movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000455289: movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000047f23e: movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000045a78f: movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x0000000041149f: movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x000000004591a2: movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000046fdab: movsxd rdi, edi; mov rax, fs:[rax]; mov rax, [rax+rdi*8+0x80]; ret; 
0x0000000043b31f: movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048712c: movsxd rdx, [r13+rdx*4]; add rdx, r13; notrack jmp rdx; 
0x00000000405a94: movsxd rdx, [r15+rdx*4]; add rdx, r15; notrack jmp rdx; 
0x00000000407cd7: movsxd rdx, [r9+r8*4]; add rdx, r9; notrack jmp rdx; 
0x0000000040206b: movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000041d869: movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000047e81d: movsxd rdx, ebp; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x0000000048db9a: movsxd rdx, ebx; mov edi, [rbp-0x460]; lea rsi, [rbp-0x430]; mov eax, 0x14; syscall; 
0x000000004802e7: movsxd rdx, ebx; mov rsi, r13; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x00000000478440: movsxd rdx, r13d; mov rdi, rbx; call qword ptr [r14+0x38]; 
0x00000000459743: movups [r11], xmm4; ret; 
0x000000004597ca: movups [r11], xmm8; ret; 
0x00000000481559: movups [rax+0x40], xmm0; pop rbx; ret; 
0x000000004087fd: movups [rax+0xa0], xmm2; movups [rax+0xb0], xmm3; movups [rax+0xc0], xmm4; pop rbx; ret; 
0x00000000408804: movups [rax+0xb0], xmm3; movups [rax+0xc0], xmm4; pop rbx; ret; 
0x0000000040880b: movups [rax+0xc0], xmm4; pop rbx; ret; 
0x00000000480741: movups [rax], xmm0; ret; 
0x000000004275de: movups [rbp+0x38], xmm0; pop rbp; pop r12; ret; 
0x00000000423472: movups [rbx+0x18], xmm0; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x00000000423476: movups [rbx+0x28], xmm0; pop rbx; ret; 
0x00000000426e75: movups [rbx+0x38], xmm0; pop rbx; pop rbp; pop r12; ret; 
0x00000000426964: movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000042346e: movups [rbx+0x8], xmm0; movups [rbx+0x18], xmm0; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x000000004238b5: movups [rbx+0x8], xmm0; pop rbx; ret; 
0x00000000490cdd: movups [rbx], xmm0; pop rbx; ret; 
0x000000004597cb: movups [rbx], xmm0; ret; 
0x00000000459744: movups [rbx], xmm4; ret; 
0x00000000427877: movups [rcx+0x20], xmm0; movups [rcx+0x30], xmm0; movups [rcx+0x40], xmm0; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000042787b: movups [rcx+0x30], xmm0; movups [rcx+0x40], xmm0; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000042787f: movups [rcx+0x40], xmm0; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x00000000459736: movups [rcx-0x10], xmm6; movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x0000000045973a: movups [rcx-0x20], xmm7; movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x0000000045973f: movups [rcx-0x30], xmm0; movups [r11], xmm4; ret; 
0x0000000045973e: movups [rcx-0x30], xmm8; movups [r11], xmm4; ret; 
0x000000004596a4: movups [rdi+0x10], xmm1; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x000000004597be: movups [rdi+0x10], xmm5; movups [rdi+0x20], xmm6; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000004597c2: movups [rdi+0x20], xmm6; movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x000000004597c6: movups [rdi+0x30], xmm7; movups [r11], xmm8; ret; 
0x00000000426879: movups [rdi+0x8], xmm0; ret; 
0x0000000042768e: movups [rdi+0xa0], xmm0; ret; 
0x00000000459506: movups [rdi+rdx-0x10], xmm1; ret; 
0x000000004596a8: movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x0000000045967b: movups [rdi+rdx-0x10], xmm4; movups [rdi+rdx-0x20], xmm5; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x000000004596ad: movups [rdi+rdx-0x20], xmm3; ret; 
0x00000000459680: movups [rdi+rdx-0x20], xmm5; movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x00000000459685: movups [rdi+rdx-0x30], xmm6; movups [rdi+rdx-0x40], xmm7; ret; 
0x0000000045968a: movups [rdi+rdx-0x40], xmm7; ret; 
0x0000000049e9d4: movups [rdi], xmm0; mov [rdx], eax; mov eax, 0x2; ret; 
0x000000004596a1: movups [rdi], xmm0; movups [rdi+0x10], xmm1; movups [rdi+rdx-0x10], xmm2; movups [rdi+rdx-0x20], xmm3; ret; 
0x00000000459503: movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x00000000464f0e: movups [rdx+0x48], xmm0; ret; 
0x0000000047005c: movups [rsp+0x78], xmm6; movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x00000000470061: movups [rsp+0x88], xmm7; mov r10d, 0x8; mov eax, 0xd; syscall; 
0x000000004a165d: movups xmm0, [rip+0x2ec14]; divss xmm0, [rip+0x2ec10]; ret; 
0x000000004594fb: movups xmm0, [rsi]; movups xmm1, [rsi+rdx-0x10]; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x000000004594fe: movups xmm1, [rsi+rdx-0x10]; movups [rdi], xmm0; movups [rdi+rdx-0x10], xmm1; ret; 
0x00000000462a6a: movzx eax, al; add eax, 0x1; push rax; call rbx; 
0x00000000485035: movzx eax, al; add rsp, 0x58; ret; 
0x00000000425532: movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000425564: movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x000000004a29d4: movzx eax, al; movsxd rax, [r13+rax*4]; add rax, r13; notrack jmp rax; 
0x000000004a1691: movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000047e9e7: movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000049eb70: movzx eax, al; neg eax; ret; 
0x0000000049822d: movzx eax, al; pop rbx; pop rbp; pop r12; ret; 
0x00000000439474: movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x00000000425c83: movzx eax, bl; pop rbx; pop rbp; pop r12; ret; 
0x00000000434a12: movzx eax, byte ptr [rax+rcx+0x40]; movzx edx, byte ptr [rdx+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000043492c: movzx eax, byte ptr [rax+rcx+0x60]; movzx edx, byte ptr [rdx+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000043339d: movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x000000004348c7: movzx eax, byte ptr [rax+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x000000004348f0: movzx eax, byte ptr [rax+rdi+0x20]; movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000434910: movzx eax, byte ptr [rax+rdi+0x40]; movzx edx, byte ptr [rdx+rdi+0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000438d27: movzx eax, byte ptr [rax+rdi]; movzx edx, byte ptr [rdx+rdi]; sub eax, edx; vzeroupper; ret; 
0x00000000426b80: movzx eax, byte ptr [rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004289b3: movzx eax, byte ptr [rax]; ret; 
0x00000000475da5: movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000475504: movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000473051: movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000439b24: movzx eax, byte ptr [rdi+rcx+0x20]; movzx edx, byte ptr [rsi+rcx+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000439b44: movzx eax, byte ptr [rdi+rcx+0x40]; movzx edx, byte ptr [rsi+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000439b0a: movzx eax, byte ptr [rdi+rcx+0x60]; movzx edx, byte ptr [rsi+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x00000000437c84: movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x00000000439894: movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000434764: movzx eax, byte ptr [rdi+rdx+0x20]; movzx edx, byte ptr [rsi+rdx+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000434784: movzx eax, byte ptr [rdi+rdx+0x40]; movzx edx, byte ptr [rsi+rdx+0x40]; sub eax, edx; vzeroupper; ret; 
0x000000004347a4: movzx eax, byte ptr [rdi+rdx+0x60]; movzx edx, byte ptr [rsi+rdx+0x60]; sub eax, edx; vzeroupper; ret; 
0x00000000433233: movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x0000000043474a: movzx eax, byte ptr [rdi+rdx]; movzx edx, byte ptr [rsi+rdx]; sub eax, edx; vzeroupper; ret; 
0x000000004331c8: movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x00000000458660: movzx eax, byte ptr [rdi-0x10]; movzx edx, byte ptr [rsi-0x10]; sub eax, edx; ret; 
0x00000000458a1a: movzx eax, byte ptr [rdi-0x1]; cmp al, [rsi-0x1]; jne 0x0000000000458b95; xor eax, eax; ret; 
0x00000000458b72: movzx eax, byte ptr [rdi-0x1]; cmp al, [rsi-0x1]; jne short 0x0000000000458b95; xor eax, eax; ret; 
0x0000000043aa30: movzx eax, byte ptr [rdi-0x1]; movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x0000000043a7e3: movzx eax, byte ptr [rdi-0x1]; movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x00000000458647: movzx eax, byte ptr [rdi-0x9]; movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x000000004586c0: movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x000000004586b0: movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x000000004586a0: movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x00000000458690: movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x00000000458680: movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x00000000458670: movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x00000000439910: movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000439451: movzx eax, byte ptr [rdi]; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x000000004331e3: movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x00000000438ef3: movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x0000000047c3b2: movzx eax, byte ptr [rdx+rax]; lea rcx, [rip+0x63c83]; jmp qword ptr [rcx+rax*8]; 
0x00000000426ae0: movzx eax, byte ptr [rdx]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004a7df0: movzx eax, byte ptr [rsp+0xf]; add rsp, 0x10; pop rbx; ret; 
0x0000000045a7f0: movzx eax, cl; pop rbx; ret; 
0x0000000045a2b1: movzx eax, dh; mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000464f85: movzx eax, dh; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000045a2b0: movzx eax, sil; mov rdx, rdi; rep stosb [rdi]; mov rax, rdx; ret; 
0x00000000464f84: movzx eax, sil; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000047639a: movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0x6909b]; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004758ea: movzx ecx, byte ptr [rbx+rax]; lea rax, [rip+0x69d4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x0000000047c7d7: movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x6375e]; jmp qword ptr [rax+rcx*8]; 
0x0000000047c5f6: movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x6383f]; jmp qword ptr [rax+rcx*8]; 
0x00000000458c9a: movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x0000000000458c90; ret; 
0x00000000458d4a: movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x0000000000458d40; ret; 
0x0000000045900a: movzx ecx, byte ptr [rsi+rdx+0x3]; test cl, cl; jne short 0x0000000000459000; sub rax, 0x1; ret; 
0x000000004331c4: movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x0000000043aa34: movzx ecx, byte ptr [rsi-0x1]; sub eax, ecx; ret; 
0x000000004595fc: movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x000000004331e0: movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x00000000438ef0: movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x00000000439913: movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000459620: movzx ecx, word ptr [rsi+rdx-0x2]; movzx esi, word ptr [rsi]; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x0000000044e960: movzx ecx, word ptr [rsi]; mov [rdi], cx; mov byte ptr [rdi+0x2], 0x0; vzeroupper; ret; 
0x00000000403175: movzx edi, bh; mov [rip+0xdef8a], edi; ret; 
0x00000000403174: movzx edi, dil; mov [rip+0xdef8a], edi; ret; 
0x00000000475b56: movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x69cdf]; jmp qword ptr [rax+rdx*8]; 
0x00000000475953: movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x69de2]; jmp qword ptr [rax+rdx*8]; 
0x00000000430510: movzx edx, byte ptr [rcx+rax]; cmp dl, r8b; jne short 0x0000000000430500; sub rax, 0x10; ret; 
0x0000000041e0a8: movzx edx, byte ptr [rcx]; test dl, dl; jne short 0x000000000041e088; ret; 
0x00000000434a16: movzx edx, byte ptr [rdx+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000434931: movzx edx, byte ptr [rdx+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x000000004333a1: movzx edx, byte ptr [rdx+rcx]; sub eax, edx; ret; 
0x000000004348cb: movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x000000004348f5: movzx edx, byte ptr [rdx+rdi+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000434914: movzx edx, byte ptr [rdx+rdi+0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000438d2b: movzx edx, byte ptr [rdx+rdi]; sub eax, edx; vzeroupper; ret; 
0x00000000458eba: movzx edx, byte ptr [rsi+rax+0x3]; test dl, dl; jne short 0x0000000000458eb0; lea rax, [rcx-0x1]; ret; 
0x00000000439b29: movzx edx, byte ptr [rsi+rcx+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000439b48: movzx edx, byte ptr [rsi+rcx+0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000439b0f: movzx edx, byte ptr [rsi+rcx+0x60]; sub eax, edx; vzeroupper; ret; 
0x00000000437c88: movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x00000000439898: movzx edx, byte ptr [rsi+rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000434769: movzx edx, byte ptr [rsi+rdx+0x20]; sub eax, edx; vzeroupper; ret; 
0x00000000434788: movzx edx, byte ptr [rsi+rdx+0x40]; sub eax, edx; vzeroupper; ret; 
0x000000004347a9: movzx edx, byte ptr [rsi+rdx+0x60]; sub eax, edx; vzeroupper; ret; 
0x00000000433237: movzx edx, byte ptr [rsi+rdx]; sub eax, edx; ret; 
0x0000000043474e: movzx edx, byte ptr [rsi+rdx]; sub eax, edx; vzeroupper; ret; 
0x00000000458664: movzx edx, byte ptr [rsi-0x10]; sub eax, edx; ret; 
0x00000000442b50: movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x0000000043a7e7: movzx edx, byte ptr [rsi-0x1]; sub eax, edx; ret; 
0x0000000045864b: movzx edx, byte ptr [rsi-0x9]; sub eax, edx; ret; 
0x000000004586c4: movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x000000004586b4: movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x000000004586a4: movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x00000000458692: movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x00000000458694: movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x00000000458684: movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x00000000458682: movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x00000000458674: movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x00000000443230: movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x0000000044efe0: movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x00000000439454: movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x0000000041db69: movzx edx, dl; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000043947a: movzx edx, dl; sub eax, edx; ret; 
0x0000000044f003: movzx edx, word ptr [rsi+r8-0x2]; mov [rdi], cx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000044f004: movzx edx, word ptr [rsi+rax-0x2]; mov [rdi], cx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x00000000442ad0: movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000457060: movzx edx, word ptr [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; vzeroupper; ret; 
0x000000004431c0: movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x0000000044e950: movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x000000004836f4: movzx esi, bl; call rbp; 
0x00000000426f85: movzx esi, byte ptr [r14]; lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x00000000426f86: movzx esi, byte ptr [rsi]; lea r15, [r14+0x1]; mov rdi, r12; call qword ptr [rbx+0x18]; 
0x00000000403501: movzx esi, dh; mov [rip+0xdec16], esi; ret; 
0x000000004034f1: movzx esi, dh; mov [rip+0xdec22], esi; ret; 
0x000000004034e1: movzx esi, dh; mov [rip+0xdec26], esi; ret; 
0x000000004034d1: movzx esi, dh; mov [rip+0xdec32], esi; ret; 
0x000000004034c1: movzx esi, dh; mov [rip+0xdec5e], esi; ret; 
0x000000004033a1: movzx esi, dh; mov [rip+0xded6a], esi; ret; 
0x00000000403391: movzx esi, dh; mov [rip+0xded7e], esi; ret; 
0x00000000403381: movzx esi, dh; mov [rip+0xded9a], esi; ret; 
0x000000004a2b8a: movzx esi, dh; movsxd rax, [r12+rsi*4]; add rax, r12; notrack jmp rax; 
0x000000004a2b4d: movzx esi, dh; movsxd rax, [r9+rsi*4]; add rax, r9; notrack jmp rax; 
0x00000000403500: movzx esi, sil; mov [rip+0xdec16], esi; ret; 
0x000000004034f0: movzx esi, sil; mov [rip+0xdec22], esi; ret; 
0x000000004034e0: movzx esi, sil; mov [rip+0xdec26], esi; ret; 
0x000000004034d0: movzx esi, sil; mov [rip+0xdec32], esi; ret; 
0x000000004034c0: movzx esi, sil; mov [rip+0xdec5e], esi; ret; 
0x000000004033a0: movzx esi, sil; mov [rip+0xded6a], esi; ret; 
0x00000000403390: movzx esi, sil; mov [rip+0xded7e], esi; ret; 
0x00000000403380: movzx esi, sil; mov [rip+0xded9a], esi; ret; 
0x000000004a2b89: movzx esi, sil; movsxd rax, [r12+rsi*4]; add rax, r12; notrack jmp rax; 
0x000000004a2b4c: movzx esi, sil; movsxd rax, [r9+rsi*4]; add rax, r9; notrack jmp rax; 
0x00000000459625: movzx esi, word ptr [rsi]; mov [rdi+rdx-0x2], cx; mov [rdi], si; ret; 
0x0000000041db68: movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x00000000438e9a: movzx r8d, byte ptr [r8+rcx]; movzx edx, byte ptr [rdx+rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000043c6b5: mul dword ptr [rax+0x63490007]; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045be3b: neg eax; mov fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000045bedf: neg eax; mov fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000045c117: neg eax; mov fs:[rdx], eax; mov rax, 0xffffffffffffffff; ret; 
0x0000000048514f: neg eax; mov fs:[rdx], eax; xor eax, eax; mov qword ptr [rip+0x5fe37], 0xffffffffffffffff; ret; 
0x00000000490d33: neg eax; ret; 
0x0000000048e525: neg eax; test cl, cl; cmove r8, rax; mov rax, r8; ret; 
0x0000000048e524: neg rax; test cl, cl; cmove r8, rax; mov rax, r8; ret; 
0x000000004841e8: nop [rax+rax]; add rax, 0x3; ret; 
0x000000004841e5: nop [rax+rax]; add rax, 0x3; ret; 
0x000000004841e7: nop [rax+rax]; add rax, 0x3; ret; 
0x0000000042eb57: nop [rax+rax]; add rsp, 0x18; ret; 
0x0000000042eb58: nop [rax+rax]; add rsp, 0x18; ret; 
0x00000000402e6b: nop [rax+rax]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000462bb3: nop [rax+rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000048b1d8: nop [rax+rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000048b1d7: nop [rax+rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000462bb2: nop [rax+rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000048b1d6: nop [rax+rax]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000439208: nop [rax+rax]; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x00000000439207: nop [rax+rax]; bsf eax, eax; lea rax, [rax+rdi+0x10]; ret; 
0x0000000049e98a: nop [rax+rax]; bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x0000000049e98b: nop [rax+rax]; bts rax, 0x30; mov [rdi+0x8], rax; mov eax, 0x2; ret; 
0x0000000049e817: nop [rax+rax]; bts rsi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x0000000049e818: nop [rax+rax]; bts rsi, 0x34; mov eax, 0x1; mov [rdi], rsi; ret; 
0x0000000042ad03: nop [rax+rax]; call rax; 
0x000000004612fb: nop [rax+rax]; endbr64; lea rax, [rip+0x81f55]; ret; 
0x000000004612fa: nop [rax+rax]; endbr64; lea rax, [rip+0x81f55]; ret; 
0x0000000045be18: nop [rax+rax]; endbr64; mov eax, 0x18; syscall; 
0x0000000045f8f8: nop [rax+rax]; endbr64; mov eax, 0x63; syscall; 
0x0000000048b5eb: nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000426ea7: nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000426ea8: nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000048b5ea: nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000045f89b: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000045f8c8: nop [rax+rax]; endbr64; mov r10, rcx; mov eax, 0x9d; syscall; 
0x00000000411acb: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffc0; add rax, fs:[0x0]; ret; 
0x0000000046fdf7: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046fdf5: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046fdf8: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046fdd7: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046fdd8: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046fdd5: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046fdbb: nop [rax+rax]; endbr64; mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x0000000042881a: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x0000000042881b: nop [rax+rax]; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x00000000428877: nop [rax+rax]; endbr64; mov rax, [rdi+0x68]; ret; 
0x00000000428878: nop [rax+rax]; endbr64; mov rax, [rdi+0x68]; ret; 
0x0000000046d1f8: nop [rax+rax]; endbr64; mov rax, [rip+0x77c45]; ret; 
0x00000000463847: nop [rax+rax]; endbr64; mov rax, [rip+0x821ad]; ret; 
0x00000000463846: nop [rax+rax]; endbr64; mov rax, [rip+0x821ad]; ret; 
0x00000000463848: nop [rax+rax]; endbr64; mov rax, [rip+0x821ad]; ret; 
0x00000000428855: nop [rax+rax]; endbr64; mov rax, [rip+0xb98f5]; ret; 
0x00000000428857: nop [rax+rax]; endbr64; mov rax, [rip+0xb98f5]; ret; 
0x00000000428858: nop [rax+rax]; endbr64; mov rax, [rip+0xb98f5]; ret; 
0x00000000403167: nop [rax+rax]; endbr64; movzx edi, dil; mov [rip+0xdef8a], edi; ret; 
0x00000000403168: nop [rax+rax]; endbr64; movzx edi, dil; mov [rip+0xdef8a], edi; ret; 
0x00000000403165: nop [rax+rax]; endbr64; movzx edi, dil; mov [rip+0xdef8a], edi; ret; 
0x0000000042884b: nop [rax+rax]; endbr64; ret; 
0x0000000042884a: nop [rax+rax]; endbr64; ret; 
0x000000004278a7: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x000000004278a8: nop [rax+rax]; endbr64; xor eax, eax; ret; 
0x00000000455aca: nop [rax+rax]; lea r11, [rip+0x61c19]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455acb: nop [rax+rax]; lea r11, [rip+0x61c19]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000457375: nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x00000000457377: nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x00000000457378: nop [rax+rax]; lea rax, [rdi+0x2]; ret; 
0x00000000457385: nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x00000000457387: nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x00000000457388: nop [rax+rax]; lea rax, [rdi+0x3]; ret; 
0x00000000457397: nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x00000000457398: nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x00000000457395: nop [rax+rax]; lea rax, [rdi+0x4]; ret; 
0x000000004573a8: nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x000000004573a7: nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x000000004573a5: nop [rax+rax]; lea rax, [rdi+0x5]; ret; 
0x000000004573b7: nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x000000004573b5: nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x000000004573b8: nop [rax+rax]; lea rax, [rdi+0x6]; ret; 
0x000000004573c8: nop [rax+rax]; lea rax, [rdi+0x8]; ret; 
0x000000004573c5: nop [rax+rax]; lea rax, [rdi+0x8]; ret; 
0x000000004573c7: nop [rax+rax]; lea rax, [rdi+0x8]; ret; 
0x000000004573d8: nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x000000004573d7: nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x000000004573d5: nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x000000004573e8: nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x000000004573e5: nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x000000004573e7: nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x000000004573f5: nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x000000004573f7: nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x000000004573f8: nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x00000000457405: nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x00000000457408: nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x00000000457407: nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x00000000457417: nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x00000000457415: nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x00000000457418: nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x00000000457425: nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x00000000457427: nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x00000000457428: nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x0000000040d7d8: nop [rax+rax]; lea rax, [rip+0x9bd77]; ret; 
0x0000000040d7b8: nop [rax+rax]; lea rax, [rip+0x9bd80]; ret; 
0x0000000040d7a8: nop [rax+rax]; lea rax, [rip+0x9bd84]; ret; 
0x0000000040d798: nop [rax+rax]; lea rax, [rip+0x9bd8c]; ret; 
0x0000000040d7c8: nop [rax+rax]; lea rax, [rip+0x9bd8e]; ret; 
0x0000000040d788: nop [rax+rax]; lea rax, [rip+0x9bd8f]; ret; 
0x0000000040d818: nop [rax+rax]; lea rax, [rip+0x9bdba]; ret; 
0x0000000040d778: nop [rax+rax]; lea rax, [rip+0x9bdcc]; ret; 
0x0000000040d808: nop [rax+rax]; lea rax, [rip+0x9bdd1]; ret; 
0x0000000040d7f8: nop [rax+rax]; lea rax, [rip+0x9bde8]; ret; 
0x0000000040d7e8: nop [rax+rax]; lea rax, [rip+0x9bdff]; ret; 
0x0000000040cc98: nop [rax+rax]; lea rax, [rip+0x9c8b7]; ret; 
0x0000000040cc78: nop [rax+rax]; lea rax, [rip+0x9c8c0]; ret; 
0x0000000040cc68: nop [rax+rax]; lea rax, [rip+0x9c8c4]; ret; 
0x0000000040cc58: nop [rax+rax]; lea rax, [rip+0x9c8cc]; ret; 
0x0000000040cc88: nop [rax+rax]; lea rax, [rip+0x9c8ce]; ret; 
0x0000000040cc48: nop [rax+rax]; lea rax, [rip+0x9c8cf]; ret; 
0x0000000040ccd8: nop [rax+rax]; lea rax, [rip+0x9c8fa]; ret; 
0x0000000040cc38: nop [rax+rax]; lea rax, [rip+0x9c90c]; ret; 
0x0000000040ccc8: nop [rax+rax]; lea rax, [rip+0x9c911]; ret; 
0x0000000040ccb8: nop [rax+rax]; lea rax, [rip+0x9c928]; ret; 
0x0000000040cca8: nop [rax+rax]; lea rax, [rip+0x9c93f]; ret; 
0x0000000040c158: nop [rax+rax]; lea rax, [rip+0x9d3f7]; ret; 
0x0000000040c138: nop [rax+rax]; lea rax, [rip+0x9d400]; ret; 
0x0000000040c128: nop [rax+rax]; lea rax, [rip+0x9d404]; ret; 
0x0000000040c118: nop [rax+rax]; lea rax, [rip+0x9d40c]; ret; 
0x0000000040c148: nop [rax+rax]; lea rax, [rip+0x9d40e]; ret; 
0x0000000040c108: nop [rax+rax]; lea rax, [rip+0x9d40f]; ret; 
0x0000000040c198: nop [rax+rax]; lea rax, [rip+0x9d43a]; ret; 
0x0000000040c0f8: nop [rax+rax]; lea rax, [rip+0x9d44c]; ret; 
0x0000000040c188: nop [rax+rax]; lea rax, [rip+0x9d451]; ret; 
0x0000000040c178: nop [rax+rax]; lea rax, [rip+0x9d468]; ret; 
0x0000000040c168: nop [rax+rax]; lea rax, [rip+0x9d47f]; ret; 
0x0000000040b558: nop [rax+rax]; lea rax, [rip+0x9e014]; ret; 
0x0000000040b548: nop [rax+rax]; lea rax, [rip+0x9e01c]; ret; 
0x0000000040b538: nop [rax+rax]; lea rax, [rip+0x9e023]; ret; 
0x0000000040b528: nop [rax+rax]; lea rax, [rip+0x9e02e]; ret; 
0x0000000040b518: nop [rax+rax]; lea rax, [rip+0x9e037]; ret; 
0x0000000040b4f8: nop [rax+rax]; lea rax, [rip+0x9e040]; ret; 
0x0000000040b4e8: nop [rax+rax]; lea rax, [rip+0x9e044]; ret; 
0x0000000040b4d8: nop [rax+rax]; lea rax, [rip+0x9e04c]; ret; 
0x0000000040b4c8: nop [rax+rax]; lea rax, [rip+0x9e04f]; ret; 
0x0000000040b4a8: nop [rax+rax]; lea rax, [rip+0x9e077]; ret; 
0x0000000040b4b8: nop [rax+rax]; lea rax, [rip+0x9e08c]; ret; 
0x0000000040b508: nop [rax+rax]; lea rax, [rip+0xc02d8]; ret; 
0x00000000479668: nop [rax+rax]; lea rdi, [rip+0x4ef89]; lea rsi, [rip+0x663c2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000479666: nop [rax+rax]; lea rdi, [rip+0x4ef89]; lea rsi, [rip+0x663c2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000479667: nop [rax+rax]; lea rdi, [rip+0x4ef89]; lea rsi, [rip+0x663c2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000045cbc2: nop [rax+rax]; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000045cbc3: nop [rax+rax]; lea rdx, [rsp+0x8]; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000045fb83: nop [rax+rax]; mov [rax+0x20], rsi; ret; 
0x00000000452bf8: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x00000000452bf7: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x3], edx; ret; 
0x00000000452be6: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x00000000452be7: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x00000000452be8: nop [rax+rax]; mov [rcx], edx; mov [rcx+0x4], dx; ret; 
0x00000000452bc8: nop [rax+rax]; mov [rcx], edx; ret; 
0x00000000452bc7: nop [rax+rax]; mov [rcx], edx; ret; 
0x00000000452c58: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x00000000452c57: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x00000000452c68: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x6], rdx; ret; 
0x00000000452c38: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x00000000452c78: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x7], rdx; ret; 
0x00000000452c28: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x00000000452c27: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x00000000452c48: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x00000000452c47: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], edx; ret; 
0x00000000452c88: nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], rdx; ret; 
0x00000000452c07: nop [rax+rax]; mov [rcx], rdx; ret; 
0x00000000452c08: nop [rax+rax]; mov [rcx], rdx; ret; 
0x00000000452c06: nop [rax+rax]; mov [rcx], rdx; ret; 
0x0000000045fb17: nop [rax+rax]; mov [rdi+0x20], rsi; ret; 
0x0000000045fb18: nop [rax+rax]; mov [rdi+0x20], rsi; ret; 
0x000000004a3987: nop [rax+rax]; mov [rdi+rsi*8], rdx; add rsp, 0x8; ret; 
0x000000004a3988: nop [rax+rax]; mov [rdi+rsi*8], rdx; add rsp, 0x8; ret; 
0x000000004a3986: nop [rax+rax]; mov [rdi+rsi*8], rdx; add rsp, 0x8; ret; 
0x00000000456417: nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x00000000456418: nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x00000000456a07: nop [rax+rax]; mov [rdi], dh; lea rax, [rdi]; ret; 
0x00000000456a08: nop [rax+rax]; mov [rdi], dh; lea rax, [rdi]; ret; 
0x000000004553c8: nop [rax+rax]; mov [rdi], dh; ret; 
0x000000004553c7: nop [rax+rax]; mov [rdi], dh; ret; 
0x0000000044f0d8: nop [rax+rax]; mov [rdi], dx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000044f0d7: nop [rax+rax]; mov [rdi], dx; mov [rdi+r8-0x2], dx; vzeroupper; ret; 
0x0000000044f0c8: nop [rax+rax]; mov [rdi], dx; vzeroupper; ret; 
0x0000000044f0c6: nop [rax+rax]; mov [rdi], dx; vzeroupper; ret; 
0x0000000044f0c7: nop [rax+rax]; mov [rdi], dx; vzeroupper; ret; 
0x00000000456406: nop [rax+rax]; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x00000000456408: nop [rax+rax]; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x00000000456407: nop [rax+rax]; mov [rdi], edx; mov [rdi+0x4], dx; ret; 
0x00000000456478: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x00000000456477: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x00000000456488: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x6], rdx; ret; 
0x00000000456458: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x00000000456447: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x00000000456448: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x00000000456468: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x00000000456467: nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], edx; ret; 
0x0000000044f0fb: nop [rax+rax]; mov [rdi], rdx; mov [rdi+r8-0x8], rdx; vzeroupper; ret; 
0x00000000456428: nop [rax+rax]; mov [rdi], rdx; ret; 
0x00000000456427: nop [rax+rax]; mov [rdi], rdx; ret; 
0x00000000456425: nop [rax+rax]; mov [rdi], rdx; ret; 
0x00000000454f08: nop [rax+rax]; mov ax, [rcx]; mov [rdx], ax; lea rax, [rdx+0x1]; ret; 
0x00000000450bd8: nop [rax+rax]; mov ax, [rcx]; mov [rdx], ax; mov rax, rdi; ret; 
0x000000004553e8: nop [rax+rax]; mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x000000004553e7: nop [rax+rax]; mov cx, [rsi]; mov [rdi], cx; mov [rdi+0x2], dh; ret; 
0x0000000049b9e8: nop [rax+rax]; mov dword ptr [rip+0x49746], 0x2; test byte ptr [rip+0x49f1f], 0x40; jne short 0x000000000049ba08; ret; 
0x0000000049b9e6: nop [rax+rax]; mov dword ptr [rip+0x49746], 0x2; test byte ptr [rip+0x49f1f], 0x40; jne short 0x000000000049ba08; ret; 
0x0000000049b9e7: nop [rax+rax]; mov dword ptr [rip+0x49746], 0x2; test byte ptr [rip+0x49f1f], 0x40; jne short 0x000000000049ba08; ret; 
0x00000000456a17: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x00000000456a16: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x00000000456a18: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; lea rax, [rdi+0x1]; ret; 
0x000000004560c7: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000004560c8: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000004560c5: nop [rax+rax]; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000040aeab: nop [rax+rax]; mov eax, 0xffffff20; ret; 
0x0000000040aec7: nop [rax+rax]; mov eax, 0xffffff8a; ret; 
0x0000000040aec8: nop [rax+rax]; mov eax, 0xffffff8a; ret; 
0x0000000040aec6: nop [rax+rax]; mov eax, 0xffffff8a; ret; 
0x0000000040aeb7: nop [rax+rax]; mov eax, 0xffffff97; ret; 
0x0000000040aeb8: nop [rax+rax]; mov eax, 0xffffff97; ret; 
0x0000000040aeb6: nop [rax+rax]; mov eax, 0xffffff97; ret; 
0x0000000040aee6: nop [rax+rax]; mov eax, 0xffffff99; ret; 
0x0000000040aee7: nop [rax+rax]; mov eax, 0xffffff99; ret; 
0x0000000040aee8: nop [rax+rax]; mov eax, 0xffffff99; ret; 
0x0000000040aed8: nop [rax+rax]; mov eax, 0xffffff9a; ret; 
0x0000000040aed7: nop [rax+rax]; mov eax, 0xffffff9a; ret; 
0x0000000040aed6: nop [rax+rax]; mov eax, 0xffffff9a; ret; 
0x00000000403493: nop [rax+rax]; mov eax, 0xffffffa1; ret; 
0x0000000040a9e3: nop [rax+rax]; mov eax, 0xffffffdf; ret; 
0x0000000040a9e2: nop [rax+rax]; mov eax, 0xffffffdf; ret; 
0x00000000402c53: nop [rax+rax]; mov eax, 0xffffffea; ret; 
0x00000000421e1b: nop [rax+rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000421e1a: nop [rax+rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x000000004289d3: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000004285f7: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000004285f6: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000422bd8: nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000408a78: nop [rax+rax]; mov eax, [rdi+0x10]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408a88: nop [rax+rax]; mov eax, [rdi+0x14]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408a98: nop [rax+rax]; mov eax, [rdi+0x18]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408aa8: nop [rax+rax]; mov eax, [rdi+0x1c]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408ab8: nop [rax+rax]; mov eax, [rdi+0x20]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408a48: nop [rax+rax]; mov eax, [rdi+0x4]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408a58: nop [rax+rax]; mov eax, [rdi+0x8]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000408a68: nop [rax+rax]; mov eax, [rdi+0xc]; mov [rdx], eax; xor eax, eax; ret; 
0x00000000455405: nop [rax+rax]; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x00000000455408: nop [rax+rax]; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x00000000455407: nop [rax+rax]; mov ecx, [rsi]; mov [rdi+0x4], dh; mov [rdi], ecx; ret; 
0x0000000045b8db: nop [rax+rax]; mov edi, edx; mov eax, esi; syscall; 
0x0000000045b8da: nop [rax+rax]; mov edi, edx; mov eax, esi; syscall; 
0x000000004803a6: nop [rax+rax]; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000004803a8: nop [rax+rax]; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000004803a7: nop [rax+rax]; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000004553fa: nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000004553fb: nop [rax+rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000049232b: nop [rax+rax]; mov qword ptr fs:[r12], 0x0; mov rax, [rsp+0x10]; mov rdi, [rsp+0x18]; call rax; 
0x000000004a16e3: nop [rax+rax]; mov r8, [r8]; mov [r9], r8; add rsp, 0x8; ret; 
0x00000000484218: nop [rax+rax]; mov rax, 0x2; ret; 
0x00000000484228: nop [rax+rax]; mov rax, 0x3; ret; 
0x00000000484238: nop [rax+rax]; mov rax, 0x4; ret; 
0x0000000040a4d8: nop [rax+rax]; mov rax, 0x4dec40; ret; 
0x0000000040a4c8: nop [rax+rax]; mov rax, 0x4dec80; ret; 
0x0000000040a478: nop [rax+rax]; mov rax, 0x4ded40; ret; 
0x0000000040a4a3: nop [rax+rax]; mov rax, 0x4dee40; ret; 
0x0000000040a4e8: nop [rax+rax]; mov rax, 0x4dee80; ret; 
0x0000000040a468: nop [rax+rax]; mov rax, 0x4deec0; ret; 
0x0000000040a488: nop [rax+rax]; mov rax, 0x4e11a0; ret; 
0x0000000040a4f8: nop [rax+rax]; mov rax, 0x4e1260; ret; 
0x0000000040a4b8: nop [rax+rax]; mov rax, 0x4e12e0; ret; 
0x00000000484248: nop [rax+rax]; mov rax, 0x5; ret; 
0x00000000484258: nop [rax+rax]; mov rax, 0x6; ret; 
0x00000000484268: nop [rax+rax]; mov rax, 0x7; ret; 
0x0000000045beeb: nop [rax+rax]; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000045beea: nop [rax+rax]; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x00000000485162: nop [rax+rax]; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x00000000485163: nop [rax+rax]; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000041ec22: nop [rax+rax]; mov rax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000041ec23: nop [rax+rax]; mov rax, [rax+0x18]; ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x000000004a1833: nop [rax+rax]; mov rax, [rsi+0xb0]; add rsp, 0x8; ret; 
0x000000004846bb: nop [rax+rax]; mov rax, r8; shr rax, 0x2; vzeroupper; ret; 
0x00000000483547: nop [rax+rax]; mov rax, r8; vzeroupper; ret; 
0x00000000483548: nop [rax+rax]; mov rax, r8; vzeroupper; ret; 
0x0000000045669b: nop [rax+rax]; mov rax, rdi; ret; 
0x00000000455447: nop [rax+rax]; mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x00000000455448: nop [rax+rax]; mov rcx, [rsi]; mov [rdi+0x8], dh; mov [rdi], rcx; ret; 
0x0000000045543b: nop [rax+rax]; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x00000000411a13: nop [rax+rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [r15+rbx*8]; 
0x000000004a00da: nop [rax+rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000004a00db: nop [rax+rax]; mov rdx, r13; mov rsi, r12; mov edi, ebp; call qword ptr [rbx]; 
0x000000004a63eb: nop [rax+rax]; mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x000000004a63ea: nop [rax+rax]; mov rdx, rbp; mov esi, 0x40; mov rdi, r13; call rbx; 
0x0000000042ff98: nop [rax+rax]; mov rsi, [rsp+0x28]; mov rdi, r12; call rax; 
0x00000000430c18: nop [rax+rax]; mov rsi, r12; call rax; 
0x00000000430c17: nop [rax+rax]; mov rsi, r12; call rax; 
0x00000000456498: nop [rax+rax]; movdqu [rdi-0x1], xmm0; ret; 
0x000000004564a7: nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000004564a8: nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000004564a6: nop [rax+rax]; movdqu [rdi], xmm0; ret; 
0x000000004586bb: nop [rax+rax]; movzx eax, byte ptr [rdi-0xa]; movzx edx, byte ptr [rsi-0xa]; sub eax, edx; ret; 
0x000000004586ab: nop [rax+rax]; movzx eax, byte ptr [rdi-0xb]; movzx edx, byte ptr [rsi-0xb]; sub eax, edx; ret; 
0x0000000045869b: nop [rax+rax]; movzx eax, byte ptr [rdi-0xc]; movzx edx, byte ptr [rsi-0xc]; sub eax, edx; ret; 
0x0000000045868b: nop [rax+rax]; movzx eax, byte ptr [rdi-0xd]; movzx edx, byte ptr [rsi-0xd]; sub eax, edx; ret; 
0x0000000045867b: nop [rax+rax]; movzx eax, byte ptr [rdi-0xe]; movzx edx, byte ptr [rsi-0xe]; sub eax, edx; ret; 
0x0000000045866b: nop [rax+rax]; movzx eax, byte ptr [rdi-0xf]; movzx edx, byte ptr [rsi-0xf]; sub eax, edx; ret; 
0x0000000043990b: nop [rax+rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000436397: nop [rax+rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x00000000436398: nop [rax+rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000044efda: nop [rax+rax]; movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x0000000044efdb: nop [rax+rax]; movzx edx, byte ptr [rsi]; mov [rdi], dl; vzeroupper; ret; 
0x000000004034fb: nop [rax+rax]; movzx esi, sil; mov [rip+0xdec16], esi; ret; 
0x000000004034eb: nop [rax+rax]; movzx esi, sil; mov [rip+0xdec22], esi; ret; 
0x000000004034db: nop [rax+rax]; movzx esi, sil; mov [rip+0xdec26], esi; ret; 
0x000000004034cb: nop [rax+rax]; movzx esi, sil; mov [rip+0xdec32], esi; ret; 
0x0000000040339b: nop [rax+rax]; movzx esi, sil; mov [rip+0xded6a], esi; ret; 
0x0000000040338b: nop [rax+rax]; movzx esi, sil; mov [rip+0xded7e], esi; ret; 
0x000000004391e2: nop [rax+rax]; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x000000004391e4: nop [rax+rax]; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x000000004391e5: nop [rax+rax]; nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x00000000402154: nop [rax+rax]; nop [rax]; endbr64; lea rax, [rip+0xa6f3d]; ret; 
0x00000000402151: nop [rax+rax]; nop [rax]; endbr64; lea rax, [rip+0xa6f3d]; ret; 
0x00000000402153: nop [rax+rax]; nop [rax]; endbr64; lea rax, [rip+0xa6f3d]; ret; 
0x0000000045cb24: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x3; syscall; 
0x0000000045cb25: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x3; syscall; 
0x0000000045cb23: nop [rax+rax]; nop [rax]; endbr64; mov eax, 0x3; syscall; 
0x000000004037c2: nop [rax+rax]; nop [rax]; endbr64; mov eax, [rip+0xde92a]; ret; 
0x000000004037c4: nop [rax+rax]; nop [rax]; endbr64; mov eax, [rip+0xde92a]; ret; 
0x000000004037c5: nop [rax+rax]; nop [rax]; endbr64; mov eax, [rip+0xde92a]; ret; 
0x000000004a3a24: nop [rax+rax]; nop [rax]; endbr64; mov rax, [rdi+0xb0]; ret; 
0x000000004a3a25: nop [rax+rax]; nop [rax]; endbr64; mov rax, [rdi+0xb0]; ret; 
0x000000004a3a22: nop [rax+rax]; nop [rax]; endbr64; mov rax, [rdi+0xb0]; ret; 
0x00000000452b94: nop [rax+rax]; nop [rax]; mov [rcx], dl; ret; 
0x00000000452b93: nop [rax+rax]; nop [rax]; mov [rcx], dl; ret; 
0x00000000452b91: nop [rax+rax]; nop [rax]; mov [rcx], dl; ret; 
0x000000004563b1: nop [rax+rax]; nop [rax]; mov [rdi], dl; ret; 
0x000000004563b4: nop [rax+rax]; nop [rax]; mov [rdi], dl; ret; 
0x000000004563b3: nop [rax+rax]; nop [rax]; mov [rdi], dl; ret; 
0x000000004560b1: nop [rax+rax]; nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x000000004560b4: nop [rax+rax]; nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x000000004560b3: nop [rax+rax]; nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x000000004429b3: nop [rax+rax]; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x000000004429b4: nop [rax+rax]; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x000000004429b1: nop [rax+rax]; nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x0000000046ff94: nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x0000000046ff91: nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x0000000046ff93: nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x0000000043cc53: nop [rax+rax]; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x0000000043cc54: nop [rax+rax]; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x0000000043cc51: nop [rax+rax]; nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x00000000442b43: nop [rax+rax]; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x00000000442b44: nop [rax+rax]; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x00000000442b41: nop [rax+rax]; nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x00000000442ac3: nop [rax+rax]; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000442ac4: nop [rax+rax]; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000442ac1: nop [rax+rax]; nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x000000004560a3: nop [rax+rax]; nop [rax]; ret; 
0x000000004560a1: nop [rax+rax]; nop [rax]; ret; 
0x000000004560a4: nop [rax+rax]; nop [rax]; ret; 
0x00000000459035: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x00000000459034: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x00000000459032: nop [rax+rax]; nop [rax]; xor eax, eax; ret; 
0x000000004830a2: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x000000004830a4: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x000000004830a5: nop [rax+rax]; nop [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000045d136: nop [rax+rax]; nop; endbr64; mov eax, 0x1c; syscall; 
0x0000000045d135: nop [rax+rax]; nop; endbr64; mov eax, 0x1c; syscall; 
0x0000000045d137: nop [rax+rax]; nop; endbr64; mov eax, 0x1c; syscall; 
0x0000000045c397: nop [rax+rax]; nop; endbr64; mov eax, 0x20; syscall; 
0x0000000045c396: nop [rax+rax]; nop; endbr64; mov eax, 0x20; syscall; 
0x0000000045c395: nop [rax+rax]; nop; endbr64; mov eax, 0x20; syscall; 
0x00000000484ef6: nop [rax+rax]; nop; endbr64; mov eax, 0x66; syscall; 
0x00000000484ef5: nop [rax+rax]; nop; endbr64; mov eax, 0x66; syscall; 
0x00000000484ef7: nop [rax+rax]; nop; endbr64; mov eax, 0x66; syscall; 
0x0000000045d106: nop [rax+rax]; nop; endbr64; mov eax, 0xa; syscall; 
0x0000000045d107: nop [rax+rax]; nop; endbr64; mov eax, 0xa; syscall; 
0x0000000045d105: nop [rax+rax]; nop; endbr64; mov eax, 0xa; syscall; 
0x0000000045d0d7: nop [rax+rax]; nop; endbr64; mov eax, 0xb; syscall; 
0x0000000045d0d6: nop [rax+rax]; nop; endbr64; mov eax, 0xb; syscall; 
0x0000000045d0d5: nop [rax+rax]; nop; endbr64; mov eax, 0xb; syscall; 
0x000000004a3927: nop [rax+rax]; nop; endbr64; mov rax, [rdi+0x90]; ret; 
0x000000004a3926: nop [rax+rax]; nop; endbr64; mov rax, [rdi+0x90]; ret; 
0x000000004a3924: nop [rax+rax]; nop; endbr64; mov rax, [rdi+0x90]; ret; 
0x00000000457366: nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x00000000457364: nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x00000000457367: nop [rax+rax]; nop; lea rax, [rdi+0x1]; ret; 
0x00000000457357: nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x00000000457356: nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x00000000457354: nop [rax+rax]; nop; lea rax, [rdi]; ret; 
0x00000000452bb4: nop [rax+rax]; nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x00000000452bb6: nop [rax+rax]; nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x00000000452bb7: nop [rax+rax]; nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x00000000452c14: nop [rax+rax]; nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x00000000452c16: nop [rax+rax]; nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x00000000452c17: nop [rax+rax]; nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x000000004563d4: nop [rax+rax]; nop; mov [rdi-0x1], edx; ret; 
0x000000004563d6: nop [rax+rax]; nop; mov [rdi-0x1], edx; ret; 
0x000000004563d7: nop [rax+rax]; nop; mov [rdi-0x1], edx; ret; 
0x000000004563e6: nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x000000004563e4: nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x000000004563e7: nop [rax+rax]; nop; mov [rdi], edx; ret; 
0x00000000456437: nop [rax+rax]; nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x00000000456436: nop [rax+rax]; nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x00000000456434: nop [rax+rax]; nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x00000000484206: nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x00000000484204: nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x00000000484207: nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x0000000044f337: nop [rax+rax]; nop; mov rax, rdi; vzeroupper; ret; 
0x0000000044f334: nop [rax+rax]; nop; mov rax, rdi; vzeroupper; ret; 
0x0000000044f336: nop [rax+rax]; nop; mov rax, rdi; vzeroupper; ret; 
0x00000000482b74: nop [rax+rax]; nop; vzeroupper; xor eax, eax; ret; 
0x00000000482b76: nop [rax+rax]; nop; vzeroupper; xor eax, eax; ret; 
0x00000000482b77: nop [rax+rax]; nop; vzeroupper; xor eax, eax; ret; 
0x000000004238bb: nop [rax+rax]; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000049bad8: nop [rax+rax]; pop rbp; ret; 
0x0000000049bad7: nop [rax+rax]; pop rbp; ret; 
0x0000000049819b: nop [rax+rax]; pop rbp; ret; 
0x0000000049819a: nop [rax+rax]; pop rbp; ret; 
0x00000000404888: nop [rax+rax]; ret; 
0x00000000404887: nop [rax+rax]; ret; 
0x00000000401d63: nop [rax+rax]; ret; 
0x00000000407e22: nop [rax+rax]; ret; 
0x000000004a7857: nop [rax+rax]; ret; 
0x000000004a7856: nop [rax+rax]; ret; 
0x00000000428542: nop [rax+rax]; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x00000000428543: nop [rax+rax]; sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x00000000427a62: nop [rax+rax]; sub rax, rcx; sub eax, 0x1; ret; 
0x00000000427a63: nop [rax+rax]; sub rax, rcx; sub eax, 0x1; ret; 
0x00000000481683: nop [rax+rax]; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x00000000481682: nop [rax+rax]; sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x00000000482b86: nop [rax+rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000482b88: nop [rax+rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000482b87: nop [rax+rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000452ba5: nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x00000000452ba6: nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x00000000452ba3: nop [rax+rax]; xchg ax, ax; mov [rcx], dx; ret; 
0x00000000452bd3: nop [rax+rax]; xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x00000000452bd5: nop [rax+rax]; xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x00000000452bd6: nop [rax+rax]; xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000004563c5: nop [rax+rax]; xchg ax, ax; mov [rdi], dx; ret; 
0x000000004563c6: nop [rax+rax]; xchg ax, ax; mov [rdi], dx; ret; 
0x000000004563c3: nop [rax+rax]; xchg ax, ax; mov [rdi], dx; ret; 
0x000000004563f5: nop [rax+rax]; xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000004563f6: nop [rax+rax]; xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000004563f3: nop [rax+rax]; xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000004553d3: nop [rax+rax]; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000004553d5: nop [rax+rax]; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x000000004553d6: nop [rax+rax]; xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x0000000040241b: nop [rax+rax]; xor eax, eax; pop rbp; ret; 
0x0000000045a763: nop [rax+rax]; xor eax, eax; pop rbx; ret; 
0x0000000042276a: nop [rax+rax]; xor eax, eax; ret; 
0x00000000402568: nop [rax+rax]; xor eax, eax; ret; 
0x00000000402567: nop [rax+rax]; xor eax, eax; ret; 
0x00000000403993: nop [rax+rax]; xor eax, eax; ret; 
0x00000000438eda: nop [rax+rax]; xor eax, eax; vzeroupper; ret; 
0x00000000438edb: nop [rax+rax]; xor eax, eax; vzeroupper; ret; 
0x00000000411236: nop [rax+rax]; xor edi, edi; mov eax, edx; syscall; 
0x00000000411238: nop [rax+rax]; xor edi, edi; mov eax, edx; syscall; 
0x00000000411237: nop [rax+rax]; xor edi, edi; mov eax, edx; syscall; 
0x00000000457198: nop [rax+rax]; xor rax, rax; ret; 
0x000000004841f7: nop [rax+rax]; xor rax, rax; ret; 
0x000000004841f5: nop [rax+rax]; xor rax, rax; ret; 
0x000000004841dc: nop [rax]; add rax, 0x1; ret; 
0x00000000402d8d: nop [rax]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000402dec: nop [rax]; add rsp, 0x8; ret; 
0x0000000043b18c: nop [rax]; and eax, 0xff; and ecx, 0xff; sub eax, ecx; ret; 
0x000000004391f9: nop [rax]; bsf eax, eax; add rax, rdi; ret; 
0x00000000439219: nop [rax]; bsf eax, eax; lea rax, [rax+rdi+0x20]; ret; 
0x000000004391ed: nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x0000000048288c: nop [rax]; bsf eax, eax; lea rax, [rax+rdi-0x10]; ret; 
0x00000000411aa5: nop [rax]; call qword ptr [rbp+rbx*8]; 
0x0000000041ed35: nop [rax]; call qword ptr [rbx]; 
0x0000000049a899: nop [rax]; call qword ptr [rbx]; 
0x00000000499581: nop [rax]; call r13; 
0x00000000499324: nop [rax]; call rax; 
0x0000000048f0d1: nop [rax]; cmp rax, r8; ja short 0x000000000048f0e8; add rsp, 0x8; ret; 
0x00000000426de9: nop [rax]; endbr64; cmp qword ptr [rdi+0x38], 0x0; je short 0x0000000000426e00; ret; 
0x0000000040215c: nop [rax]; endbr64; lea rax, [rip+0xa6f3d]; ret; 
0x000000004a39cc: nop [rax]; endbr64; mov [rdi+0x98], rsi; ret; 
0x0000000045ce1c: nop [rax]; endbr64; mov eax, 0x1; syscall; 
0x0000000049ed19: nop [rax]; endbr64; mov eax, 0x26; syscall; 
0x00000000498f8c: nop [rax]; endbr64; mov eax, 0x27; syscall; 
0x0000000045cb2d: nop [rax]; endbr64; mov eax, 0x3; syscall; 
0x00000000484f1c: nop [rax]; endbr64; mov eax, 0x68; syscall; 
0x00000000484f0c: nop [rax]; endbr64; mov eax, 0x6b; syscall; 
0x00000000484f2c: nop [rax]; endbr64; mov eax, 0x6c; syscall; 
0x0000000045c1d9: nop [rax]; endbr64; mov eax, 0x8; syscall; 
0x00000000485119: nop [rax]; endbr64; mov eax, 0xc; syscall; 
0x0000000042880c: nop [rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000042850c: nop [rax]; endbr64; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x000000004037cd: nop [rax]; endbr64; mov eax, [rip+0xde92a]; ret; 
0x00000000498f9c: nop [rax]; endbr64; mov r10, rcx; mov eax, 0x11; syscall; 
0x000000004916e9: nop [rax]; endbr64; mov rax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x000000004a3999: nop [rax]; endbr64; mov rax, [rdi+0x98]; ret; 
0x000000004a39dc: nop [rax]; endbr64; mov rax, [rdi+0xa0]; ret; 
0x000000004a3a3c: nop [rax]; endbr64; mov rax, [rdi+0xa8]; ret; 
0x000000004a3a2d: nop [rax]; endbr64; mov rax, [rdi+0xb0]; ret; 
0x000000004a39ec: nop [rax]; endbr64; mov rax, [rdi+0xb8]; ret; 
0x0000000046385c: nop [rax]; endbr64; mov rax, [rip+0x821ad]; ret; 
0x00000000428889: nop [rax]; endbr64; mov rax, rdi; ret; 
0x0000000045fa5c: nop [rax]; endbr64; ret; 
0x0000000042882c: nop [rax]; endbr64; xor eax, eax; ret; 
0x0000000040a8c4: nop [rax]; lea eax, [rsi*8+0x14]; ret; 
0x00000000497eac: nop [rax]; lea rax, [rip+0x4d189]; mov [rip+0x4d16a], rax; ret; 
0x0000000040d761: nop [rax]; lea rax, [rip+0x9bdb0]; ret; 
0x0000000040cc21: nop [rax]; lea rax, [rip+0x9c8f0]; ret; 
0x0000000040c0e1: nop [rax]; lea rax, [rip+0x9d430]; ret; 
0x0000000040b49d: nop [rax]; lea rax, [rip+0x9e078]; ret; 
0x0000000048c37d: nop [rax]; mov [rbp-0xf0], r11; call r10; 
0x00000000452b9c: nop [rax]; mov [rcx], dl; ret; 
0x000000004563bc: nop [rax]; mov [rdi], dl; ret; 
0x0000000044f0bc: nop [rax]; mov [rdi], dl; vzeroupper; ret; 
0x0000000044f0ed: nop [rax]; mov [rdi], edx; mov [rdi+r8-0x4], edx; vzeroupper; ret; 
0x0000000042bdd5: nop [rax]; mov [rsp+0x18], r10; mov [rsp+0x10], r8; call rax; 
0x00000000450bcd: nop [rax]; mov al, [rcx]; mov [rdx], al; mov rax, rdi; ret; 
0x000000004560bc: nop [rax]; mov dl, [rsi]; mov [rdi], dl; ret; 
0x0000000040bb0d: nop [rax]; mov eax, 0xffffff94; ret; 
0x000000004033d4: nop [rax]; mov eax, 0xffffffa1; add rsp, 0x8; ret; 
0x000000004038ec: nop [rax]; mov eax, 0xffffffa1; ret; 
0x000000004237f4: nop [rax]; mov eax, 0xffffffff; ret; 
0x0000000040a905: nop [rax]; mov eax, 0xffffffff; ret; 
0x00000000454f3c: nop [rax]; mov eax, [rcx]; mov [rdx], eax; lea rax, [rdx+0x3]; ret; 
0x00000000464ce1: nop [rax]; mov eax, [rip+0x8014e]; test eax, eax; je short 0x0000000000464cf8; ret; 
0x00000000480271: nop [rax]; mov edx, 0x10; mov rsi, r13; mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000004429bc: nop [rax]; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x000000004560ed: nop [rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x000000004430d9: nop [rax]; mov edx, [rsi]; mov [rdi], edx; ret; 
0x0000000040a779: nop [rax]; mov rax, 0x4dec40; pop rbp; ret; 
0x0000000040a799: nop [rax]; mov rax, 0x4dec80; pop rbp; ret; 
0x0000000040a789: nop [rax]; mov rax, 0x4decc0; pop rbp; ret; 
0x0000000040a7d9: nop [rax]; mov rax, 0x4ded00; pop rbp; ret; 
0x0000000040a7c9: nop [rax]; mov rax, 0x4ded40; pop rbp; ret; 
0x0000000040a7e9: nop [rax]; mov rax, 0x4ded80; pop rbp; ret; 
0x0000000040a7b9: nop [rax]; mov rax, 0x4dedc0; pop rbp; ret; 
0x0000000040a7a9: nop [rax]; mov rax, 0x4e11e0; pop rbp; ret; 
0x0000000046ff9c: nop [rax]; mov rax, 0xf; syscall; 
0x000000004701a9: nop [rax]; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000045d061: nop [rax]; mov rax, 0xffffffffffffffc0; mov dword ptr fs:[rax], 0x16; mov rax, 0xffffffffffffffff; ret; 
0x000000004983cd: nop [rax]; mov rax, [rbx+0x10]; mov [rax], rdi; pop rbx; ret; 
0x00000000454e8d: nop [rax]; mov rax, [rcx]; mov [rdx], rax; lea rax, [rdx+0x7]; ret; 
0x00000000450b5d: nop [rax]; mov rax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000045a85d: nop [rax]; mov rax, rdx; pop rbx; ret; 
0x0000000043cc5c: nop [rax]; mov rdx, [rsi-0x8]; mov [rdi-0x8], rdx; ret; 
0x00000000442f19: nop [rax]; mov rdx, [rsi]; mov [rdi], rdx; ret; 
0x0000000045cc51: nop [rax]; mov rdx, rsp; mov esi, 0x10; mov eax, 0x48; syscall; 
0x0000000042eb65: nop [rax]; mov rsi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x0000000042ed7d: nop [rax]; mov rsi, [rsp+0x38]; mov rdi, r14; call rax; 
0x000000004847dd: nop [rax]; mov rsi, r12; mov edi, ebp; mov eax, 0xe4; syscall; 
0x0000000047058c: nop [rax]; mov rsi, r13; mov rdi, r14; mov rdx, r12; call rbp; 
0x000000004231f1: nop [rax]; mov rsi, rbx; mov edi, 0x2; mov eax, r9d; syscall; 
0x000000004554c9: nop [rax]; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; mov [rdi+0x10], dh; ret; 
0x0000000045865d: nop [rax]; movzx eax, byte ptr [rdi-0x10]; movzx edx, byte ptr [rsi-0x10]; sub eax, edx; ret; 
0x00000000439b8d: nop [rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000045a7e9: nop [rax]; movzx eax, cl; pop rbx; ret; 
0x000000004331dd: nop [rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x00000000442b4c: nop [rax]; movzx edx, byte ptr [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x00000000443229: nop [rax]; movzx edx, byte ptr [rsi]; mov [rdi], dl; ret; 
0x00000000442acc: nop [rax]; movzx edx, word ptr [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x000000004431b9: nop [rax]; movzx edx, word ptr [rsi]; mov [rdi], dx; ret; 
0x0000000044e949: nop [rax]; movzx edx, word ptr [rsi]; mov [rdi], dx; vzeroupper; ret; 
0x000000004034bc: nop [rax]; movzx esi, sil; mov [rip+0xdec5e], esi; ret; 
0x0000000040337d: nop [rax]; movzx esi, sil; mov [rip+0xded9a], esi; ret; 
0x0000000042f62c: nop [rax]; pop rbp; pop r12; pop r13; jmp rax; 
0x0000000045ae81: nop [rax]; pop rbp; ret; 
0x00000000427915: nop [rax]; pop rbp; ret; 
0x0000000049a8c9: nop [rax]; pop rbx; pop rbp; pop r12; ret; 
0x00000000407ce1: nop [rax]; ret; 
0x00000000408834: nop [rax]; ret; 
0x0000000042934d: nop [rax]; ret; 
0x0000000040aad4: nop [rax]; sar eax, 0x1f; and eax, 0xffffffdf; ret; 
0x0000000044e2bd: nop [rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000044f10c: nop [rax]; vmovdqu [rdi], xmm0; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x0000000040a924: nop [rax]; xor eax, eax; ret; 
0x00000000408a09: nop [rax]; xor eax, eax; ret; 
0x0000000045903d: nop [rax]; xor eax, eax; ret; 
0x000000004830ad: nop [rax]; xor eax, eax; vzeroupper; ret; 
0x000000004233b1: nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000004847d2: nop edx, edi; add rsp, 0x8; pop rbp; pop r12; ret; 
0x00000000426df1: nop edx, edi; cmp qword ptr [rdi+0x38], 0x0; je short 0x0000000000426e00; ret; 
0x00000000423311: nop edx, edi; cmp qword ptr [rip+0xbec84], 0x0; je short 0x000000000042331f; ret; 
0x00000000461301: nop edx, edi; lea rax, [rip+0x81f55]; ret; 
0x00000000402161: nop edx, edi; lea rax, [rip+0xa6f3d]; ret; 
0x000000004a39d1: nop edx, edi; mov [rdi+0x98], rsi; ret; 
0x0000000045cf31: nop edx, edi; mov eax, 0x10; syscall; 
0x0000000045be21: nop edx, edi; mov eax, 0x18; syscall; 
0x0000000045ce21: nop edx, edi; mov eax, 0x1; syscall; 
0x0000000045d141: nop edx, edi; mov eax, 0x1c; syscall; 
0x0000000045c3a1: nop edx, edi; mov eax, 0x20; syscall; 
0x0000000049ed21: nop edx, edi; mov eax, 0x26; syscall; 
0x00000000498f91: nop edx, edi; mov eax, 0x27; syscall; 
0x0000000045cb31: nop edx, edi; mov eax, 0x3; syscall; 
0x00000000484ed1: nop edx, edi; mov eax, 0x3f; syscall; 
0x0000000045f901: nop edx, edi; mov eax, 0x63; syscall; 
0x00000000484f01: nop edx, edi; mov eax, 0x66; syscall; 
0x00000000484f21: nop edx, edi; mov eax, 0x68; syscall; 
0x00000000484f11: nop edx, edi; mov eax, 0x6b; syscall; 
0x00000000484f31: nop edx, edi; mov eax, 0x6c; syscall; 
0x0000000045c1e1: nop edx, edi; mov eax, 0x8; syscall; 
0x0000000045d111: nop edx, edi; mov eax, 0xa; syscall; 
0x0000000045d0e1: nop edx, edi; mov eax, 0xb; syscall; 
0x00000000485121: nop edx, edi; mov eax, 0xc; syscall; 
0x00000000426eb1: nop edx, edi; mov eax, 0xffffffff; ret; 
0x00000000428511: nop edx, edi; mov eax, [rdi+0x10]; sub eax, [rsi+0x10]; ret; 
0x000000004a5a91: nop edx, edi; mov eax, [rdi]; test eax, eax; jne short 0x00000000004a5aa0; ret; 
0x000000004a5cd1: nop edx, edi; mov eax, [rdi]; test eax, eax; jne short 0x00000000004a5ce0; ret; 
0x000000004991e1: nop edx, edi; mov eax, [rip+0x4c79e]; ret; 
0x00000000461311: nop edx, edi; mov eax, [rip+0x846d6]; test eax, eax; je short 0x0000000000461320; ret; 
0x000000004037d1: nop edx, edi; mov eax, [rip+0xde92a]; ret; 
0x00000000403151: nop edx, edi; mov eax, [rip+0xdefae]; test eax, eax; js short 0x0000000000403160; ret; 
0x00000000402171: nop edx, edi; mov eax, [rip+0xe2156]; test eax, eax; je short 0x0000000000402180; ret; 
0x0000000045c0a1: nop edx, edi; mov eax, fs:[0x18]; test eax, eax; jne short 0x000000000045c0c0; syscall; 
0x00000000428961: nop edx, edi; mov qword ptr [rip+0xbc341], 0x0; mov qword ptr [rip+0xbc33e], 0x0; ret; 
0x00000000498fa1: nop edx, edi; mov r10, rcx; mov eax, 0x11; syscall; 
0x0000000045f8a1: nop edx, edi; mov r10, rcx; mov eax, 0x19; syscall; 
0x0000000045f8d1: nop edx, edi; mov r10, rcx; mov eax, 0x9d; syscall; 
0x00000000402581: nop edx, edi; mov rax, 0x4e2130; mov rax, [rax]; mov eax, [rax]; ret; 
0x00000000411ad1: nop edx, edi; mov rax, 0xffffffffffffffc0; add rax, fs:[0x0]; ret; 
0x0000000048fa61: nop edx, edi; mov rax, 0xffffffffffffffc0; pop rbx; mov eax, fs:[rax]; ret; 
0x0000000046fe01: nop edx, edi; mov rax, 0xffffffffffffffe0; add rax, fs:[0x0]; ret; 
0x0000000046fde1: nop edx, edi; mov rax, 0xffffffffffffffe8; add rax, fs:[0x0]; ret; 
0x0000000046fdc1: nop edx, edi; mov rax, 0xfffffffffffffff0; add rax, fs:[0x0]; ret; 
0x00000000427931: nop edx, edi; mov rax, 0xffffffffffffffff; ret; 
0x000000004916e1: nop edx, edi; mov rax, [rax+0x8]; ret; 
0x000000004916f1: nop edx, edi; mov rax, [rax+0x8]; sub rax, fs:[0x0]; ret; 
0x00000000428881: nop edx, edi; mov rax, [rdi+0x68]; ret; 
0x000000004a3931: nop edx, edi; mov rax, [rdi+0x90]; ret; 
0x000000004a39a1: nop edx, edi; mov rax, [rdi+0x98]; ret; 
0x00000000480d31: nop edx, edi; mov rax, [rdi+0xa0]; cmp qword ptr [rax+0x30], 0x0; je short 0x0000000000480d48; ret; 
0x000000004a39e1: nop edx, edi; mov rax, [rdi+0xa0]; ret; 
0x000000004a3a41: nop edx, edi; mov rax, [rdi+0xa8]; ret; 
0x000000004a3a31: nop edx, edi; mov rax, [rdi+0xb0]; ret; 
0x000000004a39f1: nop edx, edi; mov rax, [rdi+0xb8]; ret; 
0x00000000429721: nop edx, edi; mov rax, [rdi]; cmp rax, 0x2000000; jbe short 0x0000000000429730; ret; 
0x00000000429381: nop edx, edi; mov rax, [rdi]; cmp rax, 0x408; jbe short 0x0000000000429390; ret; 
0x00000000429781: nop edx, edi; mov rax, [rdi]; cmp rax, 0xa0; jbe short 0x0000000000429790; ret; 
0x000000004293c1: nop edx, edi; mov rax, [rdi]; cmp rax, 0xffff; jbe short 0x00000000004293d0; ret; 
0x0000000049bfd1: nop edx, edi; mov rax, [rdi]; cmp rax, rsi; je short 0x000000000049bfe0; ret; 
0x000000004293e1: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0xb93b9], rax; ret; 
0x00000000429371: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0xb93d9], rax; ret; 
0x00000000429361: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0xb93f1], rax; ret; 
0x00000000429771: nop edx, edi; mov rax, [rdi]; nop; mov [rip+0xbb5b6], eax; ret; 
0x0000000046d201: nop edx, edi; mov rax, [rip+0x77c45]; ret; 
0x00000000463851: nop edx, edi; mov rax, [rip+0x821ad]; ret; 
0x0000000045cf61: nop edx, edi; mov rax, [rip+0x861ed]; test rax, rax; je short 0x000000000045cf71; ret; 
0x00000000428861: nop edx, edi; mov rax, [rip+0xb98f5]; ret; 
0x00000000428891: nop edx, edi; mov rax, rdi; ret; 
0x00000000403171: nop edx, edi; movzx edi, dil; mov [rip+0xdef8a], edi; ret; 
0x00000000401cb1: nop edx, edi; ret; 
0x000000004a8161: nop edx, edi; sub rsp, 0x8; add rsp, 0x8; ret; 
0x0000000045a2a1: nop edx, edi; test rdx, rdx; jne short 0x000000000045a2ad; mov rax, rdi; ret; 
0x000000004830c1: nop edx, edi; test rsi, rsi; jne short 0x00000000004830cd; xor rax, rax; ret; 
0x00000000483d81: nop edx, edi; test rsi, rsi; jne short 0x0000000000483d8d; xor rax, rax; ret; 
0x000000004278b1: nop edx, edi; xor eax, eax; ret; 
0x0000000045cdf1: nop edx, edi; xor eax, eax; syscall; 
0x00000000425191: nop edx, edi; xor eax, eax; test rdx, rdx; jne short 0x00000000004251a0; ret; 
0x00000000421059: nop; add [rax], al; add [rcx+0x1], cl; ret; 
0x00000000421de0: nop; add [rax], al; add cl, ch; ret far; 
0x0000000048dcdc: nop; add [rax], eax; add [rcx-0x77], cl; ret far; 
0x00000000410fb4: nop; add al, [rax]; add [rax-0x39], cl; ret; 
0x000000004a5a1f: nop; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004a0e7f: nop; call rax; 
0x0000000045d13f: nop; endbr64; mov eax, 0x1c; syscall; 
0x0000000045c39f: nop; endbr64; mov eax, 0x20; syscall; 
0x00000000484ecf: nop; endbr64; mov eax, 0x3f; syscall; 
0x00000000484eff: nop; endbr64; mov eax, 0x66; syscall; 
0x0000000045d10f: nop; endbr64; mov eax, 0xa; syscall; 
0x0000000045d0df: nop; endbr64; mov eax, 0xb; syscall; 
0x0000000042895f: nop; endbr64; mov qword ptr [rip+0xbc341], 0x0; mov qword ptr [rip+0xbc33e], 0x0; ret; 
0x0000000042792f: nop; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x000000004a392f: nop; endbr64; mov rax, [rdi+0x90]; ret; 
0x00000000401caf: nop; endbr64; ret; 
0x0000000040d85b: nop; fisttp word ptr [rbx], st; add bl, al; lea rax, [rip+0x9bd1d]; ret; 
0x00000000492471: nop; jmp rdx; 
0x0000000040a87f: nop; lea eax, [rsi*8+0x10]; ret; 
0x0000000045736f: nop; lea rax, [rdi+0x1]; ret; 
0x0000000045735f: nop; lea rax, [rdi]; ret; 
0x00000000401fe9: nop; leave; ret; 
0x000000004817b6: nop; mov [rax], rdx; xor eax, eax; ret; 
0x00000000452bbf: nop; mov [rcx], dx; mov [rcx+0x2], dl; ret; 
0x00000000452baf: nop; mov [rcx], dx; ret; 
0x00000000452bdf: nop; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x00000000452c1f: nop; mov [rcx], rdx; mov [rcx+0x8], dl; ret; 
0x0000000048b105: nop; mov [rdi+0x2f4], edx; mov [rdi+0x308], rax; ret; 
0x0000000048b0d3: nop; mov [rdi+0x2fc], ecx; mov [rdi+0x310], rax; ret; 
0x000000004563df: nop; mov [rdi-0x1], edx; ret; 
0x000000004563cf: nop; mov [rdi], dx; ret; 
0x000000004563ff: nop; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x000000004563ef: nop; mov [rdi], edx; ret; 
0x0000000045643f: nop; mov [rdi], rdx; mov [rdi+0x8], dl; ret; 
0x000000004293e7: nop; mov [rip+0xb93b9], rax; ret; 
0x000000004293d0: nop; mov [rip+0xb93c8], rax; ret; 
0x00000000429377: nop; mov [rip+0xb93d9], rax; ret; 
0x00000000429367: nop; mov [rip+0xb93f1], rax; ret; 
0x00000000429777: nop; mov [rip+0xbb5b6], eax; ret; 
0x00000000454eff: nop; mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x0000000043ce2f: nop; mov dl, [rsi-0x1]; mov [rdi-0x1], dl; ret; 
0x00000000429757: nop; mov dword ptr [rip+0xb9012], 0x1; mov [rip+0xb9004], eax; ret; 
0x00000000429730: nop; mov dword ptr [rip+0xb9039], 0x1; mov [rip+0xb900e], rax; ret; 
0x00000000429707: nop; mov dword ptr [rip+0xb9062], 0x1; mov [rip+0xb902f], rax; ret; 
0x000000004296e7: nop; mov dword ptr [rip+0xb9082], 0x1; mov [rip+0xb9047], rax; ret; 
0x0000000043d00f: nop; mov dx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x000000004553df: nop; mov dx, [rsi]; mov [rdi], dx; ret; 
0x00000000430e0f: nop; mov eax, 0x16; ret; 
0x0000000043d3cf: nop; mov edx, [rsi-0x4]; mov [rdi-0x4], edx; ret; 
0x00000000456a3f: nop; mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x0000000044e96f: nop; mov edx, [rsi]; mov [rdi], edx; vzeroupper; ret; 
0x0000000042788f: nop; mov qword ptr [rdi+0xa0], 0xffffffffffffffff; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x0000000048420f: nop; mov rax, 0x1; ret; 
0x0000000040a76f: nop; mov rax, 0x4e11a0; pop rbp; ret; 
0x0000000044f33f: nop; mov rax, rdi; vzeroupper; ret; 
0x0000000046344a: nop; mov rdi, rbx; call rsi; 
0x00000000456a8f: nop; mov rdx, [rsi]; mov [rdi], rdx; lea rax, [rdi+0x7]; ret; 
0x000000004a42ff: nop; mov rsi, r14; mov rdi, rbx; call r15; 
0x00000000456b6f: nop; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x000000004554bf: nop; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; ret; 
0x0000000046ff90: nop; nop [rax+rax]; nop [rax]; mov rax, 0xf; syscall; 
0x00000000401fe8: nop; nop; leave; ret; 
0x0000000048b5df: nop; or byte ptr [rdi+0x31d], 0x4; xor eax, eax; ret; 
0x000000004296f6: nop; or eax, [rax]; ret; 
0x0000000045902f: nop; rep ret; 
0x00000000401cdf: nop; ret; 
0x00000000482b7f: nop; vzeroupper; xor eax, eax; ret; 
0x0000000040255f: nop; xor eax, eax; add rsp, 0x8; ret; 
0x0000000048290f: nop; xor eax, eax; ret; 
0x0000000040c203: not bl; or [rax], eax; ret; 
0x0000000049e616: not byte ptr [rbx]; cld; jmp qword ptr [rsi+0xf]; 
0x0000000040c163: not ebx; or [rax], eax; ret; 
0x0000000041d86f: notrack bnd jmp rdx; 
0x0000000045e0cd: notrack call rbx; 
0x0000000041db73: notrack jmp r10; 
0x0000000046f140: notrack jmp r8; 
0x0000000043b1f1: notrack jmp r9; 
0x00000000401bf8: notrack jmp rax; 
0x000000004114a6: notrack jmp rcx; 
0x00000000402072: notrack jmp rdx; 
0x0000000046da08: or [r11+0x1974fdf8], al; pop rbx; ret; 
0x00000000430903: or [r11+0x5e7709f8], r8b; lea rdx, [rip+0x85ba7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000423470: or [r15], cl; adc [rbx+0x18], eax; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x0000000049e997: or [r8+0x2], r15b; ret; 
0x000000004289ac: or [r8+0x39], r9b; shl byte ptr [rbx+0x25], 0x1; movzx eax, byte ptr [rax]; ret; 
0x0000000049ea0b: or [r8-0x3ffe], r15b; sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x000000004983a6: or [r8-0x73], cl; adc eax, 0x33bed; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000450bb8: or [r8-0x77], cl; or [rax-0x77], cl; clc; ret; 
0x00000000485aa2: or [r8-0x7b], cl; shl byte ptr [rdi+0x48], 0x89; ret; 
0x0000000048f70d: or [r8-0x7b], cl; shl byte ptr [rsp+rdi+0x48], 0x89; ret; 
0x000000004a32cb: or [r9+0x63], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x0000000045dc91: or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000450c77: or [r9-0x76b7f7be], cl; clc; ret; 
0x000000004285f1: or [r9], r14b; rol bl, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x000000004a4357: or [rax+0x1], bh; cmp [rsi+0x8], rcx; ja short 0x00000000004a4365; sbb eax, eax; ret; 
0x0000000047fd19: or [rax+0x1], bh; pop rbx; pop rbp; ret; 
0x0000000045c187: or [rax+0x1], bh; syscall; 
0x00000000460805: or [rax+0x1], cl; ret far; 
0x0000000049923e: or [rax+0x1], cl; ret; 
0x000000004a4356: or [rax+0x1], dil; cmp [rsi+0x8], rcx; ja short 0x00000000004a4365; sbb eax, eax; ret; 
0x0000000049e998: or [rax+0x2], bh; ret; 
0x00000000465920: or [rax+0x39], cl; ret far; 
0x0000000042c5fe: or [rax+0x39], cl; ret; 
0x000000004289ad: or [rax+0x39], cl; shl byte ptr [rbx+0x25], 0x1; movzx eax, byte ptr [rax]; ret; 
0x000000004a0304: or [rax+0x3], cl; add [r13+0x31], r8b; jmp qword ptr [rsi-0x7d]; 
0x0000000045c2cf: or [rax+0x48], bh; syscall; 
0x00000000408b40: or [rax+0x63], cl; add al, 0xb1; add rax, rcx; notrack jmp rax; 
0x000000004033c9: or [rax+0x63], cl; add al, 0xba; add rax, rdx; notrack jmp rax; 
0x00000000411898: or [rax+0x9e], bh; mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x00000000411897: or [rax+0x9e], r15b; mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x00000000482327: or [rax+0xf], cl; ret; 
0x00000000429389: or [rax+rax], al; add [rsi+0x1], dh; ret; 
0x000000004366f7: or [rax+rax], edx; add [rbp-0x77], cl; ret far; 
0x000000004916f7: or [rax+rcx*2+0x2b], ah; add al, 0x25; add [rax], al; add [rax], al; ret; 
0x000000004916f6: or [rax+rcx*2+0x2b], spl; add al, 0x25; add [rax], al; add [rax], al; ret; 
0x00000000407fb3: or [rax-0x11], bh; pop rbx; pop rbp; ret; 
0x000000004028c3: or [rax-0x1], bh; pop rbp; pop r12; ret; 
0x00000000422297: or [rax-0x1], bh; pop rbx; pop rbp; ret; 
0x0000000049ea0c: or [rax-0x3ffe], bh; sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x000000004983a7: or [rax-0x73], cl; adc eax, 0x33bed; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000483d41: or [rax-0x73], cl; add eax, 0x257; lea rdx, [rip+0x30]; cmovne rax, rdx; ret; 
0x00000000431c60: or [rax-0x73], cl; add eax, 0x9568; lea rdx, [rip+0xeaf1]; cmovne rax, rdx; ret; 
0x00000000431af0: or [rax-0x73], cl; add eax, 0x96b8; lea rdx, [rip+0xec41]; cmovne rax, rdx; ret; 
0x00000000431990: or [rax-0x73], cl; add eax, 0xc218; lea rdx, [rip+0x118b1]; cmovne rax, rdx; ret; 
0x00000000455d19: or [rax-0x73], cl; jg short 0x0000000000455d26; jne 0x00000000004564f0; ret; 
0x0000000049dd7c: or [rax-0x73], cl; push rdi; add [rcx-0x77], ecx; push rsp; ret; 
0x0000000049e424: or [rax-0x73], cl; push rsi; add [rcx-0x77], ecx; push rsp; ret; 
0x00000000455d3c: or [rax-0x73], ecx; jg short 0x0000000000455d4a; jne 0x00000000004564f0; ret; 
0x00000000452ac2: or [rax-0x73], ecx; or [rdi], rcx; test [rbx+0x2], esp; add [rax], al; ret; 
0x0000000048479f: or [rax-0x75], cl; add eax, 0x5d2f1; test rax, rax; je short 0x00000000004847e0; call rax; 
0x00000000423263: or [rax-0x75], cl; xor ecx, [rax-0x7d]; ret; 
0x00000000450bbc: or [rax-0x77], cl; clc; ret; 
0x00000000455d35: or [rax-0x77], cl; cmovns eax, [rbx-0x72b7f618]; jg short 0x0000000000455d4a; jne 0x00000000004564f0; ret; 
0x00000000450bb9: or [rax-0x77], cl; or [rax-0x77], cl; clc; ret; 
0x00000000426a9a: or [rax-0x77], cl; out dx, eax; pop rbx; pop rbp; jmp rax; 
0x000000004a1463: or [rax-0x77], cl; ret far; 
0x0000000042ad34: or [rax-0x77], cl; ret; 
0x0000000045d3d3: or [rax-0x77], ecx; ret far; 
0x0000000042ad33: or [rax-0x77], r9b; ret; 
0x00000000485aa3: or [rax-0x7b], cl; shl byte ptr [rdi+0x48], 0x89; ret; 
0x0000000048f70e: or [rax-0x7b], cl; shl byte ptr [rsp+rdi+0x48], 0x89; ret; 
0x0000000041364a: or [rax-0x7d], cl; ret; 
0x0000000043031e: or [rax-0x7f], ecx; sti; jmp far fword ptr [rcx]; 
0x00000000403858: or [rax-0xe], bh; pop rbx; pop rbp; ret; 
0x0000000040a364: or [rax], al; add [rax+0x132850f], al; add [rax], al; mov rax, 0x4dedc0; ret; 
0x0000000040a3b6: or [rax], al; add [rax+0xf], al; test [rax-0x7f000000], ah; jmp far fword ptr [rax]; 
0x0000000042b3f2: or [rax], al; add [rax-0x7d], cl; ret far; 
0x00000000496852: or [rax], al; add [rax-0x7d], cl; ret; 
0x00000000414352: or [rax], al; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x000000004a451e: or [rax], al; add [rax], al; add rsp, 0x8; ret; 
0x0000000047006b: or [rax], al; add [rax], al; mov eax, 0xd; syscall; 
0x0000000047020d: or [rax], al; add [rax], al; mov rsi, r8; mov eax, 0xe; syscall; 
0x0000000045a889: or [rax], al; add [rax], al; pop rbx; ret; 
0x0000000045c1e5: or [rax], al; add [rax], al; syscall; 
0x00000000435aa8: or [rax], al; add [rbp-0x77], cl; ret far; 
0x00000000478c3c: or [rax], al; add [rcx+0x63], cl; add al, 0x86; add rax, r14; notrack jmp rax; 
0x0000000045e565: or [rax], al; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x000000004735aa: or [rax], al; add [rcx-0x7d], al; in al, dx; add [rax-0x8ff43], eax; jmp qword ptr [rax]; 
0x0000000043a8c0: or [rax], al; add [rip+0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000040a3a2: or [rax], al; add al, ah; jne 0x000000000040a4a0; mov rax, 0x4dee00; ret; 
0x0000000040a428: or [rax], al; add al, al; jne short 0x000000000040a4a0; mov rax, 0x4ded80; ret; 
0x00000000401e85: or [rax], al; add cl, cl; ret; 
0x0000000045f881: or [rax], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000427682: or [rax], al; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000045f828: or [rax], al; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x00000000431e2f: or [rax], al; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043090f: or [rax], al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000425530: or [rax], al; movzx eax, al; movsxd rax, [r10+rax*4]; add rax, r10; notrack jmp rax; 
0x00000000425562: or [rax], al; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000046133e: or [rax], al; pop rbx; ret; 
0x00000000461309: or [rax], al; ret; 
0x0000000045b428: or [rax], al; syscall; 
0x00000000461318: or [rax], al; test eax, eax; je short 0x0000000000461320; ret; 
0x00000000464cec: or [rax], al; test eax, eax; je short 0x0000000000464cf8; ret; 
0x0000000045cf69: or [rax], al; test rax, rax; je short 0x000000000045cf71; ret; 
0x00000000411802: or [rax], eax; add [rax-0x77], cl; ret; 
0x00000000414163: or [rax], eax; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x00000000475514: or [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx]; 
0x0000000045d050: or [rax], eax; add [rax], al; syscall; 
0x00000000437108: or [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000047c17e: or [rax], eax; add [rbx-0x4d77b], cl; dec dword ptr [rcx-0x4df73]; jmp far fword ptr [rcx]; 
0x0000000045e4fa: or [rax], eax; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000473d55: or [rax], eax; add [rcx+rcx*4-0x16], cl; mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000041d865: or [rax], eax; mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000040dc69: or [rax], eax; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000040976e: or [rax], eax; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x0000000040dbb7: or [rax], eax; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000041db66: or [rax], eax; movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x0000000040b4a5: or [rax], eax; ret; 
0x0000000045e5d2: or [rax], r8b; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000431e2e: or [rax], r8b; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000461317: or [rax], r8b; test eax, eax; je short 0x0000000000461320; ret; 
0x00000000422b49: or [rbp+0x31], al; ror byte ptr [rcx+rcx*4-0x11], 0x4c; lea ecx, [rsp+0x18]; call rbp; 
0x0000000041ef07: or [rbp+0x31], al; ror byte ptr [rcx+rcx*4-0x40], 0x5b; pop rbp; ret; 
0x0000000049a8c2: or [rbp+0x41], bl; pop rsp; jmp rax; 
0x000000004024e2: or [rbp+0x41], bl; pop rsp; ret; 
0x0000000040d8ab: or [rbp+0x48c30009], bh; lea eax, [rip+0x9bcf9]; ret; 
0x0000000040a438: or [rbp+rax*2-0x7d], dh; dec dword ptr [rdi]; jne short 0x000000000040a4a0; mov rax, 0x4e1220; ret; 
0x0000000046da09: or [rbx+0x1974fdf8], al; pop rbx; ret; 
0x0000000047f231: or [rbx+0x29772ef9], al; lea rdi, [rip+0x4974a]; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000046d9e7: or [rbx+0x37403fe], al; ret; 
0x0000000042c648: or [rbx+0x3d485bc1], eax; jmp far fword ptr [rcx]; 
0x0000000046e8d6: or [rbx+0x41], bl; pop rsi; ret; 
0x0000000042477e: or [rbx+0x48], bl; sub eax, edx; pop rbp; pop r12; ret; 
0x00000000481997: or [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x00000000424144: or [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x000000004985d7: or [rbx+0x5d], bl; pop r12; ret; 
0x0000000040384b: or [rbx+0x5d], bl; ret; 
0x00000000430904: or [rbx+0x5e7709f8], al; lea rdx, [rip+0x85ba7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000424ae3: or [rbx+rcx*4+0x4], cl; and al, 0xe9; ret far; 
0x0000000041937d: or [rbx+rcx*4+0xc], cl; and al, 0xe9; ret far; 
0x00000000481938: or [rbx], al; add [rax], al; mov esi, 0x80; syscall; 
0x0000000048b10f: or [rbx], al; add [rax], al; ret; 
0x00000000465493: or [rcx+0x39], cl; ret far; 
0x000000004a32cc: or [rcx+0x63], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x0000000049d7c0: or [rcx+rax-0x3e], cl; mov rax, rdx; pop rbx; ret; 
0x000000004a16dd: or [rcx+rcx*4+0x1], cl; ret; 
0x000000004a43b6: or [rcx+rcx*4+0x54], cl; and al, 0x10; call rax; 
0x00000000419466: or [rcx+rcx*4+0xc], cl; and al, 0xe8; push rax; ret far; 
0x000000004186eb: or [rcx+rcx*4+0xc], cl; and al, 0xe8; ret far; 
0x0000000041caf3: or [rcx+rcx*4+0xc], cl; and al, 0xe8; ret; 
0x0000000045d34c: or [rcx+rcx*4-0x11], cl; call rax; 
0x000000004a009d: or [rcx+rcx*4-0x16], cl; add rax, [rbx]; mov rsi, r12; mov edi, ebp; call rax; 
0x000000004a023b: or [rcx+rcx*4-0x16], cl; mov rsi, r12; mov edi, ebp; call qword ptr [rax]; 
0x00000000421742: or [rcx+rcx*4-0x1], cl; call rax; 
0x00000000402481: or [rcx+rcx*4-0x20], al; pop rbp; pop r12; ret; 
0x000000004927a3: or [rcx+rcx*4-0x20], al; pop rbx; pop r12; ret; 
0x00000000404e0f: or [rcx+rcx*4-0x20], cl; pop rbp; pop r12; ret; 
0x00000000407c8a: or [rcx+rcx*4-0x20], cl; pop rbx; pop r12; ret; 
0x0000000048f264: or [rcx+rcx*4-0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000004a43d7: or [rcx+rcx*4-0x36], cl; mov rdi, r15; lea rbx, [r12+rcx*8]; mov rsi, [rbx]; call rax; 
0x000000004205a6: or [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x000000004a586e: or [rcx+rcx*4-0x6], cl; mov rsi, [r12+r14*8+0x10]; mov rdi, r13; call rax; 
0x0000000049e7b2: or [rcx-0x2feeb728], cl; pop rbp; pop rbx; ret; 
0x000000004a5745: or [rcx-0x75], cl; adc al, 0x24; mov rdi, r14; call rbp; 
0x0000000045dc92: or [rcx-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000421b7b: or [rcx-0x75], cl; sub [r13-0x7b], r8b; shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x00000000450c78: or [rcx-0x76b7f7be], cl; clc; ret; 
0x0000000045d3bc: or [rcx-0xa], al; ret; 
0x0000000040a065: or [rcx], bh; ret far; 
0x00000000402853: or [rcx], dh; rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x00000000430ba1: or [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000004285f2: or [rcx], dh; rol bl, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x0000000049ba0b: or [rcx], dh; ror byte ptr [rax-0x73], 0x3d; ret far; 
0x00000000467dab: or [rcx], ebx; add eax, 0x9e9ce800; cli; jmp qword ptr [rsi+0x66]; 
0x000000004a4360: or [rdi+0x2], dh; sbb eax, eax; ret; 
0x000000004a435f: or [rdi+0x2], r14b; sbb eax, eax; ret; 
0x00000000401cd6: or [rdi+0x4e3b70], edi; jmp rax; 
0x00000000430907: or [rdi+0x5e], esi; lea rdx, [rip+0x85ba7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004141ac: or [rdi+rcx-0x7b], dl; ret; 
0x0000000049254c: or [rdi-0x2f], esi; mov rax, r8; ret; 
0x000000004856ab: or [rdi], ch; jne short 0x000000000048566f; leave; mov eax, 0x1; ret; 
0x00000000423471: or [rdi], cl; adc [rbx+0x18], eax; movups [rbx+0x28], xmm0; pop rbx; ret; 
0x00000000485034: or [rdi], cl; mov dh, 0xc0; add rsp, 0x58; ret; 
0x0000000049eb6f: or [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x00000000404dad: or [rdi], cl; xchg [rdi+rdi*8-0x1], esp; call far fword ptr [rbx+0x48]; 
0x0000000043b82c: or [rdi], ecx; sub [rdi], esp; notrack jmp r9; 
0x00000000452ac6: or [rdi], ecx; test [rbx+0x2], esp; add [rax], al; ret; 
0x00000000452ac5: or [rdi], rcx; test [rbx+0x2], esp; add [rax], al; ret; 
0x00000000459315: or [rdx+0xa], dh; vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x0000000048c46d: or [rip-0x7cb7208c], ah; ret; 
0x0000000045cbcc: or [rsi+0x10], bh; mov eax, 0x48; syscall; 
0x0000000042802c: or ah, 0xb; add [rdi], cl; add eax, 0xffff3ee9; jmp qword ptr [rsi+0xf]; 
0x0000000040c1c3: or ah, dl; or [rax], eax; ret; 
0x000000004310a6: or al, 0x0; add [rax-0x73], cl; adc eax, 0x1fc30; cmovne rax, rdx; ret; 
0x00000000483626: or al, 0x0; add [rax-0x73], cl; add eax, 0x9b0; cmove rax, rdx; ret; 
0x00000000485172: or al, 0x0; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000042c57d: or al, 0x0; add [rax], al; mov rax, r8; ret; 
0x00000000485125: or al, 0x0; add [rax], al; syscall; 
0x00000000436e28: or al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000004234ea: or al, 0x0; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x0000000040b515: or al, 0x0; ret; 
0x000000004156e5: or al, 0x0; syscall; 
0x00000000472785: or al, 0x13; add rdx, r15; call qword ptr [rax+r9*8]; 
0x000000004331c6: or al, 0x16; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x0000000042d7b6: or al, 0x18; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x00000000423d21: or al, 0x24; mov rdi, rbp; call rax; 
0x0000000042d9ad: or al, 0x28; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000047c7d9: or al, 0x2; lea rax, [rip+0x6375e]; jmp qword ptr [rax+rcx*8]; 
0x0000000047c5f8: or al, 0x2; lea rax, [rip+0x6383f]; jmp qword ptr [rax+rcx*8]; 
0x0000000047639c: or al, 0x3; lea rax, [rip+0x6909b]; mov rax, [rax+rcx*8]; jmp rax; 
0x000000004758ec: or al, 0x3; lea rax, [rip+0x69d4b]; mov rax, [rax+rcx*8]; jmp rax; 
0x0000000045c340: or al, 0x41; mov eax, eax; mov eax, 0x3; syscall; 
0x0000000045c2c8: or al, 0x41; mov eax, eax; mov edi, [rsp+0x8]; mov eax, 0x48; syscall; 
0x00000000408f67: or al, 0x48; add esp, 0x18; pop rbp; pop r12; ret; 
0x0000000045c362: or al, 0x48; add esp, 0x18; ret; 
0x000000004026b3: or al, 0x48; add esp, 0x8; pop rbp; pop r12; ret; 
0x0000000043049b: or al, 0x48; lea eax, [rax-0x10]; ret; 
0x00000000452b22: or al, 0x48; lea ecx, [rdx+0xc]; jne 0x0000000000452d30; ret; 
0x00000000455d9f: or al, 0x48; lea edi, [rdi+0xc]; jne 0x00000000004564f0; ret; 
0x000000004269d4: or al, 0x48; mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x0000000049901d: or al, 0x48; mov edx, [rip+0x4c113]; add word ptr [rdx+rax*2], 0x1; ret; 
0x00000000411203: or al, 0x48; mov esi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x0000000048f043: or al, 0x49; lea eax, [rax+0x1]; mov [rip+0x56421], rax; ret; 
0x00000000455fe0: or al, 0x5; add [rax], al; ret; 
0x00000000402643: or al, 0x5d; pop r12; pop r13; ret; 
0x0000000047e151: or al, 0x7e; ret far; 
0x0000000047774a: or al, 0x7e; ret; 
0x00000000455b0c: or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045a78b: or al, 0x83; loopne 0x000000000045a79e; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000472ccd: or al, 0x83; ret; 
0x0000000042c65a: or al, 0x83; shr dword ptr [rsi+0x48], 0x3d; jmp far fword ptr [rdi+0x32760000]; 
0x0000000045a791: or al, 0x86; add rcx, rsi; notrack jmp rcx; 
0x0000000049462a: or al, 0x89; fdiv st, st(6); ret; 
0x0000000046ff5b: or al, 0x89; jae short 0x000000000046ff9f; xor eax, eax; pop rbx; ret; 
0x00000000431e33: or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000448704: or al, 0x8a; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000437bcf: or al, 0x8a; pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000044c53f: or al, 0x8a; vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004407fd: or al, 0x8b; add r9, r11; notrack jmp r9; 
0x0000000043b24d: or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000445eed: or al, 0x8b; mov ecx, [rcx-0x4]; mov [rdi], esi; mov [r9-0x4], ecx; ret; 
0x00000000485257: or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x000000004114a1: or al, 0x8e; add rcx, rsi; notrack jmp rcx; 
0x0000000048523c: or al, 0x8e; mov edx, [rcx+rdx]; test edx, edx; jne short 0x0000000000485250; ret; 
0x0000000047f240: or al, 0x8f; add rcx, rdi; notrack jmp rcx; 
0x00000000439b83: or al, 0x93; add rcx, r11; notrack jmp rcx; 
0x0000000043b1e6: or al, 0x93; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x0000000045528b: or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000043b251: or al, 0xb; notrack jmp r9; 
0x0000000045528f: or al, 0xb; notrack jmp rcx; 
0x00000000457412: or al, 0xc3; nop [rax+rax]; lea rax, [rdi+0xd]; ret; 
0x0000000040cc43: or al, 0xc9; or [rax], eax; ret; 
0x0000000040c123: or al, 0xd4; or [rax], eax; ret; 
0x000000004798b6: or al, 0xe9; ret; 
0x00000000442d52: or al, 0xf3; movq [rdi], mm1; ret; 
0x00000000492f87: or al, 0xf6; ret; 
0x00000000455da3: or al, 0xf; test [rsi+0x7], eax; add [rax], al; ret; 
0x0000000045e8d4: or al, [rax+rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000474029: or al, [rax]; add [rax-0x77], cl; fimul st, dword ptr [rcx+rcx*4-0x1a]; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x000000004142d8: or al, [rax]; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x000000004a3826: or al, [rax]; add [rax], al; mov edi, 0x1; call rax; 
0x0000000045d115: or al, [rax]; add [rax], al; syscall; 
0x00000000435928: or al, [rax]; add [rbp-0x77], cl; ret far; 
0x000000004727e3: or al, [rax]; add [rbx-0x78f0f808], al; mov [0x4c86046349000006], al; add eax, esi; notrack jmp rax; 
0x0000000045e59c: or al, [rax]; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000043dc83: or al, [rax]; lea r11, [rip+0x78e64]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043dc29: or al, [rax]; lea r11, [rip+0x78e7e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043b2a3: or al, [rax]; lea r11, [rip+0x7b684]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043b242: or al, [rax]; lea r11, [rip+0x7b6a5]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000401d58: or al, [rax]; mov byte ptr [rip+0xe251f], 0x1; pop rbp; ret; 
0x000000004034ae: or al, [rax]; mov edi, edi; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x00000000408a32: or al, [rax]; mov esi, esi; movsxd rax, [rcx+rsi*4]; add rax, rcx; notrack jmp rax; 
0x00000000407cd2: or al, [rax]; mov r8d, ecx; movsxd rdx, [r9+r8*4]; add rdx, r9; notrack jmp rdx; 
0x00000000410959: or al, [rax]; movsxd rax, [rcx+rax*4]; add rax, rdx; ret; 
0x00000000407cfa: or al, [rax]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000041149d: or al, [rax]; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000402069: or al, [rax]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000402169: or al, [rax]; ret; 
0x0000000042a6ba: or al, [rcx-0x72b7fff5]; add eax, 0x319b; mov [rip+0xb80f4], rax; ret; 
0x00000000465c42: or al, al; cli; jmp qword ptr [rsi+0x2e]; 
0x000000004573f3: or al, bl; nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x0000000042cc9b: or al, ch; call rax; 
0x000000004a3eb4: or al, ch; idiv dil; jmp qword ptr [rsi+0xf]; 
0x0000000048f607: or al, ch; ret; 
0x00000000431e38: or bh, [rsi]; jmp r10; 
0x0000000048b5d1: or bh, bh; adc eax, 0x57ba8; xor eax, eax; add rsp, 0x8; ret; 
0x00000000410fc0: or bh, bh; push rbx; adc [rax-0x7d], cl; ret; 
0x00000000490964: or bh, dh; dec dword ptr [rax+0x1]; ret; 
0x000000004908b9: or bh, dh; dec dword ptr [rax-0x77]; ret; 
0x0000000049081f: or bh, dh; jmp qword ptr [rsi+0x48]; 
0x0000000049081e: or bh, dh; jmp qword ptr [rsi+0x48]; 
0x00000000420a27: or bh, dh; jmp qword ptr [rsi+0xf]; 
0x0000000045de95: or bl, [rbp+0x41]; pop rsp; pop r13; ret; 
0x000000004916de: or bl, al; endbr64; mov rax, [rax+0x8]; ret; 
0x000000004573d3: or bl, al; nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x00000000452c55: or bl, al; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x5], rdx; ret; 
0x00000000452c36: or bl, al; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x7], edx; ret; 
0x00000000452c25: or bl, al; nop [rax+rax]; mov [rcx], rdx; mov [rcx+0x8], dx; ret; 
0x000000004a3984: or bl, al; nop [rax+rax]; mov [rdi+rsi*8], rdx; add rsp, 0x8; ret; 
0x00000000456475: or bl, al; nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x5], rdx; ret; 
0x00000000456456: or bl, al; nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x7], edx; ret; 
0x00000000456445: or bl, al; nop [rax+rax]; mov [rdi], rdx; mov [rdi+0x8], dx; ret; 
0x00000000402565: or bl, al; nop [rax+rax]; xor eax, eax; ret; 
0x000000004a3997: or bl, al; nop [rax]; endbr64; mov rax, [rdi+0x98]; ret; 
0x00000000497eaa: or bl, al; nop [rax]; lea rax, [rip+0x4d189]; mov [rip+0x4d16a], rax; ret; 
0x0000000045facb: or bl, al; nop [rax]; ret; 
0x0000000048b5dd: or bl, al; nop; or byte ptr [rdi+0x31d], 0x4; xor eax, eax; ret; 
0x0000000040255c: or bl, al; xchg ax, ax; xor eax, eax; add rsp, 0x8; ret; 
0x000000004a45ab: or bl, ch; iretd; xchg ax, ax; xor eax, eax; ret; 
0x00000000480ccc: or bl, ch; mov al, [0x8944fffa263be890]; dec byte ptr [rax-0x77]; out dx, eax; call qword ptr [r14+0x18]; 
0x00000000442f13: or bl, dh; movq [rdi], mm1; ret; 
0x000000004a45aa: or bl, r13b; iretd; xchg ax, ax; xor eax, eax; ret; 
0x0000000042a6c9: or byte ptr [rbx], 0x0; ret; 
0x0000000049e8f9: or byte ptr [rcx-0x77], 0x0; mov eax, 0x1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000048b690: or byte ptr [rdi+0x31d], 0x4; ret; 
0x0000000048b5e0: or byte ptr [rdi+0x31d], 0x4; xor eax, eax; ret; 
0x0000000040a367: or byte ptr [rdi], 0x85; xor al, [rcx]; add [rax], al; mov rax, 0x4dedc0; ret; 
0x00000000498338: or cl, [rax-0x73]; adc eax, 0x4b7c0; mov [rax], rdx; add rsp, 0x8; ret; 
0x00000000455d61: or cl, [rax-0x73]; jg short 0x0000000000455d70; jne 0x00000000004564f0; ret; 
0x00000000452ae2: or cl, [rax-0x73]; or cl, [rdi]; test [rbx+0x2], eax; add [rax], al; ret; 
0x00000000423128: or cl, [rax-0x7d]; ret; 
0x00000000452ae5: or cl, [rdi]; test [rbx+0x2], eax; add [rax], al; ret; 
0x00000000408a31: or cl, [rdx]; add [rcx+0x46348f6], cl; mov cl, 0x48; add eax, ecx; notrack jmp rax; 
0x00000000411d6a: or dh, [rdi+0x26]; lea rdx, [rip+0xa2c70]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000481676: or dh, [rdi+rcx+0x48]; cmp eax, esi; ja short 0x0000000000481670; lea eax, [rdx+rdi]; ret; 
0x00000000427a56: or dh, [rdi+rcx+0x48]; cmp ecx, esi; ja short 0x0000000000427a50; lea eax, [rdx+rdi]; ret; 
0x00000000437c82: or dh, al; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x00000000420c74: or dh, bh; jmp qword ptr [rsi+0xf]; 
0x00000000442e33: or dh, bl; movq [rdi], mm1; ret; 
0x0000000041095e: or dword ptr [rax+0x1], 0x1f0fc3d0; add [rax], r8b; xor eax, eax; ret; 
0x0000000046140b: or dword ptr [rax+0x1], 0xffffffd8; notrack jmp rax; 
0x00000000427758: or dword ptr [rax+0x74], 0x80; mov rax, [rax+0x68]; test rax, rax; jne short 0x0000000000427758; ret; 
0x0000000048c2b2: or dword ptr [rax+rax], 0x3d8d4800; mov ebx, 0x4a0003d8; movsxd eax, [rdi]; add rax, rdi; notrack jmp rax; 
0x000000004238c0: or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000042556a: or dword ptr [rcx+rax-0x28], 0x3e; jmp rax; 
0x00000000455b0d: or dword ptr [rcx-0x73], 0xc; or edi, [rsi]; jmp rcx; 
0x0000000045e4f9: or dword ptr [rcx], 0x0; add [rcx+rcx*4+0x44], cl; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000048fa4f: or dword ptr [rip+0x536f2], 0x1; ret; 
0x00000000464d01: or dword ptr [rip+0x80134], 0x2; add rsp, 0x8; ret; 
0x00000000462059: or eax, 0x10; mov [rip+0x838f2], eax; pop rbx; ret; 
0x000000004620ba: or eax, 0x18; mov [rip+0x83891], eax; ret; 
0x00000000461fea: or eax, 0x1; mov [rip+0x83961], eax; ret; 
0x000000004398d9: or eax, 0x1; ret; 
0x00000000403086: or eax, 0x1b800; add [rax], al; pop rbx; mov dword ptr [rip+0xdf070], 0x1; ret; 
0x00000000456d01: or eax, 0x1c478d48; ret; 
0x00000000456001: or eax, 0x1de88349; lea rdi, [rdi+0x1d]; jne 0x00000000004564f0; ret; 
0x00000000452b48: or eax, 0x1e1850f; add [rax], al; ret; 
0x000000004034f8: or eax, 0x1f0fc300; add [rax], r8b; movzx esi, sil; mov [rip+0xdec16], esi; ret; 
0x000000004034e8: or eax, 0x1f0fc300; add [rax], r8b; movzx esi, sil; mov [rip+0xdec22], esi; ret; 
0x000000004034d8: or eax, 0x1f0fc300; add [rax], r8b; movzx esi, sil; mov [rip+0xdec26], esi; ret; 
0x000000004034c8: or eax, 0x1f0fc300; add [rax], r8b; movzx esi, sil; mov [rip+0xdec32], esi; ret; 
0x00000000403398: or eax, 0x1f0fc300; add [rax], r8b; movzx esi, sil; mov [rip+0xded6a], esi; ret; 
0x00000000403388: or eax, 0x1f0fc300; add [rax], r8b; movzx esi, sil; mov [rip+0xded7e], esi; ret; 
0x000000004111fe: or eax, 0x247c8b00; or al, 0x48; mov esi, [rsp+0x10]; mov rax, [rsp+0x18]; call rax; 
0x00000000461fb9: or eax, 0x2; mov [rip+0x83992], eax; pop rbx; ret; 
0x000000004a5fdc: or eax, 0x2a877; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000004a463c: or eax, 0x2c1d7; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000457422: or eax, 0x2e6666c3; nop [rax+rax]; lea rax, [rdi+0xe]; ret; 
0x000000004a168c: or eax, 0x2ebef; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000004109de: or eax, 0x32048b00; mov [rip+0xd38ff], eax; lea rax, [rip+0xd38f0]; ret; 
0x0000000046201a: or eax, 0x3; mov [rip+0x83931], eax; ret; 
0x0000000041266c: or eax, 0x3d8b4c00; ret; 
0x000000004831c5: or eax, 0x48fad348; test edx, edx; je short 0x00000000004831f0; bsf rax, rdx; ret; 
0x0000000047f29d: or eax, 0x497a2; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000047eae9: or eax, 0x49d12; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x00000000411d92: or eax, 0x5be43145; pop rbp; mov rax, r12; pop r12; ret; 
0x0000000042acaa: or eax, 0x5d5bc031; pop r12; ret; 
0x0000000047c3b8: or eax, 0x63c83; jmp qword ptr [rcx+rax*8]; 
0x00000000407759: or eax, 0x69c03144; shl byte ptr [rip-0x763d4d52], 0xc2; shr edx, 0x10; xor eax, edx; ret; 
0x0000000044da5a: or eax, 0x6d2e1; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044c645: or eax, 0x6e6f6; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x0000000044c3da: or eax, 0x6e961; mov edx, [rcx+rdx*4]; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044ab05: or eax, 0x70236; mov eax, [rcx+rax*4]; mov edx, [rcx+rdx*4]; sub eax, edx; ret; 
0x00000000455dc5: or eax, 0x724850f; add [rax], al; ret; 
0x000000004111a1: or eax, 0x748b4800; and al, 0x10; mov edi, [rsp+0xc]; call rbp; 
0x0000000040aaca: or eax, 0x7507c7; add [rax], al; xor eax, eax; ret; 
0x00000000456cf8: or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x00000000455628: or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; ret; 
0x0000000040340c: or eax, 0x79c08500; ret far; 
0x00000000435628: or eax, 0x894d0000; ret far; 
0x0000000046208a: or eax, 0x8; mov [rip+0x838c1], eax; ret; 
0x0000000040dbb4: or eax, 0x9c0e7; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000408a2f: or eax, 0xa0a24; mov esi, esi; movsxd rax, [rcx+rsi*4]; add rax, rcx; notrack jmp rax; 
0x00000000407ccf: or eax, 0xa1704; mov r8d, ecx; movsxd rdx, [r9+r8*4]; add rdx, r9; notrack jmp rdx; 
0x0000000043dc80: or eax, 0xa5433; lea r11, [rip+0x78e64]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043dc26: or eax, 0xa548d; lea r11, [rip+0x78e7e]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000402066: or eax, 0xa6f9d; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000043b2a0: or eax, 0xa7e13; lea r11, [rip+0x7b684]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043b23f: or eax, 0xa7e74; lea r11, [rip+0x7b6a5]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x000000004234e7: or eax, 0xc0794; mov [rdx+0xe0], rcx; pop rbx; ret; 
0x00000000483ea2: or eax, 0xc2bc0f48; shr rax, 0x2; ret; 
0x00000000410bc1: or eax, 0xc4814800; mov [rax], al; add [rax], al; pop rbx; ret; 
0x00000000413147: or eax, 0xceb2e800; mov esi, 0xc0c748ff; sar bh, 0xff; dec dword ptr [rbx-0xd373]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x00000000452b44: or eax, 0xd4a8d48; jne 0x0000000000452d30; ret; 
0x00000000455dc1: or eax, 0xd7f8d48; jne 0x00000000004564f0; ret; 
0x0000000048976c: or eax, 0xe8f7894c; sti; ret; 
0x00000000442cd9: or eax, 0xef00ff2; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x00000000442ce2: or eax, 0xf7f0ff3; ret; 
0x000000004030fc: or eax, 0xf805c700; out dx, eax; or eax, 0xffffff00; inc dword ptr [rbp-0x17fa8101]; call qword ptr [rcx-0x38b7fffb]; 
0x00000000403102: or eax, 0xffffff00; inc dword ptr [rbp-0x17fa8101]; call qword ptr [rcx-0x38b7fffb]; 
0x0000000045fabf: or eax, 0xffffff9c; mov [rax+0x10], rcx; mov [rax+0x8], rdx; ret; 
0x000000004028cd: or eax, 0xffffffff; ret; 
0x0000000042e4c5: or eax, [r8]; lea rax, [rip-0xc6f]; mov [rip+0xb42ea], rax; ret; 
0x00000000481dd6: or eax, [rax]; add [rax-0x73], cl; add eax, 0x810; cmove rax, rdx; ret; 
0x00000000428969: or eax, [rax]; add [rax], al; add [rax], al; mov qword ptr [rip+0xbc33e], 0x0; ret; 
0x00000000428974: or eax, [rax]; add [rax], al; add [rax], al; ret; 
0x0000000045d0e5: or eax, [rax]; add [rax], al; syscall; 
0x0000000042975c: or eax, [rax]; add [rax], eax; add [rax], al; mov [rip+0xb9004], eax; ret; 
0x00000000429735: or eax, [rax]; add [rax], eax; add [rax], al; mov [rip+0xb900e], rax; ret; 
0x0000000042970c: or eax, [rax]; add [rax], eax; add [rax], al; mov [rip+0xb902f], rax; ret; 
0x000000004296ec: or eax, [rax]; add [rax], eax; add [rax], al; mov [rip+0xb9047], rax; ret; 
0x0000000049eee5: or eax, [rax]; add [rbp+0x1bf0142], cl; add [rax], al; add [rcx-0x4cf7b], cl; jmp qword ptr [rsi+0x2e]; 
0x0000000042d1b0: or eax, [rax]; add [rbp-0x3d], ebx; nop [rax]; ret; 
0x000000004357a8: or eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000047d8be: or eax, [rax]; add [rcx-0x7f], al; clc; fdivp st(7), st; call far fword ptr [rdi]; 
0x000000004288d4: or eax, [rax]; add dword ptr [rip+0xbc3d7], 0x1; pop rbx; ret; 
0x0000000042a5be: or eax, [rax]; add rsp, 0x10; pop rbp; ret; 
0x00000000430e7f: or eax, [rax]; lea rax, [rip+0x1cc37]; lea rdx, [rip+0x26290]; cmovne rax, rdx; ret; 
0x0000000042a6bc: or eax, [rax]; lea rax, [rip+0x319b]; mov [rip+0xb80f4], rax; ret; 
0x0000000042a5b7: or eax, [rax]; lea rax, [rip+0xb8220]; add rsp, 0x10; pop rbp; ret; 
0x0000000042e4c6: or eax, [rax]; lea rax, [rip-0xc6f]; mov [rip+0xb42ea], rax; ret; 
0x000000004288cd: or eax, [rax]; mov [rip+0xbc3e2], rbx; add dword ptr [rip+0xbc3d7], 0x1; pop rbx; ret; 
0x00000000401bef: or eax, [rax]; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x0000000040c1dd: or eax, [rax]; ret; 
0x00000000426192: or eax, [rax]; syscall; 
0x0000000046da03: or eax, [rbx+0x438901e8]; or [rbx+0x1974fdf8], al; pop rbx; ret; 
0x00000000407f0a: or eax, ebp; mov al, [0x8330458b4cfffffe]; ret; 
0x00000000457403: or eax, ebx; nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x0000000042e46d: or eax, edi; add eax, 0xb68a8; add [rax], al; add [rax], al; ret; 
0x0000000044de4e: or eax, edx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x0000000046f241: or ebp, [rdx]; cli; jmp qword ptr [rsi+0x66]; 
0x000000004573e3: or ebx, eax; nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x000000004612f7: or ebx, edi; jmp qword ptr [rsi+0xf]; 
0x00000000442ea3: or ebx, esi; movq [rdi], mm1; ret; 
0x000000004a23f0: or ecx, [eax-0x7d]; ret; 
0x00000000455d7f: or ecx, [rax-0x73]; jg short 0x0000000000455d8f; jne 0x00000000004564f0; ret; 
0x000000004a23f1: or ecx, [rax-0x7d]; ret; 
0x00000000455d83: or ecx, [rdi]; test [rsi+0x7], esp; add [rax], al; ret; 
0x0000000043b252: or edi, [rsi]; jmp r9; 
0x00000000455290: or edi, [rsi]; jmp rcx; 
0x0000000040b60f: or edx, 0x40000000; test eax, eax; cmovns eax, edx; add rsp, 0x8; ret; 
0x0000000045d099: or edx, 0x40; mov eax, ecx; syscall; 
0x00000000473406: or edx, [rax+rax]; add [rcx+rcx*4-0x16], cl; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000044e4af: or edx, ecx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000004a3751: or esi, 0x2; mov edi, 0x1; call rax; 
0x0000000045a2e7: or esi, ebx; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x00000000442dc3: or esi, ebx; movq [rdi], mm1; ret; 
0x000000004238c1: or esp, [rax]; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000045d098: or r10d, 0x40; mov eax, ecx; syscall; 
0x00000000442f12: or r11b, r14b; movq [rdi], mm1; ret; 
0x000000004573d2: or r11b, r8b; nop [rax+rax]; lea rax, [rdi+0x9]; ret; 
0x00000000442ea2: or r11d, r14d; movq [rdi], mm1; ret; 
0x000000004573e2: or r11d, r8d; nop [rax+rax]; lea rax, [rdi+0xa]; ret; 
0x00000000437c81: or r14b, al; movzx eax, byte ptr [rdi+rcx]; movzx edx, byte ptr [rsi+rcx]; sub eax, edx; ret; 
0x00000000442e32: or r14b, r11b; movq [rdi], mm1; ret; 
0x00000000442dc2: or r14d, r11d; movq [rdi], mm1; ret; 
0x0000000042d827: or r8, [r8]; syscall; 
0x000000004573f2: or r8b, r11b; nop [rax+rax]; lea rax, [rdi+0xb]; ret; 
0x00000000481dd5: or r8d, [r8]; add [rax-0x73], cl; add eax, 0x810; cmove rax, rdx; ret; 
0x00000000457402: or r8d, r11d; nop [rax+rax]; lea rax, [rdi+0xc]; ret; 
0x00000000452b47: or rax, 0x1e1850f; add [rax], al; ret; 
0x0000000045be40: or rax, 0xffffffffffffffff; ret; 
0x00000000437f97: or rax, [r8]; add [rbp-0x77], cl; ret far; 
0x0000000042de47: or rax, [r8]; syscall; 
0x0000000042dea6: or rax, [r8]; syscall; 
0x0000000044de4d: or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x0000000044e4ae: or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000004115ee: out 0x0, al; add [rax], al; add rsp, 0x98; ret; 
0x00000000431be3: out 0x2, al; lea rax, [rip+0x14914]; lea rdx, [rip+0x16b5d]; cmovne rax, rdx; ret; 
0x0000000043104a: out 0x2, al; lea rax, [rip+0x3afd]; lea rdx, [rip+0x5356]; cmovne rax, rdx; ret; 
0x000000004318f1: out 0x2, al; lea rax, [rip+0x7a86]; lea rdx, [rip+0x25b3f]; cmovne rax, rdx; ret; 
0x0000000049c1fd: out 0x2, al; syscall; 
0x000000004a1658: out 0x20, eax; je short 0x00000000004a166c; movss xmm0, [rip+0x2ec14]; divss xmm0, [rip+0x2ec10]; ret; 
0x0000000048b12c: out 0x3, al; add al, ch; sbb al, 0x6b; clc; jmp qword ptr [rsi+0x2e]; 
0x0000000042f913: out 0x41, al; pop rsp; pop r13; jmp rax; 
0x000000004818b4: out 0x41, eax; and ebx, 0xffffffbb; cmp r11d, 0xa; je short 0x00000000004818c0; ret; 
0x000000004767b1: out 0x44, eax; mov [rbp-0x4f0], ecx; call qword ptr [rax+0x38]; 
0x00000000476274: out 0x44, eax; mov [rbp-0x4f8], ecx; call qword ptr [rbx+0x38]; 
0x00000000476a06: out 0x44, eax; mov [rbp-0x508], edx; mov [rbp-0x500], r11; call qword ptr [rax+0x38]; 
0x0000000042e468: out 0x45, al; test al, al; jne short 0x000000000042e479; mov dword ptr [rip+0xb68a8], 0x0; ret; 
0x0000000049e844: out 0x48, al; mov [rdi], esi; mov [rdx], eax; mov eax, 0x1; ret; 
0x00000000424b70: out 0x48, al; mov edi, ebp; call qword ptr [r13+0x90]; 
0x00000000423993: out 0x48, al; mov edi, ebp; call qword ptr [r15+0x40]; 
0x00000000423db3: out 0x48, al; mov edi, ebp; call qword ptr [r15+0x80]; 
0x0000000042392a: out 0x48, al; mov edi, ebp; call qword ptr [r15+0x90]; 
0x000000004249c1: out 0x48, al; mov edi, ebp; call qword ptr [rax+0x78]; 
0x0000000047fa39: out 0x48, al; mov edi, ebp; call qword ptr [rbx+0x90]; 
0x00000000425239: out 0x48, al; mov edi, ebx; call qword ptr [r14+0x78]; 
0x00000000407c40: out 0x48, eax; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000483c41: out 0x48, eax; mov esi, [rsp+0x18]; call rbx; 
0x00000000430518: out 0x48, eax; sub eax, 0x10; ret; 
0x0000000045a1d2: out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x0000000043ce76: out 0x4c, al; mov [rdi-0x12], ebx; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000047a07f: out 0x4c, al; mov edi, ebp; call qword ptr [r15+0x38]; 
0x00000000479c90: out 0x4c, al; mov edi, ebp; call qword ptr [r8+0x38]; 
0x00000000478e1f: out 0x4c, al; mov edi, ebp; call qword ptr [rcx+0x38]; 
0x0000000041e411: out 0x4c, al; mov edi, ebp; call rax; 
0x000000004704b5: out 0x4c, al; mov edi, ebp; call rbx; 
0x0000000047340f: out 0x4c, al; mov edi, edi; call qword ptr [rcx+0x38]; 
0x000000004707f0: out 0x4c, al; mov edi, esi; call rbp; 
0x00000000483aeb: out 0x4c, eax; lea ecx, [rsp+0x30]; call rbx; 
0x0000000047bcf6: out 0x4c, eax; mov [rbp-0x4d8], ebx; call qword ptr [r8+0x38]; 
0x0000000047c2fb: out 0x4c, eax; mov [rbp-0x4d8], ebx; call qword ptr [rbx+0x38]; 
0x0000000047cf67: out 0x4c, eax; mov [rbp-0x500], ebx; mov [rbp-0x4f8], r9; call qword ptr [rax+0x38]; 
0x0000000049425e: out 0x4c, eax; mov [rbp-0xe8], eax; call rax; 
0x0000000043cca6: out 0x4c, eax; mov [rdi-0x11], ebx; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x0000000043cda2: out 0x4c, eax; mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000043ccee: out 0x4c, eax; mov [rdi-0x11], ebx; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000047bb06: out 0x4c, eax; sub ebx, eax; sar rbx, 0x2; mov rdx, rbx; call qword ptr [rax+0x38]; 
0x00000000475703: out 0x4d, eax; sub edi, eax; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000047515e: out 0x4d, eax; sub edi, ebp; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000480ab1: out 0x5b, al; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x000000004a6836: out 0x5b, al; ret; 
0x0000000044c647: out 0x6, al; add [rbx+0x148b8104], cl; xchg ecx, eax; sub eax, edx; ret; 
0x000000004a1807: out 0x60, eax; jne 0x000000000040171e; xor eax, eax; add rsp, 0x8; ret; 
0x000000004a1986: out 0x77, eax; ret far; 
0x00000000472d6b: out 0x83, al; ret; 
0x00000000411a1d: out 0x89, al; out dx, eax; call qword ptr [r15+rbx*8]; 
0x000000004a0241: out 0x89, al; out dx, eax; call qword ptr [rax]; 
0x000000004a00e5: out 0x89, al; out dx, eax; call qword ptr [rbx]; 
0x000000004a00a7: out 0x89, al; out dx, eax; call rax; 
0x000000004847e2: out 0x89, al; out dx, eax; mov eax, 0xe4; syscall; 
0x0000000041fafc: out 0x89, eax; mov r12b, 0xe8; ret far; 
0x0000000045b426: out 0xa5, al; or [rax], al; syscall; 
0x0000000040dbb5: out 0xc0, eax; or [rax], eax; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000465566: out 0xc6, al; cli; jmp qword ptr [rsi+0xf]; 
0x0000000045a755: out 0xd1, eax; add eax, 0x4634800; mov esi, 0x3ef00148; jmp rax; 
0x0000000046fc67: out 0xe8, al; ret; 
0x00000000429238: out 0xe8, eax; adc bh, [rsi-0x3]; dec dword ptr [rax-0x77]; ret; 
0x000000004a37cc: out 0xe9, al; jle short 0x00000000004a37af; cmc; jmp qword ptr [rsi+0x66]; 
0x0000000045a7a4: out 0xf0, al; mov edx, 0x0; pop rbx; cmove rax, rdx; ret; 
0x000000004426a9: out 0xf3, al; movq [rdi-0x10], mm1; ret; 
0x00000000442729: out 0xf3, eax; movq [rdi-0x10], mm1; ret; 
0x000000004a30c3: out 0xf5, al; jmp qword ptr [rsi+0x2e]; 
0x000000004712a2: out 0xfe, eax; jmp qword ptr [rsi+0x2e]; 
0x0000000042ac3a: out 0xff, al; jmp qword ptr [rsi+0xf]; 
0x00000000495834: out 0xff, eax; jmp qword ptr [rsi+0xf]; 
0x00000000494beb: out 0xff, eax; jmp qword ptr [rsi-0x70]; 
0x0000000047cc7e: out 0xff, eax; push rax; cmp [rax+0x39], cl; ret; 
0x00000000496a19: out dx, al; adc [rcx+0x39], cl; ret; 
0x0000000040a7fc: out dx, al; add [r13-0x3d], r11b; mov rax, 0x4dee00; pop rbp; ret; 
0x0000000040a82a: out dx, al; add [r13-0x3d], r11b; mov rax, 0x4dee80; pop rbp; ret; 
0x0000000040a833: out dx, al; add [r13-0x3d], r11b; mov rax, 0x4def00; pop rbp; ret; 
0x0000000040a806: out dx, al; add [r13-0x3d], r11b; mov rax, 0x4e1260; pop rbp; ret; 
0x0000000040a4ab: out dx, al; add r11b, r8b; mov rax, 0x4e12a0; ret; 
0x0000000040a474: out dx, al; add r11b, r8b; nop [rax+rax]; mov rax, 0x4ded40; ret; 
0x0000000040a4f4: out dx, al; add r11b, r8b; nop [rax+rax]; mov rax, 0x4e1260; ret; 
0x0000000049fd02: out dx, al; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x00000000442aaf: out dx, al; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x12], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043ce7a: out dx, al; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000045bfbe: out dx, al; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000045c034: out dx, al; mov r8d, eax; mov edi, 0xffffff9c; mov eax, 0x101; syscall; 
0x0000000041e47f: out dx, al; mov rax, [rsp]; mov r13, r15; add r15, r12; call rax; 
0x0000000041e289: out dx, al; mov rdi, r12; call rax; 
0x0000000047515b: out dx, al; mov rdi, r12; sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000040aa47: out dx, al; mov rdi, r13; call rdx; 
0x00000000470592: out dx, al; mov rdi, r14; mov rdx, r12; call rbp; 
0x0000000048027f: out dx, al; mov rdi, r15; call qword ptr [r14+0x38]; 
0x000000004218fb: out dx, al; mov rdi, r15; call qword ptr [r14+0x80]; 
0x000000004802ec: out dx, al; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x000000004246ec: out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x0000000047fbe3: out dx, al; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x00000000420b2d: out dx, al; mov rdi, rbx; call qword ptr [r13+0x58]; 
0x00000000442ab9: out dx, al; movdqu [rdi-0x10], xmm1; ret; 
0x000000004783ce: out dx, al; ret far; 
0x0000000041ec0d: out dx, al; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000048f810: out dx, al; syscall; 
0x0000000040a83c: out dx, eax; add [r13-0x3d], r11b; mov rax, 0x4def40; pop rbp; ret; 
0x00000000479f69: out dx, eax; add [rax-0x93343], eax; jmp qword ptr [rax]; 
0x00000000479674: out dx, eax; add al, 0x0; lea rsi, [rip+0x663c2]; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x0000000040a45b: out dx, eax; add r11b, r8b; mov rax, 0x4ded00; ret; 
0x0000000042798d: out dx, eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000004279e5: out dx, eax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000424bd6: out dx, eax; call qword ptr [r13+0x20]; 
0x00000000424b73: out dx, eax; call qword ptr [r13+0x90]; 
0x00000000480b4c: out dx, eax; call qword ptr [r14+0x18]; 
0x0000000048130d: out dx, eax; call qword ptr [r14+0x20]; 
0x0000000047a082: out dx, eax; call qword ptr [r15+0x38]; 
0x00000000423996: out dx, eax; call qword ptr [r15+0x40]; 
0x00000000423db6: out dx, eax; call qword ptr [r15+0x80]; 
0x0000000042392d: out dx, eax; call qword ptr [r15+0x90]; 
0x00000000411a1f: out dx, eax; call qword ptr [r15+rbx*8]; 
0x00000000479c93: out dx, eax; call qword ptr [r8+0x38]; 
0x000000004248d1: out dx, eax; call qword ptr [rax+0x18]; 
0x000000004243c9: out dx, eax; call qword ptr [rax+0x40]; 
0x000000004249c4: out dx, eax; call qword ptr [rax+0x78]; 
0x00000000423cd6: out dx, eax; call qword ptr [rax+0x80]; 
0x00000000423b78: out dx, eax; call qword ptr [rax+0x90]; 
0x000000004a0243: out dx, eax; call qword ptr [rax]; 
0x0000000041ffdd: out dx, eax; call qword ptr [rbx+0x10]; 
0x00000000426b28: out dx, eax; call qword ptr [rbx+0x18]; 
0x000000004203ce: out dx, eax; call qword ptr [rbx+0x80]; 
0x00000000425be3: out dx, eax; call qword ptr [rbx+0x88]; 
0x0000000047fa3c: out dx, eax; call qword ptr [rbx+0x90]; 
0x000000004a00e7: out dx, eax; call qword ptr [rbx]; 
0x00000000478e22: out dx, eax; call qword ptr [rcx+0x38]; 
0x0000000045d727: out dx, eax; call r12; 
0x0000000041e414: out dx, eax; call rax; 
0x000000004704b8: out dx, eax; call rbx; 
0x0000000040aa4a: out dx, eax; call rdx; 
0x0000000047b1a6: out dx, eax; fdiv st(7), st; jmp qword ptr [rsi+0xf]; 
0x00000000442b2f: out dx, eax; lddqu xmm1, [rsi-0x10]; movdqu [rdi-0x11], xmm0; movdqu [rdi-0x10], xmm1; ret; 
0x0000000043dfe3: out dx, eax; lea r11, [rip+0x78984]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043df24: out dx, eax; lea r11, [rip+0x78a43]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b603: out dx, eax; lea r11, [rip+0x7b1a4]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b544: out dx, eax; lea r11, [rip+0x7b263]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000422a60: out dx, eax; lea r9, [rsp+0x18]; call rbp; 
0x00000000479981: out dx, eax; mov [rbp-0x970], r10d; mov [rbp-0x958], r9b; call rax; 
0x0000000043ccaa: out dx, eax; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x0000000043cda6: out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000043ccf2: out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000045c44a: out dx, eax; mov eax, 0x4f; syscall; 
0x0000000045d04e: out dx, eax; mov eax, 0x9; syscall; 
0x0000000042b0be: out dx, eax; mov eax, 0xca; syscall; 
0x000000004847e4: out dx, eax; mov eax, 0xe4; syscall; 
0x0000000045d1a8: out dx, eax; mov edx, r13d; mov esi, 0x1; call r12; 
0x0000000045de40: out dx, eax; mov rax, r12; pop rbp; pop r12; jmp rax; 
0x0000000045d238: out dx, eax; mov rdx, r13; mov esi, 0x1; call r12; 
0x00000000475161: out dx, eax; mov rdx, r15; call qword ptr [rax+0x38]; 
0x0000000045b7d9: out dx, eax; mov rsi, [rsp+0x18]; call rbx; 
0x00000000442b39: out dx, eax; movdqu [rdi-0x10], xmm1; ret; 
0x00000000403101: out dx, eax; or eax, 0xffffff00; inc dword ptr [rbp-0x17fa8101]; call qword ptr [rcx-0x38b7fffb]; 
0x00000000421e0b: out dx, eax; pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x00000000480ab5: out dx, eax; pop rbp; pop r12; jmp rax; 
0x0000000042e915: out dx, eax; pop rbp; pop r12; pop r13; jmp rax; 
0x00000000426a9d: out dx, eax; pop rbx; pop rbp; jmp rax; 
0x0000000042e08c: out dx, eax; pop rbx; pop rbp; pop r12; jmp rax; 
0x00000000428666: out dx, eax; ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x0000000041ec49: out dx, eax; ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x000000004797cf: out dx, eax; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x0000000045de1f: out dx, eax; xor edx, edx; mov esi, 0x1; call r12; 
0x0000000045d196: out dx, eax; xor esi, esi; call r12; 
0x000000004290f0: outsb dx, [rsi]; ret far; 
0x0000000041e792: outsb dx, [rsi]; ret; 
0x00000000489c0b: outsb dx, [rsi]; shl byte ptr [rsi+0x48], 0xf; outsb dx, [rsi]; ret far; 
0x0000000042727d: outsd dx, [rsi]; add [rax], eax; add [rsi-0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000045a020: outsd dx, [rsi]; add [rdx-0xf], esp; dec byte ptr [rax+0x6f]; jmp qword ptr [r10-0xf]; 
0x0000000042770e: outsd dx, [rsi]; add eax, 0x8dbbc; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x0000000042767e: outsd dx, [rsi]; add eax, 0x8dc4c; mov dword ptr [rdi+0xc0], 0xffffffff; movups [rdi+0xa0], xmm0; ret; 
0x00000000499c3c: outsd dx, [rsi]; and al, 0x3; add al, ch; ret far; 
0x00000000446330: outsd dx, [rsi]; cli; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000043aadd: outsd dx, [rsi]; data64 ret far; 
0x00000000431fce: outsd dx, [rsi]; fsub st(1), st; imul edi, 0xffffffff; jmp qword ptr [rsi+0x66]; 
0x00000000473253: outsd dx, [rsi]; idiv bh; jmp qword ptr [rsi+0xf]; 
0x0000000045a8dd: outsd dx, [rsi]; jae short 0x000000000045a8db; jmp qword ptr [rsi+0x66]; 
0x0000000045a026: outsd dx, [rsi]; jmp qword ptr [r10-0xf]; 
0x00000000484c6d: outsd dx, [rsi]; jne short 0x0000000000484c6d; jmp qword ptr [rsi+0xf]; 
0x0000000043d432: outsd dx, [rsi]; mov ebx, 0x4e6f0ff3; ret far; 
0x00000000402068: outsd dx, [rsi]; or al, [rax]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000402168: outsd dx, [rsi]; or al, [rax]; ret; 
0x00000000446487: outsd dx, [rsi]; pop rcx; jmp qword ptr [rdx-0x2f]; 
0x0000000043aae2: outsd dx, [rsi]; push rdi; ret far; 
0x0000000043af1d: outsd dx, [rsi]; push rdi; ret; 
0x00000000482d2a: outsd dx, [rsi]; push rdi; xor [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x00000000455626: outsd dx, [rsi]; push rsi; or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; ret; 
0x0000000043d4b2: outsd dx, [rsi]; ret far; 
0x0000000043af22: outsd dx, [rsi]; ret; 
0x000000004a3bd4: outsd dx, [rsi]; xchg ebp, eax; cmp ah, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000048e8aa: outsd dx, [rsi]; xchg ebp, eax; cmp ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000004a40d6: outsd dx, [rsi]; xchg ebp, eax; cmp dh, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000040c113: paddq mm1, [rcx]; add bl, al; nop [rax+rax]; lea rax, [rip+0x9d40c]; ret; 
0x00000000437bd2: pcmpeqb mm0, mm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004841d4: pcmpeqb mm3, [rcx]; add rax, 0x2; ret; 
0x000000004841bf: pcmpeqb mm3, [rsi]; ret; 
0x00000000437bd1: pcmpeqb xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000040a43d: pcmpeqw mm4, [rax+0x48]; mov eax, 0x4e1220; ret; 
0x00000000459338: pcmpgtd mm1, [rcx-0x7f3c01b2]; cli; add [rdx+0x2], esi; mov [rdi], cl; ret; 
0x000000004987e6: pcmpistri xmm2, xmm2, 0x3a; cmp edx, ecx; jle 0x0000000000498890; ret; 
0x00000000459218: pcmpistri xmm3, xmm3, 0x3a; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000045a4fa: pextrw edi, mm0, 0x77; ret; 
0x0000000044e764: pextrw edi, mm5, 0x74; ret far; 
0x000000004391d6: pmovmskb eax, mm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x00000000482852: pmovmskb eax, mm1; test eax, eax; jne 0x0000000000482900; xor eax, eax; ret; 
0x00000000498bb2: pmovmskb eax, mm1; test eax, eax; jne 0x0000000000498c60; xor eax, eax; ret; 
0x00000000482882: pmovmskb eax, mm1; test eax, eax; jne short 0x00000000004828e0; xor eax, eax; ret; 
0x00000000498be2: pmovmskb eax, mm1; test eax, eax; jne short 0x0000000000498c40; xor eax, eax; ret; 
0x000000004391d4: pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x00000000482851: pmovmskb eax, xmm1; test eax, eax; jne 0x0000000000482900; xor eax, eax; ret; 
0x00000000498bb1: pmovmskb eax, xmm1; test eax, eax; jne 0x0000000000498c60; xor eax, eax; ret; 
0x00000000482881: pmovmskb eax, xmm1; test eax, eax; jne short 0x00000000004828e0; xor eax, eax; ret; 
0x00000000498be1: pmovmskb eax, xmm1; test eax, eax; jne short 0x0000000000498c40; xor eax, eax; ret; 
0x0000000044e353: pmovmskb edx, mm4; test edx, edx; je short 0x000000000044e35e; bsf eax, edx; ret; 
0x0000000044e352: pmovmskb edx, xmm4; test edx, edx; je short 0x000000000044e35e; bsf eax, edx; ret; 
0x0000000049042b: pop qword ptr [rax]; add [rcx-0x77], cl; ret; 
0x0000000043645d: pop qword ptr [rcx]; or [rax], al; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042e08f: pop r12; jmp rax; 
0x0000000042e904: pop r12; mov rax, r8; pop r13; ret; 
0x0000000042e917: pop r12; pop r13; jmp rax; 
0x00000000478673: pop r12; pop r13; mov rax, r9; pop r14; ret; 
0x0000000042ef76: pop r12; pop r13; pop r14; pop r15; jmp rax; 
0x000000004018d3: pop r12; pop r13; pop r14; pop r15; ret; 
0x00000000402a33: pop r12; pop r13; pop r14; ret; 
0x000000004025d6: pop r12; pop r13; ret; 
0x00000000402486: pop r12; ret; 
0x00000000462175: pop r12; shl eax, cl; ret; 
0x0000000042e919: pop r13; jmp rax; 
0x00000000478675: pop r13; mov rax, r9; pop r14; ret; 
0x0000000042ef78: pop r13; pop r14; pop r15; jmp rax; 
0x0000000041210e: pop r13; pop r14; pop r15; pop rbp; ret; 
0x000000004018d5: pop r13; pop r14; pop r15; ret; 
0x00000000402a35: pop r13; pop r14; ret; 
0x000000004025d8: pop r13; ret; 
0x0000000042ef7a: pop r14; pop r15; jmp rax; 
0x00000000412110: pop r14; pop r15; pop rbp; ret; 
0x000000004018d7: pop r14; pop r15; ret; 
0x00000000402a37: pop r14; ret; 
0x0000000042ef7c: pop r15; jmp rax; 
0x00000000412112: pop r15; pop rbp; ret; 
0x000000004018d9: pop r15; ret; 
0x000000004a1f11: pop rax; add [rax], eax; add [rax-0x80], al; call qword ptr [rcx]; 
0x00000000465406: pop rax; call r14; 
0x00000000466956: pop rax; call r15; 
0x00000000466170: pop rax; call rbx; 
0x0000000045b976: pop rax; cli; dec dword ptr [rax-0x77]; ret; 
0x00000000491780: pop rax; jmp qword ptr [rax]; 
0x000000004664d1: pop rax; mov rax, [rsp+0x18]; call rax; 
0x00000000466cf8: pop rax; mov rax, [rsp+0x20]; call rax; 
0x00000000465157: pop rax; mov rax, [rsp+0x28]; call rax; 
0x00000000465efa: pop rax; mov rax, [rsp+0x30]; call rax; 
0x0000000046a286: pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046b599: pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x18]; call rax; 
0x00000000469e9c: pop rax; mov rdi, [rsp+0x50]; mov rax, [rsp+0x20]; call rax; 
0x00000000465b80: pop rax; mov rdi, [rsp+0x60]; call r15; 
0x0000000046573d: pop rax; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x0000000042055f: pop rax; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x0000000046fe60: pop rax; mov rdx, 0xffffffffffffffe0; add rax, 0x200; mov fs:[rdx], rax; ret; 
0x00000000420197: pop rax; or al, 0x0; syscall; 
0x00000000494629: pop rax; or al, 0x89; fdiv st, st(6); ret; 
0x00000000492f86: pop rax; or al, 0xf6; ret; 
0x0000000049184a: pop rax; pop rdx; pop rbx; ret; 
0x0000000045cd07: pop rax; ret; 
0x000000004a7853: pop rax; sti; jmp qword ptr [rsi+0x2e]; 
0x00000000491bfd: pop rax; xor rcx, fs:[0x28]; jne short 0x0000000000491c44; add rsp, 0x68; ret; 
0x000000004a5292: pop rbp; and [rsi-0x9], ah; ret; 
0x0000000047c3df: pop rbp; cmp al, 0x6; add [rcx-0x77], cl; ret far; 
0x0000000040cd23: pop rbp; enter 0x9, 0xc3; lea rax, [rip+0x9c85d]; ret; 
0x0000000040cd2b: pop rbp; enter 0x9, 0xc3; lea rax, [rip+0x9c85e]; ret; 
0x0000000040cd3b: pop rbp; enter 0x9, 0xc3; lea rax, [rip+0x9c8b6]; ret; 
0x00000000431bef: pop rbp; imul eax, [rcx], 0x0; cmovne rax, rdx; ret; 
0x00000000426a9f: pop rbp; jmp rax; 
0x000000004296ce: pop rbp; mov [r11+0x10], eax; mov dword ptr [r11+0x14], 0x0; ret; 
0x00000000402670: pop rbp; mov eax, 0xffffffea; pop r12; pop r13; ret; 
0x000000004025d2: pop rbp; mov eax, r12d; pop r12; pop r13; ret; 
0x0000000040a98f: pop rbp; mov eax, r12d; pop r12; ret; 
0x000000004a48e4: pop rbp; mov eax, r8d; ret; 
0x00000000421e0c: pop rbp; mov rax, [rax+0xe0]; mov rax, [rax+0x20]; jmp rax; 
0x00000000481d97: pop rbp; mov rax, r12; pop r12; pop r13; ret; 
0x00000000411d97: pop rbp; mov rax, r12; pop r12; ret; 
0x00000000499554: pop rbp; mov rax, r13; pop r12; pop r13; ret; 
0x0000000042e898: pop rbp; mov rax, r8; pop r12; pop r13; ret; 
0x00000000429b5c: pop rbp; mov rax, r8; pop r12; ret; 
0x00000000415d94: pop rbp; mov rax, r9; pop r12; ret; 
0x00000000478676: pop rbp; mov rax, r9; pop r14; ret; 
0x0000000042f910: pop rbp; mov rsi, r12; pop r12; pop r13; jmp rax; 
0x0000000040a064: pop rbp; or [rcx], bh; ret far; 
0x00000000401bee: pop rbp; or eax, [rax]; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x00000000401bed: pop rbp; or eax, [rax]; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x0000000042e08e: pop rbp; pop r12; jmp rax; 
0x0000000042e903: pop rbp; pop r12; mov rax, r8; pop r13; ret; 
0x0000000042e916: pop rbp; pop r12; pop r13; jmp rax; 
0x00000000402a32: pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000402644: pop rbp; pop r12; pop r13; ret; 
0x00000000402485: pop rbp; pop r12; ret; 
0x0000000042ef79: pop rbp; pop r14; pop r15; jmp rax; 
0x0000000041210f: pop rbp; pop r14; pop r15; pop rbp; ret; 
0x000000004018d6: pop rbp; pop r14; pop r15; ret; 
0x00000000402a36: pop rbp; pop r14; ret; 
0x0000000049e7b8: pop rbp; pop rbx; ret; 
0x00000000401d61: pop rbp; ret; 
0x00000000462171: pop rbp; shl ecx, 0x3; pop r12; shl eax, cl; ret; 
0x000000004318fe: pop rbx; add al, [rax]; cmovne rax, rdx; ret; 
0x0000000049a8bf: pop rbx; add rax, [rdx+0x8]; pop rbp; pop r12; jmp rax; 
0x0000000045a856: pop rbx; and eax, 0x7ff80000; ret; 
0x000000004620b6: pop rbx; and eax, 0xffffffc7; or eax, 0x18; mov [rip+0x83891], eax; ret; 
0x00000000462086: pop rbx; and eax, 0xffffffc7; or eax, 0x8; mov [rip+0x838c1], eax; ret; 
0x00000000461fe6: pop rbx; and eax, 0xfffffff8; or eax, 0x1; mov [rip+0x83961], eax; ret; 
0x00000000462016: pop rbx; and eax, 0xfffffff8; or eax, 0x3; mov [rip+0x83931], eax; ret; 
0x00000000499ee1: pop rbx; cld; call qword ptr [rax-0x170876b4]; 
0x0000000048a284: pop rbx; cli; dec dword ptr [rcx-0x77]; ret; 
0x0000000045a7ab: pop rbx; cmove rax, rdx; ret; 
0x0000000045a83b: pop rbx; cmovne rax, rdx; ret; 
0x000000004269b8: pop rbx; jmp rax; 
0x0000000042e251: pop rbx; mov ch, 0xff; jmp qword ptr [rsi+0x66]; 
0x0000000040308d: pop rbx; mov dword ptr [rip+0xdf070], 0x1; ret; 
0x00000000409080: pop rbx; mov eax, 0xffffffea; pop rbp; pop r12; ret; 
0x00000000404f53: pop rbx; mov eax, 0xfffffff4; pop rbp; pop r12; ret; 
0x00000000427600: pop rbx; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x0000000048fa6b: pop rbx; mov eax, fs:[rax]; ret; 
0x00000000420d05: pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000420d06: pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000425ecc: pop rbx; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000428454: pop rbx; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r12+0x18]; 
0x00000000423385: pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x00000000480ab2: pop rbx; mov rdi, rbp; pop rbp; pop r12; jmp rax; 
0x0000000043090e: pop rbx; or [rax], al; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000048fa4e: pop rbx; or dword ptr [rip+0x536f2], 0x1; ret; 
0x00000000407c8e: pop rbx; pop r12; ret; 
0x0000000046e8d7: pop rbx; pop r14; ret; 
0x00000000426a9e: pop rbx; pop rbp; jmp rax; 
0x0000000040a98e: pop rbx; pop rbp; mov eax, r12d; pop r12; ret; 
0x000000004a48e3: pop rbx; pop rbp; mov eax, r8d; ret; 
0x00000000411d96: pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x00000000429b5b: pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x00000000415d93: pop rbx; pop rbp; mov rax, r9; pop r12; ret; 
0x0000000042e08d: pop rbx; pop rbp; pop r12; jmp rax; 
0x000000004078ba: pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000004029f5: pop rbx; pop rbp; pop r12; ret; 
0x000000004a141d: pop rbx; pop rbp; pop r14; ret; 
0x0000000040384c: pop rbx; pop rbp; ret; 
0x00000000402242: pop rbx; ret; 
0x0000000045a805: pop rbx; shr eax, 0x6; and eax, 0x3fffc00; ret; 
0x0000000045a7ba: pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x0000000042477f: pop rbx; sub rax, rdx; pop rbp; pop r12; ret; 
0x000000004089b8: pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x000000004379a7: pop rcx; add [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000446489: pop rcx; jmp qword ptr [rdx-0x2f]; 
0x00000000445e5c: pop rcx; jmp qword ptr [rdx-0xf]; 
0x000000004a3e77: pop rcx; jmp rcx; 
0x00000000460804: pop rcx; or [rax+0x1], cl; ret far; 
0x00000000438087: pop rcx; or al, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000048a283: pop rcx; pop rbx; cli; dec dword ptr [rcx-0x77]; ret; 
0x0000000042815b: pop rcx; ret far; 
0x0000000043b829: pop rdi; adc [rdx+0x9], dh; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043d249: pop rdi; in al, dx; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d059: pop rdi; in eax, dx; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000042ef7d: pop rdi; jmp rax; 
0x0000000042ee06: pop rdi; or eax, [rax]; syscall; 
0x0000000042ee07: pop rdi; or eax, [rax]; syscall; 
0x0000000043ce79: pop rdi; out dx, al; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043cca9: pop rdi; out dx, eax; mov [rdi-0x9], r8; mov [rdi-0x4], edx; ret; 
0x0000000043cda5: pop rdi; out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x1], dl; ret; 
0x0000000043ccf1: pop rdi; out dx, eax; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x00000000412113: pop rdi; pop rbp; ret; 
0x0000000046ca4b: pop rdi; ret far; 
0x000000004018da: pop rdi; ret; 
0x0000000043c0a9: pop rdi; shl byte ptr [rdx+0x13], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043b77b: pop rdi; shl byte ptr [rdx+0xe], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000046efed: pop rdi; sub al, 0xfa; jmp qword ptr [rsi+0x66]; 
0x0000000042ffc2: pop rdx; adc ebp, edi; jmp qword ptr [rsi+0x2e]; 
0x0000000041a9f2: pop rdx; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000047c3ab: pop rdx; ja 0x000000000047b868; movzx eax, byte ptr [rdx+rax]; lea rcx, [rip+0x63c83]; jmp qword ptr [rcx+rax*8]; 
0x0000000047c7d0: pop rdx; ja 0x000000000047b868; movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x6375e]; jmp qword ptr [rax+rcx*8]; 
0x0000000047c5ef: pop rdx; ja 0x000000000047b868; movzx ecx, byte ptr [rdx+rax]; lea rax, [rip+0x6383f]; jmp qword ptr [rax+rcx*8]; 
0x000000004985b2: pop rdx; je short 0x00000000004985b1; jmp qword ptr [rsi+0x2e]; 
0x0000000045d3bb: pop rdx; or [rcx-0xa], al; ret; 
0x0000000049184b: pop rdx; pop rbx; ret; 
0x000000004017df: pop rdx; ret; 
0x00000000430fb9: pop rdx; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000431c8e: pop rsi; add byte ptr [rdx], 0x0; lea rax, [rip+0x280a7]; cmove rax, rdx; ret; 
0x000000004a1666: pop rsi; add eax, 0x2ec10; ret; 
0x0000000046bdcb: pop rsi; cli; jmp qword ptr [rsi-0x70]; 
0x00000000465d4c: pop rsi; cmp [rip-0x41041800], al; cli; jmp qword ptr [rsi+0x66]; 
0x0000000040cd33: pop rsi; enter 0x9, 0xc3; lea rax, [rip+0x9c85d]; ret; 
0x00000000485136: pop rsi; inc byte ptr [rip-0x38c6b800]; ja short 0x0000000000485168; xor eax, eax; ret; 
0x00000000430909: pop rsi; lea rdx, [rip+0x85ba7]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x00000000407d44: pop rsi; lea rdx, [rip+0xa16cc]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x000000004268b9: pop rsi; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000042ef7b: pop rsi; pop r15; jmp rax; 
0x00000000412111: pop rsi; pop r15; pop rbp; ret; 
0x000000004018d8: pop rsi; pop r15; ret; 
0x00000000402a38: pop rsi; ret; 
0x0000000048e888: pop rsp; add eax, 0x46850f00; add al, [rax]; add [rbx-0x28f7b], cl; jmp qword ptr [rsi+0xf]; 
0x000000004748cb: pop rsp; idiv edi; jmp qword ptr [rsi-0x77]; 
0x0000000042e090: pop rsp; jmp rax; 
0x0000000048a360: pop rsp; mov es, [rip-0x1b3eb700]; add al, 0x49; add esp, eax; call qword ptr [r12+0x60]; 
0x0000000042e905: pop rsp; mov rax, r8; pop r13; ret; 
0x0000000042e918: pop rsp; pop r13; jmp rax; 
0x00000000478674: pop rsp; pop r13; mov rax, r9; pop r14; ret; 
0x0000000042ef77: pop rsp; pop r13; pop r14; pop r15; jmp rax; 
0x000000004018d4: pop rsp; pop r13; pop r14; pop r15; ret; 
0x00000000402a34: pop rsp; pop r13; pop r14; ret; 
0x000000004025d7: pop rsp; pop r13; ret; 
0x0000000046caf0: pop rsp; push rcx; cli; jmp qword ptr [rsi+0x2e]; 
0x00000000402487: pop rsp; ret; 
0x00000000462176: pop rsp; shl eax, cl; ret; 
0x0000000047eaeb: popfq; add al, 0x0; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x000000004a3c29: popfq; cmp ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000455b32: popfq; lea r11, [rip+0x61c36]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000040c1e3: popfq; ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d39d]; ret; 
0x0000000040c1eb: popfq; ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d39e]; ret; 
0x0000000040c1fb: popfq; ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d3f6]; ret; 
0x00000000442c02: psllq mm1, [r15]; jg short 0x0000000000442c17; ret; 
0x00000000445732: psllq mm1, [r15]; jg short 0x0000000000445747; ret; 
0x00000000442c03: psllq mm1, [rdi]; jg short 0x0000000000442c17; ret; 
0x00000000445733: psllq mm1, [rdi]; jg short 0x0000000000445747; ret; 
0x00000000455505: psllq mm1, [rdi]; jg short 0x0000000000455512; mov [rdi+0xf], ecx; ret; 
0x00000000455566: psllq mm1, [rdi]; jg short 0x0000000000455573; mov [rdi+0xf], rcx; ret; 
0x00000000455668: psllq mm1, [rdi]; jg short 0x0000000000455674; movdqu [rdi+0xf], xmm2; ret; 
0x000000004561f5: psllq mm1, [rdi]; jg short 0x0000000000456202; mov [rdi+0xf], ecx; ret; 
0x00000000456256: psllq mm1, [rdi]; jg short 0x0000000000456263; mov [rdi+0xf], rcx; ret; 
0x00000000456358: psllq mm1, [rdi]; jg short 0x0000000000456364; movdqu [rdi+0xf], xmm2; ret; 
0x00000000456bb5: psllq mm1, [rdi]; jg short 0x0000000000456bc2; mov [rdi+0xf], ecx; lea rax, [rdi+0x12]; ret; 
0x00000000456c36: psllq mm1, [rdi]; jg short 0x0000000000456c43; mov [rdi+0xf], rcx; lea rax, [rdi+0x16]; ret; 
0x00000000456d38: psllq mm1, [rdi]; jg short 0x0000000000456d44; movdqu [rdi+0xf], xmm2; lea rax, [rdi+0x1e]; ret; 
0x0000000042afe9: psubsw mm2, [rsi+rdi*8-0x1]; call qword ptr [rax+0x43d8d48]; 
0x00000000480736: punpckhqdq xmm0, xmm0; mov [rax+0x10], rcx; mov [rax+0x40], rdx; movups [rax], xmm0; ret; 
0x0000000042686f: punpckhqdq xmm0, xmm0; mov [rdi+0x18], rdx; mov [rdi+0x48], rax; movups [rdi+0x8], xmm0; ret; 
0x00000000464f07: punpckldq mm1, mm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x00000000464f06: punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x000000004238b1: punpcklqdq xmm0, xmm0; movups [rbx+0x8], xmm0; pop rbx; ret; 
0x00000000464f0a: punpcklqdq xmm0, xmm1; movups [rdx+0x48], xmm0; ret; 
0x000000004837b8: push 0x0; lea rcx, [rax+0x1]; lea r9, [rsp+0x28]; call rbx; 
0x0000000048394b: push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x000000004629f0: push 0x0; mov r9, r14; mov rsi, [rsp+0x18]; xor r8d, r8d; call rbx; 
0x0000000046737c: push 0x0; mov rcx, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x000000004664c6: push 0x0; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x0000000046514c: push 0x0; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x000000004838df: push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x00000000483949: push 0x1; push 0x0; lea rcx, [rax+0x4]; lea r9, [rsp+0x20]; call rbx; 
0x000000004838db: push 0x1; xor edx, edx; push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x00000000465738: push 0x24748b48; pop rax; mov rdi, [rsp+0x60]; mov rax, [rsp+0x18]; call rax; 
0x00000000431c64: push 0x48000095; lea edx, [rip+0xeaf1]; cmovne rax, rdx; ret; 
0x00000000455f82: push 0x5; add [rax], al; ret; 
0x00000000420f57: push 0x5c415d5b; pop r13; pop r14; pop r15; ret; 
0x00000000483710: push 0x5c415d5b; pop r13; ret; 
0x0000000042c86d: push 0x6e0f4966; ret; 
0x0000000045bb1f: push 0x75158d48; ret; 
0x0000000046e3a6: push 0x7; add al, ch; push rdx; sbb al, 0xb9; jmp qword ptr [rsi-0x70]; 
0x0000000042e471: push 0xb; add [rax], al; ret; 
0x0000000040b374: push 0xffffffff83000001; call qword ptr [rbp+0x16f840f]; 
0x0000000040c183: push 0xffffffffc30009d4; nop [rax+rax]; lea rax, [rip+0x9d451]; ret; 
0x00000000497eba: push 0xffffffffffffffd1; add al, 0x0; ret; 
0x000000004a6690: push 0xfffffffffffffffb; call far fword ptr [rbx+0x4c]; 
0x00000000458b77: push qword ptr [rbp+0x1a]; xor eax, eax; ret; 
0x0000000045d2ac: push qword ptr [rbp+0x27]; mov rdi, [rbp]; call rbx; 
0x000000004a451a: push qword ptr [rbp+0x36]; mov eax, 0x8; add rsp, 0x8; ret; 
0x0000000045e1e0: push qword ptr [rbp+0x3e]; mov rdi, [r14]; call rbx; 
0x0000000045eb90: push qword ptr [rbp+0x44]; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000439889: push qword ptr [rbp+0x4]; vzeroupper; ret; 
0x0000000045eb61: push qword ptr [rbp+0x4b]; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e20c: push qword ptr [rbp+0x69]; mov rdi, [r14]; call rbx; 
0x000000004a7bd1: push qword ptr [rbp+rdx+0x48]; mov eax, [rdi+0x20]; test rax, rax; je short 0x00000000004a7be4; call rax; 
0x000000004a711d: push qword ptr [rbp+rdx-0x18]; ret far; 
0x00000000407c3e: push qword ptr [rbp-0x19]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000427a20: push qword ptr [rbp-0x40]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x0000000045be30: push qword ptr [rbx+0x1]; ret; 
0x00000000407f08: push qword ptr [rcx+rcx-0x18]; mov al, [0x8330458b4cfffffe]; ret; 
0x000000004112be: push qword ptr [rcx]; idiv byte ptr [rdi+0x3003]; mov eax, 0x9e; syscall; 
0x00000000425ef3: push qword ptr [rcx]; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d], bl; ret; 
0x0000000045b8eb: push qword ptr [rdi+0x22]; hlt; mov edi, edx; mov eax, r8d; syscall; 
0x0000000045c32c: push qword ptr [rdi+0x41]; ret; 
0x0000000045ce69: push qword ptr [rdi+0x4]; ret; 
0x0000000045c15c: push qword ptr [rdi+0x51]; ret; 
0x0000000045c0b7: push qword ptr [rdi+0x56]; ret; 
0x0000000045c1f0: push qword ptr [rdi+0x5]; ret; 
0x0000000045d05b: push qword ptr [rdi+0x62]; pop rbx; pop rbp; ret; 
0x0000000045becf: push qword ptr [rdi+0x6]; ret; 
0x0000000045bf2e: push qword ptr [rdi+0x7]; ret; 
0x0000000045cdfd: push qword ptr [rdi+0x8]; ret; 
0x00000000484fc4: push qword ptr [rdi+0x9]; ret; 
0x00000000498fb3: push qword ptr [rdi+0xa]; ret; 
0x0000000045d046: push qword ptr [rdi+rsi+0x41]; mov edx, ebx; mov rdi, rbp; mov eax, 0x9; syscall; 
0x000000004847f4: push qword ptr [rdi-0x37]; add rsp, 0x8; pop rbp; pop r12; ret; 
0x0000000043b71c: push qword ptr [rdx+0x7]; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000045c442: push qword ptr [rsp+rbx*8+0x48]; mov ebp, edi; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x00000000466f5d: push r12; mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000046a27b: push r12; mov r9, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046b9e0: push r12; mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x000000004684bd: push r12; mov r9, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000467881: push r12; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x00000000466160: push r14; mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x000000004806fe: push rax; adc [rax-0x77], cl; ret; 
0x00000000428549: push rax; adc [rbx-0x2fd6efb9], cl; ret; 
0x000000004293b5: push rax; add [rax-0x77], ecx; adc eax, 0xb93d2; ret; 
0x0000000049bfc0: push rax; add al, 0x0; add bl, ch; ret; 
0x00000000421453: push rax; add esi, edi; jmp qword ptr [rsi+0xf]; 
0x00000000462a70: push rax; call rbx; 
0x0000000047bb12: push rax; cmp [rax+0x39], cl; ret; 
0x00000000474c53: push rax; fdiv st(7), st; jmp qword ptr [rsi+0xf]; 
0x0000000049a88e: push rax; inc dword ptr [rbp+0x481a74c0]; lea ebx, [rbp+rdx*8]; nop [rax]; call qword ptr [rbx]; 
0x0000000047356a: push rax; inc esi; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x000000004a4589: push rax; jne short 0x00000000004a45b3; xor eax, eax; add rsp, 0x8; ret; 
0x000000004a45e9: push rax; jne short 0x00000000004a4613; xor eax, eax; add rsp, 0x8; ret; 
0x000000004a5f99: push rax; jne short 0x00000000004a5fbb; xor eax, eax; add rsp, 0x8; ret; 
0x0000000046b59e: push rax; mov rax, [rsp+0x18]; call rax; 
0x00000000469ea1: push rax; mov rax, [rsp+0x20]; call rax; 
0x00000000467387: push rax; mov rdi, [rsp+0x48]; call r13; 
0x00000000467887: push rax; mov rdi, [rsp+0x48]; call rbx; 
0x00000000465401: push rax; mov rdi, [rsp+0x58]; call r14; 
0x00000000466951: push rax; mov rdi, [rsp+0x58]; call r15; 
0x0000000046616b: push rax; mov rdi, [rsp+0x58]; call rbx; 
0x000000004664cc: push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000466cf3: push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x20]; call rax; 
0x00000000465152: push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x28]; call rax; 
0x00000000465ef5: push rax; mov rdi, [rsp+0x58]; mov rax, [rsp+0x30]; call rax; 
0x00000000480740: push rax; movups [rax], xmm0; ret; 
0x0000000045faca: push rax; or bl, al; nop [rax]; ret; 
0x00000000467880: push rax; push r12; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x0000000046694b: push rax; push rbx; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r15; 
0x0000000041946c: push rax; ret far; 
0x00000000404c7c: push rax; sahf; add al, [rax]; ret; 
0x0000000042853a: push rax; sbb [rbx-0x2fd6efb9], cl; ret; 
0x00000000480e85: push rax; sbb [rsi+0x1f], dh; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x000000004077d1: push rax; xor eax, eax; cmp ecx, edx; je short 0x00000000004077e0; ret; 
0x000000004a679b: push rbp; adc [rax-0x7d], cl; ret; 
0x0000000045c35c: push rbp; add al, [rax]; mov eax, [rsp+0xc]; add rsp, 0x18; ret; 
0x0000000043e817: push rbp; add dword ptr [rdi], 0x14634900; xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000049d40d: push rbp; call qword ptr [rax+0x48068b48]; 
0x00000000474a4e: push rbp; fdivp st(7), st; jmp qword ptr [rsi+0xf]; 
0x0000000041441e: push rbp; idiv bh; jmp qword ptr [rsi+0xf]; 
0x00000000422ca8: push rbp; mov eax, 0xc04d8d4c; mov rcx, r14; mov rdi, r15; call r12; 
0x000000004a3eb3: push rbp; or al, ch; idiv dil; jmp qword ptr [rsi+0xf]; 
0x0000000042d217: push rbp; or eax, [rax]; syscall; 
0x00000000497294: push rbp; sub dh, al; add [rip-0xb9517], ch; jmp qword ptr [rsi-0x70]; 
0x00000000423d1a: push rbp; sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x00000000410fc2: push rbx; adc [rax-0x7d], cl; ret; 
0x00000000405a92: push rbx; adc [rcx+0x63], cl; adc al, 0x97; add rdx, r15; notrack jmp rdx; 
0x00000000415222: push rbx; add [rax-0x7d], ecx; ret; 
0x00000000431057: push rbx; add [rax], al; cmovne rax, rdx; ret; 
0x000000004a27b5: push rbx; add cl, [rax-0x7d]; ret; 
0x0000000040a3e2: push rbx; cmp edi, 0x16; jne 0x000000000040a4a0; mov rax, 0x4def00; ret; 
0x00000000459db9: push rbx; jb short 0x0000000000459dc1; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x00000000480d9f: push rbx; je short 0x0000000000480dfd; pop rbp; pop r12; ret; 
0x00000000411bd9: push rbx; mov ah, 0x4; add [rax-0x77], cl; ret; 
0x000000004021a6: push rbx; mov ebx, edi; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x000000004653f7: push rbx; mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x00000000465b76: push rbx; mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call r15; 
0x000000004694f2: push rbx; mov r9, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x0000000040a9c0: push rbx; mov rbx, rsi; mov rdi, rsi; call rax; 
0x0000000045de1c: push rbx; mov rdi, rbp; xor edx, edx; mov esi, 0x1; call r12; 
0x00000000423677: push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [r12+0x70]; 
0x0000000042103e: push rbx; mov rdi, rbx; sub rdx, rsi; call qword ptr [rax+0x70]; 
0x0000000046694c: push rbx; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r15; 
0x000000004565f2: push rbx; movq [rdi+0x30], mm7; ret; 
0x0000000042330f: push rbx; nop edx, edi; cmp qword ptr [rip+0xbec84], 0x0; je short 0x000000000042331f; ret; 
0x000000004991df: push rbx; nop edx, edi; mov eax, [rip+0x4c79e]; ret; 
0x0000000049960f: push rbx; nop edx, edi; ret; 
0x00000000423262: push rbx; or [rax-0x75], cl; xor ecx, [rax-0x7d]; ret; 
0x0000000045d70a: push rbx; or [rax-0x7d], cl; ret; 
0x00000000452bc4: push rcx; add al, bl; nop [rax+rax]; mov [rcx], edx; ret; 
0x00000000452c03: push rcx; add eax, ebx; nop [rax+rax]; mov [rcx], rdx; ret; 
0x0000000049231d: push rcx; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000046caf1: push rcx; cli; jmp qword ptr [rsi+0x2e]; 
0x0000000044606a: push rcx; jl short 0x00000000004460b5; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm15; ret; 
0x00000000446071: push rcx; jl short 0x00000000004460bc; adc [rcx-0x1], edi; ret; 
0x000000004461d1: push rcx; jl short 0x000000000044621c; adc [rcx+0x6], esi; vmovups [r9+0x1c0], zmm15; ret; 
0x000000004461d8: push rcx; jl short 0x0000000000446223; adc [rcx+0x7], edi; ret; 
0x0000000042c5fd: push rcx; or [rax+0x39], cl; ret; 
0x0000000045c15e: push rcx; ret; 
0x0000000042a845: push rcx; sbb [rcx+0x1], cl; ret; 
0x0000000041ffd5: push rdi; add [rax], eax; add [rcx], dh; test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x0000000049dd7f: push rdi; add [rcx-0x77], ecx; push rsp; ret; 
0x00000000456a6a: push rdi; add al, 0x48; lea eax, [rdi+0x5]; ret; 
0x00000000442d69: push rdi; add al, 0x48; mov [rdi], ecx; ret; 
0x00000000456414: push rdi; add al, 0xc3; nop [rax+rax]; mov [rdi-0x1], rdx; ret; 
0x0000000045c0fe: push rdi; add al, [rax]; mov rax, [rsp+0x8]; add rsp, 0x28; ret; 
0x0000000043e615: push rdi; add dword ptr [rdi], 0x0; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000456b1c: push rdi; add eax, 0xc478d48; ret; 
0x00000000455dbc: push rdi; add eax, 0xde88349; lea rdi, [rdi+0xd]; jne 0x00000000004564f0; ret; 
0x0000000046b49d: push rdi; add eax, [rax]; add [rcx-0x73], cl; add r9b, [r8+0x39]; ret; 
0x00000000482b28: push rdi; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000045fb10: push rdi; and dh, al; sub [r9], r8b; ret; 
0x0000000043cb38: push rdi; clc; ret; 
0x0000000043ccb0: push rdi; cld; ret; 
0x0000000043d7d7: push rdi; cli; mov [rdi-0x4], ecx; ret; 
0x00000000442649: push rdi; cmc; mov [rdi-0x4], ecx; ret; 
0x00000000456060: push rdi; cmovns eax, [rbx-0x72b7e018]; jg short 0x0000000000456089; jne 0x00000000004564f0; ret; 
0x0000000045be3a: push rdi; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000045bede: push rdi; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000045c116: push rdi; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x0000000048514e: push rdi; fsub st, dword ptr [rcx+rcx*4+0x2]; xor eax, eax; mov qword ptr [rip+0x5fe37], 0xffffffffffffffff; ret; 
0x000000004425c9: push rdi; hlt; mov [rdi-0x4], ecx; ret; 
0x00000000456422: push rdi; inc ebx; nop [rax+rax]; mov [rdi], rdx; ret; 
0x00000000426844: push rdi; mov [rdi+0x18], rax; mov [rdi+0x8], rax; ret; 
0x000000004424aa: push rdi; mov [rdi-0x8], rcx; ret; 
0x00000000423768: push rdi; mov esi, 0xffffffff; mov rdi, r8; call qword ptr [r15+0x18]; 
0x0000000049e7b1: push rdi; or [rcx-0x2feeb728], cl; pop rbp; pop rbx; ret; 
0x00000000456d00: push rdi; or eax, 0x1c478d48; ret; 
0x00000000456000: push rdi; or eax, 0x1de88349; lea rdi, [rdi+0x1d]; jne 0x00000000004564f0; ret; 
0x0000000043aae3: push rdi; ret far; 
0x0000000043af1e: push rdi; ret; 
0x00000000426875: push rdi; sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x0000000045fb0a: push rdi; sbb [rdi+0x16], dh; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045fb30: push rdi; sbb [rdi-0x10], bh; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000043d9d7: push rdi; stc; mov [rdi-0x4], ecx; ret; 
0x0000000043d1fa: push rdi; std; mov [rdi-0x2], cx; ret; 
0x0000000043d5d7: push rdi; sti; mov [rdi-0x4], ecx; ret; 
0x00000000472d18: push rdi; sub dh, al; add [rcx-0x7d], cl; ret; 
0x00000000421739: push rdi; sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x00000000482d2b: push rdi; xor [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x00000000482888: push rdi; xor eax, eax; ret; 
0x0000000044253a: push rdi; xrelease mov [rdi-0x8], rcx; ret; 
0x0000000040a361: push rdx; cmp edi, 0x80000008; jne 0x000000000040a4a0; mov rax, 0x4dedc0; ret; 
0x0000000047d542: push rdx; in eax, 0xff; jmp qword ptr [rsi+0x2e]; 
0x0000000046460a: push rdx; ret far; 
0x0000000043b729: push rdx; sar byte ptr [rsi], 0x41; jmp rcx; 
0x0000000046e3aa: push rdx; sbb al, 0xb9; jmp qword ptr [rsi-0x70]; 
0x00000000455687: push rsi; adc bl, dh; movq [rdi], mm0; movdqu [rdi+0x10], xmm2; ret; 
0x00000000443071: push rsi; add [rbx+0x157890e], ecx; mov [rdi], ecx; ret; 
0x0000000049e427: push rsi; add [rcx-0x77], ecx; push rsp; ret; 
0x0000000045941d: push rsi; add ah, [rdx-0xf]; jl short 0x000000000045946b; adc [rsi+0x3], edx; ret; 
0x00000000443001: push rsi; add cl, [rbx+0x257890e]; mov [rdi], ecx; ret; 
0x00000000463ee3: push rsi; add eax, 0x31f63100; jmp qword ptr [rsi+0xf]; 
0x00000000442cf2: push rsi; add eax, 0x480e8b48; mov [rdi+0x5], edx; mov [rdi], rcx; ret; 
0x00000000456b15: push rsi; add eax, 0x480f8948; mov [rdi+0x5], edx; lea rax, [rdi+0xc]; ret; 
0x00000000455495: push rsi; add eax, 0x480f8948; mov [rdi+0x5], edx; ret; 
0x000000004594b3: push rsi; add eax, 0x487cf162; adc [rsi+0x6], edx; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004638e5: push rsi; add eax, 0xe362e800; cli; jmp qword ptr [rsi-0x70]; 
0x00000000442f91: push rsi; add ecx, [rbx+0x357890e]; mov [rdi], ecx; ret; 
0x00000000456a83: push rsi; add ecx, [rcx+0x357890f]; lea rax, [rdi+0x6]; ret; 
0x00000000455433: push rsi; add ecx, [rcx+0x357890f]; ret; 
0x00000000409e76: push rsi; add r8b, [rax]; nop [rax+rax]; ret; 
0x000000004797cb: push rsi; and [rcx+rcx*4-0x11], cl; sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x000000004731f2: push rsi; and [rcx+rcx*4-0x1], cl; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000043cc46: push rsi; clc; mov [rdi-0x10], r11; mov [rdi-0x8], rdx; ret; 
0x0000000043cc62: push rsi; clc; mov [rdi-0x8], rdx; ret; 
0x0000000043d5b6: push rsi; clc; mov [rdi-0xd], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d7b6: push rsi; clc; mov [rdi-0xe], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d9b6: push rsi; clc; mov [rdi-0xf], rcx; mov [rdi-0x8], rdx; ret; 
0x0000000043d3d1: push rsi; cld; mov [rdi-0x4], edx; ret; 
0x0000000043ce25: push rsi; cld; mov [rdi-0x9], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d005: push rsi; cld; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d1e5: push rsi; cld; mov [rdi-0xb], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d3c5: push rsi; cld; mov [rdi-0xc], rcx; mov [rdi-0x4], edx; ret; 
0x000000004586b6: push rsi; cmc; sub eax, edx; ret; 
0x000000004586a6: push rsi; hlt; sub eax, edx; ret; 
0x0000000048c47b: push rsi; idiv bh; call qword ptr [rax+0x4cf8894c]; 
0x000000004982a6: push rsi; jge short 0x000000000049825f; dec dword ptr [rax-0x77]; ret; 
0x0000000043a7e9: push rsi; jmp far fword ptr [rcx]; 
0x00000000459306: push rsi; loopne 0x00000000004592cc; vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000466161: push rsi; mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x00000000442532: push rsi; mov rcx, [rsi-0x8]; mov [rdi-0xd], rdx; mov [rdi-0x8], rcx; ret; 
0x000000004424a2: push rsi; mov rcx, [rsi-0x8]; mov [rdi-0xe], rdx; mov [rdi-0x8], rcx; ret; 
0x00000000456cf7: push rsi; or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; lea rax, [rdi+0x1c]; ret; 
0x00000000455627: push rsi; or eax, 0x77f0ff3; movdqu [rdi+0xd], xmm2; ret; 
0x0000000042d1af: push rsi; or eax, [rax]; add [rbp-0x3d], ebx; nop [rax]; ret; 
0x000000004612f6: push rsi; or ebx, edi; jmp qword ptr [rsi+0xf]; 
0x0000000042da86: push rsi; or r8, [r8]; syscall; 
0x00000000455667: push rsi; psllq mm1, [rdi]; jg short 0x0000000000455674; movdqu [rdi+0xf], xmm2; ret; 
0x00000000456357: push rsi; psllq mm1, [rdi]; jg short 0x0000000000456364; movdqu [rdi+0xf], xmm2; ret; 
0x00000000431056: push rsi; push rbx; add [rax], al; cmovne rax, rdx; ret; 
0x0000000045c0b9: push rsi; ret; 
0x00000000492ff3: push rsi; ret; 
0x000000004592b5: push rsi; std; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000458696: push rsi; sub eax, edx; ret; 
0x00000000458686: push rsi; sub eax, edx; ret; 
0x00000000442742: push rsi; test dword ptr [rbx-0x76b703b2], 0x4f89f757; cld; ret; 
0x00000000472fb7: push rsp; add eax, 0xec91e800; stc; call qword ptr [rax-0x3f7c3977]; 
0x000000004a43b9: push rsp; and al, 0x10; call rax; 
0x0000000042bdda: push rsp; and al, 0x18; mov [rsp+0x10], r8; call rax; 
0x000000004917f7: push rsp; and al, 0x38; mov rcx, [rsp+0x40]; add rsp, 0x48; jmp qword ptr [rax]; 
0x00000000491775: push rsp; and al, 0x38; mov rcx, [rsp+0x40]; add rsp, 0x58; jmp qword ptr [rax]; 
0x0000000045cbca: push rsp; and al, 0x8; mov esi, 0x10; mov eax, 0x48; syscall; 
0x000000004348f7: push rsp; cmp ah, [rax]; sub eax, edx; vzeroupper; ret; 
0x0000000040a39f: push rsp; cmp edi, 0xe0000008; jne 0x000000000040a4a0; mov rax, 0x4dee00; ret; 
0x00000000466f5e: push rsp; mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000046a27c: push rsp; mov r9, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046b9e1: push rsp; mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x000000004684be: push rsp; mov r9, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x00000000467882: push rsp; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x0000000048ed68: push rsp; ret far; 
0x00000000428958: push rsp; ret; 
0x0000000048712e: push rsp; xchg ebp, eax; add [rcx+rax-0x16], cl; notrack jmp rdx; 
0x00000000472fb6: push sp; add eax, 0xec91e800; stc; call qword ptr [rax-0x3f7c3977]; 
0x00000000469d98: pushfq; add [rax], eax; add [rcx+0x3948fc51], cl; ret; 
0x00000000467db0: pushfq; sahf; cli; jmp qword ptr [rsi+0x66]; 
0x0000000048154e: pxor mm0, mm0; mov qword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x00000000490cd2: pxor mm0, mm0; mov qword ptr [rbx+0x10], 0x0; movups [rbx], xmm0; pop rbx; ret; 
0x00000000426959: pxor mm0, mm0; mov qword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000428665: pxor mm0, mm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x0000000048154d: pxor xmm0, xmm0; mov qword ptr [rax+0x50], 0x0; movups [rax+0x40], xmm0; pop rbx; ret; 
0x00000000490cd1: pxor xmm0, xmm0; mov qword ptr [rbx+0x10], 0x0; movups [rbx], xmm0; pop rbx; ret; 
0x00000000426958: pxor xmm0, xmm0; mov qword ptr [rbx+0x58], 0x0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000428664: pxor xmm0, xmm0; movups [rbx+0x48], xmm0; pop rbx; ret; 
0x00000000466f5b: rcl byte ptr [rax+0x41], 0x54; mov r9, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x0000000046a279: rcl byte ptr [rax+0x41], 0x54; mov r9, [rsp+0x18]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046b9de: rcl byte ptr [rax+0x41], 0x54; mov r9, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x50]; call rbx; 
0x000000004684bb: rcl byte ptr [rax+0x41], 0x54; mov r9, [rsp+0x30]; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call rbx; 
0x0000000046787f: rcl byte ptr [rax+0x41], 0x54; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call rbx; 
0x0000000046615e: rcl byte ptr [rax+0x41], 0x56; mov r9, [rsp+0x20]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call rbx; 
0x000000004653f5: rcl byte ptr [rax+0x53], 0x4c; mov ecx, [rsp+0x18]; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; call r14; 
0x00000000465b74: rcl byte ptr [rax+0x53], 0x4c; mov ecx, [rsp+0x20]; mov rsi, [rsp+0x58]; mov rdi, [rsp+0x60]; call r15; 
0x000000004694f0: rcl byte ptr [rax+0x53], 0x4c; mov ecx, [rsp+0x30]; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; call r15; 
0x00000000459166: rcl byte ptr [rax], 0x29; cmp edx, ecx; jle short 0x0000000000459184; movsxd rax, ecx; ret; 
0x0000000045658e: rcl byte ptr [rax], 0x4c; lea ebx, [rip+0x61269]; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004664c4: rcl byte ptr [rsi+0x6a], 0x0; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x58]; mov rax, [rsp+0x18]; call rax; 
0x00000000424782: rcr byte ptr [rbp+0x41], 0x1; pop rsp; ret; 
0x0000000042e902: rcr byte ptr [rbp+0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x00000000420ae2: rcr byte ptr [rbp+0x41], 0x5c; pop r13; pop r14; ret; 
0x00000000402855: rcr byte ptr [rbp+0x41], 0x5c; ret; 
0x0000000049e7b7: rcr byte ptr [rbp+0x5b], 0x1; ret; 
0x000000004a795f: rcr byte ptr [rbx+0x5d], 0x1; pop r12; pop r13; pop r14; ret; 
0x00000000420b78: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; pop r14; ret; 
0x00000000422555: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x00000000408e77: rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x0000000042e09a: rcr byte ptr [rbx+0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x000000004a3b68: rcr byte ptr [rbx+0x5d], 0xc3; nop [rax]; endbr64; ret; 
0x0000000045a862: rcr byte ptr [rbx-0x3d], 0x1; mov eax, 0x60; pop rbx; ret; 
0x0000000044ed7e: rcr byte ptr [rdi+0x49], 0x29; ror byte ptr [rax-0x73], 0x1; jl short 0x000000000044ed9e; and ecx, ebp; ret; 
0x00000000431b9c: rcr byte ptr [rdx+rax], 0x0; cmovne rax, rdx; ret; 
0x0000000042c64a: rcr dword ptr [rbx+0x48], 0x3d; jmp far fword ptr [rcx]; 
0x0000000046216f: rcr dword ptr [rbx+0x5d], 0xc1; loope 0x0000000000462178; pop r12; shl eax, cl; ret; 
0x0000000049c969: rcr dword ptr [rcx], 0xc0; and eax, 0x2; sub eax, 0x1; ret; 
0x0000000045957d: rep movsb [rdi], [rsi]; cld; ret; 
0x0000000045956f: rep movsb [rdi], [rsi]; ret; 
0x0000000048fdf0: rep movsq [rdi], [rsi]; mov rcx, [rdi+0x18]; mov rsi, [rdi+0x20]; mov rdi, [rdi+0x28]; bnd call r11; 
0x00000000426f19: rep ret; 
0x0000000045a2b7: rep stosb [rdi]; mov rax, rdx; ret; 
0x0000000042ce72: rep stosq [rdi]; pop rbp; ret; 
0x000000004013f1: ret far; 
0x0000000046ca6a: ret far; 
0x0000000040101a: ret; 
0x00000000428972: ret; 
0x00000000408908: ret; 
0x0000000040a828: rol al, 0xee; add [r13-0x3d], r11b; mov rax, 0x4dee80; pop rbp; ret; 
0x0000000040a472: rol al, 0xee; add r11b, r8b; nop [rax+rax]; mov rax, 0x4ded40; ret; 
0x00000000490dc0: rol bl, 0x1; mov eax, 0x1; ret; 
0x0000000042854f: rol bl, 0x1; mov eax, 0xffffffff; ret; 
0x00000000410961: rol bl, 0x1; nop [rax+rax]; xor eax, eax; ret; 
0x0000000043947e: rol bl, 0x1; xor eax, eax; ret; 
0x00000000458d55: rol bl, 0x48; mov eax, edi; ret; 
0x00000000428835: rol bl, 0x66; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000048b5e8: rol bl, 0x66; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000428875: rol bl, 0x66; nop [rax+rax]; endbr64; mov rax, [rdi+0x68]; ret; 
0x000000004285f4: rol bl, 0x66; nop [rax+rax]; mov eax, 0xffffffff; ret; 
0x00000000484202: rol bl, 0x66; nop [rax+rax]; nop; mov rax, 0x1; ret; 
0x00000000459741: rol byte ptr [r9+0xf], 0x1; adc [rbx], esp; ret; 
0x0000000044e606: rol byte ptr [rax+0x48], 0x1; clc; sub rax, rdx; vzeroupper; ret; 
0x00000000439346: rol byte ptr [rax+0x48], 0x1; clc; vzeroupper; ret; 
0x0000000040a7a2: rol byte ptr [rax+0x5d004dec], 0xc3; nop [rax]; mov rax, 0x4e11e0; pop rbp; ret; 
0x0000000040a7f2: rol byte ptr [rax+0x5d004ded], 0xc3; mov rax, 0x4dee40; pop rbp; ret; 
0x0000000040a831: rol byte ptr [rax+0x5d004dee], 0xc3; mov rax, 0x4def00; pop rbp; ret; 
0x00000000497dca: rol byte ptr [rax+r8], cl; syscall; 
0x0000000045cec3: rol byte ptr [rax+rax*8-0x38b7af8c], 0xc0; sar bh, 0xff; jmp qword ptr [rdi+rax*8]; 
0x0000000042228f: rol byte ptr [rax+rax*8-0x7cb7e98c], 0xc4; or [rax-0x1], bh; pop rbx; pop rbp; ret; 
0x00000000484242: rol byte ptr [rax+rax], 0x0; add bl, al; nop [rax+rax]; mov rax, 0x5; ret; 
0x00000000497d75: rol byte ptr [rax+rax], cl; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x00000000497dcb: rol byte ptr [rax+rax], cl; syscall; 
0x000000004681a9: rol byte ptr [rax+rcx*2], 0x39; ret; 
0x0000000046cd70: rol byte ptr [rax+rcx*2], 0x83; ret; 
0x0000000040a45a: rol byte ptr [rax-0x11], 0x4d; add bl, al; mov rax, 0x4ded00; ret; 
0x0000000040a7fb: rol byte ptr [rax-0x12], 0x4d; add [rbp-0x3d], bl; mov rax, 0x4dee00; pop rbp; ret; 
0x0000000040a4aa: rol byte ptr [rax-0x12], 0x4d; add bl, al; mov rax, 0x4e12a0; ret; 
0x0000000040a482: rol byte ptr [rax-0x13], 0x4d; add bl, al; nop [rax+rax]; mov rax, 0x4e11a0; ret; 
0x0000000040a4e2: rol byte ptr [rax-0x14], 0x4d; add bl, al; nop [rax+rax]; mov rax, 0x4dee80; ret; 
0x0000000042f82c: rol byte ptr [rax], 0x0; add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x0000000040100a: rol byte ptr [rax], 0x0; add [rax], al; test rax, rax; je short 0x0000000000401016; call rax; 
0x0000000041e144: rol byte ptr [rax], 0x1; add [rax], al; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000040a462: rol byte ptr [rax], 0xed; add r11b, r8b; nop [rax+rax]; mov rax, 0x4deec0; ret; 
0x0000000040a804: rol byte ptr [rax], 0xee; add [r13-0x3d], r11b; mov rax, 0x4e1260; pop rbp; ret; 
0x0000000040a83a: rol byte ptr [rax], 0xef; add [r13-0x3d], r11b; mov rax, 0x4def40; pop rbp; ret; 
0x0000000047c178: rol byte ptr [rbp-0x407af040], 0x1; or [rax], eax; add [rbx-0x4d77b], cl; dec dword ptr [rcx-0x4df73]; jmp far fword ptr [rcx]; 
0x000000004a1269: rol byte ptr [rbp-0x7b], 0xc0; jne 0x00000000004a11c0; add rsp, 0x38; ret; 
0x0000000040a760: rol byte ptr [rbp-0x7b], 0xc0; jne short 0x000000000040a76d; mov rax, 0x4e12e0; pop rbp; ret; 
0x00000000408856: rol byte ptr [rbx+0xfc3eae0], 0x1f; add [rax], r8b; mov eax, 0xffffffea; ret; 
0x00000000458b96: rol byte ptr [rbx+0xfc3ffd8], 0x1f; add [rax], r8b; xor eax, eax; ret; 
0x0000000049c96b: rol byte ptr [rbx-0x177cfd20], 0x1; ret; 
0x00000000484232: rol byte ptr [rbx], 0x0; add [rax], al; ret; 
0x000000004841f2: rol byte ptr [rbx], 0xc3; nop [rax+rax]; xor rax, rax; ret; 
0x0000000042e89b: rol byte ptr [rcx+0x5c], 0x41; pop rbp; ret; 
0x00000000459742: rol byte ptr [rcx+0xf], 0x1; adc [rbx], esp; ret; 
0x0000000045d528: rol byte ptr [rcx+0xf], cl; lahf; vpaddsw ymm0, ymm15, [rcx+0xf]; lahf; ret; 
0x00000000483d75: rol byte ptr [rcx+rdi], 0xf2; je short 0x0000000000483d7f; test edx, edx; jne short 0x0000000000483d70; ret; 
0x00000000484212: rol byte ptr [rcx], 0x0; add [rax], al; ret; 
0x00000000462a6e: rol byte ptr [rcx], 0x50; call rbx; 
0x00000000465ab2: rol byte ptr [rcx], 0x89; xor [rax-0x7d], ecx; ret; 
0x000000004841e2: rol byte ptr [rcx], 0xc3; nop [rax+rax]; add rax, 0x3; ret; 
0x00000000494733: rol byte ptr [rcx], 0xc7; test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000484272: rol byte ptr [rdi], 0x0; add [rax], al; ret; 
0x0000000043a5d7: rol byte ptr [rdi], 0x0; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000484222: rol byte ptr [rdx], 0x0; add [rax], al; ret; 
0x000000004841d9: rol byte ptr [rdx], 0xc3; nop [rax]; add rax, 0x1; ret; 
0x0000000045e9b0: rol byte ptr [rdx], cl; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045a8d2: rol byte ptr [rip+0x3d8d4800], 0x1; rol byte ptr [rip+0x736fe800], 0x1; sti; jmp qword ptr [rsi+0x66]; 
0x0000000045a8d9: rol byte ptr [rip+0x736fe800], 0x1; sti; jmp qword ptr [rsi+0x66]; 
0x0000000045a8d8: rol byte ptr [rip+0x736fe800], 0x1; sti; jmp qword ptr [rsi+0x66]; 
0x000000004847a4: rol byte ptr [rip-0x3f7ab800], cl; je short 0x00000000004847e0; call rax; 
0x00000000484262: rol byte ptr [rsi], 0x0; add [rax], al; ret; 
0x0000000043935f: rol ch, 0x1; std; xlat [rbx]; ret; 
0x00000000459b06: rol ch, 0x7e; jg short 0x0000000000459b4c; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000459c39: rol ch, 0x7e; jg short 0x0000000000459c7f; mov al, [0x77f8c5237f7ec1c4]; ret; 
0x00000000483552: rol ch, 0xf8; ja short 0x000000000048351a; nop [rax+rax]; xor eax, eax; ret; 
0x00000000482f76: rol ch, cl; std; xlat [rbx]; ret; 
0x000000004841bc: rol dword ptr [rax+0x1e740fe1], 0x1; ret; 
0x00000000438e94: rol dword ptr [rax+0x49], 0x29; ret far; 
0x00000000497ea4: rol dword ptr [rax+rax], 0x1; add rsp, 0x8; ret; 
0x00000000497eb4: rol dword ptr [rax+rax], 0x1; mov [rip+0x4d16a], rax; ret; 
0x00000000497e9d: rol dword ptr [rax+rax], 0x1; mov [rip+0x4d181], rax; add rsp, 0x8; ret; 
0x00000000497ebb: rol dword ptr [rax+rax], 0x1; ret; 
0x00000000499022: rol dword ptr [rax+rax], 0x66; add dword ptr [rdx+rax*2], 0x1; ret; 
0x00000000499019: rol dword ptr [rax+rax], 0x73; or al, 0x48; mov edx, [rip+0x4c113]; add word ptr [rdx+rax*2], 0x1; ret; 
0x000000004674b8: rol dword ptr [rax+rcx*2], 0x39; ret far; 
0x00000000482b00: rol dword ptr [rbp+0x311b75c0], 0xc0; vzeroupper; ret; 
0x00000000482884: rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x00000000482854: rol dword ptr [rbp-0x5c7af040], 0x0; add [rax], al; xor eax, eax; ret; 
0x00000000483487: rol dword ptr [rbp-0x5f7af040], 0x0; add [rax], al; mov rax, r8; vzeroupper; ret; 
0x00000000482ac3: rol dword ptr [rbp-0x6b7af040], 0x0; add [rax], al; xor eax, eax; vzeroupper; ret; 
0x000000004a7c16: rol dword ptr [rbx], cl; add [rax+0x39], cl; ret; 
0x00000000478672: rol dword ptr [rcx+0x5c], 0x41; pop rbp; mov rax, r9; pop r14; ret; 
0x000000004432eb: rol dword ptr [rcx+0x7], 0x0; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000043a4ce: rol dword ptr [rdi], 0x0; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x000000004a463e: rol dword ptr [rdx], 0x0; movzx eax, al; movsxd rax, [rcx+rax*4]; add rax, rcx; notrack jmp rax; 
0x0000000045a756: rol dword ptr [rip+0x4634800], 0x1; mov esi, 0x3ef00148; jmp rax; 
0x0000000045a786: rol dword ptr [rip+0xce8c100], 0x1; and eax, 0xf; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x0000000040cc83: ror al, 0x9; add bl, al; nop [rax+rax]; lea rax, [rip+0x9c8ce]; ret; 
0x0000000043dfdf: ror byte ptr [r8-0x7d], 0xef; lea r11, [rip+0x78984]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b5ff: ror byte ptr [r8-0x7d], 0xef; lea r11, [rip+0x7b1a4]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000422cac: ror byte ptr [r9+rcx*4-0xf], 0x4c; mov edi, edi; call r12; 
0x0000000040dc67: ror byte ptr [r9], 0x0; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000041594b: ror byte ptr [rax+0x1], 0x1; ret; 
0x0000000044e1a6: ror byte ptr [rax+0x1], 0xc8; add rax, rdi; vzeroupper; ret; 
0x0000000043908c: ror byte ptr [rax+0x1], 0xf8; add rax, rcx; ret; 
0x0000000044e518: ror byte ptr [rax+0x1], 0xf8; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x00000000439288: ror byte ptr [rax+0x1], 0xf8; add rax, rcx; vzeroupper; ret; 
0x00000000439202: ror byte ptr [rax+0x1], 0xf8; ret; 
0x00000000484393: ror byte ptr [rax+0x1], 0xf8; sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044e5d3: ror byte ptr [rax+0x1], 0xf8; sub rax, rdx; vzeroupper; ret; 
0x00000000439323: ror byte ptr [rax+0x1], 0xf8; vzeroupper; ret; 
0x0000000044e4b4: ror byte ptr [rax+0x1], cl; ror byte ptr [rax+0x29], 0x1; clc; ret; 
0x00000000483f39: ror byte ptr [rax+0x1], cl; ror byte ptr [rax+0x29], 0x1; clc; shr rax, 0x2; ret; 
0x0000000044e4b7: ror byte ptr [rax+0x29], 0x1; clc; ret; 
0x00000000483f3c: ror byte ptr [rax+0x29], 0x1; clc; shr rax, 0x2; ret; 
0x00000000426ee7: ror byte ptr [rax+0x29], 0x1; ror dword ptr [rax+0x39], 0x1; enter 0x2876, 0x48; mov edi, ebx; call qword ptr [rbp+0x20]; 
0x0000000048159c: ror byte ptr [rax+0x29], 0x1; ror dword ptr [rax+0x39], 0x1; enter 0x2b76, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x00000000427977: ror byte ptr [rax+0x29], 0x1; ror dword ptr [rax+0x39], 0x1; enter 0x3076, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x00000000425bd8: ror byte ptr [rax+0x29], 0x1; ror dword ptr [rax+0x39], 0x1; enter 0x3776, 0x48; mov edi, ebp; call qword ptr [rbx+0x88]; 
0x00000000426e31: ror byte ptr [rax+0x29], 0x1; ror dword ptr [rax+0x39], 0x1; enter 0x6676, 0x48; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x0000000048266b: ror byte ptr [rax+0x29], 0xc2; jbe 0x0000000000482910; add rax, rdi; add rax, rcx; ret; 
0x000000004989cb: ror byte ptr [rax+0x29], 0xc2; jbe 0x0000000000498c70; add rax, rdi; add rax, rcx; ret; 
0x000000004828d2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x0000000000482910; add rax, rdi; ret; 
0x000000004828e2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x10]; ret; 
0x000000004828f2: ror byte ptr [rax+0x29], 0xc2; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x20]; ret; 
0x00000000482902: ror byte ptr [rax+0x29], 0xc2; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x30]; ret; 
0x00000000498c32: ror byte ptr [rax+0x29], 0xc2; jbe short 0x0000000000498c70; add rax, rdi; ret; 
0x00000000498c42: ror byte ptr [rax+0x29], 0xc2; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x10]; ret; 
0x00000000498c52: ror byte ptr [rax+0x29], 0xc2; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x20]; ret; 
0x00000000498c62: ror byte ptr [rax+0x29], 0xc2; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x30]; ret; 
0x0000000042d7ae: ror byte ptr [rax+0x39], 0x1; ret; 
0x00000000482b13: ror byte ptr [rax+0x39], 0xc2; jbe short 0x0000000000482b80; add rax, rdi; vzeroupper; ret; 
0x00000000498e73: ror byte ptr [rax+0x39], 0xc2; jbe short 0x0000000000498ee0; add rax, rdi; vzeroupper; ret; 
0x00000000429310: ror byte ptr [rax+0x39], 0xfa; setae al; ret; 
0x0000000041d868: ror byte ptr [rax+0x63], cl; adc al, 0x96; add rdx, rsi; notrack jmp rdx; 
0x000000004a3a16: ror byte ptr [rax+0xf], 0x45; and al, 0x10; add rsp, 0x28; ret; 
0x00000000483fc6: ror byte ptr [rax+0xf], cl; ret; 
0x000000004590e8: ror byte ptr [rax-0x1], 0xc0; add rsp, 0x100; sub rax, rdx; ret; 
0x000000004590e5: ror byte ptr [rax-0x1], 0xc0; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x00000000439476: ror byte ptr [rax-0x2d], 0xfa; movzx edx, dl; sub eax, edx; ret; 
0x0000000044e3f6: ror byte ptr [rax-0x2d], 0xfa; test rdx, rdx; je short 0x000000000044e410; bsf rax, rdx; ret; 
0x0000000044e399: ror byte ptr [rax-0x2d], 0xfa; test rdx, rdx; je short 0x000000000044e420; bsf rax, rdx; ret; 
0x00000000464703: ror byte ptr [rax-0x39], 0xc0; sar bh, 0xff; jmp qword ptr [rbx+rcx*4+0x18]; 
0x00000000474ff5: ror byte ptr [rax-0x39], 0xc0; sar bh, 0xff; jmp qword ptr [rbx+rcx*4]; 
0x0000000045b958: ror byte ptr [rax-0x39], 0xc0; sar bh, 0xff; jmp qword ptr [rsp+rax*2-0x75]; 
0x00000000481d11: ror byte ptr [rax-0x73], 0x1; adc eax, 0x11d7; lea rax, [rip+0xed0]; cmove rax, rdx; ret; 
0x00000000481cd1: ror byte ptr [rax-0x73], 0x1; adc eax, 0x1607; lea rax, [rip+0x13e0]; cmove rax, rdx; ret; 
0x00000000431d21: ror byte ptr [rax-0x73], 0x1; adc eax, 0x1c407; lea rax, [rip+0x1bfc0]; cmove rax, rdx; ret; 
0x00000000430fe1: ror byte ptr [rax-0x73], 0x1; adc eax, 0x1d4d7; lea rax, [rip+0x1d330]; cmove rax, rdx; ret; 
0x000000004988d1: ror byte ptr [rax-0x73], 0x1; adc eax, 0x3a7; lea rax, [rip+0x70]; cmove rax, rdx; ret; 
0x00000000431ce1: ror byte ptr [rax-0x73], 0x1; adc eax, 0x7547; lea rax, [rip+0x7330]; cmove rax, rdx; ret; 
0x00000000410953: ror byte ptr [rax-0x73], 0x1; adc eax, 0xa2b45; movsxd rax, [rcx+rax*4]; add rax, rdx; ret; 
0x00000000481dd1: ror byte ptr [rax-0x73], 0x1; adc eax, 0xb47; lea rax, [rip+0x810]; cmove rax, rdx; ret; 
0x00000000483621: ror byte ptr [rax-0x73], 0x1; adc eax, 0xc57; lea rax, [rip+0x9b0]; cmove rax, rdx; ret; 
0x0000000044ed82: ror byte ptr [rax-0x73], 0x1; jl short 0x000000000044ed9e; and ecx, ebp; ret; 
0x00000000473c2a: ror byte ptr [rax-0x73], 0x34; ret; 
0x0000000042c192: ror byte ptr [rax-0x73], 0x3c; ret; 
0x00000000499c38: ror byte ptr [rax-0x73], 0x3d; outsd dx, [rsi]; and al, 0x3; add al, ch; ret far; 
0x0000000049ba0d: ror byte ptr [rax-0x73], 0x3d; ret far; 
0x00000000439222: ror byte ptr [rax-0x73], 0x44; cmp [rax], ah; ret; 
0x00000000439212: ror byte ptr [rax-0x73], 0x44; cmp [rax], dl; ret; 
0x000000004391f2: ror byte ptr [rax-0x73], 0x44; cmp al, dh; ret; 
0x0000000042ad30: ror byte ptr [rax-0x75], 0x46; or [rax-0x77], cl; ret; 
0x0000000045b7d1: ror byte ptr [rax-0x75], 0x4c; and al, 0x20; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x000000004151fe: ror byte ptr [rax-0x77], 0x1; fisttp word ptr [rdi], st; mov dh, 0x43; add [rax-0x7d], ecx; ret; 
0x00000000409f13: ror byte ptr [rax-0x77], 0x1; ret far; 
0x00000000421da9: ror byte ptr [rax-0x77], 0x1; ret; 
0x00000000480739: ror byte ptr [rax-0x77], 0x48; adc [rax-0x77], cl; push rax; movups [rax], xmm0; ret; 
0x00000000426872: ror byte ptr [rax-0x77], 0x57; sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x0000000048506f: ror byte ptr [rax-0x77], 0xe2; mov eax, 0x10; syscall; 
0x000000004246e9: ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x00000000423cd3: ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rax+0x80]; 
0x00000000423fd5: ror byte ptr [rax-0x77], cl; out dx, eax; call qword ptr [rbx+0x80]; 
0x00000000425195: ror byte ptr [rax-0x7b], 0xd2; jne short 0x00000000004251a0; ret; 
0x0000000048e4ae: ror byte ptr [rax-0x7b], 0xf6; je short 0x000000000048e4b7; mov [rsi], rdi; mov rax, r8; ret; 
0x0000000048bf06: ror byte ptr [rax-0x7d], 0x1; ret; 
0x000000004681a6: ror byte ptr [rax-0x7d], 0x1; rol byte ptr [rax+rcx*2], 0x39; ret; 
0x0000000044e603: ror byte ptr [rax-0x7d], 0xc0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000439343: ror byte ptr [rax-0x7d], 0xc0; add rax, rdi; vzeroupper; ret; 
0x00000000439333: ror byte ptr [rax-0x7d], 0xc0; and [rax+0x1], cl; clc; vzeroupper; ret; 
0x0000000045a9ee: ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000403847: ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000049eb6b: ror byte ptr [rax-0x7d], 0xc4; or [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x00000000402561: ror byte ptr [rax-0x7d], 0xc4; or bl, al; nop [rax+rax]; xor eax, eax; ret; 
0x00000000485037: ror byte ptr [rax-0x7d], 0xc4; pop rax; ret; 
0x000000004a4fc9: ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000425ef5: ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d], bl; ret; 
0x000000004a482f: ror byte ptr [rax-0x7d], 0xc4; sbb [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x0000000044070f: ror byte ptr [rax-0x7d], 0xea; lea r11, [rip+0x76255]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dfe0: ror byte ptr [rax-0x7d], 0xef; lea r11, [rip+0x78984]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b600: ror byte ptr [rax-0x7d], 0xef; lea r11, [rip+0x7b1a4]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004590eb: ror byte ptr [rax-0x7f], 0xc4; add [rcx], al; add [rax], al; sub rax, rdx; ret; 
0x0000000041e1b0: ror byte ptr [rax-0x7f], 0xc4; sbb [rcx], al; add [rax], al; ret; 
0x0000000048e523: ror byte ptr [rax-0x9], 0xd8; test cl, cl; cmove r8, rax; mov rax, r8; ret; 
0x0000000040b6ae: ror byte ptr [rbp+0x138890], 0x0; cmovns eax, edx; add rsp, 0x8; ret; 
0x0000000040b6ee: ror byte ptr [rbp+0x177090], 0x0; cmovns eax, edx; add rsp, 0x8; ret; 
0x0000000040b66e: ror byte ptr [rbp+0xfa090], 0x0; cmovns eax, edx; add rsp, 0x8; ret; 
0x00000000455353: ror byte ptr [rbp+rcx*4+0x1d], cl; adc eax, 0x49000623; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559cf: ror byte ptr [rbp+rcx*4+0x1d], cl; sbb [rip+0x63490006], ebx; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559a6: ror byte ptr [rbp+rcx*4+0x1d], cl; sbb eax, 0x63490006; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456993: ror byte ptr [rbp+rcx*4+0x1d], cl; test eax, 0x4900060e; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045c0e3: ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x0000000045ce58: ror byte ptr [rcx+0x12eb8fe], cl; add [rax], al; xor edi, edi; syscall; 
0x0000000046b4f8: ror byte ptr [rcx+0x3948fc51], cl; ret; 
0x000000004a29d6: ror byte ptr [rcx+0x63], 0x44; test [rax], eax; add rax, r13; notrack jmp rax; 
0x00000000425566: ror byte ptr [rcx+0x63], 0x4; or dword ptr [rcx+rax-0x28], 0x3e; jmp rax; 
0x00000000497c14: ror byte ptr [rcx+rcx*4+0x2b], 0x5b; pop rbp; pop r12; pop r13; ret; 
0x00000000467246: ror byte ptr [rcx+rcx*4+0x5c], 0x24; sub [rcx-0x77], cl; ret; 
0x00000000422a5d: ror byte ptr [rcx+rcx*4-0x11], 0x4c; lea ecx, [rsp+0x18]; call rbp; 
0x00000000483ae8: ror byte ptr [rcx+rcx*4-0x19], 0x4c; lea ecx, [rsp+0x30]; call rbx; 
0x000000004216e9: ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x80]; 
0x00000000421cb5: ror byte ptr [rcx+rcx*4-0x1], cl; call qword ptr [rbx+0x80]; 
0x0000000041e18b: ror byte ptr [rcx+rcx*4-0x32], cl; mov edi, 0x2; mov eax, 0xe; syscall; 
0x0000000041ef0a: ror byte ptr [rcx+rcx*4-0x40], 0x5b; pop rbp; ret; 
0x00000000473143: ror byte ptr [rcx+rcx*4-0xa], cl; mov rdi, r15; mov [rbp-0x94c], r9d; mov [rbp-0x940], r11d; call rax; 
0x00000000422cad: ror byte ptr [rcx+rcx*4-0xf], 0x4c; mov edi, edi; call r12; 
0x00000000495da8: ror byte ptr [rcx-0x3f], 0xe3; and [rcx+0x9], cl; ret; 
0x00000000498229: ror byte ptr [rcx-0x49f0fbad], 0xc0; pop rbx; pop rbp; pop r12; ret; 
0x0000000047612a: ror byte ptr [rcx-0x4ef73], 0x1; jmp far fword ptr [rcx]; 
0x0000000047691a: ror byte ptr [rcx-0x4ef73], cl; jmp far fword ptr [rcx]; 
0x0000000045dc8e: ror byte ptr [rcx-0x77], 0x1; or [r9-0x75], cl; add [rbx+0x94901e0], eax; ret; 
0x00000000464fa8: ror byte ptr [rcx-0x77], cl; ret far; 
0x00000000420c06: ror byte ptr [rcx-0xc916ed], 0xff; jmp qword ptr [rsi-0x70]; 
0x0000000040dc68: ror byte ptr [rcx], 0x0; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000040dbb6: ror byte ptr [rcx], 0x0; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x0000000041db6b: ror byte ptr [rdi+0x63], cl; adc al, 0x93; add r10, r11; notrack jmp r10; 
0x0000000046ffa2: ror byte ptr [rdi], 0x0; add [rax], al; syscall; 
0x00000000428667: ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x00000000459689: ror byte ptr [rdi], 0x1; adc [rdi+rdx-0x40], edi; ret; 
0x0000000041e0a7: ror byte ptr [rdi], 0x1; mov dh, 0x11; test dl, dl; jne short 0x000000000041e088; ret; 
0x00000000451180: ror byte ptr [rdi], 0x28; jmp qword ptr [r14+0x66]; 
0x0000000043b826: ror byte ptr [rdi], 0x29; pop rdi; adc [rdx+0x9], dh; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000045cdf5: ror byte ptr [rdi], 0x5; cmp rax, 0xfffffffffffff000; ja short 0x000000000045ce08; ret; 
0x00000000409289: ror byte ptr [rdi], 0x84; lock add [rax], al; add [rax-0x77], cl; ret; 
0x00000000420681: ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x00000000410fb1: ror byte ptr [rdi], 0x84; nop; add al, [rax]; add [rax-0x39], cl; ret; 
0x0000000042e69e: ror byte ptr [rdi], 0x84; ret far; 
0x00000000476f9f: ror byte ptr [rdi], 0x84; ret; 
0x0000000045e3c7: ror byte ptr [rdi], 0x85; adc eax, 0x49000007; mov edi, [rdi]; call rbx; 
0x0000000045e235: ror byte ptr [rdi], 0x85; jg short 0x000000000045e23d; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000045e28c: ror byte ptr [rdi], 0x85; loop 0x000000000045e298; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000045e39a: ror byte ptr [rdi], 0x85; mov [rdx], al; add [rax], al; mov rdi, [r15]; call rbx; 
0x00000000476121: ror byte ptr [rdi], 0x85; mov [rip-0x76bc0000], al; ror byte ptr [rcx-0x4ef73], 0x1; jmp far fword ptr [rcx]; 
0x0000000045e44e: ror byte ptr [rdi], 0x85; mov al, 0x2; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000042b05c: ror byte ptr [rdi], 0x85; ret far; 
0x00000000465f1c: ror byte ptr [rdi], 0x85; ret; 
0x0000000045c70e: ror byte ptr [rdi], 0x88; ret far; 
0x0000000046dcf8: ror byte ptr [rdi], 0x94; ret; 
0x00000000462a69: ror byte ptr [rdi], cl; mov dh, 0xc0; add eax, 0x1; push rax; call rbx; 
0x00000000483e1f: ror byte ptr [rdi], cl; test [rdx+0x48000000], bl; bsf eax, edx; shr rax, 0x2; ret; 
0x0000000048315b: ror byte ptr [rdi], cl; test [rsi+0x48000000], bl; bsf eax, edx; ret; 
0x00000000481d1c: ror byte ptr [rsi], 0x1; add [rax], al; cmove rax, rdx; ret; 
0x000000004856ae: ror cl, 0xb8; add [rax], eax; add [rax], al; ret; 
0x00000000482cda: ror dword ptr [rax+0x21], 0xce; je 0x0000000000482e10; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x00000000426eea: ror dword ptr [rax+0x39], 0x1; enter 0x2876, 0x48; mov edi, ebx; call qword ptr [rbp+0x20]; 
0x0000000048159f: ror dword ptr [rax+0x39], 0x1; enter 0x2b76, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x0000000042797a: ror dword ptr [rax+0x39], 0x1; enter 0x3076, 0x48; mov edi, ebx; call qword ptr [rbp+0x30]; 
0x00000000425bdb: ror dword ptr [rax+0x39], 0x1; enter 0x3776, 0x48; mov edi, ebp; call qword ptr [rbx+0x88]; 
0x00000000472459: ror dword ptr [rax+0x39], 0x1; enter 0x6176, 0x4d; movsxd esp, esp; mov rdx, r12; call qword ptr [r13+0x38]; 
0x00000000425064: ror dword ptr [rax+0x39], 0x1; enter 0x6676, 0x31; idiv byte ptr [rdx+0x2]; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000426e34: ror dword ptr [rax+0x39], 0x1; enter 0x6676, 0x48; mov edi, ebx; call qword ptr [rbp+0x68]; 
0x00000000478888: ror dword ptr [rax+0x39], 0x1; enter 0x7a76, 0x48; movsxd ebx, ebx; mov rdx, rbx; call qword ptr [r13+0x38]; 
0x0000000048e3bc: ror dword ptr [rax+0x39], 0xd1; jne short 0x000000000048e398; mov eax, [rcx]; ret; 
0x0000000046144e: ror dword ptr [rax+0x63], 0x1; test [rax], r8d; add rax, rbp; notrack jmp rax; 
0x0000000042c644: ror dword ptr [rax-0x3f], 0xe9; or [rbx+0x3d485bc1], eax; jmp far fword ptr [rcx]; 
0x0000000042c656: ror dword ptr [rax-0x3f], 0xe9; or al, 0x83; shr dword ptr [rsi+0x48], 0x3d; jmp far fword ptr [rdi+0x32760000]; 
0x0000000045c807: ror dword ptr [rax-0x73], 0x40; inc esi; jmp far fword ptr [r15]; 
0x00000000426815: ror dword ptr [rax-0x7b], 0xd2; jne short 0x0000000000426808; ret; 
0x000000004806bd: ror dword ptr [rax-0x7b], 0xd2; jne short 0x00000000004806b0; ret; 
0x000000004674b5: ror dword ptr [rax-0x7d], 0x1; rol dword ptr [rax+rcx*2], 0x39; ret far; 
0x0000000045e82f: ror dword ptr [rax], 0x1; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045a7d5: ror dword ptr [rcx+0xe181d0], 0xfc; add eax, [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000004802e9: ror dword ptr [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000049254e: ror dword ptr [rcx+rcx*4-0x40], 0x1; ret; 
0x00000000475513: ror dword ptr [rcx], 0x0; add [rax-0x80], al; jmp qword ptr [rdi+rcx]; 
0x0000000040c22c: ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d379]; ret; 
0x0000000040c21c: ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d380]; ret; 
0x0000000040c224: ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d388]; ret; 
0x0000000040c1e4: ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d39d]; ret; 
0x0000000040c1ec: ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d39e]; ret; 
0x0000000040c1ac: ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d3bc]; ret; 
0x0000000040c214: ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d3f1]; ret; 
0x0000000040c213: ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d3f1]; ret; 
0x0000000040c20c: ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d3f2]; ret; 
0x0000000040c204: ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d3f4]; ret; 
0x0000000040c1fc: ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d3f6]; ret; 
0x0000000040c1cc: ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d3ff]; ret; 
0x0000000040c1bc: ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d408]; ret; 
0x0000000040c1d4: ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0xbf610]; ret; 
0x0000000040c164: ror dword ptr [rcx], cl; add bl, al; nop [rax+rax]; lea rax, [rip+0x9d47f]; ret; 
0x00000000437bd4: ror dword ptr [rdi-0x73], 0x14; or bh, [rsi]; jmp r10; 
0x00000000426e74: ror dword ptr [rdi], 0x11; cmp [r11+0x5d], bl; pop r12; ret; 
0x0000000042c86a: ror dword ptr [rdi], 0x11; push 0x6e0f4966; ret; 
0x00000000464f0d: ror dword ptr [rdi], 0x11; ret; 
0x00000000480d99: ror dword ptr [rdi], 0x11; xor [rcx+0x5d5b7453], cl; pop r12; ret; 
0x0000000045d3ea: ror dword ptr [rdi], 0x84; lar eax, [rax]; add [rcx-0x7d], cl; ret far; 
0x0000000043a758: ror dword ptr [rdi], 0x85; adc [rdx], cl; add [rax], al; xor eax, eax; ret; 
0x0000000043ae64: ror dword ptr [rdi], 0x85; add al, 0x3; add [rax], al; xor eax, eax; ret; 
0x0000000043ac36: ror dword ptr [rdi], 0x85; add eax, 0xc0310000; ret; 
0x0000000043abb6: ror dword ptr [rdi], 0x85; cmpsb [rsi], [rdi]; add eax, 0xc0310000; ret; 
0x0000000043aef4: ror dword ptr [rdi], 0x85; je short 0x000000000043aefb; add [rax], al; xor eax, eax; ret; 
0x0000000043a9eb: ror dword ptr [rdi], 0x85; jno short 0x000000000043a9f7; add [rax], al; xor eax, eax; ret; 
0x0000000043aab3: ror dword ptr [rdi], 0x85; mov ch, 0x6; add [rax], al; xor eax, eax; ret; 
0x0000000043a730: ror dword ptr [rdi], 0x85; sub al, 0xa; add [rax], al; xor eax, eax; ret; 
0x0000000046bb58: ror dword ptr [rdi], cl; test [rcx+rax], bh; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x000000004241d4: ror dword ptr [rdi], cl; xchg [rip+0x48000002], ah; lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x000000004a150d: ror dword ptr [rdi], cl; xchg esp, eax; ret; 
0x0000000041ec2d: ror eax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000041ec0f: ror edx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x00000000426814: ror qword ptr [r8-0x7b], 0xd2; jne short 0x0000000000426808; ret; 
0x000000004806bc: ror qword ptr [r8-0x7b], 0xd2; jne short 0x00000000004806b0; ret; 
0x0000000041ec2c: ror rax, 0x11; xor rax, fs:[0x30]; call rax; 
0x0000000041ec0e: ror rdx, 0x11; xor rdx, fs:[0x30]; call rdx; 
0x0000000041189a: sahf; add [rax], al; add [rax-0x77], cl; mov [rsi+0x10], rsi; syscall; 
0x0000000045ba0e: sahf; add al, 0x0; add [rax-0x39], cl; ret; 
0x00000000404c43: sahf; add al, [rax]; mov rax, rbx; pop rbx; ret; 
0x00000000404c7d: sahf; add al, [rax]; ret; 
0x00000000467db1: sahf; cli; jmp qword ptr [rsi+0x66]; 
0x000000004143d5: sahf; idiv bh; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000479892: sahf; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x00000000430c16: sahf; nop [rax+rax]; mov rsi, r12; call rax; 
0x0000000040c1f3: sahf; ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d39d]; ret; 
0x000000004a3bfd: sar ah, 0xff; jmp qword ptr [rsi+0xf]; 
0x00000000492737: sar ah, cl; jmp qword ptr [rsi+0xf]; 
0x0000000048fa67: sar bh, 0xff; call far fword ptr [rbx+0x64]; 
0x00000000484d01: sar bh, 0xff; call qword ptr [rbx+0x64]; 
0x00000000412c70: sar bh, 0xff; dec dword ptr [rax-0x39]; ret; 
0x00000000462861: sar bh, 0xff; dec dword ptr [rbp+rcx*4+0x7b]; jmp qword ptr [rbp+rax*2-0x75]; 
0x00000000464a6c: sar bh, 0xff; dec dword ptr [rbx-0x8b63]; jmp qword ptr [rcx+rcx*4+0x18]; 
0x0000000041322f: sar bh, 0xff; dec dword ptr [rbx-0xd34b]; jmp qword ptr [rcx+rcx*4+0x30]; 
0x00000000412fc7: sar bh, 0xff; dec dword ptr [rbx-0xd363]; jmp qword ptr [rcx+rcx*4+0x18]; 
0x00000000413151: sar bh, 0xff; dec dword ptr [rbx-0xd373]; jmp qword ptr [rcx+rcx*4+0x8]; 
0x0000000045c69b: sar bh, 0xff; inc dword ptr [rbp+0x31]; jmp qword ptr [rdi+rax*8]; 
0x00000000411ad7: sar bh, 0xff; jmp qword ptr [rax+rcx*2+0x3]; 
0x00000000411603: sar bh, 0xff; jmp qword ptr [rbx+rax*4+0x38]; 
0x00000000464707: sar bh, 0xff; jmp qword ptr [rbx+rcx*4+0x18]; 
0x0000000049f4c3: sar bh, 0xff; jmp qword ptr [rbx+rcx*4+0x30]; 
0x00000000474ff9: sar bh, 0xff; jmp qword ptr [rbx+rcx*4]; 
0x00000000464720: sar bh, 0xff; jmp qword ptr [rcx+rcx*4+0x18]; 
0x0000000049f4db: sar bh, 0xff; jmp qword ptr [rcx+rcx*4+0x1]; 
0x0000000041f393: sar bh, 0xff; jmp qword ptr [rdi+rax*8]; 
0x00000000450fd1: sar bh, 0xff; jmp qword ptr [rsi+0x66]; 
0x0000000045b95c: sar bh, 0xff; jmp qword ptr [rsp+rax*2-0x75]; 
0x0000000045be37: sar bh, 0xff; push rdi; fsub st, dword ptr [rcx+rcx*4+0x1]; or rax, 0xffffffffffffffff; ret; 
0x0000000045bedb: sar bh, 0xff; push rdi; fsub st, dword ptr [rcx+rcx*4+0x2]; mov eax, 0xffffffff; ret; 
0x0000000045c113: sar bh, 0xff; push rdi; fsub st, dword ptr [rcx+rcx*4+0x2]; mov rax, 0xffffffffffffffff; ret; 
0x0000000049e905: sar bh, 0xff; ret; 
0x0000000049e8e2: sar bh, 0xff; sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000049ea0f: sar bh, 0xff; sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x00000000498f62: sar byte ptr [r8+0xd9], 0x1; syscall; 
0x0000000042979b: sar byte ptr [rax+0x10], 0x48; cmovne eax, edx; mov [rip+0xbb58c], rax; ret; 
0x00000000403048: sar byte ptr [rax+0x19], 0x89; ret; 
0x00000000408f4a: sar byte ptr [rax+0xb], 0x48; add esp, 0x18; pop rbp; pop r12; ret; 
0x00000000498f63: sar byte ptr [rax+0xd9], 0x1; syscall; 
0x0000000040270f: sar byte ptr [rax-0x16], 0x45; test eax, eax; je short 0x0000000000402720; pop rbp; ret; 
0x00000000402ea1: sar byte ptr [rax-0x16], 0x45; test eax, eax; je short 0x0000000000402eb0; pop rbp; ret; 
0x0000000040dbec: sar byte ptr [rax], 0x4c; cmovne esp, eax; mov rax, r12; pop r12; ret; 
0x00000000431acc: sar byte ptr [rbp+0x2], 0x1; add [rax-0x73], cl; add eax, 0x27e19; cmove rax, rdx; ret; 
0x0000000048ddd0: sar byte ptr [rbp+rbp*8-0x15], cl; ret; 
0x000000004215fc: sar byte ptr [rbx], 0x4e; add [rax-0x39], cl; ret; 
0x00000000407fa4: sar byte ptr [rcx-0x47], 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x000000004077d3: sar byte ptr [rcx], 0xd1; je short 0x00000000004077e0; ret; 
0x00000000403378: sar byte ptr [rdi+0x74], 0x4; ret; 
0x0000000045c037: sar byte ptr [rdi-0x64], 0xb8; add [rcx], eax; add [rax], al; syscall; 
0x000000004a7d37: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x3d232]; syscall; 
0x00000000497db7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4d246]; syscall; 
0x00000000497b33: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4d4c6]; syscall; 
0x00000000495aaf: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4f542]; syscall; 
0x0000000049596f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x4f682]; syscall; 
0x000000004718f7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x73672]; syscall; 
0x00000000471832: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x73737]; syscall; 
0x00000000471690: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x738d9]; syscall; 
0x000000004715b6: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x739b3]; syscall; 
0x00000000463de7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x81c12]; syscall; 
0x00000000463c7b: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x81d7e]; syscall; 
0x00000000463b5b: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x81e9e]; syscall; 
0x0000000045b413: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0x8a5e6]; syscall; 
0x00000000430a93: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb1d36]; syscall; 
0x0000000042de93: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4936]; syscall; 
0x0000000042de33: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4996]; syscall; 
0x0000000042da73: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4d56]; syscall; 
0x0000000042d813: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb4fb6]; syscall; 
0x0000000042d23b: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb558e]; syscall; 
0x0000000042d203: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb55c6]; syscall; 
0x0000000042edf3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb5f26]; syscall; 
0x0000000042e3a7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xb6962]; syscall; 
0x0000000042a504: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba805]; syscall; 
0x0000000042a4d3: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xba846]; syscall; 
0x0000000042a253: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbaac6]; syscall; 
0x00000000429d2f: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbafea]; syscall; 
0x00000000428945: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc354]; syscall; 
0x00000000428385: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbc914]; syscall; 
0x00000000428019: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcc80]; syscall; 
0x00000000427cd7: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbcfc2]; syscall; 
0x00000000426771: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe528]; syscall; 
0x000000004264d1: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbe7c8]; syscall; 
0x0000000042617d: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xbeb1c]; syscall; 
0x00000000420183: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc5876]; syscall; 
0x0000000041f132: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6767]; syscall; 
0x0000000041eff2: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc68a7]; syscall; 
0x0000000041edbb: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6ade]; syscall; 
0x0000000041ed80: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6b19]; syscall; 
0x0000000041ec9c: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xc6bfd]; syscall; 
0x000000004156d0: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xcf151]; syscall; 
0x00000000413d2d: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd0abc]; syscall; 
0x00000000412bae: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd1b93]; syscall; 
0x00000000412b80: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd1bc1]; syscall; 
0x00000000412a34: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xd1d0d]; syscall; 
0x000000004012cc: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip+0xe356d]; syscall; 
0x0000000040143b: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000042e37c: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov eax, ebx; syscall; 
0x0000000042e21c: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, r12; mov eax, 0xca; syscall; 
0x0000000042f7af: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, r13; mov eax, 0xca; syscall; 
0x000000004303f0: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, r15; mov eax, 0xca; syscall; 
0x0000000042b0b1: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, rbp; mov eax, 0xca; syscall; 
0x0000000042f175: sar byte ptr [rdx+0x1], cl; mov esi, 0x81; mov rdi, rbx; mov eax, 0xca; syscall; 
0x00000000429339: sar byte ptr [rdx+0x2], cl; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000044db09: sar byte ptr [rdx], 0x48; lea eax, [rdi+rax]; cmp [rax], sil; cmovne rax, rdx; ret; 
0x000000004987ea: sar byte ptr [rdx], cl; cmp edx, ecx; jle 0x0000000000498890; ret; 
0x0000000045de21: sar byte ptr [rsi+0x1], cl; call r12; 
0x0000000046f13f: sar byte ptr [rsi], 0x1; jmp r8; 
0x00000000401bf7: sar byte ptr [rsi], 0x1; jmp rax; 
0x0000000043b72a: sar byte ptr [rsi], 0x41; jmp rcx; 
0x0000000044646b: sar ch, 0xff; jmp qword ptr [rdx-0xf]; 
0x00000000463edb: sar cl, cl; jmp qword ptr [rsi+0xf]; 
0x00000000445e29: sar dword ptr [rax+rcx*2+0x11], 0x1; imul edi, ebp, 0x487cd162; adc [rcx-0x2], esi; vmovups [r9-0x40], zmm7; ret; 
0x000000004462c1: sar dword ptr [rax+rcx*2+0x11], 0x1; jmp qword ptr [r10-0x2f]; 
0x00000000445e30: sar dword ptr [rax+rcx*2+0x11], 0x1; jno short 0x0000000000445e34; vmovups [r9-0x40], zmm7; ret; 
0x00000000445e37: sar dword ptr [rax+rcx*2+0x11], 0x1; jns short 0x0000000000445e3c; ret; 
0x0000000045a832: sar dword ptr [rax], 0x1; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x0000000045a1d0: sar dword ptr [rbp+0x48], 0x1; out 0x49, eax; jmp qword ptr [rdx-0x2f]; 
0x00000000407d26: sar dword ptr [rcx], 0xd6; setb al; ret; 
0x00000000459b0d: sar dword ptr [rsi+0x7f], 0x23; vzeroupper; ret; 
0x000000004038e5: sar eax, 0x1f; and eax, 0xffffff83; ret; 
0x0000000040aad8: sar eax, 0x1f; and eax, 0xffffffdf; ret; 
0x00000000403968: sar eax, 0x1f; and eax, 0xfffffffe; add rsp, 0x18; ret; 
0x00000000411a9c: sar eax, 0x3; je short 0x0000000000411ab6; lea rbx, [rax-0x1]; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x0000000049edac: sar eax, 0x3; pop rbx; pop rbp; pop r12; ret; 
0x000000004a39bc: sar eax, 0x3f; and eax, 0x1; mov [rsi], eax; mov rax, [rdi+0x98]; ret; 
0x0000000045a04d: sar ebp, 0x1; jg short 0x000000000045a09b; jmp qword ptr [rdx-0x2f]; 
0x0000000047b60e: sar ebp, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x0000000047bb0b: sar ebx, 0x2; mov rdx, rbx; call qword ptr [rax+0x38]; 
0x0000000048168c: sar ecx, 0x2; lea eax, [rcx-0x1]; ret; 
0x000000004797d4: sar edx, 0x2; call qword ptr [r12+0x38]; 
0x00000000481736: sar edx, 0x2; sub eax, edx; ret; 
0x00000000490cbb: sar edx, 0xff; call qword ptr [rax-0x5e1f00d]; 
0x00000000439478: sar edx, cl; movzx edx, dl; sub eax, edx; ret; 
0x00000000483157: sar edx, cl; test rdx, rdx; je 0x0000000000483200; bsf rax, rdx; ret; 
0x0000000044e3f8: sar edx, cl; test rdx, rdx; je short 0x000000000044e410; bsf rax, rdx; ret; 
0x0000000044e39b: sar edx, cl; test rdx, rdx; je short 0x000000000044e420; bsf rax, rdx; ret; 
0x000000004831c7: sar edx, cl; test rdx, rdx; je short 0x00000000004831f0; bsf rax, rdx; ret; 
0x00000000459fc7: sar esi, 0x1; jg short 0x0000000000459fef; vzeroupper; ret; 
0x0000000045a152: sar esi, 0x1; jg short 0x000000000045a17a; vzeroupper; ret; 
0x0000000047fb3b: sar esi, 0x1; std; call qword ptr [rax-0x5e1f00d]; 
0x0000000047b60d: sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x00000000411a9b: sar rax, 0x3; je short 0x0000000000411ab6; lea rbx, [rax-0x1]; nop [rax]; call qword ptr [rbp+rbx*8]; 
0x0000000049edab: sar rax, 0x3; pop rbx; pop rbp; pop r12; ret; 
0x000000004a39bb: sar rax, 0x3f; and eax, 0x1; mov [rsi], eax; mov rax, [rdi+0x98]; ret; 
0x0000000047bb0a: sar rbx, 0x2; mov rdx, rbx; call qword ptr [rax+0x38]; 
0x0000000048168b: sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x000000004797d2: sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x000000004797d3: sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x00000000481735: sar rdx, 0x2; sub eax, edx; ret; 
0x00000000439477: sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x00000000483156: sar rdx, cl; test rdx, rdx; je 0x0000000000483200; bsf rax, rdx; ret; 
0x0000000044e3f7: sar rdx, cl; test rdx, rdx; je short 0x000000000044e410; bsf rax, rdx; ret; 
0x0000000044e39a: sar rdx, cl; test rdx, rdx; je short 0x000000000044e420; bsf rax, rdx; ret; 
0x000000004831d6: sar rdx, cl; test rdx, rdx; je short 0x00000000004831f0; bsf rax, rdx; ret; 
0x000000004831c6: sar rdx, cl; test rdx, rdx; je short 0x00000000004831f0; bsf rax, rdx; ret; 
0x000000004269cf: sbb [r11+0x480c2474], cl; mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000004077ec: sbb [r13-0x18], r14b; mov eax, [rsi+0x14]; cmp [rdi+0x14], eax; sete al; ret; 
0x00000000423474: sbb [r15], cl; adc [rbx+0x28], eax; pop rbx; ret; 
0x000000004296ab: sbb [r8+0x39], cl; ret; 
0x00000000491848: sbb [r8+0x5a], bl; pop rbx; ret; 
0x0000000048fdf5: sbb [r8-0x75], r9b; ja short 0x000000000048fe1b; mov rdi, [rdi+0x28]; bnd call r11; 
0x00000000490285: sbb [r8-0x75], r9b; ja short 0x00000000004902ab; mov rdi, [rdi+0x28]; bnd call r11; 
0x000000004904e1: sbb [r8-0x75], r9b; ja short 0x0000000000490507; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000049b534: sbb [r8], al; add [rax], al; add al, ch; and [rbp-0x4], eax; call qword ptr [rax-0x4c117]; 
0x000000004a6797: sbb [r9-0x75], r9b; push rbp; adc [rax-0x7d], cl; ret; 
0x0000000046082e: sbb [rax+0x1], ecx; ret far; 
0x0000000049ca0c: sbb [rax+0x39], cl; ret far; 
0x000000004296ac: sbb [rax+0x39], cl; ret; 
0x0000000045fb73: sbb [rax+0x3b], cl; sbb [rdi+0x12], sil; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x00000000491849: sbb [rax+0x5a], bl; pop rbx; ret; 
0x00000000461407: sbb [rax+0x63], cl; add al, 0x83; add rax, rbx; notrack jmp rax; 
0x0000000048bd53: sbb [rax+rax], al; add [rcx-0x77], cl; ret; 
0x0000000041ec2a: sbb [rax-0x3f], cl; enter 0x6411, 0x48; xor eax, [0x30]; call rax; 
0x00000000455f23: sbb [rax-0x73], cl; jg short 0x0000000000455f40; jne 0x00000000004564f0; ret; 
0x00000000455f46: sbb [rax-0x73], ecx; jg short 0x0000000000455f64; jne 0x00000000004564f0; ret; 
0x0000000046a85d: sbb [rax-0x75], cl; and al, 0x28; mov rsi, [rsp+0x50]; mov rdi, [rsp+0x48]; call r13; 
0x0000000048fdf6: sbb [rax-0x75], cl; ja short 0x000000000048fe1b; mov rdi, [rdi+0x28]; bnd call r11; 
0x00000000490286: sbb [rax-0x75], cl; ja short 0x00000000004902ab; mov rdi, [rdi+0x28]; bnd call r11; 
0x000000004904e2: sbb [rax-0x75], cl; ja short 0x0000000000490507; mov rdi, [rdi+0x28]; bnd call r11; 
0x0000000045c0db: sbb [rax-0x75], cl; je short 0x000000000045c104; adc [rcx-0x77], al; ror byte ptr [rbx+0x3108247c], 0xc0; syscall; 
0x000000004653fc: sbb [rax-0x75], cl; je short 0x0000000000465425; push rax; mov rdi, [rsp+0x58]; call r14; 
0x00000000466f63: sbb [rax-0x75], cl; je short 0x0000000000466f8c; push rax; mov rdi, [rsp+0x58]; call rbx; 
0x00000000467f75: sbb [rax-0x75], cl; je short 0x0000000000467f9e; mov rdi, [rsp+0x40]; call r14; 
0x0000000046a281: sbb [rax-0x75], cl; je short 0x000000000046a2aa; pop rax; mov rdi, [rsp+0x50]; call rbx; 
0x0000000046cdaf: sbb [rax-0x75], cl; je short 0x000000000046cdd8; mov rdi, [rsp+0x38]; call r15; 
0x000000004a445a: sbb [rax-0x75], cl; or [rax-0x77], cl; ret; 
0x00000000404ece: sbb [rax-0x77], cl; fcomp st, dword ptr [rbx+0x5d]; ret; 
0x00000000426876: sbb [rax-0x77], cl; movups [rdi+0x8], xmm0; ret; 
0x00000000421b5e: sbb [rax-0x77], cl; ret far; 
0x00000000411894: sbb [rax-0x77], ecx; or [rax+0x9e], r15b; mov [rsi], rsi; mov [rsi+0x10], rsi; syscall; 
0x0000000040a91b: sbb [rax-0x7b], cl; shl byte ptr [rsi+rax-0x1], 0xe0; nop [rax]; xor eax, eax; ret; 
0x0000000040a955: sbb [rax-0x7b], cl; shl byte ptr [rsp+rbp+0x48], 0x89; call rax; 
0x0000000049e896: sbb [rax-0x7b], ecx; div byte ptr [rbp+0x2c]; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x000000004841d6: sbb [rax-0x7d], ecx; rol byte ptr [rdx], 0xc3; nop [rax]; add rax, 0x1; ret; 
0x0000000049b535: sbb [rax], al; add [rax], al; add al, ch; and [rbp-0x4], eax; call qword ptr [rax-0x4c117]; 
0x0000000045be25: sbb [rax], al; add [rax], al; syscall; 
0x0000000045c0a8: sbb [rax], al; add [rax], al; test eax, eax; jne short 0x000000000045c0c0; syscall; 
0x0000000045f8a8: sbb [rax], eax; add [rax], al; syscall; 
0x0000000047577b: sbb [rax], eax; add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x00000000434bfe: sbb [rax], ecx; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000402968: sbb [rbp+0x41], bl; pop rsp; ret; 
0x000000004077ed: sbb [rbp-0x18], dh; mov eax, [rsi+0x14]; cmp [rdi+0x14], eax; sete al; ret; 
0x00000000408619: sbb [rbx+0x41], bl; pop rsp; ret; 
0x000000004269d0: sbb [rbx+0x480c2474], cl; mov edi, [rsp]; add rsp, 0x10; pop rbx; jmp rax; 
0x000000004a48e2: sbb [rbx+0x5d], bl; mov eax, r8d; ret; 
0x0000000042e654: sbb [rbx+0x5d], bl; pop r12; jmp rax; 
0x0000000042910c: sbb [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x00000000421f09: sbb [rbx+0x5d], bl; ret; 
0x0000000042853b: sbb [rbx-0x2fd6efb9], cl; ret; 
0x0000000049a9ff: sbb [rbx], eax; add al, ch; jb short 0x000000000049a9fd; jmp qword ptr [rsi+0xf]; 
0x0000000042a846: sbb [rcx+0x1], cl; ret; 
0x0000000042bddc: sbb [rcx+rcx*4+0x44], cl; and al, 0x10; call rax; 
0x0000000045b654: sbb [rcx+rcx*4-0x1f], cl; mov rdx, r13; call rbx; 
0x0000000041efac: sbb [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x000000004a6798: sbb [rcx-0x75], cl; push rbp; adc [rax-0x7d], cl; ret; 
0x000000004731ef: sbb [rcx-0x75], cl; push rsi; and [rcx+rcx*4-0x1], cl; sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000049954f: sbb [rcx-0x77], cl; vminsd xmm9, xmm4, [rcx+rcx*4-0x18]; pop r12; pop r13; ret; 
0x0000000041e1b4: sbb [rcx], al; add [rax], al; ret; 
0x00000000422553: sbb [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000045fb77: sbb [rdi+0x12], dh; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000045fb76: sbb [rdi+0x12], sil; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000045fb0b: sbb [rdi+0x16], dh; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000040aac8: sbb [rdi+0xd], dh; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000045fb99: sbb [rdi-0x10], bh; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000045fb31: sbb [rdi-0x10], bh; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x0000000045fb98: sbb [rdi-0x10], dil; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x00000000423475: sbb [rdi], cl; adc [rbx+0x28], eax; pop rbx; ret; 
0x0000000049b284: sbb [rdx], al; add [rax], al; add [rax-0x77], cl; ret; 
0x00000000467da5: sbb [rip+0x3d8d4800], al; or [rcx], ebx; add eax, 0x9e9ce800; cli; jmp qword ptr [rsi+0x66]; 
0x000000004559d3: sbb [rip+0x63490006], ebx; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000467dac: sbb [rip-0x61631800], eax; cli; jmp qword ptr [rsi+0x66]; 
0x00000000480e86: sbb [rsi+0x1f], dh; mov rax, [rax+0xe0]; mov esi, 0xffffffff; call qword ptr [rax+0x18]; 
0x00000000455ad3: sbb [rsi+rax], ebx; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004836ec: sbb ah, 0xfd; dec dword ptr [rcx-0x75]; cmp al, 0x24; movzx esi, bl; call rbp; 
0x0000000040b5c3: sbb ah, al; or [rax], eax; ret; 
0x0000000045d145: sbb al, 0x0; add [rax], al; syscall; 
0x000000004017c4: sbb al, 0x0; test al, al; jne short 0x00000000004017cb; ret; 
0x000000004905e6: sbb al, 0x24; add rsp, 0x18; bnd jmp r11; 
0x0000000048fdcd: sbb al, 0x24; add rsp, 0x30; bnd jmp r11; 
0x0000000048fedf: sbb al, 0x24; add rsp, 0x30; bnd ret; 
0x000000004088a3: sbb al, 0x48; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000455fd9: sbb al, 0x48; lea edi, [rdi+0x1c]; jne 0x00000000004564f0; ret; 
0x00000000455b36: sbb al, 0x6; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b06: sbb al, 0x6; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455a02: sbb al, 0x6; add [rcx+0x63], cl; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000048b130: sbb al, 0x6b; clc; jmp qword ptr [rsi+0x2e]; 
0x0000000046e3ab: sbb al, 0xb9; jmp qword ptr [rsi-0x70]; 
0x00000000430b61: sbb al, 0xb; add al, ch; xlat [rbx]; ret; 
0x000000004a43e0: sbb al, 0xcc; mov rsi, [rbx]; call rax; 
0x0000000040b553: sbb al, 0xe0; or [rax], eax; ret; 
0x00000000426190: sbb al, 0xeb; or eax, [rax]; syscall; 
0x000000004a38a3: sbb al, [rax]; add [rax], al; mov edi, 0x1; call rax; 
0x0000000040b58b: sbb al, ah; or [rax], eax; ret; 
0x00000000417bbb: sbb al, ch; jmp rbx; 
0x00000000407572: sbb bh, al; and [rbx], al; add [rax], al; add cl, ch; ret; 
0x0000000041f6ed: sbb bh, dh; dec dword ptr [rcx-0x77]; ret; 
0x0000000042eb63: sbb bl, al; nop [rax]; mov rsi, [rsp+0x18]; add rsp, 0x18; jmp rax; 
0x0000000045629a: sbb bl, dh; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000004555cb: sbb bl, dh; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x0000000045560a: sbb bl, dh; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x00000000456299: sbb bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cl; ret; 
0x000000004555ca: sbb bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], cx; ret; 
0x00000000455609: sbb bl, r14b; movq [rdi], mm0; mov [rdi+0x10], rdx; mov [rdi+0x18], ecx; ret; 
0x00000000455f7b: sbb cl, [rax-0x73]; jg short 0x0000000000455f9a; jne 0x00000000004564f0; ret; 
0x0000000049e805: sbb cl, [rax-0x7b]; div byte ptr [rbp+0x25]; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000455f7f: sbb cl, [rdi]; test [rdx+0x5], ebp; add [rax], al; ret; 
0x00000000431994: sbb dl, al; add [rax], al; lea rdx, [rip+0x118b1]; cmovne rax, rdx; ret; 
0x0000000045a8d1: sbb dl, al; add eax, 0x3d8d4800; rol byte ptr [rip+0x736fe800], 0x1; sti; jmp qword ptr [rsi+0x66]; 
0x000000004905eb: sbb dl, dh; jmp r11; 
0x0000000042c840: sbb dword ptr [rcx-0x4], 0xffffffff; jmp qword ptr [rsi+0x49]; 
0x0000000048f39b: sbb dword ptr [rip-0x74b70009], 0x560ca35; add [rax-0x7d], cl; ret; 
0x0000000040534e: sbb eax, 0x10c48348; pop rbp; ret; 
0x00000000456005: sbb eax, 0x1d7f8d48; jne 0x00000000004564f0; ret; 
0x0000000045d701: sbb eax, 0x1f0f3ceb; add [rax-0x73], cl; push rbx; or [rax-0x7d], cl; ret; 
0x00000000412955: sbb eax, 0x2948000d; ret far; 
0x000000004a6715: sbb eax, 0x3e576; test rbx, rbx; jne short 0x00000000004a6700; pop rbx; ret; 
0x0000000048b692: sbb eax, 0x4000003; ret; 
0x0000000048b5e2: sbb eax, 0x4000003; xor eax, eax; ret; 
0x0000000041ea82: sbb eax, 0x441f0f; add [rbx+rcx*4+0x63], cl; or [rax-0x7d], cl; ret; 
0x00000000442cd4: sbb eax, 0x46f00ff2; or eax, 0xef00ff2; movdqu [rdi+0xd], xmm0; movdqu [rdi], xmm1; ret; 
0x0000000047ca1f: sbb eax, 0x49000636; mov ebx, ecx; mov dword ptr [rbp-0x4f8], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000456009: sbb eax, 0x4e0850f; add [rax], al; ret; 
0x000000004569f7: sbb eax, 0x60e48; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004569c2: sbb eax, 0x60e7d; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456996: sbb eax, 0x60ea9; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456980: sbb eax, 0x60ebf; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045695e: sbb eax, 0x60ee1; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456939: sbb eax, 0x60f06; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045691c: sbb eax, 0x60f23; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004568c4: sbb eax, 0x60f7b; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045668b: sbb eax, 0x610e0; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000456592: sbb eax, 0x61269; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045657c: sbb eax, 0x6127f; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045655c: sbb eax, 0x6129f; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455c17: sbb eax, 0x61b54; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455bee: sbb eax, 0x61b7d; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455bce: sbb eax, 0x61b9d; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455ba5: sbb eax, 0x61bc6; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b76: sbb eax, 0x61bf5; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b57: sbb eax, 0x61c14; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455ad2: sbb eax, 0x61c19; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b35: sbb eax, 0x61c36; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455b05: sbb eax, 0x61c66; movsxd rcx, [r11+r8*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455a00: sbb eax, 0x61ceb; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559d2: sbb eax, 0x61d19; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559a9: sbb eax, 0x61d42; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004553b7: sbb eax, 0x622b4; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455382: sbb eax, 0x622e9; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455356: sbb eax, 0x62315; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455340: sbb eax, 0x6232b; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045531e: sbb eax, 0x6234d; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004552f9: sbb eax, 0x62372; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004552dc: sbb eax, 0x6238f; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000455284: sbb eax, 0x623e7; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559aa: sbb eax, 0x63490006; or al, 0x93; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x00000000444e53: sbb eax, 0x721d8; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444af5: sbb eax, 0x72536; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444ca0: sbb eax, 0x725cb; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444975: sbb eax, 0x726b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444a38: sbb eax, 0x72833; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004447f5: sbb eax, 0x72836; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004448b8: sbb eax, 0x729b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444675: sbb eax, 0x729b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444738: sbb eax, 0x72b33; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004444f5: sbb eax, 0x72b36; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004445b9: sbb eax, 0x72cb2; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444375: sbb eax, 0x72cb6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444438: sbb eax, 0x72e33; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004441f5: sbb eax, 0x72e36; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004442b8: sbb eax, 0x72fb3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444075: sbb eax, 0x72fb6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444138: sbb eax, 0x73133; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443ef5: sbb eax, 0x73136; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443fb8: sbb eax, 0x732b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443d75: sbb eax, 0x732b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443e38: sbb eax, 0x73433; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443bf5: sbb eax, 0x73436; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443cb8: sbb eax, 0x735b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443a75: sbb eax, 0x735b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443b38: sbb eax, 0x73733; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004438f5: sbb eax, 0x73736; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004439b8: sbb eax, 0x738b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443775: sbb eax, 0x738b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443838: sbb eax, 0x73a33; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004435f5: sbb eax, 0x73a36; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044347c: sbb eax, 0x73baf; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004436b8: sbb eax, 0x73bb3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443538: sbb eax, 0x73d33; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443271: sbb eax, 0x73dba; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004433fb: sbb eax, 0x73e70; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443294: sbb eax, 0x73fd7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443351: sbb eax, 0x7419a; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x000000004432ea: sbb eax, 0x741c1; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000044231f: sbb eax, 0x7480c; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441ff5: sbb eax, 0x74b36; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044218c: sbb eax, 0x74bdf; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441e75: sbb eax, 0x74cb6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441f38: sbb eax, 0x74e33; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441cf5: sbb eax, 0x74e36; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441db8: sbb eax, 0x74fb3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441b75: sbb eax, 0x74fb6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441c38: sbb eax, 0x75133; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004419f5: sbb eax, 0x75136; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441ab9: sbb eax, 0x752b2; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441875: sbb eax, 0x752b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441938: sbb eax, 0x75433; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004416f5: sbb eax, 0x75436; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004417b8: sbb eax, 0x755b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441575: sbb eax, 0x755b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441638: sbb eax, 0x75733; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004413f5: sbb eax, 0x75736; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004414b8: sbb eax, 0x758b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441275: sbb eax, 0x758b6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441338: sbb eax, 0x75a33; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004410f5: sbb eax, 0x75a36; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004411b8: sbb eax, 0x75bb3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440f75: sbb eax, 0x75bb6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441038: sbb eax, 0x75d33; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440df5: sbb eax, 0x75d36; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440eb8: sbb eax, 0x75eb3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440c75: sbb eax, 0x75eb6; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440d38: sbb eax, 0x76033; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440af5: sbb eax, 0x76036; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044097c: sbb eax, 0x761af; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440bb8: sbb eax, 0x761b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440716: sbb eax, 0x76255; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440659: sbb eax, 0x76312; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440a38: sbb eax, 0x76333; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440791: sbb eax, 0x7639a; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044056e: sbb eax, 0x763fd; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004408fb: sbb eax, 0x76470; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004404a3: sbb eax, 0x764c8; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044077d: sbb eax, 0x765ee; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440851: sbb eax, 0x7679a; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x000000004407ef: sbb eax, 0x767bc; sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x0000000043f484: sbb eax, 0x774e7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f3e6: sbb eax, 0x77585; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f334: sbb eax, 0x77637; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f296: sbb eax, 0x776d5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f1e4: sbb eax, 0x77787; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f146: sbb eax, 0x77825; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f094: sbb eax, 0x778d7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eff6: sbb eax, 0x77975; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ef44: sbb eax, 0x77a27; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eea6: sbb eax, 0x77ac5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043edf4: sbb eax, 0x77b77; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ed56: sbb eax, 0x77c15; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eca4: sbb eax, 0x77cc7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ec06: sbb eax, 0x77d65; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eb54: sbb eax, 0x77e17; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043eab9: sbb eax, 0x77eb2; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ea04: sbb eax, 0x77f67; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e966: sbb eax, 0x78005; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e8b4: sbb eax, 0x780b7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e816: sbb eax, 0x78155; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e764: sbb eax, 0x78207; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e6c6: sbb eax, 0x782a5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e614: sbb eax, 0x78357; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e576: sbb eax, 0x783f5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e4c4: sbb eax, 0x784a7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e426: sbb eax, 0x78545; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e374: sbb eax, 0x785f7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e2d6: sbb eax, 0x78695; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e224: sbb eax, 0x78747; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e186: sbb eax, 0x787e5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043e0d8: sbb eax, 0x78893; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dfe7: sbb eax, 0x78984; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043df28: sbb eax, 0x78a43; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043debe: sbb eax, 0x78aad; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ddbf: sbb eax, 0x78bac; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043db85: sbb eax, 0x78c26; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dcfa: sbb eax, 0x78c71; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043daab: sbb eax, 0x78d00; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dc87: sbb eax, 0x78e64; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043dc2d: sbb eax, 0x78e7e; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043caa4: sbb eax, 0x79d07; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ca06: sbb eax, 0x79da5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c954: sbb eax, 0x79e57; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c8b6: sbb eax, 0x79ef5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c804: sbb eax, 0x79fa7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c766: sbb eax, 0x7a045; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c6b4: sbb eax, 0x7a0f7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c616: sbb eax, 0x7a195; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c564: sbb eax, 0x7a247; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c4c6: sbb eax, 0x7a2e5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c414: sbb eax, 0x7a397; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c376: sbb eax, 0x7a435; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c2c4: sbb eax, 0x7a4e7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c226: sbb eax, 0x7a585; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c174: sbb eax, 0x7a637; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c0d9: sbb eax, 0x7a6d2; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043c024: sbb eax, 0x7a787; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bf86: sbb eax, 0x7a825; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bed4: sbb eax, 0x7a8d7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043be36: sbb eax, 0x7a975; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bd84: sbb eax, 0x7aa27; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bce6: sbb eax, 0x7aac5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bc34: sbb eax, 0x7ab77; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bb96: sbb eax, 0x7ac15; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043bae4: sbb eax, 0x7acc7; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ba46: sbb eax, 0x7ad65; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b994: sbb eax, 0x7ae17; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b8f6: sbb eax, 0x7aeb5; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b844: sbb eax, 0x7af67; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b7a6: sbb eax, 0x7b005; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b6f8: sbb eax, 0x7b0b3; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b607: sbb eax, 0x7b1a4; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b548: sbb eax, 0x7b263; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b4de: sbb eax, 0x7b2cd; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b3df: sbb eax, 0x7b3cc; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b31a: sbb eax, 0x7b491; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b2a7: sbb eax, 0x7b684; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043b246: sbb eax, 0x7b6a5; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x0000000043a5d5: sbb eax, 0x7c096; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a55b: sbb eax, 0x7c110; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a4cc: sbb eax, 0x7c19f; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a2c1: sbb eax, 0x7c3aa; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a18f: sbb eax, 0x7c4dc; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a0c9: sbb eax, 0x7c5a2; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a04b: sbb eax, 0x7c620; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439fb6: sbb eax, 0x7c6b5; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439db9: sbb eax, 0x7c8b2; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439c87: sbb eax, 0x7c9e4; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439b7c: sbb eax, 0x7caef; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000045e092: sbb eax, 0x7d8b49; call rbx; 
0x0000000040bfdf: sbb eax, 0x83000001; call far fword ptr [rax+0x174840f]; 
0x0000000042555f: sbb eax, 0x8fb74; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x00000000425591: sbb eax, 0x8fb9e; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x000000004255c3: sbb eax, 0x8fbc8; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x000000004255f5: sbb eax, 0x8fbf2; movzx eax, al; movsxd rax, [r11+rax*4]; add rax, r11; notrack jmp rax; 
0x0000000041db63: sbb eax, 0x96fb0; movzx r10d, r10b; movsxd r10, [r11+r10*4]; add r10, r11; notrack jmp r10; 
0x000000004288d1: sbb eax, 0xbc3e2; add dword ptr [rip+0xbc3d7], 0x1; pop rbx; ret; 
0x0000000044e1a2: sbb eax, 0xc0bc0ff3; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x0000000040d863: sbb eax, 0xc30009bd; lea rax, [rip+0x9bd1d]; ret; 
0x0000000040d86b: sbb eax, 0xc30009bd; lea rax, [rip+0x9bd1e]; ret; 
0x0000000040d87b: sbb eax, 0xc30009bd; lea rax, [rip+0x9bd76]; ret; 
0x00000000403083: sbb eax, 0xdf078; mov eax, 0x1; pop rbx; mov dword ptr [rip+0xdf070], 0x1; ret; 
0x0000000040223b: sbb eax, 0xe2090; xor eax, eax; pop rbx; ret; 
0x00000000425177: sbb eax, 0xe6ebe074; nop [rax]; xor eax, eax; ret; 
0x00000000458b97: sbb eax, 0xffffffff; ret; 
0x0000000041b2be: sbb eax, [rax]; add [rbx-0x7bf0fe08], al; ret; 
0x00000000455b78: sbb eax, [rsi]; add [rbx+0x63], cl; or al, 0x83; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000049c96a: sbb eax, eax; and eax, 0x2; sub eax, 0x1; ret; 
0x00000000408855: sbb eax, eax; and eax, 0xffffffea; ret; 
0x000000004398d7: sbb eax, eax; or eax, 0x1; ret; 
0x000000004a4363: sbb eax, eax; ret; 
0x00000000458b95: sbb eax, eax; sbb eax, 0xffffffff; ret; 
0x0000000040b593: sbb eax, esp; or [rax], eax; ret; 
0x00000000455fa9: sbb ecx, [rax-0x73]; jg short 0x0000000000455fc9; jne 0x00000000004564f0; ret; 
0x000000004982c1: sbb edi, [rbx-0x7]; dec dword ptr [rax-0x77]; ret; 
0x0000000049e675: sbb edx, ebx; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000049c1fa: sbb esi, esi; and esi, 0x2; syscall; 
0x0000000048f931: sbb esp, [rbx]; clc; jmp qword ptr [rsi+0x2e]; 
0x0000000040b5a3: sbb esp, eax; or [rax], eax; ret; 
0x00000000467da4: sbb fs:[rip+0x3d8d4800], al; or [rcx], ebx; add eax, 0x9e9ce800; cli; jmp qword ptr [rsi+0x66]; 
0x0000000049e673: sbb r10, r11; mov [rdi+0x8], r10; mov eax, ecx; adc eax, eax; ret; 
0x00000000407e1e: scasb [rdi]; insb [rdi], dx; add al, [rax]; nop [rax+rax]; ret; 
0x00000000413a2e: scasb [rdi]; ret; 
0x00000000429d43: scasd [rdi]; or eax, [rax]; syscall; 
0x00000000488d6d: scasd [rdi]; ret far; 
0x00000000421a50: scasd [rdi]; ret; 
0x000000004017c1: seta al; sbb al, 0x0; test al, al; jne short 0x00000000004017cb; ret; 
0x00000000429314: setae al; ret; 
0x00000000407d29: setb al; ret; 
0x000000004077f6: sete al; ret; 
0x0000000046ff7a: sete dh; xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x0000000046ff79: sete sil; xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x0000000049eb69: setne al; add rsp, 0x8; movzx eax, al; neg eax; ret; 
0x00000000440653: sfence; lea r11, [rip+0x76312]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044049e: sfence; lea r11, [rip+0x764c8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043db7f: sfence; lea r11, [rip+0x78c26]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043daa6: sfence; lea r11, [rip+0x78d00]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000040a4c2: shl al, 0x12; add bl, r8b; nop [rax+rax]; mov rax, 0x4dec80; ret; 
0x0000000049eb72: shl bh, 0xd8; ret; 
0x0000000043931f: shl bl, 0x1; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000040a80d: shl byte ptr [rax+0x12], 0x4e; add [rbp-0x3d], bl; mov rax, 0x4e1220; pop rbp; ret; 
0x0000000041ed1b: shl byte ptr [rax+0x42], 0x4e; add [rax+0x39], cl; ret; 
0x0000000044e652: shl byte ptr [rax+0x48], 0x1; clc; sub rax, rdx; vzeroupper; ret; 
0x00000000439374: shl byte ptr [rax+0x48], 0x1; clc; vzeroupper; ret; 
0x0000000040a772: shl byte ptr [rax+0x5d004e11], 0xc3; nop [rax]; mov rax, 0x4dec40; pop rbp; ret; 
0x0000000040a81f: shl byte ptr [rax+0x5d004e12], 0xc3; mov rax, 0x4deec0; pop rbp; ret; 
0x0000000040a9bd: shl byte ptr [rax+rbp+0x53], 0x48; mov ebx, esi; mov rdi, rsi; call rax; 
0x00000000403843: shl byte ptr [rax+rbx*2+0x31], 0xc0; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x000000004985d5: shl byte ptr [rax+rcx+0x5b], 0x5d; pop r12; ret; 
0x0000000046018d: shl byte ptr [rax+rdx+0x48], cl; lea edi, [rcx+rsi+0x20]; jmp rdx; 
0x0000000040a816: shl byte ptr [rax], 0x12; add [rbp-0x3d], r11b; mov rax, 0x4e12a0; pop rbp; ret; 
0x0000000044e5e6: shl byte ptr [rax], 0x48; add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x00000000439336: shl byte ptr [rax], 0x48; add eax, edi; vzeroupper; ret; 
0x0000000041266a: shl byte ptr [rax], cl; or eax, 0x3d8b4c00; ret; 
0x0000000045c14d: shl byte ptr [rbp+0x10], 0xb8; add [rax], eax; add [rax], al; syscall; 
0x0000000045c31d: shl byte ptr [rbp+0x10], 0xb8; add eax, [rax]; add [rax], al; syscall; 
0x0000000042615d: shl byte ptr [rbp+0x10], cl; sub dword ptr [rip+0xbeb49], 0x1; ret; 
0x0000000048fa44: shl byte ptr [rbp+0x19], 0x48; mov dword ptr [rbx], 0x0; pop rbx; or dword ptr [rip+0x536f2], 0x1; ret; 
0x0000000048c79f: shl byte ptr [rbp+0x2], cl; call rax; 
0x00000000484632: shl byte ptr [rbp+0x2b], 0x4c; mov eax, eax; shr rax, 0x2; vzeroupper; ret; 
0x000000004834c2: shl byte ptr [rbp+0x2b], 0x4c; mov eax, eax; vzeroupper; ret; 
0x00000000497d6f: shl byte ptr [rbp+0x36], 0x83; sub eax, 0x4d29b; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x0000000049930a: shl byte ptr [rbp+0x3], cl; mov [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x0000000045e4a4: shl byte ptr [rbp+0x3b], 0x49; mov edi, [rdi]; call rbx; 
0x0000000045a2a6: shl byte ptr [rbp+0x4], cl; mov rax, rdi; ret; 
0x000000004391d2: shl byte ptr [rbp+0x4b], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea rax, [rdi+rax+0x30]; ret; 
0x00000000425198: shl byte ptr [rbp+0x5], cl; ret; 
0x0000000049e97b: shl byte ptr [rbp+0x62], 0xc7; add al, [rax]; add [rax], al; add [rax+0x2], bh; ret; 
0x00000000497e47: shl byte ptr [rbp+0x6], cl; sub dword ptr [rdi], 0x1; ret; 
0x0000000040a42b: shl byte ptr [rbp+0x72], 0x48; mov eax, 0x4ded80; ret; 
0x0000000040a763: shl byte ptr [rbp+0x7], 0x48; mov eax, 0x4e12e0; pop rbp; ret; 
0x0000000045e4cd: shl byte ptr [rbp+0x7d], 0x49; mov edi, [rdi]; call rbx; 
0x0000000042e46b: shl byte ptr [rbp+0xb], 0xc7; add eax, 0xb68a8; add [rax], al; add [rax], al; ret; 
0x00000000485242: shl byte ptr [rbp+0xb], cl; ret; 
0x00000000428929: shl byte ptr [rbp+0xc], cl; sub dword ptr [rip+0xbc37d], 0x1; ret; 
0x0000000040a900: shl byte ptr [rbp+rax-0x1], 0xe0; nop [rax]; mov eax, 0xffffffff; ret; 
0x0000000044e1a0: shl byte ptr [rbp+rbx-0xd], 0xf; mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x00000000483ea0: shl byte ptr [rbp+rcx+0x48], cl; bsf eax, edx; shr rax, 0x2; ret; 
0x000000004841b8: shl byte ptr [rbp+rdx-0x78], cl; rol dword ptr [rax+0x1e740fe1], 0x1; ret; 
0x000000004284fd: shl byte ptr [rbp-0x10], 0xc3; add rdx, 0x60; mov rax, [rdi]; mov [rdx], rax; ret; 
0x00000000458ec0: shl byte ptr [rbp-0x13], cl; lea rax, [rcx-0x1]; ret; 
0x00000000426818: shl byte ptr [rbp-0x13], cl; ret; 
0x0000000043348b: shl byte ptr [rbp-0x1e], 0x31; shr byte ptr [rcx], 0xc8; ret; 
0x00000000434a4c: shl byte ptr [rbp-0x1f], 0x29; enter 0xf8c5, 0x77; ret; 
0x000000004294e6: shl byte ptr [rbp-0x21], cl; nop [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x00000000438ed1: shl byte ptr [rbp-0x24], 0x29; enter 0xf8c5, 0x77; ret; 
0x0000000041e0ac: shl byte ptr [rbp-0x27], cl; ret; 
0x0000000043935d: shl byte ptr [rbp-0x30], 0xc5; std; xlat [rbx]; ret; 
0x0000000044e0fd: shl byte ptr [rbp-0x50], 0xc5; std; xlat [rbx]; ret; 
0x00000000483d7c: shl byte ptr [rbp-0xf], cl; ret; 
0x000000004289b0: shl byte ptr [rbx+0x25], 0x1; movzx eax, byte ptr [rax]; ret; 
0x0000000040aa42: shl byte ptr [rbx+0x48], cl; mov esi, ebp; mov rdi, r13; call rdx; 
0x00000000421b82: shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x00000000439282: shl byte ptr [rbx+rbx-0xd], 0xf; mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x00000000401cd4: shl byte ptr [rcx+rcx-0x41], 0x70; cmp ecx, [rsi]; jmp rax; 
0x00000000402554: shl byte ptr [rcx+rcx-0x75], 0x0; add rsp, 0x8; ret; 
0x000000004855c2: shl byte ptr [rcx+rcx-0x80], 0x78; jmp far fword ptr [rdi]; 
0x0000000044e3fc: shl byte ptr [rcx+rdx+0x48], cl; bsf eax, edx; ret; 
0x000000004a00cf: shl byte ptr [rcx-0x73], cl; dec dword ptr [rbp+r9*4+0x74]; ret; 
0x0000000042930d: shl byte ptr [rcx], 0x1; ror byte ptr [rax+0x39], 0xfa; setae al; ret; 
0x0000000045a8b5: shl byte ptr [rcx], 0x1; shl byte ptr [rip+0x3fffc00], cl; div ecx; mov eax, eax; ret; 
0x00000000484c69: shl byte ptr [rcx], cl; imul al; outsd dx, [rsi]; jne short 0x0000000000484c6d; jmp qword ptr [rsi+0xf]; 
0x00000000427ecc: shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xdf; call qword ptr [r15+0x58]; 
0x00000000485aa6: shl byte ptr [rdi+0x48], 0x89; ret; 
0x0000000048f0da: shl byte ptr [rdi+0xb], 0x48; add esp, 0x8; ret; 
0x0000000042c579: shl byte ptr [rdi+rax*8], 0xc; add [rax], al; add [rcx+rcx*4-0x40], cl; ret; 
0x00000000401d16: shl byte ptr [rdi+rax-0x41], 0x70; cmp ecx, [rsi]; jmp rax; 
0x0000000049833c: shl byte ptr [rdi-0x76b7fffc], 0x10; add rsp, 0x8; ret; 
0x0000000043c0aa: shl byte ptr [rdx+0x13], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004831cb: shl byte ptr [rdx+0x48], cl; bsf eax, edx; ret; 
0x00000000483e8b: shl byte ptr [rdx+0x48], cl; bsf eax, edx; shr rax, 0x2; ret; 
0x0000000043b77c: shl byte ptr [rdx+0xe], 0x1; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x00000000401011: shl byte ptr [rdx+rax-0x1], 0xd0; add rsp, 0x8; ret; 
0x00000000498336: shl byte ptr [rdx+rcx+0x48], 0x8d; adc eax, 0x4b7c0; mov [rax], rdx; add rsp, 0x8; ret; 
0x00000000402eeb: shl byte ptr [rdx+rdx+0x44], 0x89; loopne 0x0000000000402f4f; pop r12; pop r13; ret; 
0x0000000045a8b7: shl byte ptr [rip+0x3fffc00], cl; div ecx; mov eax, eax; ret; 
0x0000000045cd76: shl byte ptr [rip+0x410000], cl; cmp eax, 0x410000; je short 0x000000000045cdb0; mov eax, 0x101; syscall; 
0x0000000040775e: shl byte ptr [rip-0x763d4d52], 0xc2; shr edx, 0x10; xor eax, edx; ret; 
0x000000004270c9: shl byte ptr [rsi+0x14], 0x48; mov eax, [rbx+0x40]; add rsp, 0x20; pop rbx; jmp rax; 
0x00000000489c0c: shl byte ptr [rsi+0x48], 0xf; outsb dx, [rsi]; ret far; 
0x0000000043c0da: shl byte ptr [rsi+0x63490007], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000482d66: shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x0000000040a91f: shl byte ptr [rsi+rax-0x1], 0xe0; nop [rax]; xor eax, eax; ret; 
0x00000000497e96: shl byte ptr [rsi+rcx+0x48], 0x8d; add eax, 0x4d1a0; mov [rip+0x4d181], rax; add rsp, 0x8; ret; 
0x0000000044e39f: shl byte ptr [rsi+rdi*2+0x48], cl; bsf eax, edx; ret; 
0x0000000045919f: shl byte ptr [rsi+rdx*8+0x48], cl; movsxd ecx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000439087: shl byte ptr [rsi+rdx+0xf], 0xbc; ror byte ptr [rax+0x1], 0xf8; add rax, rcx; ret; 
0x0000000040a959: shl byte ptr [rsp+rbp+0x48], 0x89; call rax; 
0x00000000402641: shl byte ptr [rsp+rcx+0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000048f711: shl byte ptr [rsp+rdi+0x48], 0x89; ret; 
0x0000000047a553: shl dh, 0xff; dec dword ptr [rbx+rcx*4-0x5b]; clc; idiv bh; jmp qword ptr [rsi-0x70]; 
0x00000000438d98: shl dword ptr [rax+0x49], 0x39; ret far; 
0x0000000048e3bf: shl dword ptr [rbp-0x2a], 0x1; mov eax, [rcx]; ret; 
0x00000000485251: shl dword ptr [rbx], 0x4e; adc [rax-0x73], cl; or al, 0x8e; add eax, [rcx+rdx]; ret; 
0x00000000436386: shl dword ptr [rsi+0xb], cl; movzx ecx, byte ptr [rsi+rdx]; movzx eax, byte ptr [rdi+rdx]; sub eax, ecx; ret; 
0x00000000482d62: shl dword ptr [rsi+0xf], 0xd7; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x00000000458c3f: shl dword ptr [rsi+0xf], 0xda; ret; 
0x00000000462177: shl eax, cl; ret; 
0x00000000462b7b: shl ebp, 0xf9; call qword ptr [rax-0x5e1f00d]; 
0x000000004595e7: shl ebx, 0x1; movsb [rdi], [rsi]; ret; 
0x00000000462172: shl ecx, 0x3; pop r12; shl eax, cl; ret; 
0x0000000048f6d0: shl ecx, 0x4; cmp r8, [rcx+rsi+0x10]; jae short 0x000000000048f685; xor eax, eax; ret; 
0x0000000047c8d3: shl ecx, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000049d0ec: shl ecx, cl; mov [rdi-0x10], r9; ret; 
0x0000000049d06b: shl ecx, cl; mov [rdi-0x8], r9; ret; 
0x0000000049d03a: shl ecx, cl; mov [rdi], r9; ret; 
0x00000000472780: shl edx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000044de4a: shl edx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x0000000049432d: shl esi, cl; jmp qword ptr [rsi-0x7f]; 
0x0000000049e843: shl esi, cl; mov [rdi], rsi; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000048a365: shl esp, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x0000000048a364: shl r12, 0x4; add r12, rax; call qword ptr [r12+0x60]; 
0x0000000049d0eb: shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000049d06a: shl r9, cl; mov [rdi-0x8], r9; ret; 
0x0000000049d039: shl r9, cl; mov [rdi], r9; ret; 
0x0000000048f6cf: shl rcx, 0x4; cmp r8, [rcx+rsi+0x10]; jae short 0x000000000048f685; xor eax, eax; ret; 
0x0000000047277f: shl rdx, 0x2; lea rcx, [rbx+rdx]; add rdx, r15; call qword ptr [rax+r9*8]; 
0x0000000044de49: shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi+rax]; ret; 
0x0000000049e842: shl rsi, cl; mov [rdi], rsi; mov [rdx], eax; mov eax, 0x1; ret; 
0x0000000049d0e4: shld eax, ecx, cl; mov [rdi-0x8], r8; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000049d064: shld eax, ecx, cl; mov [rdi], r8; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x0000000049d0e3: shld r8, r9, cl; mov [rdi-0x8], r8; shl r9, cl; mov [rdi-0x10], r9; ret; 
0x0000000049d062: shld r8, r9, cl; mov [rdi], r8; shl r9, cl; mov [rdi-0x8], r9; ret; 
0x00000000463ed8: shr al, 0x82; sar cl, cl; jmp qword ptr [rsi+0xf]; 
0x0000000045fa54: shr al, 0xa6; xor eax, 0xecebfffc; nop [rax]; endbr64; ret; 
0x00000000491558: shr al, 0xb2; ret far; 
0x0000000049f76b: shr al, cl; scasd [rdi]; ret; 
0x00000000499321: shr bl, 0xcf; nop [rax]; call rax; 
0x0000000046fda6: shr byte ptr [rax+0x48ffffff], 0x63; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000043348f: shr byte ptr [rcx], 0xc8; ret; 
0x0000000046ceb8: shr byte ptr [rcx], cl; ret; 
0x0000000043947c: shr byte ptr [rcx], cl; rol bl, 0x1; xor eax, eax; ret; 
0x000000004838de: shr byte ptr [rdx+0x1], cl; lea r9, [rsp+0x20]; call rbx; 
0x00000000421451: shr cl, 0x50; add esi, edi; jmp qword ptr [rsi+0xf]; 
0x00000000420a24: shr cl, 0x7b; or bh, dh; jmp qword ptr [rsi+0xf]; 
0x00000000420c71: shr cl, 0x84; or dh, bh; jmp qword ptr [rsi+0xf]; 
0x0000000040a829: shr dh, 0x4d; add [rbp-0x3d], bl; mov rax, 0x4dee80; pop rbp; ret; 
0x0000000040a473: shr dh, 0x4d; add bl, al; nop [rax+rax]; mov rax, 0x4ded40; ret; 
0x0000000040cd1b: shr dl, 0x1; or eax, [rax]; ret; 
0x000000004755e1: shr dword ptr [rcx], cl; ret; 
0x0000000042c65c: shr dword ptr [rsi+0x48], 0x3d; jmp far fword ptr [rdi+0x32760000]; 
0x00000000483e2b: shr eax, 0x2; ret; 
0x000000004842e3: shr eax, 0x2; vzeroupper; ret; 
0x0000000041ed2d: shr eax, 0x3; lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x000000004293b0: shr eax, 0x4; lea rdx, [rax+0x1]; mov [rip+0xb93d2], rdx; ret; 
0x0000000045a806: shr eax, 0x6; and eax, 0x3fffc00; ret; 
0x0000000045a789: shr eax, 0xc; and eax, 0xf; movsxd rcx, [rsi+rax*4]; add rcx, rsi; notrack jmp rcx; 
0x0000000045a7bb: shr eax, 0xe; and eax, 0x3fc00; ret; 
0x0000000042ce6f: shr ecx, 0x3; rep stosq [rdi]; pop rbp; ret; 
0x0000000049d1fc: shr ecx, cl; mov [rdi+0x10], r9; ret; 
0x0000000049d185: shr ecx, cl; mov [rdi+0x8], r9; ret; 
0x0000000049d154: shr ecx, cl; mov [rdi], r9; ret; 
0x00000000407765: shr edx, 0x10; xor eax, edx; ret; 
0x0000000049d1fb: shr r9, cl; mov [rdi+0x10], r9; ret; 
0x0000000049d184: shr r9, cl; mov [rdi+0x8], r9; ret; 
0x0000000049d153: shr r9, cl; mov [rdi], r9; ret; 
0x00000000483e2a: shr rax, 0x2; ret; 
0x000000004842e2: shr rax, 0x2; vzeroupper; ret; 
0x0000000041ed2c: shr rax, 0x3; lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x000000004293af: shr rax, 0x4; lea rdx, [rax+0x1]; mov [rip+0xb93d2], rdx; ret; 
0x0000000049d1f4: shrd eax, ecx, cl; mov [rdi+0x8], r8; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x0000000049d17e: shrd eax, ecx, cl; mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x0000000049d1f3: shrd r8, r9, cl; mov [rdi+0x8], r8; shr r9, cl; mov [rdi+0x10], r9; ret; 
0x0000000049d17c: shrd r8, r9, cl; mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x0000000049d17d: shrd r8, r9, cl; mov [rdi], r8; shr r9, cl; mov [rdi+0x8], r9; ret; 
0x00000000457075: shufps xmm0, [rdi+0x2], 0x0; lea rax, [rdi+0x2]; vzeroupper; ret; 
0x0000000044e965: shufps xmm0, [rdi+0x2], 0x0; vzeroupper; ret; 
0x0000000040b672: sldt [rax]; cmovns eax, edx; add rsp, 0x8; ret; 
0x00000000473a9a: sldt [rax]; mov rdx, rbx; mov rsi, r12; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x000000004389e7: stc; add [rax], al; add [rbp-0x77], cl; ret far; 
0x00000000484fb4: stc; add [rdi+0x30], esi; mov eax, 0x106; syscall; 
0x00000000407d23: stc; add [rdi-0x3f], esi; cmp esi, edx; setb al; ret; 
0x00000000472fbd: stc; call qword ptr [rax-0x3f7c3977]; 
0x00000000462b7d: stc; call qword ptr [rax-0x5e1f00d]; 
0x000000004907fc: stc; dec dword ptr [rax-0x77]; ret; 
0x0000000043befc: stc; jb short 0x000000000043bf07; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bfac: stc; jb short 0x000000000043bfb7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e8dc: stc; jb short 0x000000000043e8e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e98c: stc; jb short 0x000000000043e997; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000044c542: stc; je short 0x000000000044c506; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004630b8: stc; jmp qword ptr [rsi+0x48]; 
0x00000000463590: stc; jmp qword ptr [rsi+0x49]; 
0x00000000462bb0: stc; jmp qword ptr [rsi+0xf]; 
0x000000004570cf: stc; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000043d9d8: stc; mov [rdi-0x4], ecx; ret; 
0x0000000044e997: stc; mov [rdi], rcx; mov [rdi+rdx-0x7], r9; vzeroupper; ret; 
0x0000000043d9d2: stc; mov ecx, [rsi-0x4]; mov [rdi-0x7], edx; mov [rdi-0x4], ecx; ret; 
0x0000000047f244: stc; notrack jmp rcx; 
0x00000000437107: stc; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x0000000040c1cb: stc; ror dword ptr [rcx], cl; add bl, al; lea rax, [rip+0x9d3ff]; ret; 
0x00000000446338: stc; vmovups [rdi-0x200], zmm15; ret; 
0x0000000044e99f: stc; vzeroupper; ret; 
0x0000000047a823: std; add al, [rax]; add [rcx-0x8ef63], cl; dec dword ptr [rax-0x77]; ret far; 
0x0000000047b60f: std; add cl, [rcx+rcx*4-0x16]; call qword ptr [rax+0x38]; 
0x0000000045eb31: std; add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000041e486: std; add r15, r12; call rax; 
0x00000000430fb7: std; call far fword ptr [rdx+0x31]; 
0x00000000485a64: std; call qword ptr [rax+0x31f1894c]; 
0x00000000487661: std; call qword ptr [rax-0x1107a3a]; 
0x0000000047fb3d: std; call qword ptr [rax-0x5e1f00d]; 
0x00000000425684: std; dec dword ptr [rax-0x77]; ret; 
0x000000004836ee: std; dec dword ptr [rcx-0x75]; cmp al, 0x24; movzx esi, bl; call rbp; 
0x0000000041ecaf: std; imul ecx, [rax+rax], 0xf; add eax, 0xffff28e9; jmp qword ptr [rsi+0xf]; 
0x0000000043b9bc: std; jb short 0x000000000043b9c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ba6c: std; jb short 0x000000000043ba77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e39c: std; jb short 0x000000000043e3a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e44c: std; jb short 0x000000000043e457; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x000000004916b2: std; jbe short 0x00000000004916c0; ret; 
0x0000000046da0c: std; je short 0x000000000046da28; pop rbx; ret; 
0x0000000045a04e: std; jg short 0x000000000045a09b; jmp qword ptr [rdx-0x2f]; 
0x000000004876fe: std; jmp far fword ptr [rdi+0x41]; 
0x00000000460720: std; jmp far fword ptr [rdi-0x45]; 
0x00000000483c2b: std; jmp far fword ptr [rdx+0x1]; 
0x0000000045c8d6: std; jmp qword ptr [rcx+rax*2-0x75]; 
0x00000000423294: std; jmp qword ptr [rsi+0x2e]; 
0x00000000429802: std; jmp qword ptr [rsi+0x66]; 
0x00000000481ca5: std; jmp qword ptr [rsi+0xf]; 
0x0000000048217c: std; jmp qword ptr [rsi-0x70]; 
0x00000000484971: std; jmp qword ptr [rsp+rax*2-0x77]; 
0x000000004570ab: std; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x000000004570a7: std; mov [rdi+rdx-0x3], ecx; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000044e987: std; mov [rdi+rdx-0x3], ecx; vzeroupper; ret; 
0x0000000043d1fb: std; mov [rdi-0x2], cx; ret; 
0x0000000043d1f3: std; mov cx, [rsi-0x2]; mov [rdi-0x3], dx; mov [rdi-0x2], cx; ret; 
0x0000000045c447: std; mov rdi, rbp; mov eax, 0x4f; syscall; 
0x0000000040976d: std; or [rax], eax; movsxd rax, [rdx+rcx*4]; add rax, rdx; notrack jmp rax; 
0x0000000045957c: std; rep movsb [rdi], [rsi]; cld; ret; 
0x0000000046f60b: std; test rax, rax; je short 0x000000000046f613; call rax; 
0x00000000459fc4: std; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x00000000459eae: std; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x00000000446068: std; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x00000000445e2e: std; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x000000004592b6: std; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000044e98b: std; vzeroupper; ret; 
0x000000004347d3: std; xlat [rbx]; ret far; 
0x00000000439361: std; xlat [rbx]; ret; 
0x00000000482afe: std; xlat [rbx]; rol dword ptr [rbp+0x311b75c0], 0xc0; vzeroupper; ret; 
0x000000004a6692: sti; call far fword ptr [rbx+0x4c]; 
0x000000004a69cd: sti; call qword ptr [rax+0x30658b4c]; 
0x000000004a6645: sti; dec dword ptr [rax-0x7d]; ret; 
0x00000000471648: sti; dec dword ptr [rcx+rcx*4+0x65]; mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000004a6789: sti; dec dword ptr [rcx-0x75]; jge short 0x00000000004a679f; add rdi, rbp; call r12; 
0x000000004781ca: sti; dec dword ptr [rcx-0x77]; ret; 
0x0000000043bc5c: sti; jb short 0x000000000043bc67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bd0c: sti; jb short 0x000000000043bd17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e63c: sti; jb short 0x000000000043e647; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e6ec: sti; jb short 0x000000000043e6f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x00000000430321: sti; jmp far fword ptr [rcx]; 
0x00000000430331: sti; jmp far fword ptr [rdi-0x78f10000]; 
0x0000000045b8b3: sti; jmp qword ptr [rsi+0x2e]; 
0x0000000045a8df: sti; jmp qword ptr [rsi+0x66]; 
0x000000004612f8: sti; jmp qword ptr [rsi+0xf]; 
0x000000004753ec: sti; jmp qword ptr [rsi-0x70]; 
0x0000000043d5d8: sti; mov [rdi-0x4], ecx; ret; 
0x0000000043d5d2: sti; mov ecx, [rsi-0x4]; mov [rdi-0x5], edx; mov [rdi-0x4], ecx; ret; 
0x00000000462af9: sti; movsxd eax, [rip-0xeb11800]; cli; jmp qword ptr [rsi+0x2e]; 
0x000000004021a8: sti; movsxd rax, [rcx+rdx*4]; add rax, rcx; notrack jmp rax; 
0x00000000489771: sti; ret; 
0x00000000408b3c: sti; sub rsp, 0x8; movsxd rax, [rcx+rsi*4]; add rax, rcx; notrack jmp rax; 
0x00000000480d4e: sti; test byte ptr [rdi], 0x2; jne short 0x0000000000480dc8; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x00000000446329: sti; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000045bb2a: stosb [rdi]; add rax, rdx; notrack jmp rax; 
0x0000000045a2b8: stosb [rdi]; mov rax, rdx; ret; 
0x0000000042ad02: stosb [rdi]; nop [rax+rax]; call rax; 
0x0000000042a267: stosb [rdi]; or eax, [rax]; syscall; 
0x00000000428906: stosb [rdi]; ret; 
0x00000000483274: stosd [rdi]; fimul st, dword ptr [rax+0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x0000000042ce74: stosd [rdi]; pop rbp; ret; 
0x00000000484ecb: stosd [rdi]; std; call qword ptr [rax-0x5e1f00d]; 
0x0000000048f6d9: stosd [rdi]; xor eax, eax; ret; 
0x0000000042ce73: stosq [rdi]; pop rbp; ret; 
0x00000000421b7e: sub [r13-0x7b], r8b; shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x00000000472492: sub [r15+rcx-0x4a], r8b; ret; 
0x0000000045fb13: sub [r9], r8b; ret; 
0x0000000047f236: sub [rax-0x73], ecx; cmp eax, 0x4974a; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000046a862: sub [rax-0x75], cl; je short 0x000000000046a88b; push rax; mov rdi, [rsp+0x48]; call r13; 
0x0000000046bfc2: sub [rax-0x75], cl; je short 0x000000000046bfeb; push rax; mov rdi, [rsp+0x48]; call r13; 
0x0000000045df5f: sub [rax-0x75], cl; jge short 0x000000000045df64; call rbx; 
0x0000000040a952: sub [rax-0x75], cl; sbb [rax-0x7b], cl; shl byte ptr [rsp+rbp+0x48], 0x89; call rax; 
0x0000000048fdc7: sub [rax-0x77], cl; fmul st, qword ptr [rax-0x75]; sbb al, 0x24; add rsp, 0x30; bnd jmp r11; 
0x0000000040aa3f: sub [rax-0x7b], cl; shl byte ptr [rbx+0x48], cl; mov esi, ebp; mov rdi, r13; call rdx; 
0x0000000042c145: sub [rax-0x7d], cl; call qword ptr [rsi+rsi*2]; 
0x0000000047bc09: sub [rax], al; add [rax-0x7d], cl; ret; 
0x00000000409074: sub [rax], al; add [rax], al; add [rbx+0x5d], bl; pop r12; ret; 
0x00000000402af5: sub [rax], al; add [rax], al; jne 0x0000000000402b8f; add rsp, 0xc8; ret; 
0x00000000402ca5: sub [rax], al; add [rax], al; jne 0x0000000000402d3f; add rsp, 0xc8; ret; 
0x0000000045c262: sub [rax], al; add [rax], al; jne 0x000000000045c305; add rsp, 0x68; ret; 
0x00000000470234: sub [rax], al; add [rax], al; jne 0x00000000004702d6; add rsp, 0x98; ret; 
0x0000000049e58e: sub [rax], al; add [rax], al; jne 0x000000000049e615; leave; ret; 
0x00000000404fe6: sub [rax], al; add [rax], al; jne short 0x0000000000404ff1; add rsp, 0x48; ret; 
0x00000000408b08: sub [rax], al; add [rax], al; jne short 0x0000000000408b13; add rsp, 0x18; ret; 
0x0000000041f944: sub [rax], al; add [rax], al; jne short 0x000000000041f952; add rsp, 0xd8; ret; 
0x0000000045be87: sub [rax], al; add [rax], al; jne short 0x000000000045bea1; add rsp, 0x28; ret; 
0x0000000045cbb7: sub [rax], al; add [rax], al; jne short 0x000000000045cc03; add rsp, 0x68; ret; 
0x0000000045cc46: sub [rax], al; add [rax], al; jne short 0x000000000045cc93; add rsp, 0x18; ret; 
0x0000000045ccfe: sub [rax], al; add [rax], al; jne short 0x000000000045cd4b; add rsp, 0x58; ret; 
0x0000000045cd9c: sub [rax], al; add [rax], al; jne short 0x000000000045cdeb; add rsp, 0x58; ret; 
0x0000000045cfda: sub [rax], al; add [rax], al; jne short 0x000000000045cfe5; add rsp, 0x28; ret; 
0x0000000045f9dd: sub [rax], al; add [rax], al; jne short 0x000000000045f9eb; add rsp, 0xd8; ret; 
0x0000000046fec1: sub [rax], al; add [rax], al; jne short 0x000000000046fecc; add rsp, 0x18; ret; 
0x00000000471f74: sub [rax], al; add [rax], al; jne short 0x0000000000471f82; add rsp, 0xd8; ret; 
0x000000004919c5: sub [rax], al; add [rax], al; jne short 0x00000000004919f3; add rsp, 0x38; ret; 
0x00000000491a91: sub [rax], al; add [rax], al; jne short 0x0000000000491ac4; add rsp, 0x58; ret; 
0x00000000491c03: sub [rax], al; add [rax], al; jne short 0x0000000000491c44; add rsp, 0x68; ret; 
0x00000000491f21: sub [rax], al; add [rax], al; jne short 0x0000000000491f54; add rsp, 0x58; ret; 
0x00000000492711: sub [rax], al; add [rax], al; jne short 0x0000000000492735; add rsp, 0x38; ret; 
0x000000004984b8: sub [rax], al; add [rax], al; jne short 0x00000000004984c3; add rsp, 0x28; ret; 
0x000000004985a6: sub [rax], al; add [rax], al; jne short 0x00000000004985b1; add rsp, 0x38; ret; 
0x0000000049eb21: sub [rax], al; add [rax], al; jne short 0x000000000049eb2c; add rsp, 0x38; ret; 
0x00000000413afa: sub [rbp+0x9], al; ret; 
0x00000000403cbf: sub [rbp+0xa], edx; add al, ch; cwde; ret far; 
0x00000000421b7f: sub [rbp-0x7b], al; shl byte ptr [rbx+rbp*2+0x49], 0x2b; and [r8+0x1], r9b; ret; 
0x0000000040a9bf: sub [rbx+0x48], dl; mov ebx, esi; mov rdi, rsi; call rax; 
0x0000000045b4f3: sub [rbx+0x5d], bl; pop r12; pop r13; ret; 
0x000000004718bf: sub [rbx+0x736b92d], al; add [rcx], al; xor eax, eax; add rsp, 0x8; ret; 
0x0000000049c928: sub [rbx-0x1b], dh; mov eax, 0x1; ret; 
0x0000000049c927: sub [rbx-0x1b], sil; mov eax, 0x1; ret; 
0x00000000452a03: sub [rbx], eax; add [rax], al; ret; 
0x0000000042e7dc: sub [rcx+0x8], bh; add al, ch; ret far; 
0x0000000042ffa4: sub [rcx+rcx*4-0x19], cl; call rax; 
0x0000000041fbbc: sub [rcx+rcx*4-0x40], al; pop rbx; pop rbp; ret; 
0x00000000492468: sub [rcx-0x3b76b310], cl; mov rbp, r9; nop; jmp rdx; 
0x0000000046724b: sub [rcx-0x77], cl; ret; 
0x0000000045fb14: sub [rcx], al; ret; 
0x0000000048506d: sub [rcx], dh; ror byte ptr [rax-0x77], 0xe2; mov eax, 0x10; syscall; 
0x0000000043b828: sub [rdi+0x10], ebx; jb short 0x000000000043b836; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043b978: sub [rdi+0x10], ebx; jb short 0x000000000043b986; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bac8: sub [rdi+0x10], ebx; jb short 0x000000000043bad6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bc18: sub [rdi+0x10], ebx; jb short 0x000000000043bc26; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043bd68: sub [rdi+0x10], ebx; jb short 0x000000000043bd76; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043beb8: sub [rdi+0x10], ebx; jb short 0x000000000043bec6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c008: sub [rdi+0x10], ebx; jb short 0x000000000043c016; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c158: sub [rdi+0x10], ebx; jb short 0x000000000043c166; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c2a8: sub [rdi+0x10], ebx; jb short 0x000000000043c2b6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c3f8: sub [rdi+0x10], ebx; jb short 0x000000000043c406; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c548: sub [rdi+0x10], ebx; jb short 0x000000000043c556; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c698: sub [rdi+0x10], ebx; jb short 0x000000000043c6a6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c7e8: sub [rdi+0x10], ebx; jb short 0x000000000043c7f6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043c938: sub [rdi+0x10], ebx; jb short 0x000000000043c946; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ca88: sub [rdi+0x10], ebx; jb short 0x000000000043ca96; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e208: sub [rdi+0x10], ebx; jb short 0x000000000043e216; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e358: sub [rdi+0x10], ebx; jb short 0x000000000043e366; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e4a8: sub [rdi+0x10], ebx; jb short 0x000000000043e4b6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e5f8: sub [rdi+0x10], ebx; jb short 0x000000000043e606; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e748: sub [rdi+0x10], ebx; jb short 0x000000000043e756; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e898: sub [rdi+0x10], ebx; jb short 0x000000000043e8a6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043e9e8: sub [rdi+0x10], ebx; jb short 0x000000000043e9f6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043eb38: sub [rdi+0x10], ebx; jb short 0x000000000043eb46; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ec88: sub [rdi+0x10], ebx; jb short 0x000000000043ec96; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043edd8: sub [rdi+0x10], ebx; jb short 0x000000000043ede6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043ef28: sub [rdi+0x10], ebx; jb short 0x000000000043ef36; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f078: sub [rdi+0x10], ebx; jb short 0x000000000043f086; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f1c8: sub [rdi+0x10], ebx; jb short 0x000000000043f1d6; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f318: sub [rdi+0x10], ebx; jb short 0x000000000043f326; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000043f468: sub [rdi+0x10], ebx; jb short 0x000000000043f476; movaps [rdi], xmm4; notrack jmp r9; 
0x0000000047e9e4: sub [rdi+0x29], esi; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000047f19f: sub [rdi+0xe], esi; movsxd rax, [rdi+rax*4]; add rax, rdi; notrack jmp rax; 
0x00000000472493: sub [rdi+rcx-0x4a], al; ret; 
0x0000000043b784: sub [rdi-0x10], ebp; notrack jmp r9; 
0x0000000043b780: sub [rdi-0x20], esp; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043b77a: sub [rdi-0x30], ebx; jb short 0x000000000043b78d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043b8ca: sub [rdi-0x30], ebx; jb short 0x000000000043b8dd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043ba1a: sub [rdi-0x30], ebx; jb short 0x000000000043ba2d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043bb6a: sub [rdi-0x30], ebx; jb short 0x000000000043bb7d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043bcba: sub [rdi-0x30], ebx; jb short 0x000000000043bccd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043be0a: sub [rdi-0x30], ebx; jb short 0x000000000043be1d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043bf5a: sub [rdi-0x30], ebx; jb short 0x000000000043bf6d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c0a8: sub [rdi-0x30], ebx; jb short 0x000000000043c0c0; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c1fa: sub [rdi-0x30], ebx; jb short 0x000000000043c20d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c34a: sub [rdi-0x30], ebx; jb short 0x000000000043c35d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c49a: sub [rdi-0x30], ebx; jb short 0x000000000043c4ad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c5ea: sub [rdi-0x30], ebx; jb short 0x000000000043c5fd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c73a: sub [rdi-0x30], ebx; jb short 0x000000000043c74d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c88a: sub [rdi-0x30], ebx; jb short 0x000000000043c89d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043c9da: sub [rdi-0x30], ebx; jb short 0x000000000043c9ed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e15a: sub [rdi-0x30], ebx; jb short 0x000000000043e16d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e2aa: sub [rdi-0x30], ebx; jb short 0x000000000043e2bd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e3fa: sub [rdi-0x30], ebx; jb short 0x000000000043e40d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e54a: sub [rdi-0x30], ebx; jb short 0x000000000043e55d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e69a: sub [rdi-0x30], ebx; jb short 0x000000000043e6ad; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e7ea: sub [rdi-0x30], ebx; jb short 0x000000000043e7fd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043e93a: sub [rdi-0x30], ebx; jb short 0x000000000043e94d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043ea88: sub [rdi-0x30], ebx; jb short 0x000000000043eaa0; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043ebda: sub [rdi-0x30], ebx; jb short 0x000000000043ebed; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043ed2a: sub [rdi-0x30], ebx; jb short 0x000000000043ed3d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043ee7a: sub [rdi-0x30], ebx; jb short 0x000000000043ee8d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043efca: sub [rdi-0x30], ebx; jb short 0x000000000043efdd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043f11a: sub [rdi-0x30], ebx; jb short 0x000000000043f12d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043f26a: sub [rdi-0x30], ebx; jb short 0x000000000043f27d; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x0000000043f3ba: sub [rdi-0x30], ebx; jb short 0x000000000043f3cd; movaps [rdi-0x20], xmm4; movaps [rdi-0x10], xmm5; notrack jmp r9; 
0x000000004447f6: sub [rdi], al; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004447f7: sub [rdi], al; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048ad60: sub [rdi], cl; xchg ebp, eax; ret; 
0x00000000444677: sub [rdi], eax; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000047e9e6: sub [rdi], ecx; mov dh, 0xc0; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000043b82e: sub [rdi], esp; notrack jmp r9; 
0x00000000437db7: sub [rip-0x76b30000], ecx; ret far; 
0x0000000043b71b: sub [rsi-0x1], cl; jb short 0x000000000043b727; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043b7cb: sub [rsi-0x1], cl; jb short 0x000000000043b7d7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e0fb: sub [rsi-0x1], cl; jb short 0x000000000043e107; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e1ab: sub [rsi-0x1], cl; jb short 0x000000000043e1b7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043b86b: sub [rsi-0x2], cl; jb short 0x000000000043b877; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043b91b: sub [rsi-0x2], cl; jb short 0x000000000043b927; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e24b: sub [rsi-0x2], cl; jb short 0x000000000043e257; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e2fb: sub [rsi-0x2], cl; jb short 0x000000000043e307; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043b9bb: sub [rsi-0x3], cl; jb short 0x000000000043b9c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ba6b: sub [rsi-0x3], cl; jb short 0x000000000043ba77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e39b: sub [rsi-0x3], cl; jb short 0x000000000043e3a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e44b: sub [rsi-0x3], cl; jb short 0x000000000043e457; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bb0b: sub [rsi-0x4], cl; jb short 0x000000000043bb17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bbbb: sub [rsi-0x4], cl; jb short 0x000000000043bbc7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e4eb: sub [rsi-0x4], cl; jb short 0x000000000043e4f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e59b: sub [rsi-0x4], cl; jb short 0x000000000043e5a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bc5b: sub [rsi-0x5], cl; jb short 0x000000000043bc67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bd0b: sub [rsi-0x5], cl; jb short 0x000000000043bd17; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e63b: sub [rsi-0x5], cl; jb short 0x000000000043e647; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e6eb: sub [rsi-0x5], cl; jb short 0x000000000043e6f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bdab: sub [rsi-0x6], cl; jb short 0x000000000043bdb7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043be5b: sub [rsi-0x6], cl; jb short 0x000000000043be67; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e78b: sub [rsi-0x6], cl; jb short 0x000000000043e797; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e83b: sub [rsi-0x6], cl; jb short 0x000000000043e847; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043befb: sub [rsi-0x7], cl; jb short 0x000000000043bf07; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043bfab: sub [rsi-0x7], cl; jb short 0x000000000043bfb7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e8db: sub [rsi-0x7], cl; jb short 0x000000000043e8e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043e98b: sub [rsi-0x7], cl; jb short 0x000000000043e997; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c04b: sub [rsi-0x8], cl; jb short 0x000000000043c057; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c0fb: sub [rsi-0x8], cl; jb short 0x000000000043c107; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ea2b: sub [rsi-0x8], cl; jb short 0x000000000043ea37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043eadb: sub [rsi-0x8], cl; jb short 0x000000000043eae7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c19b: sub [rsi-0x9], cl; jb short 0x000000000043c1a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c24b: sub [rsi-0x9], cl; jb short 0x000000000043c257; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043eb7b: sub [rsi-0x9], cl; jb short 0x000000000043eb87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ec2b: sub [rsi-0x9], cl; jb short 0x000000000043ec37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c2eb: sub [rsi-0xa], cl; jb short 0x000000000043c2f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c39b: sub [rsi-0xa], cl; jb short 0x000000000043c3a7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043eccb: sub [rsi-0xa], cl; jb short 0x000000000043ecd7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ed7b: sub [rsi-0xa], cl; jb short 0x000000000043ed87; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c43b: sub [rsi-0xb], cl; jb short 0x000000000043c447; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c4eb: sub [rsi-0xb], cl; jb short 0x000000000043c4f7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ee1b: sub [rsi-0xb], cl; jb short 0x000000000043ee27; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043eecb: sub [rsi-0xb], cl; jb short 0x000000000043eed7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c58b: sub [rsi-0xc], cl; jb short 0x000000000043c597; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c63b: sub [rsi-0xc], cl; jb short 0x000000000043c647; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ef6b: sub [rsi-0xc], cl; jb short 0x000000000043ef77; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f01b: sub [rsi-0xc], cl; jb short 0x000000000043f027; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c6db: sub [rsi-0xd], cl; jb short 0x000000000043c6e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c78b: sub [rsi-0xd], cl; jb short 0x000000000043c797; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f0bb: sub [rsi-0xd], cl; jb short 0x000000000043f0c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f16b: sub [rsi-0xd], cl; jb short 0x000000000043f177; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c82b: sub [rsi-0xe], cl; jb short 0x000000000043c837; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c8db: sub [rsi-0xe], cl; jb short 0x000000000043c8e7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f20b: sub [rsi-0xe], cl; jb short 0x000000000043f217; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f2bb: sub [rsi-0xe], cl; jb short 0x000000000043f2c7; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043c97b: sub [rsi-0xf], cl; jb short 0x000000000043c987; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043ca2b: sub [rsi-0xf], cl; jb short 0x000000000043ca37; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f35b: sub [rsi-0xf], cl; jb short 0x000000000043f367; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000043f40b: sub [rsi-0xf], cl; jb short 0x000000000043f417; lea r9, [r9-0x7]; lea rdx, [rdx-0x40]; notrack jmp r9; 
0x0000000041e139: sub [rsp+0xc0], eax; movaps [rsp+0xd0], xmm0; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000041e141: sub [rsp+0xd0], eax; movaps [rsp+0xe0], xmm0; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000041e149: sub [rsp+0xe0], eax; movaps [rsp+0xf0], xmm0; syscall; 
0x0000000041e151: sub [rsp+0xf0], eax; syscall; 
0x0000000040a4d3: sub ah, 0x4d; add bl, al; nop [rax+rax]; mov rax, 0x4dec40; ret; 
0x0000000045cded: sub al, 0x0; add bl, dh; nop edx, edi; xor eax, eax; syscall; 
0x00000000482ce0: sub al, 0x1; add [rax], al; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000048f120: sub al, 0x2b; clc; jmp qword ptr [rsi+0x66]; 
0x0000000040a95b: sub al, 0x48; mov ebx, esi; call rax; 
0x0000000048f140: sub al, 0x63; add eax, 0xc0894c00; ret; 
0x0000000045a4f6: sub al, 0x72; add cl, [rax+0x77f8c50f]; ret; 
0x00000000444377: sub al, 0x7; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000484c00: sub al, 0x7f; std; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000411d71: sub al, 0xa; add [rax+0x63], cl; add al, 0x82; add rax, rdx; notrack jmp rax; 
0x0000000043a733: sub al, 0xa; add [rax], al; xor eax, eax; ret; 
0x0000000049e89b: sub al, 0xc7; add al, [rax]; add [rax], al; add [rax+0x1], bh; ret; 
0x0000000046efee: sub al, 0xfa; jmp qword ptr [rsi+0x66]; 
0x00000000439af5: sub al, ch; std; xlat [rbx]; ret; 
0x0000000045cb9d: sub bh, [rax+0x48]; syscall; 
0x0000000046f242: sub bh, dl; jmp qword ptr [rsi+0x66]; 
0x000000004028b3: sub bl, ch; ret; 
0x0000000040a7f3: sub ch, 0x4d; add [rbp-0x3d], bl; mov rax, 0x4dee40; pop rbp; ret; 
0x00000000426784: sub ch, ah; or eax, [rax]; syscall; 
0x0000000048b1d2: sub cl, [rsi-0x49]; jmp qword ptr [rsi+0x2e]; 
0x0000000047d540: sub cl, ch; push rdx; in eax, 0xff; jmp qword ptr [rsi+0x2e]; 
0x0000000040ccc3: sub cl, cl; or [rax], eax; ret; 
0x0000000040a832: sub dh, 0x4d; add [rbp-0x3d], bl; mov rax, 0x4def00; pop rbp; ret; 
0x0000000040a4f3: sub dh, 0x4d; add bl, al; nop [rax+rax]; mov rax, 0x4e1260; ret; 
0x00000000472d19: sub dh, al; add [rcx-0x7d], cl; ret; 
0x00000000497295: sub dh, al; add [rip-0xb9517], ch; jmp qword ptr [rsi-0x70]; 
0x0000000048fdfe: sub dl, dh; call r11; 
0x00000000424bcf: sub dword ptr [rax+rax-0x76b80000], 0xffffffef; call qword ptr [r13+0x20]; 
0x00000000484c94: sub dword ptr [rbx+0x4], 0x1; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000497e4a: sub dword ptr [rdi], 0x1; ret; 
0x00000000497d71: sub dword ptr [rip+0x4d29b], 0x1; mov eax, r8d; pop rbx; ret; 
0x00000000497d72: sub dword ptr [rip+0x4d29b], 0x1; mov eax, r8d; pop rbx; ret; 
0x000000004718c0: sub dword ptr [rip+0x736b9], 0x1; xor eax, eax; add rsp, 0x8; ret; 
0x0000000042d1ac: sub dword ptr [rip+0xb562d], 0x1; pop rbp; ret; 
0x0000000042e35f: sub dword ptr [rip+0xb69ba], 0x1; pop rbx; ret; 
0x0000000042892c: sub dword ptr [rip+0xbc37d], 0x1; ret; 
0x00000000426160: sub dword ptr [rip+0xbeb49], 0x1; ret; 
0x0000000041f0e1: sub dword ptr [rip+0xc67c7], 0x1; add rsp, 0x10; mov eax, r8d; pop rbx; ret; 
0x0000000041f0e2: sub dword ptr [rip+0xc67c7], 0x1; add rsp, 0x10; mov eax, r8d; pop rbx; ret; 
0x0000000043af16: sub dword ptr [rip-0xcfffffe], 0xf; outsd dx, [rsi]; push rdi; ret; 
0x00000000437c71: sub dword ptr [rsi+0xe], 0x0; add [rcx+0x29], cl; ret far; 
0x00000000423ccd: sub dword ptr [rsi], 0x3; add [rax], al; xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x0000000042d1ae: sub eax, 0x1000b56; pop rbp; ret; 
0x000000004565ea: sub eax, 0x10; jb 0x0000000000455b99; movdqu [rdi+0x30], xmm7; ret; 
0x000000004527e2: sub eax, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000452d30; ret; 
0x00000000455e19: sub eax, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000004564f0; ret; 
0x0000000043051a: sub eax, 0x10; ret; 
0x00000000455e3c: sub eax, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000004564f0; ret; 
0x000000004293ac: sub eax, 0x11; shr rax, 0x4; lea rdx, [rax+0x1]; mov [rip+0xb93d2], rdx; ret; 
0x00000000455e61: sub eax, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000004564f0; ret; 
0x00000000455e7f: sub eax, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000004564f0; ret; 
0x00000000455e9f: sub eax, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000004564f0; ret; 
0x00000000455ec2: sub eax, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000004564f0; ret; 
0x00000000455ee1: sub eax, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000004564f0; ret; 
0x00000000455f01: sub eax, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000004564f0; ret; 
0x00000000455f21: sub eax, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000004564f0; ret; 
0x00000000455f44: sub eax, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000004564f0; ret; 
0x00000000407d30: sub eax, 0x1; cmp eax, 0x6; ja short 0x0000000000407d14; mov eax, 0x1; ret; 
0x000000004529d8: sub eax, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000452d30; ret; 
0x0000000044ed19: sub eax, 0x1; lea rdi, [rdi+0x1]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c33: sub eax, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000004564f0; ret; 
0x0000000044ef30: sub eax, 0x1; lea rdi, [rdi+rdx+0x1]; jne 0x000000000044f150; vzeroupper; ret; 
0x0000000046da1c: sub eax, 0x1; mov [rdx+0x8], eax; pop rbx; ret; 
0x00000000427a6b: sub eax, 0x1; ret; 
0x00000000455f79: sub eax, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000004564f0; ret; 
0x00000000455fa7: sub eax, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000004564f0; ret; 
0x00000000455fd7: sub eax, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000004564f0; ret; 
0x00000000456003: sub eax, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000004564f0; ret; 
0x00000000456033: sub eax, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000004564f0; ret; 
0x00000000456063: sub eax, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000004564f0; ret; 
0x00000000475da0: sub eax, 0x20; cdqe; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x000000004754ff: sub eax, 0x20; cdqe; movzx eax, byte ptr [rbx+rax]; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047304c: sub eax, 0x20; cdqe; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000475b51: sub eax, 0x20; cdqe; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x69cdf]; jmp qword ptr [rax+rdx*8]; 
0x0000000047594e: sub eax, 0x20; cdqe; movzx edx, byte ptr [rbx+rax]; lea rax, [rip+0x69de2]; jmp qword ptr [rax+rdx*8]; 
0x0000000044f24d: sub eax, 0x20; jb 0x000000000044ee65; vmovdqu [rdi+0x60], ymm7; vzeroupper; ret; 
0x00000000456093: sub eax, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000004564f0; ret; 
0x000000004529fa: sub eax, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000452d30; ret; 
0x0000000044eec7: sub eax, 0x2; lea rdi, [rdi+0x2]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c57: sub eax, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000004564f0; ret; 
0x00000000452a20: sub eax, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000452d30; ret; 
0x0000000044eeeb: sub eax, 0x3; lea rdi, [rdi+0x3]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c7a: sub eax, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000004564f0; ret; 
0x00000000452a38: sub eax, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000452d30; ret; 
0x0000000044ef05: sub eax, 0x4; lea rdi, [rdi+0x4]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c95: sub eax, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000004564f0; ret; 
0x0000000045e677: sub eax, 0x4c00000a; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x00000000497d73: sub eax, 0x4d29b; add [rcx+rcx*4-0x40], eax; pop rbx; ret; 
0x00000000491a96: sub eax, 0x58c48348; ret; 
0x00000000452a5e: sub eax, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000452d30; ret; 
0x00000000455cb8: sub eax, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000004564f0; ret; 
0x00000000452a80: sub eax, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000452d30; ret; 
0x00000000455cdd: sub eax, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000004564f0; ret; 
0x00000000452a9e: sub eax, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000452d30; ret; 
0x00000000455cfb: sub eax, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000004564f0; ret; 
0x0000000040b38f: sub eax, 0x83000001; call far fword ptr [rax+0x184840f]; 
0x0000000045277a: sub eax, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000452d30; ret; 
0x00000000455d17: sub eax, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000004564f0; ret; 
0x0000000044c40f: sub eax, 0x8b0006e9; or al, 0x8a; mov eax, [rdx+rax*4]; sub eax, ecx; ret; 
0x00000000452ac0: sub eax, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000452d30; ret; 
0x00000000455d3a: sub eax, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000004564f0; ret; 
0x00000000452ae0: sub eax, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000452d30; ret; 
0x00000000455d5f: sub eax, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000004564f0; ret; 
0x0000000042d1ad: sub eax, 0xb562d; add [rbp-0x3d], ebx; nop [rax]; ret; 
0x00000000452b00: sub eax, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000452d30; ret; 
0x00000000455d7d: sub eax, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000004564f0; ret; 
0x0000000040af6f: sub eax, 0xc3ffffff; mov eax, 0xffffff2c; ret; 
0x0000000040bb81: sub eax, 0xc3ffffff; mov eax, 0xffffff92; ret; 
0x00000000452b20: sub eax, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000452d30; ret; 
0x00000000455d9d: sub eax, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000004564f0; ret; 
0x00000000452b42: sub eax, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000452d30; ret; 
0x00000000455dbf: sub eax, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000004564f0; ret; 
0x00000000452b62: sub eax, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000452d30; ret; 
0x00000000455ddf: sub eax, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000004564f0; ret; 
0x00000000452b82: sub eax, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000452d30; ret; 
0x00000000455dff: sub eax, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000004564f0; ret; 
0x00000000497298: sub eax, 0xfff46ae9; jmp qword ptr [rsi-0x70]; 
0x0000000043997f: sub eax, 0xffff; jne 0x0000000000439890; ret; 
0x00000000439acc: sub eax, 0xffffffff; jne 0x0000000000439890; vzeroupper; ret; 
0x00000000439887: sub eax, 0xffffffff; jne short 0x0000000000439890; vzeroupper; ret; 
0x000000004916fa: sub eax, [0x0]; ret; 
0x00000000411f03: sub eax, [rbx+0x8]; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000472cc9: sub eax, [rcx+0xf]; mov dh, 0x46; or al, 0x83; ret; 
0x0000000045ade0: sub eax, [rcx+r8*4]; je short 0x000000000045adc8; ret; 
0x0000000045ade1: sub eax, [rcx+rax*4]; je short 0x000000000045adc8; ret; 
0x000000004292c2: sub eax, [rdi+0x18]; ret; 
0x000000004444f7: sub eax, [rdi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004444f6: sub eax, [rdi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045e157: sub eax, [rdx]; add [rax], al; mov rdi, [r14]; call rbx; 
0x00000000428517: sub eax, [rsi+0x10]; ret; 
0x0000000049ea13: sub eax, eax; mov [rdx], eax; mov eax, 0x2; ret; 
0x00000000490db6: sub eax, eax; ret; 
0x0000000041ed2a: sub eax, ebx; shr rax, 0x3; lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x000000004398d3: sub eax, ecx; je short 0x00000000004398e0; sbb eax, eax; or eax, 0x1; ret; 
0x0000000049e8e5: sub eax, ecx; mov [rdx], eax; mov eax, 0x1; ret; 
0x000000004331cc: sub eax, ecx; ret; 
0x00000000427a69: sub eax, ecx; sub eax, 0x1; ret; 
0x00000000434a4f: sub eax, ecx; vzeroupper; ret; 
0x0000000044e4b9: sub eax, edi; ret; 
0x00000000483f3e: sub eax, edi; shr rax, 0x2; ret; 
0x00000000424781: sub eax, edx; pop rbp; pop r12; ret; 
0x00000000458697: sub eax, edx; ret; 
0x0000000042853f: sub eax, edx; ret; 
0x00000000458687: sub eax, edx; ret; 
0x000000004842e0: sub eax, edx; shr rax, 0x2; vzeroupper; ret; 
0x00000000434752: sub eax, edx; vzeroupper; ret; 
0x00000000424bc9: sub eax, esp; cmp rax, rbx; jae 0x0000000000424c80; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000424ece: sub eax, esp; cmp rbx, rax; jbe 0x0000000000424f80; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000049ea12: sub eax, r8d; mov [rdx], eax; mov eax, 0x2; ret; 
0x00000000490db5: sub eax, r8d; ret; 
0x00000000484bfe: sub ebp, eax; sub al, 0x7f; std; jmp qword ptr [rsp+rax*2-0x77]; 
0x00000000476b69: sub ebp, ecx; imul edi, ebx, 0xffffffff; call qword ptr [rax+0x188d8944]; 
0x00000000497c17: sub ebx, [rbx+0x5d]; pop r12; pop r13; ret; 
0x0000000048b6f1: sub ebx, [rdx-0x9]; jmp qword ptr [rsi+0x66]; 
0x0000000047bb08: sub ebx, eax; sar rbx, 0x2; mov rdx, rbx; call qword ptr [rax+0x38]; 
0x0000000047b608: sub ebx, esi; mov r13, rbx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x0000000049c922: sub ecx, [rax+0x10]; cmp rcx, [rax+0x28]; jae short 0x000000000049c910; mov eax, 0x1; ret; 
0x0000000049d822: sub ecx, [rax-0x7d]; ret; 
0x00000000455cc1: sub ecx, [rax]; add [rax], al; ret; 
0x00000000484634: sub ecx, [rcx+rcx*4-0x40]; shr rax, 0x2; vzeroupper; ret; 
0x000000004834c4: sub ecx, [rcx+rcx*4-0x40]; vzeroupper; ret; 
0x0000000045e609: sub ecx, [rcx]; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000410958: sub ecx, [rdx]; add [rax+0x63], cl; add al, 0x81; add rax, rdx; ret; 
0x00000000481689: sub ecx, eax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x00000000448848: sub ecx, ecx; lea r10, [rip+0x6ed4f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004465f8: sub ecx, ecx; lea r10, [rip+0x70f5f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000436458: sub ecx, ecx; lea r10, [rip+0x8018f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000434bf8: sub ecx, ecx; lea r10, [rip+0x819af]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000433528: sub ecx, ecx; lea r10, [rip+0x8303f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000431e28: sub ecx, ecx; lea r10, [rip+0x846ff]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042536a: sub ecx, edx; cmp rax, rcx; jbe 0x0000000000425460; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x000000004271fa: sub ecx, edx; cmp rax, rcx; jbe 0x00000000004273a8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000427433: sub ecx, edx; cmp rax, rcx; jbe 0x0000000000427508; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000425bda: sub ecx, edx; cmp rax, rcx; jbe short 0x0000000000425c18; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x00000000426e33: sub ecx, edx; cmp rax, rcx; jbe short 0x0000000000426ea0; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000426ee9: sub ecx, edx; cmp rax, rcx; jbe short 0x0000000000426f18; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000427979: sub ecx, edx; cmp rax, rcx; jbe short 0x00000000004279b0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000048159e: sub ecx, edx; cmp rax, rcx; jbe short 0x00000000004815d0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000043e0d3: sub edi, 0x20; lea r11, [rip+0x78893]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b6f3: sub edi, 0x20; lea r11, [rip+0x7b0b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dfe2: sub edi, 0x40; lea r11, [rip+0x78984]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043df23: sub edi, 0x40; lea r11, [rip+0x78a43]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b602: sub edi, 0x40; lea r11, [rip+0x7b1a4]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b543: sub edi, 0x40; lea r11, [rip+0x7b263]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045cc2c: sub edi, [rax+0x48]; syscall; 
0x0000000048f0bc: sub edi, eax; call qword ptr [rax+0x8498b48]; 
0x0000000048f121: sub edi, eax; jmp qword ptr [rsi+0x66]; 
0x00000000475705: sub edi, eax; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000475160: sub edi, ebp; mov rdx, r15; call qword ptr [rax+0x38]; 
0x000000004233f9: sub edi, ecx; cmp rax, rdi; jbe short 0x0000000000423420; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x00000000481300: sub edi, edx; cmp rax, rdi; jbe 0x00000000004814c0; mov rdi, r13; call qword ptr [r14+0x20]; 
0x00000000444e4f: sub edi, edx; lea r11, [rip+0x721d8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044231b: sub edi, edx; lea r11, [rip+0x7480c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000049c1f3: sub edx, 0x1; cmp r8b, 0x1; sbb esi, esi; and esi, 0x2; syscall; 
0x00000000440711: sub edx, 0x40; lea r11, [rip+0x76255]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004407f5: sub edx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x000000004304ae: sub edx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x00000000428548: sub edx, [rax+0x10]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x00000000428539: sub edx, [rax+0x18]; mov eax, [rdi+0x10]; sub eax, edx; ret; 
0x00000000481732: sub edx, [rcx+0x10]; sar rdx, 0x2; sub eax, edx; ret; 
0x00000000481744: sub edx, [rcx+0x8]; sar rdx, 0x2; sub eax, edx; ret; 
0x0000000048266d: sub edx, eax; jbe 0x0000000000482910; add rax, rdi; add rax, rcx; ret; 
0x000000004989cd: sub edx, eax; jbe 0x0000000000498c70; add rax, rdi; add rax, rcx; ret; 
0x000000004828d4: sub edx, eax; jbe short 0x0000000000482910; add rax, rdi; ret; 
0x000000004828e4: sub edx, eax; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x10]; ret; 
0x000000004828f4: sub edx, eax; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x20]; ret; 
0x00000000482904: sub edx, eax; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x30]; ret; 
0x00000000498c34: sub edx, eax; jbe short 0x0000000000498c70; add rax, rdi; ret; 
0x00000000498c44: sub edx, eax; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x10]; ret; 
0x00000000498c54: sub edx, eax; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x20]; ret; 
0x00000000498c64: sub edx, eax; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x30]; ret; 
0x0000000045697c: sub edx, ecx; lea r11, [rip+0x60ebf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559fc: sub edx, ecx; lea r11, [rip+0x61ceb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045533c: sub edx, ecx; lea r11, [rip+0x6232b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000042367d: sub edx, esi; call qword ptr [r12+0x70]; 
0x00000000421044: sub edx, esi; call qword ptr [rax+0x70]; 
0x000000004731f8: sub edx, esi; call qword ptr [rbx+0x38]; 
0x00000000459168: sub edx, esi; cmp edx, ecx; jle short 0x0000000000459184; movsxd rax, ecx; ret; 
0x0000000042173c: sub edx, esi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x00000000423d1d: sub edx, esi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x000000004797d1: sub edx, esi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x00000000424979: sub esi, ecx; mov [rsp], r8; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000420559: sub esi, edx; cmp rax, rsi; jbe short 0x00000000004205b8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000420bea: sub esi, edx; cmp rax, rsi; jbe short 0x0000000000420c64; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000480a29: sub esi, edx; cmp rax, rsi; jbe short 0x0000000000480a68; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000444af1: sub esi, edx; lea r11, [rip+0x72536]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444971: sub esi, edx; lea r11, [rip+0x726b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004447f1: sub esi, edx; lea r11, [rip+0x72836]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444671: sub esi, edx; lea r11, [rip+0x729b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004444f1: sub esi, edx; lea r11, [rip+0x72b36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444371: sub esi, edx; lea r11, [rip+0x72cb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004441f1: sub esi, edx; lea r11, [rip+0x72e36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444071: sub esi, edx; lea r11, [rip+0x72fb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443ef1: sub esi, edx; lea r11, [rip+0x73136]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443d71: sub esi, edx; lea r11, [rip+0x732b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443bf1: sub esi, edx; lea r11, [rip+0x73436]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443a71: sub esi, edx; lea r11, [rip+0x735b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004438f1: sub esi, edx; lea r11, [rip+0x73736]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443771: sub esi, edx; lea r11, [rip+0x738b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004435f1: sub esi, edx; lea r11, [rip+0x73a36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443478: sub esi, edx; lea r11, [rip+0x73baf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441ff1: sub esi, edx; lea r11, [rip+0x74b36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441e71: sub esi, edx; lea r11, [rip+0x74cb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441cf1: sub esi, edx; lea r11, [rip+0x74e36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441b71: sub esi, edx; lea r11, [rip+0x74fb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004419f1: sub esi, edx; lea r11, [rip+0x75136]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441871: sub esi, edx; lea r11, [rip+0x752b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004416f1: sub esi, edx; lea r11, [rip+0x75436]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441571: sub esi, edx; lea r11, [rip+0x755b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004413f1: sub esi, edx; lea r11, [rip+0x75736]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441271: sub esi, edx; lea r11, [rip+0x758b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004410f1: sub esi, edx; lea r11, [rip+0x75a36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440f71: sub esi, edx; lea r11, [rip+0x75bb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440df1: sub esi, edx; lea r11, [rip+0x75d36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440c71: sub esi, edx; lea r11, [rip+0x75eb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440af1: sub esi, edx; lea r11, [rip+0x76036]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440978: sub esi, edx; lea r11, [rip+0x761af]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004251f8: sub esi, edx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x000000004a8165: sub esp, 0x8; add rsp, 0x8; ret; 
0x00000000401005: sub esp, 0x8; mov rax, 0x0; test rax, rax; je short 0x0000000000401016; call rax; 
0x0000000048479d: sub esp, 0x8; mov rax, [rip+0x5d2f1]; test rax, rax; je short 0x00000000004847e0; call rax; 
0x00000000408b3e: sub esp, 0x8; movsxd rax, [rcx+rsi*4]; add rax, rcx; notrack jmp rax; 
0x000000004033c7: sub esp, 0x8; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x0000000047515f: sub r15, r13; mov rdx, r15; call qword ptr [rax+0x38]; 
0x00000000475704: sub r15, r8; mov rdx, r15; call qword ptr [rax+0x38]; 
0x000000004565e9: sub r8, 0x10; jb 0x0000000000455b99; movdqu [rdi+0x30], xmm7; ret; 
0x000000004527e1: sub r8, 0x10; lea rcx, [rdx+0x10]; jne 0x0000000000452d30; ret; 
0x00000000455e18: sub r8, 0x10; lea rdi, [rdi+0x10]; jne 0x00000000004564f0; ret; 
0x00000000455e3b: sub r8, 0x11; lea rdi, [rdi+0x11]; jne 0x00000000004564f0; ret; 
0x00000000455e60: sub r8, 0x12; lea rdi, [rdi+0x12]; jne 0x00000000004564f0; ret; 
0x00000000455e7e: sub r8, 0x13; lea rdi, [rdi+0x13]; jne 0x00000000004564f0; ret; 
0x00000000455e9e: sub r8, 0x14; lea rdi, [rdi+0x14]; jne 0x00000000004564f0; ret; 
0x00000000455ec1: sub r8, 0x15; lea rdi, [rdi+0x15]; jne 0x00000000004564f0; ret; 
0x00000000455ee0: sub r8, 0x16; lea rdi, [rdi+0x16]; jne 0x00000000004564f0; ret; 
0x00000000455f00: sub r8, 0x17; lea rdi, [rdi+0x17]; jne 0x00000000004564f0; ret; 
0x00000000455f20: sub r8, 0x18; lea rdi, [rdi+0x18]; jne 0x00000000004564f0; ret; 
0x00000000455f43: sub r8, 0x19; lea rdi, [rdi+0x19]; jne 0x00000000004564f0; ret; 
0x000000004529d7: sub r8, 0x1; lea rcx, [rdx+0x1]; jne 0x0000000000452d30; ret; 
0x0000000044ed18: sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c32: sub r8, 0x1; lea rdi, [rdi+0x1]; jne 0x00000000004564f0; ret; 
0x0000000044ef2f: sub r8, 0x1; lea rdi, [rdi+rdx+0x1]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455f78: sub r8, 0x1a; lea rdi, [rdi+0x1a]; jne 0x00000000004564f0; ret; 
0x00000000455fa6: sub r8, 0x1b; lea rdi, [rdi+0x1b]; jne 0x00000000004564f0; ret; 
0x00000000455fd6: sub r8, 0x1c; lea rdi, [rdi+0x1c]; jne 0x00000000004564f0; ret; 
0x00000000456002: sub r8, 0x1d; lea rdi, [rdi+0x1d]; jne 0x00000000004564f0; ret; 
0x00000000456032: sub r8, 0x1e; lea rdi, [rdi+0x1e]; jne 0x00000000004564f0; ret; 
0x00000000456062: sub r8, 0x1f; lea rdi, [rdi+0x1f]; jne 0x00000000004564f0; ret; 
0x0000000044f24b: sub r8, 0x20; jb 0x000000000044ee65; vmovdqu [rdi+0x60], ymm7; vzeroupper; ret; 
0x00000000456092: sub r8, 0x20; lea rdi, [rdi+0x20]; jne 0x00000000004564f0; ret; 
0x000000004529f9: sub r8, 0x2; lea rcx, [rdx+0x2]; jne 0x0000000000452d30; ret; 
0x0000000044eec6: sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c56: sub r8, 0x2; lea rdi, [rdi+0x2]; jne 0x00000000004564f0; ret; 
0x00000000452a1f: sub r8, 0x3; lea rcx, [rdx+0x3]; jne 0x0000000000452d30; ret; 
0x0000000044eeea: sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c79: sub r8, 0x3; lea rdi, [rdi+0x3]; jne 0x00000000004564f0; ret; 
0x00000000452a37: sub r8, 0x4; lea rcx, [rdx+0x4]; jne 0x0000000000452d30; ret; 
0x0000000044ef04: sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x000000000044f150; vzeroupper; ret; 
0x00000000455c94: sub r8, 0x4; lea rdi, [rdi+0x4]; jne 0x00000000004564f0; ret; 
0x00000000452a5d: sub r8, 0x5; lea rcx, [rdx+0x5]; jne 0x0000000000452d30; ret; 
0x00000000455cb7: sub r8, 0x5; lea rdi, [rdi+0x5]; jne 0x00000000004564f0; ret; 
0x00000000452a7f: sub r8, 0x6; lea rcx, [rdx+0x6]; jne 0x0000000000452d30; ret; 
0x00000000455cdc: sub r8, 0x6; lea rdi, [rdi+0x6]; jne 0x00000000004564f0; ret; 
0x00000000452a9d: sub r8, 0x7; lea rcx, [rdx+0x7]; jne 0x0000000000452d30; ret; 
0x00000000455cfa: sub r8, 0x7; lea rdi, [rdi+0x7]; jne 0x00000000004564f0; ret; 
0x00000000452779: sub r8, 0x8; lea rcx, [rdx+0x8]; jne 0x0000000000452d30; ret; 
0x00000000455d16: sub r8, 0x8; lea rdi, [rdi+0x8]; jne 0x00000000004564f0; ret; 
0x00000000452abf: sub r8, 0x9; lea rcx, [rdx+0x9]; jne 0x0000000000452d30; ret; 
0x00000000455d39: sub r8, 0x9; lea rdi, [rdi+0x9]; jne 0x00000000004564f0; ret; 
0x00000000452adf: sub r8, 0xa; lea rcx, [rdx+0xa]; jne 0x0000000000452d30; ret; 
0x00000000455d5e: sub r8, 0xa; lea rdi, [rdi+0xa]; jne 0x00000000004564f0; ret; 
0x00000000452aff: sub r8, 0xb; lea rcx, [rdx+0xb]; jne 0x0000000000452d30; ret; 
0x00000000455d7c: sub r8, 0xb; lea rdi, [rdi+0xb]; jne 0x00000000004564f0; ret; 
0x00000000452b1f: sub r8, 0xc; lea rcx, [rdx+0xc]; jne 0x0000000000452d30; ret; 
0x00000000455d9c: sub r8, 0xc; lea rdi, [rdi+0xc]; jne 0x00000000004564f0; ret; 
0x00000000452b41: sub r8, 0xd; lea rcx, [rdx+0xd]; jne 0x0000000000452d30; ret; 
0x00000000455dbe: sub r8, 0xd; lea rdi, [rdi+0xd]; jne 0x00000000004564f0; ret; 
0x00000000452b61: sub r8, 0xe; lea rcx, [rdx+0xe]; jne 0x0000000000452d30; ret; 
0x00000000455dde: sub r8, 0xe; lea rdi, [rdi+0xe]; jne 0x00000000004564f0; ret; 
0x00000000452b81: sub r8, 0xf; lea rcx, [rdx+0xf]; jne 0x0000000000452d30; ret; 
0x00000000455dfe: sub r8, 0xf; lea rdi, [rdi+0xf]; jne 0x00000000004564f0; ret; 
0x00000000448847: sub r9, rcx; lea r10, [rip+0x6ed4f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004465f7: sub r9, rcx; lea r10, [rip+0x70f5f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000436457: sub r9, rcx; lea r10, [rip+0x8018f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000434bf7: sub r9, rcx; lea r10, [rip+0x819af]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000433527: sub r9, rcx; lea r10, [rip+0x8303f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000431e27: sub r9, rcx; lea r10, [rip+0x846ff]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000410957: sub r9d, [r10]; add [rax+0x63], cl; add al, 0x81; add rax, rdx; ret; 
0x00000000430519: sub rax, 0x10; ret; 
0x000000004293ab: sub rax, 0x11; shr rax, 0x4; lea rdx, [rax+0x1]; mov [rip+0xb93d2], rdx; ret; 
0x00000000459013: sub rax, 0x1; ret; 
0x000000004916f9: sub rax, [0x0]; ret; 
0x000000004292c1: sub rax, [rdi+0x18]; ret; 
0x000000004916f8: sub rax, fs:[0x0]; ret; 
0x00000000424bc8: sub rax, r12; cmp rax, rbx; jae 0x0000000000424c80; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x00000000424ecd: sub rax, r12; cmp rbx, rax; jbe 0x0000000000424f80; mov rdi, rbp; call qword ptr [r13+0x20]; 
0x0000000041ed29: sub rax, rbx; shr rax, 0x3; lea r12, [rbx+rax*8+0x8]; nop [rax]; call qword ptr [rbx]; 
0x000000004398d2: sub rax, rcx; je short 0x00000000004398e0; sbb eax, eax; or eax, 0x1; ret; 
0x00000000427a68: sub rax, rcx; sub eax, 0x1; ret; 
0x0000000044e4b8: sub rax, rdi; ret; 
0x00000000483f3d: sub rax, rdi; shr rax, 0x2; ret; 
0x00000000424780: sub rax, rdx; pop rbp; pop r12; ret; 
0x000000004590f3: sub rax, rdx; ret; 
0x000000004842df: sub rax, rdx; shr rax, 0x2; vzeroupper; ret; 
0x0000000044e51f: sub rax, rdx; vzeroupper; ret; 
0x0000000047b607: sub rbx, r14; mov r13, rbx; sar r13, 0x2; mov rdx, r13; call qword ptr [rax+0x38]; 
0x0000000047bb07: sub rbx, r8; sar rbx, 0x2; mov rdx, rbx; call qword ptr [rax+0x38]; 
0x0000000049c921: sub rcx, [rax+0x10]; cmp rcx, [rax+0x28]; jae short 0x000000000049c910; mov eax, 0x1; ret; 
0x00000000481688: sub rcx, rax; sar rcx, 0x2; lea eax, [rcx-0x1]; ret; 
0x00000000425369: sub rcx, rdx; cmp rax, rcx; jbe 0x0000000000425460; mov rdi, rbx; call qword ptr [r12+0x88]; 
0x000000004271f9: sub rcx, rdx; cmp rax, rcx; jbe 0x00000000004273a8; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000427432: sub rcx, rdx; cmp rax, rcx; jbe 0x0000000000427508; mov rdi, rbx; call qword ptr [r13+0x60]; 
0x00000000425bd9: sub rcx, rdx; cmp rax, rcx; jbe short 0x0000000000425c18; mov rdi, rbp; call qword ptr [rbx+0x88]; 
0x00000000426e32: sub rcx, rdx; cmp rax, rcx; jbe short 0x0000000000426ea0; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000426ee8: sub rcx, rdx; cmp rax, rcx; jbe short 0x0000000000426f18; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000427978: sub rcx, rdx; cmp rax, rcx; jbe short 0x00000000004279b0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000048159d: sub rcx, rdx; cmp rax, rcx; jbe short 0x00000000004815d0; mov rdi, rbx; call qword ptr [rbp+0x30]; 
0x0000000043e0d2: sub rdi, 0x20; lea r11, [rip+0x78893]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b6f2: sub rdi, 0x20; lea r11, [rip+0x7b0b3]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dfe1: sub rdi, 0x40; lea r11, [rip+0x78984]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043df21: sub rdi, 0x40; lea r11, [rip+0x78a43]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b601: sub rdi, 0x40; lea r11, [rip+0x7b1a4]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b541: sub rdi, 0x40; lea r11, [rip+0x7b263]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004233f8: sub rdi, rcx; cmp rax, rdi; jbe short 0x0000000000423420; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x000000004812ff: sub rdi, rdx; cmp rax, rdi; jbe 0x00000000004814c0; mov rdi, r13; call qword ptr [r14+0x20]; 
0x00000000444e4e: sub rdi, rdx; lea r11, [rip+0x721d8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044231a: sub rdi, rdx; lea r11, [rip+0x7480c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440710: sub rdx, 0x40; lea r11, [rip+0x76255]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004407f4: sub rdx, 0x80; movsxd r9, [r11+r9*4]; add r9, r11; notrack jmp r9; 
0x000000004304ad: sub rdx, 0x8; and eax, 0x1; cmovne rax, rdx; ret; 
0x00000000481731: sub rdx, [rcx+0x10]; sar rdx, 0x2; sub eax, edx; ret; 
0x00000000481743: sub rdx, [rcx+0x8]; sar rdx, 0x2; sub eax, edx; ret; 
0x0000000048266c: sub rdx, rax; jbe 0x0000000000482910; add rax, rdi; add rax, rcx; ret; 
0x000000004989cc: sub rdx, rax; jbe 0x0000000000498c70; add rax, rdi; add rax, rcx; ret; 
0x000000004828d3: sub rdx, rax; jbe short 0x0000000000482910; add rax, rdi; ret; 
0x000000004828e3: sub rdx, rax; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x10]; ret; 
0x000000004828f3: sub rdx, rax; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x20]; ret; 
0x00000000482903: sub rdx, rax; jbe short 0x0000000000482910; lea rax, [rdi+rax+0x30]; ret; 
0x00000000498c33: sub rdx, rax; jbe short 0x0000000000498c70; add rax, rdi; ret; 
0x00000000498c43: sub rdx, rax; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x10]; ret; 
0x00000000498c53: sub rdx, rax; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x20]; ret; 
0x00000000498c63: sub rdx, rax; jbe short 0x0000000000498c70; lea rax, [rdi+rax+0x30]; ret; 
0x0000000045697b: sub rdx, rcx; lea r11, [rip+0x60ebf]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x000000004559fb: sub rdx, rcx; lea r11, [rip+0x61ceb]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000045533b: sub rdx, rcx; lea r11, [rip+0x6232b]; movsxd rcx, [r11+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000042367c: sub rdx, rsi; call qword ptr [r12+0x70]; 
0x00000000421043: sub rdx, rsi; call qword ptr [rax+0x70]; 
0x000000004731f7: sub rdx, rsi; call qword ptr [rbx+0x38]; 
0x0000000042173a: sub rdx, rsi; mov [rsp+0x8], rcx; mov rdi, r15; call rax; 
0x00000000423d1b: sub rdx, rsi; mov [rsp], rcx; mov rdi, rbp; call rax; 
0x000000004797d0: sub rdx, rsi; sar rdx, 0x2; call qword ptr [r12+0x38]; 
0x00000000424978: sub rsi, rcx; mov [rsp], r8; mov edx, 0x1; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000420558: sub rsi, rdx; cmp rax, rsi; jbe short 0x00000000004205b8; mov rdi, rbx; call qword ptr [rbp+0x60]; 
0x00000000420be9: sub rsi, rdx; cmp rax, rsi; jbe short 0x0000000000420c64; mov rdi, rbx; call qword ptr [rbp+0x68]; 
0x00000000480a28: sub rsi, rdx; cmp rax, rsi; jbe short 0x0000000000480a68; mov rdi, rbx; call qword ptr [rbp+0x20]; 
0x00000000444af0: sub rsi, rdx; lea r11, [rip+0x72536]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444970: sub rsi, rdx; lea r11, [rip+0x726b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004447f0: sub rsi, rdx; lea r11, [rip+0x72836]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444670: sub rsi, rdx; lea r11, [rip+0x729b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004444f0: sub rsi, rdx; lea r11, [rip+0x72b36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444370: sub rsi, rdx; lea r11, [rip+0x72cb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004441f0: sub rsi, rdx; lea r11, [rip+0x72e36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444070: sub rsi, rdx; lea r11, [rip+0x72fb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443ef0: sub rsi, rdx; lea r11, [rip+0x73136]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443d70: sub rsi, rdx; lea r11, [rip+0x732b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443bf0: sub rsi, rdx; lea r11, [rip+0x73436]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443a70: sub rsi, rdx; lea r11, [rip+0x735b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004438f0: sub rsi, rdx; lea r11, [rip+0x73736]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443770: sub rsi, rdx; lea r11, [rip+0x738b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004435f0: sub rsi, rdx; lea r11, [rip+0x73a36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443477: sub rsi, rdx; lea r11, [rip+0x73baf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441ff0: sub rsi, rdx; lea r11, [rip+0x74b36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441e70: sub rsi, rdx; lea r11, [rip+0x74cb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441cf0: sub rsi, rdx; lea r11, [rip+0x74e36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441b70: sub rsi, rdx; lea r11, [rip+0x74fb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004419f0: sub rsi, rdx; lea r11, [rip+0x75136]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441870: sub rsi, rdx; lea r11, [rip+0x752b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004416f0: sub rsi, rdx; lea r11, [rip+0x75436]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441570: sub rsi, rdx; lea r11, [rip+0x755b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004413f0: sub rsi, rdx; lea r11, [rip+0x75736]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441270: sub rsi, rdx; lea r11, [rip+0x758b6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004410f0: sub rsi, rdx; lea r11, [rip+0x75a36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440f70: sub rsi, rdx; lea r11, [rip+0x75bb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440df0: sub rsi, rdx; lea r11, [rip+0x75d36]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440c70: sub rsi, rdx; lea r11, [rip+0x75eb6]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440af0: sub rsi, rdx; lea r11, [rip+0x76036]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440977: sub rsi, rdx; lea r11, [rip+0x761af]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004251f7: sub rsi, rdx; mov rdi, rbx; mov edx, 0x1; call qword ptr [r14+0x80]; 
0x000000004a8164: sub rsp, 0x8; add rsp, 0x8; ret; 
0x00000000401004: sub rsp, 0x8; mov rax, 0x0; test rax, rax; je short 0x0000000000401016; call rax; 
0x0000000048479c: sub rsp, 0x8; mov rax, [rip+0x5d2f1]; test rax, rax; je short 0x00000000004847e0; call rax; 
0x00000000408b3d: sub rsp, 0x8; movsxd rax, [rcx+rsi*4]; add rax, rcx; notrack jmp rax; 
0x000000004033c6: sub rsp, 0x8; movsxd rax, [rdx+rdi*4]; add rax, rdx; notrack jmp rax; 
0x000000004012e3: syscall; 
0x0000000045e90b: sysret; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x000000004465fe: sysret; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000043e427: test [r15], r8d; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044eef3: test [rax+0x2], ebx; add [rax], al; vzeroupper; ret; 
0x00000000470239: test [rax+0x48000000], ebx; add esp, 0x98; ret; 
0x00000000402afa: test [rax+0x48000000], edx; add esp, 0xc8; ret; 
0x0000000045e39c: test [rax+0x49000002], ecx; mov edi, [rdi]; call rbx; 
0x0000000045e450: test [rax+0x49000002], esi; mov edi, [rdi]; call rbx; 
0x0000000045d340: test [rax+0x49000003], cl; mov esi, [rsi]; mov rax, [rsp+0x8]; mov rdi, r13; call rax; 
0x0000000045609b: test [rax+0x4], edx; add [rax], al; ret; 
0x0000000048348b: test [rax+0x4c000000], esp; mov eax, eax; vzeroupper; ret; 
0x0000000043a7de: test [rax+0xf000009], eax; mov dh, 0x47; dec dword ptr [rdi]; mov dh, 0x56; jmp far fword ptr [rcx]; 
0x0000000040a41f: test [rax+rax+0x22760000], al; cmp edi, 0xc0000008; jne short 0x000000000040a4a0; mov rax, 0x4ded80; ret; 
0x000000004572ef: test [rax+rax+0x40a80000], edi; jne 0x00000000004573c0; lea rax, [rdi+0x7]; ret; 
0x000000004a042f: test [rax+rax+0x438b0000], al; adc [rbp+0x2d840fc0], al; add eax, [rax]; add [rax+0x1], cl; ret; 
0x00000000482ac7: test [rax+rax-0x3fcf0000], edx; vzeroupper; ret; 
0x000000004922d7: test [rax+rax], edi; add [rax-0x75], cl; and al, 0x10; mov rdi, [rsp+0x18]; call rcx; 
0x0000000042d1a7: test [rax+rax], edi; add [rbx+0xb562d2d], al; add [rcx], al; pop rbp; ret; 
0x0000000047b5cc: test [rax+rbx*8], ah; add [rax], al; add [rax-0x39], cl; ret; 
0x00000000487045: test [rax+rdi*4], ah; add al, [rax]; add [rax+0x29], cl; ret; 
0x0000000047c734: test [rax-0x17000006], edi; xchg edx, eax; ret far; 
0x0000000040b3bb: test [rax-0x7cffffff], ah; call qword ptr [rbx+0x147840f]; 
0x0000000040a3bb: test [rax-0x7f000000], ah; jmp far fword ptr [rax]; 
0x0000000041e14a: test [rax], ah; add [rax], al; add [rdi], cl; sub [rsp+0xf0], eax; syscall; 
0x000000004841ea: test [rax], al; add [rax], al; add [rax], al; add rax, 0x3; ret; 
0x0000000042eb5a: test [rax], al; add [rax], al; add [rax], al; add rsp, 0x18; ret; 
0x0000000045737a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x2]; ret; 
0x0000000045738a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x3]; ret; 
0x0000000045739a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x4]; ret; 
0x000000004573aa: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x5]; ret; 
0x000000004573ba: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x6]; ret; 
0x000000004573ca: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x8]; ret; 
0x000000004573da: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0x9]; ret; 
0x000000004573ea: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xa]; ret; 
0x000000004573fa: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xb]; ret; 
0x0000000045740a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xc]; ret; 
0x0000000045741a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xd]; ret; 
0x0000000045742a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rdi+0xe]; ret; 
0x0000000040d7da: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9bd77]; ret; 
0x0000000040d7ba: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9bd80]; ret; 
0x0000000040d7aa: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9bd84]; ret; 
0x0000000040d79a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9bd8c]; ret; 
0x0000000040d7ca: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9bd8e]; ret; 
0x0000000040d78a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9bd8f]; ret; 
0x0000000040d81a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9bdba]; ret; 
0x0000000040d77a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9bdcc]; ret; 
0x0000000040d80a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9bdd1]; ret; 
0x0000000040d7fa: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9bde8]; ret; 
0x0000000040d7ea: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9bdff]; ret; 
0x0000000040cc9a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9c8b7]; ret; 
0x0000000040cc7a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9c8c0]; ret; 
0x0000000040cc6a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9c8c4]; ret; 
0x0000000040cc5a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9c8cc]; ret; 
0x0000000040cc8a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9c8ce]; ret; 
0x0000000040cc4a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9c8cf]; ret; 
0x0000000040ccda: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9c8fa]; ret; 
0x0000000040cc3a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9c90c]; ret; 
0x0000000040ccca: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9c911]; ret; 
0x0000000040ccba: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9c928]; ret; 
0x0000000040ccaa: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9c93f]; ret; 
0x0000000040c15a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9d3f7]; ret; 
0x0000000040c13a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9d400]; ret; 
0x0000000040c12a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9d404]; ret; 
0x0000000040c11a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9d40c]; ret; 
0x0000000040c14a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9d40e]; ret; 
0x0000000040c10a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9d40f]; ret; 
0x0000000040c19a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9d43a]; ret; 
0x0000000040c0fa: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9d44c]; ret; 
0x0000000040c18a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9d451]; ret; 
0x0000000040c17a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9d468]; ret; 
0x0000000040c16a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9d47f]; ret; 
0x0000000040b55a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9e014]; ret; 
0x0000000040b54a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9e01c]; ret; 
0x0000000040b53a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9e023]; ret; 
0x0000000040b52a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9e02e]; ret; 
0x0000000040b51a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9e037]; ret; 
0x0000000040b4fa: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9e040]; ret; 
0x0000000040b4ea: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9e044]; ret; 
0x0000000040b4da: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9e04c]; ret; 
0x0000000040b4ca: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9e04f]; ret; 
0x0000000040b4aa: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9e077]; ret; 
0x0000000040b4ba: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0x9e08c]; ret; 
0x0000000040b50a: test [rax], al; add [rax], al; add [rax], al; lea rax, [rip+0xc02d8]; ret; 
0x00000000452bca: test [rax], al; add [rax], al; add [rax], al; mov [rcx], edx; ret; 
0x00000000452c0a: test [rax], al; add [rax], al; add [rax], al; mov [rcx], rdx; ret; 
0x0000000045fb1a: test [rax], al; add [rax], al; add [rax], al; mov [rdi+0x20], rsi; ret; 
0x0000000045641a: test [rax], al; add [rax], al; add [rax], al; mov [rdi-0x1], rdx; ret; 
0x000000004553ca: test [rax], al; add [rax], al; add [rax], al; mov [rdi], dh; ret; 
0x0000000045642a: test [rax], al; add [rax], al; add [rax], al; mov [rdi], rdx; ret; 
0x0000000040aeca: test [rax], al; add [rax], al; add [rax], al; mov eax, 0xffffff8a; ret; 
0x0000000040aeba: test [rax], al; add [rax], al; add [rax], al; mov eax, 0xffffff97; ret; 
0x0000000040aeea: test [rax], al; add [rax], al; add [rax], al; mov eax, 0xffffff99; ret; 
0x0000000040aeda: test [rax], al; add [rax], al; add [rax], al; mov eax, 0xffffff9a; ret; 
0x00000000422bda: test [rax], al; add [rax], al; add [rax], al; mov eax, 0xffffffff; ret; 
0x0000000048421a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x2; ret; 
0x0000000048422a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x3; ret; 
0x0000000048423a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x4; ret; 
0x0000000040a4da: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x4dec40; ret; 
0x0000000040a4ca: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x4dec80; ret; 
0x0000000040a47a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x4ded40; ret; 
0x0000000040a4ea: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x4dee80; ret; 
0x0000000040a46a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x4deec0; ret; 
0x0000000040a48a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x4e11a0; ret; 
0x0000000040a4fa: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x4e1260; ret; 
0x0000000040a4ba: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x4e12e0; ret; 
0x0000000048424a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x5; ret; 
0x0000000048425a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x6; ret; 
0x0000000048426a: test [rax], al; add [rax], al; add [rax], al; mov rax, 0x7; ret; 
0x00000000430c1a: test [rax], al; add [rax], al; add [rax], al; mov rsi, r12; call rax; 
0x0000000045649a: test [rax], al; add [rax], al; add [rax], al; movdqu [rdi-0x1], xmm0; ret; 
0x000000004564aa: test [rax], al; add [rax], al; add [rax], al; movdqu [rdi], xmm0; ret; 
0x000000004560a6: test [rax], al; add [rax], al; add [rax], al; nop [rax]; ret; 
0x0000000049bada: test [rax], al; add [rax], al; add [rax], al; pop rbp; ret; 
0x0000000040488a: test [rax], al; add [rax], al; add [rax], al; ret; 
0x0000000040256a: test [rax], al; add [rax], al; add [rax], al; xor eax, eax; ret; 
0x0000000045719a: test [rax], al; add [rax], al; add [rax], al; xor rax, rax; ret; 
0x00000000479f62: test [rax], dl; add eax, 0x83410000; out dx, eax; add [rax-0x93343], eax; jmp qword ptr [rax]; 
0x000000004788ba: test [rax], eax; add [rax], al; add [rax+0x29], cl; ret; 
0x000000004a29da: test [rax], eax; add rax, r13; notrack jmp rax; 
0x00000000461452: test [rax], eax; add rax, rbp; notrack jmp rax; 
0x0000000047356d: test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x000000004789a2: test [rax], ebp; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x0000000047255d: test [rax], edi; idiv edi; jmp qword ptr [rax+rcx*2-0x75]; 
0x000000004736e1: test [rax], edx; idiv edi; inc dword ptr [rcx]; ret; 
0x00000000473fd0: test [rax], edx; idiv edi; jmp far fword ptr [rcx]; 
0x000000004a29d9: test [rax], r8d; add rax, r13; notrack jmp rax; 
0x00000000461451: test [rax], r8d; add rax, rbp; notrack jmp rax; 
0x00000000452ee6: test [rbp+0x48fffffb], ah; mov eax, [rcx]; mov [rdx], rax; mov rax, rdi; ret; 
0x0000000045e066: test [rbp+0x49000000], esp; mov edi, [rbp]; call rbx; 
0x0000000045e126: test [rbp+0x49000002], esi; mov edi, [rsi]; call rbx; 
0x000000004845fe: test [rbp+0x4c000000], ebx; mov eax, eax; shr rax, 0x2; vzeroupper; ret; 
0x0000000043c227: test [rbp+0x63490007], esp; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f3e7: test [rbp+0x7], esi; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045e52c: test [rbp+0x9], edi; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000040b3d6: test [rbp-0x7cffffff], dl; call qword ptr [rcx+0x194840f]; 
0x0000000049e593: test [rbp], edi; add [rax], al; leave; ret; 
0x00000000452ae8: test [rbx+0x2], eax; add [rax], al; ret; 
0x00000000452ac8: test [rbx+0x2], esp; add [rax], al; ret; 
0x000000004529e0: test [rbx+0x3], ecx; add [rax], al; ret; 
0x0000000045eac2: test [rbx+0x4c000005], esi; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045e4f8: test [rbx+0x4c000009], eax; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000043aa17: test [rbx+0x7], edx; add [rax], al; xor eax, eax; ret; 
0x0000000043ae66: test [rbx+rax], eax; add [rax], al; xor eax, eax; ret; 
0x0000000040b3a0: test [rbx-0x7cffffff], cl; call qword ptr [rax+0x192840f]; 
0x00000000414c36: test [rbx], ch; add [rax], eax; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x0000000046baee: test [rbx], dl; add [rax], eax; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x0000000045e156: test [rbx], ebp; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000045c267: test [rcx+0x48000000], ebx; add esp, 0x68; ret; 
0x0000000045e186: test [rcx+0x49000001], esp; mov edi, [rsi]; call rbx; 
0x0000000045e315: test [rcx+0x4], ebx; add [rax], al; mov rdi, [r15]; call rbx; 
0x000000004527ea: test [rcx+0x5], eax; add [rax], al; ret; 
0x0000000045ea54: test [rcx+0x5], ebp; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000043dfe8: test [rcx+0x63490007], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045e89c: test [rcx+0x6], ebp; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000043a9ed: test [rcx+0x7], esi; add [rax], al; xor eax, eax; ret; 
0x00000000455c82: test [rcx+0x8], ebp; add [rax], al; ret; 
0x0000000043a8fd: test [rcx+0x8], esp; add [rax], al; xor eax, eax; ret; 
0x0000000043a80d: test [rcx+0x9], edx; add [rax], al; xor eax, eax; ret; 
0x0000000045e59a: test [rcx+0xa], edx; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000405ae3: test [rcx+rax-0x20], cl; notrack jmp rax; 
0x0000000046bb5a: test [rcx+rax], bh; add [rcx-0x73], cl; add cl, [rax+0x39]; ret far; 
0x00000000482cdf: test [rcx+rax], ch; add [rax], al; bsr rsi, rsi; lea rax, [rdi+rsi]; ret; 
0x0000000041412e: test [rcx+rdi*8-0x1], eax; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x00000000452b8a: test [rcx-0x3cffffff], esp; ret; 
0x0000000040b3fa: test [rcx-0x7cffffff], dl; call qword ptr [rdi+rcx+0x19084]; 
0x000000004376c6: test [rcx], bh; add al, 0x0; add [rbp-0x77], cl; ret far; 
0x00000000437ea6: test [rcx], bh; or al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000004369d6: test [rcx], ch; adc [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000437db6: test [rcx], ch; or eax, 0x894d0000; ret far; 
0x000000004366f6: test [rcx], cl; adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x0000000045e237: test [rdi+0x3], edi; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000045b38d: test [rdi+0x48000000], ebx; add esp, 0x8; pop rbx; pop rbp; ret; 
0x00000000455de7: test [rdi+rax], eax; add [rax], al; ret; 
0x00000000455dc7: test [rdi+rax], esp; add [rax], al; ret; 
0x00000000413b8d: test [rdi+rcx-0x7fc00000], ah; call far fword ptr [rax+0xf]; 
0x0000000042f8ca: test [rdi+rdi*8-0x1], ch; call qword ptr [rax+0x48ed0148]; 
0x00000000499d07: test [rdi+rdi*8-0x1], ebp; call far fword ptr [rbx+0x48]; 
0x00000000405845: test [rdi+rdi*8-0x1], ebp; jmp qword ptr [rsi+0xf]; 
0x00000000493604: test [rdi+rdi*8-0x1], esp; jmp qword ptr [rsi]; 
0x00000000455d68: test [rdi], al; add [rax], al; ret; 
0x0000000043e4c6: test [rdi], al; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045d3ec: test [rdi], cl; add al, [rax]; add [rcx-0x7d], cl; ret far; 
0x0000000043e376: test [rdi], eax; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045e0c6: test [rdi], eax; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000045e0f6: test [rdi], edi; add eax, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000044efd1: test [rdx+0x1], edi; add [rax], al; vzeroupper; ret; 
0x00000000483e21: test [rdx+0x48000000], bl; bsf eax, edx; shr rax, 0x2; ret; 
0x000000004a0e0d: test [rdx+0x48000001], edx; add esp, 0x78; pop rbp; pop r12; ret; 
0x0000000045ea8b: test [rdx+0x4c000001], ebx; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045e63f: test [rdx+0x4c000007], esi; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000045e7f7: test [rdx+0x5], eax; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000455f81: test [rdx+0x5], ebp; add [rax], al; ret; 
0x0000000045e71b: test [rdx+0x6], edi; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e342: test [rdx+0x6], edx; add [rax], al; mov rdi, [r15]; call rbx; 
0x0000000043a732: test [rdx+rcx], ebp; add [rax], al; xor eax, eax; ret; 
0x0000000040b3f1: test [rdx-0x7cffffff], dl; call far fword ptr [rbx+0x191840f]; 
0x00000000452aa7: test [rdx], eax; add [rax], al; ret; 
0x00000000475779: test [rdx], esp; sbb [rax], eax; add [rcx-0x80], al; call qword ptr [rbx+0xf]; 
0x0000000045e036: test [rip+0x49000001], esi; mov edi, [rbp]; call rbx; 
0x0000000045e3c9: test [rip+0x49000007], edx; mov edi, [rdi]; call rbx; 
0x0000000045e676: test [rip+0x4c00000a], ebp; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000040bfde: test [rip-0x7cffffff], bl; call far fword ptr [rax+0x174840f]; 
0x0000000040b38e: test [rip-0x7cffffff], ch; call far fword ptr [rax+0x184840f]; 
0x00000000458a22: test [rsi+0x1], ebp; add [rax], al; xor eax, eax; ret; 
0x0000000043900d: test [rsi+0x29fffffe], ebx; enter 0xf8c5, 0x77; ret; 
0x0000000045e941: test [rsi+0x3], ebp; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000048315d: test [rsi+0x48000000], bl; bsf eax, edx; ret; 
0x0000000045bfe6: test [rsi+0x48000000], esp; add esp, 0x68; pop rbp; pop r12; ret; 
0x0000000045e865: test [rsi+0x4c000004], esp; mov [rsp+0x8], eax; mov rdi, [r8]; call rbx; 
0x0000000043b2a8: test [rsi+0x634f0007], dh; or al, 0x8b; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000455da5: test [rsi+0x7], eax; add [rax], al; ret; 
0x00000000455d85: test [rsi+0x7], esp; add [rax], al; ret; 
0x0000000045e5d1: test [rsi+0x8], ecx; add [rax], al; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000455c9d: test [rsi+0x8], ecx; add [rax], al; ret; 
0x0000000045abda: test [rsi-0x14000002], esi; ret far; 
0x0000000047fd78: test [rsi-0x74fffffe], cl; adc [rax-0x77], ecx; ret far; 
0x00000000414375: test [rsi], esp; add [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx-0x7c]; 
0x0000000043ac38: test [rsi], esp; add eax, 0xc0310000; ret; 
0x00000000414917: test [rsp+rdi*8-0x1], al; dec dword ptr [rcx+0x3c8348c9]; ret far; 
0x00000000457346: test ah, 0x40; jne 0x0000000000457430; lea rax, [rdi+0xf]; ret; 
0x00000000427886: test al, 0x0; add [rax], al; add [rax], al; add [rax], al; ret; 
0x000000004a17dc: test al, 0x0; add [rax], al; add rsp, 0x8; ret; 
0x00000000484e98: test al, 0x0; add [rax], al; pop rbp; pop r12; ret; 
0x000000004a3a47: test al, 0x0; add [rax], al; ret; 
0x0000000048f92d: test al, 0x3; add al, ch; sbb esp, [rbx]; clc; jmp qword ptr [rsi+0x2e]; 
0x000000004572f4: test al, 0x40; jne 0x00000000004573c0; lea rax, [rdi+0x7]; ret; 
0x0000000045d7f0: test al, 0x45; mov edi, ebp; call rax; 
0x0000000042e470: test al, 0x68; or eax, [rax]; add [rax], al; add [rax], al; ret; 
0x0000000043bed6: test al, 0x7; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048b5d4: test al, 0x7b; add eax, 0x48c03100; add esp, 0x8; ret; 
0x0000000042792e: test al, 0x90; endbr64; mov rax, 0xffffffffffffffff; ret; 
0x000000004017c6: test al, al; jne short 0x00000000004017cb; ret; 
0x0000000042e46a: test al, al; jne short 0x000000000042e479; mov dword ptr [rip+0xb68a8], 0x0; ret; 
0x0000000043348a: test al, al; jne short 0x0000000000433470; xor eax, eax; sub eax, ecx; ret; 
0x00000000490d2c: test al, al; jne short 0x0000000000490cfe; movsx eax, dl; neg eax; ret; 
0x000000004a669d: test al, bh; dec dword ptr [rax-0x7d]; ret; 
0x0000000040928b: test al, dh; add [rax], al; add [rax-0x77], cl; ret; 
0x00000000420683: test bh, al; add [rax], al; add [rax-0x77], cl; ret; 
0x000000004142d6: test bh, al; or al, [rax]; add [rax-0x80], al; call far fword ptr [rax+0xf]; 
0x00000000409f0c: test bh, bh; add [rax], al; add [rax-0x77], cl; ror byte ptr [rax-0x77], 0x1; ret far; 
0x000000004a4519: test bh, bh; jne short 0x00000000004a4553; mov eax, 0x8; add rsp, 0x8; ret; 
0x000000004a16bc: test bh, bh; js short 0x00000000004a16e8; mov [r9], r8; add rsp, 0x8; ret; 
0x000000004a466c: test bh, bh; js short 0x00000000004a4698; mov [r9], r8; add rsp, 0x8; ret; 
0x000000004a600c: test bh, bh; js short 0x00000000004a6038; mov [r9], r8; add rsp, 0x8; ret; 
0x0000000049975c: test bh, dh; call qword ptr [rax-0x5e1f00d]; 
0x0000000043d009: test byte ptr [r9-0x6f3c03a9], 0x66; mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000045fb95: test byte ptr [rax+0x3b], 0x48; sbb [rdi-0x10], bh; mov [rax+0x20], rcx; mov byte ptr [rax+0x28], 0x1; ret; 
0x0000000045fb2d: test byte ptr [rax+0x3b], 0x57; sbb [rdi-0x10], bh; mov [rdi+0x20], rdx; mov byte ptr [rdi+0x28], 0x1; ret; 
0x00000000408a35: test byte ptr [rax+0x63], 0x4; mov cl, 0x48; add eax, ecx; notrack jmp rax; 
0x0000000045bbc6: test byte ptr [rax-0x73], 0x3d; jge short 0x000000000045bb8e; add eax, 0xe8c03100; ret far; 
0x00000000420919: test byte ptr [rax-0x77], 0xdf; call qword ptr [r15+0x38]; 
0x00000000427ece: test byte ptr [rax-0x77], 0xdf; call qword ptr [r15+0x58]; 
0x00000000424562: test byte ptr [rax-0x77], 0xdf; call qword ptr [rbp+0x70]; 
0x000000004a4302: test byte ptr [rax-0x77], 0xdf; call r15; 
0x0000000041ffda: test byte ptr [rax-0x77], 0xef; call qword ptr [rbx+0x10]; 
0x00000000415ea9: test byte ptr [rax], 0x0; add [rax-0x7d], cl; ret; 
0x0000000045919d: test byte ptr [rbp+0x48d674d2], 0x63; leave; add rax, rcx; sub rax, rdi; ret; 
0x0000000046ff76: test byte ptr [rbp-0x6bf0bf40], 0xc6; xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x0000000043cfe6: test byte ptr [rbx-0x76b303aa], 0x5f; out dx, al; mov [rdi-0xa], rcx; mov [rdi-0x4], edx; ret; 
0x0000000043d002: test byte ptr [rbx-0x76b703aa], 0x4f; test byte ptr [rcx-0x6f3c03a9], 0x66; mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x0000000040c1dc: test byte ptr [rbx], 0x0; ret; 
0x000000004a2b8c: test byte ptr [rcx+0x63], 0x4; mov ah, 0x4c; add eax, esp; notrack jmp rax; 
0x000000004a2b4f: test byte ptr [rcx+0x63], 0x4; mov cl, 0x4c; add eax, ecx; notrack jmp rax; 
0x00000000403503: test byte ptr [rcx+0xdec1635], 0x0; ret; 
0x000000004034f3: test byte ptr [rcx+0xdec2235], 0x0; ret; 
0x000000004034e3: test byte ptr [rcx+0xdec2635], 0x0; ret; 
0x000000004034d3: test byte ptr [rcx+0xdec3235], 0x0; ret; 
0x000000004034c3: test byte ptr [rcx+0xdec5e35], 0x0; ret; 
0x000000004033a3: test byte ptr [rcx+0xded6a35], 0x0; ret; 
0x00000000403393: test byte ptr [rcx+0xded7e35], 0x0; ret; 
0x00000000403383: test byte ptr [rcx+0xded9a35], 0x0; ret; 
0x0000000047997e: test byte ptr [rcx+rcx*4-0x11], 0x44; mov [rbp-0x970], edx; mov [rbp-0x958], r9b; call rax; 
0x0000000042916a: test byte ptr [rcx+rcx*4-0x11], 0xe8; fnstsw [rsi-0x3]; dec dword ptr [rax-0x77]; ret; 
0x0000000049425b: test byte ptr [rcx+rcx*4-0x19], 0x4c; mov [rbp-0xe8], eax; call rax; 
0x00000000429235: test byte ptr [rcx+rcx*4-0x19], 0xe8; adc bh, [rsi-0x3]; dec dword ptr [rax-0x77]; ret; 
0x00000000473146: test byte ptr [rcx+rcx*4-0x1], 0x44; mov [rbp-0x94c], ecx; mov [rbp-0x940], r11d; call rax; 
0x0000000043d00a: test byte ptr [rcx-0x6f3c03a9], 0x66; mov edx, [rsi-0x2]; mov [rdi-0x2], dx; ret; 
0x00000000408b36: test byte ptr [rcx-0x76b7ac2b], 0xfb; sub rsp, 0x8; movsxd rax, [rcx+rsi*4]; add rax, rcx; notrack jmp rax; 
0x00000000480d4f: test byte ptr [rdi], 0x2; jne short 0x0000000000480dc8; mov rax, [rax+0xe0]; call qword ptr [rax+0x68]; 
0x000000004a68ae: test byte ptr [rdi], 0x84; ret far; 
0x00000000460f1d: test byte ptr [rdi], 0x84; xchg edi, eax; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000045e034: test byte ptr [rdi], 0x85; xor eax, 0x49000001; mov edi, [rbp]; call rbx; 
0x0000000049b9fa: test byte ptr [rip+0x49f1f], 0x40; jne short 0x000000000049ba08; ret; 
0x00000000498654: test byte ptr [rip+0x4c72f], 0x10; lea rdx, [rip+0x11e]; lea rax, [rip+0x67]; cmovne rax, rdx; ret; 
0x00000000483d3b: test byte ptr [rip+0x61048], 0x8; lea rax, [rip+0x257]; lea rdx, [rip+0x30]; cmovne rax, rdx; ret; 
0x00000000431ca0: test byte ptr [rip+0xb30ee], 0x2; lea rdx, [rip+0x27832]; lea rax, [rip+0x278eb]; cmove rax, rdx; ret; 
0x00000000431c84: test byte ptr [rip+0xb310a], 0x2; lea rdx, [rip+0x2805e]; lea rax, [rip+0x280a7]; cmove rax, rdx; ret; 
0x00000000431c32: test byte ptr [rip+0xb315c], 0x2; lea rdx, [rip+0x27c70]; lea rax, [rip+0x27cb9]; cmove rax, rdx; ret; 
0x00000000431b8b: test byte ptr [rip+0xb31f7], 0x2; lea rax, [rip+0x1d8a7]; lea rdx, [rip+0x21cc0]; cmovne rax, rdx; ret; 
0x00000000431b30: test byte ptr [rip+0xb325e], 0x2; lea rdx, [rip+0x27992]; lea rax, [rip+0x27a4b]; cmove rax, rdx; ret; 
0x00000000431b14: test byte ptr [rip+0xb327a], 0x2; lea rdx, [rip+0x281be]; lea rax, [rip+0x28207]; cmove rax, rdx; ret; 
0x00000000431ac2: test byte ptr [rip+0xb32cc], 0x2; lea rdx, [rip+0x27dd0]; lea rax, [rip+0x27e19]; cmove rax, rdx; ret; 
0x00000000431a74: test byte ptr [rip+0xb331a], 0x2; lea rdx, [rip+0x28ace]; lea rax, [rip+0x28b27]; cmove rax, rdx; ret; 
0x000000004319d0: test byte ptr [rip+0xb33be], 0x2; lea rdx, [rip+0x27b02]; lea rax, [rip+0x27bbb]; cmove rax, rdx; ret; 
0x000000004319b4: test byte ptr [rip+0xb33da], 0x2; lea rdx, [rip+0x2832e]; lea rax, [rip+0x28377]; cmove rax, rdx; ret; 
0x00000000431962: test byte ptr [rip+0xb342c], 0x2; lea rdx, [rip+0x27f40]; lea rax, [rip+0x27f89]; cmove rax, rdx; ret; 
0x0000000043191f: test byte ptr [rip+0xb34bf], 0x1; je short 0x00000000004318e1; ret; 
0x000000004318a4: test byte ptr [rip+0xb3539], 0x10; lea rdx, [rip-0x362]; lea rax, [rip+0x272f7]; cmove rax, rdx; ret; 
0x0000000043109b: test byte ptr [rip+0xb3ce7], 0x2; lea rax, [rip+0xc97]; lea rdx, [rip+0x1fc30]; cmovne rax, rdx; ret; 
0x00000000430f64: test byte ptr [rip+0xb3e1f], 0x10; lea rdx, [rip+0x2818e]; lea rax, [rip+0x280d7]; cmovne rax, rdx; ret; 
0x00000000430f3b: test byte ptr [rip+0xb3e47], 0x2; lea rax, [rip+0x1e407]; lea rdx, [rip+0x1e5e0]; cmovne rax, rdx; ret; 
0x00000000430edb: test byte ptr [rip+0xb3ea7], 0x2; lea rax, [rip+0xeb7]; lea rdx, [rip+0x25b0]; cmovne rax, rdx; ret; 
0x00000000430e7b: test byte ptr [rip+0xb3f62], 0x40; lea rax, [rip+0x1cc37]; lea rdx, [rip+0x26290]; cmovne rax, rdx; ret; 
0x00000000475512: test cl, al; or [rax], eax; add [rax-0x80], al; jmp qword ptr [rdi+rcx]; 
0x000000004389e6: test cl, bh; add [rax], al; add [rbp-0x77], cl; ret far; 
0x00000000437106: test cl, bh; or [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000438806: test cl, bl; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000436e26: test cl, bl; or al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000004351a6: test cl, ch; adc [rax], eax; add [rbp-0x77], cl; ret far; 
0x00000000434ea6: test cl, ch; adc al, 0x0; add [rbp-0x77], cl; ret far; 
0x000000004388f6: test cl, ch; add [rax], eax; add [rbp-0x77], cl; ret far; 
0x000000004360a6: test cl, ch; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000435da6: test cl, ch; add eax, 0x894d0000; ret far; 
0x00000000435aa6: test cl, ch; or [rax], al; add [rbp-0x77], cl; ret far; 
0x000000004357a6: test cl, ch; or eax, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000437836: test cl, cl; add al, [rax]; add [rbp-0x77], cl; ret far; 
0x00000000438716: test cl, cl; add eax, [rax]; add [rbp-0x77], cl; ret far; 
0x0000000048e527: test cl, cl; cmove r8, rax; mov rax, r8; ret; 
0x00000000458c9f: test cl, cl; jne short 0x0000000000458c90; ret; 
0x00000000458d4f: test cl, cl; jne short 0x0000000000458d40; ret; 
0x0000000045900f: test cl, cl; jne short 0x0000000000459000; sub rax, 0x1; ret; 
0x00000000457267: test dh, 0x40; jne 0x00000000004571a0; lea rax, [rdi+0xf]; ret; 
0x000000004572ad: test dh, 0x4; jne 0x00000000004571a0; lea rax, [rdi+0xb]; ret; 
0x00000000482c45: test dh, al; add [rax], eax; add [rax+0xf], cl; mov ebp, 0xf80148c0; ret; 
0x00000000464f89: test dh, dh; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000004a4518: test dil, dil; jne short 0x00000000004a4553; mov eax, 0x8; add rsp, 0x8; ret; 
0x000000004a16bb: test dil, dil; js short 0x00000000004a16e8; mov [r9], r8; add rsp, 0x8; ret; 
0x000000004a466b: test dil, dil; js short 0x00000000004a4698; mov [r9], r8; add rsp, 0x8; ret; 
0x000000004a600b: test dil, dil; js short 0x00000000004a6038; mov [r9], r8; add rsp, 0x8; ret; 
0x000000004571e4: test dl, 0x40; jne short 0x00000000004571a0; lea rax, [rdi+0x7]; ret; 
0x00000000457212: test dl, 0x4; jne short 0x00000000004571a0; lea rax, [rdi+0x3]; ret; 
0x00000000493fd8: test dl, bh; adc [rax], eax; add al, ch; ret; 
0x00000000420782: test dl, cl; add [rax], al; add [rax-0x77], cl; ret; 
0x0000000041e0ab: test dl, dl; jne short 0x000000000041e088; ret; 
0x00000000458ebf: test dl, dl; jne short 0x0000000000458eb0; lea rax, [rcx-0x1]; ret; 
0x0000000048b728: test dword ptr [rax+0x21], 0xc73948f0; jne short 0x000000000048b738; pop rbx; ret; 
0x000000004812fb: test dword ptr [rax+0x29], 0xd72948d0; cmp rax, rdi; jbe 0x00000000004814c0; mov rdi, r13; call qword ptr [r14+0x20]; 
0x0000000045d7ed: test dword ptr [rax-0x75], 0x8945a845; out dx, eax; call rax; 
0x00000000484fab: test dword ptr [rax-0x77], 0xca8948d6; cmp r9d, 0x1; ja short 0x0000000000484fe8; mov eax, 0x106; syscall; 
0x0000000045cff9: test dword ptr [rax-0x77], 0xca8948d6; mov r10, r8; mov r8, r9; mov r9, [rsp+0x8]; syscall; 
0x0000000045beb9: test dword ptr [rax-0x77], 0xf88341d6; add [rdi+0x2d], esi; mov eax, 0x4; syscall; 
0x00000000484f49: test dword ptr [rax-0x77], 0xf88341d6; add [rdi+0x2d], esi; mov eax, 0x6; syscall; 
0x0000000045bf18: test dword ptr [rax-0x77], 0xf88341d6; add [rdi+0x2e], esi; mov eax, 0x5; syscall; 
0x000000004704ca: test dword ptr [rax-0x77], 0xfe894cea; mov rdi, r12; call rbx; 
0x0000000043e375: test dword ptr [rbp+0x63490007], 0x8d499314; adc al, 0x13; notrack jmp rdx; 
0x00000000448842: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x6ed4f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004465f2: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x70f5f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000436452: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x8018f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000434bf2: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x819af]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000433522: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x8303f]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000431e22: test dword ptr [rbp+rcx*4+0x48], 0xc929490f; lea r10, [rip+0x846ff]; movsxd r9, [r10+r9*4]; lea r10, [r10+r9]; notrack jmp r10; 
0x00000000480794: test dword ptr [rbp-0x3dbaf013], 0x48744389; add esp, 0x18; pop rbx; pop rbp; ret; 
0x0000000043ce23: test dword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x00000000442743: test dword ptr [rbx-0x76b703b2], 0x4f89f757; cld; ret; 
0x0000000040a8f9: test dword ptr [rcx-0x75], 0x85481040; shl byte ptr [rbp+rax-0x1], 0xe0; nop [rax]; mov eax, 0xffffffff; ret; 
0x0000000040a918: test dword ptr [rcx-0x75], 0x85481840; shl byte ptr [rsi+rax-0x1], 0xe0; nop [rax]; xor eax, eax; ret; 
0x00000000465989: test dword ptr [rdi], 0x33486; add [rcx-0xa], al; ret; 
0x00000000456997: test eax, 0x4900060e; movsxd ecx, [rbx+rdx*4]; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000043be38: test eax, 0x63490007; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000403043: test eax, 0x85000078; sar byte ptr [rax+0x19], 0x89; ret; 
0x00000000459028: test eax, 0xfffd3be9; jmp qword ptr [rsi-0x70]; 
0x0000000045f82f: test eax, eax; cmove eax, edx; ret; 
0x000000004a3a15: test eax, eax; cmovne rax, [rsp+0x10]; add rsp, 0x28; ret; 
0x0000000040b614: test eax, eax; cmovns eax, edx; add rsp, 0x8; ret; 
0x00000000401010: test eax, eax; je short 0x0000000000401016; call rax; 
0x00000000401cd3: test eax, eax; je short 0x0000000000401ce0; mov edi, 0x4e3b70; jmp rax; 
0x00000000401d15: test eax, eax; je short 0x0000000000401d20; mov edi, 0x4e3b70; jmp rax; 
0x0000000040217a: test eax, eax; je short 0x0000000000402180; ret; 
0x00000000402553: test eax, eax; je short 0x0000000000402560; mov eax, [rax]; add rsp, 0x8; ret; 
0x00000000402716: test eax, eax; je short 0x0000000000402720; pop rbp; ret; 
0x00000000402ea8: test eax, eax; je short 0x0000000000402eb0; pop rbp; ret; 
0x0000000040a8ff: test eax, eax; je short 0x000000000040a908; jmp rax; 
0x0000000040a91e: test eax, eax; je short 0x000000000040a928; jmp rax; 
0x0000000040a96e: test eax, eax; je short 0x000000000040a988; call rax; 
0x0000000040a958: test eax, eax; je short 0x000000000040a988; mov rbx, rsi; call rax; 
0x000000004277c9: test eax, eax; je short 0x00000000004277dc; mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x00000000438ab8: test eax, eax; je short 0x0000000000438abd; xchg edx, eax; sub eax, edx; ret; 
0x0000000044dd33: test eax, eax; je short 0x000000000044dd40; bsf eax, eax; lea rax, [rdi+rax]; ret; 
0x0000000045cf6c: test eax, eax; je short 0x000000000045cf71; ret; 
0x0000000046131a: test eax, eax; je short 0x0000000000461320; ret; 
0x00000000464cee: test eax, eax; je short 0x0000000000464cf8; ret; 
0x0000000046e212: test eax, eax; je short 0x000000000046e218; call rax; 
0x0000000046e498: test eax, eax; je short 0x000000000046e49e; call rax; 
0x0000000046f60d: test eax, eax; je short 0x000000000046f613; call rax; 
0x000000004847a8: test eax, eax; je short 0x00000000004847e0; call rax; 
0x0000000049a890: test eax, eax; je short 0x000000000049a8ae; lea rbx, [rbp+rdx*8]; nop [rax]; call qword ptr [rbx]; 
0x000000004a429c: test eax, eax; je short 0x00000000004a42b0; mov edi, 0x1; jmp rax; 
0x000000004a7904: test eax, eax; je short 0x00000000004a790a; call rax; 
0x000000004a7bd9: test eax, eax; je short 0x00000000004a7be4; call rax; 
0x0000000042d1a4: test eax, eax; jne 0x000000000042d228; sub dword ptr [rip+0xb562d], 0x1; pop rbp; ret; 
0x00000000434b41: test eax, eax; jne 0x0000000000434a30; sub eax, ecx; vzeroupper; ret; 
0x0000000043900a: test eax, eax; jne 0x0000000000438eb0; sub eax, ecx; vzeroupper; ret; 
0x0000000045e234: test eax, eax; jne 0x000000000045e5bb; mov rdi, [r15]; call rbx; 
0x0000000045e399: test eax, eax; jne 0x000000000045e629; mov rdi, [r15]; call rbx; 
0x0000000045e2b8: test eax, eax; jne 0x000000000045e697; mov rdi, [r15]; call rbx; 
0x0000000045e44d: test eax, eax; jne 0x000000000045e705; mov rdi, [r15]; call rbx; 
0x0000000045e312: test eax, eax; jne 0x000000000045e773; mov rdi, [r15]; call rbx; 
0x0000000045e2e5: test eax, eax; jne 0x000000000045e7e1; mov rdi, [r15]; call rbx; 
0x0000000045e36c: test eax, eax; jne 0x000000000045e84f; mov rdi, [r15]; call rbx; 
0x0000000045e3f3: test eax, eax; jne 0x000000000045e8bd; mov rdi, [r15]; call rbx; 
0x0000000045e25e: test eax, eax; jne 0x000000000045e92b; mov rdi, [r15]; call rbx; 
0x0000000045e33f: test eax, eax; jne 0x000000000045e999; mov rdi, [r15]; call rbx; 
0x0000000045e420: test eax, eax; jne 0x000000000045ea07; mov rdi, [r15]; call rbx; 
0x0000000045e28b: test eax, eax; jne 0x000000000045ea75; mov rdi, [r15]; call rbx; 
0x0000000045e3c6: test eax, eax; jne 0x000000000045eae3; mov rdi, [r15]; call rbx; 
0x0000000045e47a: test eax, eax; jne 0x000000000045eb51; mov rdi, [r15]; call rbx; 
0x00000000482855: test eax, eax; jne 0x0000000000482900; xor eax, eax; ret; 
0x00000000482ac4: test eax, eax; jne 0x0000000000482b60; xor eax, eax; vzeroupper; ret; 
0x00000000483488: test eax, eax; jne 0x0000000000483530; mov rax, r8; vzeroupper; ret; 
0x000000004922d4: test eax, eax; jne 0x0000000000492358; mov rcx, [rsp+0x10]; mov rdi, [rsp+0x18]; call rcx; 
0x00000000498bb5: test eax, eax; jne 0x0000000000498c60; xor eax, eax; ret; 
0x00000000498e24: test eax, eax; jne 0x0000000000498ec0; xor eax, eax; vzeroupper; ret; 
0x000000004a126b: test eax, eax; jne 0x00000000004a11c0; add rsp, 0x38; ret; 
0x0000000040a762: test eax, eax; jne short 0x000000000040a76d; mov rax, 0x4e12e0; pop rbp; ret; 
0x00000000427764: test eax, eax; jne short 0x0000000000427758; ret; 
0x000000004284fc: test eax, eax; jne short 0x00000000004284f0; ret; 
0x0000000042e35b: test eax, eax; jne short 0x000000000042e398; sub dword ptr [rip+0xb69ba], 0x1; pop rbx; ret; 
0x00000000434a4b: test eax, eax; jne short 0x0000000000434a30; sub eax, ecx; vzeroupper; ret; 
0x00000000438ed0: test eax, eax; jne short 0x0000000000438eb0; sub eax, ecx; vzeroupper; ret; 
0x00000000457194: test eax, eax; jne short 0x00000000004571a4; nop [rax+rax]; xor rax, rax; ret; 
0x0000000045c0ac: test eax, eax; jne short 0x000000000045c0c0; syscall; 
0x0000000045c14c: test eax, eax; jne short 0x000000000045c160; mov eax, 0x1; syscall; 
0x0000000045c280: test eax, eax; jne short 0x000000000045c2b0; mov eax, 0x48; syscall; 
0x0000000045c31c: test eax, eax; jne short 0x000000000045c330; mov eax, 0x3; syscall; 
0x0000000045e4a3: test eax, eax; jne short 0x000000000045e4e2; mov rdi, [r15]; call rbx; 
0x0000000045e4cc: test eax, eax; jne short 0x000000000045e54d; mov rdi, [r15]; call rbx; 
0x00000000482885: test eax, eax; jne short 0x00000000004828e0; xor eax, eax; ret; 
0x00000000482b01: test eax, eax; jne short 0x0000000000482b20; xor eax, eax; vzeroupper; ret; 
0x000000004834c1: test eax, eax; jne short 0x00000000004834f0; mov rax, r8; vzeroupper; ret; 
0x00000000498be5: test eax, eax; jne short 0x0000000000498c40; xor eax, eax; ret; 
0x00000000498e61: test eax, eax; jne short 0x0000000000498e80; xor eax, eax; vzeroupper; ret; 
0x0000000049e97a: test eax, eax; jne short 0x000000000049e9e0; mov dword ptr [rdx], 0x0; mov eax, 0x2; ret; 
0x000000004a5a96: test eax, eax; jne short 0x00000000004a5aa0; ret; 
0x000000004a5cd6: test eax, eax; jne short 0x00000000004a5ce0; ret; 
0x0000000040315a: test eax, eax; js short 0x0000000000403160; ret; 
0x0000000040a9cb: test eax, eax; js short 0x000000000040a9db; xor eax, eax; pop rbx; ret; 
0x0000000040b6ad: test eax, eax; lea edx, [rax+0x1388]; cmovns eax, edx; add rsp, 0x8; ret; 
0x0000000040b6ed: test eax, eax; lea edx, [rax+0x1770]; cmovns eax, edx; add rsp, 0x8; ret; 
0x0000000040b66d: test eax, eax; lea edx, [rax+0xfa0]; cmovns eax, edx; add rsp, 0x8; ret; 
0x00000000431a50: test eax, eax; lea rdx, [rip+0x28867]; lea rax, [rip+0x287f0]; cmovne rax, rdx; ret; 
0x00000000431a31: test eax, eax; lea rdx, [rip+0x28996]; lea rax, [rip+0x289df]; cmove rax, rdx; ret; 
0x0000000042979a: test eax, eax; mov eax, 0x10; cmovne rax, rdx; mov [rip+0xbb58c], rax; ret; 
0x00000000473869: test eax, edi; idiv bh; call qword ptr [rax]; 
0x000000004a197f: test eax, edx; add [rax], al; add [rbp+0x39], cl; out 0x77, eax; ret far; 
0x0000000045e006: test ebp, eax; add [rax], eax; add [rcx-0x75], cl; jge short 0x000000000045e00f; call rbx; 
0x0000000045df9d: test ebp, ebp; jne short 0x000000000045dff0; mov rdi, [r12]; call rbx; 
0x0000000045dfcd: test ebp, ebp; jne short 0x000000000045e050; mov rdi, [r12]; call rbx; 
0x0000000048dc9e: test ebp, ecx; add [rax], eax; add [rax+0x63], cl; ret; 
0x0000000045eb30: test ebp, edi; add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000048c08f: test ebx, ebx; jne short 0x000000000048c095; call rax; 
0x000000004a671b: test ebx, ebx; jne short 0x00000000004a6700; pop rbx; ret; 
0x000000004a6833: test ebx, ebx; jne short 0x00000000004a681d; pop rbx; ret; 
0x0000000042fb18: test ebx, esp; add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x0000000045e978: test ecx, ebp; add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x0000000045e1b6: test ecx, ebx; add al, [rax]; add [rcx-0x75], cl; notrack call rbx; 
0x0000000048bf01: test ecx, ecx; jne short 0x000000000048bf07; call rax; 
0x0000000048c8d3: test ecx, ecx; jne short 0x000000000048c8e7; mov [rbp-0xd8], r11; call rax; 
0x0000000042f54c: test edi, ebx; add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x000000004142a3: test edi, ecx; idiv edi; inc dword ptr [rax-0x80]; jmp qword ptr [rdi+rcx-0x7c]; 
0x0000000045e0c3: test edi, edi; jne 0x000000000045e2d2; mov rdi, [r14]; call rbx; 
0x0000000045e183: test edi, edi; jne 0x000000000045e32c; mov rdi, [r14]; call rbx; 
0x0000000045e153: test edi, edi; jne 0x000000000045e386; mov rdi, [r14]; call rbx; 
0x0000000045e123: test edi, edi; jne 0x000000000045e3e0; mov rdi, [r14]; call rbx; 
0x0000000045e0f3: test edi, edi; jne 0x000000000045e43a; mov rdi, [r14]; call rbx; 
0x0000000045e1b3: test edi, edi; jne 0x000000000045e494; mov rdi, [r14]; call rbx; 
0x0000000045eaf6: test edi, edi; jne 0x000000000045ebfc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045ea88: test edi, edi; jne 0x000000000045ec2a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045ea1a: test edi, edi; jne 0x000000000045ec58; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e9ac: test edi, edi; jne 0x000000000045ec86; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e93e: test edi, edi; jne 0x000000000045ecb4; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e8d0: test edi, edi; jne 0x000000000045ece2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e862: test edi, edi; jne 0x000000000045ed10; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e7f4: test edi, edi; jne 0x000000000045ed3e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e786: test edi, edi; jne 0x000000000045ed6c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e718: test edi, edi; jne 0x000000000045ed9a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e6aa: test edi, edi; jne 0x000000000045edc8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e63c: test edi, edi; jne 0x000000000045edf6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e5ce: test edi, edi; jne 0x000000000045ee24; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e560: test edi, edi; jne 0x000000000045ee52; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e4f5: test edi, edi; jne 0x000000000045ee80; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e529: test edi, edi; jne 0x000000000045eeae; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e6e1: test edi, edi; jne 0x000000000045eedc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e899: test edi, edi; jne 0x000000000045ef0a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e605: test edi, edi; jne 0x000000000045ef38; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e975: test edi, edi; jne 0x000000000045ef66; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e7bd: test edi, edi; jne 0x000000000045ef94; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045ea51: test edi, edi; jne 0x000000000045efc2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e597: test edi, edi; jne 0x000000000045eff0; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e907: test edi, edi; jne 0x000000000045f01e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e74f: test edi, edi; jne 0x000000000045f04c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045eabf: test edi, edi; jne 0x000000000045f07a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e673: test edi, edi; jne 0x000000000045f0a8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e9e3: test edi, edi; jne 0x000000000045f0d6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e82b: test edi, edi; jne 0x000000000045f104; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045eb2d: test edi, edi; jne 0x000000000045f132; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045d2ab: test edi, edi; jne short 0x000000000045d2d6; mov rdi, [rbp]; call rbx; 
0x0000000045e1df: test edi, edi; jne short 0x000000000045e221; mov rdi, [r14]; call rbx; 
0x0000000045e20b: test edi, edi; jne short 0x000000000045e278; mov rdi, [r14]; call rbx; 
0x0000000045eb60: test edi, edi; jne short 0x000000000045ebaf; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045eb8f: test edi, edi; jne short 0x000000000045ebd7; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000412877: test edi, edx; mov esi, 0x45c748ff; mov al, [0xfff868e9ffffffff]; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000042f821: test edx, ebp; add [rax], al; add [rax-0x7d], cl; call qword ptr [rax]; 
0x0000000048315a: test edx, edx; je 0x0000000000483200; bsf rax, rdx; ret; 
0x00000000483e1e: test edx, edx; je 0x0000000000483ec0; bsf rax, rdx; shr rax, 0x2; ret; 
0x0000000040aa41: test edx, edx; je short 0x000000000040aa68; mov rsi, rbp; mov rdi, r13; call rdx; 
0x0000000044e356: test edx, edx; je short 0x000000000044e35e; bsf eax, edx; ret; 
0x0000000044e3fb: test edx, edx; je short 0x000000000044e410; bsf rax, rdx; ret; 
0x0000000044e39e: test edx, edx; je short 0x000000000044e420; bsf rax, rdx; ret; 
0x0000000046018c: test edx, edx; je short 0x00000000004601a0; lea rdi, [rcx+rsi+0x20]; jmp rdx; 
0x000000004831ca: test edx, edx; je short 0x00000000004831f0; bsf rax, rdx; ret; 
0x00000000483e8a: test edx, edx; je short 0x0000000000483eb0; bsf rax, rdx; shr rax, 0x2; ret; 
0x00000000425197: test edx, edx; jne short 0x00000000004251a0; ret; 
0x0000000042615c: test edx, edx; jne short 0x0000000000426170; sub dword ptr [rip+0xbeb49], 0x1; ret; 
0x00000000426817: test edx, edx; jne short 0x0000000000426808; ret; 
0x00000000428928: test edx, edx; jne short 0x0000000000428938; sub dword ptr [rip+0xbc37d], 0x1; ret; 
0x0000000045a2a5: test edx, edx; jne short 0x000000000045a2ad; mov rax, rdi; ret; 
0x000000004806bf: test edx, edx; jne short 0x00000000004806b0; ret; 
0x00000000483d7b: test edx, edx; jne short 0x0000000000483d70; ret; 
0x00000000485241: test edx, edx; jne short 0x0000000000485250; ret; 
0x0000000048c79e: test edx, edx; jne short 0x000000000048c7a4; call rax; 
0x00000000497e46: test edx, edx; jne short 0x0000000000497e50; sub dword ptr [rdi], 0x1; ret; 
0x0000000045e789: test esi, ebx; add eax, 0x894c0000; and al, 0x8; mov rdi, [r8]; call rbx; 
0x00000000415ea8: test esi, esi; add [rax], al; add [rax-0x7d], cl; ret; 
0x00000000430498: test esi, esi; je short 0x00000000004304a8; lea rax, [rax-0x10]; ret; 
0x0000000046d9e4: test esi, esi; je short 0x000000000046d9f0; cmp esi, 0x3; je short 0x000000000046d9f0; ret; 
0x0000000048e4b0: test esi, esi; je short 0x000000000048e4b7; mov [rsi], rdi; mov rax, r8; ret; 
0x0000000045e063: test esi, esi; jne 0x000000000045e110; mov rdi, [r13]; call rbx; 
0x0000000045e033: test esi, esi; jne 0x000000000045e170; mov rdi, [r13]; call rbx; 
0x0000000045e003: test esi, esi; jne 0x000000000045e1d0; mov rdi, [r13]; call rbx; 
0x0000000045e08f: test esi, esi; jne short 0x000000000045e0b0; mov rdi, [r13]; call rbx; 
0x000000004830c5: test esi, esi; jne short 0x00000000004830cd; xor rax, rax; ret; 
0x00000000483d85: test esi, esi; jne short 0x0000000000483d8d; xor rax, rax; ret; 
0x0000000049e807: test esi, esi; jne short 0x000000000049e830; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000049e898: test esi, esi; jne short 0x000000000049e8c8; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000045b8ac: test esp, eax; add eax, 0x639be800; sti; jmp qword ptr [rsi+0x2e]; 
0x00000000478ce1: test esp, ecx; idiv bh; jmp qword ptr [rax]; 
0x0000000045df5c: test esp, esp; jne short 0x000000000045df88; mov rdi, [rbp]; call rbx; 
0x0000000043ce22: test qword ptr [rbx-0x76b703aa], 0x5789f74f; cld; ret; 
0x0000000048c08e: test r11d, r11d; jne short 0x000000000048c095; call rax; 
0x0000000045df5b: test r12, r12; jne short 0x000000000045df88; mov rdi, [rbp]; call rbx; 
0x0000000045df9c: test r13, r13; jne short 0x000000000045dff0; mov rdi, [r12]; call rbx; 
0x0000000045dfcc: test r13, r13; jne short 0x000000000045e050; mov rdi, [r12]; call rbx; 
0x0000000045e062: test r14, r14; jne 0x000000000045e110; mov rdi, [r13]; call rbx; 
0x0000000045e032: test r14, r14; jne 0x000000000045e170; mov rdi, [r13]; call rbx; 
0x0000000045e002: test r14, r14; jne 0x000000000045e1d0; mov rdi, [r13]; call rbx; 
0x0000000045e08e: test r14, r14; jne short 0x000000000045e0b0; mov rdi, [r13]; call rbx; 
0x0000000045e0c2: test r15, r15; jne 0x000000000045e2d2; mov rdi, [r14]; call rbx; 
0x0000000045e182: test r15, r15; jne 0x000000000045e32c; mov rdi, [r14]; call rbx; 
0x0000000045e152: test r15, r15; jne 0x000000000045e386; mov rdi, [r14]; call rbx; 
0x0000000045e122: test r15, r15; jne 0x000000000045e3e0; mov rdi, [r14]; call rbx; 
0x0000000045e0f2: test r15, r15; jne 0x000000000045e43a; mov rdi, [r14]; call rbx; 
0x0000000045e1b2: test r15, r15; jne 0x000000000045e494; mov rdi, [r14]; call rbx; 
0x0000000045e1de: test r15, r15; jne short 0x000000000045e221; mov rdi, [r14]; call rbx; 
0x0000000045e20a: test r15, r15; jne short 0x000000000045e278; mov rdi, [r14]; call rbx; 
0x0000000045e233: test r8, r8; jne 0x000000000045e5bb; mov rdi, [r15]; call rbx; 
0x0000000045e398: test r8, r8; jne 0x000000000045e629; mov rdi, [r15]; call rbx; 
0x0000000045e2b7: test r8, r8; jne 0x000000000045e697; mov rdi, [r15]; call rbx; 
0x0000000045e44c: test r8, r8; jne 0x000000000045e705; mov rdi, [r15]; call rbx; 
0x0000000045e311: test r8, r8; jne 0x000000000045e773; mov rdi, [r15]; call rbx; 
0x0000000045e2e4: test r8, r8; jne 0x000000000045e7e1; mov rdi, [r15]; call rbx; 
0x0000000045e36b: test r8, r8; jne 0x000000000045e84f; mov rdi, [r15]; call rbx; 
0x0000000045e3f2: test r8, r8; jne 0x000000000045e8bd; mov rdi, [r15]; call rbx; 
0x0000000045e25d: test r8, r8; jne 0x000000000045e92b; mov rdi, [r15]; call rbx; 
0x0000000045e33e: test r8, r8; jne 0x000000000045e999; mov rdi, [r15]; call rbx; 
0x0000000045e41f: test r8, r8; jne 0x000000000045ea07; mov rdi, [r15]; call rbx; 
0x0000000045e28a: test r8, r8; jne 0x000000000045ea75; mov rdi, [r15]; call rbx; 
0x0000000045e3c5: test r8, r8; jne 0x000000000045eae3; mov rdi, [r15]; call rbx; 
0x0000000045e479: test r8, r8; jne 0x000000000045eb51; mov rdi, [r15]; call rbx; 
0x0000000045e4a2: test r8, r8; jne short 0x000000000045e4e2; mov rdi, [r15]; call rbx; 
0x0000000045e4cb: test r8, r8; jne short 0x000000000045e54d; mov rdi, [r15]; call rbx; 
0x0000000042e469: test r8b, r8b; jne short 0x000000000042e479; mov dword ptr [rip+0xb68a8], 0x0; ret; 
0x00000000402715: test r8d, r8d; je short 0x0000000000402720; pop rbp; ret; 
0x00000000402ea7: test r8d, r8d; je short 0x0000000000402eb0; pop rbp; ret; 
0x00000000438ab7: test r8d, r8d; je short 0x0000000000438abd; xchg edx, eax; sub eax, edx; ret; 
0x000000004a126a: test r8d, r8d; jne 0x00000000004a11c0; add rsp, 0x38; ret; 
0x0000000040a761: test r8d, r8d; jne short 0x000000000040a76d; mov rax, 0x4e12e0; pop rbp; ret; 
0x0000000048c8d2: test r9d, r9d; jne short 0x000000000048c8e7; mov [rbp-0xd8], r11; call rax; 
0x000000004a3a14: test rax, rax; cmovne rax, [rsp+0x10]; add rsp, 0x28; ret; 
0x0000000040100f: test rax, rax; je short 0x0000000000401016; call rax; 
0x00000000401cd2: test rax, rax; je short 0x0000000000401ce0; mov edi, 0x4e3b70; jmp rax; 
0x00000000401d14: test rax, rax; je short 0x0000000000401d20; mov edi, 0x4e3b70; jmp rax; 
0x00000000402552: test rax, rax; je short 0x0000000000402560; mov eax, [rax]; add rsp, 0x8; ret; 
0x0000000040a8fe: test rax, rax; je short 0x000000000040a908; jmp rax; 
0x0000000040a91d: test rax, rax; je short 0x000000000040a928; jmp rax; 
0x0000000040a96d: test rax, rax; je short 0x000000000040a988; call rax; 
0x0000000040a957: test rax, rax; je short 0x000000000040a988; mov rbx, rsi; call rax; 
0x000000004277c8: test rax, rax; je short 0x00000000004277dc; mov qword ptr [rax], 0x0; mov qword ptr [rax+0x8], 0x0; ret; 
0x0000000045cf6b: test rax, rax; je short 0x000000000045cf71; ret; 
0x0000000046e211: test rax, rax; je short 0x000000000046e218; call rax; 
0x0000000046e497: test rax, rax; je short 0x000000000046e49e; call rax; 
0x0000000046f60c: test rax, rax; je short 0x000000000046f613; call rax; 
0x000000004847a7: test rax, rax; je short 0x00000000004847e0; call rax; 
0x000000004a429b: test rax, rax; je short 0x00000000004a42b0; mov edi, 0x1; jmp rax; 
0x000000004a7903: test rax, rax; je short 0x00000000004a790a; call rax; 
0x000000004a7bd8: test rax, rax; je short 0x00000000004a7be4; call rax; 
0x00000000427763: test rax, rax; jne short 0x0000000000427758; ret; 
0x000000004284fb: test rax, rax; jne short 0x00000000004284f0; ret; 
0x0000000049e979: test rax, rax; jne short 0x000000000049e9e0; mov dword ptr [rdx], 0x0; mov eax, 0x2; ret; 
0x00000000429799: test rax, rax; mov eax, 0x10; cmovne rax, rdx; mov [rip+0xbb58c], rax; ret; 
0x000000004a671a: test rbx, rbx; jne short 0x00000000004a6700; pop rbx; ret; 
0x000000004a6832: test rbx, rbx; jne short 0x00000000004a681d; pop rbx; ret; 
0x0000000045eaf5: test rdi, rdi; jne 0x000000000045ebfc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045ea87: test rdi, rdi; jne 0x000000000045ec2a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045ea19: test rdi, rdi; jne 0x000000000045ec58; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e9ab: test rdi, rdi; jne 0x000000000045ec86; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e93d: test rdi, rdi; jne 0x000000000045ecb4; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e8cf: test rdi, rdi; jne 0x000000000045ece2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e861: test rdi, rdi; jne 0x000000000045ed10; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e7f3: test rdi, rdi; jne 0x000000000045ed3e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e785: test rdi, rdi; jne 0x000000000045ed6c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e717: test rdi, rdi; jne 0x000000000045ed9a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e6a9: test rdi, rdi; jne 0x000000000045edc8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e63b: test rdi, rdi; jne 0x000000000045edf6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e5cd: test rdi, rdi; jne 0x000000000045ee24; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e55f: test rdi, rdi; jne 0x000000000045ee52; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e4f4: test rdi, rdi; jne 0x000000000045ee80; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e528: test rdi, rdi; jne 0x000000000045eeae; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e6e0: test rdi, rdi; jne 0x000000000045eedc; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e898: test rdi, rdi; jne 0x000000000045ef0a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e604: test rdi, rdi; jne 0x000000000045ef38; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e974: test rdi, rdi; jne 0x000000000045ef66; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e7bc: test rdi, rdi; jne 0x000000000045ef94; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045ea50: test rdi, rdi; jne 0x000000000045efc2; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e596: test rdi, rdi; jne 0x000000000045eff0; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e906: test rdi, rdi; jne 0x000000000045f01e; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e74e: test rdi, rdi; jne 0x000000000045f04c; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045eabe: test rdi, rdi; jne 0x000000000045f07a; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e672: test rdi, rdi; jne 0x000000000045f0a8; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e9e2: test rdi, rdi; jne 0x000000000045f0d6; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045e82a: test rdi, rdi; jne 0x000000000045f104; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045eb2c: test rdi, rdi; jne 0x000000000045f132; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045d2aa: test rdi, rdi; jne short 0x000000000045d2d6; mov rdi, [rbp]; call rbx; 
0x0000000045eb5f: test rdi, rdi; jne short 0x000000000045ebaf; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x0000000045eb8e: test rdi, rdi; jne short 0x000000000045ebd7; mov [rsp+0x8], r8; mov rdi, [r8]; call rbx; 
0x00000000483159: test rdx, rdx; je 0x0000000000483200; bsf rax, rdx; ret; 
0x00000000483e1d: test rdx, rdx; je 0x0000000000483ec0; bsf rax, rdx; shr rax, 0x2; ret; 
0x0000000040aa40: test rdx, rdx; je short 0x000000000040aa68; mov rsi, rbp; mov rdi, r13; call rdx; 
0x0000000044e3fa: test rdx, rdx; je short 0x000000000044e410; bsf rax, rdx; ret; 
0x0000000044e39d: test rdx, rdx; je short 0x000000000044e420; bsf rax, rdx; ret; 
0x0000000046018b: test rdx, rdx; je short 0x00000000004601a0; lea rdi, [rcx+rsi+0x20]; jmp rdx; 
0x000000004831c9: test rdx, rdx; je short 0x00000000004831f0; bsf rax, rdx; ret; 
0x00000000483e89: test rdx, rdx; je short 0x0000000000483eb0; bsf rax, rdx; shr rax, 0x2; ret; 
0x00000000425196: test rdx, rdx; jne short 0x00000000004251a0; ret; 
0x00000000426816: test rdx, rdx; jne short 0x0000000000426808; ret; 
0x0000000045a2a4: test rdx, rdx; jne short 0x000000000045a2ad; mov rax, rdi; ret; 
0x000000004806be: test rdx, rdx; jne short 0x00000000004806b0; ret; 
0x00000000430497: test rsi, rsi; je short 0x00000000004304a8; lea rax, [rax-0x10]; ret; 
0x0000000048e4af: test rsi, rsi; je short 0x000000000048e4b7; mov [rsi], rdi; mov rax, r8; ret; 
0x000000004830c4: test rsi, rsi; jne short 0x00000000004830cd; xor rax, rax; ret; 
0x00000000483d84: test rsi, rsi; jne short 0x0000000000483d8d; xor rax, rax; ret; 
0x0000000049e806: test rsi, rsi; jne short 0x000000000049e830; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x0000000049e897: test rsi, rsi; jne short 0x000000000049e8c8; mov dword ptr [rdx], 0x0; mov eax, 0x1; ret; 
0x00000000464f88: test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00000000439330: tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x00000000439340: tzcnt eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000043936e: tzcnt eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000044e1a3: tzcnt eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x00000000439285: tzcnt eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000044e5d0: tzcnt eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000439320: tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000427222: ud0 edi, edi; jmp qword ptr [rsi+0x2e]; 
0x0000000042fbd6: ud0 edi, edi; jmp qword ptr [rsi+0xf]; 
0x0000000044078d: ud2; lea r11, [rip+0x7639a]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000499552: vminsd xmm9, xmm4, [rcx+rcx*4-0x18]; pop r12; pop r13; ret; 
0x0000000045a3ef: vmovdqu [edi+edx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x00000000459b0c: vmovdqu [r11], ymm4; vzeroupper; ret; 
0x00000000459bb3: vmovdqu [r11], ymm8; vzeroupper; ret; 
0x00000000445ece: vmovdqu [r9-0x10], xmm1; ret; 
0x00000000445eba: vmovdqu [r9-0x20], ymm1; ret; 
0x00000000445ea1: vmovdqu [r9-0x20], ymm3; ret; 
0x00000000445e9b: vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x00000000459b02: vmovdqu [rcx-0x40], ymm7; vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x00000000459b07: vmovdqu [rcx-0x60], ymm8; vmovdqu [r11], ymm4; vzeroupper; ret; 
0x0000000045a464: vmovdqu [rdi+0x20], ymm0; vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi+rdx-0x40], ymm0; vzeroupper; ret; 
0x00000000445e96: vmovdqu [rdi+0x20], ymm1; vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x00000000459a4c: vmovdqu [rdi+0x20], ymm1; vmovdqu [rdi+rdx-0x20], ymm2; vmovdqu [rdi+rdx-0x40], ymm3; vzeroupper; ret; 
0x0000000044f0b0: vmovdqu [rdi+0x20], ymm3; mov [rdi+0x40], cl; vzeroupper; ret; 
0x00000000459ba9: vmovdqu [rdi+0x40], ymm6; vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x00000000459bae: vmovdqu [rdi+0x60], ymm7; vmovdqu [r11], ymm8; vzeroupper; ret; 
0x0000000044f256: vmovdqu [rdi+0x60], ymm7; vzeroupper; ret; 
0x0000000044f114: vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x0000000044f06f: vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x0000000044f08f: vmovdqu [rdi+r8-0x20], ymm3; vzeroupper; ret; 
0x0000000045a4ff: vmovdqu [rdi+rdx-0x10], xmm0; vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x00000000459980: vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x0000000045710e: vmovdqu [rdi+rdx-0x1f], ymm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000044e9de: vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x0000000045a469: vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi+rdx-0x40], ymm0; vzeroupper; ret; 
0x0000000045a3f0: vmovdqu [rdi+rdx-0x20], ymm0; vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x000000004598d9: vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x00000000459a51: vmovdqu [rdi+rdx-0x20], ymm2; vmovdqu [rdi+rdx-0x40], ymm3; vzeroupper; ret; 
0x0000000045a46f: vmovdqu [rdi+rdx-0x40], ymm0; vzeroupper; ret; 
0x00000000459a57: vmovdqu [rdi+rdx-0x40], ymm3; vzeroupper; ret; 
0x00000000459a1d: vmovdqu [rdi+rdx-0x40], ymm5; vmovdqu [rdi+rdx-0x60], ymm6; vmovdqu [rdi+rdx-0x80], ymm7; vzeroupper; ret; 
0x00000000459a23: vmovdqu [rdi+rdx-0x60], ymm6; vmovdqu [rdi+rdx-0x80], ymm7; vzeroupper; ret; 
0x00000000459a29: vmovdqu [rdi+rdx-0x80], ymm7; vzeroupper; ret; 
0x000000004570ee: vmovdqu [rdi+rdx-0xf], xmm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000044e9be: vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x00000000445eca: vmovdqu [rdi], xmm0; vmovdqu [r9-0x10], xmm1; ret; 
0x0000000044f110: vmovdqu [rdi], xmm0; vmovdqu [rdi+r8-0x10], xmm0; vzeroupper; ret; 
0x0000000045997c: vmovdqu [rdi], xmm0; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x00000000459309: vmovdqu [rdi], xmm0; vmovdqu [rsi-0x10], xmm0; ret; 
0x0000000045a505: vmovdqu [rdi], xmm0; vzeroupper; ret; 
0x0000000044f06b: vmovdqu [rdi], xmm2; vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x000000004570ea: vmovdqu [rdi], xmm2; vmovdqu [rdi+rdx-0xf], xmm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000044e9ba: vmovdqu [rdi], xmm2; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x00000000445eb6: vmovdqu [rdi], ymm0; vmovdqu [r9-0x20], ymm1; ret; 
0x00000000445e92: vmovdqu [rdi], ymm0; vmovdqu [rdi+0x20], ymm1; vmovdqu [r9-0x40], ymm2; vmovdqu [r9-0x20], ymm3; ret; 
0x000000004598d5: vmovdqu [rdi], ymm0; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x0000000045a3f6: vmovdqu [rdi], ymm0; vzeroupper; ret; 
0x0000000044f0ac: vmovdqu [rdi], ymm2; vmovdqu [rdi+0x20], ymm3; mov [rdi+0x40], cl; vzeroupper; ret; 
0x0000000044f08b: vmovdqu [rdi], ymm2; vmovdqu [rdi+r8-0x20], ymm3; vzeroupper; ret; 
0x0000000045710a: vmovdqu [rdi], ymm2; vmovdqu [rdi+rdx-0x1f], ymm3; lea rax, [rdi+rdx]; vzeroupper; ret; 
0x0000000044e9da: vmovdqu [rdi], ymm2; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x000000004592ff: vmovdqu [rdi], ymm2; vmovdqu [rsi-0x20], ymm2; ret; 
0x0000000045930d: vmovdqu [rsi-0x10], xmm0; ret; 
0x00000000459303: vmovdqu [rsi-0x20], ymm2; ret; 
0x00000000445ec1: vmovdqu xmm0, [rsi]; vmovdqu xmm1, [rcx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [r9-0x10], xmm1; ret; 
0x00000000459972: vmovdqu xmm0, [rsi]; vmovdqu xmm1, [rsi+rdx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x00000000445ec5: vmovdqu xmm1, [rcx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [r9-0x10], xmm1; ret; 
0x00000000459976: vmovdqu xmm1, [rsi+rdx-0x10]; vmovdqu [rdi], xmm0; vmovdqu [rdi+rdx-0x10], xmm1; ret; 
0x0000000044f064: vmovdqu xmm3, [rsi+r8-0x10]; vmovdqu [rdi], xmm2; vmovdqu [rdi+r8-0x10], xmm3; vzeroupper; ret; 
0x0000000044e9b4: vmovdqu xmm3, [rsi+rdx-0xf]; vmovdqu [rdi], xmm2; vmovdqu [rdi+rdx-0xf], xmm3; vzeroupper; ret; 
0x00000000445ead: vmovdqu ymm0, [rsi]; vmovdqu ymm1, [rcx-0x20]; vmovdqu [rdi], ymm0; vmovdqu [r9-0x20], ymm1; ret; 
0x00000000445eb1: vmovdqu ymm1, [rcx-0x20]; vmovdqu [rdi], ymm0; vmovdqu [r9-0x20], ymm1; ret; 
0x000000004598cf: vmovdqu ymm1, [rsi+rdx-0x20]; vmovdqu [rdi], ymm0; vmovdqu [rdi+rdx-0x20], ymm1; vzeroupper; ret; 
0x0000000044f084: vmovdqu ymm3, [rsi+r8-0x20]; vmovdqu [rdi], ymm2; vmovdqu [rdi+r8-0x20], ymm3; vzeroupper; ret; 
0x0000000044e9d4: vmovdqu ymm3, [rsi+rdx-0x1f]; vmovdqu [rdi], ymm2; vmovdqu [rdi+rdx-0x1f], ymm3; vzeroupper; ret; 
0x00000000459fc6: vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000045a08c: vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x00000000459fb8: vmovdqu64 [rcx-0x80], zmm7; vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x00000000459fbf: vmovdqu64 [rcx-0xc0], zmm8; vmovdqu64 [r11], zmm4; vzeroupper; ret; 
0x0000000045a603: vmovdqu64 [rdi+0x40], zmm0; vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi+rdx-0x80], zmm0; vzeroupper; ret; 
0x00000000459ede: vmovdqu64 [rdi+0x40], zmm1; vmovdqu64 [rdi+rdx-0x40], zmm2; vmovdqu64 [rdi+rdx-0x80], zmm3; vzeroupper; ret; 
0x0000000045a07e: vmovdqu64 [rdi+0x80], zmm6; vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x0000000045a085: vmovdqu64 [rdi+0xc0], zmm7; vmovdqu64 [r11], zmm8; vzeroupper; ret; 
0x00000000459eaf: vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x0000000045a60a: vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi+rdx-0x80], zmm0; vzeroupper; ret; 
0x0000000045a579: vmovdqu64 [rdi+rdx-0x40], zmm0; vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x00000000459d22: vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x00000000459ee5: vmovdqu64 [rdi+rdx-0x40], zmm2; vmovdqu64 [rdi+rdx-0x80], zmm3; vzeroupper; ret; 
0x0000000045a612: vmovdqu64 [rdi+rdx-0x80], zmm0; vzeroupper; ret; 
0x00000000459eed: vmovdqu64 [rdi+rdx-0x80], zmm3; vzeroupper; ret; 
0x00000000459e9f: vmovdqu64 [rdi+rdx-0x80], zmm5; vmovdqu64 [rdi+rdx-0xc0], zmm6; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x00000000459ea7: vmovdqu64 [rdi+rdx-0xc0], zmm6; vmovdqu64 [rdi+rdx-0x100], zmm7; vzeroupper; ret; 
0x00000000459d1c: vmovdqu64 [rdi], zmm0; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x0000000045a581: vmovdqu64 [rdi], zmm0; vzeroupper; ret; 
0x00000000459d14: vmovdqu64 zmm1, [rsi+rdx-0x40]; vmovdqu64 [rdi], zmm0; vmovdqu64 [rdi+rdx-0x40], zmm1; vzeroupper; ret; 
0x00000000459318: vmovq [rdi], xmm0; vmovq [rsi-0x8], xmm0; ret; 
0x0000000045931c: vmovq [rsi-0x8], xmm0; ret; 
0x000000004461c2: vmovups [r9+0x100], zmm12; vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000004461c9: vmovups [r9+0x140], zmm13; vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000004461d0: vmovups [r9+0x180], zmm14; vmovups [r9+0x1c0], zmm15; ret; 
0x000000004461d7: vmovups [r9+0x1c0], zmm15; ret; 
0x0000000044605b: vmovups [r9-0x100], zmm12; vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x00000000445e21: vmovups [r9-0x100], zmm4; vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x00000000446070: vmovups [r9-0x40], zmm15; ret; 
0x00000000445e72: vmovups [r9-0x40], zmm3; ret; 
0x00000000445e36: vmovups [r9-0x40], zmm7; ret; 
0x00000000446069: vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x00000000445e6b: vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x00000000445e2f: vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x00000000446062: vmovups [r9-0xc0], zmm13; vmovups [r9-0x80], zmm14; vmovups [r9-0x40], zmm15; ret; 
0x00000000445e28: vmovups [r9-0xc0], zmm5; vmovups [r9-0x80], zmm6; vmovups [r9-0x40], zmm7; ret; 
0x00000000445e64: vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x000000004592d1: vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x00000000446324: vmovups [rdi-0x140], zmm12; vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x0000000044632b: vmovups [rdi-0x180], zmm13; vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000446332: vmovups [rdi-0x1c0], zmm14; vmovups [rdi-0x200], zmm15; ret; 
0x00000000446339: vmovups [rdi-0x200], zmm15; ret; 
0x00000000445e5e: vmovups [rdi], zmm0; vmovups [rdi+0x40], zmm1; vmovups [r9-0x80], zmm2; vmovups [r9-0x40], zmm3; ret; 
0x000000004592cb: vmovups [rdi], zmm2; vmovups [rdi+0x40], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592ec: vmovups [rdi], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004594a7: vmovups [rsi+0x100], zmm2; vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004594ae: vmovups [rsi+0x140], zmm2; vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004594b5: vmovups [rsi+0x180], zmm2; vmovups [rsi+0x1c0], zmm2; ret; 
0x000000004594bc: vmovups [rsi+0x1c0], zmm2; ret; 
0x00000000459411: vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x00000000459418: vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000045941f: vmovups [rsi+0xc0], zmm2; ret; 
0x000000004592a9: vmovups [rsi-0x100], zmm2; vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592be: vmovups [rsi-0x40], zmm2; ret; 
0x000000004592b7: vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x000000004592b0: vmovups [rsi-0xc0], zmm2; vmovups [rsi-0x80], zmm2; vmovups [rsi-0x40], zmm2; ret; 
0x0000000045940b: vmovups [rsi], zmm2; vmovups [rsi+0x40], zmm2; vmovups [rsi+0x80], zmm2; vmovups [rsi+0xc0], zmm2; ret; 
0x0000000048a281: vmulps xmm3, xmm2, [rbx-0x6]; dec dword ptr [rcx-0x77]; ret; 
0x0000000045d52c: vpaddsw ymm0, ymm15, [rcx+0xf]; lahf; ret; 
0x0000000044c541: vpcmpeqb xmm0, xmm0, xmm1; lea r10, [r10+r9]; notrack jmp r10; 
0x000000004399b5: vpcmpeqb xmm2, xmm2, [rdi]; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000439890; ret; 
0x00000000439977: vpcmpeqb xmm2, xmm2, xmm1; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000439890; ret; 
0x0000000043997b: vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x0000000000439890; ret; 
0x00000000439ac8: vpmovmskb eax, ymm2; sub eax, 0xffffffff; jne 0x0000000000439890; vzeroupper; ret; 
0x00000000439883: vpmovmskb eax, ymm2; sub eax, 0xffffffff; jne short 0x0000000000439890; vzeroupper; ret; 
0x000000004159e5: vpsubsb xmm12, xmm15, [rdi+rsi*4-0x72b20002]; je short 0x00000000004159f6; add [rax-0x9], ecx; ror byte ptr [rax+0x1], 0x1; ret; 
0x00000000439844: vptest ymm5, ymm0; jae 0x0000000000439ae0; xor eax, eax; vzeroupper; ret; 
0x00000000434754: vzeroupper; ret; 
0x00000000482b80: vzeroupper; xor eax, eax; ret; 
0x0000000043e225: xchg [r15], r8d; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000468207: xchg [rax*1+0x39480000], esp; ret; 
0x00000000427b53: xchg [rax+0x1], ch; add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [r15+0x18]; 
0x0000000047f1a5: xchg [rax+0x1], ecx; clc; notrack jmp rax; 
0x000000004246e3: xchg [rax+0x31000000], ch; ror byte ptr [rax-0x77], cl; out dx, al; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x000000004a17ee: xchg [rax+0x48000000], bh; add esp, 0x8; ret; 
0x000000004a17db: xchg [rax+0x48000000], ch; add esp, 0x8; ret; 
0x000000004a183a: xchg [rax+0x48000000], dh; add esp, 0x8; ret; 
0x00000000480d36: xchg [rax+0x48000000], esp; cmp dword ptr [rax+0x30], 0x0; je short 0x0000000000480d48; ret; 
0x0000000047c9cb: xchg [rax+0xfffffee], ebx; mov dh, 0x4; add cl, [rcx-0x77]; ret far; 
0x000000004a32c5: xchg [rax+rax+0x438b0000], ecx; or [rcx+0x63], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x00000000423fcf: xchg [rax+rax-0x2dcf0000], ch; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000004a39c6: xchg [rax-0x3d000000], ebx; nop [rax]; endbr64; mov [rdi+0x98], rsi; ret; 
0x000000004a3a36: xchg [rax-0x3d000000], esi; nop [rax]; endbr64; mov rax, [rdi+0xa8]; ret; 
0x000000004a39e6: xchg [rax-0x3d000000], esp; nop [rax]; endbr64; mov rax, [rdi+0xb8]; ret; 
0x0000000040b705: xchg [rax-0x7e000018], edx; jmp far fword ptr [rdi+0x17]; 
0x0000000045a277: xchg [rax-0xd000000], eax; movq [rdi+rdx-0x10], mm0; movdqu [rdi], xmm0; ret; 
0x00000000426cf5: xchg [rax], eax; add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000048bd52: xchg [rax], ebx; add al, 0x0; add [rcx-0x77], cl; ret; 
0x00000000416d45: xchg [rbp+0x1], edi; add [rbx+rcx*4+0x4], cl; and al, 0xe9; idiv edi; jmp qword ptr [rsi+0xf]; 
0x00000000427ec6: xchg [rbp+0x31000001], dl; shl byte ptr [rcx], cl; test byte ptr [rax-0x77], 0xdf; call qword ptr [r15+0x58]; 
0x00000000481306: xchg [rbp+0x4c000001], dh; mov edi, ebp; call qword ptr [r14+0x20]; 
0x00000000427200: xchg [rbx+0x48000001], ah; mov edi, ebx; call qword ptr [rbp+0x20]; 
0x00000000482670: xchg [rbx+0x48000002], bl; add eax, edi; add rax, rcx; ret; 
0x00000000405ad8: xchg [rbx-0x75000000], esp; and [r9+0x63], cl; add al, 0x84; add rax, r12; notrack jmp rax; 
0x00000000480b42: xchg [rcx+0x44000001], cl; mov esi, edi; mov rdi, rbp; call qword ptr [r14+0x18]; 
0x0000000048c2b1: xchg [rcx+0x4800000c], eax; lea edi, [rip+0x3d8bb]; movsxd rax, [rdi+r12*4]; add rax, rdi; notrack jmp rax; 
0x000000004096d1: xchg [rcx+0x48fffffc], edi; movsxd eax, [rbx+rcx*4]; add rax, rbx; notrack jmp rax; 
0x0000000047c7d2: xchg [rcx+0xffffff0], edx; mov dh, 0xc; add cl, [rax-0x73]; add eax, 0x6375e; jmp qword ptr [rax+rcx*8]; 
0x000000004727f2: xchg [rcx+rax-0x10], cl; notrack jmp rax; 
0x00000000421caf: xchg [rcx+rax], ah; add [rax], al; xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x0000000042727c: xchg [rdi+0x1], ch; add [rax], al; mov esi, 0xffffffff; mov rdi, rbx; call qword ptr [rbp+0x18]; 
0x0000000041ffd4: xchg [rdi+0x1], dl; add [rax], al; xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x00000000424ed4: xchg [rdi+0x48000000], ah; mov edi, ebp; call qword ptr [r13+0x20]; 
0x00000000473d53: xchg [rdi+0x4c000009], ah; mov edx, ebp; mov rsi, r10; mov rdi, r15; call qword ptr [rcx+0x38]; 
0x0000000043c025: xchg [rdi+0x63490007], esp; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043f1e5: xchg [rdi+0x7], esi; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000404daf: xchg [rdi+rdi*8-0x1], esp; call far fword ptr [rbx+0x48]; 
0x0000000043e2d8: xchg [rdi], al; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000426b1c: xchg [rdi], bh; add [rax], al; mov esi, 0xffffffff; mov rdi, rbp; call qword ptr [rbx+0x18]; 
0x0000000043e188: xchg [rdi], eax; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004727ea: xchg [rdx+0x49000006], esp; movsxd eax, [rsi+rax*4]; add rax, r14; notrack jmp rax; 
0x00000000478c3a: xchg [rdx+0x49000008], esi; movsxd eax, [rsi+rax*4]; add rax, r14; notrack jmp rax; 
0x0000000047fbd9: xchg [rdx+0x4c000000], al; mov edx, esp; mov rsi, rbp; mov rdi, rbx; call qword ptr [r13+0x38]; 
0x000000004318f6: xchg [rdx], bh; add [rax-0x73], cl; adc eax, 0x25b3f; cmovne rax, rdx; ret; 
0x0000000046a2b9: xchg [rdx], dl; add al, [rax]; add [rcx-0x77], al; xor ecx, [rcx-0x77]; ret far; 
0x000000004241d6: xchg [rip+0x48000002], ah; lea esi, [rsp+0x10]; mov rdi, rbp; call qword ptr [rax+0x90]; 
0x0000000047f296: xchg [rip+0x48000002], esp; lea ecx, [rip+0x497a2]; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x000000004a2b84: xchg [rsi+0x40fff5eb], ebp; movzx esi, dh; movsxd rax, [r12+rsi*4]; add rax, r12; notrack jmp rax; 
0x00000000424d85: xchg [rsi+0x48000001], cl; mov esi, esp; mov rdi, rbp; call qword ptr [r13+0x90]; 
0x0000000047c3ad: xchg [rsi+0xffffff4], esi; mov dh, 0x4; add cl, [rax-0x73]; or eax, 0x63c83; jmp qword ptr [rcx+rax*8]; 
0x00000000471646: xchg ah, dl; sti; dec dword ptr [rcx+rcx*4+0x65]; mov eax, 0xfffdd4e9; jmp qword ptr [rbx+rcx*4+0x4]; 
0x0000000042f82b: xchg al, al; add [rax], al; add [rax-0x7d], cl; call far fword ptr [rdi]; 
0x000000004a0e7e: xchg ax, ax; call rax; 
0x0000000040a87e: xchg ax, ax; lea eax, [rsi*8+0x10]; ret; 
0x00000000452bae: xchg ax, ax; mov [rcx], dx; ret; 
0x00000000452bde: xchg ax, ax; mov [rcx], edx; mov [rcx+0x4], dl; ret; 
0x000000004563ce: xchg ax, ax; mov [rdi], dx; ret; 
0x000000004563fe: xchg ax, ax; mov [rdi], edx; mov [rdi+0x4], dl; ret; 
0x00000000454efe: xchg ax, ax; mov al, [rcx]; mov [rdx], al; lea rax, [rdx]; ret; 
0x000000004553de: xchg ax, ax; mov dx, [rsi]; mov [rdi], dx; ret; 
0x00000000430e0e: xchg ax, ax; mov eax, 0x16; ret; 
0x00000000456a3e: xchg ax, ax; mov edx, [rsi]; mov [rdi], edx; lea rax, [rdi+0x3]; ret; 
0x0000000044e96e: xchg ax, ax; mov edx, [rsi]; mov [rdi], edx; vzeroupper; ret; 
0x000000004a42fe: xchg ax, ax; mov rsi, r14; mov rdi, rbx; call r15; 
0x00000000456b6e: xchg ax, ax; movdqu xmm0, [rsi]; movdqu [rdi], xmm0; lea rax, [rdi+0xf]; ret; 
0x0000000045902e: xchg ax, ax; rep ret; 
0x00000000401cde: xchg ax, ax; ret; 
0x0000000040255e: xchg ax, ax; xor eax, eax; add rsp, 0x8; ret; 
0x0000000048290e: xchg ax, ax; xor eax, eax; ret; 
0x00000000499b33: xchg bh, bh; jmp qword ptr [rsi+0x2e]; 
0x00000000499b8f: xchg bh, bh; jmp qword ptr [rsi+0xf]; 
0x0000000049960d: xchg bh, dh; push rbx; nop edx, edi; ret; 
0x00000000422516: xchg ch, dl; add [rax], al; add [rdx+0x1], bh; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000047961c: xchg cl, bh; call qword ptr [rax-0x3f7c3977]; 
0x0000000049960c: xchg dil, sil; push rbx; nop edx, edi; ret; 
0x00000000431c65: xchg ebp, eax; add [rax], al; lea rdx, [rip+0xeaf1]; cmovne rax, rdx; ret; 
0x0000000048712f: xchg ebp, eax; add [rcx+rax-0x16], cl; notrack jmp rdx; 
0x00000000403965: xchg ebp, eax; add eax, 0x1ff8c100; and eax, 0xfffffffe; add rsp, 0x18; ret; 
0x000000004a3bd5: xchg ebp, eax; cmp ah, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000048e8ab: xchg ebp, eax; cmp ch, 0xff; jmp qword ptr [rsi+0xf]; 
0x000000004a40d7: xchg ebp, eax; cmp dh, 0xff; jmp qword ptr [rsi+0xf]; 
0x0000000043c617: xchg ebp, eax; mov eax, [0x8d49931463490007]; adc al, 0x13; notrack jmp rdx; 
0x0000000049bfbf: xchg ebp, eax; push rax; add al, 0x0; add bl, ch; ret; 
0x0000000048ad62: xchg ebp, eax; ret; 
0x0000000046c1df: xchg ebp, ecx; add al, 0x0; add [rax+0x39], cl; ret far; 
0x0000000041db6f: xchg ebx, eax; add r10, r11; notrack jmp r10; 
0x00000000439b84: xchg ebx, eax; add rcx, r11; notrack jmp rcx; 
0x0000000043b1e7: xchg ebx, eax; add rsi, rdx; add rdi, rdx; add r9, r11; notrack jmp r9; 
0x0000000045528c: xchg ebx, eax; lea rcx, [r11+rcx]; notrack jmp rcx; 
0x0000000043b322: xchg ebx, eax; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000426ea6: xchg ebx, eax; nop [rax+rax]; endbr64; mov eax, 0xffffffff; ret; 
0x00000000421058: xchg ebx, eax; nop; add [rax], al; add [rcx+0x1], cl; ret; 
0x0000000042936c: xchg ebx, eax; or eax, [rax]; ret; 
0x000000004021ac: xchg ecx, eax; add rax, rcx; notrack jmp rax; 
0x0000000040206e: xchg ecx, eax; add rdx, rcx; notrack jmp rdx; 
0x00000000474c12: xchg ecx, eax; fdiv st(7), st; jmp qword ptr [rsi+0x2e]; 
0x00000000472fbb: xchg ecx, eax; in al, dx; stc; call qword ptr [rax-0x3f7c3977]; 
0x0000000044c3e1: xchg ecx, eax; mov eax, [rcx+rax*4]; sub eax, edx; ret; 
0x0000000044646a: xchg ecx, eax; sar ch, 0xff; jmp qword ptr [rdx-0xf]; 
0x0000000044ab0f: xchg ecx, eax; sub eax, edx; ret; 
0x0000000048f0bb: xchg ecx, eax; sub edi, eax; call qword ptr [rax+0x8498b48]; 
0x00000000460f20: xchg edi, eax; add [rax], al; add [rax-0x7d], cl; ret; 
0x0000000047f23b: xchg edi, eax; add al, 0x0; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x0000000047f29f: xchg edi, eax; add al, 0x0; movsxd rdx, [rcx+rdx*4]; add rdx, rcx; notrack jmp rdx; 
0x00000000405a97: xchg edi, eax; add rdx, r15; notrack jmp rdx; 
0x00000000416f3e: xchg edi, eax; idiv edi; jmp qword ptr [rsi+0xf]; 
0x0000000043c415: xchg edi, eax; mov [0x8d49931463490007], eax; adc al, 0x13; notrack jmp rdx; 
0x00000000420645: xchg edi, eax; mov al, [0xe08a8948000000]; add [rax], al; ret; 
0x0000000048217a: xchg edx, eax; fdivr st, st(5); jmp qword ptr [rsi-0x70]; 
0x00000000476972: xchg edx, eax; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x0000000040dc63: xchg edx, eax; lea rdx, [rip+0x9c04d]; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000047c73a: xchg edx, eax; ret far; 
0x0000000045cec2: xchg edx, eax; rol byte ptr [rax+rax*8-0x38b7af8c], 0xc0; sar bh, 0xff; jmp qword ptr [rdi+rax*8]; 
0x00000000438abc: xchg edx, eax; sub eax, edx; ret; 
0x00000000431af5: xchg esi, eax; add [rax], al; lea rdx, [rip+0xec41]; cmovne rax, rdx; ret; 
0x0000000045a824: xchg esi, eax; add rax, rsi; notrack jmp rax; 
0x0000000041d86c: xchg esi, eax; add rdx, rsi; notrack jmp rdx; 
0x000000004038b1: xchg esi, eax; mov eax, 0xffffffa1; ret; 
0x0000000042de46: xchg esi, eax; or rax, [r8]; syscall; 
0x0000000047783e: xchg esi, eax; out 0xff, al; jmp qword ptr [rsi+0xf]; 
0x0000000043a5d6: xchg esi, eax; rol byte ptr [rdi], 0x0; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000041b2bd: xchg esi, eax; sbb eax, [rax]; add [rbx-0x7bf0fe08], al; ret; 
0x000000004753eb: xchg esi, eax; sti; jmp qword ptr [rsi-0x70]; 
0x00000000413ae1: xchg esp, eax; ret; 
0x0000000047bc07: xchg esp, edx; sub [rax], al; add [rax-0x7d], cl; ret; 
0x000000004296f5: xchg r8d, eax; or eax, [rax]; ret; 
0x0000000047f23a: xchg rdi, rax; add al, 0x0; movsxd rcx, [rdi+rcx*4]; add rcx, rdi; notrack jmp rcx; 
0x000000004852fe: xlat [rbx]; add [rax], al; add [rax+0x1], cl; ret far; 
0x00000000430f75: xlat [rbx]; add byte ptr [rdx], 0x0; cmovne rax, rdx; ret; 
0x0000000043b1ed: xlat [rbx]; add r9, r11; notrack jmp r9; 
0x00000000492548: xlat [rbx]; cmp rax, 0x9; ja short 0x0000000000492520; mov rax, r8; ret; 
0x00000000481301: xlat [rbx]; cmp rax, rdi; jbe 0x00000000004814c0; mov rdi, r13; call qword ptr [r14+0x20]; 
0x0000000045956c: xlat [rbx]; jb short 0x0000000000459572; rep movsb [rdi], [rsi]; ret; 
0x00000000444e50: xlat [rbx]; lea r11, [rip+0x721d8]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000444c9d: xlat [rbx]; lea r11, [rip+0x725cb]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004433f8: xlat [rbx]; lea r11, [rip+0x73e70]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443291: xlat [rbx]; lea r11, [rip+0x73fd7]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044231c: xlat [rbx]; lea r11, [rip+0x7480c]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000442189: xlat [rbx]; lea r11, [rip+0x74bdf]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044056b: xlat [rbx]; lea r11, [rip+0x763fd]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x000000004408f8: xlat [rbx]; lea r11, [rip+0x76470]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000044077a: xlat [rbx]; lea r11, [rip+0x765ee]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043ddbc: xlat [rbx]; lea r11, [rip+0x78bac]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dcf7: xlat [rbx]; lea r11, [rip+0x78c71]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b3dc: xlat [rbx]; lea r11, [rip+0x7b3cc]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043b317: xlat [rbx]; lea r11, [rip+0x7b491]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043a5d2: xlat [rbx]; lea r11, [rip+0x7c096]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a558: xlat [rbx]; lea r11, [rip+0x7c110]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a4c9: xlat [rbx]; lea r11, [rip+0x7c19f]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a2be: xlat [rbx]; lea r11, [rip+0x7c3aa]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a18c: xlat [rbx]; lea r11, [rip+0x7c4dc]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a0c6: xlat [rbx]; lea r11, [rip+0x7c5a2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000043a048: xlat [rbx]; lea r11, [rip+0x7c620]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439fb3: xlat [rbx]; lea r11, [rip+0x7c6b5]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439db6: xlat [rbx]; lea r11, [rip+0x7c8b2]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439c84: xlat [rbx]; lea r11, [rip+0x7c9e4]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x00000000439b79: xlat [rbx]; lea r11, [rip+0x7caef]; movsxd rcx, [r11+rdx*4]; add rcx, r11; notrack jmp rcx; 
0x0000000045b8e1: xlat [rbx]; mov eax, esi; syscall; 
0x0000000045b8f0: xlat [rbx]; mov eax, r8d; syscall; 
0x00000000412878: xlat [rbx]; mov esi, 0x45c748ff; mov al, [0xfff868e9ffffffff]; jmp qword ptr [rbx+rcx*4+0x4]; 
0x000000004347d4: xlat [rbx]; ret far; 
0x00000000422df5: xlat [rbx]; ret; 
0x00000000482f75: xlat [rbx]; rol ch, cl; std; xlat [rbx]; ret; 
0x00000000482aff: xlat [rbx]; rol dword ptr [rbp+0x311b75c0], 0xc0; vzeroupper; ret; 
0x00000000482883: xlat [rbx]; rol dword ptr [rbp+0x315775c0], 0xc0; ret; 
0x00000000482853: xlat [rbx]; rol dword ptr [rbp-0x5c7af040], 0x0; add [rax], al; xor eax, eax; ret; 
0x00000000482d65: xlat [rbx]; shl byte ptr [rsi+0xf], 0x1; outsd dx, [rsi]; ret; 
0x00000000483c29: xlat [rbx]; std; jmp far fword ptr [rdx+0x1]; 
0x00000000413bf2: xor [r11-0x78f0fd07], r8b; ret; 
0x000000004391cb: xor [r14+0xf], r12b; xlat [rbx]; ret; 
0x0000000042787d: xor [r15], cl; adc [rcx+0x40], eax; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x000000004268f2: xor [r8-0x77], cl; and [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x00000000484fb7: xor [rax+0x106], bh; syscall; 
0x0000000049c1ab: xor [rax+0x5bf0004], ebx; xor [rax], al; add [rax+0x9e], bh; syscall; 
0x000000004802e6: xor [rax+0x63], ecx; ror dword ptr [rcx+rcx*4-0x12], cl; mov rdi, r15; call qword ptr [rbp+0x38]; 
0x0000000041ed11: xor [rax-0x39], ecx; ret; 
0x000000004991dc: xor [rax-0x4], ch; push rbx; nop edx, edi; mov eax, [rip+0x4c79e]; ret; 
0x00000000467f70: xor [rax-0x75], cl; and al, 0x18; mov rsi, [rsp+0x48]; mov rdi, [rsp+0x40]; call r14; 
0x000000004684c3: xor [rax-0x75], cl; je short 0x00000000004684ec; mov rdi, [rsp+0x40]; call rbx; 
0x00000000468f03: xor [rax-0x75], cl; je short 0x0000000000468f2c; mov rdi, [rsp+0x38]; mov rax, [rsp+0x20]; call rax; 
0x000000004694f7: xor [rax-0x75], cl; je short 0x0000000000469520; mov rdi, [rsp+0x38]; call r15; 
0x000000004268f3: xor [rax-0x77], cl; and [r9], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret; 
0x0000000048fed9: xor [rax-0x77], cl; fmul st, qword ptr [rax-0x75]; sbb al, 0x24; add rsp, 0x30; bnd ret; 
0x0000000049e994: xor [rax-0x77], cl; or [r8+0x2], r15b; ret; 
0x0000000045d193: xor [rax-0x77], ecx; out dx, eax; xor esi, esi; call r12; 
0x000000004a711a: xor [rax-0x7b], cl; push qword ptr [rbp+rdx-0x18]; ret far; 
0x00000000430496: xor [rax-0x7b], ecx; div byte ptr [rsp+rcx+0x48]; lea eax, [rax-0x10]; ret; 
0x00000000465ab5: xor [rax-0x7d], ecx; ret; 
0x00000000410fa5: xor [rax], al; add [rax+0x9e], bh; syscall; 
0x0000000041ec35: xor [rax], al; add [rax], al; call rax; 
0x0000000041ec17: xor [rax], al; add [rax], al; call rdx; 
0x00000000483d4c: xor [rax], al; add [rax], al; cmovne rax, rdx; ret; 
0x0000000045a874: xor [rax], al; add [rax], al; pop rbx; ret; 
0x00000000480d3e: xor [rax], al; je short 0x0000000000480d48; ret; 
0x0000000043352e: xor [rax], cl; add [rdi+0x63], cl; or al, 0x8a; lea r10, [r10+r9]; notrack jmp r10; 
0x0000000042a6c2: xor [rax], eax; add [rax-0x77], cl; add eax, 0xb80f4; ret; 
0x0000000042cba9: xor [rax], ecx; add [rax+0x39], ecx; ret; 
0x0000000048f6d6: xor [rax], edx; jae short 0x000000000048f685; xor eax, eax; ret; 
0x00000000460193: xor [rax], esp; jmp rdx; 
0x0000000048f6d5: xor [rax], r10d; jae short 0x000000000048f685; xor eax, eax; ret; 
0x0000000042cba8: xor [rax], r9; add [rax+0x39], ecx; ret; 
0x000000004597c9: xor [rbp+0xf], al; adc [rbx], eax; ret; 
0x000000004a4576: xor [rbp+0xf], dh; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x00000000473567: xor [rbp+rcx*4+0x50], cl; inc esi; test [rax], eax; idiv edi; jmp qword ptr [rax]; 
0x0000000041e046: xor [rbx+0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x000000004263ac: xor [rbx+0x5d], bl; pop r12; ret; 
0x000000004a141c: xor [rbx+0x5d], bl; pop r14; ret; 
0x00000000427a1d: xor [rbx-0x3f8a0008], al; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000413bf3: xor [rbx-0x78f0fd07], al; ret; 
0x000000004a13a7: xor [rcx+0x21], cl; ret far; 
0x00000000480d9c: xor [rcx+0x5d5b7453], cl; pop r12; ret; 
0x0000000042161d: xor [rcx+rcx*4-0x1], cl; call qword ptr [r14+0x90]; 
0x0000000049ec2f: xor [rcx+rcx*4-0x20], cl; pop r12; ret; 
0x0000000045d7ea: xor [rcx+rcx*4-0x9], cl; mov rax, [rbp-0x58]; mov r15d, r13d; call rax; 
0x00000000423924: xor [rcx], al; add [rax], al; mov rsi, rsp; mov rdi, rbp; call qword ptr [r15+0x90]; 
0x00000000409017: xor [rcx], dh; rcr byte ptr [rbx+0x5d], 0x41; pop rsp; ret; 
0x0000000046201f: xor [rcx], edi; or [rax], al; ret; 
0x0000000042787e: xor [rdi], cl; adc [rcx+0x40], eax; mov qword ptr [rdi+0xa8], 0x0; ret; 
0x00000000443ef6: xor [rdi], eax; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443ef7: xor [rdi], eax; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000048a11e: xor [rsi+0xf], ah; insb [rdi], dx; ret; 
0x00000000482d2c: xor [rsi+0xf], ah; outsd dx, [rsi]; ret; 
0x000000004391cc: xor [rsi+0xf], ah; xlat [rbx]; ret; 
0x0000000047ca60: xor [rsi], eax; add [rcx-0x77], cl; ret far; 
0x000000004310ac: xor ah, bh; add [rax], eax; cmovne rax, rdx; ret; 
0x0000000040c0eb: xor ah, dl; or [rax], eax; ret; 
0x000000004824e3: xor al, 0x24; pop r12; pop r13; pop r14; ret; 
0x0000000047f6a5: xor al, 0x3; add [rax], al; add bl, ch; ret far; 
0x0000000047f5fd: xor al, 0x48; lea ecx, [rbx+0x40]; mov esi, 0x1; mov rdi, rbx; call r8; 
0x000000004a17eb: xor al, 0x48; mov eax, [rsi+0xb8]; add rsp, 0x8; ret; 
0x00000000443bf7: xor al, 0x7; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000443bf6: xor al, 0x7; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000049e824: xor al, 0xb8; add [rax], eax; add [rax], al; mov [rdi], rsi; ret; 
0x00000000431922: xor al, 0xb; add [rcx], al; je short 0x00000000004318e1; ret; 
0x0000000047f00b: xor al, 0xbe; add [rax], eax; add [rax], al; mov rdi, rbx; call rax; 
0x0000000040a36a: xor al, [rcx]; add [rax], al; mov rax, 0x4dedc0; ret; 
0x00000000443d77: xor al, [rdi]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000483c27: xor al, ch; xlat [rbx]; std; jmp far fword ptr [rdx+0x1]; 
0x00000000431caa: xor bh, [rax+0x2]; add [rax-0x73], cl; add eax, 0x278eb; cmove rax, rdx; ret; 
0x0000000047b89b: xor bh, bl; jmp qword ptr [rsi-0x70]; 
0x0000000048290c: xor bl, al; xchg ax, ax; xor eax, eax; ret; 
0x00000000430fec: xor bl, dl; add [rax], eax; cmove rax, rdx; ret; 
0x0000000040a455: xor byte ptr [rbp+0x48], 0x48; mov eax, 0x4def40; ret; 
0x00000000403371: xor byte ptr [rsp+rbx-0x7f], 0xff; add [rax], al; sar byte ptr [rdi+0x74], 0x4; ret; 
0x00000000479890: xor ch, cl; sahf; idiv bh; jmp qword ptr [rsi+0x2e]; 
0x00000000407d64: xor cl, [rax-0x73]; adc eax, 0xa16cc; movsxd rax, [rdx+rax*4]; add rax, rdx; notrack jmp rax; 
0x0000000045d1a5: xor cl, [rax-0x77]; out dx, eax; mov edx, r13d; mov esi, 0x1; call r12; 
0x0000000045d235: xor cl, [rax-0x77]; out dx, eax; mov rdx, r13; mov esi, 0x1; call r12; 
0x000000004a3914: xor cl, [rax]; jne 0x0000000000401755; mov rax, [rax]; add rsp, 0x8; ret; 
0x000000004109e2: xor cl, [rcx+0xd38ff05]; add [rax-0x73], cl; add eax, 0xd38f0; ret; 
0x00000000408a00: xor dh, [rbp-0x13]; mov eax, 0xffffffef; ret; 
0x0000000047b89a: xor dh, [rdx]; sti; jmp qword ptr [rsi-0x70]; 
0x0000000048fdd2: xor dl, dh; jmp r11; 
0x0000000048fee4: xor dl, dh; ret; 
0x000000004a7d4a: xor dl, dl; add eax, [rax]; syscall; 
0x0000000040207a: xor dword ptr [rbp+rax-0x7d], 0xffffffff; mov eax, [0xfffffff2b8c30175]; ret; 
0x0000000041149b: xor dword ptr [rbx], 0x6348000a; or al, 0x8e; add rcx, rsi; notrack jmp rcx; 
0x00000000497e92: xor dword ptr [rsi+0x74c085ff], 0x58d480e; mov al, [0xd1810589480004d1]; add al, 0x0; add rsp, 0x8; ret; 
0x000000004839bb: xor dword ptr [rsi-0x72b3fffb], 0x5b5da25; add [rax+0x39], cl; ret; 
0x000000004a4572: xor eax, 0x303c2376; jne short 0x00000000004a4588; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x000000004a45d2: xor eax, 0x303c2376; jne short 0x00000000004a45e8; mov rax, [rsi+0x10]; add rsp, 0x8; ret; 
0x0000000048bd7b: xor eax, 0x3dd60; movsxd rax, [rsi+r12*4]; add rax, rsi; notrack jmp rax; 
0x00000000459d97: xor eax, 0x48000002; mov ecx, edx; rep movsb [rdi], [rsi]; ret; 
0x000000004318a7: xor eax, 0x4810000b; lea edx, [rip-0x362]; lea rax, [rip+0x272f7]; cmove rax, rdx; ret; 
0x0000000045e037: xor eax, 0x49000001; mov edi, [rbp]; call rbx; 
0x0000000047c807: xor eax, 0x49000633; mov ebx, ecx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rax+rsi*8]; jmp rax; 
0x0000000043c377: xor eax, 0x490007a4; movsxd edx, [rbx+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000049c1aa: xor eax, 0x49831; mov edi, 0x3005; mov eax, 0x9e; syscall; 
0x0000000047ea8d: xor eax, 0x49cb2; movzx eax, al; movsxd rax, [rsi+rax*4]; add rax, rsi; notrack jmp rax; 
0x0000000045a754: xor eax, 0x5d1e7; movsxd rax, [rsi+rdi*4]; add rax, rsi; notrack jmp rax; 
0x0000000047caa1: xor eax, 0x6319a; mov dword ptr [rbp-0x530], 0x1; mov dword ptr [rbp-0x4e8], 0x0; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000443a77: xor eax, 0x63490007; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000047cb26: xor eax, 0x63515; mov r11, rcx; mov dword ptr [rbp-0x508], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047caec: xor eax, 0x6354f; mov r11, rcx; mov dword ptr [rbp-0x520], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047ca1e: xor eax, 0x6361d; mov r11, rcx; mov dword ptr [rbp-0x4f8], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c9d9: xor eax, 0x63662; mov dword ptr [rbp-0x4e0], 0x1; mov dword ptr [rbp-0x4f0], 0x20; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c3de: xor eax, 0x63c5d; mov r11, rcx; mov dword ptr [rbp-0x514], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000047c35e: xor eax, 0x63cdd; mov r11, rcx; mov dword ptr [rbp-0x528], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x00000000479679: xor eax, 0x663c2; movzx eax, byte ptr [rdi+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000475d9b: xor eax, 0x69ba0; sub eax, 0x20; cdqe; movzx eax, byte ptr [rbx+rax]; jmp qword ptr [rsi+rax*8]; 
0x00000000419c1f: xor eax, 0x7503f883; ret far; 
0x0000000045a6b9: xor eax, 0x7701fa80; cmp dh, [rdx+0x2]; mov [rdi], cl; vzeroupper; ret; 
0x000000004a2136: xor eax, 0x8000430; ret; 
0x0000000047caee: xor eax, 0x89490006; ret far; 
0x0000000049183e: xor eax, 0x8ae80005; add dword ptr [rax], 0x43894800; sbb [rax+0x5a], bl; pop rbx; ret; 
0x0000000041d862: xor eax, 0x97279; mov edx, edx; movsxd rdx, [rsi+rdx*4]; add rdx, rsi; notrack jmp rdx; 
0x0000000041149a: xor eax, 0xa3381; movsxd rcx, [rsi+rcx*4]; add rcx, rsi; notrack jmp rcx; 
0x00000000484e94: xor eax, 0xa8c48148; add [rax], al; add [rbp+0x41], bl; pop rsp; ret; 
0x0000000040af63: xor eax, 0xc3ffffff; mov eax, 0xffffff34; ret; 
0x0000000040bb9f: xor eax, 0xc3ffffff; mov eax, 0xffffff36; ret; 
0x00000000403505: xor eax, 0xdec16; ret; 
0x000000004034f5: xor eax, 0xdec22; ret; 
0x000000004034e5: xor eax, 0xdec26; ret; 
0x000000004034d5: xor eax, 0xdec32; ret; 
0x000000004034c5: xor eax, 0xdec5e; ret; 
0x000000004033a5: xor eax, 0xded6a; ret; 
0x00000000403395: xor eax, 0xded7e; ret; 
0x00000000403385: xor eax, 0xded9a; ret; 
0x0000000045fa57: xor eax, 0xecebfffc; nop [rax]; endbr64; ret; 
0x0000000049e58b: xor eax, [0x28]; jne 0x000000000049e615; leave; ret; 
0x0000000041e1a5: xor eax, [0x28]; jne short 0x000000000041e1d4; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000042d665: xor eax, [0x28]; jne short 0x000000000042d674; add rsp, 0x10; pop rbp; ret; 
0x0000000046febe: xor eax, [0x28]; jne short 0x000000000046fecc; add rsp, 0x18; ret; 
0x00000000470139: xor eax, [0x28]; jne short 0x0000000000470184; mov eax, r9d; add rsp, 0x148; ret; 
0x000000004850e6: xor eax, [0x28]; jne short 0x0000000000485114; mov eax, r9d; add rsp, 0x38; ret; 
0x000000004918c7: xor eax, [0x28]; jne short 0x00000000004918d6; add rsp, 0x20; pop rbx; ret; 
0x0000000041ec32: xor eax, [0x30]; call rax; 
0x00000000459964: xor eax, [rax+0x3b7701fa]; jb short 0x0000000000459971; movzx ecx, byte ptr [rsi]; mov [rdi], cl; ret; 
0x0000000047c808: xor eax, [rsi]; add [rcx-0x77], cl; ret far; 
0x000000004a7dd0: xor eax, eax; add rsp, 0x10; pop rbx; ret; 
0x00000000425ef4: xor eax, eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000403846: xor eax, eax; add rsp, 0x8; pop rbx; pop rbp; ret; 
0x00000000402560: xor eax, eax; add rsp, 0x8; ret; 
0x000000004629fb: xor eax, eax; call rbx; 
0x000000004077d2: xor eax, eax; cmp ecx, edx; je short 0x00000000004077e0; ret; 
0x0000000045cc26: xor eax, eax; cmp esi, 0x9; je short 0x000000000045cc58; mov eax, 0x48; syscall; 
0x0000000042930f: xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x0000000046ff7d: xor eax, eax; mov [rbx+0x40], esi; pop rbx; ret; 
0x00000000480ecf: xor eax, eax; mov [rbx], ecx; pop rbx; ret; 
0x0000000042c578: xor eax, eax; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x00000000485154: xor eax, eax; mov qword ptr [rip+0x5fe37], 0xffffffffffffffff; ret; 
0x0000000041ef09: xor eax, eax; mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000041eefe: xor eax, eax; mov rax, r8; ret; 
0x0000000045b7d0: xor eax, eax; mov rcx, [rsp+0x20]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000483ae7: xor eax, eax; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x00000000422a5c: xor eax, eax; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000048506e: xor eax, eax; mov rdx, rsp; mov eax, 0x10; syscall; 
0x000000004030b9: xor eax, eax; pop r12; ret; 
0x00000000402854: xor eax, eax; pop rbp; pop r12; ret; 
0x00000000402420: xor eax, eax; pop rbp; ret; 
0x00000000408e76: xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000404ef3: xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000402240: xor eax, eax; pop rbx; ret; 
0x000000004238af: xor eax, eax; punpcklqdq xmm0, xmm0; movups [rbx+0x8], xmm0; pop rbx; ret; 
0x00000000402570: xor eax, eax; ret; 
0x0000000043348e: xor eax, eax; sub eax, ecx; ret; 
0x0000000045c0e8: xor eax, eax; syscall; 
0x000000004a1268: xor eax, eax; test r8d, r8d; jne 0x00000000004a11c0; add rsp, 0x38; ret; 
0x00000000425194: xor eax, eax; test rdx, rdx; jne short 0x00000000004251a0; ret; 
0x00000000438ee0: xor eax, eax; vzeroupper; ret; 
0x0000000041e0a6: xor eax, edx; movzx edx, byte ptr [rcx]; test dl, dl; jne short 0x000000000041e088; ret; 
0x00000000407768: xor eax, edx; ret; 
0x0000000045aedc: xor ebx, [0x28]; jne short 0x000000000045af04; add rsp, 0x20; pop rbx; ret; 
0x00000000441039: xor ebx, [rbp+0x7]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000040bb09: xor ebx, [rdi]; add [rax], al; nop [rax]; mov eax, 0xffffff94; ret; 
0x00000000441339: xor ebx, [rdx+0x7]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045c25f: xor ecx, [0x28]; jne 0x000000000045c305; add rsp, 0x68; ret; 
0x00000000470231: xor ecx, [0x28]; jne 0x00000000004702d6; add rsp, 0x98; ret; 
0x00000000404fe3: xor ecx, [0x28]; jne short 0x0000000000404ff1; add rsp, 0x48; ret; 
0x00000000405346: xor ecx, [0x28]; jne short 0x000000000040536c; add rsp, 0x10; pop rbp; ret; 
0x00000000408b05: xor ecx, [0x28]; jne short 0x0000000000408b13; add rsp, 0x18; ret; 
0x0000000041f941: xor ecx, [0x28]; jne short 0x000000000041f952; add rsp, 0xd8; ret; 
0x0000000045cbb4: xor ecx, [0x28]; jne short 0x000000000045cc03; add rsp, 0x68; ret; 
0x0000000045cc43: xor ecx, [0x28]; jne short 0x000000000045cc93; add rsp, 0x18; ret; 
0x0000000045ccfb: xor ecx, [0x28]; jne short 0x000000000045cd4b; add rsp, 0x58; ret; 
0x0000000045cd99: xor ecx, [0x28]; jne short 0x000000000045cdeb; add rsp, 0x58; ret; 
0x0000000045f9da: xor ecx, [0x28]; jne short 0x000000000045f9eb; add rsp, 0xd8; ret; 
0x00000000471f71: xor ecx, [0x28]; jne short 0x0000000000471f82; add rsp, 0xd8; ret; 
0x000000004919c2: xor ecx, [0x28]; jne short 0x00000000004919f3; add rsp, 0x38; ret; 
0x00000000491a8e: xor ecx, [0x28]; jne short 0x0000000000491ac4; add rsp, 0x58; ret; 
0x00000000491c00: xor ecx, [0x28]; jne short 0x0000000000491c44; add rsp, 0x68; ret; 
0x00000000491f1e: xor ecx, [0x28]; jne short 0x0000000000491f54; add rsp, 0x58; ret; 
0x0000000049270e: xor ecx, [0x28]; jne short 0x0000000000492735; add rsp, 0x38; ret; 
0x000000004984b5: xor ecx, [0x28]; jne short 0x00000000004984c3; add rsp, 0x28; ret; 
0x0000000049eb1e: xor ecx, [0x28]; jne short 0x000000000049eb2c; add rsp, 0x38; ret; 
0x00000000423266: xor ecx, [rax-0x7d]; ret; 
0x0000000045d721: xor ecx, [rcx-0x77]; fisttp qword ptr [rax-0x77], st; out dx, eax; call r12; 
0x0000000046a2c0: xor ecx, [rcx-0x77]; ret far; 
0x000000004a2b9e: xor ecx, [rcx-0x7d]; ret; 
0x0000000041149c: xor ecx, [rdx]; add [rax+0x63], cl; or al, 0x8e; add rcx, rsi; notrack jmp rcx; 
0x00000000441f39: xor ecx, [rsi+0x7]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000047b98f: xor ecx, ecx; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000046cf13: xor ecx, ecx; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x00000000443539: xor edi, [rip+0x63490007]; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000411240: xor edi, edi; mov eax, edx; syscall; 
0x0000000045d096: xor edi, edi; or r10d, 0x40; mov eax, ecx; syscall; 
0x0000000045ce60: xor edi, edi; syscall; 
0x00000000402af2: xor edx, [0x28]; jne 0x0000000000402b8f; add rsp, 0xc8; ret; 
0x00000000402ca2: xor edx, [0x28]; jne 0x0000000000402d3f; add rsp, 0xc8; ret; 
0x0000000045be84: xor edx, [0x28]; jne short 0x000000000045bea1; add rsp, 0x28; ret; 
0x0000000045cfd7: xor edx, [0x28]; jne short 0x000000000045cfe5; add rsp, 0x28; ret; 
0x0000000048502c: xor edx, [0x28]; jne short 0x000000000048503d; movzx eax, al; add rsp, 0x58; ret; 
0x000000004985a3: xor edx, [0x28]; jne short 0x00000000004985b1; add rsp, 0x38; ret; 
0x0000000041ec14: xor edx, [0x30]; call rdx; 
0x00000000441c39: xor edx, [rcx+0x7]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441639: xor edx, [rdi+0x7]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000441939: xor edx, [rdi+rax]; movsxd rdx, [r11+rdx*4]; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000043dc81: xor edx, [rdx+rcx]; lea r11, [rip+0x78e64]; movsxd r9, [r11+r9*4]; lea r9, [r11+r9]; notrack jmp r9; 
0x00000000421dd9: xor edx, [rip-0x74b70000]; mov bh, 0x90; add [rax], al; add cl, ch; ret far; 
0x00000000481933: xor edx, edx; add rdi, 0x308; mov esi, 0x80; syscall; 
0x0000000045a8b6: xor edx, edx; and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x000000004958a3: xor edx, edx; div ecx; add r8d, eax; mov eax, r8d; ret; 
0x0000000040143a: xor edx, edx; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000042e37b: xor edx, edx; mov edx, 0x1; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000429338: xor edx, edx; mov edx, 0x2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000045de20: xor edx, edx; mov esi, 0x1; call r12; 
0x0000000045ce57: xor edx, edx; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x0000000045ce56: xor edx, edx; mov esi, edi; mov eax, 0x12e; xor edi, edi; syscall; 
0x000000004216e8: xor edx, edx; mov rdi, r15; call qword ptr [r14+0x80]; 
0x00000000421cb4: xor edx, edx; mov rdi, r15; call qword ptr [rbx+0x80]; 
0x00000000423cd2: xor edx, edx; mov rdi, rbp; call qword ptr [rax+0x80]; 
0x00000000423fd4: xor edx, edx; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000041e18a: xor edx, edx; mov rsi, r9; mov edi, 0x2; mov eax, 0xe; syscall; 
0x000000004246e8: xor edx, edx; mov rsi, rbp; mov rdi, rbx; call qword ptr [r12+0x80]; 
0x00000000462a68: xor edx, edx; movzx eax, al; add eax, 0x1; push rax; call rbx; 
0x00000000427556: xor edx, edx; pop rbx; jmp rax; 
0x000000004838dd: xor edx, edx; push 0x1; lea r9, [rsp+0x20]; call rbx; 
0x00000000427ecb: xor edx, edx; xor esi, esi; mov rdi, rbx; call qword ptr [r15+0x58]; 
0x00000000485c29: xor esi, [rbp-0x37140009]; nop; ret; 
0x00000000443e39: xor esi, [rdi+rax]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000045d197: xor esi, esi; call r12; 
0x000000004600de: xor esi, esi; lea rdi, [rip+0x58361]; mov eax, 0x15; syscall; 
0x00000000425142: xor esi, esi; mov ecx, 0x3; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x000000004112bf: xor esi, esi; mov edi, 0x3003; mov eax, 0x9e; syscall; 
0x00000000421bbf: xor esi, esi; mov edx, 0x1; mov rdi, r15; call qword ptr [rbp+0x80]; 
0x00000000423f37: xor esi, esi; mov edx, 0x1; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x000000004219c9: xor esi, esi; mov edx, 0x2; mov rdi, r15; call qword ptr [r13+0x80]; 
0x000000004203c5: xor esi, esi; mov edx, 0x2; mov rdi, rbp; call qword ptr [rbx+0x80]; 
0x0000000042506a: xor esi, esi; mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000041ffd9: xor esi, esi; mov rdi, rbp; call qword ptr [rbx+0x10]; 
0x00000000427ecd: xor esi, esi; mov rdi, rbx; call qword ptr [r15+0x58]; 
0x00000000425141: xor esi, r14d; mov ecx, 0x3; mov edx, 0x1; mov rdi, rbx; call qword ptr [rbp+0x48]; 
0x00000000440d39: xor esp, [rax+0x7]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x00000000440a39: xor esp, [rbx+0x7]; add [rcx+0x63], cl; adc al, 0x93; lea rdx, [r11+rdx]; notrack jmp rdx; 
0x0000000040dc91: xor esp, esp; mov rax, r12; pop r12; ret; 
0x00000000481932: xor r10, r10; add rdi, 0x308; mov esi, 0x80; syscall; 
0x00000000401439: xor r10d, r10d; mov edx, 0x1; mov esi, 0x81; mov eax, 0xca; syscall; 
0x0000000042e37a: xor r10d, r10d; mov edx, 0x1; mov esi, 0x81; mov eax, ebx; syscall; 
0x00000000429337: xor r10d, r10d; mov edx, 0x2; mov esi, 0x80; mov eax, 0xca; syscall; 
0x0000000040dc90: xor r12d, r12d; mov rax, r12; pop r12; ret; 
0x000000004629fa: xor r8d, r8d; call rbx; 
0x0000000042c577: xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x0000000041ef08: xor r8d, r8d; mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000041eefd: xor r8d, r8d; mov rax, r8; ret; 
0x0000000045b7cf: xor r8d, r8d; mov rcx, [rsp+0x20]; mov rdi, rbp; mov rsi, [rsp+0x18]; call rbx; 
0x00000000483ae6: xor r8d, r8d; mov rdi, r12; lea r9, [rsp+0x30]; call rbx; 
0x00000000422a5a: xor r8d, r8d; mov rdi, r13; lea r9, [rsp+0x18]; call rbp; 
0x0000000047b98e: xor r9d, r9d; mov dword ptr [rbp-0x4d0], 0x1; mov rax, [rsi+rax*8]; jmp rax; 
0x0000000046cf12: xor r9d, r9d; mov rsi, [rsp+0x40]; mov rdi, [rsp+0x38]; lea r8, [rsp+0xa0]; call r15; 
0x0000000047caed: xor rax, 0xffffffff89490006; ret far; 
0x0000000049e58a: xor rax, [0x28]; jne 0x000000000049e615; leave; ret; 
0x0000000041e1a4: xor rax, [0x28]; jne short 0x000000000041e1d4; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000042d664: xor rax, [0x28]; jne short 0x000000000042d674; add rsp, 0x10; pop rbp; ret; 
0x0000000046febd: xor rax, [0x28]; jne short 0x000000000046fecc; add rsp, 0x18; ret; 
0x00000000470138: xor rax, [0x28]; jne short 0x0000000000470184; mov eax, r9d; add rsp, 0x148; ret; 
0x000000004850e5: xor rax, [0x28]; jne short 0x0000000000485114; mov eax, r9d; add rsp, 0x38; ret; 
0x000000004918c6: xor rax, [0x28]; jne short 0x00000000004918d6; add rsp, 0x20; pop rbx; ret; 
0x0000000041ec31: xor rax, [0x30]; call rax; 
0x0000000049e589: xor rax, fs:[0x28]; jne 0x000000000049e615; leave; ret; 
0x0000000041e1a3: xor rax, fs:[0x28]; jne short 0x000000000041e1d4; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000042d663: xor rax, fs:[0x28]; jne short 0x000000000042d674; add rsp, 0x10; pop rbp; ret; 
0x0000000046febc: xor rax, fs:[0x28]; jne short 0x000000000046fecc; add rsp, 0x18; ret; 
0x00000000470137: xor rax, fs:[0x28]; jne short 0x0000000000470184; mov eax, r9d; add rsp, 0x148; ret; 
0x000000004850e4: xor rax, fs:[0x28]; jne short 0x0000000000485114; mov eax, r9d; add rsp, 0x38; ret; 
0x000000004918c5: xor rax, fs:[0x28]; jne short 0x00000000004918d6; add rsp, 0x20; pop rbx; ret; 
0x0000000041ec30: xor rax, fs:[0x30]; call rax; 
0x000000004571a0: xor rax, rax; ret; 
0x0000000041e0a5: xor rax, rdx; movzx edx, byte ptr [rcx]; test dl, dl; jne short 0x000000000041e088; ret; 
0x0000000045aedb: xor rbx, [0x28]; jne short 0x000000000045af04; add rsp, 0x20; pop rbx; ret; 
0x0000000045aeda: xor rbx, fs:[0x28]; jne short 0x000000000045af04; add rsp, 0x20; pop rbx; ret; 
0x0000000045c25e: xor rcx, [0x28]; jne 0x000000000045c305; add rsp, 0x68; ret; 
0x00000000470230: xor rcx, [0x28]; jne 0x00000000004702d6; add rsp, 0x98; ret; 
0x00000000404fe2: xor rcx, [0x28]; jne short 0x0000000000404ff1; add rsp, 0x48; ret; 
0x00000000405345: xor rcx, [0x28]; jne short 0x000000000040536c; add rsp, 0x10; pop rbp; ret; 
0x00000000408b04: xor rcx, [0x28]; jne short 0x0000000000408b13; add rsp, 0x18; ret; 
0x0000000041f940: xor rcx, [0x28]; jne short 0x000000000041f952; add rsp, 0xd8; ret; 
0x0000000045cbb3: xor rcx, [0x28]; jne short 0x000000000045cc03; add rsp, 0x68; ret; 
0x0000000045cc42: xor rcx, [0x28]; jne short 0x000000000045cc93; add rsp, 0x18; ret; 
0x0000000045ccfa: xor rcx, [0x28]; jne short 0x000000000045cd4b; add rsp, 0x58; ret; 
0x0000000045cd98: xor rcx, [0x28]; jne short 0x000000000045cdeb; add rsp, 0x58; ret; 
0x0000000045f9d9: xor rcx, [0x28]; jne short 0x000000000045f9eb; add rsp, 0xd8; ret; 
0x00000000471f70: xor rcx, [0x28]; jne short 0x0000000000471f82; add rsp, 0xd8; ret; 
0x000000004919c1: xor rcx, [0x28]; jne short 0x00000000004919f3; add rsp, 0x38; ret; 
0x00000000491a8d: xor rcx, [0x28]; jne short 0x0000000000491ac4; add rsp, 0x58; ret; 
0x00000000491bff: xor rcx, [0x28]; jne short 0x0000000000491c44; add rsp, 0x68; ret; 
0x00000000491f1d: xor rcx, [0x28]; jne short 0x0000000000491f54; add rsp, 0x58; ret; 
0x0000000049270d: xor rcx, [0x28]; jne short 0x0000000000492735; add rsp, 0x38; ret; 
0x000000004984b4: xor rcx, [0x28]; jne short 0x00000000004984c3; add rsp, 0x28; ret; 
0x0000000049eb1d: xor rcx, [0x28]; jne short 0x000000000049eb2c; add rsp, 0x38; ret; 
0x0000000045c25d: xor rcx, fs:[0x28]; jne 0x000000000045c305; add rsp, 0x68; ret; 
0x0000000047022f: xor rcx, fs:[0x28]; jne 0x00000000004702d6; add rsp, 0x98; ret; 
0x00000000404fe1: xor rcx, fs:[0x28]; jne short 0x0000000000404ff1; add rsp, 0x48; ret; 
0x00000000405344: xor rcx, fs:[0x28]; jne short 0x000000000040536c; add rsp, 0x10; pop rbp; ret; 
0x00000000408b03: xor rcx, fs:[0x28]; jne short 0x0000000000408b13; add rsp, 0x18; ret; 
0x0000000041f93f: xor rcx, fs:[0x28]; jne short 0x000000000041f952; add rsp, 0xd8; ret; 
0x0000000045cbb2: xor rcx, fs:[0x28]; jne short 0x000000000045cc03; add rsp, 0x68; ret; 
0x0000000045cc41: xor rcx, fs:[0x28]; jne short 0x000000000045cc93; add rsp, 0x18; ret; 
0x0000000045ccf9: xor rcx, fs:[0x28]; jne short 0x000000000045cd4b; add rsp, 0x58; ret; 
0x0000000045cd97: xor rcx, fs:[0x28]; jne short 0x000000000045cdeb; add rsp, 0x58; ret; 
0x0000000045f9d8: xor rcx, fs:[0x28]; jne short 0x000000000045f9eb; add rsp, 0xd8; ret; 
0x00000000471f6f: xor rcx, fs:[0x28]; jne short 0x0000000000471f82; add rsp, 0xd8; ret; 
0x000000004919c0: xor rcx, fs:[0x28]; jne short 0x00000000004919f3; add rsp, 0x38; ret; 
0x00000000491a8b: xor rcx, fs:[0x28]; jne short 0x0000000000491ac4; add rsp, 0x58; ret; 
0x00000000491bfe: xor rcx, fs:[0x28]; jne short 0x0000000000491c44; add rsp, 0x68; ret; 
0x00000000491f1b: xor rcx, fs:[0x28]; jne short 0x0000000000491f54; add rsp, 0x58; ret; 
0x0000000049270c: xor rcx, fs:[0x28]; jne short 0x0000000000492735; add rsp, 0x38; ret; 
0x000000004984b3: xor rcx, fs:[0x28]; jne short 0x00000000004984c3; add rsp, 0x28; ret; 
0x0000000049eb1c: xor rcx, fs:[0x28]; jne short 0x000000000049eb2c; add rsp, 0x38; ret; 
0x00000000402af1: xor rdx, [0x28]; jne 0x0000000000402b8f; add rsp, 0xc8; ret; 
0x00000000402ca1: xor rdx, [0x28]; jne 0x0000000000402d3f; add rsp, 0xc8; ret; 
0x0000000045be83: xor rdx, [0x28]; jne short 0x000000000045bea1; add rsp, 0x28; ret; 
0x0000000045cfd6: xor rdx, [0x28]; jne short 0x000000000045cfe5; add rsp, 0x28; ret; 
0x0000000048502b: xor rdx, [0x28]; jne short 0x000000000048503d; movzx eax, al; add rsp, 0x58; ret; 
0x000000004985a2: xor rdx, [0x28]; jne short 0x00000000004985b1; add rsp, 0x38; ret; 
0x0000000041ec13: xor rdx, [0x30]; call rdx; 
0x00000000402af0: xor rdx, fs:[0x28]; jne 0x0000000000402b8f; add rsp, 0xc8; ret; 
0x00000000402ca0: xor rdx, fs:[0x28]; jne 0x0000000000402d3f; add rsp, 0xc8; ret; 
0x0000000045be82: xor rdx, fs:[0x28]; jne short 0x000000000045bea1; add rsp, 0x28; ret; 
0x0000000045cfd5: xor rdx, fs:[0x28]; jne short 0x000000000045cfe5; add rsp, 0x28; ret; 
0x00000000485029: xor rdx, fs:[0x28]; jne short 0x000000000048503d; movzx eax, al; add rsp, 0x58; ret; 
0x000000004985a1: xor rdx, fs:[0x28]; jne short 0x00000000004985b1; add rsp, 0x38; ret; 
0x0000000041ec12: xor rdx, fs:[0x30]; call rdx; 
0x00000000425069: xor si, si; mov edx, 0x2; mov rdi, rbx; call qword ptr [rbp+0x80]; 
0x0000000044253b: xrelease mov [rdi-0x8], rcx; ret; 
0x0000000043d41e: xrelease mov [rdi-0x8], rdx; ret; 

CONFIG [ search: ROP-JOP-SYS (default), x_match: none, max_len: 5, syntax: Intel, regex_filter: none ]
RESULT [ unique_gadgets: 20321, search_time: 233.676784ms, print_time: 1.112411965s ]
