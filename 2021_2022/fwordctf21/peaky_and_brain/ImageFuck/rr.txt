


Gadgets
=======


0x000000000040b5f3: adc ah, al; or dword ptr [rax], eax; ret; 
0x000000000043b17d: adc ah, byte ptr [rip + 0xffff]; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000492c83: adc ah, byte ptr [rsi + 0xf]; outsd dx, dword ptr [rsi]; retf 0xf66; outsd dx, dword ptr [rsi]; ret 0x290f; 
0x00000000004a1668: adc ah, ch; add al, byte ptr [rax]; ret; 
0x0000000000425085: adc al, 0; add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x0000000000498519: adc al, 0; add byte ptr [rax - 0x77], cl; sbb byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x000000000044af4f: adc al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044afb9: adc al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000041f257: adc al, 0; add byte ptr [rax], al; add byte ptr [rax - 0x7bf0d407], al; imul eax, dword ptr [rcx], 0; add byte ptr [rax - 0x7bf0cf07], al; ret 1; 
0x000000000040a871: adc al, 0; add byte ptr [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000040a8cb: adc al, 0; add byte ptr [rax], al; ret; 
0x000000000045fabb: adc al, 0x11; lea rcx, [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000048523f: adc al, 0x11; test edx, edx; jne 0x85250; ret; 
0x0000000000433239: adc al, 0x16; sub eax, edx; ret; 
0x0000000000434750: adc al, 0x16; sub eax, edx; vzeroupper; ret; 
0x0000000000438ab5: adc al, 0x16; test r8d, r8d; je 0x38abd; xchg eax, edx; sub eax, edx; ret; 
0x0000000000402af3: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x2b8f; add rsp, 0xc8; ret; 
0x0000000000402ca3: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x2d3f; add rsp, 0xc8; ret; 
0x000000000045be85: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5bea1; add rsp, 0x28; ret; 
0x000000000045cfd8: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5cfe5; add rsp, 0x28; ret; 
0x00000000004985a4: adc al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x985b1; add rsp, 0x38; ret; 
0x0000000000438d2d: adc al, 0x3a; sub eax, edx; vzeroupper; ret; 
0x000000000045be8c: adc al, 0x48; add esp, 0x28; ret; 
0x0000000000404e0b: adc al, 0x48; add esp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000408bb9: adc al, 0x48; add esp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000456c00: adc al, 0x48; lea eax, [rdi + 0x14]; ret; 
0x0000000000455ea1: adc al, 0x48; lea edi, [rdi + 0x14]; jne 0x564f0; ret; 
0x0000000000431be8: adc al, 0x49; add dword ptr [rax], eax; lea rdx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x0000000000455ec0: adc al, 0x49; sub eax, 0x15; lea rdi, [rdi + 0x15]; jne 0x564f0; ret; 
0x00000000004077d0: adc al, 0x50; xor eax, eax; cmp ecx, edx; je 0x77e0; ret; 
0x00000000004782c8: adc al, 0x62; sti; dec dword ptr [rcx - 0x77]; ret; 
0x00000000004781c8: adc al, 0x63; sti; dec dword ptr [rcx - 0x77]; ret; 
0x00000000004817e6: adc al, 0x90; mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x00000000004817b5: adc al, 0x90; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000044c3e0: adc al, 0x91; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000044ab0e: adc al, 0x91; sub eax, edx; ret; 
0x00000000004333a3: adc al, 0xa; sub eax, edx; ret; 
0x00000000004348cd: adc al, 0xa; sub eax, edx; vzeroupper; ret; 
0x0000000000499018: adc al, 0xc1; add al, 0; jae 0x9902a; mov rdx, qword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000040b563: adc al, 0xe0; or dword ptr [rax], eax; ret; 
0x0000000000459568: adc al, 0xe; cmp rdi, rdx; jb 0x59572; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000044c641: adc al, 0xe; lea rcx, [rip + 0x6e6f6]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000044ab01: adc al, 0xe; lea rcx, [rip + 0x70236]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000437c8a: adc al, 0xe; sub eax, edx; ret; 
0x000000000043989a: adc al, 0xe; sub eax, edx; vzeroupper; ret; 
0x000000000041ea80: adc al, 0xeb; sbb eax, 0x441f0f; add byte ptr [rbx + rcx*4 + 0x63], cl; or byte ptr [rax - 0x7d], cl; ret; 
0x00000000004a1660: adc al, 0xec; add al, byte ptr [rax]; divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x0000000000456219: adc al, 0xf3; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dl; ret; 
0x00000000004a3992: adc al, 0xf7; add rsp, 8; ret; 
0x0000000000493bb2: adc al, 0xf8; add cl, ch; ret 0xfff6; 
0x000000000041f487: adc al, 1; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000430512: adc al, 1; cmp dl, r8b; jne 0x30500; sub rax, 0x10; ret; 
0x000000000044b0f7: adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044b161: adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000402eed: adc al, byte ptr [rcx + rcx*4 - 0x20]; pop rbp; pop r12; pop r13; ret; 
0x000000000044ef3a: adc al, byte ptr [rdx]; add byte ptr [rax], al; vzeroupper; ret; 
0x00000000004036f7: adc al, ch; ret; 
0x00000000004089fe: adc bh, byte ptr [rcx]; xor dh, byte ptr [rbp - 0x13]; mov eax, 0xffffffef; ret; 
0x000000000042923a: adc bh, byte ptr [rsi - 3]; dec dword ptr [rax - 0x77]; ret; 
0x000000000049d036: adc bl, ch; jge 0x9d083; shl ecx, cl; mov qword ptr [rdi], r9; ret; 
0x0000000000442ba0: adc bl, dh; movq qword ptr [rdi + 0x10], mm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045a30a: adc bl, dh; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x00000000004561c6: adc bl, dh; movq qword ptr [rdi], mm0; mov byte ptr [rdi + 0x10], cl; ret; 
0x0000000000456bd6: adc bl, dh; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x0000000000456bf6: adc bl, dh; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x0000000000455526: adc bl, dh; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000455516: adc bl, dh; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000456c57: adc bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000456c77: adc bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x00000000004555a7: adc bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000455587: adc bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000456b97: adc bl, dh; movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004554e7: adc bl, dh; movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000456d58: adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, [rdi + 0x1f]; ret; 
0x0000000000455688: adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x00000000004a165b: adc bl, dh; movups xmm0, xmmword ptr [rip + 0x2ec14]; divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x0000000000442b9f: adc bl, r14b; movq qword ptr [rdi + 0x10], mm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x00000000004561c5: adc bl, r14b; movq qword ptr [rdi], mm0; mov byte ptr [rdi + 0x10], cl; ret; 
0x0000000000456bd5: adc bl, r14b; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x0000000000456bf5: adc bl, r14b; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x0000000000455525: adc bl, r14b; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000455515: adc bl, r14b; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000456c56: adc bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000456c76: adc bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x00000000004555a6: adc bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000455586: adc bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000456b96: adc bl, r14b; movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004554e6: adc bl, r14b; movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; ret; 
0x000000000045dc87: adc byte ptr [r11 + 0x94801e0], al; ror byte ptr [rcx - 0x77], 1; or byte ptr [r9 - 0x75], cl; add dword ptr [rbx + 0x94901e0], eax; ret; 
0x00000000004a0435: adc byte ptr [r13 + 0x2d840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000045e3f0: adc byte ptr [r13 - 0x7b], r9b; ror byte ptr [rdi], 0x85; ret 4; 
0x000000000048287f: adc byte ptr [r14 + 0xf], r12b; xlatb; rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x0000000000427875: adc byte ptr [r15], cl; adc dword ptr [rcx + 0x20], eax; movups xmmword ptr [rcx + 0x30], xmm0; movups xmmword ptr [rcx + 0x40], xmm0; mov qword ptr [rdi + 0xa8], 0; ret; 
0x0000000000470fc8: adc byte ptr [r15], cl; sahf; ret 0x3949; 
0x0000000000470b90: adc byte ptr [r15], cl; xchg eax, ebx; ret 0x3949; 
0x00000000004596a6: adc byte ptr [r15], r9b; adc dword ptr [rdi + rdx - 0x10], edx; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000049daeb: adc byte ptr [r15], r9b; popfq; ret 0x3948; 
0x000000000041475b: adc byte ptr [r15], r9b; xchg eax, ebx; ret 0x3948; 
0x0000000000491913: adc byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x0000000000421bf2: adc byte ptr [r8 + 1], r9b; ret; 
0x000000000045f363: adc byte ptr [r8 - 0x77], cl; ret 0x8148; 
0x000000000048cd68: adc byte ptr [r8 - 0x77], cl; ret 0xf748; 
0x0000000000428993: adc byte ptr [r8 - 0x77], r9b; ret 0xf8b; 
0x0000000000470fc1: adc byte ptr [r8 - 0x7b], r9b; ror byte ptr [rax - 0x73], 0x41; adc byte ptr [rdi], cl; sahf; ret 0x3949; 
0x0000000000455ebc: adc byte ptr [r8 - 0x7cb6eb89], r9b; call 0x7f92a6dd; adc eax, 0x621850f; add byte ptr [rax], al; ret; 
0x0000000000490cd7: adc byte ptr [r8], al; add byte ptr [rax], al; add byte ptr [rdi], cl; adc dword ptr [rbx], eax; pop rbx; ret; 
0x000000000042d9a2: adc byte ptr [rax + 0x29], cl; ret 0x3948; 
0x0000000000495825: adc byte ptr [rax + 0x29], cl; ret 0xc148; 
0x0000000000455b2a: adc byte ptr [rax + 0x29], cl; retf 0x394c; ret 0x9d72; 
0x0000000000470b38: adc byte ptr [rax + 0x39], cl; ret 0x8e0f; 
0x000000000049d5ed: adc byte ptr [rax + 0x39], cl; ret 0xed75; 
0x000000000041479c: adc byte ptr [rax + 0x39], cl; ret 0xee75; 
0x0000000000481f2e: adc byte ptr [rax + 0x39], cl; ret 0xf475; 
0x000000000042c896: adc byte ptr [rax + 0x39], cl; ror dword ptr [rdi], cl; xchg eax, ebp; ret 0xb60f; 
0x000000000049c924: adc byte ptr [rax + 0x3b], cl; sub byte ptr [rbx - 0x1b], sil; mov eax, 1; ret; 
0x0000000000491914: adc byte ptr [rax + 0x5a], bl; pop rbx; ret; 
0x0000000000465983: adc byte ptr [rax + 0x63], cl; fisttp dword ptr [rcx + 0x39]; test dword ptr [rdi], 0x33486; add byte ptr [rcx - 0xa], al; ret; 
0x000000000045c14f: adc byte ptr [rax + 1], bh; syscall; cmp rax, -0x1000; ja 0x5c1b0; ret; 
0x00000000004212e2: adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x0000000000421bf3: adc byte ptr [rax + 1], cl; ret; 
0x000000000045c31f: adc byte ptr [rax + 3], bh; syscall; cmp rax, -0x1000; ja 0x5c370; ret; 
0x0000000000410da2: adc byte ptr [rax - 0x39], cl; ret 0; 
0x00000000004527e4: adc byte ptr [rax - 0x73], cl; adc byte ptr [rdi], cl; test dword ptr [rcx + 5], eax; add byte ptr [rax], al; ret; 
0x000000000049865a: adc byte ptr [rax - 0x73], cl; adc eax, 0x11e; lea rax, [rip + 0x67]; cmovne rax, rdx; ret; 
0x0000000000430f6a: adc byte ptr [rax - 0x73], cl; adc eax, 0x2818e; lea rax, [rip + 0x280d7]; cmovne rax, rdx; ret; 
0x00000000004318aa: adc byte ptr [rax - 0x73], cl; adc eax, 0xfffffc9e; lea rax, [rip + 0x272f7]; cmove rax, rdx; ret; 
0x0000000000455e1b: adc byte ptr [rax - 0x73], cl; jg 0x55e30; jne 0x564f0; ret; 
0x0000000000485254: adc byte ptr [rax - 0x73], cl; or al, 0x8e; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000485253: adc byte ptr [rax - 0x73], r9b; or al, 0x8e; add eax, dword ptr [rcx + rdx]; ret; 
0x00000000004089fb: adc byte ptr [rax - 0x75], cl; adc bh, byte ptr [rcx]; xor dh, byte ptr [rbp - 0x13]; mov eax, 0xffffffef; ret; 
0x0000000000421055: adc byte ptr [rax - 0x75], cl; xchg eax, ebx; nop; add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x00000000004817eb: adc byte ptr [rax - 0x77], cl; jo 0x81830; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000048073d: adc byte ptr [rax - 0x77], cl; push rax; movups xmmword ptr [rax], xmm0; ret; 
0x000000000046d0e4: adc byte ptr [rax - 0x77], cl; ret 0x2548; 
0x000000000045f364: adc byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000042c2cb: adc byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000004284f4: adc byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x0000000000495ca5: adc byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000048cd69: adc byte ptr [rax - 0x77], cl; ret 0xf748; 
0x0000000000428994: adc byte ptr [rax - 0x77], cl; ret 0xf8b; 
0x00000000004a2465: adc byte ptr [rax - 0x77], cl; ret; 
0x0000000000470fc2: adc byte ptr [rax - 0x7b], cl; ror byte ptr [rax - 0x73], 0x41; adc byte ptr [rdi], cl; sahf; ret 0x3949; 
0x000000000040a8fd: adc byte ptr [rax - 0x7b], cl; sal byte ptr [rbp + rax - 1], 0xe0; nop dword ptr [rax]; mov eax, 0xffffffff; ret; 
0x0000000000455ebd: adc byte ptr [rax - 0x7cb6eb89], cl; call 0x7f92a6dd; adc eax, 0x621850f; add byte ptr [rax], al; ret; 
0x000000000042a82b: adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000045d952: adc byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x0000000000460765: adc byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x0000000000410fc3: adc byte ptr [rax - 0x7d], cl; ret; 
0x00000000004847cb: adc byte ptr [rax - 1], bh; endbr64; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000437cea: adc byte ptr [rax], al; add byte ptr [rax - 0x77], cl; retf 0x8349; ret 0x7f10; 
0x000000000044aee2: adc byte ptr [rax], al; add byte ptr [rax - 0x77], cl; retf 0x8349; ret 0xf10; 
0x000000000044c9bc: adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044b301: adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000490cd8: adc byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; adc dword ptr [rbx], eax; pop rbx; ret; 
0x000000000042979d: adc byte ptr [rax], al; add byte ptr [rax], al; cmovne rax, rdx; mov qword ptr [rip + 0xbb58c], rax; ret; 
0x000000000040a8b7: adc byte ptr [rax], al; add byte ptr [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000045a882: adc byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000040a883: adc byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000045cf35: adc byte ptr [rax], al; add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5cf44; ret; 
0x0000000000425032: adc byte ptr [rax], al; add byte ptr [rcx - 0x100c1e], al; dec dword ptr [rcx]; ret 0x1389; 
0x000000000047bc03: adc byte ptr [rax], al; add byte ptr [rdi], cl; xchg esp, edx; sub byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000410d29: adc byte ptr [rax], al; add dh, dh; ret 0x7402; 
0x0000000000481ddc: adc byte ptr [rax], cl; add byte ptr [rax], al; cmove rax, rdx; ret; 
0x00000000004a0436: adc byte ptr [rbp + 0x2d840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000046db6a: adc byte ptr [rbp + 0x41], bl; pop rsp; pop r13; ret; 
0x000000000045e3f1: adc byte ptr [rbp - 0x7b], cl; ror byte ptr [rdi], 0x85; ret 4; 
0x0000000000431689: adc byte ptr [rbp - 0x7cb7fd8e], cl; ret 0x4802; 
0x00000000004a47e7: adc byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000000421528: adc byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000048efaf: adc byte ptr [rbx + 0x5d], bl; ret; 
0x000000000045dc88: adc byte ptr [rbx + 0x94801e0], al; ror byte ptr [rcx - 0x77], 1; or byte ptr [r9 - 0x75], cl; add dword ptr [rbx + 0x94901e0], eax; ret; 
0x000000000042615f: adc byte ptr [rbx + 0xbeb492d], al; add byte ptr [rcx], al; ret; 
0x00000000004555e7: adc byte ptr [rbx + 0xff3174e], cl; jg 0x555f6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x00000000004562d7: adc byte ptr [rbx + 0xff3174e], cl; jg 0x562e6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000456cb7: adc byte ptr [rbx + 0xff3174e], cl; jg 0x56cc6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x0000000000455607: adc byte ptr [rbx + 0xff3184e], cl; jg 0x55616; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x00000000004562f7: adc byte ptr [rbx + 0xff3184e], cl; jg 0x56306; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000456cd7: adc byte ptr [rbx + 0xff3184e], cl; jg 0x56ce6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x000000000042854a: adc byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x0000000000480fee: adc byte ptr [rbx - 0x3b7cb7ff], cl; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000048f6d7: adc byte ptr [rbx - 0x55], dh; xor eax, eax; ret; 
0x00000000004056e9: adc byte ptr [rbx - 0x76bef7bd], cl; ret 0xc085; 
0x000000000048b0fe: adc byte ptr [rbx], al; add byte ptr [rax], al; lea rax, [rax + rdx*4]; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000048b0dd: adc byte ptr [rbx], al; add byte ptr [rax], al; ret; 
0x0000000000496a1a: adc byte ptr [rcx + 0x39], cl; ret; 
0x000000000041c4f3: adc byte ptr [rcx + rcx*4 + 4], cl; and al, 0xe8; ret; 
0x0000000000402f89: adc byte ptr [rcx + rcx*4 - 0x20], al; pop rbp; pop r12; pop r13; ret; 
0x0000000000407a16: adc byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000046db92: adc byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x000000000047f69b: adc byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000041f0ec: adc byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; ret; 
0x000000000042d9b2: adc byte ptr [rcx + rcx*4 - 0x40], cl; pop rbp; ret; 
0x000000000042d7bb: adc byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; ret; 
0x0000000000470fbe: adc byte ptr [rcx - 0x73], cl; adc byte ptr [r8 - 0x7b], r9b; ror byte ptr [rax - 0x73], 0x41; adc byte ptr [rdi], cl; sahf; ret 0x3949; 
0x000000000046589f: adc byte ptr [rcx - 0x75], cl; add cl, byte ptr [rax - 0x77]; retf 0x2948; ret 0x8348; 
0x0000000000477bb6: adc byte ptr [rcx - 0x77], cl; push rsi; or cl, ch; ret 0xfff3; 
0x00000000004a1391: adc byte ptr [rcx - 0x77], cl; ret; 
0x000000000042c06a: adc byte ptr [rcx - 0x7d], al; ret 0x4801; 
0x0000000000456091: adc byte ptr [rcx - 0x7d], cl; call 0x7f92a8b9; and byte ptr [rdi], cl; test dword ptr [rax + 4], edx; add byte ptr [rax], al; ret; 
0x0000000000437d1d: adc byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x0000000000492321: adc byte ptr [rcx], al; add byte ptr [rax], al; mov eax, r12d; pop r12; ret; 
0x0000000000459167: adc byte ptr [rcx], ch; cmp edx, ecx; jle 0x59184; movsxd rax, ecx; ret; 
0x00000000004823be: adc byte ptr [rcx], cl; ret 0x3949; 
0x000000000046bca4: adc byte ptr [rdi], al; add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000427876: adc byte ptr [rdi], cl; adc dword ptr [rcx + 0x20], eax; movups xmmword ptr [rcx + 0x30], xmm0; movups xmmword ptr [rcx + 0x40], xmm0; mov qword ptr [rdi + 0xa8], 0; ret; 
0x00000000004597c1: adc byte ptr [rdi], cl; adc dword ptr [rdi + 0x20], esi; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x00000000004596a7: adc byte ptr [rdi], cl; adc dword ptr [rdi + rdx - 0x10], edx; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000049daec: adc byte ptr [rdi], cl; popfq; ret 0x3948; 
0x000000000049e15e: adc byte ptr [rdi], cl; sahf; ret 0x3948; 
0x0000000000470fc9: adc byte ptr [rdi], cl; sahf; ret 0x3949; 
0x00000000004527e8: adc byte ptr [rdi], cl; test dword ptr [rcx + 5], eax; add byte ptr [rax], al; ret; 
0x000000000042c47c: adc byte ptr [rdi], cl; test dword ptr [rip - 0x9fffffd], ebp; ret 0xf01; 
0x00000000004571c3: adc byte ptr [rdi], cl; test esi, edx; add dword ptr [rax], eax; add dh, dh; ret 0x7510; 
0x0000000000438101: adc byte ptr [rdi], cl; xchg ah, bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004381f1: adc byte ptr [rdi], cl; xchg ah, ch; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000438011: adc byte ptr [rdi], cl; xchg ah, cl; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000438a59: adc byte ptr [rdi], cl; xchg byte ptr [rax + rax - 0x7cb80000], al; ret 0xeb10; 
0x00000000004385b1: adc byte ptr [rdi], cl; xchg byte ptr [rax - 0x7cb80000], ch; ret 0xeb10; 
0x0000000000437d41: adc byte ptr [rdi], cl; xchg byte ptr [rbp + rcx - 0x7cb80000], bl; ret 0xeb10; 
0x0000000000438791: adc byte ptr [rdi], cl; xchg byte ptr [rbx + rax], cl; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000437f21: adc byte ptr [rdi], cl; xchg byte ptr [rbx + rcx - 0x7cb80000], bh; ret 0xeb10; 
0x0000000000438971: adc byte ptr [rdi], cl; xchg byte ptr [rcx + rax], ch; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000438881: adc byte ptr [rdi], cl; xchg byte ptr [rdx + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004381c3: adc byte ptr [rdi], cl; xchg byte ptr [rdx], bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004382b3: adc byte ptr [rdi], cl; xchg byte ptr [rdx], ch; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004380d3: adc byte ptr [rdi], cl; xchg byte ptr [rdx], cl; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000437e31: adc byte ptr [rdi], cl; xchg byte ptr [rsp + rcx - 0x7cb80000], ch; ret 0xeb10; 
0x0000000000437fe3: adc byte ptr [rdi], cl; xchg dl, bh; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000437e03: adc byte ptr [rdi], cl; xchg dl, bl; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000437ef3: adc byte ptr [rdi], cl; xchg dl, ch; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000437d13: adc byte ptr [rdi], cl; xchg dl, cl; or eax, 0x83480000; ret 0x4910; 
0x000000000041475c: adc byte ptr [rdi], cl; xchg eax, ebx; ret 0x3948; 
0x0000000000470b91: adc byte ptr [rdi], cl; xchg eax, ebx; ret 0x3949; 
0x000000000045c612: adc byte ptr [rdi], cl; xchg eax, esp; ret 0x2044; 
0x000000000049e15d: adc byte ptr [rdi], r9b; sahf; ret 0x3948; 
0x000000000045fb71: adc byte ptr [rdx + 0x18], dh; cmp rcx, qword ptr [rax + 0x18]; ja 0x5fb8c; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x000000000045fb70: adc byte ptr [rdx + 0x18], sil; cmp rcx, qword ptr [rax + 0x18]; ja 0x5fb8c; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x000000000045fb05: adc byte ptr [rdx + 0x1c], dh; cmp rdx, qword ptr [rdi + 0x18]; ja 0x5fb24; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000456216: adc byte ptr [rdx + 0xff31456], cl; jg 0x56225; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dl; ret; 
0x0000000000456215: adc byte ptr [rdx + 0xff31456], r9b; jg 0x56225; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dl; ret; 
0x0000000000456297: adc byte ptr [rdx + 0xff3184e], cl; jg 0x562a6; mov qword ptr [rdi + 0x10], rdx; mov byte ptr [rdi + 0x18], cl; ret; 
0x0000000000456398: adc byte ptr [rdx + 0xff3204e], cl; jg 0x563a7; movdqu xmmword ptr [rdi + 0x10], xmm2; mov byte ptr [rdi + 0x20], cl; ret; 
0x0000000000458c96: adc byte ptr [rdx], al; jne 0x58cb0; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x58c90; ret; 
0x0000000000458d46: adc byte ptr [rdx], al; jne 0x58d60; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x58d40; ret; 
0x000000000043a75b: adc byte ptr [rdx], cl; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000458c95: adc byte ptr [rdx], r8b; jne 0x58cb0; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x58c90; ret; 
0x0000000000458d45: adc byte ptr [rdx], r8b; jne 0x58d60; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x58d40; ret; 
0x00000000004a165e: adc byte ptr [rip + 0x2ec14], al; divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x0000000000439c05: adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043a60a: adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret; 
0x000000000042a2f8: adc byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ror byte ptr [rdi], 0x11; add byte ptr [rax + 0x39], cl; ret 0xeb75; 
0x0000000000439c00: adc byte ptr [rsi + 0xf], ah; out dx, eax; push rsi; adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000431f85: adc byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; fmul qword ptr [rcx - 0x7d]; ret 0x7f10; 
0x00000000004468bb: adc byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; fmul qword ptr [rcx - 0x7d]; ret 0xf10; 
0x000000000042245a: adc byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xff3; 
0x0000000000482880: adc byte ptr [rsi + 0xf], ah; xlatb; rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x00000000004556ff: adc byte ptr [rsi + 0xf], ah; xlatb; ror byte ptr [rcx - 0x7d], 1; ret 0x4d10; 
0x00000000004556fe: adc byte ptr [rsi + 0xf], r12b; xlatb; ror byte ptr [rcx - 0x7d], 1; ret 0x4d10; 
0x00000000004594ff: adc byte ptr [rsi + rdx - 0x10], cl; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000045969d: adc byte ptr [rsi + rdx - 0x20], bl; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000045fb93: adc byte ptr [rsi + rsi*8 + 0x48], bh; cmp ecx, dword ptr [rax + 0x18]; jg 0x5fb8c; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x000000000045fb2b: adc byte ptr [rsi + rsi*8 + 0x48], bh; cmp edx, dword ptr [rdi + 0x18]; jg 0x5fb24; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000045fb92: adc byte ptr [rsi + rsi*8 + 0x48], dil; cmp ecx, dword ptr [rax + 0x18]; jg 0x5fb8c; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x0000000000445efe: adc byte ptr [rsi - 0x75], ah; mov cx, word ptr ss:[rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x00000000004555c7: adc byte ptr [rsi - 0x75], ah; sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000483d3e: adc byte ptr [rsi], al; add byte ptr [rax], cl; lea rax, [rip + 0x257]; lea rdx, [rip + 0x30]; cmovne rax, rdx; ret; 
0x00000000004594fc: adc byte ptr [rsi], al; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000471de6: adc ch, al; movsb byte ptr [rdi], byte ptr [rsi]; clc; dec dword ptr [rax - 0x77]; ret 0x8948; 
0x0000000000431d69: adc cl, byte ptr [rax + 0x29]; ret; 
0x0000000000455e63: adc cl, byte ptr [rax - 0x73]; jg 0x55e7a; jne 0x564f0; ret; 
0x000000000045fb79: adc cl, byte ptr [rax - 0x77]; and sil, al; sub byte ptr [rcx], al; ret; 
0x00000000004a2dad: adc cl, byte ptr [rax - 0x77]; shr ecx, cl; ret 0xfffc; 
0x000000000044f425: adc cl, byte ptr [rax - 1]; ret 0x2288; 
0x0000000000422bcd: adc cl, byte ptr [rbx + 0x42394c42]; cmovne rax, rcx; ret; 
0x0000000000499ca2: adc cl, byte ptr [rcx + 0x48b48d8]; ret 0x8b48; 
0x00000000004a2a59: adc cl, byte ptr [rcx + 1]; ret 0xef89; 
0x00000000004a578f: adc cl, byte ptr [rcx - 0x77]; xlatb; adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000040a76a: adc cl, byte ptr [rsi]; pop rbp; ret; 
0x000000000040a444: adc cl, byte ptr [rsi]; ret; 
0x0000000000498879: adc dh, byte ptr [rbx - 0xc]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000040c1db: adc dh, dh; or eax, dword ptr [rax]; ret; 
0x000000000042975a: adc dl, byte ptr [rax + 0x1000b]; add byte ptr [rax], al; mov dword ptr [rip + 0xb9004], eax; ret; 
0x0000000000480d9b: adc dword ptr [rax + 0x30], eax; mov dword ptr [rbx + 0x74], edx; pop rbx; pop rbp; pop r12; ret; 
0x000000000048c136: adc dword ptr [rax + 0x39], ecx; ret; 
0x000000000048155a: adc dword ptr [rax + 0x40], eax; pop rbx; ret; 
0x0000000000424728: adc dword ptr [rax + 0x48000000], -0x77; call 0x5c43a48f; ret; 
0x00000000004087fe: adc dword ptr [rax + 0xa0], edx; movups xmmword ptr [rax + 0xb0], xmm3; movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x0000000000408805: adc dword ptr [rax + 0xb0], ebx; movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x000000000040880c: adc dword ptr [rax + 0xc0], esp; pop rbx; ret; 
0x000000000046fd8d: adc dword ptr [rax - 0x39], ecx; ret 0xffe0; 
0x00000000004293ae: adc dword ptr [rax - 0x3f], ecx; call 0x508fdbba; add dword ptr [rax - 0x77], ecx; adc eax, 0xb93d2; ret; 
0x0000000000421889: adc dword ptr [rax - 0x3f], ecx; cli; add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x0000000000455e3e: adc dword ptr [rax - 0x73], ecx; jg 0x55e54; jne 0x564f0; ret; 
0x000000000045fabc: adc dword ptr [rax - 0x73], ecx; or eax, 0xffffff9c; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000046fe5d: adc dword ptr [rax - 0x75], ecx; pop rax; mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000047ceb7: adc dword ptr [rax - 0x77], ecx; ret 0xc148; 
0x000000000044c9bb: adc dword ptr [rax], 0x83480000; ret 0x4910; 
0x0000000000481d16: adc dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add eax, 0xed0; cmove rax, rdx; ret; 
0x000000000045bc02: adc dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x000000000044b297: adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c8bf: adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000498fa8: adc dword ptr [rax], eax; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x98fc0; ret; 
0x0000000000480743: adc dword ptr [rax], eax; ret; 
0x0000000000429289: adc dword ptr [rbp + 0x28], ecx; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000004275df: adc dword ptr [rbp + 0x38], eax; pop rbp; pop r12; ret; 
0x000000000045ad8e: adc dword ptr [rbx + 0x147402f8], eax; xor eax, eax; ret; 
0x0000000000423473: adc dword ptr [rbx + 0x18], eax; movups xmmword ptr [rbx + 0x28], xmm0; pop rbx; ret; 
0x0000000000423477: adc dword ptr [rbx + 0x28], eax; pop rbx; ret; 
0x0000000000426dcf: adc dword ptr [rbx + 0x38], eax; mov dword ptr [rbx], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000426e76: adc dword ptr [rbx + 0x38], eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000426965: adc dword ptr [rbx + 0x48], eax; pop rbx; ret; 
0x000000000042346f: adc dword ptr [rbx + 8], eax; movups xmmword ptr [rbx + 0x18], xmm0; movups xmmword ptr [rbx + 0x28], xmm0; pop rbx; ret; 
0x00000000004238b6: adc dword ptr [rbx + 8], eax; pop rbx; ret; 
0x0000000000490cde: adc dword ptr [rbx], eax; pop rbx; ret; 
0x00000000004597cc: adc dword ptr [rbx], eax; ret; 
0x0000000000459745: adc dword ptr [rbx], esp; ret; 
0x0000000000427874: adc dword ptr [rcx + 0x10], eax; movups xmmword ptr [rcx + 0x20], xmm0; movups xmmword ptr [rcx + 0x30], xmm0; movups xmmword ptr [rcx + 0x40], xmm0; mov qword ptr [rdi + 0xa8], 0; ret; 
0x0000000000427878: adc dword ptr [rcx + 0x20], eax; movups xmmword ptr [rcx + 0x30], xmm0; movups xmmword ptr [rcx + 0x40], xmm0; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000042787c: adc dword ptr [rcx + 0x30], eax; movups xmmword ptr [rcx + 0x40], xmm0; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000043984a: adc dword ptr [rcx + 0x31000002], -0x40; vzeroupper; ret; 
0x0000000000427880: adc dword ptr [rcx + 0x40], eax; mov qword ptr [rdi + 0xa8], 0; ret; 
0x00000000004461cd: adc dword ptr [rcx + 5], ebp; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x00000000004461d4: adc dword ptr [rcx + 6], esi; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x00000000004461db: adc dword ptr [rcx + 7], edi; ret; 
0x0000000000459737: adc dword ptr [rcx - 0x10], esi; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000045973b: adc dword ptr [rcx - 0x20], edi; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x0000000000459740: adc dword ptr [rcx - 0x30], eax; movups xmmword ptr [r11], xmm4; ret; 
0x0000000000445e76: adc dword ptr [rcx - 1], ebx; ret; 
0x0000000000445e3a: adc dword ptr [rcx - 1], edi; ret; 
0x0000000000445e6f: adc dword ptr [rcx - 2], edx; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000044606d: adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000445e33: adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000446066: adc dword ptr [rcx - 3], ebp; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000445e2c: adc dword ptr [rcx - 3], ebp; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000044605f: adc dword ptr [rcx - 4], esp; vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000445e25: adc dword ptr [rcx - 4], esp; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000459734: adc dword ptr [rcx], ebp; movups xmmword ptr [rcx - 0x10], xmm6; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x00000000004597bf: adc dword ptr [rdi + 0x10], ebp; movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x00000000004596a5: adc dword ptr [rdi + 0x10], ecx; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x00000000004597c3: adc dword ptr [rdi + 0x20], esi; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x00000000004597c7: adc dword ptr [rdi + 0x30], edi; movups xmmword ptr [r11], xmm8; ret; 
0x00000000004277c5: adc dword ptr [rdi + 0x58], eax; test rax, rax; je 0x277dc; mov qword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x000000000042768f: adc dword ptr [rdi + 0xa0], eax; ret; 
0x0000000000445e68: adc dword ptr [rdi + 1], ecx; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x00000000004592d5: adc dword ptr [rdi + 1], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000042687c: adc dword ptr [rdi + 8], eax; ret; 
0x0000000000459507: adc dword ptr [rdi + rdx - 0x10], ecx; ret; 
0x00000000004596a9: adc dword ptr [rdi + rdx - 0x10], edx; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000045967c: adc dword ptr [rdi + rdx - 0x10], esp; movups xmmword ptr [rdi + rdx - 0x20], xmm5; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x0000000000459681: adc dword ptr [rdi + rdx - 0x20], ebp; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x00000000004596ae: adc dword ptr [rdi + rdx - 0x20], ebx; ret; 
0x0000000000459686: adc dword ptr [rdi + rdx - 0x30], esi; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000045968b: adc dword ptr [rdi + rdx - 0x40], edi; ret; 
0x0000000000446328: adc dword ptr [rdi - 5], esp; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000044632f: adc dword ptr [rdi - 6], ebp; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x0000000000446336: adc dword ptr [rdi - 7], esi; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000044633d: adc dword ptr [rdi - 8], edi; ret; 
0x000000000049e9d5: adc dword ptr [rdi], eax; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x00000000004596a2: adc dword ptr [rdi], eax; movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x0000000000459504: adc dword ptr [rdi], eax; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000445e62: adc dword ptr [rdi], eax; vmovups zmmword ptr [rdi + 0x40], zmm1; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x00000000004587c0: adc dword ptr [rdi], ecx; test byte ptr [rbx], bl; add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x00000000004592cf: adc dword ptr [rdi], edx; vmovups zmmword ptr [rdi + 0x40], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592f0: adc dword ptr [rdi], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004597bc: adc dword ptr [rdi], esp; movups xmmword ptr [rdi + 0x10], xmm5; movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x0000000000464f0f: adc dword ptr [rdx + 0x48], eax; ret; 
0x0000000000495bc8: adc dword ptr [rsi + 0xf], esp; outsd dx, dword ptr [rsi]; retf 0xf66; outsd dx, dword ptr [rsi]; ret 0x290f; 
0x0000000000459415: adc dword ptr [rsi + 1], edx; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000045941c: adc dword ptr [rsi + 2], edx; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x0000000000459423: adc dword ptr [rsi + 3], edx; ret; 
0x00000000004594b2: adc dword ptr [rsi + 5], edx; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x00000000004594b9: adc dword ptr [rsi + 6], edx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x00000000004594c0: adc dword ptr [rsi + 7], edx; ret; 
0x00000000004592c2: adc dword ptr [rsi - 1], edx; ret; 
0x00000000004592bb: adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592b4: adc dword ptr [rsi - 3], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592ad: adc dword ptr [rsi - 4], edx; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000040a774: adc dword ptr [rsi], ecx; pop rbp; ret; 
0x000000000040a410: adc dword ptr [rsi], ecx; ret; 
0x000000000045940f: adc dword ptr [rsi], edx; vmovups zmmword ptr [rsi + 0x40], zmm2; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000044b296: adc dword ptr es:[rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043199a: adc eax, 0x118b1; cmovne rax, rdx; ret; 
0x0000000000481d14: adc eax, 0x11d7; lea rax, [rip + 0xed0]; cmove rax, rdx; ret; 
0x000000000049865d: adc eax, 0x11e; lea rax, [rip + 0x67]; cmovne rax, rdx; ret; 
0x0000000000455ec4: adc eax, 0x157f8d48; jne 0x564f0; ret; 
0x0000000000481cd4: adc eax, 0x1607; lea rax, [rip + 0x13e0]; cmove rax, rdx; ret; 
0x0000000000431bee: adc eax, 0x16b5d; cmovne rax, rdx; ret; 
0x0000000000431d24: adc eax, 0x1c407; lea rax, [rip + 0x1bfc0]; cmove rax, rdx; ret; 
0x0000000000430fe4: adc eax, 0x1d4d7; lea rax, [rip + 0x1d330]; cmove rax, rdx; ret; 
0x0000000000430f4b: adc eax, 0x1e5e0; cmovne rax, rdx; ret; 
0x00000000004310ab: adc eax, 0x1fc30; cmovne rax, rdx; ret; 
0x0000000000431b9b: adc eax, 0x21cc0; cmovne rax, rdx; ret; 
0x0000000000430eeb: adc eax, 0x25b0; cmovne rax, rdx; ret; 
0x00000000004318fc: adc eax, 0x25b3f; cmovne rax, rdx; ret; 
0x0000000000430e8b: adc eax, 0x26290; cmovne rax, rdx; ret; 
0x0000000000431ca9: adc eax, 0x27832; lea rax, [rip + 0x278eb]; cmove rax, rdx; ret; 
0x0000000000431b39: adc eax, 0x27992; lea rax, [rip + 0x27a4b]; cmove rax, rdx; ret; 
0x00000000004319d9: adc eax, 0x27b02; lea rax, [rip + 0x27bbb]; cmove rax, rdx; ret; 
0x0000000000431c3b: adc eax, 0x27c70; lea rax, [rip + 0x27cb9]; cmove rax, rdx; ret; 
0x0000000000431acb: adc eax, 0x27dd0; lea rax, [rip + 0x27e19]; cmove rax, rdx; ret; 
0x000000000043196b: adc eax, 0x27f40; lea rax, [rip + 0x27f89]; cmove rax, rdx; ret; 
0x0000000000431c8d: adc eax, 0x2805e; lea rax, [rip + 0x280a7]; cmove rax, rdx; ret; 
0x0000000000430f6d: adc eax, 0x2818e; lea rax, [rip + 0x280d7]; cmovne rax, rdx; ret; 
0x0000000000431b1d: adc eax, 0x281be; lea rax, [rip + 0x28207]; cmove rax, rdx; ret; 
0x00000000004319bd: adc eax, 0x2832e; lea rax, [rip + 0x28377]; cmove rax, rdx; ret; 
0x0000000000431a54: adc eax, 0x28867; lea rax, [rip + 0x287f0]; cmovne rax, rdx; ret; 
0x0000000000431a35: adc eax, 0x28996; lea rax, [rip + 0x289df]; cmove rax, rdx; ret; 
0x0000000000431a7d: adc eax, 0x28ace; lea rax, [rip + 0x28b27]; cmove rax, rdx; ret; 
0x0000000000483d4b: adc eax, 0x30; cmovne rax, rdx; ret; 
0x00000000004988d4: adc eax, 0x3a7; lea rax, [rip + 0x70]; cmove rax, rdx; ret; 
0x00000000004a390d: adc eax, 0x4184e; cmp byte ptr [rdx + rsi], 8; jne 0x1755; mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x0000000000443055: adc eax, 0x46f00ff2; add eax, 0xef00ff2; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000443050: adc eax, 0x477f0ff3; adc eax, 0x46f00ff2; add eax, 0xef00ff2; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000431be1: adc eax, 0x4802e680; lea eax, [rip + 0x14914]; lea rdx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x0000000000431048: adc eax, 0x4802e680; lea eax, [rip + 0x3afd]; lea rdx, [rip + 0x5356]; cmovne rax, rdx; ret; 
0x00000000004318ef: adc eax, 0x4802e680; lea eax, [rip + 0x7a86]; lea rdx, [rip + 0x25b3f]; cmovne rax, rdx; ret; 
0x000000000049833b: adc eax, 0x4b7c0; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000499020: adc eax, 0x4c113; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000431055: adc eax, 0x5356; cmovne rax, rdx; ret; 
0x000000000048b5d3: adc eax, 0x57ba8; xor eax, eax; add rsp, 8; ret; 
0x0000000000485132: adc eax, 0x5e058948; inc byte ptr [rip - 0x38c6b800]; ja 0x85168; xor eax, eax; ret; 
0x0000000000455ec8: adc eax, 0x621850f; add byte ptr [rax], al; ret; 
0x000000000044daa8: adc eax, 0x6d293; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044da8e: adc eax, 0x6d2ad; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044c428: adc eax, 0x6e913; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044c40e: adc eax, 0x6e92d; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044a85e: adc eax, 0x704dd; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000448718: adc eax, 0x72623; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x00000000004486fe: adc eax, 0x7263d; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000046fd69: adc eax, 0x73cca; cmp qword ptr fs:[rdi], rsi; je 0x6fd78; ret; 
0x000000000040a44a: adc eax, 0x74800000; and byte ptr [rcx + 0x16ff], al; xor byte ptr [rbp + 0x48], 0x48; mov eax, 0x4def40; ret; 
0x0000000000431ce4: adc eax, 0x7547; lea rax, [rip + 0x7330]; cmove rax, rdx; ret; 
0x000000000044ae21: adc eax, 0x83480000; ret 0xe910; 
0x0000000000410956: adc eax, 0xa2b45; movsxd rax, dword ptr [rcx + rax*4]; add rax, rdx; ret; 
0x0000000000481dd4: adc eax, 0xb47; lea rax, [rip + 0x810]; cmove rax, rdx; ret; 
0x000000000042a5b4: adc eax, 0xb8227; lea rax, [rip + 0xb8220]; add rsp, 0x10; pop rbp; ret; 
0x00000000004293b9: adc eax, 0xb93d2; ret; 
0x0000000000483624: adc eax, 0xc57; lea rax, [rip + 0x9b0]; cmove rax, rdx; ret; 
0x00000000004841ba: adc eax, 0xe180d188; pcmpeqb mm3, qword ptr [rsi]; ret; 
0x0000000000431c6a: adc eax, 0xeaf1; cmovne rax, rdx; ret; 
0x0000000000431afa: adc eax, 0xec41; cmovne rax, rdx; ret; 
0x000000000045a388: adc eax, 0xf880272; ret; 
0x00000000004318ad: adc eax, 0xfffffc9e; lea rax, [rip + 0x272f7]; cmove rax, rdx; ret; 
0x000000000045a383: adc eax, dword ptr [rax + 0x157701fa]; jb 0x5a38d; mov byte ptr [rdi], cl; ret; 
0x000000000044c71e: adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004a482c: adc eax, dword ptr [rbp + 0x31]; ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x00000000004296a8: adc eax, dword ptr [rbp + 1]; sbb byte ptr [r8 + 0x39], cl; ret; 
0x000000000049e67d: adc eax, eax; ret; 
0x0000000000499021: adc eax, ecx; add al, 0; add word ptr [rdx + rax*2], 1; ret; 
0x000000000049e7b6: adc eax, edx; pop rbp; pop rbx; ret; 
0x00000000004a343a: adc ecx, dword ptr [rax + 0x63]; ret 0xbc80; 
0x000000000041f22f: adc ecx, dword ptr [rax + 0xf]; mov esi, 0x83480143; ret; 
0x0000000000455e81: adc ecx, dword ptr [rax - 0x73]; jg 0x55e99; jne 0x564f0; ret; 
0x00000000004a2202: adc ecx, dword ptr [rax - 0x77]; ror byte ptr [rax - 0x7d], 1; ret; 
0x000000000041ed39: adc ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000048f13c: adc ecx, dword ptr [rbx + rcx*4 + 5]; sub al, 0x63; add eax, 0xc0894c00; ret; 
0x000000000046ceb4: adc ecx, dword ptr [rcx + 0x29d231fb]; ret; 
0x000000000048c452: adc ecx, dword ptr [rcx - 0x75]; add ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000490a8c: adc ecx, dword ptr [rdi]; mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000040ccd3: adc ecx, ecx; or dword ptr [rax], eax; ret; 
0x000000000040209c: adc edi, dword ptr [rax + 1]; mov dword ptr [rip + 0xe2228], eax; add rsp, 8; ret; 
0x00000000004a4504: adc edi, dword ptr [rax + 4]; cmp dil, 3; jne 0xa4530; add rsp, 8; ret; 
0x00000000004a17d4: adc edi, dword ptr [rax]; jne 0xa1800; mov rax, qword ptr [rsi + 0xa8]; add rsp, 8; ret; 
0x000000000049d7ba: adc edx, eax; mov qword ptr [rdi + r11*8 + 8], r9; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x00000000004a1005: adc edx, ebx; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x000000000042747f: adc esp, dword ptr [rsi + 0xf]; insb byte ptr [rdi], dx; ret 0x110f; 
0x00000000004461cc: adc qword ptr [rcx + 5], rbp; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x00000000004461d3: adc qword ptr [rcx + 6], rsi; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x00000000004461da: adc qword ptr [rcx + 7], rdi; ret; 
0x0000000000445e75: adc qword ptr [rcx - 1], rbx; ret; 
0x0000000000445e39: adc qword ptr [rcx - 1], rdi; ret; 
0x0000000000445e6e: adc qword ptr [rcx - 2], rdx; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000044606c: adc qword ptr [rcx - 2], rsi; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000445e32: adc qword ptr [rcx - 2], rsi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000446065: adc qword ptr [rcx - 3], rbp; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000445e2b: adc qword ptr [rcx - 3], rbp; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000044605e: adc qword ptr [rcx - 4], rsp; vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000445e24: adc qword ptr [rcx - 4], rsp; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000445e67: adc qword ptr [rdi + 1], rcx; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x00000000004592d4: adc qword ptr [rdi + 1], rdx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x0000000000446327: adc qword ptr [rdi - 5], rsp; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000044632e: adc qword ptr [rdi - 6], rbp; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x0000000000446335: adc qword ptr [rdi - 7], rsi; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000044633c: adc qword ptr [rdi - 8], rdi; ret; 
0x0000000000445e61: adc qword ptr [rdi], rax; vmovups zmmword ptr [rdi + 0x40], zmm1; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x00000000004592ce: adc qword ptr [rdi], rdx; vmovups zmmword ptr [rdi + 0x40], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592ef: adc qword ptr [rdi], rdx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x0000000000459414: adc qword ptr [rsi + 1], rdx; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000045941b: adc qword ptr [rsi + 2], rdx; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x0000000000459422: adc qword ptr [rsi + 3], rdx; ret; 
0x00000000004594b1: adc qword ptr [rsi + 5], rdx; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x00000000004594b8: adc qword ptr [rsi + 6], rdx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x00000000004594bf: adc qword ptr [rsi + 7], rdx; ret; 
0x00000000004592c1: adc qword ptr [rsi - 1], rdx; ret; 
0x00000000004592ba: adc qword ptr [rsi - 2], rdx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592b3: adc qword ptr [rsi - 3], rdx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592ac: adc qword ptr [rsi - 4], rdx; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000045940e: adc qword ptr [rsi], rdx; vmovups zmmword ptr [rsi + 0x40], zmm2; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x00000000004a1004: adc r10, r11; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x000000000045a309: adc r11b, r14b; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000049e7b5: adc rax, rdx; pop rbp; pop rbx; ret; 
0x000000000049d7b9: adc rdx, r8; mov qword ptr [rdi + r11*8 + 8], r9; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000045a7da: add ah, bh; add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000045a7bf: add ah, bh; add eax, dword ptr [rax]; ret; 
0x000000000045a8b9: add ah, bh; inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000000045a80a: add ah, bh; inc dword ptr [rbx]; ret; 
0x000000000045a084: add ah, byte ptr [rdx - 0xf]; dec byte ptr [rax + 0x7f]; jg 0x5a08f; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000045a20e: add ah, byte ptr [rdx - 0xf]; dec byte ptr [rax + 0x7f]; jg 0x5a219; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000045941e: add ah, byte ptr [rdx - 0xf]; jl 0x5946b; adc dword ptr [rsi + 3], edx; ret; 
0x000000000048862a: add ah, byte ptr [rsi + 0xf]; jo 0x885f0; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x00000000004223a5: add ah, byte ptr [rsi + 0xf]; outsd dx, dword ptr [rsi]; ret 0x34e9; 
0x0000000000454f63: add ah, byte ptr [rsi - 0x75]; add al, 0x66; mov dword ptr [rdx + 4], eax; lea rax, [rdx + 5]; ret; 
0x0000000000450c23: add ah, byte ptr [rsi - 0x75]; add al, 0x66; mov dword ptr [rdx + 4], eax; mov rax, rdi; ret; 
0x0000000000401cad: add ah, dh; nop; endbr64; ret; 
0x000000000040c143: add ah, dl; or dword ptr [rax], eax; ret; 
0x0000000000498658: add al, 0; adc byte ptr [rax - 0x73], cl; adc eax, 0x11e; lea rax, [rip + 0x67]; cmovne rax, rdx; ret; 
0x000000000049b9f4: add al, 0; add al, byte ptr [rax]; add byte ptr [rax], al; test byte ptr [rip + 0x49f1f], 0x40; jne 0x9ba08; ret; 
0x0000000000468047: add al, 0; add bh, dh; ret 0xf800; 
0x000000000049bfc1: add al, 0; add bl, ch; ret; 
0x000000000048dbf4: add al, 0; add byte ptr [rax + 0x63], cl; ret; 
0x000000000045ba0f: add al, 0; add byte ptr [rax - 0x39], cl; ret; 
0x00000000004a11c9: add al, 0; add byte ptr [rax - 0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x0000000000413a85: add al, 0; add byte ptr [rax - 0x77], cl; ret 0x448b; 
0x0000000000438677: add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044d5df: add al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004386a5: add al, 0; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004a4506: add al, 0; add byte ptr [rax], al; cmp dil, 3; jne 0xa4530; add rsp, 8; ret; 
0x0000000000484243: add al, 0; add byte ptr [rax], al; ret; 
0x000000000045bec4: add al, 0; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x5bed8; ret; 
0x000000000046803f: add al, 0; add byte ptr [rbp + 0xe880fd2], al; add al, 0; add bh, dh; ret 0xf800; 
0x000000000047f38a: add al, 0; add byte ptr [rbx - 0x7cb7fb8e], cl; ret 0xb804; 
0x000000000042170b: add al, 0; add byte ptr [rcx - 0x75], cl; xchg eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000048bd54: add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000049ecab: add al, 0; add byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ret 0x290f; 
0x000000000042938a: add al, 0; add byte ptr [rsi + 1], dh; ret; 
0x0000000000493f77: add al, 0; add dh, dh; ret; 
0x0000000000495917: add al, 0; add dword ptr [rbx + 0x44], ebx; mov eax, eax; pop rbp; pop r12; ret; 
0x0000000000497d76: add al, 0; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x0000000000497ea5: add al, 0; add rsp, 8; ret; 
0x0000000000499023: add al, 0; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000429309: add al, 0; cmovbe rdx, rax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x00000000004a3910: add al, 0; cmp byte ptr [rdx + rsi], 8; jne 0x1755; mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x00000000004115e7: add al, 0; cmp eax, -1; je 0x116d8; add rsp, 0x98; ret; 
0x00000000004988cd: add al, 0; cmp rax, rdx; lea rdx, [rip + 0x3a7]; lea rax, [rip + 0x70]; cmove rax, rdx; ret; 
0x000000000049901a: add al, 0; jae 0x9902a; mov rdx, qword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000049b9fe: add al, 0; jne 0x9ba08; ret; 
0x000000000049833e: add al, 0; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000497eb5: add al, 0; mov qword ptr [rip + 0x4d16a], rax; ret; 
0x0000000000497e9e: add al, 0; mov qword ptr [rip + 0x4d181], rax; add rsp, 8; ret; 
0x0000000000497ebc: add al, 0; ret; 
0x000000000048525a: add al, 0x11; ret; 
0x000000000045a854: add al, 0x12; pop rbx; and eax, 0x7ff80000; ret; 
0x000000000045add8: add al, 0x16; mov r9, rax; mov eax, dword ptr [rcx + rax*4]; sub eax, dword ptr [rcx + r8*4]; je 0x5adc8; ret; 
0x000000000044da8a: add al, 0x17; lea rdx, [rip + 0x6d2ad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044c40a: add al, 0x17; lea rdx, [rip + 0x6e92d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044a85a: add al, 0x17; lea rdx, [rip + 0x704dd]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x00000000004486fa: add al, 0x17; lea rdx, [rip + 0x7263d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000433235: add al, 0x17; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x000000000043474c: add al, 0x17; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x00000000004331ca: add al, 0x17; sub eax, ecx; ret; 
0x00000000004570ae: add al, 0x17; vzeroupper; ret; 
0x00000000004a14b7: add al, 0x24; add rsp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x00000000004a11ce: add al, 0x24; add rsp, 0x38; ret; 
0x0000000000404e48: add al, 0x24; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x00000000004a11c5: add al, 0x24; call 0xa15f0; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x0000000000411ade: add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000046febf: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6fecc; add rsp, 0x18; ret; 
0x000000000049e58c: add al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x9e615; leave; ret; 
0x0000000000496087: add al, 0x30; add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret; 
0x0000000000410908: add al, 0x30; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000482dee: add al, 0x31; ret; 
0x00000000004109e1: add al, 0x32; mov dword ptr [rip + 0xd38ff], eax; lea rax, [rip + 0xd38f0]; ret; 
0x0000000000482cea: add al, 0x37; ret; 
0x0000000000438d29: add al, 0x38; movzx edx, byte ptr [rdx + rdi]; sub eax, edx; vzeroupper; ret; 
0x0000000000483d76: add al, 0x39; bnd je 0x83d7f; test edx, edx; jne 0x83d70; ret; 
0x000000000042ae3a: add al, 0x39; ret; 
0x0000000000427a5f: add al, 0x3a; ret; 
0x0000000000410950: add al, 0x48; add eax, edx; lea rdx, [rip + 0xa2b45]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rdx; ret; 
0x0000000000456a6b: add al, 0x48; lea eax, [rdi + 5]; ret; 
0x0000000000454f59: add al, 0x48; lea eax, [rdx + 4]; ret; 
0x0000000000454f6b: add al, 0x48; lea eax, [rdx + 5]; ret; 
0x0000000000452a3a: add al, 0x48; lea ecx, [rdx + 4]; jne 0x52d30; ret; 
0x000000000044ef07: add al, 0x48; lea edi, [rdi + 4]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c97: add al, 0x48; lea edi, [rdi + 4]; jne 0x564f0; ret; 
0x00000000004293b2: add al, 0x48; lea edx, [rax + 1]; mov qword ptr [rip + 0xb93d2], rdx; ret; 
0x0000000000442d6a: add al, 0x48; mov dword ptr [rdi], ecx; ret; 
0x000000000048f688: add al, 0x48; mov eax, dword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000450c19: add al, 0x48; mov eax, edi; ret; 
0x0000000000452a59: add al, 0x48; mov eax, edi; sub r8, 5; lea rcx, [rdx + 5]; jne 0x52d30; ret; 
0x0000000000452a7b: add al, 0x48; mov eax, edi; sub r8, 6; lea rcx, [rdx + 6]; jne 0x52d30; ret; 
0x0000000000442d63: add al, 0x48; mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000045fab8: add al, 0x48; mov edx, dword ptr [rcx + rdx]; lea rcx, [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x00000000004830c8: add al, 0x48; xor eax, eax; ret; 
0x0000000000455cdb: add al, 0x49; sub eax, 6; lea rdi, [rdi + 6]; jne 0x564f0; ret; 
0x000000000049893c: add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x000000000048f6d2: add al, 0x4c; cmp eax, dword ptr [rcx + rsi + 0x10]; jae 0x8f685; xor eax, eax; ret; 
0x0000000000402eab: add al, 0x5d; ret; 
0x0000000000454f67: add al, 0x66; mov dword ptr [rdx + 4], eax; lea rax, [rdx + 5]; ret; 
0x0000000000450c27: add al, 0x66; mov dword ptr [rdx + 4], eax; mov rax, rdi; ret; 
0x000000000046ceb2: add al, 0x72; adc ecx, dword ptr [rcx + 0x29d231fb]; ret; 
0x0000000000445eeb: add al, 0x72; or al, 0x8b; mov ecx, dword ptr ss:[rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000045a381: add al, 0x73; adc eax, dword ptr [rax + 0x157701fa]; jb 0x5a38d; mov byte ptr [rdi], cl; ret; 
0x000000000041095d: add al, 0x81; add rax, rdx; ret; 
0x000000000045ade2: add al, 0x81; je 0x5adc8; ret; 
0x000000000044ab0b: add al, 0x81; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000045adde: add al, 0x81; sub eax, dword ptr [rcx + r8*4]; je 0x5adc8; ret; 
0x000000000044c3e3: add al, 0x81; sub eax, edx; ret; 
0x0000000000448707: add al, 0x82; sub eax, ecx; ret; 
0x0000000000496fd6: add al, 0x83; ret 0x4802; 
0x00000000004961d4: add al, 0x83; ret; 
0x0000000000483d7a: add al, 0x85; sal byte ptr [rbp - 0xf], cl; ret; 
0x0000000000454f56: add al, 0x88; add al, 0x48; lea eax, [rdx + 4]; ret; 
0x0000000000450c16: add al, 0x88; add al, 0x48; mov eax, edi; ret; 
0x00000000004098d9: add al, 0x89; add al, 0xe9; ret 0xfffe; 
0x0000000000455cb4: add al, 0x89; cmovns eax, dword ptr [rbx - 0x72b7fa18]; jg 0x55cc4; jne 0x564f0; ret; 
0x0000000000473c01: add al, 0x89; ret 0xf41; 
0x000000000048b104: add al, 0x90; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000048b0d2: add al, 0x90; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x0000000000429764: add al, 0x90; or eax, dword ptr [rax]; ret; 
0x0000000000426db2: add al, 0xa8; add dword ptr [rcx + rbp - 0x77], esi; ret 0xff3; 
0x0000000000499013: add al, 0xa; cmp rax, qword ptr [rip + 0x4c114]; jae 0x9902a; mov rdx, qword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000496084: add al, 0xc7; add al, 0x30; add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret; 
0x000000000049279e: add al, 0xd1; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000040c133: add al, 0xd4; or dword ptr [rax], eax; ret; 
0x000000000040b5fb: add al, 0xe0; or dword ptr [rax], eax; ret; 
0x00000000004098dc: add al, 0xe9; ret 0xfffe; 
0x00000000004430d3: add al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x000000000040a86f: add al, 0xf5; adc al, 0; add byte ptr [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000040a8c9: add al, 0xf5; adc al, 0; add byte ptr [rax], al; ret; 
0x000000000040a8b5: add al, 0xf5; adc byte ptr [rax], al; add byte ptr [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000040a881: add al, 0xf5; adc byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000049822c: add al, 0xf; mov dh, 0xc0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000437c86: add al, 0xf; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x0000000000439896: add al, 0xf; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000455c9b: add al, 0xf; test dword ptr [rsi + 8], ecx; add byte ptr [rax], al; ret; 
0x0000000000484c96: add al, 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048f68b: add al, 2; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000043ae67: add al, 3; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000455de8: add al, 7; add byte ptr [rax], al; ret; 
0x000000000044db11: add al, 7; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000044df7e: add al, 7; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044dd3c: add al, 7; ret; 
0x000000000043339f: add al, 8; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x00000000004348c9: add al, 8; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000040a3a4: add al, ah; jne 0xa4a0; mov rax, 0x4dee00; ret; 
0x000000000040a3f8: add al, al; je 0xa490; cmp edi, 0xc00000b7; jne 0xa4a0; mov rax, 0x4e11e0; ret; 
0x000000000040a42a: add al, al; jne 0xa4a0; mov rax, 0x4ded80; ret; 
0x000000000040a404: add al, al; jne 0xa4a0; mov rax, 0x4e11e0; ret; 
0x000000000044f421: add al, byte ptr [rax + rax*8 - 0xb7ed8c]; ret 0x2288; 
0x00000000004685cf: add al, byte ptr [rax]; add bh, dh; ret 0xf800; 
0x0000000000487048: add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret; 
0x0000000000482672: add al, byte ptr [rax]; add byte ptr [rax + 1], cl; clc; add rax, rcx; ret; 
0x0000000000438c6a: add al, byte ptr [rax]; add byte ptr [rax + 5], cl; add byte ptr [rax], 0; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x0000000000410fb5: add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000483d46: add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; adc eax, 0x30; cmovne rax, rdx; ret; 
0x0000000000410e26: add al, byte ptr [rax]; add byte ptr [rax - 0x75], cl; push rax; and byte ptr [rax + 1], cl; ret 0xb70f; 
0x0000000000459d98: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; sal ebx, 1; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000438857: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c1a1: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000438885: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000046fd56: add al, byte ptr [rax]; add byte ptr [rax - 0x7f], cl; ret 0x200; 
0x000000000049e80c: add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x000000000049e97f: add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x0000000000484223: add al, byte ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000049b9f6: add al, byte ptr [rax]; add byte ptr [rax], al; test byte ptr [rip + 0x49f1f], 0x40; jne 0x9ba08; ret; 
0x000000000042e895: add al, byte ptr [rax]; add byte ptr [rbp + 0x4c], bl; mov eax, eax; pop r12; pop r13; ret; 
0x00000000004685c7: add al, byte ptr [rax]; add byte ptr [rbp - 0x1a77f02e], al; add al, byte ptr [rax]; add bh, dh; ret 0xf800; 
0x000000000042c926: add al, byte ptr [rax]; add byte ptr [rbp - 0x7cfdb9], cl; add dh, byte ptr [rsp - 0x77]; ret 0xb48b; 
0x000000000042dfd1: add al, byte ptr [rax]; add byte ptr [rbx + 0x4c], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000004053f8: add al, byte ptr [rax]; add byte ptr [rbx - 0x76bef7bd], cl; ret 0xc085; 
0x00000000004587c4: add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x000000000042c96b: add al, byte ptr [rax]; add byte ptr [rcx - 0x73], cl; push rbp; and byte ptr [rax + 0x39], cl; ret 0x860f; 
0x000000000047ec46: add al, byte ptr [rax]; add byte ptr [rcx - 0x76b3d395], cl; ret 0x8348; 
0x00000000004318b7: add al, byte ptr [rax]; cmove rax, rdx; ret; 
0x0000000000430e8e: add al, byte ptr [rax]; cmovne rax, rdx; ret; 
0x00000000004a1662: add al, byte ptr [rax]; divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x0000000000457078: add al, byte ptr [rax]; lea rax, [rdi + 2]; vzeroupper; ret; 
0x0000000000431cac: add al, byte ptr [rax]; lea rax, [rip + 0x278eb]; cmove rax, rdx; ret; 
0x0000000000431b3c: add al, byte ptr [rax]; lea rax, [rip + 0x27a4b]; cmove rax, rdx; ret; 
0x00000000004319dc: add al, byte ptr [rax]; lea rax, [rip + 0x27bbb]; cmove rax, rdx; ret; 
0x0000000000431c3e: add al, byte ptr [rax]; lea rax, [rip + 0x27cb9]; cmove rax, rdx; ret; 
0x0000000000431ace: add al, byte ptr [rax]; lea rax, [rip + 0x27e19]; cmove rax, rdx; ret; 
0x000000000043196e: add al, byte ptr [rax]; lea rax, [rip + 0x27f89]; cmove rax, rdx; ret; 
0x0000000000431c90: add al, byte ptr [rax]; lea rax, [rip + 0x280a7]; cmove rax, rdx; ret; 
0x0000000000430f70: add al, byte ptr [rax]; lea rax, [rip + 0x280d7]; cmovne rax, rdx; ret; 
0x0000000000431b20: add al, byte ptr [rax]; lea rax, [rip + 0x28207]; cmove rax, rdx; ret; 
0x00000000004319c0: add al, byte ptr [rax]; lea rax, [rip + 0x28377]; cmove rax, rdx; ret; 
0x0000000000431a57: add al, byte ptr [rax]; lea rax, [rip + 0x287f0]; cmovne rax, rdx; ret; 
0x0000000000431a38: add al, byte ptr [rax]; lea rax, [rip + 0x289df]; cmove rax, rdx; ret; 
0x0000000000431a80: add al, byte ptr [rax]; lea rax, [rip + 0x28b27]; cmove rax, rdx; ret; 
0x000000000045c35d: add al, byte ptr [rax]; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000040aa56: add al, byte ptr [rax]; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x0000000000430e3b: add al, byte ptr [rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x000000000046da34: add al, byte ptr [rax]; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x00000000004017d2: add al, byte ptr [rax]; mov qword ptr [rip + 0xe3879], 0; pop rdx; ret; 
0x000000000045c0ff: add al, byte ptr [rax]; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000404c44: add al, byte ptr [rax]; mov rax, rbx; pop rbx; ret; 
0x0000000000403991: add al, byte ptr [rax]; nop dword ptr [rax + rax]; xor eax, eax; ret; 
0x0000000000407e20: add al, byte ptr [rax]; nop word ptr [rax + rax]; ret; 
0x0000000000402dbe: add al, byte ptr [rax]; pop rbp; ret; 
0x0000000000404c7e: add al, byte ptr [rax]; ret; 
0x000000000044e968: add al, byte ptr [rax]; vzeroupper; ret; 
0x000000000049c276: add al, byte ptr [rbp - 0x7c]; ror byte ptr [rdi], 0x45; ret 0x8964; 
0x00000000004818a2: add al, byte ptr [rcx + 0x39]; ret; 
0x000000000044ab07: add al, byte ptr [rdi]; add byte ptr [rbx + 0x148b8104], cl; xchg eax, ecx; sub eax, edx; ret; 
0x00000000004841b6: add al, byte ptr [rdx + rdx*8 - 0x2e77ea8c]; and cl, 0xf; je 0x841e0; ret; 
0x000000000049e903: add al, byte ptr [rdx]; sar bh, 0xff; ret; 
0x0000000000455eea: add al, byte ptr [rsi]; add byte ptr [rax], al; ret; 
0x000000000042c925: add al, byte ptr ds:[rax]; add byte ptr [rbp - 0x7cfdb9], cl; add dh, byte ptr [rsp - 0x77]; ret 0xb48b; 
0x000000000044ab06: add al, byte ptr ss:[rdi]; add byte ptr [rbx + 0x148b8104], cl; xchg eax, ecx; sub eax, edx; ret; 
0x0000000000425680: add al, ch; cmp bh, byte ptr [rdx - 0x76b70003]; ret; 
0x000000000049194c: add al, ch; dec byte ptr [rbx - 0x76b70001]; adc byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x000000000046bd71: add al, ch; fstp dword ptr [rsi - 6]; dec dword ptr [rcx - 0x77]; dec dword ptr [rbp - 0x77]; ret 0x87e9; 
0x000000000042d4be: add al, ch; in al, dx; ret 0xffff; 
0x0000000000491840: add al, ch; mov al, byte ptr [rcx - 0x76b80000]; sbb byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x00000000004a5c08: add al, ch; movabs dword ptr [0x415d5be0894cffb5], eax; pop rsp; ret; 
0x0000000000412825: add al, ch; movsd dword ptr [rdi], dword ptr [rsi]; ret 1; 
0x00000000004982a4: add al, ch; push rsi; jge 0x9825f; dec dword ptr [rax - 0x77]; ret; 
0x000000000049ba38: add al, ch; ret 0xb645; 
0x0000000000474f88: add al, ch; ret 0xf9cc; 
0x0000000000465388: add al, ch; ret 0xfac8; 
0x000000000042efe8: add al, ch; ret 0xffa7; 
0x0000000000428ac8: add al, ch; ret 0xffe2; 
0x0000000000423a47: add al, ch; ret; 
0x000000000045ba0c: add al, ch; sahf; add al, 0; add byte ptr [rax - 0x39], cl; ret; 
0x00000000004982bf: add al, ch; sbb edi, dword ptr [rbx - 7]; dec dword ptr [rax - 0x77]; ret; 
0x000000000048f759: add al, ch; sub ebp, 0x8948fff9; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x0000000000430b63: add al, ch; xlatb; ret; 
0x000000000049e901: add bh, al; add al, byte ptr [rdx]; sar bh, 0xff; ret; 
0x000000000041ed37: add bh, bh; adc ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000048bf04: add bh, bh; ror byte ptr [rax - 0x7d], 1; ret; 
0x000000000049e849: add bh, byte ptr [rax + 1]; ret; 
0x000000000049e9d8: add bh, byte ptr [rax + 2]; ret; 
0x000000000045bee3: add bh, byte ptr [rax - 1]; ret; 
0x00000000004319da: add bh, byte ptr [rbx + 2]; add byte ptr [rax - 0x73], cl; add eax, 0x27bbb; cmove rax, rdx; ret; 
0x0000000000404e07: add bh, byte ptr [rcx]; ret 0x1477; 
0x000000000048f68c: add bh, byte ptr [rdx]; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000431030: add bh, dh; ret 0; 
0x0000000000468049: add bh, dh; ret 0xf800; 
0x000000000041f42f: add bh, dh; ret 0xffef; 
0x00000000004890c7: add bh, dh; ret; 
0x0000000000410fbd: add bl, bpl; or bh, bh; push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x00000000004854f0: add bl, byte ptr [rbx + 0x4c]; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x00000000004854ef: add bl, byte ptr gs:[rbx + 0x4c]; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x00000000004a4544: add bl, ch; leave; nop word ptr [rax + rax]; xor eax, eax; ret; 
0x0000000000410fbe: add bl, ch; or bh, bh; push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x000000000047f6b3: add bl, ch; ret 0x43c7; 
0x00000000004865e0: add bl, ch; ret; 
0x000000000043931d: add bl, ch; sal bl, 1; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000043932f: add bl, dh; bsf eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000044e2bf: add bl, dh; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000004a1663: add bl, dh; divps xmm0, xmmword ptr [rip + 0x2ec10]; ret; 
0x00000000004561bf: add bl, dh; movq mm0, qword ptr [rsi]; mov cl, byte ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], cl; ret; 
0x00000000004554df: add bl, dh; movq mm0, qword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004554ff: add bl, dh; movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x000000000045557f: add bl, dh; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000045553f: add bl, dh; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x000000000045555f: add bl, dh; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x000000000045561f: add bl, dh; movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000456b7f: add bl, dh; movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x00000000004554cf: add bl, dh; movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000045a27b: add bl, dh; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045649f: add bl, dh; movq qword ptr [rdi - 1], mm0; ret; 
0x00000000004564af: add bl, dh; movq qword ptr [rdi], mm0; ret; 
0x00000000004554de: add bl, sil; movq mm0, qword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004554fe: add bl, sil; movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x000000000045557e: add bl, sil; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000045555e: add bl, sil; movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x000000000044f10e: add bpl, al; cli; jg 0x4f11b; vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm0; vzeroupper; ret; 
0x000000000045f223: add byte ptr [r11 + rcx*4 + 0x7d], r9b; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000004275d7: add byte ptr [r8 + 1], r15b; movups xmmword ptr [rbp + 0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000000428415: add byte ptr [r8 - 0x77], r9b; imul esp, dword ptr [rax + 0x5b], 0x5d; pop r12; ret; 
0x00000000004200bb: add byte ptr [r8 - 0x77], r9b; pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x0000000000482577: add byte ptr [r8 - 0x77], r9b; ret 0x14eb; 
0x000000000048256e: add byte ptr [r8 - 0x7b], r9b; sal byte ptr [rcx + 0x48], 3; add byte ptr [r8 - 0x77], r9b; ret 0x14eb; 
0x0000000000481d7f: add byte ptr [r9 + rcx*4 - 0x20], r9b; pop rbp; pop r12; pop r13; ret; 
0x000000000040a366: add byte ptr [rax + 0x132850f], al; add byte ptr [rax], al; mov rax, 0x4dedc0; ret; 
0x000000000045736e: add byte ptr [rax + 0x1478d48], dl; ret; 
0x000000000048b725: add byte ptr [rax + 0x21], cl; test dword ptr [rax + 0x21], 0xc73948f0; jne 0x8b738; pop rbx; ret; 
0x000000000046760e: add byte ptr [rax + 0x29], cl; ret 0x8348; 
0x000000000048a453: add byte ptr [rax + 0x29], cl; ret 0x8d48; 
0x0000000000405c22: add byte ptr [rax + 0x29], cl; ret 0xc148; 
0x00000000004788be: add byte ptr [rax + 0x29], cl; ret; 
0x000000000042d7ab: add byte ptr [rax + 0x29], cl; ror byte ptr [rax + 0x39], 1; ret; 
0x00000000004a435c: add byte ptr [rax + 0x39], cl; or byte ptr [rdi + 2], r14b; sbb eax, eax; ret; 
0x0000000000423ba7: add byte ptr [rax + 0x39], cl; ret 0x850f; 
0x000000000042a2ff: add byte ptr [rax + 0x39], cl; ret 0xeb75; 
0x0000000000409f2d: add byte ptr [rax + 0x39], cl; ret 0xed75; 
0x000000000048df06: add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000041ed1f: add byte ptr [rax + 0x39], cl; ret; 
0x000000000045a697: add byte ptr [rax + 0x39], cl; retf 0xd975; vzeroupper; ret; 
0x000000000045a4d4: add byte ptr [rax + 0x39], cl; retf 0xe175; vzeroupper; ret; 
0x0000000000481d0e: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x11d7; lea rax, [rip + 0xed0]; cmove rax, rdx; ret; 
0x0000000000481cce: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x1607; lea rax, [rip + 0x13e0]; cmove rax, rdx; ret; 
0x0000000000431d1e: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x1c407; lea rax, [rip + 0x1bfc0]; cmove rax, rdx; ret; 
0x0000000000430fde: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x1d4d7; lea rax, [rip + 0x1d330]; cmove rax, rdx; ret; 
0x00000000004988ce: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x3a7; lea rax, [rip + 0x70]; cmove rax, rdx; ret; 
0x0000000000431cde: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0x7547; lea rax, [rip + 0x7330]; cmove rax, rdx; ret; 
0x0000000000481dce: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0xb47; lea rax, [rip + 0x810]; cmove rax, rdx; ret; 
0x000000000048361e: add byte ptr [rax + 0x39], cl; ror byte ptr [rax - 0x73], 1; adc eax, 0xc57; lea rax, [rip + 0x9b0]; cmove rax, rdx; ret; 
0x000000000041ed1e: add byte ptr [rax + 0x39], r9b; ret; 
0x000000000045a837: add byte ptr [rax + 0x485bf0e5], al; cmovne eax, edx; ret; 
0x0000000000430e80: add byte ptr [rax + 0x48], al; lea eax, [rip + 0x1cc37]; lea rdx, [rip + 0x26290]; cmovne rax, rdx; ret; 
0x000000000041095a: add byte ptr [rax + 0x63], cl; add al, 0x81; add rax, rdx; ret; 
0x000000000046e520: add byte ptr [rax + 0x63], cl; ret 0x8948; 
0x000000000048dbf6: add byte ptr [rax + 0x63], cl; ret; 
0x000000000044f41f: add byte ptr [rax + 0x74c08402], cl; adc cl, byte ptr [rax - 1]; ret 0x2288; 
0x000000000044f0bf: add byte ptr [rax + 0x77f8c517], cl; ret; 
0x0000000000456a0f: add byte ptr [rax + 0x78d4837], cl; ret; 
0x000000000042d245: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xb558e]; syscall; pop rbp; ret; 
0x000000000042e3b1: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xb6962]; syscall; pop rbx; ret; 
0x0000000000426187: add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xbeb1c]; syscall; ret; 
0x0000000000497e63: add byte ptr [rax + 0xca], bh; syscall; ret; 
0x00000000004053f0: add byte ptr [rax + 0xf00297b], al; test esp, ecx; add al, byte ptr [rax]; add byte ptr [rbx - 0x76bef7bd], cl; ret 0xc085; 
0x00000000004034ff: add byte ptr [rax + 0xf], al; mov dh, 0xf6; mov dword ptr [rip + 0xdec16], esi; ret; 
0x00000000004034ef: add byte ptr [rax + 0xf], al; mov dh, 0xf6; mov dword ptr [rip + 0xdec22], esi; ret; 
0x00000000004034df: add byte ptr [rax + 0xf], al; mov dh, 0xf6; mov dword ptr [rip + 0xdec26], esi; ret; 
0x00000000004034cf: add byte ptr [rax + 0xf], al; mov dh, 0xf6; mov dword ptr [rip + 0xdec32], esi; ret; 
0x00000000004034bf: add byte ptr [rax + 0xf], al; mov dh, 0xf6; mov dword ptr [rip + 0xdec5e], esi; ret; 
0x000000000040339f: add byte ptr [rax + 0xf], al; mov dh, 0xf6; mov dword ptr [rip + 0xded6a], esi; ret; 
0x000000000040338f: add byte ptr [rax + 0xf], al; mov dh, 0xf6; mov dword ptr [rip + 0xded7e], esi; ret; 
0x000000000040337f: add byte ptr [rax + 0xf], al; mov dh, 0xf6; mov dword ptr [rip + 0xded9a], esi; ret; 
0x0000000000482c49: add byte ptr [rax + 0xf], cl; mov ebp, 0xf80148c0; ret; 
0x000000000049e98f: add byte ptr [rax + 0xf], cl; mov edx, 0x894830e8; or byte ptr [r8 + 2], r15b; ret; 
0x0000000000464b27: add byte ptr [rax + 0xf], cl; mov esi, 0x83480142; ret 0xf01; 
0x000000000042930a: add byte ptr [rax + 0xf], cl; sal byte ptr [rcx], 1; ror byte ptr [rax + 0x39], 0xfa; setae al; ret; 
0x000000000049e8fc: add byte ptr [rax + 1], bh; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000004275d8: add byte ptr [rax + 1], bh; movups xmmword ptr [rbp + 0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000000403087: add byte ptr [rax + 1], bh; pop rbx; mov dword ptr [rip + 0xdf070], 1; ret; 
0x000000000049e810: add byte ptr [rax + 1], bh; ret; 
0x0000000000482674: add byte ptr [rax + 1], cl; clc; add rax, rcx; ret; 
0x0000000000483361: add byte ptr [rax + 1], cl; clc; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x00000000004829a1: add byte ptr [rax + 1], cl; clc; add rax, rcx; vzeroupper; ret; 
0x00000000004a063f: add byte ptr [rax + 1], cl; ret 0xb70f; 
0x0000000000429b30: add byte ptr [rax + 1], cl; ret; 
0x000000000049e983: add byte ptr [rax + 2], bh; ret; 
0x0000000000438c6c: add byte ptr [rax + 5], cl; add byte ptr [rax], 0; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x00000000004912ec: add byte ptr [rax + 9], cl; ret 0x4475; 
0x00000000004a17e7: add byte ptr [rax + rax*2], bh; jne 0xa1820; mov rax, qword ptr [rsi + 0xb8]; add rsp, 8; ret; 
0x00000000004151f7: add byte ptr [rax + rax*8 - 0x49f0e78c], al; ror byte ptr [rax - 0x77], 1; fisttp word ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000045606c: add byte ptr [rax + rax], 0; ret; 
0x0000000000429308: add byte ptr [rax + rax], al; cmovbe rdx, rax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x000000000042da2c: add byte ptr [rax + rax], cl; add byte ptr [rax], al; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000000485171: add byte ptr [rax + rax], cl; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x000000000042c57c: add byte ptr [rax + rax], cl; add byte ptr [rax], al; mov rax, r8; ret; 
0x00000000004a4587: add byte ptr [rax + rdx*2], bh; jne 0xa45b3; xor eax, eax; add rsp, 8; ret; 
0x00000000004a45e7: add byte ptr [rax + rdx*2], bh; jne 0xa4613; xor eax, eax; add rsp, 8; ret; 
0x00000000004a5f97: add byte ptr [rax + rdx*2], bh; jne 0xa5fbb; xor eax, eax; add rsp, 8; ret; 
0x000000000048b40a: add byte ptr [rax - 0x168b7f80], 0x89; ret 0xeac1; 
0x00000000004029ef: add byte ptr [rax - 0x16], bh; pop rbx; pop rbp; pop r12; ret; 
0x0000000000402c57: add byte ptr [rax - 0x16], bh; ret; 
0x0000000000455c2f: add byte ptr [rax - 0x177cb6c9], cl; add dword ptr [rax - 0x73], ecx; jg 0x55c3b; jne 0x564f0; ret; 
0x0000000000431bde: add byte ptr [rax - 0x197fea8c], al; add cl, byte ptr [rax - 0x73]; add eax, 0x14914; lea rdx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x0000000000431045: add byte ptr [rax - 0x197fea8c], al; add cl, byte ptr [rax - 0x73]; add eax, 0x3afd; lea rdx, [rip + 0x5356]; cmovne rax, rdx; ret; 
0x000000000040a9e7: add byte ptr [rax - 0x21], bh; ret; 
0x00000000004017d3: add byte ptr [rax - 0x39], cl; add eax, 0xe3879; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x000000000041ffb8: add byte ptr [rax - 0x39], cl; ret 0x3bc0; 
0x000000000041e1bf: add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x0000000000410fb7: add byte ptr [rax - 0x39], cl; ret; 
0x000000000048422f: add byte ptr [rax - 0x39], cl; rol byte ptr [rbx], 0; add byte ptr [rax], al; ret; 
0x000000000048426f: add byte ptr [rax - 0x39], cl; rol byte ptr [rdi], 0; add byte ptr [rax], al; ret; 
0x000000000048421f: add byte ptr [rax - 0x39], cl; rol byte ptr [rdx], 0; add byte ptr [rax], al; ret; 
0x000000000048425f: add byte ptr [rax - 0x39], cl; rol byte ptr [rsi], 0; add byte ptr [rax], al; ret; 
0x000000000041ed18: add byte ptr [rax - 0x39], cl; sal byte ptr [rax + 0x42], 0x4e; add byte ptr [rax + 0x39], cl; ret; 
0x00000000004949f6: add byte ptr [rax - 0x39], cl; shr dword ptr [rax + 0x42], 0x4e; add byte ptr [rax - 0x77], cl; fimul dword ptr [rax + 0x29]; ret 0x2948; 
0x00000000004215fe: add byte ptr [rax - 0x39], r9b; ret; 
0x000000000041ed17: add byte ptr [rax - 0x39], r9b; sal byte ptr [rax + 0x42], 0x4e; add byte ptr [rax + 0x39], cl; ret; 
0x00000000004949f5: add byte ptr [rax - 0x39], r9b; shr dword ptr [rax + 0x42], 0x4e; add byte ptr [rax - 0x77], cl; fimul dword ptr [rax + 0x29]; ret 0x2948; 
0x000000000044e5ce: add byte ptr [rax - 0x3f43f00d], dl; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000004870d0: add byte ptr [rax - 0x3f], cl; out dx, eax; add ecx, dword ptr [rax + 0x29]; ret 0x8948; 
0x000000000046ff18: add byte ptr [rax - 0x3f], cl; ret 0x4811; 
0x000000000046db5d: add byte ptr [rax - 0x3f], cl; ret 0x4911; 
0x000000000046db31: add byte ptr [rax - 0x3f], cl; ret 0x6411; 
0x000000000049e8df: add byte ptr [rax - 0x3ffe], bh; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000049e8f8: add byte ptr [rax - 0x47ff76b7], al; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000000484efe: add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x66; syscall; ret; 
0x00000000004a392e: add byte ptr [rax - 0x5e1f00d], dl; mov rax, qword ptr [rdi + 0x90]; ret; 
0x000000000045cf5e: add byte ptr [rax - 0x5e1f00d], dl; mov rax, qword ptr [rip + 0x861ed]; test rax, rax; je 0x5cf71; ret; 
0x00000000004033d7: add byte ptr [rax - 0x5f], bh; add rsp, 8; ret; 
0x0000000000403497: add byte ptr [rax - 0x5f], bh; ret; 
0x00000000004033d6: add byte ptr [rax - 0x5f], dil; add rsp, 8; ret; 
0x00000000004038ee: add byte ptr [rax - 0x5f], dil; ret; 
0x000000000040aedf: add byte ptr [rax - 0x66], bh; ret; 
0x000000000040aeef: add byte ptr [rax - 0x67], bh; ret; 
0x000000000040aebf: add byte ptr [rax - 0x69], bh; ret; 
0x000000000040bb0f: add byte ptr [rax - 0x6c], bh; ret; 
0x000000000045f360: add byte ptr [rax - 0x73], cl; adc byte ptr [r8 - 0x77], cl; ret 0x8148; 
0x0000000000431997: add byte ptr [rax - 0x73], cl; adc eax, 0x118b1; cmovne rax, rdx; ret; 
0x0000000000431beb: add byte ptr [rax - 0x73], cl; adc eax, 0x16b5d; cmovne rax, rdx; ret; 
0x0000000000430f48: add byte ptr [rax - 0x73], cl; adc eax, 0x1e5e0; cmovne rax, rdx; ret; 
0x00000000004310a8: add byte ptr [rax - 0x73], cl; adc eax, 0x1fc30; cmovne rax, rdx; ret; 
0x0000000000431b98: add byte ptr [rax - 0x73], cl; adc eax, 0x21cc0; cmovne rax, rdx; ret; 
0x0000000000430ee8: add byte ptr [rax - 0x73], cl; adc eax, 0x25b0; cmovne rax, rdx; ret; 
0x00000000004318f9: add byte ptr [rax - 0x73], cl; adc eax, 0x25b3f; cmovne rax, rdx; ret; 
0x0000000000430e88: add byte ptr [rax - 0x73], cl; adc eax, 0x26290; cmovne rax, rdx; ret; 
0x0000000000483d48: add byte ptr [rax - 0x73], cl; adc eax, 0x30; cmovne rax, rdx; ret; 
0x0000000000431052: add byte ptr [rax - 0x73], cl; adc eax, 0x5356; cmovne rax, rdx; ret; 
0x0000000000431c67: add byte ptr [rax - 0x73], cl; adc eax, 0xeaf1; cmovne rax, rdx; ret; 
0x0000000000431af7: add byte ptr [rax - 0x73], cl; adc eax, 0xec41; cmovne rax, rdx; ret; 
0x000000000048b101: add byte ptr [rax - 0x73], cl; add al, 0x90; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000048b0cf: add byte ptr [rax - 0x73], cl; add al, 0x90; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000044db0e: add byte ptr [rax - 0x73], cl; add al, 7; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x0000000000481cd8: add byte ptr [rax - 0x73], cl; add eax, 0x13e0; cmove rax, rdx; ret; 
0x0000000000431d28: add byte ptr [rax - 0x73], cl; add eax, 0x1bfc0; cmove rax, rdx; ret; 
0x0000000000430fe8: add byte ptr [rax - 0x73], cl; add eax, 0x1d330; cmove rax, rdx; ret; 
0x0000000000431cad: add byte ptr [rax - 0x73], cl; add eax, 0x278eb; cmove rax, rdx; ret; 
0x0000000000431b3d: add byte ptr [rax - 0x73], cl; add eax, 0x27a4b; cmove rax, rdx; ret; 
0x00000000004319dd: add byte ptr [rax - 0x73], cl; add eax, 0x27bbb; cmove rax, rdx; ret; 
0x0000000000431c3f: add byte ptr [rax - 0x73], cl; add eax, 0x27cb9; cmove rax, rdx; ret; 
0x0000000000431acf: add byte ptr [rax - 0x73], cl; add eax, 0x27e19; cmove rax, rdx; ret; 
0x000000000043196f: add byte ptr [rax - 0x73], cl; add eax, 0x27f89; cmove rax, rdx; ret; 
0x0000000000431c91: add byte ptr [rax - 0x73], cl; add eax, 0x280a7; cmove rax, rdx; ret; 
0x0000000000430f71: add byte ptr [rax - 0x73], cl; add eax, 0x280d7; cmovne rax, rdx; ret; 
0x0000000000431b21: add byte ptr [rax - 0x73], cl; add eax, 0x28207; cmove rax, rdx; ret; 
0x00000000004319c1: add byte ptr [rax - 0x73], cl; add eax, 0x28377; cmove rax, rdx; ret; 
0x0000000000431a58: add byte ptr [rax - 0x73], cl; add eax, 0x287f0; cmovne rax, rdx; ret; 
0x0000000000431a39: add byte ptr [rax - 0x73], cl; add eax, 0x289df; cmove rax, rdx; ret; 
0x0000000000431a81: add byte ptr [rax - 0x73], cl; add eax, 0x28b27; cmove rax, rdx; ret; 
0x000000000042a6bd: add byte ptr [rax - 0x73], cl; add eax, 0x319b; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x000000000042a6af: add byte ptr [rax - 0x73], cl; add eax, 0x3429; mov qword ptr [rip + 0xb810a], rax; lea rax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x0000000000497eaf: add byte ptr [rax - 0x73], cl; add eax, 0x4d189; mov qword ptr [rip + 0x4d16a], rax; ret; 
0x0000000000498661: add byte ptr [rax - 0x73], cl; add eax, 0x67; cmovne rax, rdx; ret; 
0x00000000004988d8: add byte ptr [rax - 0x73], cl; add eax, 0x70; cmove rax, rdx; ret; 
0x0000000000431ce8: add byte ptr [rax - 0x73], cl; add eax, 0x7330; cmove rax, rdx; ret; 
0x0000000000481dd8: add byte ptr [rax - 0x73], cl; add eax, 0x810; cmove rax, rdx; ret; 
0x0000000000483628: add byte ptr [rax - 0x73], cl; add eax, 0x9b0; cmove rax, rdx; ret; 
0x000000000040d7df: add byte ptr [rax - 0x73], cl; add eax, 0x9bd77; ret; 
0x000000000040d7bf: add byte ptr [rax - 0x73], cl; add eax, 0x9bd80; ret; 
0x000000000040d7af: add byte ptr [rax - 0x73], cl; add eax, 0x9bd84; ret; 
0x000000000040d79f: add byte ptr [rax - 0x73], cl; add eax, 0x9bd8c; ret; 
0x000000000040d7cf: add byte ptr [rax - 0x73], cl; add eax, 0x9bd8e; ret; 
0x000000000040d78f: add byte ptr [rax - 0x73], cl; add eax, 0x9bd8f; ret; 
0x000000000040d767: add byte ptr [rax - 0x73], cl; add eax, 0x9bdb0; ret; 
0x000000000040d81f: add byte ptr [rax - 0x73], cl; add eax, 0x9bdba; ret; 
0x000000000040d77f: add byte ptr [rax - 0x73], cl; add eax, 0x9bdcc; ret; 
0x000000000040d80f: add byte ptr [rax - 0x73], cl; add eax, 0x9bdd1; ret; 
0x000000000040d7ff: add byte ptr [rax - 0x73], cl; add eax, 0x9bde8; ret; 
0x000000000040d7ef: add byte ptr [rax - 0x73], cl; add eax, 0x9bdff; ret; 
0x000000000040cc9f: add byte ptr [rax - 0x73], cl; add eax, 0x9c8b7; ret; 
0x000000000040cc7f: add byte ptr [rax - 0x73], cl; add eax, 0x9c8c0; ret; 
0x000000000040cc6f: add byte ptr [rax - 0x73], cl; add eax, 0x9c8c4; ret; 
0x000000000040cc5f: add byte ptr [rax - 0x73], cl; add eax, 0x9c8cc; ret; 
0x000000000040cc8f: add byte ptr [rax - 0x73], cl; add eax, 0x9c8ce; ret; 
0x000000000040cc4f: add byte ptr [rax - 0x73], cl; add eax, 0x9c8cf; ret; 
0x000000000040cc27: add byte ptr [rax - 0x73], cl; add eax, 0x9c8f0; ret; 
0x000000000040ccdf: add byte ptr [rax - 0x73], cl; add eax, 0x9c8fa; ret; 
0x000000000040cc3f: add byte ptr [rax - 0x73], cl; add eax, 0x9c90c; ret; 
0x000000000040cccf: add byte ptr [rax - 0x73], cl; add eax, 0x9c911; ret; 
0x000000000040ccbf: add byte ptr [rax - 0x73], cl; add eax, 0x9c928; ret; 
0x000000000040ccaf: add byte ptr [rax - 0x73], cl; add eax, 0x9c93f; ret; 
0x000000000040c15f: add byte ptr [rax - 0x73], cl; add eax, 0x9d3f7; ret; 
0x000000000040c13f: add byte ptr [rax - 0x73], cl; add eax, 0x9d400; ret; 
0x000000000040c12f: add byte ptr [rax - 0x73], cl; add eax, 0x9d404; ret; 
0x000000000040c11f: add byte ptr [rax - 0x73], cl; add eax, 0x9d40c; ret; 
0x000000000040c14f: add byte ptr [rax - 0x73], cl; add eax, 0x9d40e; ret; 
0x000000000040c10f: add byte ptr [rax - 0x73], cl; add eax, 0x9d40f; ret; 
0x000000000040c0e7: add byte ptr [rax - 0x73], cl; add eax, 0x9d430; ret; 
0x000000000040c19f: add byte ptr [rax - 0x73], cl; add eax, 0x9d43a; ret; 
0x000000000040c0ff: add byte ptr [rax - 0x73], cl; add eax, 0x9d44c; ret; 
0x000000000040c18f: add byte ptr [rax - 0x73], cl; add eax, 0x9d451; ret; 
0x000000000040c17f: add byte ptr [rax - 0x73], cl; add eax, 0x9d468; ret; 
0x000000000040c16f: add byte ptr [rax - 0x73], cl; add eax, 0x9d47f; ret; 
0x000000000040b55f: add byte ptr [rax - 0x73], cl; add eax, 0x9e014; ret; 
0x000000000040b54f: add byte ptr [rax - 0x73], cl; add eax, 0x9e01c; ret; 
0x000000000040b53f: add byte ptr [rax - 0x73], cl; add eax, 0x9e023; ret; 
0x000000000040b52f: add byte ptr [rax - 0x73], cl; add eax, 0x9e02e; ret; 
0x000000000040b51f: add byte ptr [rax - 0x73], cl; add eax, 0x9e037; ret; 
0x000000000040b4ff: add byte ptr [rax - 0x73], cl; add eax, 0x9e040; ret; 
0x000000000040b4ef: add byte ptr [rax - 0x73], cl; add eax, 0x9e044; ret; 
0x000000000040b4df: add byte ptr [rax - 0x73], cl; add eax, 0x9e04c; ret; 
0x000000000040b4cf: add byte ptr [rax - 0x73], cl; add eax, 0x9e04f; ret; 
0x000000000040b4af: add byte ptr [rax - 0x73], cl; add eax, 0x9e077; ret; 
0x000000000040b49f: add byte ptr [rax - 0x73], cl; add eax, 0x9e078; ret; 
0x000000000040b4bf: add byte ptr [rax - 0x73], cl; add eax, 0x9e08c; ret; 
0x000000000042a5b8: add byte ptr [rax - 0x73], cl; add eax, 0xb8220; add rsp, 0x10; pop rbp; ret; 
0x000000000040b50f: add byte ptr [rax - 0x73], cl; add eax, 0xc02d8; ret; 
0x00000000004109e8: add byte ptr [rax - 0x73], cl; add eax, 0xd38f0; ret; 
0x0000000000481d18: add byte ptr [rax - 0x73], cl; add eax, 0xed0; cmove rax, rdx; ret; 
0x000000000042e4c7: add byte ptr [rax - 0x73], cl; add eax, 0xfffff391; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x000000000042e4b9: add byte ptr [rax - 0x73], cl; add eax, 0xfffff61f; mov qword ptr [rip + 0xb4300], rax; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x0000000000499603: add byte ptr [rax - 0x73], cl; cmp eax, 0x329f5; call 0x11c50; endbr64; ret; 
0x000000000041eef0: add byte ptr [rax - 0x73], cl; cmp eax, 0x96075; call 0x11c50; xor r8d, r8d; mov rax, r8; ret; 
0x000000000042d24a: add byte ptr [rax - 0x73], cl; cmp eax, 0xb558e; syscall; pop rbp; ret; 
0x000000000042e3b6: add byte ptr [rax - 0x73], cl; cmp eax, 0xb6962; syscall; pop rbx; ret; 
0x000000000042618c: add byte ptr [rax - 0x73], cl; cmp eax, 0xbeb1c; syscall; ret; 
0x00000000004916aa: add byte ptr [rax - 0x73], cl; dec dword ptr [r8 - 0x7d]; clc; std; jbe 0x916c0; ret; 
0x00000000004a16da: add byte ptr [rax - 0x73], cl; or byte ptr [rcx + rcx*4 + 1], cl; ret; 
0x00000000004234e4: add byte ptr [rax - 0x73], cl; or eax, 0xc0794; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x0000000000437c7e: add byte ptr [rax - 0x73], cl; or r14b, al; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x000000000041dfa1: add byte ptr [rax - 0x73], cl; pop rax; or dword ptr [rdi], ecx; mov dh, 0x40; or dword ptr [rax + rax*8 - 0x38b78d8c], eax; ret 0xfff0; 
0x000000000045d707: add byte ptr [rax - 0x73], cl; push rbx; or byte ptr [rax - 0x7d], cl; ret; 
0x0000000000405e61: add byte ptr [rax - 0x73], cl; test byte ptr [rax + rax], ah; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000004995fc: add byte ptr [rax - 0x73], cl; xor eax, 0x329e4; lea rdi, [rip + 0x329f5]; call 0x11c50; endbr64; ret; 
0x000000000048cd65: add byte ptr [rax - 0x75], cl; adc byte ptr [r8 - 0x77], cl; ret 0xf748; 
0x000000000042a827: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000499c9f: add byte ptr [rax - 0x75], cl; adc cl, byte ptr [rcx + 0x48b48d8]; ret 0x8b48; 
0x00000000004a3437: add byte ptr [rax - 0x75], cl; adc ecx, dword ptr [rax + 0x63]; ret 0xbc80; 
0x000000000048c44f: add byte ptr [rax - 0x75], cl; adc ecx, dword ptr [rcx - 0x75]; add ecx, dword ptr [rax - 0x7d]; ret; 
0x00000000004a11cb: add byte ptr [rax - 0x75], cl; add al, 0x24; add rsp, 0x38; ret; 
0x000000000045500f: add byte ptr [rax - 0x75], cl; add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; lea rax, [rdx + 0xc]; ret; 
0x0000000000450b5f: add byte ptr [rax - 0x75], cl; add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x00000000004304a7: add byte ptr [rax - 0x75], cl; add dword ptr [rax], r9d; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x000000000045c100: add byte ptr [rax - 0x75], cl; and al, 8; add rsp, 0x28; ret; 
0x000000000043d1df: add byte ptr [rax - 0x75], cl; cmc; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000040303e: add byte ptr [rax - 0x75], cl; cmp al, ch; test eax, 0x85000078; sar byte ptr [rax + 0x19], 0x89; ret; 
0x000000000049f5df: add byte ptr [rax - 0x75], cl; cmp cl, byte ptr [rax - 0x7d]; ret 0xf08; 
0x000000000043d3bf: add byte ptr [rax - 0x75], cl; hlt; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d9af: add byte ptr [rax - 0x75], cl; int1; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004a138c: add byte ptr [rax - 0x75], cl; je 0xa13b5; adc byte ptr [rcx - 0x77], cl; ret; 
0x000000000043035f: add byte ptr [rax - 0x75], cl; jl 0x30388; sbb byte ptr [rcx - 0x17f7dbac], cl; test al, 0xff; dec dword ptr [rbx + 0x9082454]; ret 0x37e9; 
0x000000000048c007: add byte ptr [rax - 0x75], cl; mov byte ptr [r8 - 0x7b], r9b; ror byte ptr [rdi], 0x84; ret; 
0x000000000043d5af: add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d7af: add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004a45a7: add byte ptr [rax - 0x75], cl; or bl, r13b; iretd; nop; xor eax, eax; ret; 
0x0000000000485a9f: add byte ptr [rax - 0x75], cl; or byte ptr [r8 - 0x7b], cl; sal byte ptr [rdi + 0x48], 0x89; ret; 
0x0000000000410e28: add byte ptr [rax - 0x75], cl; push rax; and byte ptr [rax + 1], cl; ret 0xb70f; 
0x000000000042325f: add byte ptr [rax - 0x75], cl; push rbx; or byte ptr [rax - 0x75], cl; xor ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000442cef: add byte ptr [rax - 0x75], cl; push rsi; add eax, 0x480e8b48; mov dword ptr [rdi + 5], edx; mov qword ptr [rdi], rcx; ret; 
0x000000000043cc5f: add byte ptr [rax - 0x75], cl; push rsi; clc; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000044252f: add byte ptr [rax - 0x75], cl; push rsi; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000044249f: add byte ptr [rax - 0x75], cl; push rsi; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000044273f: add byte ptr [rax - 0x75], cl; push rsi; test dword ptr [rbx - 0x76b703b2], 0x4f89f757; cld; ret; 
0x0000000000423cbb: add byte ptr [rax - 0x75], cl; test eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000043ce1f: add byte ptr [rax - 0x75], cl; test qword ptr [rbx - 0x76b703aa], 0x5789f74f; cld; ret; 
0x00000000004a1837: add byte ptr [rax - 0x75], cl; xchg byte ptr [rax + 0x48000000], dh; add esp, 8; ret; 
0x00000000004746a2: add byte ptr [rax - 0x75], cl; xchg eax, ebp; clc; idiv bh; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x0000000000420642: add byte ptr [rax - 0x75], cl; xchg eax, edi; movabs al, byte ptr [0xe08a8948000000]; add byte ptr [rax], al; ret; 
0x000000000040aecf: add byte ptr [rax - 0x76], bh; ret; 
0x0000000000412d82: add byte ptr [rax - 0x76b7bcc8], al; ret; 
0x00000000004a398f: add byte ptr [rax - 0x77], cl; adc al, 0xf7; add rsp, 8; ret; 
0x000000000046fd66: add byte ptr [rax - 0x77], cl; adc eax, 0x73cca; cmp qword ptr fs:[rdi], rsi; je 0x6fd78; ret; 
0x0000000000497eb6: add byte ptr [rax - 0x77], cl; add eax, 0x4d16a; ret; 
0x0000000000497e9f: add byte ptr [rax - 0x77], cl; add eax, 0x4d181; add rsp, 8; ret; 
0x000000000042a6c4: add byte ptr [rax - 0x77], cl; add eax, 0xb80f4; ret; 
0x000000000042a6b6: add byte ptr [rax - 0x77], cl; add eax, 0xb810a; lea rax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x000000000042973a: add byte ptr [rax - 0x77], cl; add eax, 0xb900e; ret; 
0x0000000000429711: add byte ptr [rax - 0x77], cl; add eax, 0xb902f; ret; 
0x00000000004296f1: add byte ptr [rax - 0x77], cl; add eax, 0xb9047; ret; 
0x0000000000404c4f: add byte ptr [rax - 0x77], cl; add ebx, ebp; in al, dx; xor eax, eax; ret; 
0x000000000048e1a6: add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x8dad0; add rsp, 0xd8; ret; 
0x000000000042472c: add byte ptr [rax - 0x77], cl; call 0x5c43a48f; ret; 
0x000000000045669f: add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000425087: add byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x0000000000494238: add byte ptr [rax - 0x77], cl; fimul dword ptr [rax + 0x29]; ret 0x2948; 
0x0000000000428416: add byte ptr [rax - 0x77], cl; imul esp, dword ptr [rax + 0x5b], 0x5d; pop r12; ret; 
0x000000000045fb1f: add byte ptr [rax - 0x77], cl; ja 0x5fb44; ret; 
0x000000000045fb87: add byte ptr [rax - 0x77], cl; jo 0x5fbac; ret; 
0x00000000004200bc: add byte ptr [rax - 0x77], cl; pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x0000000000482578: add byte ptr [rax - 0x77], cl; ret 0x14eb; 
0x000000000045d892: add byte ptr [rax - 0x77], cl; ret 0x2548; 
0x000000000042d78f: add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x0000000000421028: add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x00000000004248b7: add byte ptr [rax - 0x77], cl; ret 0x294d; 
0x0000000000409b17: add byte ptr [rax - 0x77], cl; ret 0x3944; 
0x0000000000413a87: add byte ptr [rax - 0x77], cl; ret 0x448b; 
0x0000000000407027: add byte ptr [rax - 0x77], cl; ret 0x4c7; 
0x0000000000475137: add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000048862f: add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000047a43f: add byte ptr [rax - 0x77], cl; ret 0x8349; 
0x000000000049f35c: add byte ptr [rax - 0x77], cl; ret 0x8548; 
0x0000000000405e69: add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000495df7: add byte ptr [rax - 0x77], cl; ret 0x894c; 
0x000000000049697f: add byte ptr [rax - 0x77], cl; ret 0x894d; 
0x000000000049c22f: add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000045f28e: add byte ptr [rax - 0x77], cl; ret 0xabe; 
0x00000000004292fa: add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000425208: add byte ptr [rax - 0x77], cl; ret 0xffb8; 
0x000000000040928f: add byte ptr [rax - 0x77], cl; ret; 
0x000000000040366c: add byte ptr [rax - 0x77], cl; retf 0x2be; add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0x54; ret 5; 
0x0000000000437cec: add byte ptr [rax - 0x77], cl; retf 0x8349; ret 0x7f10; 
0x000000000044aee4: add byte ptr [rax - 0x77], cl; retf 0x8349; ret 0xf10; 
0x00000000004595e4: add byte ptr [rax - 0x77], cl; sal ebx, 1; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000491845: add byte ptr [rax - 0x77], cl; sbb byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x00000000004a6712: add byte ptr [rax - 0x77], cl; sbb eax, 0x3e576; test rbx, rbx; jne 0xa6700; pop rbx; ret; 
0x0000000000469e1d: add byte ptr [rax - 0x77], cl; shr bl, 1; ret 0x1f0f; 
0x0000000000494237: add byte ptr [rax - 0x77], r9b; fimul dword ptr [rax + 0x29]; ret 0x2948; 
0x0000000000423b5d: add byte ptr [rax - 0x77], r9b; ret 0x294c; 
0x00000000004248b6: add byte ptr [rax - 0x77], r9b; ret 0x294d; 
0x0000000000475136: add byte ptr [rax - 0x77], r9b; ret 0x8148; 
0x000000000040b613: add byte ptr [rax - 0x7b], al; ror byte ptr [rdi], 0x49; ret 0x8348; 
0x000000000049e8af: add byte ptr [rax - 0x7b], cl; div byte ptr [rbp - 0x13]; cmp cx, 0x7fff; jne 0x9e89c; mov eax, 1; ret; 
0x0000000000480d7e: add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax - 0xa]; ret 0x7408; 
0x00000000004a3a13: add byte ptr [rax - 0x7b], cl; ror byte ptr [rax + 0xf], 0x45; and al, 0x10; add rsp, 0x28; ret; 
0x000000000042067e: add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x000000000042077d: add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; retf 0; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004294e3: add byte ptr [rax - 0x7b], cl; sal byte ptr [rbp - 0x21], cl; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000048256f: add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + 0x48], 3; add byte ptr [r8 - 0x77], r9b; ret 0x14eb; 
0x0000000000402551: add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rcx - 0x75], 0; add rsp, 8; ret; 
0x000000000040100e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000046095a: add byte ptr [rax - 0x7b], cl; sal byte ptr [rsi + rbp + 0x48], 0x8b; push rax; or byte ptr [rcx + 0x3e895], cl; add dh, dh; ret 0x7402; 
0x000000000041f264: add byte ptr [rax - 0x7bf0cf07], al; ret 1; 
0x000000000041f25b: add byte ptr [rax - 0x7bf0d407], al; imul eax, dword ptr [rcx], 0; add byte ptr [rax - 0x7bf0cf07], al; ret 1; 
0x00000000004783fb: add byte ptr [rax - 0x7bf10000], al; ret; 
0x00000000004a4517: add byte ptr [rax - 0x7c], al; push qword ptr [rbp + 0x36]; mov eax, 8; add rsp, 8; ret; 
0x0000000000468201: add byte ptr [rax - 0x7d], cl; cli; add ecx, dword ptr [rdi]; xchg dword ptr [rax + 0x39480000], esp; ret; 
0x000000000045a2e1: add byte ptr [rax - 0x7d], cl; cli; and byte ptr [rdi + 0xb], dh; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000488ab9: add byte ptr [rax - 0x7d], cl; jge 0x88a86; add byte ptr [rax - 0x77], cl; ret; 
0x000000000042c777: add byte ptr [rax - 0x7d], cl; ret 0x110; 
0x0000000000458c8f: add byte ptr [rax - 0x7d], cl; ret 0x3a01; 
0x000000000045adc7: add byte ptr [rax - 0x7d], cl; ret 0x4501; 
0x0000000000462a85: add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000485855: add byte ptr [rax - 0x7d], cl; ret 0x4807; 
0x00000000004997ef: add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000045b20f: add byte ptr [rax - 0x7d], cl; ret 0x4817; 
0x0000000000464b56: add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x0000000000437d19: add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000048ee32: add byte ptr [rax - 0x7d], cl; ret 0x4c08; 
0x000000000045afc7: add byte ptr [rax - 0x7d], cl; ret 0x8001; 
0x000000000046009f: add byte ptr [rax - 0x7d], cl; ret 0x8801; 
0x000000000042cf56: add byte ptr [rax - 0x7d], cl; ret 0xb817; 
0x0000000000431350: add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x000000000044ac83: add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000437d47: add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000045fe17: add byte ptr [rax - 0x7d], cl; ret 0xf01; 
0x000000000049c6bf: add byte ptr [rax - 0x7d], cl; ret 0xf604; 
0x000000000041325f: add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004332df: add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + 0x48], 0x83; ret 0x4840; 
0x00000000004831ff: add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + 0x49], 0x39; ret 0x2774; 
0x000000000046cd6d: add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + rcx*2], 0x83; ret; 
0x000000000049ab85: add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], 0x83; ret 0x4801; 
0x0000000000403370: add byte ptr [rax - 0x7ee38c], al; add byte ptr [rax], al; sar byte ptr [rdi + 0x74], 4; ret; 
0x000000000046fd58: add byte ptr [rax - 0x7f], cl; ret 0x200; 
0x0000000000434855: add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x00000000004a4509: add byte ptr [rax - 0x80], al; inc dword ptr [rbx]; jne 0xa4530; add rsp, 8; ret; 
0x0000000000408b4f: add byte ptr [rax - 0xd], bh; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040aeaf: add byte ptr [rax - 0xe0], bh; ret; 
0x00000000004716fd: add byte ptr [rax - 1], bh; pop rbp; pop r12; pop r13; ret; 
0x0000000000421e1f: add byte ptr [rax - 1], bh; pop rbp; ret; 
0x000000000040a907: add byte ptr [rax - 1], bh; ret; 
0x00000000004237f6: add byte ptr [rax - 1], dil; ret; 
0x000000000045a278: add byte ptr [rax], 0; add bl, dh; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045a4d1: add byte ptr [rax], 0; add byte ptr [rax + 0x39], cl; retf 0xe175; vzeroupper; ret; 
0x0000000000425205: add byte ptr [rax], 0; add byte ptr [rax - 0x77], cl; ret 0xffb8; 
0x0000000000434852: add byte ptr [rax], 0; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x00000000004391fb: add byte ptr [rax], 0; add byte ptr [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000043921b: add byte ptr [rax], 0; add byte ptr [rax], al; bsf eax, eax; lea rax, [rax + rdi + 0x20]; ret; 
0x000000000048f0d3: add byte ptr [rax], 0; add byte ptr [rax], al; cmp rax, r8; ja 0x8f0e8; add rsp, 8; ret; 
0x0000000000426deb: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; cmp qword ptr [rdi + 0x38], 0; je 0x26e00; ret; 
0x00000000004916eb: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; mov rax, qword ptr [rax + 8]; sub rax, qword ptr fs:[0]; ret; 
0x00000000004a399b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000042888b: add byte ptr [rax], 0; add byte ptr [rax], al; endbr64; mov rax, rdi; ret; 
0x000000000040d763: add byte ptr [rax], 0; add byte ptr [rax], al; lea rax, [rip + 0x9bdb0]; ret; 
0x000000000040cc23: add byte ptr [rax], 0; add byte ptr [rax], al; lea rax, [rip + 0x9c8f0]; ret; 
0x000000000040c0e3: add byte ptr [rax], 0; add byte ptr [rax], al; lea rax, [rip + 0x9d430]; ret; 
0x0000000000464ce3: add byte ptr [rax], 0; add byte ptr [rax], al; mov eax, dword ptr [rip + 0x8014e]; test eax, eax; je 0x64cf8; ret; 
0x00000000004430db: add byte ptr [rax], 0; add byte ptr [rax], al; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x00000000004701ab: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000045d063: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x000000000040a77b: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, 0x4dec40; pop rbp; ret; 
0x000000000040a79b: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, 0x4dec80; pop rbp; ret; 
0x000000000040a78b: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, 0x4decc0; pop rbp; ret; 
0x000000000040a7db: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, 0x4ded00; pop rbp; ret; 
0x000000000040a7cb: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, 0x4ded40; pop rbp; ret; 
0x000000000040a7eb: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, 0x4ded80; pop rbp; ret; 
0x000000000040a7bb: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, 0x4dedc0; pop rbp; ret; 
0x000000000040a7ab: add byte ptr [rax], 0; add byte ptr [rax], al; mov rax, 0x4e11e0; pop rbp; ret; 
0x0000000000442f1b: add byte ptr [rax], 0; add byte ptr [rax], al; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x00000000004554cb: add byte ptr [rax], 0; add byte ptr [rax], al; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000045a7eb: add byte ptr [rax], 0; add byte ptr [rax], al; movzx eax, cl; pop rbx; ret; 
0x000000000044322b: add byte ptr [rax], 0; add byte ptr [rax], al; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x00000000004431bb: add byte ptr [rax], 0; add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000044e94b: add byte ptr [rax], 0; add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000045ae83: add byte ptr [rax], 0; add byte ptr [rax], al; pop rbp; ret; 
0x000000000049a8cb: add byte ptr [rax], 0; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000407ce3: add byte ptr [rax], 0; add byte ptr [rax], al; ret; 
0x0000000000408a0b: add byte ptr [rax], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004233b3: add byte ptr [rax], 0; add byte ptr [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x000000000045a5d3: add byte ptr [rax], 0; add byte ptr [rdi + 0x12], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000045a573: add byte ptr [rax], 0; add byte ptr [rdi + 0x7b], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x0000000000442173: add byte ptr [rax], 0; add byte ptr [rdi], cl; cmp dword ptr [rbx - 1], -1; dec dword ptr [rax - 0x7f]; ret 0x80; 
0x0000000000439e83: add byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000410d27: add byte ptr [rax], al; adc byte ptr [rax], al; add dh, dh; ret 0x7402; 
0x0000000000428ac6: add byte ptr [rax], al; add al, ch; ret 0xffe2; 
0x000000000045ba0a: add byte ptr [rax], al; add al, ch; sahf; add al, 0; add byte ptr [rax - 0x39], cl; ret; 
0x00000000004982bd: add byte ptr [rax], al; add al, ch; sbb edi, dword ptr [rbx - 7]; dec dword ptr [rax - 0x77]; ret; 
0x000000000049e8ff: add byte ptr [rax], al; add bh, al; add al, byte ptr [rdx]; sar bh, 0xff; ret; 
0x000000000043190d: add byte ptr [rax], al; add bh, dh; ret 0; 
0x000000000041f42d: add byte ptr [rax], al; add bh, dh; ret 0xffef; 
0x00000000004890c5: add byte ptr [rax], al; add bh, dh; ret; 
0x00000000004a4542: add byte ptr [rax], al; add bl, ch; leave; nop word ptr [rax + rax]; xor eax, eax; ret; 
0x000000000047f6b1: add byte ptr [rax], al; add bl, ch; ret 0x43c7; 
0x00000000004865de: add byte ptr [rax], al; add bl, ch; ret; 
0x0000000000482b8d: add byte ptr [rax], al; add bl, dh; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x00000000004554cd: add byte ptr [rax], al; add bl, dh; movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000045a279: add byte ptr [rax], al; add bl, dh; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045649d: add byte ptr [rax], al; add bl, dh; movq qword ptr [rdi - 1], mm0; ret; 
0x00000000004564ad: add byte ptr [rax], al; add bl, dh; movq qword ptr [rdi], mm0; ret; 
0x000000000045736c: add byte ptr [rax], al; add byte ptr [rax + 0x1478d48], dl; ret; 
0x000000000048a451: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8d48; 
0x0000000000405c20: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0xc148; 
0x00000000004788bc: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x00000000004a435a: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; or byte ptr [rdi + 2], r14b; sbb eax, eax; ret; 
0x0000000000409f2b: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xed75; 
0x000000000048df04: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000047b627: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x000000000045a4d2: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; retf 0xe175; vzeroupper; ret; 
0x000000000045a835: add byte ptr [rax], al; add byte ptr [rax + 0x485bf0e5], al; cmovne eax, edx; ret; 
0x000000000046e51e: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret 0x8948; 
0x0000000000456a0d: add byte ptr [rax], al; add byte ptr [rax + 0x78d4837], cl; ret; 
0x000000000042d243: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xb558e]; syscall; pop rbp; ret; 
0x000000000042e3af: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xb6962]; syscall; pop rbx; ret; 
0x0000000000426185: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; lea rdi, [rip + 0xbeb1c]; syscall; ret; 
0x0000000000497e61: add byte ptr [rax], al; add byte ptr [rax + 0xca], bh; syscall; ret; 
0x00000000004053ee: add byte ptr [rax], al; add byte ptr [rax + 0xf00297b], al; test esp, ecx; add al, byte ptr [rax]; add byte ptr [rbx - 0x76bef7bd], cl; ret 0xc085; 
0x000000000049e80e: add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x00000000004a063d: add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret 0xb70f; 
0x000000000049e981: add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x00000000004a5f95: add byte ptr [rax], al; add byte ptr [rax + rdx*2], bh; jne 0xa5fbb; xor eax, eax; add rsp, 8; ret; 
0x0000000000455c2d: add byte ptr [rax], al; add byte ptr [rax - 0x177cb6c9], cl; add dword ptr [rax - 0x73], ecx; jg 0x55c3b; jne 0x564f0; ret; 
0x000000000041ffb6: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0x3bc0; 
0x000000000041e1bd: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x0000000000429c1f: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x000000000048422d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rbx], 0; add byte ptr [rax], al; ret; 
0x000000000048426d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rdi], 0; add byte ptr [rax], al; ret; 
0x000000000048421d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rdx], 0; add byte ptr [rax], al; ret; 
0x000000000048425d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rsi], 0; add byte ptr [rax], al; ret; 
0x00000000004870ce: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; out dx, eax; add ecx, dword ptr [rax + 0x29]; ret 0x8948; 
0x000000000046ff16: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; ret 0x4811; 
0x000000000046db5b: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; ret 0x4911; 
0x000000000046db2f: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; ret 0x6411; 
0x000000000049e8f6: add byte ptr [rax], al; add byte ptr [rax - 0x47ff76b7], al; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000000484efc: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov eax, 0x66; syscall; ret; 
0x00000000004a392c: add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov rax, qword ptr [rdi + 0x90]; ret; 
0x000000000040aedd: add byte ptr [rax], al; add byte ptr [rax - 0x66], bh; ret; 
0x000000000040aeed: add byte ptr [rax], al; add byte ptr [rax - 0x67], bh; ret; 
0x000000000040aebd: add byte ptr [rax], al; add byte ptr [rax - 0x69], bh; ret; 
0x000000000044db0c: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add al, 7; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000040d7dd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bd77; ret; 
0x000000000040d7bd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bd80; ret; 
0x000000000040d7ad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bd84; ret; 
0x000000000040d79d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bd8c; ret; 
0x000000000040d7cd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bd8e; ret; 
0x000000000040d78d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bd8f; ret; 
0x000000000040d765: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bdb0; ret; 
0x000000000040d81d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bdba; ret; 
0x000000000040d77d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bdcc; ret; 
0x000000000040d80d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bdd1; ret; 
0x000000000040d7fd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bde8; ret; 
0x000000000040d7ed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bdff; ret; 
0x000000000040cc9d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8b7; ret; 
0x000000000040cc7d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8c0; ret; 
0x000000000040cc6d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8c4; ret; 
0x000000000040cc5d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8cc; ret; 
0x000000000040cc8d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8ce; ret; 
0x000000000040cc4d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8cf; ret; 
0x000000000040cc25: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8f0; ret; 
0x000000000040ccdd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8fa; ret; 
0x000000000040cc3d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c90c; ret; 
0x000000000040cccd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c911; ret; 
0x000000000040ccbd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c928; ret; 
0x000000000040ccad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c93f; ret; 
0x000000000040c15d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d3f7; ret; 
0x000000000040c13d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d400; ret; 
0x000000000040c12d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d404; ret; 
0x000000000040c11d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d40c; ret; 
0x000000000040c14d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d40e; ret; 
0x000000000040c10d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d40f; ret; 
0x000000000040c0e5: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d430; ret; 
0x000000000040c19d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d43a; ret; 
0x000000000040c0fd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d44c; ret; 
0x000000000040c18d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d451; ret; 
0x000000000040c17d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d468; ret; 
0x000000000040c16d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d47f; ret; 
0x000000000040b55d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e014; ret; 
0x000000000040b54d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e01c; ret; 
0x000000000040b53d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e023; ret; 
0x000000000040b52d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e02e; ret; 
0x000000000040b51d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e037; ret; 
0x000000000040b4fd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e040; ret; 
0x000000000040b4ed: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e044; ret; 
0x000000000040b4dd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e04c; ret; 
0x000000000040b4cd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e04f; ret; 
0x000000000040b4ad: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e077; ret; 
0x000000000040b4bd: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e08c; ret; 
0x000000000040b50d: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0xc02d8; ret; 
0x000000000042d248: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xb558e; syscall; pop rbp; ret; 
0x000000000042e3b4: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xb6962; syscall; pop rbx; ret; 
0x000000000042618a: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xbeb1c; syscall; ret; 
0x00000000004234e2: add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; or eax, 0xc0794; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x000000000048c44d: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; adc ecx, dword ptr [rcx - 0x75]; add ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000043d5ad: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d7ad: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004243a8: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; test eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000043ce1d: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; test qword ptr [rbx - 0x76b703aa], 0x5789f74f; cld; ret; 
0x0000000000420640: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; xchg eax, edi; movabs al, byte ptr [0xe08a8948000000]; add byte ptr [rax], al; ret; 
0x000000000040aecd: add byte ptr [rax], al; add byte ptr [rax - 0x76], bh; ret; 
0x00000000004a398d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; adc al, 0xf7; add rsp, 8; ret; 
0x0000000000429738: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0xb900e; ret; 
0x000000000042970f: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0xb902f; ret; 
0x00000000004296ef: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0xb9047; ret; 
0x000000000048e1a4: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; and al, 0x18; call 0x8dad0; add rsp, 0xd8; ret; 
0x000000000042472a: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; call 0x5c43a48f; ret; 
0x000000000045fb1d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ja 0x5fb44; ret; 
0x000000000045d890: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2548; 
0x000000000042d78d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x0000000000421026: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000409b15: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x3944; 
0x000000000047560e: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000048b44d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000047a43d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8349; 
0x000000000042db82: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000495df5: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x894c; 
0x000000000049697d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x894d; 
0x000000000049c22d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x0000000000425206: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xffb8; 
0x000000000040928d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000040b611: add byte ptr [rax], al; add byte ptr [rax - 0x7b], al; ror byte ptr [rdi], 0x49; ret 0x8348; 
0x0000000000480d7c: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax - 0xa]; ret 0x7408; 
0x000000000040100c: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000041f259: add byte ptr [rax], al; add byte ptr [rax - 0x7bf0d407], al; imul eax, dword ptr [rcx], 0; add byte ptr [rax - 0x7bf0cf07], al; ret 1; 
0x00000000004681ff: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; cli; add ecx, dword ptr [rdi]; xchg dword ptr [rax + 0x39480000], esp; ret; 
0x000000000042c775: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x110; 
0x0000000000458c8d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x3a01; 
0x000000000045adc5: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4501; 
0x0000000000462a83: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000485853: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4807; 
0x00000000004997ed: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000045b20d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4817; 
0x0000000000438a33: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000045afc5: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x8001; 
0x000000000044c341: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000438a5d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000041325d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004332dd: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + 0x48], 0x83; ret 0x4840; 
0x000000000040336e: add byte ptr [rax], al; add byte ptr [rax - 0x7ee38c], al; add byte ptr [rax], al; sar byte ptr [rdi + 0x74], 4; ret; 
0x0000000000434853: add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x00000000004a4507: add byte ptr [rax], al; add byte ptr [rax - 0x80], al; inc dword ptr [rbx]; jne 0xa4530; add rsp, 8; ret; 
0x00000000004716fb: add byte ptr [rax], al; add byte ptr [rax - 1], bh; pop rbp; pop r12; pop r13; ret; 
0x0000000000422bdd: add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x000000000043190b: add byte ptr [rax], al; add byte ptr [rax], al; add bh, dh; ret 0; 
0x000000000041f42b: add byte ptr [rax], al; add byte ptr [rax], al; add bh, dh; ret 0xffef; 
0x000000000045649b: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; movq qword ptr [rdi - 1], mm0; ret; 
0x00000000004564ab: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; movq qword ptr [rdi], mm0; ret; 
0x000000000045736a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x1478d48], dl; ret; 
0x0000000000456a0b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 0x78d4837], cl; ret; 
0x00000000004a063b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret 0xb70f; 
0x000000000045c36b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x000000000048422b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rbx], 0; add byte ptr [rax], al; ret; 
0x000000000048426b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rdi], 0; add byte ptr [rax], al; ret; 
0x000000000048421b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rdx], 0; add byte ptr [rax], al; ret; 
0x000000000048425b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; rol byte ptr [rsi], 0; add byte ptr [rax], al; ret; 
0x00000000004a392a: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x5e1f00d], dl; mov rax, qword ptr [rdi + 0x90]; ret; 
0x000000000040aedb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x66], bh; ret; 
0x000000000040aeeb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x67], bh; ret; 
0x000000000040aebb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x69], bh; ret; 
0x000000000040d7db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bd77; ret; 
0x000000000040d7bb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bd80; ret; 
0x000000000040d7ab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bd84; ret; 
0x000000000040d79b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bd8c; ret; 
0x000000000040d7cb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bd8e; ret; 
0x000000000040d78b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bd8f; ret; 
0x000000000040d81b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bdba; ret; 
0x000000000040d77b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bdcc; ret; 
0x000000000040d80b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bdd1; ret; 
0x000000000040d7fb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bde8; ret; 
0x000000000040d7eb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9bdff; ret; 
0x000000000040cc9b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8b7; ret; 
0x000000000040cc7b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8c0; ret; 
0x000000000040cc6b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8c4; ret; 
0x000000000040cc5b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8cc; ret; 
0x000000000040cc8b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8ce; ret; 
0x000000000040cc4b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8cf; ret; 
0x000000000040ccdb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c8fa; ret; 
0x000000000040cc3b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c90c; ret; 
0x000000000040cccb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c911; ret; 
0x000000000040ccbb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c928; ret; 
0x000000000040ccab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9c93f; ret; 
0x000000000040c15b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d3f7; ret; 
0x000000000040c13b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d400; ret; 
0x000000000040c12b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d404; ret; 
0x000000000040c11b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d40c; ret; 
0x000000000040c14b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d40e; ret; 
0x000000000040c10b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d40f; ret; 
0x000000000040c19b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d43a; ret; 
0x000000000040c0fb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d44c; ret; 
0x000000000040c18b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d451; ret; 
0x000000000040c17b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d468; ret; 
0x000000000040c16b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9d47f; ret; 
0x000000000040b55b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e014; ret; 
0x000000000040b54b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e01c; ret; 
0x000000000040b53b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e023; ret; 
0x000000000040b52b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e02e; ret; 
0x000000000040b51b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e037; ret; 
0x000000000040b4fb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e040; ret; 
0x000000000040b4eb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e044; ret; 
0x000000000040b4db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e04c; ret; 
0x000000000040b4cb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e04f; ret; 
0x000000000040b4ab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e077; ret; 
0x000000000040b4bb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0x9e08c; ret; 
0x000000000040b50b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; add eax, 0xc02d8; ret; 
0x000000000048c44b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; adc ecx, dword ptr [rcx - 0x75]; add ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000040aecb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x76], bh; ret; 
0x00000000004a398b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; adc al, 0xf7; add rsp, 8; ret; 
0x000000000045fb1b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ja 0x5fb44; ret; 
0x000000000048f07b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000047a43b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8349; 
0x000000000049697b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x894d; 
0x0000000000458c8b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x3a01; 
0x00000000004997eb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000045b20b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4817; 
0x000000000041325b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004332db: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + 0x48], 0x83; ret 0x4840; 
0x0000000000422bdb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x000000000040610c: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0x5422; 
0x0000000000427888: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000498922: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 5], cl; add dword ptr [rsp + rdi*8], ebx; dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x0000000000408a4b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x2890447], cl; xor eax, eax; ret; 
0x0000000000408a5b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x2890847], cl; xor eax, eax; ret; 
0x0000000000408a6b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x2890c47], cl; xor eax, eax; ret; 
0x0000000000408a7b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x2891047], cl; xor eax, eax; ret; 
0x0000000000408a8b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x2891447], cl; xor eax, eax; ret; 
0x0000000000408a9b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x2891847], cl; xor eax, eax; ret; 
0x0000000000408aab: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x2891c47], cl; xor eax, eax; ret; 
0x0000000000408abb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x2892047], cl; xor eax, eax; ret; 
0x000000000045540b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; ret; 
0x00000000004a346b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx - 0x70f0ee06], al; ret; 
0x0000000000452bfb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 0x3518911], cl; ret; 
0x000000000049acdb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 0x39], al; ret; 
0x0000000000458ecb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x000000000048354b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; vzeroupper; ret; 
0x0000000000423f5b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x39], cl; mov al, 0x3b; add byte ptr [rax - 0x39], r9b; ret; 
0x000000000049605b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x39], cl; ret 0xffe0; 
0x000000000043363b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x0000000000431f3b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0xf10; 
0x0000000000465c4b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; rol byte ptr [rcx], 0x89; xor dword ptr [rax - 0x7d], ecx; ret; 
0x000000000041524b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x000000000041f3cb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x4b; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000043920b: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], dl; ret; 
0x000000000040610e: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0x5422; 
0x0000000000452bd9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov dword ptr [rcx], edx; mov byte ptr [rcx + 4], dl; ret; 
0x00000000004563f9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov dword ptr [rdi], edx; mov byte ptr [rdi + 4], dl; ret; 
0x00000000004553d9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000452ba9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov word ptr [rcx], dx; ret; 
0x00000000004563c9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov word ptr [rdi], dx; ret; 
0x00000000004841ec: add byte ptr [rax], al; add byte ptr [rax], al; add rax, 3; ret; 
0x000000000042eb5c: add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 0x18; ret; 
0x00000000004638b9: add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004916d7: add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000045a834: add byte ptr [rax], al; add byte ptr [rax], al; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x00000000004391fc: add byte ptr [rax], al; add byte ptr [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000043920c: add byte ptr [rax], al; add byte ptr [rax], al; bsf eax, eax; lea rax, [rax + rdi + 0x10]; ret; 
0x000000000043921c: add byte ptr [rax], al; add byte ptr [rax], al; bsf eax, eax; lea rax, [rax + rdi + 0x20]; ret; 
0x000000000049e81c: add byte ptr [rax], al; add byte ptr [rax], al; bts rsi, 0x34; mov eax, 1; mov qword ptr [rdi], rsi; ret; 
0x000000000040dbee: add byte ptr [rax], al; add byte ptr [rax], al; cmovne r12, rax; mov rax, r12; pop r12; ret; 
0x0000000000430e3e: add byte ptr [rax], al; add byte ptr [rax], al; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x000000000048f68e: add byte ptr [rax], al; add byte ptr [rax], al; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000048f0d4: add byte ptr [rax], al; add byte ptr [rax], al; cmp rax, r8; ja 0x8f0e8; add rsp, 8; ret; 
0x0000000000426dec: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; cmp qword ptr [rdi + 0x38], 0; je 0x26e00; ret; 
0x0000000000426eac: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov eax, 0xffffffff; ret; 
0x000000000046fddc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov rax, -0x18; add rax, qword ptr fs:[0]; ret; 
0x000000000046fdfc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov rax, -0x20; add rax, qword ptr fs:[0]; ret; 
0x00000000004916ec: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov rax, qword ptr [rax + 8]; sub rax, qword ptr fs:[0]; ret; 
0x000000000042887c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi + 0x68]; ret; 
0x00000000004a399c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000046d1fc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov rax, qword ptr [rip + 0x77c45]; ret; 
0x000000000046384c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov rax, qword ptr [rip + 0x821ad]; ret; 
0x000000000042885c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov rax, qword ptr [rip + 0xb98f5]; ret; 
0x000000000042888c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov rax, rdi; ret; 
0x000000000040316c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; movzx edi, dil; mov dword ptr [rip + 0xdef8a], edi; ret; 
0x00000000004278ac: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; xor eax, eax; ret; 
0x00000000004573ec: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xa]; ret; 
0x00000000004573fc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xb]; ret; 
0x000000000045740c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xc]; ret; 
0x000000000045741c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xd]; ret; 
0x000000000045742c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xe]; ret; 
0x000000000045737c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 2]; ret; 
0x000000000045738c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 3]; ret; 
0x000000000045739c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 4]; ret; 
0x00000000004573ac: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 5]; ret; 
0x00000000004573bc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 6]; ret; 
0x00000000004573cc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 8]; ret; 
0x00000000004573dc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 9]; ret; 
0x000000000044db0b: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000040d7dc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bd77]; ret; 
0x000000000040d7bc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bd80]; ret; 
0x000000000040d7ac: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bd84]; ret; 
0x000000000040d79c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bd8c]; ret; 
0x000000000040d7cc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bd8e]; ret; 
0x000000000040d78c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bd8f]; ret; 
0x000000000040d764: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bdb0]; ret; 
0x000000000040d81c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bdba]; ret; 
0x000000000040d77c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bdcc]; ret; 
0x000000000040d80c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bdd1]; ret; 
0x000000000040d7fc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bde8]; ret; 
0x000000000040d7ec: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bdff]; ret; 
0x000000000040cc9c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8b7]; ret; 
0x000000000040cc7c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8c0]; ret; 
0x000000000040cc6c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8c4]; ret; 
0x000000000040cc5c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8cc]; ret; 
0x000000000040cc8c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8ce]; ret; 
0x000000000040cc4c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8cf]; ret; 
0x000000000040cc24: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8f0]; ret; 
0x000000000040ccdc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8fa]; ret; 
0x000000000040cc3c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c90c]; ret; 
0x000000000040cccc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c911]; ret; 
0x000000000040ccbc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c928]; ret; 
0x000000000040ccac: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c93f]; ret; 
0x000000000040c15c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d3f7]; ret; 
0x000000000040c13c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d400]; ret; 
0x000000000040c12c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d404]; ret; 
0x000000000040c11c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d40c]; ret; 
0x000000000040c14c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d40e]; ret; 
0x000000000040c10c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d40f]; ret; 
0x000000000040c0e4: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d430]; ret; 
0x000000000040c19c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d43a]; ret; 
0x000000000040c0fc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d44c]; ret; 
0x000000000040c18c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d451]; ret; 
0x000000000040c17c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d468]; ret; 
0x000000000040c16c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d47f]; ret; 
0x000000000040b55c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e014]; ret; 
0x000000000040b54c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e01c]; ret; 
0x000000000040b53c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e023]; ret; 
0x000000000040b52c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e02e]; ret; 
0x000000000040b51c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e037]; ret; 
0x000000000040b4fc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e040]; ret; 
0x000000000040b4ec: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e044]; ret; 
0x000000000040b4dc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e04c]; ret; 
0x000000000040b4cc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e04f]; ret; 
0x000000000040b4ac: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e077]; ret; 
0x000000000040b4bc: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e08c]; ret; 
0x000000000040b50c: add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0xc02d8]; ret; 
0x000000000040203c: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x0000000000454f0c: add byte ptr [rax], al; add byte ptr [rax], al; mov ax, word ptr [rcx]; mov word ptr [rdx], ax; lea rax, [rdx + 1]; ret; 
0x0000000000450bdc: add byte ptr [rax], al; add byte ptr [rax], al; mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x0000000000456a0c: add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x00000000004553cc: add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rdi], dh; ret; 
0x00000000004553ec: add byte ptr [rax], al; add byte ptr [rax], al; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x0000000000452bfc: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rcx], edx; mov dword ptr [rcx + 3], edx; ret; 
0x0000000000452bec: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rcx], edx; mov word ptr [rcx + 4], dx; ret; 
0x0000000000452bcc: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rcx], edx; ret; 
0x000000000045640c: add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rdi], edx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000456a1c: add byte ptr [rax], al; add byte ptr [rax], al; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, [rdi + 1]; ret; 
0x00000000004560cc: add byte ptr [rax], al; add byte ptr [rax], al; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000040aecc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffff8a; ret; 
0x000000000040aebc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffff97; ret; 
0x000000000040aeec: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffff99; ret; 
0x000000000040aedc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffff9a; ret; 
0x0000000000422bdc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x000000000049e80d: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 1; ret; 
0x000000000049e980: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 2; ret; 
0x0000000000408a7c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x10]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408a8c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x14]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408a9c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x18]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408aac: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x1c]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408abc: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x20]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408a6c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 0xc]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408a4c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 4]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408a5c: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rdi + 8]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000464ce4: add byte ptr [rax], al; add byte ptr [rax], al; mov eax, dword ptr [rip + 0x8014e]; test eax, eax; je 0x64cf8; ret; 
0x000000000045540c: add byte ptr [rax], al; add byte ptr [rax], al; mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; ret; 
0x00000000004430dc: add byte ptr [rax], al; add byte ptr [rax], al; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x00000000004277d0: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rax + 8], 0; ret; 
0x0000000000452c3c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov dword ptr [rcx + 7], edx; ret; 
0x0000000000452c4c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov dword ptr [rcx + 8], edx; ret; 
0x0000000000452c5c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 5], rdx; ret; 
0x0000000000452c6c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 6], rdx; ret; 
0x0000000000452c7c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 7], rdx; ret; 
0x0000000000452c8c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 8], rdx; ret; 
0x0000000000452c2c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov word ptr [rcx + 8], dx; ret; 
0x0000000000452c0c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; ret; 
0x000000000045fb1c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x20], rsi; ret; 
0x00000000004a398c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + rsi*8], rdx; add rsp, 8; ret; 
0x000000000045641c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi - 1], rdx; ret; 
0x000000000045645c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov dword ptr [rdi + 7], edx; ret; 
0x000000000045646c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov dword ptr [rdi + 8], edx; ret; 
0x000000000045647c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 5], rdx; ret; 
0x000000000045648c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 6], rdx; ret; 
0x000000000045644c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov word ptr [rdi + 8], dx; ret; 
0x000000000045642c: add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], rdx; ret; 
0x00000000004701ac: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000045d064: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x000000000040a77c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4dec40; pop rbp; ret; 
0x000000000040a4dc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4dec40; ret; 
0x000000000040a79c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4dec80; pop rbp; ret; 
0x000000000040a4cc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4dec80; ret; 
0x000000000040a78c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4decc0; pop rbp; ret; 
0x000000000040a7dc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4ded00; pop rbp; ret; 
0x000000000040a7cc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4ded40; pop rbp; ret; 
0x000000000040a47c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4ded40; ret; 
0x000000000040a7ec: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4ded80; pop rbp; ret; 
0x000000000040a7bc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4dedc0; pop rbp; ret; 
0x000000000040a4ec: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4dee80; ret; 
0x000000000040a46c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4deec0; ret; 
0x000000000040a48c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4e11a0; ret; 
0x000000000040a7ac: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4e11e0; pop rbp; ret; 
0x000000000040a4fc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4e1260; ret; 
0x000000000040a4bc: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4e12e0; ret; 
0x000000000048421c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 2; ret; 
0x000000000048422c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 3; ret; 
0x000000000048423c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 4; ret; 
0x000000000048424c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 5; ret; 
0x000000000048425c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 6; ret; 
0x000000000048426c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 7; ret; 
0x000000000048354c: add byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x000000000045544c: add byte ptr [rax], al; add byte ptr [rax], al; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x000000000049841f: add byte ptr [rax], al; add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000442f1c: add byte ptr [rax], al; add byte ptr [rax], al; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000044f0dc: add byte ptr [rax], al; add byte ptr [rax], al; mov word ptr [rdi], dx; mov word ptr [rdi + r8 - 2], dx; vzeroupper; ret; 
0x000000000044f0cc: add byte ptr [rax], al; add byte ptr [rax], al; mov word ptr [rdi], dx; vzeroupper; ret; 
0x00000000004554cc: add byte ptr [rax], al; add byte ptr [rax], al; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000045649c: add byte ptr [rax], al; add byte ptr [rax], al; movdqu xmmword ptr [rdi - 1], xmm0; ret; 
0x00000000004564ac: add byte ptr [rax], al; add byte ptr [rax], al; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000481555: add byte ptr [rax], al; add byte ptr [rax], al; movups xmmword ptr [rax + 0x40], xmm0; pop rbx; ret; 
0x0000000000426960: add byte ptr [rax], al; add byte ptr [rax], al; movups xmmword ptr [rbx + 0x48], xmm0; pop rbx; ret; 
0x0000000000490cd9: add byte ptr [rax], al; add byte ptr [rax], al; movups xmmword ptr [rbx], xmm0; pop rbx; ret; 
0x000000000045a7ec: add byte ptr [rax], al; add byte ptr [rax], al; movzx eax, cl; pop rbx; ret; 
0x000000000043639c: add byte ptr [rax], al; add byte ptr [rax], al; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000044322c: add byte ptr [rax], al; add byte ptr [rax], al; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x00000000004431bc: add byte ptr [rax], al; add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000044e94c: add byte ptr [rax], al; add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x00000000004391e9: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; bsf eax, eax; lea rax, [rax + rdi - 0x10]; ret; 
0x0000000000402158: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; endbr64; lea rax, [rip + 0xa6f3d]; ret; 
0x00000000004037c9: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; endbr64; mov eax, dword ptr [rip + 0xde92a]; ret; 
0x00000000004a3a29: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; endbr64; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x0000000000452b98: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov byte ptr [rcx], dl; ret; 
0x00000000004563b8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov byte ptr [rdi], dl; ret; 
0x00000000004560b8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov dl, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x00000000004429b8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cc58: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000442b48: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; movzx edx, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000442ac8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; movzx edx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x00000000004560a8: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x0000000000459039: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; ret; 
0x00000000004830a9: add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; vzeroupper; ret; 
0x00000000004a392b: add byte ptr [rax], al; add byte ptr [rax], al; nop; endbr64; mov rax, qword ptr [rdi + 0x90]; ret; 
0x000000000045736b: add byte ptr [rax], al; add byte ptr [rax], al; nop; lea rax, [rdi + 1]; ret; 
0x000000000045735b: add byte ptr [rax], al; add byte ptr [rax], al; nop; lea rax, [rdi]; ret; 
0x0000000000452bda: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov dword ptr [rcx], edx; mov byte ptr [rcx + 4], dl; ret; 
0x00000000004563db: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov dword ptr [rdi - 1], edx; ret; 
0x00000000004563fa: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov dword ptr [rdi], edx; mov byte ptr [rdi + 4], dl; ret; 
0x00000000004563eb: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov dword ptr [rdi], edx; ret; 
0x00000000004553da: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000452c1b: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov qword ptr [rcx], rdx; mov byte ptr [rcx + 8], dl; ret; 
0x000000000045643b: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov qword ptr [rdi], rdx; mov byte ptr [rdi + 8], dl; ret; 
0x000000000048420b: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov rax, 1; ret; 
0x000000000044f33b: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov rax, rdi; vzeroupper; ret; 
0x0000000000452bbb: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov word ptr [rcx], dx; mov byte ptr [rcx + 2], dl; ret; 
0x0000000000452baa: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov word ptr [rcx], dx; ret; 
0x00000000004563ca: add byte ptr [rax], al; add byte ptr [rax], al; nop; mov word ptr [rdi], dx; ret; 
0x0000000000482b7b: add byte ptr [rax], al; add byte ptr [rax], al; nop; vzeroupper; xor eax, eax; ret; 
0x000000000049e8f5: add byte ptr [rax], al; add byte ptr [rax], al; or byte ptr [rcx - 0x77], 0; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000045ae84: add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x000000000045a7a7: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; cmove rax, rdx; ret; 
0x000000000048fa4a: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; or dword ptr [rip + 0x536f2], 1; ret; 
0x0000000000409075: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000046da3a: add byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004017db: add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x0000000000428660: add byte ptr [rax], al; add byte ptr [rax], al; pxor xmm0, xmm0; movups xmmword ptr [rbx + 0x48], xmm0; pop rbx; ret; 
0x000000000040488c: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000482b8c: add byte ptr [rax], al; add byte ptr [rax], al; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000040306a: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; pop rbx; ret; 
0x000000000040256c: add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004233b4: add byte ptr [rax], al; add byte ptr [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x000000000045719c: add byte ptr [rax], al; add byte ptr [rax], al; xor rax, rax; ret; 
0x000000000045be88: add byte ptr [rax], al; add byte ptr [rbp + 0x14], dh; add rsp, 0x28; ret; 
0x000000000040534a: add byte ptr [rax], al; add byte ptr [rbp + 0x1d], dh; add rsp, 0x10; pop rbp; ret; 
0x0000000000492712: add byte ptr [rax], al; add byte ptr [rbp + 0x1e], dh; add rsp, 0x38; ret; 
0x000000000045aee0: add byte ptr [rax], al; add byte ptr [rbp + 0x1f], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000000402960: add byte ptr [rax], al; add byte ptr [rbp + 0x22], dh; add rsp, 0x18; pop rbp; pop r12; ret; 
0x0000000000498437: add byte ptr [rax], al; add byte ptr [rbp + 0x24], dh; mov rdx, qword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x00000000004850ea: add byte ptr [rax], al; add byte ptr [rbp + 0x25], dh; mov eax, r9d; add rsp, 0x38; ret; 
0x000000000041e1a9: add byte ptr [rax], al; add byte ptr [rbp + 0x26], dh; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000004919c6: add byte ptr [rax], al; add byte ptr [rbp + 0x28], dh; add rsp, 0x38; ret; 
0x0000000000491a92: add byte ptr [rax], al; add byte ptr [rbp + 0x2d], dh; add rsp, 0x58; ret; 
0x0000000000423b0c: add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; dec dword ptr [rax + 0x39]; ret 0x830f; 
0x0000000000484e90: add byte ptr [rax], al; add byte ptr [rbp + 0x35], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x0000000000491c04: add byte ptr [rax], al; add byte ptr [rbp + 0x3b], dh; add rsp, 0x68; ret; 
0x0000000000497c2b: add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; pop r13; ret; 
0x0000000000480e36: add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x000000000047013d: add byte ptr [rax], al; add byte ptr [rbp + 0x42], dh; mov eax, r9d; add rsp, 0x148; ret; 
0x000000000045cbb8: add byte ptr [rax], al; add byte ptr [rbp + 0x46], dh; add rsp, 0x68; ret; 
0x000000000045cc47: add byte ptr [rax], al; add byte ptr [rbp + 0x47], dh; add rsp, 0x18; ret; 
0x000000000045ccff: add byte ptr [rax], al; add byte ptr [rbp + 0x47], dh; add rsp, 0x58; ret; 
0x000000000045cd9d: add byte ptr [rax], al; add byte ptr [rbp + 0x49], dh; add rsp, 0x58; ret; 
0x000000000042395a: add byte ptr [rax], al; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x0000000000492319: add byte ptr [rax], al; add byte ptr [rbp + 0x51], dh; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x000000000049ec27: add byte ptr [rax], al; add byte ptr [rbp + 0xa], dh; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x000000000045f777: add byte ptr [rax], al; add byte ptr [rbp + 0xa], dh; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000000408b09: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x18; ret; 
0x000000000045cfdb: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x28; ret; 
0x00000000004985a7: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x38; ret; 
0x0000000000404fe7: add byte ptr [rax], al; add byte ptr [rbp + 5], dh; add rsp, 0x48; ret; 
0x000000000042d669: add byte ptr [rax], al; add byte ptr [rbp + 6], dh; add rsp, 0x10; pop rbp; ret; 
0x00000000004918cb: add byte ptr [rax], al; add byte ptr [rbp + 6], dh; add rsp, 0x20; pop rbx; ret; 
0x00000000004a28d9: add byte ptr [rax], al; add byte ptr [rbp + 7], dh; cmp qword ptr [r9 + 0x38], 0; je 0xa2934; add rsp, 0x18; ret; 
0x000000000041f945: add byte ptr [rax], al; add byte ptr [rbp + 8], dh; add rsp, 0xd8; ret; 
0x0000000000485030: add byte ptr [rax], al; add byte ptr [rbp + 8], dh; movzx eax, al; add rsp, 0x58; ret; 
0x00000000004788b4: add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 0x2c], cl; test dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x0000000000498924: add byte ptr [rax], al; add byte ptr [rbp + rcx*4 + 5], cl; add dword ptr [rsp + rdi*8], ebx; dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x000000000045f82c: add byte ptr [rax], al; add byte ptr [rbp - 0x3dbbf040], al; ret; 
0x0000000000408a4d: add byte ptr [rax], al; add byte ptr [rbx + 0x2890447], cl; xor eax, eax; ret; 
0x0000000000408a5d: add byte ptr [rax], al; add byte ptr [rbx + 0x2890847], cl; xor eax, eax; ret; 
0x0000000000408a6d: add byte ptr [rax], al; add byte ptr [rbx + 0x2890c47], cl; xor eax, eax; ret; 
0x0000000000408a7d: add byte ptr [rax], al; add byte ptr [rbx + 0x2891047], cl; xor eax, eax; ret; 
0x0000000000408a8d: add byte ptr [rax], al; add byte ptr [rbx + 0x2891447], cl; xor eax, eax; ret; 
0x0000000000408a9d: add byte ptr [rax], al; add byte ptr [rbx + 0x2891847], cl; xor eax, eax; ret; 
0x0000000000408aad: add byte ptr [rax], al; add byte ptr [rbx + 0x2891c47], cl; xor eax, eax; ret; 
0x0000000000408abd: add byte ptr [rax], al; add byte ptr [rbx + 0x2892047], cl; xor eax, eax; ret; 
0x00000000004250ad: add byte ptr [rax], al; add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000004560fd: add byte ptr [rax], al; add byte ptr [rbx + 0x4568a0e], cl; mov dword ptr [rdi], ecx; mov byte ptr [rdi + 4], dl; ret; 
0x0000000000456a4d: add byte ptr [rax], al; add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x000000000045540d: add byte ptr [rax], al; add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; ret; 
0x000000000045a7a8: add byte ptr [rax], al; add byte ptr [rbx + 0x48], bl; cmove eax, edx; ret; 
0x0000000000424bf6: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000409076: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000045f780: add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; ret; 
0x000000000042d1a9: add byte ptr [rax], al; add byte ptr [rbx + 0xb562d2d], al; add byte ptr [rcx], al; pop rbp; ret; 
0x000000000040aac3: add byte ptr [rax], al; add byte ptr [rbx + 0xd7718fa], al; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000044306d: add byte ptr [rax], al; add byte ptr [rbx + 0xe8b0156], cl; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000442ffd: add byte ptr [rax], al; add byte ptr [rbx + 0xe8b0256], cl; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000442f8d: add byte ptr [rax], al; add byte ptr [rbx + 0xe8b0356], cl; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000040a1a7: add byte ptr [rax], al; add byte ptr [rbx + rcx*4 + 0xc], cl; ret 0x894c; 
0x000000000041099d: add byte ptr [rax], al; add byte ptr [rbx - 0x2ac2fe40], al; add dword ptr [rax], eax; add byte ptr [rdi + rdi - 0x75], dh; or cl, byte ptr [rax - 0x7d]; ret 0x3944; 
0x000000000040308a: add byte ptr [rax], al; add byte ptr [rbx - 0x39], bl; add eax, 0xdf070; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x00000000004a346d: add byte ptr [rax], al; add byte ptr [rbx - 0x70f0ee06], al; ret; 
0x00000000004200b7: add byte ptr [rax], al; add byte ptr [rbx - 0x76b7ffbb], cl; pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x000000000044e8b1: add byte ptr [rax], al; add byte ptr [rbx - 0x7cf0fb06], al; ret; 
0x000000000048524d: add byte ptr [rax], al; add byte ptr [rcx + 0x104e23c1], cl; lea rcx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x000000000040a3bd: add byte ptr [rax], al; add byte ptr [rcx + 0x28ff], al; jne 0xa4a0; mov rax, 0x4decc0; ret; 
0x0000000000452bfd: add byte ptr [rax], al; add byte ptr [rcx + 0x3518911], cl; ret; 
0x000000000048e4e5: add byte ptr [rax], al; add byte ptr [rcx + 0x39], al; ret; 
0x0000000000495ed1: add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret 0x1773; 
0x00000000004677be: add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret 0x860f; 
0x0000000000496089: add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret; 
0x00000000004a528c: add byte ptr [rax], al; add byte ptr [rcx + 0xf], al; mov bh, 0x5d; and byte ptr [rsi - 9], ah; ret; 
0x000000000047926d: add byte ptr [rax], al; add byte ptr [rcx + 0xf], al; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x000000000042105a: add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x000000000048efa6: add byte ptr [rax], al; add byte ptr [rcx + rax - 0x10], dh; inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x000000000046d362: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], al; pop rbp; pop r12; ret; 
0x000000000041fd62: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x000000000042e0b6: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000042c57e: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x0000000000484600: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; shr rax, 2; vzeroupper; ret; 
0x000000000048348d: add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; vzeroupper; ret; 
0x0000000000431912: add byte ptr [rax], al; add byte ptr [rcx + rcx*8 + 0x48], sil; lea eax, [rip + 0x7e61]; test byte ptr [rip + 0xb34bf], 1; je 0x318e1; ret; 
0x000000000048f0d5: add byte ptr [rax], al; add byte ptr [rcx + rdi - 0x40], cl; ja 0x8f0e8; add rsp, 8; ret; 
0x000000000049473c: add byte ptr [rax], al; add byte ptr [rcx - 0x1177b], cl; ljmp [rcx]; ret; 
0x0000000000425101: add byte ptr [rax], al; add byte ptr [rcx - 0x38b78f89], cl; ret 0x3bc0; 
0x0000000000423b4e: add byte ptr [rax], al; add byte ptr [rcx - 0x39], cl; mov al, 0x3b; add byte ptr [rax - 0x39], r9b; ret; 
0x000000000049605d: add byte ptr [rax], al; add byte ptr [rcx - 0x39], cl; ret 0xffe0; 
0x000000000047b5c7: add byte ptr [rax], al; add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x00000000004677aa: add byte ptr [rax], al; add byte ptr [rcx - 0x77], al; ret; 
0x000000000045f21e: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; add byte ptr [r11 + rcx*4 + 0x7d], r9b; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000047e0cd: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000043363d: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x0000000000431f3d: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0xf10; 
0x0000000000465c4d: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; rol byte ptr [rcx], 0x89; xor dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004251ff: add byte ptr [rax], al; add byte ptr [rcx - 1], al; xchg eax, esi; add byte ptr [rax], 0; add byte ptr [rax - 0x77], cl; ret 0xffb8; 
0x00000000004393a4: add byte ptr [rax], al; add byte ptr [rcx - 9], cl; ret 1; 
0x00000000004393ca: add byte ptr [rax], al; add byte ptr [rcx - 9], cl; ret 2; 
0x000000000040b32f: add byte ptr [rax], al; add byte ptr [rcx], ch; ret; 
0x0000000000481aa7: add byte ptr [rax], al; add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000048285a: add byte ptr [rax], al; add byte ptr [rcx], dh; rol bl, 0x83; ret 0x6620; 
0x00000000004a1265: add byte ptr [rax], al; add byte ptr [rcx], dh; rol byte ptr [rbp - 0x7b], 0xc0; jne 0xa11c0; add rsp, 0x38; ret; 
0x000000000042c18e: add byte ptr [rax], al; add byte ptr [rcx], dh; ror byte ptr [rax - 0x73], 0x3c; ret; 
0x0000000000403672: add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0x54; ret 5; 
0x000000000045a5d4: add byte ptr [rax], al; add byte ptr [rdi + 0x12], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000045a574: add byte ptr [rax], al; add byte ptr [rdi + 0x7b], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x0000000000481556: add byte ptr [rax], al; add byte ptr [rdi], cl; adc dword ptr [rax + 0x40], eax; pop rbx; ret; 
0x0000000000408801: add byte ptr [rax], al; add byte ptr [rdi], cl; adc dword ptr [rax + 0xb0], ebx; movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x0000000000408808: add byte ptr [rax], al; add byte ptr [rdi], cl; adc dword ptr [rax + 0xc0], esp; pop rbx; ret; 
0x00000000004275db: add byte ptr [rax], al; add byte ptr [rdi], cl; adc dword ptr [rbp + 0x38], eax; pop rbp; pop r12; ret; 
0x0000000000426961: add byte ptr [rax], al; add byte ptr [rdi], cl; adc dword ptr [rbx + 0x48], eax; pop rbx; ret; 
0x0000000000490cda: add byte ptr [rax], al; add byte ptr [rdi], cl; adc dword ptr [rbx], eax; pop rbx; ret; 
0x000000000041e168: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0x8944c689; ret 0xeab8; 
0x00000000004112c8: add byte ptr [rax], al; add byte ptr [rdi], cl; add eax, 0xfffce6e9; dec dword ptr [rbx + 0xd3b0815]; add dh, dh; ret 0x7404; 
0x0000000000442174: add byte ptr [rax], al; add byte ptr [rdi], cl; cmp dword ptr [rbx - 1], -1; dec dword ptr [rax - 0x7f]; ret 0x80; 
0x00000000004431bd: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; ret; 
0x000000000044e94d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000044322d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x16; mov byte ptr [rdi], dl; ret; 
0x000000000041524d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x0000000000415ec5: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000041f3cd: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0x4b; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000045a7ed: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0xc1; pop rbx; ret; 
0x000000000043639d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x000000000043921d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], ah; ret; 
0x000000000043920d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], dl; ret; 
0x00000000004828cd: add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0xc22948c0; jbe 0x82910; add rax, rdi; ret; 
0x0000000000498c2d: add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0xc22948c0; jbe 0x98c70; add rax, rdi; ret; 
0x00000000004391fd: add byte ptr [rax], al; add byte ptr [rdi], cl; mov esp, 0xf80148c0; ret; 
0x0000000000470235: add byte ptr [rax], al; add byte ptr [rdi], cl; test dword ptr [rax + 0x48000000], ebx; add esp, 0x98; ret; 
0x0000000000402af6: add byte ptr [rax], al; add byte ptr [rdi], cl; test dword ptr [rax + 0x48000000], edx; add esp, 0xc8; ret; 
0x000000000049e58f: add byte ptr [rax], al; add byte ptr [rdi], cl; test dword ptr [rbp], edi; add byte ptr [rax], al; leave; ret; 
0x000000000045c263: add byte ptr [rax], al; add byte ptr [rdi], cl; test dword ptr [rcx + 0x48000000], ebx; add esp, 0x68; ret; 
0x0000000000406110: add byte ptr [rax], al; add byte ptr [rdi], cl; xchg eax, esp; ret 0x5422; 
0x000000000040a872: add byte ptr [rax], al; add byte ptr [rdx - 0x21], bh; cmovne eax, edx; ret; 
0x0000000000429729: add byte ptr [rax], al; add byte ptr [rdx], al; jbe 0x29730; ret; 
0x000000000040a421: add byte ptr [rax], al; add byte ptr [rsi + 0x22], dh; cmp edi, 0xc0000008; jne 0xa4a0; mov rax, 0x4ded80; ret; 
0x000000000040a3de: add byte ptr [rax], al; add byte ptr [rsi + 0x53], dh; cmp edi, 0x16; jne 0xa4a0; mov rax, 0x4def00; ret; 
0x0000000000426180: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xbeb1c]; syscall; ret; 
0x0000000000497e5c: add byte ptr [rax], al; add byte ptr [rsi + 0x81], bh; mov eax, 0xca; syscall; ret; 
0x0000000000439e84: add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000428661: add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; out dx, eax; ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x00000000004827c2: add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; xlatb; ret 0xc085; 
0x000000000042978a: add byte ptr [rax], al; add byte ptr [rsi + 1], dh; ret; 
0x0000000000454efb: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, [rdx]; ret; 
0x0000000000452bdb: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov dword ptr [rcx], edx; mov byte ptr [rcx + 4], dl; ret; 
0x00000000004563fb: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov dword ptr [rdi], edx; mov byte ptr [rdi + 4], dl; ret; 
0x00000000004553db: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000452bab: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov word ptr [rcx], dx; ret; 
0x00000000004563cb: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; mov word ptr [rdi], dx; ret; 
0x0000000000456b6b: add byte ptr [rax], al; add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x0000000000450bdd: add byte ptr [rax], al; add byte ptr [rsi - 0x75], ah; add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x000000000046f046: add byte ptr [rax], al; add cl, ch; mov dl, 5; add byte ptr [rax], al; nop; ret; 
0x000000000040da16: add byte ptr [rax], al; add cl, ch; ret 0x2e; 
0x000000000040d9a6: add byte ptr [rax], al; add cl, ch; ret 0x2f; 
0x0000000000495785: add byte ptr [rax], al; add cl, ch; ret 0xffe2; 
0x00000000004a6383: add byte ptr [rax], al; add cl, ch; ret 0xfffd; 
0x0000000000407577: add byte ptr [rax], al; add cl, ch; ret; 
0x000000000040203d: add byte ptr [rax], al; add cl, cl; ret; 
0x000000000042972a: add byte ptr [rax], al; add dh, byte ptr [rsi + 1]; ret; 
0x000000000049b9f7: add byte ptr [rax], al; add dh, dh; add eax, 0x49f1f; jne 0x9ba08; ret; 
0x0000000000460973: add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x0000000000458621: add byte ptr [rax], al; add dh, dh; ret 0x7501; 
0x000000000049628d: add byte ptr [rax], al; add dh, dh; ret 0xf50; 
0x0000000000410cdd: add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rbx + 0xd40b415], cl; add dh, dh; ret 0x7408; 
0x00000000004841ee: add byte ptr [rax], al; add rax, 3; ret; 
0x0000000000482673: add byte ptr [rax], al; add rax, rdi; add rax, rcx; ret; 
0x0000000000483360: add byte ptr [rax], al; add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x00000000004829a0: add byte ptr [rax], al; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000000042da2f: add byte ptr [rax], al; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000000408614: add byte ptr [rax], al; add rsp, 0x18; pop rbx; pop r12; ret; 
0x0000000000421f04: add byte ptr [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000042eb5e: add byte ptr [rax], al; add rsp, 0x18; ret; 
0x0000000000403248: add byte ptr [rax], al; add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x00000000004a3b5e: add byte ptr [rax], al; add rsp, 0x278; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000004263a7: add byte ptr [rax], al; add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a1417: add byte ptr [rax], al; add rsp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x00000000004228b1: add byte ptr [rax], al; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000004050e8: add byte ptr [rax], al; add rsp, 0x48; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000045bfe9: add byte ptr [rax], al; add rsp, 0x68; pop rbp; pop r12; ret; 
0x000000000045c26a: add byte ptr [rax], al; add rsp, 0x68; ret; 
0x00000000004a0e10: add byte ptr [rax], al; add rsp, 0x78; pop rbp; pop r12; ret; 
0x00000000004a0b3d: add byte ptr [rax], al; add rsp, 0x98; pop rbp; pop r12; ret; 
0x00000000004115f0: add byte ptr [rax], al; add rsp, 0x98; ret; 
0x000000000047faa7: add byte ptr [rax], al; add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x000000000046d35c: add byte ptr [rax], al; add rsp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000402afd: add byte ptr [rax], al; add rsp, 0xc8; ret; 
0x00000000004028be: add byte ptr [rax], al; add rsp, 8; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x00000000004222c9: add byte ptr [rax], al; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000047fd14: add byte ptr [rax], al; add rsp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x00000000004986b5: add byte ptr [rax], al; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000402e6e: add byte ptr [rax], al; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000407e89: add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004916d9: add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000040284e: add byte ptr [rax], al; add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000408d1e: add byte ptr [rax], al; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000410d36: add byte ptr [rax], al; and byte ptr [rax], al; add dh, dh; ret 0x7440; 
0x000000000045a836: add byte ptr [rax], al; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000043a8c1: add byte ptr [rax], al; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000043b193: add byte ptr [rax], al; and ecx, 0xff; sub eax, ecx; ret; 
0x000000000043a8c6: add byte ptr [rax], al; and ecx, 0xffff; sub eax, ecx; ret; 
0x00000000004391fe: add byte ptr [rax], al; bsf eax, eax; add rax, rdi; ret; 
0x000000000043920e: add byte ptr [rax], al; bsf eax, eax; lea rax, [rax + rdi + 0x10]; ret; 
0x000000000043921e: add byte ptr [rax], al; bsf eax, eax; lea rax, [rax + rdi + 0x20]; ret; 
0x00000000004828ce: add byte ptr [rax], al; bsf eax, eax; sub rdx, rax; jbe 0x82910; add rax, rdi; ret; 
0x0000000000498c2e: add byte ptr [rax], al; bsf eax, eax; sub rdx, rax; jbe 0x98c70; add rax, rdi; ret; 
0x0000000000483160: add byte ptr [rax], al; bsf rax, rdx; ret; 
0x0000000000483e24: add byte ptr [rax], al; bsf rax, rdx; shr rax, 2; ret; 
0x00000000004331be: add byte ptr [rax], al; bsf rdx, rdx; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000482c48: add byte ptr [rax], al; bsr rax, rax; add rax, rdi; ret; 
0x0000000000482ce2: add byte ptr [rax], al; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x000000000049e98e: add byte ptr [rax], al; bts rax, 0x30; mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x000000000049e81e: add byte ptr [rax], al; bts rsi, 0x34; mov eax, 1; mov qword ptr [rdi], rsi; ret; 
0x0000000000423309: add byte ptr [rax], al; call 0x22ea0; endbr64; cmp qword ptr [rip + 0xbec84], 0; je 0x2331f; ret; 
0x0000000000402233: add byte ptr [rax], al; call 0x34a0; mov dword ptr [rip + 0xe2090], ebx; xor eax, eax; pop rbx; ret; 
0x000000000049ee0b: add byte ptr [rax], al; cmove edx, eax; call 0x88c80; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000045a7e2: add byte ptr [rax], al; cmove rax, rcx; ret; 
0x0000000000431cee: add byte ptr [rax], al; cmove rax, rdx; ret; 
0x000000000040dbf0: add byte ptr [rax], al; cmovne r12, rax; mov rax, r12; pop r12; ret; 
0x000000000042979f: add byte ptr [rax], al; cmovne rax, rdx; mov qword ptr [rip + 0xbb58c], rax; ret; 
0x0000000000430eee: add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x000000000040b673: add byte ptr [rax], al; cmovns eax, edx; add rsp, 8; ret; 
0x00000000004a4586: add byte ptr [rax], al; cmp al, 0x50; jne 0xa45b3; xor eax, eax; add rsp, 8; ret; 
0x00000000004a45e6: add byte ptr [rax], al; cmp al, 0x50; jne 0xa4613; xor eax, eax; add rsp, 8; ret; 
0x00000000004a5f96: add byte ptr [rax], al; cmp al, 0x50; jne 0xa5fbb; xor eax, eax; add rsp, 8; ret; 
0x00000000004a4508: add byte ptr [rax], al; cmp dil, 3; jne 0xa4530; add rsp, 8; ret; 
0x0000000000458ad8: add byte ptr [rax], al; cmp eax, ecx; jne 0x58b95; xor eax, eax; ret; 
0x000000000040a3be: add byte ptr [rax], al; cmp edi, 0x40000028; jne 0xa4a0; mov rax, 0x4decc0; ret; 
0x000000000040a3fe: add byte ptr [rax], al; cmp edi, 0xc00000b7; jne 0xa4a0; mov rax, 0x4e11e0; ret; 
0x000000000040aac4: add byte ptr [rax], al; cmp edx, 0x18; ja 0xaad8; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000040b744: add byte ptr [rax], al; cmp edx, 0x18; ja 0xb758; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000040c264: add byte ptr [rax], al; cmp edx, 0x18; ja 0xc278; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000040cda4: add byte ptr [rax], al; cmp edx, 0x18; ja 0xcdb8; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000000480d39: add byte ptr [rax], al; cmp qword ptr [rax + 0x30], 0; je 0x80d48; ret; 
0x00000000004a435b: add byte ptr [rax], al; cmp qword ptr [rsi + 8], rcx; ja 0xa4365; sbb eax, eax; ret; 
0x0000000000430e40: add byte ptr [rax], al; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x000000000048f690: add byte ptr [rax], al; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000048f0d6: add byte ptr [rax], al; cmp rax, r8; ja 0x8f0e8; add rsp, 8; ret; 
0x000000000045a2e0: add byte ptr [rax], al; cmp rdx, 0x20; ja 0x5a2f3; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045a4d3: add byte ptr [rax], al; cmp rdx, rcx; jne 0x5a4bb; vzeroupper; ret; 
0x000000000045a696: add byte ptr [rax], al; cmp rdx, rcx; jne 0x5a676; vzeroupper; ret; 
0x000000000042a5b0: add byte ptr [rax], al; cmpxchg dword ptr [rip + 0xb8227], edx; lea rax, [rip + 0xb8220]; add rsp, 0x10; pop rbp; ret; 
0x0000000000426dee: add byte ptr [rax], al; endbr64; cmp qword ptr [rdi + 0x38], 0; je 0x26e00; ret; 
0x00000000004612fe: add byte ptr [rax], al; endbr64; lea rax, [rip + 0x81f55]; ret; 
0x0000000000426eae: add byte ptr [rax], al; endbr64; mov eax, 0xffffffff; ret; 
0x00000000004a5cce: add byte ptr [rax], al; endbr64; mov eax, dword ptr [rdi]; test eax, eax; jne 0xa5ce0; ret; 
0x000000000046fdbe: add byte ptr [rax], al; endbr64; mov rax, -0x10; add rax, qword ptr fs:[0]; ret; 
0x000000000046fdde: add byte ptr [rax], al; endbr64; mov rax, -0x18; add rax, qword ptr fs:[0]; ret; 
0x000000000046fdfe: add byte ptr [rax], al; endbr64; mov rax, -0x20; add rax, qword ptr fs:[0]; ret; 
0x0000000000411ace: add byte ptr [rax], al; endbr64; mov rax, -0x40; add rax, qword ptr fs:[0]; ret; 
0x000000000048fa5e: add byte ptr [rax], al; endbr64; mov rax, -0x40; pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x000000000042881e: add byte ptr [rax], al; endbr64; mov rax, -1; ret; 
0x00000000004916ee: add byte ptr [rax], al; endbr64; mov rax, qword ptr [rax + 8]; sub rax, qword ptr fs:[0]; ret; 
0x000000000042887e: add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi + 0x68]; ret; 
0x00000000004a399e: add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000042971e: add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi]; cmp rax, 0x2000000; jbe 0x29730; ret; 
0x000000000049bfce: add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi]; cmp rax, rsi; je 0x9bfe0; ret; 
0x000000000042976e: add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi]; nop; mov dword ptr [rip + 0xbb5b6], eax; ret; 
0x00000000004293de: add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi]; nop; mov qword ptr [rip + 0xb93b9], rax; ret; 
0x000000000042935e: add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi]; nop; mov qword ptr [rip + 0xb93f1], rax; ret; 
0x000000000046d1fe: add byte ptr [rax], al; endbr64; mov rax, qword ptr [rip + 0x77c45]; ret; 
0x000000000046384e: add byte ptr [rax], al; endbr64; mov rax, qword ptr [rip + 0x821ad]; ret; 
0x000000000042885e: add byte ptr [rax], al; endbr64; mov rax, qword ptr [rip + 0xb98f5]; ret; 
0x000000000042888e: add byte ptr [rax], al; endbr64; mov rax, rdi; ret; 
0x000000000040316e: add byte ptr [rax], al; endbr64; movzx edi, dil; mov dword ptr [rip + 0xdef8a], edi; ret; 
0x000000000042884e: add byte ptr [rax], al; endbr64; ret; 
0x00000000004830be: add byte ptr [rax], al; endbr64; test rsi, rsi; jne 0x830cd; xor rax, rax; ret; 
0x00000000004278ae: add byte ptr [rax], al; endbr64; xor eax, eax; ret; 
0x0000000000401cac: add byte ptr [rax], al; hlt; nop; endbr64; ret; 
0x000000000045a5d5: add byte ptr [rax], al; ja 0x5a5eb; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000045a575: add byte ptr [rax], al; ja 0x5a5f4; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000042938b: add byte ptr [rax], al; jbe 0x29390; ret; 
0x00000000004293cb: add byte ptr [rax], al; jbe 0x293d0; ret; 
0x000000000042978b: add byte ptr [rax], al; jbe 0x29790; ret; 
0x000000000040a39c: add byte ptr [rax], al; jbe 0xa3f4; cmp edi, 0xe0000008; jne 0xa4a0; mov rax, 0x4dee00; ret; 
0x000000000040a3df: add byte ptr [rax], al; jbe 0xa436; cmp edi, 0x16; jne 0xa4a0; mov rax, 0x4def00; ret; 
0x000000000040a422: add byte ptr [rax], al; jbe 0xa448; cmp edi, 0xc0000008; jne 0xa4a0; mov rax, 0x4ded80; ret; 
0x000000000042331a: add byte ptr [rax], al; je 0x2331f; ret; 
0x0000000000431913: add byte ptr [rax], al; je 0x318e1; lea rax, [rip + 0x7e61]; test byte ptr [rip + 0xb34bf], 1; je 0x318e1; ret; 
0x000000000044e8cd: add byte ptr [rax], al; je 0x4e950; mov byte ptr [rdi], 0; vzeroupper; ret; 
0x0000000000456fdd: add byte ptr [rax], al; je 0x57060; mov byte ptr [rdi], 0; lea rax, [rdi]; vzeroupper; ret; 
0x000000000048efa7: add byte ptr [rax], al; je 0x8efac; lock inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x000000000041e1aa: add byte ptr [rax], al; jne 0x1e1d4; mov eax, r8d; add rsp, 0x118; ret; 
0x000000000041f946: add byte ptr [rax], al; jne 0x1f952; add rsp, 0xd8; ret; 
0x0000000000421efe: add byte ptr [rax], al; jne 0x21f9a; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000004228ab: add byte ptr [rax], al; jne 0x2299c; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000428535: add byte ptr [rax], al; jne 0x28548; sub edx, dword ptr [rax + 0x18]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000402961: add byte ptr [rax], al; jne 0x2987; add rsp, 0x18; pop rbp; pop r12; ret; 
0x0000000000402af7: add byte ptr [rax], al; jne 0x2b8f; add rsp, 0xc8; ret; 
0x0000000000402ca7: add byte ptr [rax], al; jne 0x2d3f; add rsp, 0xc8; ret; 
0x000000000042d66a: add byte ptr [rax], al; jne 0x2d674; add rsp, 0x10; pop rbp; ret; 
0x0000000000403242: add byte ptr [rax], al; jne 0x3355; add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x0000000000439982: add byte ptr [rax], al; jne 0x39890; ret; 
0x0000000000404fe8: add byte ptr [rax], al; jne 0x4ff1; add rsp, 0x48; ret; 
0x000000000040534b: add byte ptr [rax], al; jne 0x536c; add rsp, 0x10; pop rbp; ret; 
0x000000000045aee1: add byte ptr [rax], al; jne 0x5af04; add rsp, 0x20; pop rbx; ret; 
0x000000000045be89: add byte ptr [rax], al; jne 0x5bea1; add rsp, 0x28; ret; 
0x000000000045bfe3: add byte ptr [rax], al; jne 0x5c091; add rsp, 0x68; pop rbp; pop r12; ret; 
0x000000000045c264: add byte ptr [rax], al; jne 0x5c305; add rsp, 0x68; ret; 
0x000000000045cbb9: add byte ptr [rax], al; jne 0x5cc03; add rsp, 0x68; ret; 
0x000000000045cc48: add byte ptr [rax], al; jne 0x5cc93; add rsp, 0x18; ret; 
0x000000000045cd00: add byte ptr [rax], al; jne 0x5cd4b; add rsp, 0x58; ret; 
0x000000000045cd9e: add byte ptr [rax], al; jne 0x5cdeb; add rsp, 0x58; ret; 
0x000000000045cfdc: add byte ptr [rax], al; jne 0x5cfe5; add rsp, 0x28; ret; 
0x000000000045f778: add byte ptr [rax], al; jne 0x5f786; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000045f808: add byte ptr [rax], al; jne 0x5f816; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000045f9df: add byte ptr [rax], al; jne 0x5f9eb; add rsp, 0xd8; ret; 
0x000000000046fec3: add byte ptr [rax], al; jne 0x6fecc; add rsp, 0x18; ret; 
0x000000000047013e: add byte ptr [rax], al; jne 0x70184; mov eax, r9d; add rsp, 0x148; ret; 
0x0000000000470236: add byte ptr [rax], al; jne 0x702d6; add rsp, 0x98; ret; 
0x0000000000471f76: add byte ptr [rax], al; jne 0x71f82; add rsp, 0xd8; ret; 
0x00000000004818b1: add byte ptr [rax], al; jne 0x8189c; and r11d, 0xffffffbb; cmp r11d, 0xa; je 0x818c0; ret; 
0x0000000000484e91: add byte ptr [rax], al; jne 0x84eca; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x0000000000485031: add byte ptr [rax], al; jne 0x8503d; movzx eax, al; add rsp, 0x58; ret; 
0x00000000004850eb: add byte ptr [rax], al; jne 0x85114; mov eax, r9d; add rsp, 0x38; ret; 
0x000000000040860e: add byte ptr [rax], al; jne 0x873f; add rsp, 0x18; pop rbx; pop r12; ret; 
0x0000000000408b0a: add byte ptr [rax], al; jne 0x8b13; add rsp, 0x18; ret; 
0x000000000048f139: add byte ptr [rax], al; jne 0x8f150; mov r8, qword ptr [rip + 0x5632c]; mov rax, r8; ret; 
0x00000000004918cc: add byte ptr [rax], al; jne 0x918d6; add rsp, 0x20; pop rbx; ret; 
0x00000000004919c7: add byte ptr [rax], al; jne 0x919f3; add rsp, 0x38; ret; 
0x0000000000491a93: add byte ptr [rax], al; jne 0x91ac4; add rsp, 0x58; ret; 
0x0000000000491c05: add byte ptr [rax], al; jne 0x91c44; add rsp, 0x68; ret; 
0x0000000000491f23: add byte ptr [rax], al; jne 0x91f54; add rsp, 0x58; ret; 
0x000000000049231a: add byte ptr [rax], al; jne 0x9236f; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000000492713: add byte ptr [rax], al; jne 0x92735; add rsp, 0x38; ret; 
0x0000000000497f59: add byte ptr [rax], al; jne 0x98135; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000498438: add byte ptr [rax], al; jne 0x98460; mov rdx, qword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x00000000004984ba: add byte ptr [rax], al; jne 0x984c3; add rsp, 0x28; ret; 
0x00000000004985a8: add byte ptr [rax], al; jne 0x985b1; add rsp, 0x38; ret; 
0x000000000049e590: add byte ptr [rax], al; jne 0x9e615; leave; ret; 
0x000000000049eb23: add byte ptr [rax], al; jne 0x9eb2c; add rsp, 0x38; ret; 
0x000000000049ec28: add byte ptr [rax], al; jne 0x9ec36; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x000000000049ed06: add byte ptr [rax], al; jne 0x9ed14; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x00000000004a0b37: add byte ptr [rax], al; jne 0xa0d65; add rsp, 0x98; pop rbp; pop r12; ret; 
0x00000000004a0e0a: add byte ptr [rax], al; jne 0xa0fa4; add rsp, 0x78; pop rbp; pop r12; ret; 
0x00000000004a28da: add byte ptr [rax], al; jne 0xa28e5; cmp qword ptr [r9 + 0x38], 0; je 0xa2934; add rsp, 0x18; ret; 
0x000000000040a3c3: add byte ptr [rax], al; jne 0xa4a0; mov rax, 0x4decc0; ret; 
0x000000000048b100: add byte ptr [rax], al; lea rax, [rax + rdx*4]; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000048b0ce: add byte ptr [rax], al; lea rax, [rax + rdx*4]; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x00000000004573ee: add byte ptr [rax], al; lea rax, [rdi + 0xa]; ret; 
0x00000000004573fe: add byte ptr [rax], al; lea rax, [rdi + 0xb]; ret; 
0x000000000045740e: add byte ptr [rax], al; lea rax, [rdi + 0xc]; ret; 
0x000000000045741e: add byte ptr [rax], al; lea rax, [rdi + 0xd]; ret; 
0x000000000045742e: add byte ptr [rax], al; lea rax, [rdi + 0xe]; ret; 
0x000000000045734d: add byte ptr [rax], al; lea rax, [rdi + 0xf]; ret; 
0x000000000045737e: add byte ptr [rax], al; lea rax, [rdi + 2]; ret; 
0x000000000045738e: add byte ptr [rax], al; lea rax, [rdi + 3]; ret; 
0x000000000045739e: add byte ptr [rax], al; lea rax, [rdi + 4]; ret; 
0x00000000004573ae: add byte ptr [rax], al; lea rax, [rdi + 5]; ret; 
0x00000000004573be: add byte ptr [rax], al; lea rax, [rdi + 6]; ret; 
0x00000000004572fa: add byte ptr [rax], al; lea rax, [rdi + 7]; ret; 
0x00000000004573ce: add byte ptr [rax], al; lea rax, [rdi + 8]; ret; 
0x00000000004573de: add byte ptr [rax], al; lea rax, [rdi + 9]; ret; 
0x000000000044db0d: add byte ptr [rax], al; lea rax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x0000000000481cd7: add byte ptr [rax], al; lea rax, [rip + 0x13e0]; cmove rax, rdx; ret; 
0x0000000000498660: add byte ptr [rax], al; lea rax, [rip + 0x67]; cmovne rax, rdx; ret; 
0x00000000004988d7: add byte ptr [rax], al; lea rax, [rip + 0x70]; cmove rax, rdx; ret; 
0x0000000000431ce7: add byte ptr [rax], al; lea rax, [rip + 0x7330]; cmove rax, rdx; ret; 
0x0000000000481dd7: add byte ptr [rax], al; lea rax, [rip + 0x810]; cmove rax, rdx; ret; 
0x0000000000483627: add byte ptr [rax], al; lea rax, [rip + 0x9b0]; cmove rax, rdx; ret; 
0x000000000040d7de: add byte ptr [rax], al; lea rax, [rip + 0x9bd77]; ret; 
0x000000000040d7be: add byte ptr [rax], al; lea rax, [rip + 0x9bd80]; ret; 
0x000000000040d7ae: add byte ptr [rax], al; lea rax, [rip + 0x9bd84]; ret; 
0x000000000040d79e: add byte ptr [rax], al; lea rax, [rip + 0x9bd8c]; ret; 
0x000000000040d7ce: add byte ptr [rax], al; lea rax, [rip + 0x9bd8e]; ret; 
0x000000000040d78e: add byte ptr [rax], al; lea rax, [rip + 0x9bd8f]; ret; 
0x000000000040d766: add byte ptr [rax], al; lea rax, [rip + 0x9bdb0]; ret; 
0x000000000040d81e: add byte ptr [rax], al; lea rax, [rip + 0x9bdba]; ret; 
0x000000000040d77e: add byte ptr [rax], al; lea rax, [rip + 0x9bdcc]; ret; 
0x000000000040d80e: add byte ptr [rax], al; lea rax, [rip + 0x9bdd1]; ret; 
0x000000000040d7fe: add byte ptr [rax], al; lea rax, [rip + 0x9bde8]; ret; 
0x000000000040d7ee: add byte ptr [rax], al; lea rax, [rip + 0x9bdff]; ret; 
0x000000000040cc9e: add byte ptr [rax], al; lea rax, [rip + 0x9c8b7]; ret; 
0x000000000040cc7e: add byte ptr [rax], al; lea rax, [rip + 0x9c8c0]; ret; 
0x000000000040cc6e: add byte ptr [rax], al; lea rax, [rip + 0x9c8c4]; ret; 
0x000000000040cc5e: add byte ptr [rax], al; lea rax, [rip + 0x9c8cc]; ret; 
0x000000000040cc8e: add byte ptr [rax], al; lea rax, [rip + 0x9c8ce]; ret; 
0x000000000040cc4e: add byte ptr [rax], al; lea rax, [rip + 0x9c8cf]; ret; 
0x000000000040cc26: add byte ptr [rax], al; lea rax, [rip + 0x9c8f0]; ret; 
0x000000000040ccde: add byte ptr [rax], al; lea rax, [rip + 0x9c8fa]; ret; 
0x000000000040cc3e: add byte ptr [rax], al; lea rax, [rip + 0x9c90c]; ret; 
0x000000000040ccce: add byte ptr [rax], al; lea rax, [rip + 0x9c911]; ret; 
0x000000000040ccbe: add byte ptr [rax], al; lea rax, [rip + 0x9c928]; ret; 
0x000000000040ccae: add byte ptr [rax], al; lea rax, [rip + 0x9c93f]; ret; 
0x000000000040c15e: add byte ptr [rax], al; lea rax, [rip + 0x9d3f7]; ret; 
0x000000000040c13e: add byte ptr [rax], al; lea rax, [rip + 0x9d400]; ret; 
0x000000000040c12e: add byte ptr [rax], al; lea rax, [rip + 0x9d404]; ret; 
0x000000000040c11e: add byte ptr [rax], al; lea rax, [rip + 0x9d40c]; ret; 
0x000000000040c14e: add byte ptr [rax], al; lea rax, [rip + 0x9d40e]; ret; 
0x000000000040c10e: add byte ptr [rax], al; lea rax, [rip + 0x9d40f]; ret; 
0x000000000040c0e6: add byte ptr [rax], al; lea rax, [rip + 0x9d430]; ret; 
0x000000000040c19e: add byte ptr [rax], al; lea rax, [rip + 0x9d43a]; ret; 
0x000000000040c0fe: add byte ptr [rax], al; lea rax, [rip + 0x9d44c]; ret; 
0x000000000040c18e: add byte ptr [rax], al; lea rax, [rip + 0x9d451]; ret; 
0x000000000040c17e: add byte ptr [rax], al; lea rax, [rip + 0x9d468]; ret; 
0x000000000040c16e: add byte ptr [rax], al; lea rax, [rip + 0x9d47f]; ret; 
0x000000000040b55e: add byte ptr [rax], al; lea rax, [rip + 0x9e014]; ret; 
0x000000000040b54e: add byte ptr [rax], al; lea rax, [rip + 0x9e01c]; ret; 
0x000000000040b53e: add byte ptr [rax], al; lea rax, [rip + 0x9e023]; ret; 
0x000000000040b52e: add byte ptr [rax], al; lea rax, [rip + 0x9e02e]; ret; 
0x000000000040b51e: add byte ptr [rax], al; lea rax, [rip + 0x9e037]; ret; 
0x000000000040b4fe: add byte ptr [rax], al; lea rax, [rip + 0x9e040]; ret; 
0x000000000040b4ee: add byte ptr [rax], al; lea rax, [rip + 0x9e044]; ret; 
0x000000000040b4de: add byte ptr [rax], al; lea rax, [rip + 0x9e04c]; ret; 
0x000000000040b4ce: add byte ptr [rax], al; lea rax, [rip + 0x9e04f]; ret; 
0x000000000040b4ae: add byte ptr [rax], al; lea rax, [rip + 0x9e077]; ret; 
0x000000000040b4be: add byte ptr [rax], al; lea rax, [rip + 0x9e08c]; ret; 
0x000000000040b50e: add byte ptr [rax], al; lea rax, [rip + 0xc02d8]; ret; 
0x0000000000481d17: add byte ptr [rax], al; lea rax, [rip + 0xed0]; cmove rax, rdx; ret; 
0x0000000000437c7d: add byte ptr [rax], al; lea rcx, [rdx + rcx - 0x10]; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x00000000004234e3: add byte ptr [rax], al; lea rcx, [rip + 0xc0794]; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x000000000042d249: add byte ptr [rax], al; lea rdi, [rip + 0xb558e]; syscall; pop rbp; ret; 
0x000000000042e3b5: add byte ptr [rax], al; lea rdi, [rip + 0xb6962]; syscall; pop rbx; ret; 
0x000000000042618b: add byte ptr [rax], al; lea rdi, [rip + 0xbeb1c]; syscall; ret; 
0x0000000000431996: add byte ptr [rax], al; lea rdx, [rip + 0x118b1]; cmovne rax, rdx; ret; 
0x00000000004310a7: add byte ptr [rax], al; lea rdx, [rip + 0x1fc30]; cmovne rax, rdx; ret; 
0x0000000000430ee7: add byte ptr [rax], al; lea rdx, [rip + 0x25b0]; cmovne rax, rdx; ret; 
0x00000000004318f8: add byte ptr [rax], al; lea rdx, [rip + 0x25b3f]; cmovne rax, rdx; ret; 
0x0000000000483d47: add byte ptr [rax], al; lea rdx, [rip + 0x30]; cmovne rax, rdx; ret; 
0x0000000000431051: add byte ptr [rax], al; lea rdx, [rip + 0x5356]; cmovne rax, rdx; ret; 
0x0000000000431c66: add byte ptr [rax], al; lea rdx, [rip + 0xeaf1]; cmovne rax, rdx; ret; 
0x0000000000431af6: add byte ptr [rax], al; lea rdx, [rip + 0xec41]; cmovne rax, rdx; ret; 
0x00000000004995fb: add byte ptr [rax], al; lea rsi, [rip + 0x329e4]; lea rdi, [rip + 0x329f5]; call 0x11c50; endbr64; ret; 
0x0000000000401e86: add byte ptr [rax], al; leave; ret; 
0x0000000000454f0e: add byte ptr [rax], al; mov ax, word ptr [rcx]; mov word ptr [rdx], ax; lea rax, [rdx + 1]; ret; 
0x0000000000450bde: add byte ptr [rax], al; mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x0000000000456a0e: add byte ptr [rax], al; mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x00000000004553ce: add byte ptr [rax], al; mov byte ptr [rdi], dh; ret; 
0x0000000000455c2e: add byte ptr [rax], al; mov byte ptr [rdi], dh; sub r8, 1; lea rdi, [rdi + 1]; jne 0x564f0; ret; 
0x00000000004560de: add byte ptr [rax], al; mov cx, word ptr [rsi]; mov dl, byte ptr [rsi + 2]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dl; ret; 
0x0000000000456a2e: add byte ptr [rax], al; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x00000000004553ee: add byte ptr [rax], al; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x0000000000424fac: add byte ptr [rax], al; mov dword ptr [rbx + 0x70], 0xffffffff; pop rbx; ret; 
0x0000000000452bfe: add byte ptr [rax], al; mov dword ptr [rcx], edx; mov dword ptr [rcx + 3], edx; ret; 
0x0000000000452bee: add byte ptr [rax], al; mov dword ptr [rcx], edx; mov word ptr [rcx + 4], dx; ret; 
0x0000000000452bce: add byte ptr [rax], al; mov dword ptr [rcx], edx; ret; 
0x000000000045640e: add byte ptr [rax], al; mov dword ptr [rdi], edx; mov word ptr [rdi + 4], dx; ret; 
0x000000000049e900: add byte ptr [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000000429760: add byte ptr [rax], al; mov dword ptr [rip + 0xb9004], eax; ret; 
0x0000000000402238: add byte ptr [rax], al; mov dword ptr [rip + 0xe2090], ebx; xor eax, eax; pop rbx; ret; 
0x00000000004020a0: add byte ptr [rax], al; mov dword ptr [rip + 0xe2228], eax; add rsp, 8; ret; 
0x000000000044314e: add byte ptr [rax], al; mov dx, word ptr [rsi + 1]; mov cx, word ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x0000000000456a1e: add byte ptr [rax], al; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, [rdi + 1]; ret; 
0x00000000004560ce: add byte ptr [rax], al; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000042d244: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xb558e]; syscall; pop rbp; ret; 
0x000000000042e3b0: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xb6962]; syscall; pop rbx; ret; 
0x0000000000426186: add byte ptr [rax], al; mov eax, 0xca; lea rdi, [rip + 0xbeb1c]; syscall; ret; 
0x0000000000497e62: add byte ptr [rax], al; mov eax, 0xca; syscall; ret; 
0x000000000040aeae: add byte ptr [rax], al; mov eax, 0xffffff20; ret; 
0x000000000040aece: add byte ptr [rax], al; mov eax, 0xffffff8a; ret; 
0x000000000040aebe: add byte ptr [rax], al; mov eax, 0xffffff97; ret; 
0x000000000040aeee: add byte ptr [rax], al; mov eax, 0xffffff99; ret; 
0x000000000040aede: add byte ptr [rax], al; mov eax, 0xffffff9a; ret; 
0x0000000000403496: add byte ptr [rax], al; mov eax, 0xffffffa1; ret; 
0x000000000040a9e6: add byte ptr [rax], al; mov eax, 0xffffffdf; ret; 
0x0000000000402c56: add byte ptr [rax], al; mov eax, 0xffffffea; ret; 
0x0000000000408b4e: add byte ptr [rax], al; mov eax, 0xfffffff3; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004716fc: add byte ptr [rax], al; mov eax, 0xffffffff; pop rbp; pop r12; pop r13; ret; 
0x0000000000421e1e: add byte ptr [rax], al; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000000422bde: add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x000000000049e80f: add byte ptr [rax], al; mov eax, 1; ret; 
0x000000000049e982: add byte ptr [rax], al; mov eax, 2; ret; 
0x0000000000408a7e: add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x10]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408a8e: add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x14]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408a9e: add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x18]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408aae: add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x1c]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408abe: add byte ptr [rax], al; mov eax, dword ptr [rdi + 0x20]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408a6e: add byte ptr [rax], al; mov eax, dword ptr [rdi + 0xc]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408a4e: add byte ptr [rax], al; mov eax, dword ptr [rdi + 4]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408a5e: add byte ptr [rax], al; mov eax, dword ptr [rdi + 8]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000464ce6: add byte ptr [rax], al; mov eax, dword ptr [rip + 0x8014e]; test eax, eax; je 0x64cf8; ret; 
0x000000000045a7b6: add byte ptr [rax], al; mov eax, ecx; pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x0000000000492323: add byte ptr [rax], al; mov eax, r12d; pop r12; ret; 
0x000000000042006a: add byte ptr [rax], al; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000046d363: add byte ptr [rax], al; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000041fd63: add byte ptr [rax], al; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000456a4e: add byte ptr [rax], al; mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x000000000045540e: add byte ptr [rax], al; mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; ret; 
0x00000000004560fe: add byte ptr [rax], al; mov ecx, dword ptr [rsi]; mov dl, byte ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov byte ptr [rdi + 4], dl; ret; 
0x000000000045541e: add byte ptr [rax], al; mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x000000000048524e: add byte ptr [rax], al; mov ecx, eax; and ecx, dword ptr [rsi + 0x10]; lea rcx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x000000000040a873: add byte ptr [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000044306e: add byte ptr [rax], al; mov edx, dword ptr [rsi + 1]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000442ffe: add byte ptr [rax], al; mov edx, dword ptr [rsi + 2]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000442f8e: add byte ptr [rax], al; mov edx, dword ptr [rsi + 3]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x00000000004430de: add byte ptr [rax], al; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x0000000000426181: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xbeb1c]; syscall; ret; 
0x0000000000497e5d: add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x000000000045fb86: add byte ptr [rax], al; mov qword ptr [rax + 0x20], rsi; ret; 
0x00000000004277d2: add byte ptr [rax], al; mov qword ptr [rax + 8], 0; ret; 
0x0000000000498428: add byte ptr [rax], al; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000407ea4: add byte ptr [rax], al; mov qword ptr [rbp + 0x18], rbx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000491844: add byte ptr [rax], al; mov qword ptr [rbx + 0x18], rax; pop rax; pop rdx; pop rbx; ret; 
0x000000000049eb96: add byte ptr [rax], al; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x000000000049ec5a: add byte ptr [rax], al; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x00000000004638b4: add byte ptr [rax], al; mov qword ptr [rbx], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000452c3e: add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov dword ptr [rcx + 7], edx; ret; 
0x0000000000452c4e: add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov dword ptr [rcx + 8], edx; ret; 
0x0000000000452c5e: add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 5], rdx; ret; 
0x0000000000452c6e: add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 6], rdx; ret; 
0x0000000000452c7e: add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 7], rdx; ret; 
0x0000000000452c8e: add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 8], rdx; ret; 
0x0000000000452c2e: add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov word ptr [rcx + 8], dx; ret; 
0x0000000000452c0e: add byte ptr [rax], al; mov qword ptr [rcx], rdx; ret; 
0x000000000045fb1e: add byte ptr [rax], al; mov qword ptr [rdi + 0x20], rsi; ret; 
0x000000000048b10a: add byte ptr [rax], al; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000048b0d8: add byte ptr [rax], al; mov qword ptr [rdi + 0x310], rax; ret; 
0x00000000004a398e: add byte ptr [rax], al; mov qword ptr [rdi + rsi*8], rdx; add rsp, 8; ret; 
0x000000000045641e: add byte ptr [rax], al; mov qword ptr [rdi - 1], rdx; ret; 
0x000000000045645e: add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov dword ptr [rdi + 7], edx; ret; 
0x000000000045646e: add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov dword ptr [rdi + 8], edx; ret; 
0x000000000045647e: add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 5], rdx; ret; 
0x000000000045648e: add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 6], rdx; ret; 
0x000000000044f0fe: add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov qword ptr [rdi + r8 - 8], rdx; vzeroupper; ret; 
0x000000000045644e: add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov word ptr [rdi + 8], dx; ret; 
0x000000000045642e: add byte ptr [rax], al; mov qword ptr [rdi], rdx; ret; 
0x000000000049e828: add byte ptr [rax], al; mov qword ptr [rdi], rsi; ret; 
0x0000000000407e82: add byte ptr [rax], al; mov qword ptr [rdx + 0xd0], rcx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000420648: add byte ptr [rax], al; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x00000000004a6711: add byte ptr [rax], al; mov qword ptr [rip + 0x3e576], rbx; test rbx, rbx; jne 0xa6700; pop rbx; ret; 
0x000000000042a6c3: add byte ptr [rax], al; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x000000000042a6b5: add byte ptr [rax], al; mov qword ptr [rip + 0xb810a], rax; lea rax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x0000000000429739: add byte ptr [rax], al; mov qword ptr [rip + 0xb900e], rax; ret; 
0x0000000000429710: add byte ptr [rax], al; mov qword ptr [rip + 0xb902f], rax; ret; 
0x00000000004296f0: add byte ptr [rax], al; mov qword ptr [rip + 0xb9047], rax; ret; 
0x000000000048e1a5: add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x8dad0; add rsp, 0xd8; ret; 
0x000000000046fe6d: add byte ptr [rax], al; mov qword ptr fs:[rdx], rax; ret; 
0x000000000043cc3e: add byte ptr [rax], al; mov r11, qword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004a16e6: add byte ptr [rax], al; mov r8, qword ptr [r8]; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x000000000048f039: add byte ptr [rax], al; mov r8, qword ptr [rip + 0x5642e]; jne 0x8f050; lea rax, [r8 + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x000000000045beee: add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000045d066: add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x0000000000485166: add byte ptr [rax], al; mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000000045d074: add byte ptr [rax], al; mov rax, -1; ret; 
0x000000000040a77e: add byte ptr [rax], al; mov rax, 0x4dec40; pop rbp; ret; 
0x000000000040a4de: add byte ptr [rax], al; mov rax, 0x4dec40; ret; 
0x000000000040a79e: add byte ptr [rax], al; mov rax, 0x4dec80; pop rbp; ret; 
0x000000000040a4ce: add byte ptr [rax], al; mov rax, 0x4dec80; ret; 
0x000000000040a78e: add byte ptr [rax], al; mov rax, 0x4decc0; pop rbp; ret; 
0x000000000040a3ca: add byte ptr [rax], al; mov rax, 0x4decc0; ret; 
0x000000000040a7de: add byte ptr [rax], al; mov rax, 0x4ded00; pop rbp; ret; 
0x000000000040a7ce: add byte ptr [rax], al; mov rax, 0x4ded40; pop rbp; ret; 
0x000000000040a47e: add byte ptr [rax], al; mov rax, 0x4ded40; ret; 
0x000000000040a7ee: add byte ptr [rax], al; mov rax, 0x4ded80; pop rbp; ret; 
0x000000000040a7be: add byte ptr [rax], al; mov rax, 0x4dedc0; pop rbp; ret; 
0x000000000040a36c: add byte ptr [rax], al; mov rax, 0x4dedc0; ret; 
0x000000000040a3aa: add byte ptr [rax], al; mov rax, 0x4dee00; ret; 
0x000000000040a4a6: add byte ptr [rax], al; mov rax, 0x4dee40; ret; 
0x000000000040a4ee: add byte ptr [rax], al; mov rax, 0x4dee80; ret; 
0x000000000040a46e: add byte ptr [rax], al; mov rax, 0x4deec0; ret; 
0x000000000040a3ea: add byte ptr [rax], al; mov rax, 0x4def00; ret; 
0x000000000040a48e: add byte ptr [rax], al; mov rax, 0x4e11a0; ret; 
0x000000000040a7ae: add byte ptr [rax], al; mov rax, 0x4e11e0; pop rbp; ret; 
0x000000000040a40a: add byte ptr [rax], al; mov rax, 0x4e11e0; ret; 
0x000000000040a4fe: add byte ptr [rax], al; mov rax, 0x4e1260; ret; 
0x000000000040a4be: add byte ptr [rax], al; mov rax, 0x4e12e0; ret; 
0x000000000048421e: add byte ptr [rax], al; mov rax, 2; ret; 
0x000000000048422e: add byte ptr [rax], al; mov rax, 3; ret; 
0x000000000048423e: add byte ptr [rax], al; mov rax, 4; ret; 
0x000000000048424e: add byte ptr [rax], al; mov rax, 5; ret; 
0x000000000048425e: add byte ptr [rax], al; mov rax, 6; ret; 
0x000000000048426e: add byte ptr [rax], al; mov rax, 7; ret; 
0x000000000042775d: add byte ptr [rax], al; mov rax, qword ptr [rax + 0x68]; test rax, rax; jne 0x27758; ret; 
0x00000000004983be: add byte ptr [rax], al; mov rax, qword ptr [rbx + 0x10]; mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004304a6: add byte ptr [rax], al; mov rax, qword ptr [rcx + rax + 8]; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x00000000004a1836: add byte ptr [rax], al; mov rax, qword ptr [rsi + 0xb0]; add rsp, 8; ret; 
0x00000000004a11ca: add byte ptr [rax], al; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000042e0b7: add byte ptr [rax], al; mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x000000000042c57f: add byte ptr [rax], al; mov rax, r8; ret; 
0x0000000000484601: add byte ptr [rax], al; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x000000000048348e: add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x0000000000415d65: add byte ptr [rax], al; mov rax, r9; pop rbx; pop rbp; pop r12; ret; 
0x000000000042472b: add byte ptr [rax], al; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a3b50: add byte ptr [rax], al; mov rax, rbp; pop rbx; pop rbp; ret; 
0x0000000000425086: add byte ptr [rax], al; mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x000000000045669e: add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000043cffe: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d1de: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d3be: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d5ae: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d7ae: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d9ae: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043ce1e: add byte ptr [rax], al; mov rcx, qword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000456a9e: add byte ptr [rax], al; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x000000000045544e: add byte ptr [rax], al; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x000000000045613e: add byte ptr [rax], al; mov rcx, qword ptr [rsi]; mov dl, byte ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov byte ptr [rdi + 8], dl; ret; 
0x000000000045545e: add byte ptr [rax], al; mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x00000000004595e3: add byte ptr [rax], al; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000045bed6: add byte ptr [rax], al; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000045c10e: add byte ptr [rax], al; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x0000000000498421: add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000420641: add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x0000000000442eae: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 1]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442e3e: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 2]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442dce: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 3]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442cee: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 5]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442c7e: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 6]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442c0e: add byte ptr [rax], al; mov rdx, qword ptr [rsi + 7]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442f1e: add byte ptr [rax], al; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000044f0de: add byte ptr [rax], al; mov word ptr [rdi], dx; mov word ptr [rdi + r8 - 2], dx; vzeroupper; ret; 
0x000000000044f0ce: add byte ptr [rax], al; mov word ptr [rdi], dx; vzeroupper; ret; 
0x00000000004561be: add byte ptr [rax], al; movdqu xmm0, xmmword ptr [rsi]; mov cl, byte ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], cl; ret; 
0x000000000045622e: add byte ptr [rax], al; movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x000000000045561e: add byte ptr [rax], al; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x00000000004554ce: add byte ptr [rax], al; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000045a27a: add byte ptr [rax], al; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045649e: add byte ptr [rax], al; movdqu xmmword ptr [rdi - 1], xmm0; ret; 
0x00000000004564ae: add byte ptr [rax], al; movdqu xmmword ptr [rdi], xmm0; ret; 
0x00000000004594f9: add byte ptr [rax], al; movups xmm0, xmmword ptr [rsi]; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000481557: add byte ptr [rax], al; movups xmmword ptr [rax + 0x40], xmm0; pop rbx; ret; 
0x00000000004087fb: add byte ptr [rax], al; movups xmmword ptr [rax + 0xa0], xmm2; movups xmmword ptr [rax + 0xb0], xmm3; movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x0000000000408802: add byte ptr [rax], al; movups xmmword ptr [rax + 0xb0], xmm3; movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x0000000000408809: add byte ptr [rax], al; movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x00000000004275dc: add byte ptr [rax], al; movups xmmword ptr [rbp + 0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000000426962: add byte ptr [rax], al; movups xmmword ptr [rbx + 0x48], xmm0; pop rbx; ret; 
0x0000000000490cdb: add byte ptr [rax], al; movups xmmword ptr [rbx], xmm0; pop rbx; ret; 
0x0000000000438ceb: add byte ptr [rax], al; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000438d25: add byte ptr [rax], al; movzx eax, byte ptr [rax + rdi]; movzx edx, byte ptr [rdx + rdi]; sub eax, edx; vzeroupper; ret; 
0x0000000000426b7e: add byte ptr [rax], al; movzx eax, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000438b58: add byte ptr [rax], al; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x00000000004586be: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xa]; movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x00000000004586ae: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xb]; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000045869e: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xc]; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x000000000045868e: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xd]; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x000000000045867e: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xe]; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x000000000045866e: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 0xf]; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x0000000000458a18: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 1]; cmp al, byte ptr [rsi - 1]; jne 0x58b95; xor eax, eax; ret; 
0x000000000043aa2e: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x000000000043a7e1: add byte ptr [rax], al; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x000000000043990e: add byte ptr [rax], al; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000004a7dee: add byte ptr [rax], al; movzx eax, byte ptr [rsp + 0xf]; add rsp, 0x10; pop rbx; ret; 
0x000000000045a7ee: add byte ptr [rax], al; movzx eax, cl; pop rbx; ret; 
0x000000000043639e: add byte ptr [rax], al; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000000438eee: add byte ptr [rax], al; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x000000000044e95e: add byte ptr [rax], al; movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000044322e: add byte ptr [rax], al; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x000000000044efde: add byte ptr [rax], al; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; vzeroupper; ret; 
0x000000000045705e: add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, [rdi + 1]; vzeroupper; ret; 
0x00000000004431be: add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000044e94e: add byte ptr [rax], al; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x00000000004034fe: add byte ptr [rax], al; movzx esi, sil; mov dword ptr [rip + 0xdec16], esi; ret; 
0x00000000004034ee: add byte ptr [rax], al; movzx esi, sil; mov dword ptr [rip + 0xdec22], esi; ret; 
0x00000000004034de: add byte ptr [rax], al; movzx esi, sil; mov dword ptr [rip + 0xdec26], esi; ret; 
0x00000000004034ce: add byte ptr [rax], al; movzx esi, sil; mov dword ptr [rip + 0xdec32], esi; ret; 
0x000000000040339e: add byte ptr [rax], al; movzx esi, sil; mov dword ptr [rip + 0xded6a], esi; ret; 
0x000000000040338e: add byte ptr [rax], al; movzx esi, sil; mov dword ptr [rip + 0xded7e], esi; ret; 
0x0000000000411ac9: add byte ptr [rax], al; nop dword ptr [rax + rax]; endbr64; mov rax, -0x40; add rax, qword ptr fs:[0]; ret; 
0x000000000040aea9: add byte ptr [rax], al; nop dword ptr [rax + rax]; mov eax, 0xffffff20; ret; 
0x0000000000402419: add byte ptr [rax], al; nop dword ptr [rax + rax]; xor eax, eax; pop rbp; ret; 
0x00000000004391eb: add byte ptr [rax], al; nop dword ptr [rax]; bsf eax, eax; lea rax, [rax + rdi - 0x10]; ret; 
0x000000000040215a: add byte ptr [rax], al; nop dword ptr [rax]; endbr64; lea rax, [rip + 0xa6f3d]; ret; 
0x00000000004037cb: add byte ptr [rax], al; nop dword ptr [rax]; endbr64; mov eax, dword ptr [rip + 0xde92a]; ret; 
0x00000000004a3a2b: add byte ptr [rax], al; nop dword ptr [rax]; endbr64; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x000000000040d75f: add byte ptr [rax], al; nop dword ptr [rax]; lea rax, [rip + 0x9bdb0]; ret; 
0x000000000040cc1f: add byte ptr [rax], al; nop dword ptr [rax]; lea rax, [rip + 0x9c8f0]; ret; 
0x000000000040c0df: add byte ptr [rax], al; nop dword ptr [rax]; lea rax, [rip + 0x9d430]; ret; 
0x000000000040b49b: add byte ptr [rax], al; nop dword ptr [rax]; lea rax, [rip + 0x9e078]; ret; 
0x0000000000450bcb: add byte ptr [rax], al; nop dword ptr [rax]; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; mov rax, rdi; ret; 
0x0000000000452b9a: add byte ptr [rax], al; nop dword ptr [rax]; mov byte ptr [rcx], dl; ret; 
0x00000000004563ba: add byte ptr [rax], al; nop dword ptr [rax]; mov byte ptr [rdi], dl; ret; 
0x00000000004560ba: add byte ptr [rax], al; nop dword ptr [rax]; mov dl, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x000000000040bb0b: add byte ptr [rax], al; nop dword ptr [rax]; mov eax, 0xffffff94; ret; 
0x0000000000454f3a: add byte ptr [rax], al; nop dword ptr [rax]; mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; lea rax, [rdx + 3]; ret; 
0x00000000004429ba: add byte ptr [rax], al; nop dword ptr [rax]; mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000454e8b: add byte ptr [rax], al; nop dword ptr [rax]; mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; lea rax, [rdx + 7]; ret; 
0x0000000000450b5b: add byte ptr [rax], al; nop dword ptr [rax]; mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x000000000043cc5a: add byte ptr [rax], al; nop dword ptr [rax]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000045865b: add byte ptr [rax], al; nop dword ptr [rax]; movzx eax, byte ptr [rdi - 0x10]; movzx edx, byte ptr [rsi - 0x10]; sub eax, edx; ret; 
0x00000000004331db: add byte ptr [rax], al; nop dword ptr [rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000000442b4a: add byte ptr [rax], al; nop dword ptr [rax]; movzx edx, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000442aca: add byte ptr [rax], al; nop dword ptr [rax]; movzx edx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x00000000004560aa: add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x000000000044e2bb: add byte ptr [rax], al; nop dword ptr [rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000045903b: add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; ret; 
0x00000000004830ab: add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; vzeroupper; ret; 
0x0000000000484efd: add byte ptr [rax], al; nop; endbr64; mov eax, 0x66; syscall; ret; 
0x00000000004a392d: add byte ptr [rax], al; nop; endbr64; mov rax, qword ptr [rdi + 0x90]; ret; 
0x000000000045736d: add byte ptr [rax], al; nop; lea rax, [rdi + 1]; ret; 
0x000000000045735d: add byte ptr [rax], al; nop; lea rax, [rdi]; ret; 
0x0000000000454efc: add byte ptr [rax], al; nop; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, [rdx]; ret; 
0x0000000000452bdc: add byte ptr [rax], al; nop; mov dword ptr [rcx], edx; mov byte ptr [rcx + 4], dl; ret; 
0x00000000004563dd: add byte ptr [rax], al; nop; mov dword ptr [rdi - 1], edx; ret; 
0x00000000004563fc: add byte ptr [rax], al; nop; mov dword ptr [rdi], edx; mov byte ptr [rdi + 4], dl; ret; 
0x00000000004563ed: add byte ptr [rax], al; nop; mov dword ptr [rdi], edx; ret; 
0x00000000004553dc: add byte ptr [rax], al; nop; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000452c1d: add byte ptr [rax], al; nop; mov qword ptr [rcx], rdx; mov byte ptr [rcx + 8], dl; ret; 
0x000000000045643d: add byte ptr [rax], al; nop; mov qword ptr [rdi], rdx; mov byte ptr [rdi + 8], dl; ret; 
0x000000000048420d: add byte ptr [rax], al; nop; mov rax, 1; ret; 
0x000000000044f33d: add byte ptr [rax], al; nop; mov rax, rdi; vzeroupper; ret; 
0x0000000000452bbd: add byte ptr [rax], al; nop; mov word ptr [rcx], dx; mov byte ptr [rcx + 2], dl; ret; 
0x0000000000452bac: add byte ptr [rax], al; nop; mov word ptr [rcx], dx; ret; 
0x00000000004563cc: add byte ptr [rax], al; nop; mov word ptr [rdi], dx; ret; 
0x0000000000456b6c: add byte ptr [rax], al; nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x000000000046f04c: add byte ptr [rax], al; nop; ret; 
0x0000000000482b7d: add byte ptr [rax], al; nop; vzeroupper; xor eax, eax; ret; 
0x000000000049e8f7: add byte ptr [rax], al; or byte ptr [rcx - 0x77], 0; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000040a365: add byte ptr [rax], al; or byte ptr [rdi], 0x85; xor al, byte ptr [rcx]; add byte ptr [rax], al; mov rax, 0x4dedc0; ret; 
0x00000000004238be: add byte ptr [rax], al; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x00000000004827e9: add byte ptr [rax], al; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000040266e: add byte ptr [rax], al; pop rbp; mov eax, 0xffffffea; pop r12; pop r13; ret; 
0x000000000042e896: add byte ptr [rax], al; pop rbp; mov rax, r8; pop r12; pop r13; ret; 
0x0000000000497c2c: add byte ptr [rax], al; pop rbp; pop r12; pop r13; ret; 
0x0000000000480e37: add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x000000000045ae86: add byte ptr [rax], al; pop rbp; ret; 
0x000000000045a7a9: add byte ptr [rax], al; pop rbx; cmove rax, rdx; ret; 
0x000000000040308b: add byte ptr [rax], al; pop rbx; mov dword ptr [rip + 0xdf070], 1; ret; 
0x00000000004275fe: add byte ptr [rax], al; pop rbx; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x000000000042dfd2: add byte ptr [rax], al; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000048fa4c: add byte ptr [rax], al; pop rbx; or dword ptr [rip + 0x536f2], 1; ret; 
0x0000000000424bf7: add byte ptr [rax], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000409077: add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000045f781: add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x0000000000408810: add byte ptr [rax], al; pop rbx; ret; 
0x00000000004250ae: add byte ptr [rax], al; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x00000000004017dd: add byte ptr [rax], al; pop rdx; ret; 
0x0000000000428662: add byte ptr [rax], al; pxor xmm0, xmm0; movups xmmword ptr [rbx + 0x48], xmm0; pop rbx; ret; 
0x0000000000401d66: add byte ptr [rax], al; ret; 
0x000000000040a429: add byte ptr [rax], al; sal byte ptr [rbp + 0x72], 0x48; mov eax, 0x4ded80; ret; 
0x0000000000403376: add byte ptr [rax], al; sar byte ptr [rdi + 0x74], 4; ret; 
0x00000000004a39b9: add byte ptr [rax], al; sar rax, 0x3f; and eax, 1; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000042ce6d: add byte ptr [rax], al; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x000000000042d1aa: add byte ptr [rax], al; sub dword ptr [rip + 0xb562d], 1; pop rbp; ret; 
0x000000000043a8cc: add byte ptr [rax], al; sub eax, ecx; ret; 
0x0000000000428546: add byte ptr [rax], al; sub edx, dword ptr [rax + 0x10]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000427a66: add byte ptr [rax], al; sub rax, rcx; sub eax, 1; ret; 
0x00000000004590f1: add byte ptr [rax], al; sub rax, rdx; ret; 
0x0000000000481686: add byte ptr [rax], al; sub rcx, rax; sar rcx, 2; lea eax, [rcx - 1]; ret; 
0x0000000000464cf6: add byte ptr [rax], al; sub rsp, 8; call 0x646e0; or dword ptr [rip + 0x80134], 2; add rsp, 8; ret; 
0x000000000045bec6: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x5bed8; ret; 
0x000000000045bf25: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x5bf38; ret; 
0x000000000045c153: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x5c1b0; ret; 
0x000000000045c1e7: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x5c1f8; ret; 
0x000000000045c323: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x5c370; ret; 
0x000000000045cb37: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x5cb48; ret; 
0x000000000045ce27: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x5ce38; ret; 
0x0000000000484f56: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x84f68; ret; 
0x0000000000484fbb: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x84fd0; ret; 
0x0000000000498f67: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x98f78; ret; 
0x0000000000498faa: add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x98fc0; ret; 
0x000000000045be27: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5be34; ret; 
0x000000000045c3a7: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5c3b4; ret; 
0x000000000045cf37: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5cf44; ret; 
0x000000000045d0e7: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5d0f4; ret; 
0x000000000045d117: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5d124; ret; 
0x000000000045d147: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5d154; ret; 
0x000000000045f8aa: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5f8b7; ret; 
0x000000000045f8da: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5f8e7; ret; 
0x000000000045f907: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5f914; ret; 
0x0000000000484ed7: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x84ee4; ret; 
0x000000000049ed27: add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x9ed34; ret; 
0x0000000000484f07: add byte ptr [rax], al; syscall; ret; 
0x0000000000457344: add byte ptr [rax], al; test ah, 0x40; jne 0x57430; lea rax, [rdi + 0xf]; ret; 
0x00000000004572f2: add byte ptr [rax], al; test al, 0x40; jne 0x573c0; lea rax, [rdi + 7]; ret; 
0x000000000049b9f8: add byte ptr [rax], al; test byte ptr [rip + 0x49f1f], 0x40; jne 0x9ba08; ret; 
0x000000000043191d: add byte ptr [rax], al; test byte ptr [rip + 0xb34bf], 1; je 0x318e1; ret; 
0x0000000000457265: add byte ptr [rax], al; test dh, 0x40; jne 0x571a0; lea rax, [rdi + 0xf]; ret; 
0x00000000004572ab: add byte ptr [rax], al; test dh, 4; jne 0x571a0; lea rax, [rdi + 0xb]; ret; 
0x00000000004571e2: add byte ptr [rax], al; test dl, 0x40; jne 0x571a0; lea rax, [rdi + 7]; ret; 
0x0000000000457210: add byte ptr [rax], al; test dl, 4; jne 0x571a0; lea rax, [rdi + 3]; ret; 
0x000000000045f82d: add byte ptr [rax], al; test eax, eax; cmove eax, edx; ret; 
0x000000000040b612: add byte ptr [rax], al; test eax, eax; cmovns eax, edx; add rsp, 8; ret; 
0x000000000042d1a2: add byte ptr [rax], al; test eax, eax; jne 0x2d228; sub dword ptr [rip + 0xb562d], 1; pop rbp; ret; 
0x000000000042e359: add byte ptr [rax], al; test eax, eax; jne 0x2e398; sub dword ptr [rip + 0xb69ba], 1; pop rbx; ret; 
0x000000000040b6ab: add byte ptr [rax], al; test eax, eax; lea edx, [rax + 0x1388]; cmovns eax, edx; add rsp, 8; ret; 
0x000000000040b6eb: add byte ptr [rax], al; test eax, eax; lea edx, [rax + 0x1770]; cmovns eax, edx; add rsp, 8; ret; 
0x000000000040b66b: add byte ptr [rax], al; test eax, eax; lea edx, [rax + 0xfa0]; cmovns eax, edx; add rsp, 8; ret; 
0x0000000000431a4e: add byte ptr [rax], al; test eax, eax; lea rdx, [rip + 0x28867]; lea rax, [rip + 0x287f0]; cmovne rax, rdx; ret; 
0x000000000042615a: add byte ptr [rax], al; test edx, edx; jne 0x26170; sub dword ptr [rip + 0xbeb49], 1; ret; 
0x0000000000497e44: add byte ptr [rax], al; test edx, edx; jne 0x97e50; sub dword ptr [rdi], 1; ret; 
0x00000000004a3a12: add byte ptr [rax], al; test rax, rax; cmovne rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000402550: add byte ptr [rax], al; test rax, rax; je 0x2560; mov eax, dword ptr [rax]; add rsp, 8; ret; 
0x000000000043932e: add byte ptr [rax], al; tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000482b8e: add byte ptr [rax], al; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000044ed24: add byte ptr [rax], al; vzeroupper; ret; 
0x000000000040a453: add byte ptr [rax], al; xor byte ptr [rbp + 0x48], 0x48; mov eax, 0x4def40; ret; 
0x000000000040336f: add byte ptr [rax], al; xor byte ptr [rsp + rbx - 0x7f], 0xff; add byte ptr [rax], al; sar byte ptr [rdi + 0x74], 4; ret; 
0x000000000040241e: add byte ptr [rax], al; xor eax, eax; pop rbp; ret; 
0x0000000000481aa8: add byte ptr [rax], al; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a3b65: add byte ptr [rax], al; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000040306c: add byte ptr [rax], al; xor eax, eax; pop rbx; ret; 
0x00000000004238ad: add byte ptr [rax], al; xor eax, eax; punpcklqdq xmm0, xmm0; movups xmmword ptr [rbx + 8], xmm0; pop rbx; ret; 
0x000000000040256e: add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004a1266: add byte ptr [rax], al; xor eax, eax; test r8d, r8d; jne 0xa11c0; add rsp, 0x38; ret; 
0x0000000000438ede: add byte ptr [rax], al; xor eax, eax; vzeroupper; ret; 
0x000000000045ce5e: add byte ptr [rax], al; xor edi, edi; syscall; cmp rax, -0x1000; ja 0x5ce70; ret; 
0x00000000004233b6: add byte ptr [rax], al; xor r8d, r8d; mov rax, r8; ret; 
0x000000000045719e: add byte ptr [rax], al; xor rax, rax; ret; 
0x0000000000483d40: add byte ptr [rax], cl; lea rax, [rip + 0x257]; lea rdx, [rip + 0x30]; cmovne rax, rdx; ret; 
0x00000000004a2132: add byte ptr [rax], cl; mov byte ptr [rip + 0x43035], 8; ret; 
0x00000000004a212b: add byte ptr [rax], cl; mov byte ptr [rip + 0x4303b], 8; mov byte ptr [rip + 0x43035], 8; ret; 
0x00000000004a2124: add byte ptr [rax], cl; mov byte ptr [rip + 0x43041], 8; mov byte ptr [rip + 0x4303b], 8; mov byte ptr [rip + 0x43035], 8; ret; 
0x00000000004a211d: add byte ptr [rax], cl; mov byte ptr [rip + 0x43047], 8; mov byte ptr [rip + 0x43041], 8; mov byte ptr [rip + 0x4303b], 8; mov byte ptr [rip + 0x43035], 8; ret; 
0x00000000004a2139: add byte ptr [rax], cl; ret; 
0x0000000000498659: add byte ptr [rax], dl; lea rdx, [rip + 0x11e]; lea rax, [rip + 0x67]; cmovne rax, rdx; ret; 
0x0000000000430f69: add byte ptr [rax], dl; lea rdx, [rip + 0x2818e]; lea rax, [rip + 0x280d7]; cmovne rax, rdx; ret; 
0x00000000004318a9: add byte ptr [rax], dl; lea rdx, [rip - 0x362]; lea rax, [rip + 0x272f7]; cmove rax, rdx; ret; 
0x000000000047fd35: add byte ptr [rax], r8b; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x0000000000402e6d: add byte ptr [rax], r8b; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000462bb5: add byte ptr [rax], r8b; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000408d1d: add byte ptr [rax], r8b; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000049e98d: add byte ptr [rax], r8b; bts rax, 0x30; mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x00000000004a4585: add byte ptr [rax], r8b; cmp al, 0x50; jne 0xa45b3; xor eax, eax; add rsp, 8; ret; 
0x00000000004a45e5: add byte ptr [rax], r8b; cmp al, 0x50; jne 0xa4613; xor eax, eax; add rsp, 8; ret; 
0x00000000004612fd: add byte ptr [rax], r8b; endbr64; lea rax, [rip + 0x81f55]; ret; 
0x000000000048b5ed: add byte ptr [rax], r8b; endbr64; mov eax, 0xffffffff; ret; 
0x000000000046fdbd: add byte ptr [rax], r8b; endbr64; mov rax, -0x10; add rax, qword ptr fs:[0]; ret; 
0x0000000000411acd: add byte ptr [rax], r8b; endbr64; mov rax, -0x40; add rax, qword ptr fs:[0]; ret; 
0x000000000042881d: add byte ptr [rax], r8b; endbr64; mov rax, -1; ret; 
0x000000000042971d: add byte ptr [rax], r8b; endbr64; mov rax, qword ptr [rdi]; cmp rax, 0x2000000; jbe 0x29730; ret; 
0x000000000042935d: add byte ptr [rax], r8b; endbr64; mov rax, qword ptr [rdi]; nop; mov qword ptr [rip + 0xb93f1], rax; ret; 
0x000000000042884d: add byte ptr [rax], r8b; endbr64; ret; 
0x0000000000456a2d: add byte ptr [rax], r8b; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x000000000040aead: add byte ptr [rax], r8b; mov eax, 0xffffff20; ret; 
0x0000000000403495: add byte ptr [rax], r8b; mov eax, 0xffffffa1; ret; 
0x000000000040a9e5: add byte ptr [rax], r8b; mov eax, 0xffffffdf; ret; 
0x0000000000402c55: add byte ptr [rax], r8b; mov eax, 0xffffffea; ret; 
0x0000000000408b4d: add byte ptr [rax], r8b; mov eax, 0xfffffff3; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000421e1d: add byte ptr [rax], r8b; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000004289d5: add byte ptr [rax], r8b; mov eax, 0xffffffff; ret; 
0x000000000045610d: add byte ptr [rax], r8b; mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x00000000004553fd: add byte ptr [rax], r8b; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x000000000045fb85: add byte ptr [rax], r8b; mov qword ptr [rax + 0x20], rsi; ret; 
0x000000000044f0fd: add byte ptr [rax], r8b; mov qword ptr [rdi], rdx; mov qword ptr [rdi + r8 - 8], rdx; vzeroupper; ret; 
0x00000000004a16e5: add byte ptr [rax], r8b; mov r8, qword ptr [r8]; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x000000000045beed: add byte ptr [rax], r8b; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000000485165: add byte ptr [rax], r8b; mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000000040a4a5: add byte ptr [rax], r8b; mov rax, 0x4dee40; ret; 
0x00000000004a1835: add byte ptr [rax], r8b; mov rax, qword ptr [rsi + 0xb0]; add rsp, 8; ret; 
0x00000000004846bd: add byte ptr [rax], r8b; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x000000000045669d: add byte ptr [rax], r8b; mov rax, rdi; ret; 
0x0000000000456a9d: add byte ptr [rax], r8b; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x000000000045545d: add byte ptr [rax], r8b; mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000045bed5: add byte ptr [rax], r8b; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000045c10d: add byte ptr [rax], r8b; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000045543d: add byte ptr [rax], r8b; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x0000000000426b7d: add byte ptr [rax], r8b; movzx eax, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004586bd: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xa]; movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x00000000004586ad: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xb]; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000045869d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xc]; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x000000000045868d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xd]; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x000000000045867d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xe]; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x000000000045866d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi - 0xf]; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x000000000043990d: add byte ptr [rax], r8b; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000044e95d: add byte ptr [rax], r8b; movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000044efdd: add byte ptr [rax], r8b; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; vzeroupper; ret; 
0x00000000004034fd: add byte ptr [rax], r8b; movzx esi, sil; mov dword ptr [rip + 0xdec16], esi; ret; 
0x00000000004034ed: add byte ptr [rax], r8b; movzx esi, sil; mov dword ptr [rip + 0xdec22], esi; ret; 
0x00000000004034dd: add byte ptr [rax], r8b; movzx esi, sil; mov dword ptr [rip + 0xdec26], esi; ret; 
0x00000000004034cd: add byte ptr [rax], r8b; movzx esi, sil; mov dword ptr [rip + 0xdec32], esi; ret; 
0x000000000040339d: add byte ptr [rax], r8b; movzx esi, sil; mov dword ptr [rip + 0xded6a], esi; ret; 
0x000000000040338d: add byte ptr [rax], r8b; movzx esi, sil; mov dword ptr [rip + 0xded7e], esi; ret; 
0x00000000004238bd: add byte ptr [rax], r8b; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x000000000040266d: add byte ptr [rax], r8b; pop rbp; mov eax, 0xffffffea; pop r12; pop r13; ret; 
0x000000000049819d: add byte ptr [rax], r8b; pop rbp; ret; 
0x00000000004275fd: add byte ptr [rax], r8b; pop rbx; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x0000000000401d65: add byte ptr [rax], r8b; ret; 
0x0000000000428545: add byte ptr [rax], r8b; sub edx, dword ptr [rax + 0x10]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000427a65: add byte ptr [rax], r8b; sub rax, rcx; sub eax, 1; ret; 
0x0000000000481685: add byte ptr [rax], r8b; sub rcx, rax; sar rcx, 2; lea eax, [rcx - 1]; ret; 
0x0000000000464cf5: add byte ptr [rax], r8b; sub rsp, 8; call 0x646e0; or dword ptr [rip + 0x80134], 2; add rsp, 8; ret; 
0x000000000043932d: add byte ptr [rax], r8b; tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000040241d: add byte ptr [rax], r8b; xor eax, eax; pop rbp; ret; 
0x000000000045a765: add byte ptr [rax], r8b; xor eax, eax; pop rbx; ret; 
0x0000000000403995: add byte ptr [rax], r8b; xor eax, eax; ret; 
0x0000000000438edd: add byte ptr [rax], r8b; xor eax, eax; vzeroupper; ret; 
0x000000000048f13a: add byte ptr [rbp + 0x13], dh; mov r8, qword ptr [rip + 0x5632c]; mov rax, r8; ret; 
0x000000000045be8a: add byte ptr [rbp + 0x14], dh; add rsp, 0x28; ret; 
0x000000000040a8c7: add byte ptr [rbp + 0x14f504], cl; add byte ptr [rax], al; ret; 
0x0000000000431a4f: add byte ptr [rbp + 0x158d48c0], al; mov byte ptr [edx], al; add byte ptr [rax - 0x73], cl; add eax, 0x287f0; cmovne rax, rdx; ret; 
0x00000000004318ed: add byte ptr [rbp + 0x15], dh; and dh, 2; lea rax, [rip + 0x7a86]; lea rdx, [rip + 0x25b3f]; cmovne rax, rdx; ret; 
0x000000000049e803: add byte ptr [rbp + 0x1a], dh; test rsi, rsi; jne 0x9e830; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000040534c: add byte ptr [rbp + 0x1d], dh; add rsp, 0x10; pop rbp; ret; 
0x0000000000492714: add byte ptr [rbp + 0x1e], dh; add rsp, 0x38; ret; 
0x000000000045aee2: add byte ptr [rbp + 0x1f], dh; add rsp, 0x20; pop rbx; ret; 
0x0000000000421522: add byte ptr [rbp + 0x21], dh; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000402962: add byte ptr [rbp + 0x22], dh; add rsp, 0x18; pop rbp; pop r12; ret; 
0x0000000000498439: add byte ptr [rbp + 0x24], dh; mov rdx, qword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x00000000004850ec: add byte ptr [rbp + 0x25], dh; mov eax, r9d; add rsp, 0x38; ret; 
0x000000000041e1ab: add byte ptr [rbp + 0x26], dh; mov eax, r8d; add rsp, 0x118; ret; 
0x00000000004919c8: add byte ptr [rbp + 0x28], dh; add rsp, 0x38; ret; 
0x0000000000491a94: add byte ptr [rbp + 0x2d], dh; add rsp, 0x58; ret; 
0x0000000000423b0e: add byte ptr [rbp + 0x31], al; dec dword ptr [rax + 0x39]; ret 0x830f; 
0x00000000004a5c6f: add byte ptr [rbp + 0x31], al; in al, 0x5b; pop rbp; mov rax, r12; pop r12; ret; 
0x0000000000481d93: add byte ptr [rbp + 0x31], al; in al, 0x5d; mov rax, r12; pop r12; pop r13; ret; 
0x000000000042e8ff: add byte ptr [rbp + 0x31], al; rcr byte ptr [rbp + 0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x000000000042e097: add byte ptr [rbp + 0x31], al; rcr byte ptr [rbx + 0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x000000000046d489: add byte ptr [rbp + 0x31], dh; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000484e92: add byte ptr [rbp + 0x35], dh; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000042c478: add byte ptr [rbp + 0x39], cl; pop rdx; adc byte ptr [rdi], cl; test dword ptr [rip - 0x9fffffd], ebp; ret 0xf01; 
0x0000000000429511: add byte ptr [rbp + 0x39], cl; ret 0xd977; 
0x000000000042bab2: add byte ptr [rbp + 0x39], cl; ret; 
0x0000000000491c06: add byte ptr [rbp + 0x3b], dh; add rsp, 0x68; ret; 
0x000000000042c920: add byte ptr [rbp + 0x3e850ff6], al; add al, byte ptr [rax]; add byte ptr [rbp - 0x7cfdb9], cl; add dh, byte ptr [rsp - 0x77]; ret 0xb48b; 
0x0000000000497c2d: add byte ptr [rbp + 0x41], bl; pop rsp; pop r13; ret; 
0x0000000000480e38: add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x000000000047013f: add byte ptr [rbp + 0x42], dh; mov eax, r9d; add rsp, 0x148; ret; 
0x000000000045cbba: add byte ptr [rbp + 0x46], dh; add rsp, 0x68; ret; 
0x000000000045cc49: add byte ptr [rbp + 0x47], dh; add rsp, 0x18; ret; 
0x000000000045cd01: add byte ptr [rbp + 0x47], dh; add rsp, 0x58; ret; 
0x0000000000499308: add byte ptr [rbp + 0x480375d2], al; mov dword ptr [rbx], eax; add rsp, 0x10; pop rbx; ret; 
0x000000000045cd9f: add byte ptr [rbp + 0x49], dh; add rsp, 0x58; ret; 
0x000000000042e897: add byte ptr [rbp + 0x4c], bl; mov eax, eax; pop r12; pop r13; ret; 
0x0000000000420700: add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x000000000049231b: add byte ptr [rbp + 0x51], dh; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x000000000041fd5b: add byte ptr [rbp + 0x57], dh; add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000041ff09: add byte ptr [rbp + 0x59], dh; add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000483976: add byte ptr [rbp + 0x67], dh; add rsp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x000000000042d1a3: add byte ptr [rbp + 0x7c850fc0], al; add byte ptr [rax], al; add byte ptr [rbx + 0xb562d2d], al; add byte ptr [rcx], al; pop rbp; ret; 
0x000000000049ec29: add byte ptr [rbp + 0xa], dh; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x000000000045f779: add byte ptr [rbp + 0xa], dh; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000000499995: add byte ptr [rbp + 0xb], dh; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000048f041: add byte ptr [rbp + 0xc], dh; lea rax, [r8 + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x000000000040aabf: add byte ptr [rbp + 0xe090], cl; add byte ptr [rbx + 0xd7718fa], al; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000000468041: add byte ptr [rbp + 0xe880fd2], al; add al, 0; add bh, dh; ret 0xf800; 
0x000000000049d1af: add byte ptr [rbp + 0xf], cl; lodsd eax, dword ptr [rsi]; ret; 
0x000000000049d09f: add byte ptr [rbp + 0xf], cl; movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000428536: add byte ptr [rbp + 0xf], dh; sub edx, dword ptr [rax + 0x18]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000408b0b: add byte ptr [rbp + 5], dh; add rsp, 0x18; ret; 
0x000000000045cfdd: add byte ptr [rbp + 5], dh; add rsp, 0x28; ret; 
0x00000000004985a9: add byte ptr [rbp + 5], dh; add rsp, 0x38; ret; 
0x0000000000404fe9: add byte ptr [rbp + 5], dh; add rsp, 0x48; ret; 
0x000000000042d66b: add byte ptr [rbp + 6], dh; add rsp, 0x10; pop rbp; ret; 
0x00000000004918cd: add byte ptr [rbp + 6], dh; add rsp, 0x20; pop rbx; ret; 
0x00000000004a28db: add byte ptr [rbp + 7], dh; cmp qword ptr [r9 + 0x38], 0; je 0xa2934; add rsp, 0x18; ret; 
0x000000000041f947: add byte ptr [rbp + 8], dh; add rsp, 0xd8; ret; 
0x0000000000485032: add byte ptr [rbp + 8], dh; movzx eax, al; add rsp, 0x58; ret; 
0x00000000004923d9: add byte ptr [rbp + 9], dh; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x00000000004839be: add byte ptr [rbp + rcx*4 + 0x25], cl; fidiv dword ptr [rbp + 0x39480005]; ret; 
0x00000000004788b6: add byte ptr [rbp + rcx*4 + 0x2c], cl; test dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x000000000046bf0c: add byte ptr [rbp + rcx*4 + 0x41], cl; add cl, byte ptr [rbp + 0x39]; ret 0x820f; 
0x000000000048204f: add byte ptr [rbp + rcx*4 + 0x58], cl; dec dword ptr [rcx - 0x77]; ret 0x3948; 
0x0000000000498927: add byte ptr [rbp + rcx*4 + 5], cl; add dword ptr [rsp + rdi*8], ebx; dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x0000000000481915: add byte ptr [rbp - 0x14], dh; mov eax, r11d; and eax, 0xc; cmp eax, 4; je 0x81924; ret; 
0x0000000000429b48: add byte ptr [rbp - 0x17], dh; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x00000000004818b2: add byte ptr [rbp - 0x19], dh; and r11d, 0xffffffbb; cmp r11d, 0xa; je 0x818c0; ret; 
0x00000000004685c9: add byte ptr [rbp - 0x1a77f02e], al; add al, byte ptr [rax]; add bh, dh; ret 0xf800; 
0x000000000049589f: add byte ptr [rbp - 0x2dce00b9], cl; div ecx; add r8d, eax; mov eax, r8d; ret; 
0x000000000045f82e: add byte ptr [rbp - 0x3dbbf040], al; ret; 
0x0000000000402098: add byte ptr [rbp - 0x47ec8a40], al; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0xe2228], eax; add rsp, 8; ret; 
0x000000000045b70f: add byte ptr [rbp - 0x57c03b0], cl; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xd284; 
0x000000000040b66c: add byte ptr [rbp - 0x5f6f7240], al; sldt word ptr [rax]; cmovns eax, edx; add rsp, 8; ret; 
0x000000000042c892: add byte ptr [rbp - 0x73], cl; adc byte ptr [rax + 0x39], cl; ror dword ptr [rdi], cl; xchg eax, ebp; ret 0xb60f; 
0x000000000045e3ed: add byte ptr [rbp - 0x75], cl; adc byte ptr [r13 - 0x7b], r9b; ror byte ptr [rdi], 0x85; ret 4; 
0x0000000000479c5c: add byte ptr [rbp - 0x75], cl; test eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0x3bc0; 
0x000000000048a957: add byte ptr [rbp - 0x76b7febe], cl; ret 0x8b48; 
0x000000000047f467: add byte ptr [rbp - 0x76bb7ffc], cl; fiadd dword ptr [rcx]; rol byte ptr [rcx + rbp - 0x36], 0x39; ret 0x2b7c; 
0x0000000000403046: add byte ptr [rbp - 0x76e68740], al; ret; 
0x0000000000465f19: add byte ptr [rbp - 0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x0000000000497d6d: add byte ptr [rbp - 0x7cc98a40], al; sub eax, 0x4d29b; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x000000000046da17: add byte ptr [rbp - 0x7cdb8140], al; call 0x8496323; pop rbx; ret; 
0x000000000042c928: add byte ptr [rbp - 0x7cfdb9], cl; add dh, byte ptr [rsp - 0x77]; ret 0xb48b; 
0x000000000042c90f: add byte ptr [rbp - 0x7cfeb9], cl; add esi, dword ptr [rbp + rdi - 0x77]; ret 0xb48b; 
0x0000000000486405: add byte ptr [rbp - 0x7d7af00a], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000046723c: add byte ptr [rbp - 0xc7af040], al; add dword ptr [rax], eax; add byte ptr [rcx], dh; ror byte ptr [rcx + rcx*4 + 0x5c], 0x24; sub byte ptr [rcx - 0x77], cl; ret; 
0x000000000045ad89: add byte ptr [rbx + 0x117401f8], al; cmp eax, 2; je 0x5ada8; xor eax, eax; ret; 
0x000000000044ab09: add byte ptr [rbx + 0x148b8104], cl; xchg eax, ecx; sub eax, edx; ret; 
0x0000000000408a4f: add byte ptr [rbx + 0x2890447], cl; xor eax, eax; ret; 
0x0000000000408a5f: add byte ptr [rbx + 0x2890847], cl; xor eax, eax; ret; 
0x0000000000408a6f: add byte ptr [rbx + 0x2890c47], cl; xor eax, eax; ret; 
0x0000000000408a7f: add byte ptr [rbx + 0x2891047], cl; xor eax, eax; ret; 
0x0000000000408a8f: add byte ptr [rbx + 0x2891447], cl; xor eax, eax; ret; 
0x0000000000408a9f: add byte ptr [rbx + 0x2891847], cl; xor eax, eax; ret; 
0x0000000000408aaf: add byte ptr [rbx + 0x2891c47], cl; xor eax, eax; ret; 
0x0000000000408abf: add byte ptr [rbx + 0x2892047], cl; xor eax, eax; ret; 
0x00000000004250af: add byte ptr [rbx + 0x31], bl; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000456a7f: add byte ptr [rbx + 0x3568b0e], cl; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; lea rax, [rdi + 6]; ret; 
0x000000000045542f: add byte ptr [rbx + 0x3568b0e], cl; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x00000000004560ff: add byte ptr [rbx + 0x4568a0e], cl; mov dword ptr [rdi], ecx; mov byte ptr [rdi + 4], dl; ret; 
0x0000000000456a4f: add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x000000000045540f: add byte ptr [rbx + 0x477880e], cl; mov dword ptr [rdi], ecx; ret; 
0x000000000043a750: add byte ptr [rbx + 0x478bfc4e], cl; cld; cmp ecx, eax; jne 0x3b16f; xor eax, eax; ret; 
0x0000000000454f3f: add byte ptr [rbx + 0x48028901], cl; lea eax, [rdx + 3]; ret; 
0x000000000045c35e: add byte ptr [rbx + 0x480c2444], cl; add esp, 0x18; ret; 
0x000000000045708f: add byte ptr [rbx + 0x48178916], cl; lea eax, [rdi + 3]; vzeroupper; ret; 
0x000000000045a7aa: add byte ptr [rbx + 0x48], bl; cmove eax, edx; ret; 
0x0000000000455c8f: add byte ptr [rbx + 0x49178916], cl; sub eax, 4; lea rdi, [rdi + 4]; jne 0x564f0; ret; 
0x00000000004677a4: add byte ptr [rbx + 0x4be02e0], al; add byte ptr [rax], al; add byte ptr [rcx - 0x77], al; ret; 
0x000000000042dfd3: add byte ptr [rbx + 0x4c], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x000000000043d9cf: add byte ptr [rbx + 0x4e8bf956], cl; cld; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d7cf: add byte ptr [rbx + 0x4e8bfa56], cl; cld; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d5cf: add byte ptr [rbx + 0x4e8bfb56], cl; cld; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000045896b: add byte ptr [rbx + 0x4e8bfc47], cl; cld; cmp eax, ecx; jne 0x58b80; xor eax, eax; ret; 
0x000000000043a9b2: add byte ptr [rbx + 0x4e8bfc47], cl; cld; cmp ecx, eax; jne 0x3b16f; xor eax, eax; ret; 
0x0000000000402077: add byte ptr [rbx + 0x57483ff], al; cmp edi, -0x5f; jne 0x2083; ret; 
0x00000000004429bf: add byte ptr [rbx + 0x5789fc56], cl; cld; ret; 
0x0000000000482473: add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000000424bf8: add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000409078: add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000045f782: add byte ptr [rbx + 0x5d], bl; ret; 
0x000000000042d1ab: add byte ptr [rbx + 0xb562d2d], al; add byte ptr [rcx], al; pop rbp; ret; 
0x000000000042e4c4: add byte ptr [rbx + 0xb], al; add byte ptr [rax - 0x73], cl; add eax, 0xfffff391; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x0000000000423956: add byte ptr [rbx + 0xc08d], cl; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x000000000049901b: add byte ptr [rbx + 0xc], dh; mov rdx, qword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000412667: add byte ptr [rbx + 0xd20d215], cl; add byte ptr [rbx + rcx*4 + 0x3d], cl; ret; 
0x0000000000410ce1: add byte ptr [rbx + 0xd40b415], cl; add dh, dh; ret 0x7408; 
0x000000000040aac5: add byte ptr [rbx + 0xd7718fa], al; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000000410a2a: add byte ptr [rbx + 0xd890fe2], al; push rsp; or eax, 0x46058900; or eax, 0x89178900; ret 0xeac1; 
0x000000000044306f: add byte ptr [rbx + 0xe8b0156], cl; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000442fff: add byte ptr [rbx + 0xe8b0256], cl; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000442f8f: add byte ptr [rbx + 0xe8b0356], cl; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000041266d: add byte ptr [rbx + rcx*4 + 0x3d], cl; ret; 
0x000000000049e7a7: add byte ptr [rbx + rcx*4 + 0x57], cl; or byte ptr [rcx + 0x29], cl; ret 0x894c; 
0x00000000004a1137: add byte ptr [rbx + rcx*4 + 0x57], cl; or byte ptr [rcx + 1], cl; ret 0x894c; 
0x000000000041ea87: add byte ptr [rbx + rcx*4 + 0x63], cl; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000045f224: add byte ptr [rbx + rcx*4 + 0x7d], cl; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000040a1a9: add byte ptr [rbx + rcx*4 + 0xc], cl; ret 0x894c; 
0x0000000000418cb3: add byte ptr [rbx + rcx*4 + 4], cl; and al, 0xe9; ret 0xffed; 
0x000000000048f03a: add byte ptr [rbx + rcx*4 + 5], cl; add eax, 0x490c7500; lea eax, [rax + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x0000000000479e92: add byte ptr [rbx + rcx*4 - 0x5b], cl; clc; idiv bh; dec dword ptr [rbp + 0x63]; ret; 
0x000000000041099f: add byte ptr [rbx - 0x2ac2fe40], al; add dword ptr [rax], eax; add byte ptr [rdi + rdi - 0x75], dh; or cl, byte ptr [rax - 0x7d]; ret 0x3944; 
0x000000000040308c: add byte ptr [rbx - 0x39], bl; add eax, 0xdf070; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000048116f: add byte ptr [rbx - 0x3b7cb7ff], cl; or byte ptr [rbx + 0x5d], bl; ret; 
0x00000000004a346f: add byte ptr [rbx - 0x70f0ee06], al; ret; 
0x0000000000454f4f: add byte ptr [rbx - 0x75fd76ff], cl; add al, 0x88; add al, 0x48; lea eax, [rdx + 4]; ret; 
0x0000000000450c0f: add byte ptr [rbx - 0x75fd76ff], cl; add al, 0x88; add al, 0x48; mov eax, edi; ret; 
0x00000000004200b9: add byte ptr [rbx - 0x76b7ffbb], cl; pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x00000000004053fa: add byte ptr [rbx - 0x76bef7bd], cl; ret 0xc085; 
0x00000000004115e8: add byte ptr [rbx - 0x7bf00008], al; out 0, al; add byte ptr [rax], al; add rsp, 0x98; ret; 
0x00000000004587c6: add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x000000000041b2b7: add byte ptr [rbx - 0x7bf0fc08], al; xchg eax, esi; sbb eax, dword ptr [rax]; add byte ptr [rbx - 0x7bf0fe08], al; ret; 
0x000000000041701b: add byte ptr [rbx - 0x7bf0fe08], al; ret; 
0x000000000047f38c: add byte ptr [rbx - 0x7cb7fb8e], cl; ret 0xb804; 
0x00000000004979cf: add byte ptr [rbx - 0x7cb7fbbd], cl; ret; 
0x000000000047f2b7: add byte ptr [rbx - 0x7cb7fbbe], cl; ret 0x4104; 
0x000000000044e8b3: add byte ptr [rbx - 0x7cf0fb06], al; ret; 
0x0000000000428547: add byte ptr [rbx], ch; push rax; adc byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x000000000048524f: add byte ptr [rcx + 0x104e23c1], cl; lea rcx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x000000000040a3bf: add byte ptr [rcx + 0x28ff], al; jne 0xa4a0; mov rax, 0x4decc0; ret; 
0x0000000000421bef: add byte ptr [rcx + 0x2b], cl; adc byte ptr [r8 + 1], r9b; ret; 
0x0000000000452bff: add byte ptr [rcx + 0x3518911], cl; ret; 
0x0000000000469d9b: add byte ptr [rcx + 0x3948fc51], cl; ret; 
0x000000000048e4e7: add byte ptr [rcx + 0x39], al; ret; 
0x0000000000495ed3: add byte ptr [rcx + 0x39], cl; ret 0x1773; 
0x00000000004677c0: add byte ptr [rcx + 0x39], cl; ret 0x860f; 
0x000000000048322f: add byte ptr [rcx + 0x39], cl; ret; 
0x000000000048200f: add byte ptr [rcx + 0x39], cl; ror byte ptr [rdi], 1; test byte ptr [rcx], ch; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x0000000000482027: add byte ptr [rcx + 0x39], cl; ror byte ptr [rdi], cl; test byte ptr [rsi], bl; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x000000000049ab7f: add byte ptr [rcx + 0x3ec90], cl; add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], 0x83; ret 0x4801; 
0x0000000000427757: add byte ptr [rcx + 0x807448], al; add byte ptr [rax], al; mov rax, qword ptr [rax + 0x68]; test rax, rax; jne 0x27758; ret; 
0x000000000040b60c: add byte ptr [rcx + 0xca81c2], cl; add byte ptr [rax], al; test eax, eax; cmovns eax, edx; add rsp, 8; ret; 
0x00000000004a528e: add byte ptr [rcx + 0xf], al; mov bh, 0x5d; and byte ptr [rsi - 9], ah; ret; 
0x000000000047926f: add byte ptr [rcx + 0xf], al; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x000000000049639d: add byte ptr [rcx + 0xf], al; xchg eax, esp; ret 0x3145; 
0x00000000004296a5: add byte ptr [rcx + 1], al; adc eax, dword ptr [rbp + 1]; sbb byte ptr [r8 + 0x39], cl; ret; 
0x000000000042105c: add byte ptr [rcx + 1], cl; ret; 
0x000000000048efa8: add byte ptr [rcx + rax - 0x10], dh; inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x0000000000492324: add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x000000000040aa57: add byte ptr [rcx + rcx*4 - 0x20], al; pop rbp; pop r12; pop r13; ret; 
0x000000000042006b: add byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000481d80: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; pop r13; ret; 
0x00000000004848f4: add byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000047f46a: add byte ptr [rcx + rcx*4 - 0x26], 1; rol byte ptr [rcx + rbp - 0x36], 0x39; ret 0x2b7c; 
0x0000000000415d66: add byte ptr [rcx + rcx*4 - 0x38], cl; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a11bf: add byte ptr [rcx + rcx*4 - 0x39], al; mov qword ptr [rsp], rax; call 0xa15f0; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x00000000004825c1: add byte ptr [rcx + rcx*4 - 0x40], al; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000046d364: add byte ptr [rcx + rcx*4 - 0x40], al; pop rbp; pop r12; ret; 
0x000000000041fd64: add byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x000000000041ee98: add byte ptr [rcx + rcx*4 - 0x40], cl; add qword ptr [rip + 0xc6a14], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000042e0b8: add byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; pop r12; ret; 
0x000000000042c580: add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x0000000000484602: add byte ptr [rcx + rcx*4 - 0x40], cl; shr rax, 2; vzeroupper; ret; 
0x000000000048348f: add byte ptr [rcx + rcx*4 - 0x40], cl; vzeroupper; ret; 
0x0000000000431915: add byte ptr [rcx + rcx*8 + 0x48], dh; lea eax, [rip + 0x7e61]; test byte ptr [rip + 0xb34bf], 1; je 0x318e1; ret; 
0x0000000000431914: add byte ptr [rcx + rcx*8 + 0x48], sil; lea eax, [rip + 0x7e61]; test byte ptr [rip + 0xb34bf], 1; je 0x318e1; ret; 
0x000000000048566c: add byte ptr [rcx + rdi - 0x37], dh; xor eax, eax; ret; 
0x000000000048f0d7: add byte ptr [rcx + rdi - 0x40], cl; ja 0x8f0e8; add rsp, 8; ret; 
0x0000000000425034: add byte ptr [rcx - 0x100c1e], al; dec dword ptr [rcx]; ret 0x1389; 
0x000000000049473e: add byte ptr [rcx - 0x1177b], cl; ljmp [rcx]; ret; 
0x0000000000425103: add byte ptr [rcx - 0x38b78f89], cl; ret 0x3bc0; 
0x0000000000423b50: add byte ptr [rcx - 0x39], cl; mov al, 0x3b; add byte ptr [rax - 0x39], r9b; ret; 
0x000000000049605f: add byte ptr [rcx - 0x39], cl; ret 0xffe0; 
0x0000000000469d50: add byte ptr [rcx - 0x73], cl; add r9b, byte ptr [r8 + 0x39]; ret; 
0x000000000042b75e: add byte ptr [rcx - 0x73], cl; dec dword ptr [rcx - 0x7b]; ret; 
0x000000000049b2ff: add byte ptr [rcx - 0x73], cl; pop rsp; add eax, 0x248d4d00; ret 0x2944; 
0x000000000042c96d: add byte ptr [rcx - 0x73], cl; push rbp; and byte ptr [rax + 0x39], cl; ret 0x860f; 
0x0000000000409ef2: add byte ptr [rcx - 0x75], cl; sbb byte ptr [rbx + r9*4 + 0x2c], r9b; ret 0x8b49; 
0x000000000047b5c9: add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000475608: add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000042170d: add byte ptr [rcx - 0x75], cl; xchg eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000047ec48: add byte ptr [rcx - 0x76b3d395], cl; ret 0x8348; 
0x00000000004296c9: add byte ptr [rcx - 0x77], al; imul esp, dword ptr [rbx*2 + 0x10438941], 0x41; mov dword ptr [rbx + 0x14], 0; ret; 
0x000000000047c199: add byte ptr [rcx - 0x77], al; ret 0x1d74; 
0x00000000004689d8: add byte ptr [rcx - 0x77], al; ret 0x5a58; 
0x00000000004677ac: add byte ptr [rcx - 0x77], al; ret; 
0x0000000000401997: add byte ptr [rcx - 0x77], al; rol dword ptr [rcx - 0x77], cl; ret 0x8341; 
0x000000000040270c: add byte ptr [rcx - 0x77], al; sar byte ptr [rax - 0x16], 0x45; test eax, eax; je 0x2720; pop rbp; ret; 
0x0000000000402e9e: add byte ptr [rcx - 0x77], al; sar byte ptr [rax - 0x16], 0x45; test eax, eax; je 0x2eb0; pop rbp; ret; 
0x000000000045f220: add byte ptr [rcx - 0x77], cl; add byte ptr [r11 + rcx*4 + 0x7d], r9b; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000004233a9: add byte ptr [rcx - 0x77], cl; call 0xffffffffceed473c; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000415f07: add byte ptr [rcx - 0x77], cl; fisttp word ptr [rax - 0x7d]; ret; 
0x000000000042c5fa: add byte ptr [rcx - 0x77], cl; push rcx; or byte ptr [rax + 0x39], cl; ret; 
0x000000000047d3df: add byte ptr [rcx - 0x77], cl; ret 0x2949; 
0x0000000000431117: add byte ptr [rcx - 0x77], cl; ret 0x8948; 
0x0000000000495c6e: add byte ptr [rcx - 0x77], cl; ret 0x8b48; 
0x000000000047c160: add byte ptr [rcx - 0x77], cl; ret 0xb8; 
0x000000000040420b: add byte ptr [rcx - 0x77], cl; ret 0xed85; 
0x000000000047e0cf: add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000480d1c: add byte ptr [rcx - 0x7cb7e8f4], cl; ret 0x4804; 
0x000000000049484f: add byte ptr [rcx - 0x7d], al; in eax, dx; add dword ptr [rax + 0x39], ecx; ret; 
0x000000000045b6b7: add byte ptr [rcx - 0x7d], cl; out dx, eax; add dword ptr [rbp - 0x57c03b0], ecx; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x000000000043363f: add byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x0000000000431f3f: add byte ptr [rcx - 0x7d], cl; ret 0xf10; 
0x0000000000472d1b: add byte ptr [rcx - 0x7d], cl; ret; 
0x0000000000465aaf: add byte ptr [rcx - 0x7d], cl; rol byte ptr [rcx], 0x89; xor dword ptr [rax - 0x7d], ecx; ret; 
0x000000000046ebde: add byte ptr [rcx - 0x8373], cl; dec dword ptr [rcx + 1]; ret 0x8d48; 
0x000000000048302b: add byte ptr [rcx - 0x876b730], cl; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x000000000046598f: add byte ptr [rcx - 0xa], al; ret; 
0x0000000000425201: add byte ptr [rcx - 1], al; xchg eax, esi; add byte ptr [rax], 0; add byte ptr [rax - 0x77], cl; ret 0xffb8; 
0x00000000004393a6: add byte ptr [rcx - 9], cl; ret 1; 
0x00000000004393cc: add byte ptr [rcx - 9], cl; ret 2; 
0x0000000000429736: add byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0xb900e; ret; 
0x000000000042970d: add byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0xb902f; ret; 
0x00000000004296ed: add byte ptr [rcx], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; add eax, 0xb9047; ret; 
0x000000000045a694: add byte ptr [rcx], al; add byte ptr [rax], al; cmp rdx, rcx; jne 0x5a676; vzeroupper; ret; 
0x00000000004590ef: add byte ptr [rcx], al; add byte ptr [rax], al; sub rax, rdx; ret; 
0x000000000041f0e7: add byte ptr [rcx], al; add rsp, 0x10; mov eax, r8d; pop rbx; ret; 
0x000000000041efa7: add byte ptr [rcx], al; add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000430955: add byte ptr [rcx], al; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000041eea2: add byte ptr [rcx], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000431924: add byte ptr [rcx], al; je 0x318e1; ret; 
0x0000000000497d77: add byte ptr [rcx], al; mov eax, r8d; pop rbx; ret; 
0x0000000000401d5f: add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000495918: add byte ptr [rcx], al; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000004288db: add byte ptr [rcx], al; pop rbx; ret; 
0x0000000000426165: add byte ptr [rcx], al; ret; 
0x00000000004718c5: add byte ptr [rcx], al; xor eax, eax; add rsp, 8; ret; 
0x00000000004109dc: add byte ptr [rcx], bh; or eax, 0x32048b00; mov dword ptr [rip + 0xd38ff], eax; lea rax, [rip + 0xd38f0]; ret; 
0x000000000042b9d6: add byte ptr [rcx], bh; ret 0xa7e; 
0x0000000000461353: add byte ptr [rcx], bh; ret; 
0x000000000040b331: add byte ptr [rcx], ch; ret; 
0x0000000000481aa9: add byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000048285c: add byte ptr [rcx], dh; rol bl, 0x83; ret 0x6620; 
0x00000000004a1267: add byte ptr [rcx], dh; rol byte ptr [rbp - 0x7b], 0xc0; jne 0xa11c0; add rsp, 0x38; ret; 
0x000000000042c190: add byte ptr [rcx], dh; ror byte ptr [rax - 0x73], 0x3c; ret; 
0x000000000048d1ec: add byte ptr [rcx], dh; ror byte ptr [rbp - 0x7b], cl; dec dword ptr [rax - 0x77]; mov r8b, 0xf; xchg eax, ebp; ret 0x2148; 
0x0000000000467244: add byte ptr [rcx], dh; ror byte ptr [rcx + rcx*4 + 0x5c], 0x24; sub byte ptr [rcx - 0x77], cl; ret; 
0x0000000000403674: add byte ptr [rcx], dh; shr al, 0x54; ret 5; 
0x000000000045fa52: add byte ptr [rcx], dh; shr al, 0xa6; xor eax, 0xecebfffc; nop dword ptr [rax]; endbr64; ret; 
0x000000000045a5d6: add byte ptr [rdi + 0x12], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000045a576: add byte ptr [rdi + 0x7b], dh; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000042571a: add byte ptr [rdi + rcx - 0x42], cl; ret 0x4a8d; 
0x00000000004a28e2: add byte ptr [rdi + rcx*2 + 0x48], dh; add esp, 0x18; ret; 
0x00000000004109a7: add byte ptr [rdi + rdi - 0x75], dh; or cl, byte ptr [rax - 0x7d]; ret 0x3944; 
0x000000000049a95a: add byte ptr [rdi + rdx + 0x48], dh; add esp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x00000000004594fa: add byte ptr [rdi], cl; adc byte ptr [rsi], al; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000481558: add byte ptr [rdi], cl; adc dword ptr [rax + 0x40], eax; pop rbx; ret; 
0x00000000004087fc: add byte ptr [rdi], cl; adc dword ptr [rax + 0xa0], edx; movups xmmword ptr [rax + 0xb0], xmm3; movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x0000000000408803: add byte ptr [rdi], cl; adc dword ptr [rax + 0xb0], ebx; movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x000000000040880a: add byte ptr [rdi], cl; adc dword ptr [rax + 0xc0], esp; pop rbx; ret; 
0x00000000004275dd: add byte ptr [rdi], cl; adc dword ptr [rbp + 0x38], eax; pop rbp; pop r12; ret; 
0x0000000000426963: add byte ptr [rdi], cl; adc dword ptr [rbx + 0x48], eax; pop rbx; ret; 
0x0000000000490cdc: add byte ptr [rdi], cl; adc dword ptr [rbx], eax; pop rbx; ret; 
0x000000000041e16a: add byte ptr [rdi], cl; add eax, 0x8944c689; ret 0xeab8; 
0x00000000004112ca: add byte ptr [rdi], cl; add eax, 0xfffce6e9; dec dword ptr [rbx + 0xd3b0815]; add dh, dh; ret 0x7404; 
0x0000000000442176: add byte ptr [rdi], cl; cmp dword ptr [rbx - 1], -1; dec dword ptr [rax - 0x7f]; ret 0x80; 
0x000000000045705f: add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; lea rax, [rdi + 1]; vzeroupper; ret; 
0x00000000004431bf: add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; ret; 
0x000000000044e94f: add byte ptr [rdi], cl; mov bh, 0x16; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000044e95f: add byte ptr [rdi], cl; mov bh, 0xe; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x0000000000426b7f: add byte ptr [rdi], cl; mov dh, 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000044322f: add byte ptr [rdi], cl; mov dh, 0x16; mov byte ptr [rdi], dl; ret; 
0x000000000044efdf: add byte ptr [rdi], cl; mov dh, 0x16; mov byte ptr [rdi], dl; vzeroupper; ret; 
0x000000000041524f: add byte ptr [rdi], cl; mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x0000000000415ec7: add byte ptr [rdi], cl; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004a7def: add byte ptr [rdi], cl; mov dh, 0x44; and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x0000000000490aa9: add byte ptr [rdi], cl; mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x00000000004586af: add byte ptr [rdi], cl; mov dh, 0x47; cmc; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000045869f: add byte ptr [rdi], cl; mov dh, 0x47; hlt; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x000000000045866f: add byte ptr [rdi], cl; mov dh, 0x47; int1; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x000000000045868f: add byte ptr [rdi], cl; mov dh, 0x47; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x000000000045867f: add byte ptr [rdi], cl; mov dh, 0x47; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x000000000041f3cf: add byte ptr [rdi], cl; mov dh, 0x4b; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000045a7ef: add byte ptr [rdi], cl; mov dh, 0xc1; pop rbx; ret; 
0x00000000004331df: add byte ptr [rdi], cl; mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000000438eef: add byte ptr [rdi], cl; mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x000000000043990f: add byte ptr [rdi], cl; mov dh, 7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x00000000004391ef: add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp al, dh; ret; 
0x000000000043921f: add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], ah; ret; 
0x000000000043920f: add byte ptr [rdi], cl; mov esp, 0x448d48c0; cmp byte ptr [rax], dl; ret; 
0x00000000004828cf: add byte ptr [rdi], cl; mov esp, 0xc22948c0; jbe 0x82910; add rax, rdi; ret; 
0x00000000004828df: add byte ptr [rdi], cl; mov esp, 0xc22948c0; jbe 0x82910; lea rax, [rdi + rax + 0x10]; ret; 
0x0000000000498c2f: add byte ptr [rdi], cl; mov esp, 0xc22948c0; jbe 0x98c70; add rax, rdi; ret; 
0x0000000000498c3f: add byte ptr [rdi], cl; mov esp, 0xc22948c0; jbe 0x98c70; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004391ff: add byte ptr [rdi], cl; mov esp, 0xf80148c0; ret; 
0x0000000000452ee4: add byte ptr [rdi], cl; test byte ptr [rbp + 0x48fffffb], ah; mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x0000000000470237: add byte ptr [rdi], cl; test dword ptr [rax + 0x48000000], ebx; add esp, 0x98; ret; 
0x0000000000402af8: add byte ptr [rdi], cl; test dword ptr [rax + 0x48000000], edx; add esp, 0xc8; ret; 
0x000000000049e591: add byte ptr [rdi], cl; test dword ptr [rbp], edi; add byte ptr [rax], al; leave; ret; 
0x000000000045c265: add byte ptr [rdi], cl; test dword ptr [rcx + 0x48000000], ebx; add esp, 0x68; ret; 
0x00000000004a0e0b: add byte ptr [rdi], cl; test dword ptr [rdx + 0x48000001], edx; add esp, 0x78; pop rbp; pop r12; ret; 
0x000000000045bfe4: add byte ptr [rdi], cl; test dword ptr [rsi + 0x48000000], esp; add esp, 0x68; pop rbp; pop r12; ret; 
0x00000000004053f4: add byte ptr [rdi], cl; test esp, ecx; add al, byte ptr [rax]; add byte ptr [rbx - 0x76bef7bd], cl; ret 0xc085; 
0x000000000046061f: add byte ptr [rdi], cl; xchg eax, ebp; ret 0x8348; 
0x0000000000460ded: add byte ptr [rdi], cl; xchg eax, ebp; ret 0x8d48; 
0x000000000042004a: add byte ptr [rdi], cl; xchg eax, esp; ret 0x3948; 
0x0000000000406112: add byte ptr [rdi], cl; xchg eax, esp; ret 0x5422; 
0x0000000000460dcc: add byte ptr [rdi], cl; xchg eax, esp; ret 0x8d48; 
0x000000000047bc05: add byte ptr [rdi], cl; xchg esp, edx; sub byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000450bcf: add byte ptr [rdx + 0x48028801], cl; mov eax, edi; ret; 
0x000000000045f829: add byte ptr [rdx + 0x64], bh; test eax, eax; cmove eax, edx; ret; 
0x0000000000429dfb: add byte ptr [rdx + rdx + 0x48], dh; mov dword ptr [rdx + 0x28], ecx; mov rax, qword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x000000000040a874: add byte ptr [rdx - 0x21], bh; cmovne eax, edx; ret; 
0x000000000042cba5: add byte ptr [rdx - 0x7d], cl; xor qword ptr [rax], r9; add dword ptr [rax + 0x39], ecx; ret; 
0x0000000000431c96: add byte ptr [rdx], 0; cmove rax, rdx; ret; 
0x0000000000430f76: add byte ptr [rdx], 0; cmovne rax, rdx; ret; 
0x0000000000431c8f: add byte ptr [rdx], 0; lea rax, [rip + 0x280a7]; cmove rax, rdx; ret; 
0x000000000049b9f5: add byte ptr [rdx], al; add byte ptr [rax], al; add dh, dh; add eax, 0x49f1f; jne 0x9ba08; ret; 
0x000000000046fe6b: add byte ptr [rdx], al; add byte ptr [rax], al; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000464d06: add byte ptr [rdx], al; add rsp, 8; ret; 
0x000000000042972b: add byte ptr [rdx], al; jbe 0x29730; ret; 
0x0000000000431b90: add byte ptr [rdx], al; lea rax, [rip + 0x1d8a7]; lea rdx, [rip + 0x21cc0]; cmovne rax, rdx; ret; 
0x0000000000430f40: add byte ptr [rdx], al; lea rax, [rip + 0x1e407]; lea rdx, [rip + 0x1e5e0]; cmovne rax, rdx; ret; 
0x00000000004310a0: add byte ptr [rdx], al; lea rax, [rip + 0xc97]; lea rdx, [rip + 0x1fc30]; cmovne rax, rdx; ret; 
0x0000000000430ee0: add byte ptr [rdx], al; lea rax, [rip + 0xeb7]; lea rdx, [rip + 0x25b0]; cmovne rax, rdx; ret; 
0x0000000000431ca5: add byte ptr [rdx], al; lea rdx, [rip + 0x27832]; lea rax, [rip + 0x278eb]; cmove rax, rdx; ret; 
0x0000000000431b35: add byte ptr [rdx], al; lea rdx, [rip + 0x27992]; lea rax, [rip + 0x27a4b]; cmove rax, rdx; ret; 
0x00000000004319d5: add byte ptr [rdx], al; lea rdx, [rip + 0x27b02]; lea rax, [rip + 0x27bbb]; cmove rax, rdx; ret; 
0x0000000000431c37: add byte ptr [rdx], al; lea rdx, [rip + 0x27c70]; lea rax, [rip + 0x27cb9]; cmove rax, rdx; ret; 
0x0000000000431ac7: add byte ptr [rdx], al; lea rdx, [rip + 0x27dd0]; lea rax, [rip + 0x27e19]; cmove rax, rdx; ret; 
0x0000000000431967: add byte ptr [rdx], al; lea rdx, [rip + 0x27f40]; lea rax, [rip + 0x27f89]; cmove rax, rdx; ret; 
0x0000000000431c89: add byte ptr [rdx], al; lea rdx, [rip + 0x2805e]; lea rax, [rip + 0x280a7]; cmove rax, rdx; ret; 
0x0000000000431b19: add byte ptr [rdx], al; lea rdx, [rip + 0x281be]; lea rax, [rip + 0x28207]; cmove rax, rdx; ret; 
0x00000000004319b9: add byte ptr [rdx], al; lea rdx, [rip + 0x2832e]; lea rax, [rip + 0x28377]; cmove rax, rdx; ret; 
0x0000000000431a79: add byte ptr [rdx], al; lea rdx, [rip + 0x28ace]; lea rax, [rip + 0x28b27]; cmove rax, rdx; ret; 
0x0000000000430e3c: add byte ptr [rdx], bh; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x0000000000498878: add byte ptr [rdx], dl; jae 0x98870; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000043b18f: add byte ptr [rip + 0xff], ah; and ecx, 0xff; sub eax, ecx; ret; 
0x000000000043b18e: add byte ptr [rip + 0xff], spl; and ecx, 0xff; sub eax, ecx; ret; 
0x000000000043a8c2: add byte ptr [rip + 0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000040a423: add byte ptr [rsi + 0x22], dh; cmp edi, 0xc0000008; jne 0xa4a0; mov rax, 0x4ded80; ret; 
0x000000000040a3e0: add byte ptr [rsi + 0x53], dh; cmp edi, 0x16; jne 0xa4a0; mov rax, 0x4def00; ret; 
0x000000000040a39d: add byte ptr [rsi + 0x54], dh; cmp edi, 0xe0000008; jne 0xa4a0; mov rax, 0x4dee00; ret; 
0x0000000000426182: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; lea rdi, [rip + 0xbeb1c]; syscall; ret; 
0x0000000000497e5e: add byte ptr [rsi + 0x81], bh; mov eax, 0xca; syscall; ret; 
0x0000000000439e86: add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000049ecad: add byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ret 0x290f; 
0x000000000042221a: add byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ret 0x7589; 
0x0000000000498bdb: add byte ptr [rsi + 0xf], ah; jbe 0x98c2f; adc byte ptr [rsi + 0xf], ah; xlatb; rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x00000000004556fa: add byte ptr [rsi + 0xf], ah; je 0x55745; adc byte ptr [rsi + 0xf], ah; xlatb; ror byte ptr [rcx - 0x7d], 1; ret 0x4d10; 
0x000000000048287b: add byte ptr [rsi + 0xf], ah; je 0x828cf; adc byte ptr [rsi + 0xf], ah; xlatb; rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x0000000000428663: add byte ptr [rsi + 0xf], ah; out dx, eax; ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x0000000000492ca8: add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x00000000004827c4: add byte ptr [rsi + 0xf], ah; xlatb; ret 0xc085; 
0x000000000042938c: add byte ptr [rsi + 1], dh; ret; 
0x0000000000420d03: add byte ptr [rsi + rbp + 0x5b], dh; mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000004289a7: add byte ptr [rsi + rdx + 0x48], dh; mov eax, dword ptr [rdi + 8]; cmp rax, rdx; jae 0x289d8; movzx eax, byte ptr [rax]; ret; 
0x000000000040257d: add byte ptr [rsi - 0x70], ah; endbr64; mov rax, 0x4e2130; mov rax, qword ptr [rax]; mov eax, dword ptr [rax]; ret; 
0x0000000000454efd: add byte ptr [rsi - 0x70], ah; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, [rdx]; ret; 
0x00000000004841cd: add byte ptr [rsi - 0x70], ah; mov ch, dh; and ch, 0xf; je 0x841f0; add rax, 2; ret; 
0x0000000000452bdd: add byte ptr [rsi - 0x70], ah; mov dword ptr [rcx], edx; mov byte ptr [rcx + 4], dl; ret; 
0x00000000004563fd: add byte ptr [rsi - 0x70], ah; mov dword ptr [rdi], edx; mov byte ptr [rdi + 4], dl; ret; 
0x00000000004553dd: add byte ptr [rsi - 0x70], ah; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000452bad: add byte ptr [rsi - 0x70], ah; mov word ptr [rcx], dx; ret; 
0x00000000004563cd: add byte ptr [rsi - 0x70], ah; mov word ptr [rdi], dx; ret; 
0x000000000045567d: add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x000000000045563d: add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x000000000045565d: add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000456b6d: add byte ptr [rsi - 0x70], ah; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x000000000046f04d: add byte ptr [rsi - 0x70], ah; ret; 
0x000000000048356d: add byte ptr [rsi - 0x70], ah; tzcnt eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000450bdf: add byte ptr [rsi - 0x75], ah; add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x0000000000450bef: add byte ptr [rsi - 0x75], ah; add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rdx + 0x42880241]; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x000000000045bef9: add byte ptr [rsi], dl; add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x000000000047211a: add byte ptr cs:[rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000040b49a: add byte ptr es:[rax], al; nop dword ptr [rax]; lea rax, [rip + 0x9e078]; ret; 
0x000000000045f82b: add byte ptr fs:[rax], al; add byte ptr [rbp - 0x3dbbf040], al; ret; 
0x0000000000481d92: add byte ptr gs:[rbp + 0x31], al; in al, 0x5d; mov rax, r12; pop r12; pop r13; ret; 
0x000000000044f10f: add ch, al; cli; jg 0x4f11b; vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm0; vzeroupper; ret; 
0x000000000044e0ef: add ch, al; std; xlatb; rol dword ptr [rbp - 0x3a678a40], 0xfd; xlatb; ret 0xc085; 
0x0000000000430fb6: add ch, bh; lcall [rdx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000046bf0f: add cl, byte ptr [r13 + 0x39]; ret 0x820f; 
0x0000000000450bf7: add cl, byte ptr [r8 - 0x76b7fdbe]; clc; ret; 
0x0000000000452a17: add cl, byte ptr [r8 - 0x76b7fdbe]; clc; sub r8, 3; lea rcx, [rdx + 3]; jne 0x52d30; ret; 
0x000000000048a030: add cl, byte ptr [rax + 0x39]; ret 0x860f; 
0x0000000000469d54: add cl, byte ptr [rax + 0x39]; ret; 
0x000000000047c157: add cl, byte ptr [rax + 0x39]; ror dword ptr [rdi], 0x8d; iretd; or eax, dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret 0xb8; 
0x000000000045a4f8: add cl, byte ptr [rax + 0x77f8c50f]; ret; 
0x000000000042188d: add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x0000000000421a4d: add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret; 
0x000000000040b514: add cl, byte ptr [rax + rax]; ret; 
0x0000000000431ca6: add cl, byte ptr [rax - 0x73]; adc eax, 0x27832; lea rax, [rip + 0x278eb]; cmove rax, rdx; ret; 
0x0000000000431b36: add cl, byte ptr [rax - 0x73]; adc eax, 0x27992; lea rax, [rip + 0x27a4b]; cmove rax, rdx; ret; 
0x00000000004319d6: add cl, byte ptr [rax - 0x73]; adc eax, 0x27b02; lea rax, [rip + 0x27bbb]; cmove rax, rdx; ret; 
0x0000000000431c38: add cl, byte ptr [rax - 0x73]; adc eax, 0x27c70; lea rax, [rip + 0x27cb9]; cmove rax, rdx; ret; 
0x0000000000431ac8: add cl, byte ptr [rax - 0x73]; adc eax, 0x27dd0; lea rax, [rip + 0x27e19]; cmove rax, rdx; ret; 
0x0000000000431968: add cl, byte ptr [rax - 0x73]; adc eax, 0x27f40; lea rax, [rip + 0x27f89]; cmove rax, rdx; ret; 
0x0000000000431c8a: add cl, byte ptr [rax - 0x73]; adc eax, 0x2805e; lea rax, [rip + 0x280a7]; cmove rax, rdx; ret; 
0x0000000000431b1a: add cl, byte ptr [rax - 0x73]; adc eax, 0x281be; lea rax, [rip + 0x28207]; cmove rax, rdx; ret; 
0x00000000004319ba: add cl, byte ptr [rax - 0x73]; adc eax, 0x2832e; lea rax, [rip + 0x28377]; cmove rax, rdx; ret; 
0x0000000000431a7a: add cl, byte ptr [rax - 0x73]; adc eax, 0x28ace; lea rax, [rip + 0x28b27]; cmove rax, rdx; ret; 
0x0000000000431be4: add cl, byte ptr [rax - 0x73]; add eax, 0x14914; lea rdx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x0000000000431b91: add cl, byte ptr [rax - 0x73]; add eax, 0x1d8a7; lea rdx, [rip + 0x21cc0]; cmovne rax, rdx; ret; 
0x0000000000430f41: add cl, byte ptr [rax - 0x73]; add eax, 0x1e407; lea rdx, [rip + 0x1e5e0]; cmovne rax, rdx; ret; 
0x000000000043104b: add cl, byte ptr [rax - 0x73]; add eax, 0x3afd; lea rdx, [rip + 0x5356]; cmovne rax, rdx; ret; 
0x00000000004318f2: add cl, byte ptr [rax - 0x73]; add eax, 0x7a86; lea rdx, [rip + 0x25b3f]; cmovne rax, rdx; ret; 
0x00000000004310a1: add cl, byte ptr [rax - 0x73]; add eax, 0xc97; lea rdx, [rip + 0x1fc30]; cmovne rax, rdx; ret; 
0x0000000000430ee1: add cl, byte ptr [rax - 0x73]; add eax, 0xeb7; lea rdx, [rip + 0x25b0]; cmovne rax, rdx; ret; 
0x000000000044eec9: add cl, byte ptr [rax - 0x73]; jg 0x4eed0; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c59: add cl, byte ptr [rax - 0x73]; jg 0x55c60; jne 0x564f0; ret; 
0x000000000042cb70: add cl, byte ptr [rax - 0x73]; push rsp; ret; 
0x0000000000455015: add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; lea rax, [rdx + 0xc]; ret; 
0x0000000000450c85: add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; mov rax, rdi; ret; 
0x0000000000450bb5: add cl, byte ptr [rax - 0x75]; or byte ptr [r8 - 0x77], cl; or byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000450bf8: add cl, byte ptr [rax - 0x76b7fdbe]; clc; ret; 
0x0000000000452a18: add cl, byte ptr [rax - 0x76b7fdbe]; clc; sub r8, 3; lea rcx, [rdx + 3]; jne 0x52d30; ret; 
0x0000000000450b65: add cl, byte ptr [rax - 0x77]; clc; ret; 
0x00000000004529d3: add cl, byte ptr [rax - 0x77]; clc; sub r8, 1; lea rcx, [rdx + 1]; jne 0x52d30; ret; 
0x00000000004529f5: add cl, byte ptr [rax - 0x77]; clc; sub r8, 2; lea rcx, [rdx + 2]; jne 0x52d30; ret; 
0x0000000000452a1b: add cl, byte ptr [rax - 0x77]; clc; sub r8, 3; lea rcx, [rdx + 3]; jne 0x52d30; ret; 
0x0000000000452a33: add cl, byte ptr [rax - 0x77]; clc; sub r8, 4; lea rcx, [rdx + 4]; jne 0x52d30; ret; 
0x0000000000452775: add cl, byte ptr [rax - 0x77]; clc; sub r8, 8; lea rcx, [rdx + 8]; jne 0x52d30; ret; 
0x00000000004658a2: add cl, byte ptr [rax - 0x77]; retf 0x2948; ret 0x8348; 
0x000000000048b17a: add cl, byte ptr [rax - 0x7b]; sal byte ptr [rax + rsi*2 + 0x48], 0x89; ret 0x8b48; 
0x0000000000472943: add cl, byte ptr [rax - 0x7d]; ret 0x4801; 
0x000000000043168c: add cl, byte ptr [rax - 0x7d]; ret 0x4802; 
0x000000000044f3b0: add cl, byte ptr [rax - 0x7d]; ret 0x4808; 
0x0000000000465234: add cl, byte ptr [rax - 0x7d]; ret 0x4902; 
0x000000000047f088: add cl, byte ptr [rax - 0x7d]; ret 0xe902; 
0x000000000044f413: add cl, byte ptr [rax - 0x7d]; ret 0xe908; 
0x000000000041327d: add cl, byte ptr [rax - 0x7d]; ret 0xf01; 
0x0000000000490a90: add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000040a8b3: add cl, byte ptr [rbp + 0x10f504]; add byte ptr [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000040a86d: add cl, byte ptr [rbp + 0x14f504]; add byte ptr [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000046bf10: add cl, byte ptr [rbp + 0x39]; ret 0x820f; 
0x0000000000443002: add cl, byte ptr [rbx + 0x257890e]; mov dword ptr [rdi], ecx; ret; 
0x0000000000450c33: add cl, byte ptr [rbx + 0x42890341]; add ecx, dword ptr [rax - 0x77]; clc; ret; 
0x0000000000454f95: add cl, byte ptr [rbx + 0x42890541]; add eax, 0x8428d48; ret; 
0x0000000000450c75: add cl, byte ptr [rbx + 0x42890841]; or byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000045cbe4: add cl, byte ptr [rbx + 0x750c2444]; ret 0xd8f7; 
0x000000000048049c: add cl, byte ptr [rcx - 0x77]; ret; 
0x0000000000455c78: add cl, byte ptr [rcx - 0x7d]; call 0x7f92a483; add ecx, dword ptr [rdi]; test dword ptr [rcx + 8], ebp; add byte ptr [rax], al; ret; 
0x000000000047f839: add cl, byte ptr [rdi]; xchg eax, ebp; ret 0x5389; 
0x000000000049c085: add cl, byte ptr [rdi]; xchg eax, esp; ret 0xfb83; 
0x0000000000450bf5: add cl, byte ptr [rdx + 0x42880241]; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x0000000000454f53: add cl, byte ptr [rdx + 0x42880441]; add al, 0x48; lea eax, [rdx + 4]; ret; 
0x0000000000450c13: add cl, byte ptr [rdx + 0x42880441]; add al, 0x48; mov eax, edi; ret; 
0x000000000040d75b: add cl, ch; jg 0xd762; add byte ptr [rax], al; nop dword ptr [rax]; lea rax, [rip + 0x9bdb0]; ret; 
0x000000000046f048: add cl, ch; mov dl, 5; add byte ptr [rax], al; nop; ret; 
0x000000000040b497: add cl, ch; movabs dword ptr [0x8d48001f0f000026], eax; add eax, 0x9e078; ret; 
0x000000000040da18: add cl, ch; ret 0x2e; 
0x000000000040d9a8: add cl, ch; ret 0x2f; 
0x0000000000495787: add cl, ch; ret 0xffe2; 
0x0000000000493bb4: add cl, ch; ret 0xfff6; 
0x00000000004a6385: add cl, ch; ret 0xfffd; 
0x0000000000407579: add cl, ch; ret; 
0x0000000000401e87: add cl, cl; ret; 
0x0000000000490e6f: add dh, bh; dec dword ptr [rax - 0x39]; ret 0xffff; 
0x00000000004431b3: add dh, bl; movq qword ptr [rdi], mm1; ret; 
0x0000000000458c97: add dh, byte ptr [rbp + 0x16]; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x58c90; ret; 
0x0000000000458d47: add dh, byte ptr [rbp + 0x16]; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x58d40; ret; 
0x0000000000431986: add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000445efc: add dh, byte ptr [rdx + 0x10]; mov si, word ptr [rsi]; mov cx, word ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x0000000000459333: add dh, byte ptr [rdx + 8]; mov word ptr [rdi], cx; mov word ptr [rsi - 2], cx; ret; 
0x000000000042972c: add dh, byte ptr [rsi + 1]; ret; 
0x000000000042c92e: add dh, byte ptr [rsp - 0x77]; ret 0xb48b; 
0x000000000049b9f9: add dh, dh; add eax, 0x49f1f; jne 0x9ba08; ret; 
0x0000000000431c4f: add dh, dh; add eax, 0xb3132; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000431adf: add dh, dh; add eax, 0xb32a2; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x000000000043197f: add dh, dh; add eax, 0xb3402; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000410d2b: add dh, dh; ret 0x7402; 
0x000000000048c4cc: add dh, dh; ret 0x7403; 
0x00000000004112d7: add dh, dh; ret 0x7404; 
0x0000000000410ce7: add dh, dh; ret 0x7408; 
0x000000000042338f: add dh, dh; ret 0x7420; 
0x0000000000410d3a: add dh, dh; ret 0x7440; 
0x00000000004571f7: add dh, dh; ret 0x7501; 
0x0000000000457204: add dh, dh; ret 0x7502; 
0x0000000000457211: add dh, dh; ret 0x7504; 
0x00000000004571c9: add dh, dh; ret 0x7510; 
0x00000000004571d6: add dh, dh; ret 0x7520; 
0x00000000004571e3: add dh, dh; ret 0x7540; 
0x000000000042c482: add dh, dh; ret 0xf01; 
0x00000000004857f1: add dh, dh; ret 0xf07; 
0x00000000004792a7: add dh, dh; ret 0xf40; 
0x000000000049628f: add dh, dh; ret 0xf50; 
0x0000000000492e9f: add dh, dh; ret; 
0x000000000046a417: add dword ptr [r8 + 0x39], r9d; ret; 
0x0000000000415204: add dword ptr [r8 - 0x7d], ecx; ret; 
0x0000000000454f01: add dword ptr [rax + 0x28d4802], ecx; ret; 
0x0000000000495262: add dword ptr [rax + 0x29], ecx; fimul dword ptr [rax + 0x39]; ret 0xe57f; 
0x000000000041ed28: add dword ptr [rax + 0x29], ecx; fmul dword ptr [rax - 0x3f]; call 0x648f3936; ret; 
0x000000000046a464: add dword ptr [rax + 0x39480751], ecx; ret; 
0x000000000041f5eb: add dword ptr [rax + 0x39], ecx; ret 0x840f; 
0x00000000004665c3: add dword ptr [rax + 0x39], ecx; ret 0xe775; 
0x000000000042cbab: add dword ptr [rax + 0x39], ecx; ret; 
0x00000000004a7f2b: add dword ptr [rax + 0x39], ecx; ror dword ptr [rdi], 0x84; add dword ptr [rax], r8d; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x00000000004a80a3: add dword ptr [rax + 0x39], ecx; sal dword ptr [rcx + rcx*4 + 0x48], 0x89; ret 0xc148; 
0x0000000000427a53: add dword ptr [rax + 0xf740a39], eax; cmp rcx, rsi; ja 0x27a50; lea eax, [rdx + rdi]; ret; 
0x0000000000491b6f: add dword ptr [rax + 1], ecx; ror byte ptr [rax - 0x77], 1; ret 0xc148; 
0x000000000041e08f: add dword ptr [rax + 1], ecx; ror byte ptr [rax - 0x77], 1; ret 0xe281; 
0x000000000045dc8b: add dword ptr [rax + 9], ecx; ror byte ptr [rcx - 0x77], 1; or byte ptr [r9 - 0x75], cl; add dword ptr [rbx + 0x94901e0], eax; ret; 
0x0000000000490d2b: add dword ptr [rax + rax*8 - 0x41f0318b], eax; ret 0xd8f7; 
0x0000000000430513: add dword ptr [rax + rdi - 0x3e], eax; jne 0x30500; sub rax, 0x10; ret; 
0x00000000004529da: add dword ptr [rax - 0x73], ecx; add qword ptr [rdi], rcx; test dword ptr [rbx + 3], ecx; add byte ptr [rax], al; ret; 
0x000000000044ed1b: add dword ptr [rax - 0x73], ecx; jg 0x4ed21; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c35: add dword ptr [rax - 0x73], ecx; jg 0x55c3b; jne 0x564f0; ret; 
0x0000000000450bd1: add dword ptr [rax - 0x776b7fe], ecx; ret; 
0x00000000004529d1: add dword ptr [rax - 0x776b7fe], ecx; sub r8, 1; lea rcx, [rdx + 1]; jne 0x52d30; ret; 
0x00000000004293b6: add dword ptr [rax - 0x77], ecx; adc eax, 0xb93d2; ret; 
0x0000000000481d7c: add dword ptr [rax - 0x77], ecx; add byte ptr [r9 + rcx*4 - 0x20], r9b; pop rbp; pop r12; pop r13; ret; 
0x0000000000455012: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; lea rax, [rdx + 0xc]; ret; 
0x0000000000450c82: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x75]; add eax, 0x5428948; mov rax, rdi; ret; 
0x0000000000450bb2: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x75]; or byte ptr [r8 - 0x77], cl; or byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000450b62: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x0000000000454f92: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rbx + 0x42890541]; add eax, 0x8428d48; ret; 
0x0000000000450c72: add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rbx + 0x42890841]; or byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000048f047: add dword ptr [rax - 0x77], ecx; add eax, 0x56421; ret; 
0x0000000000464047: add dword ptr [rax - 0x77], ecx; ret 0x2b48; 
0x0000000000430491: add dword ptr [rax - 0x77], ecx; ret 0x3174; 
0x0000000000424a46: add dword ptr [rax - 0x77], ecx; ret 0x850f; 
0x00000000004854cb: add dword ptr [rax - 0x77], ecx; ret 0x8948; 
0x000000000048a95a: add dword ptr [rax - 0x77], ecx; ret 0x8b48; 
0x000000000048224f: add dword ptr [rax - 0x78], eax; jl 0x82288; adc byte ptr [rbp - 0x7cb7fd8e], cl; ret 0x4802; 
0x0000000000415d2f: add dword ptr [rax - 0x7cb700b8], ecx; ret 0x4901; 
0x000000000049b71b: add dword ptr [rax - 0x7d], ecx; ret 0x3901; 
0x0000000000471205: add dword ptr [rax - 0x7d], ecx; ret 0x4001; 
0x0000000000470604: add dword ptr [rax - 0x7d], ecx; ret 0x4101; 
0x0000000000467a5c: add dword ptr [rax - 0x7d], ecx; ret 0x4801; 
0x000000000048d75c: add dword ptr [rax - 0x7d], ecx; ret 0x4810; 
0x000000000048d771: add dword ptr [rax - 0x7d], ecx; ret 0x4f10; 
0x0000000000415253: add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x0000000000497bd4: add dword ptr [rax - 0x7d], ecx; ret 0x8404; 
0x00000000004125bd: add dword ptr [rax - 0x7d], ecx; ret 0x8801; 
0x0000000000464b2c: add dword ptr [rax - 0x7d], ecx; ret 0xf01; 
0x0000000000415205: add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000415948: add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x0000000000491843: add dword ptr [rax], 0x43894800; sbb byte ptr [rax + 0x5a], bl; pop rbx; ret; 
0x0000000000426184: add dword ptr [rax], 0xcab80000; add byte ptr [rax], al; add byte ptr [rax - 0x73], cl; cmp eax, 0xbeb1c; syscall; ret; 
0x000000000045a695: add dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; retf 0xd975; vzeroupper; ret; 
0x000000000048dca0: add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000482c47: add dword ptr [rax], eax; add byte ptr [rax + 0xf], cl; mov ebp, 0xf80148c0; ret; 
0x000000000048299f: add dword ptr [rax], eax; add byte ptr [rax + 1], cl; clc; add rax, rcx; vzeroupper; ret; 
0x0000000000478868: add dword ptr [rax], eax; add byte ptr [rax - 0x39], cl; ret 0x3bc0; 
0x000000000049865f: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add eax, 0x67; cmovne rax, rdx; ret; 
0x0000000000405e5f: add dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; test byte ptr [rax + rax], ah; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000423cb9: add dword ptr [rax], eax; add byte ptr [rax - 0x75], cl; test eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000405e67: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000004a3695: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x00000000004595e2: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; sal ebx, 1; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000469e1b: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; shr bl, 1; ret 0x1f0f; 
0x000000000041f262: add dword ptr [rax], eax; add byte ptr [rax - 0x7bf0cf07], al; ret 1; 
0x0000000000488ab7: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; jge 0x88a86; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000438947: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000048ee30: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4c08; 
0x000000000042cf54: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xb817; 
0x000000000043134e: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x000000000044d87f: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000438975: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000462a81: add dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000048e361: add dword ptr [rax], eax; add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004a4359: add dword ptr [rax], eax; add byte ptr [rax], al; cmp qword ptr [rsi + 8], rcx; ja 0xa4365; sbb eax, eax; ret; 
0x000000000049e8fe: add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000042975e: add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0xb9004], eax; ret; 
0x000000000040209e: add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0xe2228], eax; add rsp, 8; ret; 
0x0000000000497e5b: add dword ptr [rax], eax; add byte ptr [rax], al; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x000000000049e826: add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rdi], rsi; ret; 
0x0000000000429737: add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xb900e], rax; ret; 
0x000000000042970e: add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xb902f], rax; ret; 
0x00000000004296ee: add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xb9047], rax; ret; 
0x00000000004275da: add dword ptr [rax], eax; add byte ptr [rax], al; movups xmmword ptr [rbp + 0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000000497c2a: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbp; pop r12; pop r13; ret; 
0x0000000000480e35: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x0000000000403089: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbx; mov dword ptr [rip + 0xdf070], 1; ret; 
0x0000000000481a64: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x000000000047fd1b: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x0000000000403094: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000045c151: add dword ptr [rax], eax; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x5c1b0; ret; 
0x000000000045ce25: add dword ptr [rax], eax; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x5ce38; ret; 
0x0000000000428534: add dword ptr [rax], eax; add byte ptr [rbp + 0xf], dh; sub edx, dword ptr [rax + 0x18]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x000000000046bf0a: add dword ptr [rax], eax; add byte ptr [rbp + rcx*4 + 0x41], cl; add cl, byte ptr [rbp + 0x39]; ret 0x820f; 
0x0000000000465f17: add dword ptr [rax], eax; add byte ptr [rbp - 0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x000000000042fb83: add dword ptr [rax], eax; add byte ptr [rbx + 0x4c], bl; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000004a35e1: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000462153: add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000410cdf: add dword ptr [rax], eax; add byte ptr [rbx + 0xd40b415], cl; add dh, dh; ret 0x7408; 
0x0000000000469d99: add dword ptr [rax], eax; add byte ptr [rcx + 0x3948fc51], cl; ret; 
0x0000000000492322: add dword ptr [rax], eax; add byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x0000000000467242: add dword ptr [rax], eax; add byte ptr [rcx], dh; ror byte ptr [rcx + rcx*4 + 0x5c], 0x24; sub byte ptr [rcx - 0x77], cl; ret; 
0x0000000000425718: add dword ptr [rax], eax; add byte ptr [rdi + rcx - 0x42], cl; ret 0x4a8d; 
0x00000000004109a5: add dword ptr [rax], eax; add byte ptr [rdi + rdi - 0x75], dh; or cl, byte ptr [rax - 0x7d]; ret 0x3944; 
0x0000000000490aa7: add dword ptr [rax], eax; add byte ptr [rdi], cl; mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000040a39b: add dword ptr [rax], eax; add byte ptr [rsi + 0x54], dh; cmp edi, 0xe0000008; jne 0xa4a0; mov rax, 0x4dee00; ret; 
0x000000000040b495: add dword ptr [rax], eax; add cl, ch; movabs dword ptr [0x8d48001f0f000026], eax; add eax, 0x9e078; ret; 
0x00000000004571f5: add dword ptr [rax], eax; add dh, dh; ret 0x7501; 
0x0000000000457202: add dword ptr [rax], eax; add dh, dh; ret 0x7502; 
0x000000000045720f: add dword ptr [rax], eax; add dh, dh; ret 0x7504; 
0x00000000004571c7: add dword ptr [rax], eax; add dh, dh; ret 0x7510; 
0x00000000004571d4: add dword ptr [rax], eax; add dh, dh; ret 0x7520; 
0x00000000004571e1: add dword ptr [rax], eax; add dh, dh; ret 0x7540; 
0x0000000000430fee: add dword ptr [rax], eax; cmove rax, rdx; ret; 
0x0000000000430f4e: add dword ptr [rax], eax; cmovne rax, rdx; ret; 
0x0000000000431d27: add dword ptr [rax], eax; lea rax, [rip + 0x1bfc0]; cmove rax, rdx; ret; 
0x0000000000430fe7: add dword ptr [rax], eax; lea rax, [rip + 0x1d330]; cmove rax, rdx; ret; 
0x0000000000431bea: add dword ptr [rax], eax; lea rdx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x0000000000430f47: add dword ptr [rax], eax; lea rdx, [rip + 0x1e5e0]; cmovne rax, rdx; ret; 
0x0000000000431b97: add dword ptr [rax], eax; lea rdx, [rip + 0x21cc0]; cmovne rax, rdx; ret; 
0x0000000000430e87: add dword ptr [rax], eax; lea rdx, [rip + 0x26290]; cmovne rax, rdx; ret; 
0x0000000000416012: add dword ptr [rax], eax; nop dword ptr [rax]; ret; 
0x0000000000464d04: add dword ptr [rax], ecx; add byte ptr [rdx], al; add rsp, 8; ret; 
0x00000000004304ab: add dword ptr [rax], ecx; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x00000000004a7f31: add dword ptr [rax], r8d; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000465f16: add dword ptr [rax], r8d; add byte ptr [rbp - 0x7b], al; ror byte ptr [rdi], 0x85; ret; 
0x00000000004304aa: add dword ptr [rax], r9d; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x000000000048172b: add dword ptr [rbp + 0x12], esi; mov eax, dword ptr [rdi + 0x10]; sub rdx, qword ptr [rcx + 0x10]; sar rdx, 2; sub eax, edx; ret; 
0x0000000000459007: add dword ptr [rbp + 0x16], esi; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x59000; sub rax, 1; ret; 
0x0000000000458eb7: add dword ptr [rbp + 0x16], esi; movzx edx, byte ptr [rsi + rax + 3]; test dl, dl; jne 0x58eb0; lea rax, [rcx - 1]; ret; 
0x00000000004088a1: add dword ptr [rbp + 0x1c], esi; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045b6bb: add dword ptr [rbp - 0x57c03b0], ecx; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x0000000000443072: add dword ptr [rbx + 0x157890e], ecx; mov dword ptr [rdi], ecx; ret; 
0x0000000000495919: add dword ptr [rbx + 0x44], ebx; mov eax, eax; pop rbp; pop r12; ret; 
0x000000000045dc95: add dword ptr [rbx + 0x94901e0], eax; ret; 
0x000000000042b9d0: add dword ptr [rbx + 0xb6d9905], ecx; add byte ptr [rcx], bh; ret 0xa7e; 
0x0000000000407d32: add dword ptr [rbx - 0x2388f908], eax; mov eax, 1; ret; 
0x000000000045ab00: add dword ptr [rbx - 0x50f0fe40], eax; ret 0x518d; 
0x000000000047ec3c: add dword ptr [rbx - 0x77ccf18], eax; or dword ptr [rdi], ecx; xchg bh, al; add al, byte ptr [rax]; add byte ptr [rcx - 0x76b3d395], cl; ret 0x8348; 
0x000000000041b33e: add dword ptr [rbx - 0x7bf0fd08], eax; ret 0x1d; 
0x000000000042943d: add dword ptr [rcx + 0x21], ecx; ret 0x8d4d; 
0x0000000000454f81: add dword ptr [rcx + 0x3418b02], ecx; mov dword ptr [rdx + 3], eax; lea rax, [rdx + 6]; ret; 
0x0000000000450c31: add dword ptr [rcx + 0x3418b02], ecx; mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x0000000000413a7e: add dword ptr [rcx + 0x39], ecx; ror byte ptr [rdi], cl; test al, dl; add al, 0; add byte ptr [rax - 0x77], cl; ret 0x448b; 
0x0000000000454f61: add dword ptr [rcx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [rdx + 4], eax; lea rax, [rdx + 5]; ret; 
0x0000000000450c21: add dword ptr [rcx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [rdx + 4], eax; mov rax, rdi; ret; 
0x0000000000454f51: add dword ptr [rcx + 0x4418a02], ecx; mov byte ptr [rdx + 4], al; lea rax, [rdx + 4]; ret; 
0x0000000000450c11: add dword ptr [rcx + 0x4418a02], ecx; mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x000000000045dc98: add dword ptr [rcx + 9], ecx; ret; 
0x0000000000426db4: add dword ptr [rcx + rbp - 0x77], esi; ret 0xff3; 
0x0000000000420d5c: add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000497d78: add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x0000000000450c01: add dword ptr [rcx - 0x776b7fe], ecx; ret; 
0x0000000000452a31: add dword ptr [rcx - 0x776b7fe], ecx; sub r8, 4; lea rcx, [rdx + 4]; jne 0x52d30; ret; 
0x00000000004665a3: add dword ptr [rcx - 0x77], eax; cmovns eax, dword ptr [rbx + 0x394804c7]; ret 0x2074; 
0x0000000000469f95: add dword ptr [rcx - 0x77], eax; ret 0x8341; 
0x0000000000472d15: add dword ptr [rcx - 0x77], ecx; push rdi; sub dh, al; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000042c8aa: add dword ptr [rcx - 0x77], ecx; push rdx; or byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000049dd80: add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x000000000046da06: add dword ptr [rcx - 0x77cf7bd], ecx; std; je 0x6da28; pop rbx; ret; 
0x000000000045fed3: add dword ptr [rcx - 0x7d], ecx; ret 0x4938; 
0x0000000000467c9b: add dword ptr [rcx - 0x7d], ecx; ret; 
0x000000000047980b: add dword ptr [rcx], eax; ret; 
0x00000000004393c4: add dword ptr [rcx], ebp; ror byte ptr [rdi], 1; test dword ptr [rax + rax - 0x8b70000], ecx; ret 2; 
0x000000000045a386: add dword ptr [rdi + 0x15], esi; jb 0x5a38d; mov byte ptr [rdi], cl; ret; 
0x00000000004595f7: add dword ptr [rdi + 0x26], esi; jb 0x59601; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000045a4f4: add dword ptr [rdi + 0x2c], esi; jb 0x5a4fb; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000045bec0: add dword ptr [rdi + 0x2d], esi; mov eax, 4; syscall; cmp rax, -0x1000; ja 0x5bed8; ret; 
0x0000000000484f50: add dword ptr [rdi + 0x2d], esi; mov eax, 6; syscall; cmp rax, -0x1000; ja 0x84f68; ret; 
0x000000000045bf1f: add dword ptr [rdi + 0x2e], esi; mov eax, 5; syscall; cmp rax, -0x1000; ja 0x5bf38; ret; 
0x0000000000484fb5: add dword ptr [rdi + 0x30], esi; mov eax, 0x106; syscall; cmp rax, -0x1000; ja 0x84fd0; ret; 
0x000000000045a6bc: add dword ptr [rdi + 0x3a], esi; jb 0x5a6c3; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x0000000000459967: add dword ptr [rdi + 0x3b], esi; jb 0x59971; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x0000000000459db7: add dword ptr [rdi + 0x53], esi; jb 0x59dc1; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x0000000000407d24: add dword ptr [rdi - 0x3f], esi; cmp esi, edx; setb al; ret; 
0x000000000045ab03: add dword ptr [rdi], ecx; scasd eax, dword ptr [rdi]; ret 0x518d; 
0x000000000045ab17: add dword ptr [rdi], ecx; scasd eax, dword ptr [rdi]; ret 0xcfe9; 
0x000000000045ab09: add dword ptr [rdi], ecx; scasd eax, dword ptr [rdi]; ret 0xda89; 
0x00000000004529de: add dword ptr [rdi], ecx; test dword ptr [rbx + 3], ecx; add byte ptr [rax], al; ret; 
0x000000000044efcf: add dword ptr [rdi], ecx; test dword ptr [rdx + 1], edi; add byte ptr [rax], al; vzeroupper; ret; 
0x000000000049d3f7: add dword ptr [rdi], ecx; xchg eax, edx; ret 0x8948; 
0x000000000045addf: add dword ptr [rdx + 0x2b], 0xe2748104; ret; 
0x0000000000459340: add dword ptr [rdx + 2], esi; mov byte ptr [rdi], cl; ret; 
0x0000000000445f11: add dword ptr [rdx + 4], esi; mov cl, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x0000000000499026: add dword ptr [rdx + rax*2], 1; ret; 
0x0000000000445e6a: add dword ptr [rdx - 0x2f], esp; jl 0x45eb7; adc dword ptr [rcx - 2], edx; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x00000000004592d7: add dword ptr [rdx - 0xf], esp; jl 0x59324; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x0000000000459417: add dword ptr [rdx - 0xf], esp; jl 0x59464; adc dword ptr [rsi + 2], edx; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x00000000004319c6: add dword ptr [rdx], 0; cmove rax, rdx; ret; 
0x00000000004319bf: add dword ptr [rdx], 0; lea rax, [rip + 0x28377]; cmove rax, rdx; ret; 
0x0000000000430f6f: add dword ptr [rdx], 0x58d4800; xlatb; add byte ptr [rdx], 0; cmovne rax, rdx; ret; 
0x000000000041ee9d: add dword ptr [rip + 0xc6a14], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000450be2: add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x0000000000450bf2: add dword ptr [rsi - 0x77], esp; add cl, byte ptr [rdx + 0x42880241]; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x00000000004897eb: add dword ptr [rsi - 0x7b], esp; ror byte ptr [rdi], cl; xchg eax, esp; ret 0xb60f; 
0x000000000049892b: add dword ptr [rsp + rdi*8], ebx; dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x00000000004319be: add dword ptr cs:[rdx], 0; lea rax, [rip + 0x28377]; cmove rax, rdx; ret; 
0x0000000000459165: add eax, 0x10; sub edx, esi; cmp edx, ecx; jle 0x59184; movsxd rax, ecx; ret; 
0x000000000048f138: add eax, 0x13750000; mov r8, qword ptr [rip + 0x5632c]; mov rax, r8; ret; 
0x0000000000481cdb: add eax, 0x13e0; cmove rax, rdx; ret; 
0x0000000000431be7: add eax, 0x14914; lea rdx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x0000000000408b0d: add eax, 0x18c48348; ret; 
0x0000000000431d2b: add eax, 0x1bfc0; cmove rax, rdx; ret; 
0x0000000000430e84: add eax, 0x1cc37; lea rdx, [rip + 0x26290]; cmovne rax, rdx; ret; 
0x0000000000430feb: add eax, 0x1d330; cmove rax, rdx; ret; 
0x0000000000431b94: add eax, 0x1d8a7; lea rdx, [rip + 0x21cc0]; cmovne rax, rdx; ret; 
0x0000000000430f44: add eax, 0x1e407; lea rdx, [rip + 0x1e5e0]; cmovne rax, rdx; ret; 
0x000000000040a902: add eax, 0x1f0fe0ff; add byte ptr [rax - 1], bh; ret; 
0x0000000000403966: add eax, 0x1ff8c100; and eax, 0xfffffffe; add rsp, 0x18; ret; 
0x000000000046fe6a: add eax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x00000000004843b5: add eax, 0x20; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e5e5: add eax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439335: add eax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000049b303: add eax, 0x248d4d00; ret 0x2944; 
0x0000000000483d44: add eax, 0x257; lea rdx, [rip + 0x30]; cmovne rax, rdx; ret; 
0x00000000004839bd: add eax, 0x258d4c00; fidiv dword ptr [rbp + 0x39480005]; ret; 
0x00000000004318b4: add eax, 0x272f7; cmove rax, rdx; ret; 
0x0000000000431cb0: add eax, 0x278eb; cmove rax, rdx; ret; 
0x0000000000431b40: add eax, 0x27a4b; cmove rax, rdx; ret; 
0x00000000004319e0: add eax, 0x27bbb; cmove rax, rdx; ret; 
0x0000000000431c42: add eax, 0x27cb9; cmove rax, rdx; ret; 
0x0000000000431ad2: add eax, 0x27e19; cmove rax, rdx; ret; 
0x0000000000431972: add eax, 0x27f89; cmove rax, rdx; ret; 
0x0000000000431c94: add eax, 0x280a7; cmove rax, rdx; ret; 
0x0000000000430f74: add eax, 0x280d7; cmovne rax, rdx; ret; 
0x0000000000431b24: add eax, 0x28207; cmove rax, rdx; ret; 
0x00000000004319c4: add eax, 0x28377; cmove rax, rdx; ret; 
0x0000000000431a5b: add eax, 0x287f0; cmovne rax, rdx; ret; 
0x0000000000431a3c: add eax, 0x289df; cmove rax, rdx; ret; 
0x0000000000431a84: add eax, 0x28b27; cmove rax, rdx; ret; 
0x000000000045cfdf: add eax, 0x28c48348; ret; 
0x0000000000452a64: add eax, 0x2c5850f; add byte ptr [rax], al; ret; 
0x00000000004a1667: add eax, 0x2ec10; ret; 
0x00000000004a165f: add eax, 0x2ec14; divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x000000000042a6c0: add eax, 0x319b; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x000000000042a6b2: add eax, 0x3429; mov qword ptr [rip + 0xb810a], rax; lea rax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x00000000004985ab: add eax, 0x38c48348; ret; 
0x0000000000468209: add eax, 0x39480000; ret; 
0x000000000043104e: add eax, 0x3afd; lea rdx, [rip + 0x5356]; cmovne rax, rdx; ret; 
0x00000000004a7cfc: add eax, 0x3d273; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x00000000004a78ad: add eax, 0x3d5a2; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000048897c: add eax, 0x3d8b4800; ret; 
0x000000000045c1f2: add eax, 0x401f0fc3; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x00000000004843d5: add eax, 0x40; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e605: add eax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439345: add eax, 0x40; add rax, rdi; vzeroupper; ret; 
0x00000000004916a9: add eax, 0x478d4800; dec dword ptr [rax - 0x7d]; clc; std; jbe 0x916c0; ret; 
0x0000000000454f98: add eax, 0x48054289; lea eax, [rdx + 8]; ret; 
0x0000000000450c48: add eax, 0x48054289; mov eax, edi; ret; 
0x0000000000452ab8: add eax, 0x48054289; mov eax, edi; sub r8, 9; lea rcx, [rdx + 9]; jne 0x52d30; ret; 
0x0000000000442cf3: add eax, 0x480e8b48; mov dword ptr [rdi + 5], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000456b16: add eax, 0x480f8948; mov dword ptr [rdi + 5], edx; lea rax, [rdi + 0xc]; ret; 
0x0000000000455496: add eax, 0x480f8948; mov dword ptr [rdi + 5], edx; ret; 
0x0000000000455db6: add eax, 0x480f8948; mov dword ptr [rdi + 5], edx; sub r8, 0xd; lea rdi, [rdi + 0xd]; jne 0x564f0; ret; 
0x00000000004461cf: add eax, 0x487c5162; adc dword ptr [rcx + 6], esi; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x00000000004594b4: add eax, 0x487cf162; adc dword ptr [rsi + 6], edx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x000000000048b5d6: add eax, 0x48c03100; add esp, 8; ret; 
0x0000000000404feb: add eax, 0x48c48348; ret; 
0x000000000048f040: add eax, 0x490c7500; lea eax, [rax + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x000000000049b9fb: add eax, 0x49f1f; jne 0x9ba08; ret; 
0x0000000000452b3d: add eax, 0x49f88948; sub eax, 0xd; lea rcx, [rdx + 0xd]; jne 0x52d30; ret; 
0x0000000000452abb: add eax, 0x49f88948; sub eax, 9; lea rcx, [rdx + 9]; jne 0x52d30; ret; 
0x000000000048cd64: add eax, 0x4b8b4800; adc byte ptr [rax - 0x77], cl; ret 0xf748; 
0x0000000000499017: add eax, 0x4c114; jae 0x9902a; mov rdx, qword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000498655: add eax, 0x4c72f; adc byte ptr [rax - 0x73], cl; adc eax, 0x11e; lea rax, [rip + 0x67]; cmovne rax, rdx; ret; 
0x00000000004991e5: add eax, 0x4c79e; ret; 
0x0000000000497eb9: add eax, 0x4d16a; ret; 
0x0000000000497ea2: add eax, 0x4d181; add rsp, 8; ret; 
0x0000000000497eb2: add eax, 0x4d189; mov qword ptr [rip + 0x4d16a], rax; ret; 
0x0000000000497e9b: add eax, 0x4d1a0; mov qword ptr [rip + 0x4d181], rax; add rsp, 8; ret; 
0x000000000048f1a6: add eax, 0x52f8d; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x562b3]; mov qword ptr [rsi], rax; ret; 
0x00000000004916d2: add eax, 0x53925; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000455019: add eax, 0x5428948; lea rax, [rdx + 0xc]; ret; 
0x0000000000450c89: add eax, 0x5428948; mov rax, rdi; ret; 
0x0000000000452b39: add eax, 0x5428948; mov rax, rdi; sub r8, 0xd; lea rcx, [rdx + 0xd]; jne 0x52d30; ret; 
0x0000000000452a60: add eax, 0x54a8d48; jne 0x52d30; ret; 
0x000000000048f1b0: add eax, 0x562b3; mov qword ptr [rsi], rax; ret; 
0x000000000048f13f: add eax, 0x5632c; mov rax, r8; ret; 
0x000000000048f04a: add eax, 0x56421; ret; 
0x000000000048f03d: add eax, 0x5642e; jne 0x8f050; lea rax, [r8 + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x0000000000455cba: add eax, 0x57f8d48; jne 0x564f0; ret; 
0x0000000000485135: add eax, 0x5fe5e; cmp rdi, rax; ja 0x85168; xor eax, eax; ret; 
0x0000000000484421: add eax, 0x60; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e651: add eax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439373: add eax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000000483d3c: add eax, 0x61048; or byte ptr [rax - 0x73], cl; add eax, 0x257; lea rdx, [rip + 0x30]; cmovne rax, rdx; ret; 
0x0000000000498664: add eax, 0x67; cmovne rax, rdx; ret; 
0x000000000048f1b3: add eax, 0x6894800; ret; 
0x00000000004988db: add eax, 0x70; cmove rax, rdx; ret; 
0x0000000000431ceb: add eax, 0x7330; cmove rax, rdx; ret; 
0x000000000046d206: add eax, 0x77c45; ret; 
0x000000000048f1a9: add eax, 0x7894800; mov rax, qword ptr [rip + 0x562b3]; mov qword ptr [rsi], rax; ret; 
0x00000000004318f5: add eax, 0x7a86; lea rdx, [rip + 0x25b3f]; cmovne rax, rdx; ret; 
0x000000000043191a: add eax, 0x7e61; test byte ptr [rip + 0xb34bf], 1; je 0x318e1; ret; 
0x0000000000464ce9: add eax, 0x8014e; test eax, eax; je 0x64cf8; ret; 
0x000000000046133b: add eax, 0x80760; pop rbx; ret; 
0x0000000000481ddb: add eax, 0x810; cmove rax, rdx; ret; 
0x0000000000461306: add eax, 0x81f55; ret; 
0x0000000000463856: add eax, 0x821ad; ret; 
0x0000000000455cbe: add eax, 0x82b850f; add byte ptr [rax], al; ret; 
0x0000000000438587: add eax, 0x83480000; ret 0x4910; 
0x000000000044be61: add eax, 0x83480000; ret 0xe910; 
0x00000000004385b5: add eax, 0x83480000; ret 0xeb10; 
0x000000000045f87e: add eax, 0x8384d; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004620be: add eax, 0x83891; ret; 
0x00000000004620b1: add eax, 0x8389e; pop rbx; and eax, 0xffffffc7; or eax, 0x18; mov dword ptr [rip + 0x83891], eax; ret; 
0x000000000046208e: add eax, 0x838c1; ret; 
0x0000000000462081: add eax, 0x838ce; pop rbx; and eax, 0xffffffc7; or eax, 8; mov dword ptr [rip + 0x838c1], eax; ret; 
0x000000000046205d: add eax, 0x838f2; pop rbx; ret; 
0x0000000000462051: add eax, 0x838fe; and eax, 0xffffffc7; or eax, 0x10; mov dword ptr [rip + 0x838f2], eax; pop rbx; ret; 
0x000000000046201e: add eax, 0x83931; ret; 
0x0000000000462011: add eax, 0x8393e; pop rbx; and eax, 0xfffffff8; or eax, 3; mov dword ptr [rip + 0x83931], eax; ret; 
0x0000000000461fee: add eax, 0x83961; ret; 
0x0000000000461fe1: add eax, 0x8396e; pop rbx; and eax, 0xfffffff8; or eax, 1; mov dword ptr [rip + 0x83961], eax; ret; 
0x0000000000461fbd: add eax, 0x83992; pop rbx; ret; 
0x0000000000461fb1: add eax, 0x8399e; and eax, 0xfffffff8; or eax, 2; mov dword ptr [rip + 0x83992], eax; pop rbx; ret; 
0x0000000000454f9b: add eax, 0x8428d48; ret; 
0x0000000000461315: add eax, 0x846d6; test eax, eax; je 0x61320; ret; 
0x000000000045f825: add eax, 0x8615e; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x000000000045cf66: add eax, 0x861ed; test rax, rax; je 0x5cf71; ret; 
0x000000000041e16c: add eax, 0x8944c689; ret 0xeab8; 
0x0000000000490bc7: add eax, 0x8948fff7; ret 0x8948; 
0x00000000004233a7: add eax, 0x89490000; call 0xffffffffceed473c; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000048f038: add eax, 0x8b4c0000; add eax, 0x5642e; jne 0x8f050; lea rax, [r8 + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x0000000000479e90: add eax, 0x8b4c0000; movsd dword ptr [rdi], dword ptr [rsi]; clc; idiv bh; dec dword ptr [rbp + 0x63]; ret; 
0x000000000045e3eb: add eax, 0x8b4d0000; adc byte ptr [r13 - 0x7b], r9b; ror byte ptr [rdi], 0x85; ret 4; 
0x000000000046f04b: add eax, 0x90660000; ret; 
0x0000000000431c63: add eax, 0x9568; lea rdx, [rip + 0xeaf1]; cmovne rax, rdx; ret; 
0x0000000000431af3: add eax, 0x96b8; lea rdx, [rip + 0xec41]; cmovne rax, rdx; ret; 
0x000000000048362b: add eax, 0x9b0; cmove rax, rdx; ret; 
0x000000000040d8b2: add eax, 0x9bcf9; ret; 
0x000000000040d8a2: add eax, 0x9bd00; ret; 
0x000000000040d8aa: add eax, 0x9bd08; ret; 
0x000000000040d862: add eax, 0x9bd1d; ret; 
0x000000000040d872: add eax, 0x9bd1e; ret; 
0x000000000040d82a: add eax, 0x9bd3b; ret; 
0x000000000040d832: add eax, 0x9bd3c; ret; 
0x000000000040d89a: add eax, 0x9bd71; ret; 
0x000000000040d892: add eax, 0x9bd72; ret; 
0x000000000040d88a: add eax, 0x9bd74; ret; 
0x000000000040d882: add eax, 0x9bd76; ret; 
0x000000000040d7e2: add eax, 0x9bd77; ret; 
0x000000000040d84a: add eax, 0x9bd79; ret; 
0x000000000040d852: add eax, 0x9bd7f; ret; 
0x000000000040d7c2: add eax, 0x9bd80; ret; 
0x000000000040d7b2: add eax, 0x9bd84; ret; 
0x000000000040d842: add eax, 0x9bd88; ret; 
0x000000000040d7a2: add eax, 0x9bd8c; ret; 
0x000000000040d7d2: add eax, 0x9bd8e; ret; 
0x000000000040d792: add eax, 0x9bd8f; ret; 
0x000000000040d76a: add eax, 0x9bdb0; ret; 
0x000000000040d772: add eax, 0x9bdb7; ret; 
0x000000000040d822: add eax, 0x9bdba; ret; 
0x000000000040d782: add eax, 0x9bdcc; ret; 
0x000000000040d812: add eax, 0x9bdd1; ret; 
0x000000000040d802: add eax, 0x9bde8; ret; 
0x000000000040d7f2: add eax, 0x9bdff; ret; 
0x000000000040cd72: add eax, 0x9c839; ret; 
0x000000000040cd62: add eax, 0x9c840; ret; 
0x000000000040cd6a: add eax, 0x9c848; ret; 
0x000000000040cd22: add eax, 0x9c85d; ret; 
0x000000000040cd32: add eax, 0x9c85e; ret; 
0x000000000040ccea: add eax, 0x9c87b; ret; 
0x000000000040ccf2: add eax, 0x9c87c; ret; 
0x000000000040cd5a: add eax, 0x9c8b1; ret; 
0x000000000040cd52: add eax, 0x9c8b2; ret; 
0x000000000040cd4a: add eax, 0x9c8b4; ret; 
0x000000000040cd42: add eax, 0x9c8b6; ret; 
0x000000000040cca2: add eax, 0x9c8b7; ret; 
0x000000000040cd0a: add eax, 0x9c8b9; ret; 
0x000000000040cd12: add eax, 0x9c8bf; ret; 
0x000000000040cc82: add eax, 0x9c8c0; ret; 
0x000000000040cc72: add eax, 0x9c8c4; ret; 
0x000000000040cd02: add eax, 0x9c8c8; ret; 
0x000000000040cc62: add eax, 0x9c8cc; ret; 
0x000000000040cc92: add eax, 0x9c8ce; ret; 
0x000000000040cc52: add eax, 0x9c8cf; ret; 
0x000000000040cc2a: add eax, 0x9c8f0; ret; 
0x000000000040cc32: add eax, 0x9c8f7; ret; 
0x000000000040cce2: add eax, 0x9c8fa; ret; 
0x000000000040cc42: add eax, 0x9c90c; ret; 
0x000000000040ccd2: add eax, 0x9c911; ret; 
0x000000000040ccc2: add eax, 0x9c928; ret; 
0x000000000040ccb2: add eax, 0x9c93f; ret; 
0x000000000040c232: add eax, 0x9d379; ret; 
0x000000000040c222: add eax, 0x9d380; ret; 
0x000000000040c22a: add eax, 0x9d388; ret; 
0x000000000040c1e2: add eax, 0x9d39d; ret; 
0x000000000040c1f2: add eax, 0x9d39e; ret; 
0x000000000040c1aa: add eax, 0x9d3bb; ret; 
0x000000000040c1b2: add eax, 0x9d3bc; ret; 
0x000000000040c21a: add eax, 0x9d3f1; ret; 
0x000000000040c212: add eax, 0x9d3f2; ret; 
0x000000000040c20a: add eax, 0x9d3f4; ret; 
0x000000000040c202: add eax, 0x9d3f6; ret; 
0x000000000040c162: add eax, 0x9d3f7; ret; 
0x000000000040c1ca: add eax, 0x9d3f9; ret; 
0x000000000040c1d2: add eax, 0x9d3ff; ret; 
0x000000000040c142: add eax, 0x9d400; ret; 
0x000000000040c132: add eax, 0x9d404; ret; 
0x000000000040c1c2: add eax, 0x9d408; ret; 
0x000000000040c122: add eax, 0x9d40c; ret; 
0x000000000040c152: add eax, 0x9d40e; ret; 
0x000000000040c112: add eax, 0x9d40f; ret; 
0x000000000040c0ea: add eax, 0x9d430; ret; 
0x000000000040c0f2: add eax, 0x9d437; ret; 
0x000000000040c1a2: add eax, 0x9d43a; ret; 
0x000000000040c102: add eax, 0x9d44c; ret; 
0x000000000040c192: add eax, 0x9d451; ret; 
0x000000000040c182: add eax, 0x9d468; ret; 
0x000000000040c172: add eax, 0x9d47f; ret; 
0x000000000040b5fa: add eax, 0x9e004; ret; 
0x000000000040b5f2: add eax, 0x9e012; ret; 
0x000000000040b562: add eax, 0x9e014; ret; 
0x000000000040b56a: add eax, 0x9e015; ret; 
0x000000000040b57a: add eax, 0x9e016; ret; 
0x000000000040b5ba: add eax, 0x9e017; ret; 
0x000000000040b58a: add eax, 0x9e018; ret; 
0x000000000040b592: add eax, 0x9e019; ret; 
0x000000000040b5c2: add eax, 0x9e01a; ret; 
0x000000000040b5a2: add eax, 0x9e01b; ret; 
0x000000000040b552: add eax, 0x9e01c; ret; 
0x000000000040b5ea: add eax, 0x9e021; ret; 
0x000000000040b542: add eax, 0x9e023; ret; 
0x000000000040b532: add eax, 0x9e02e; ret; 
0x000000000040b522: add eax, 0x9e037; ret; 
0x000000000040b502: add eax, 0x9e040; ret; 
0x000000000040b4f2: add eax, 0x9e044; ret; 
0x000000000040b4e2: add eax, 0x9e04c; ret; 
0x000000000040b4d2: add eax, 0x9e04f; ret; 
0x000000000040b4b2: add eax, 0x9e077; ret; 
0x000000000040b4a2: add eax, 0x9e078; ret; 
0x000000000040b4c2: add eax, 0x9e08c; ret; 
0x0000000000402166: add eax, 0xa6f3d; ret; 
0x0000000000431c51: add eax, 0xb3132; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000431ae1: add eax, 0xb32a2; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000431ac3: add eax, 0xb32cc; add cl, byte ptr [rax - 0x73]; adc eax, 0x27dd0; lea rax, [rip + 0x27e19]; cmove rax, rdx; ret; 
0x00000000004319d1: add eax, 0xb33be; add cl, byte ptr [rax - 0x73]; adc eax, 0x27b02; lea rax, [rip + 0x27bbb]; cmove rax, rdx; ret; 
0x0000000000431981: add eax, 0xb3402; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x00000000004318a5: add eax, 0xb3539; adc byte ptr [rax - 0x73], cl; adc eax, 0xfffffc9e; lea rax, [rip + 0x272f7]; cmove rax, rdx; ret; 
0x0000000000430f65: add eax, 0xb3e1f; adc byte ptr [rax - 0x73], cl; adc eax, 0x2818e; lea rax, [rip + 0x280d7]; cmovne rax, rdx; ret; 
0x0000000000430f3c: add eax, 0xb3e47; add cl, byte ptr [rax - 0x73]; add eax, 0x1e407; lea rdx, [rip + 0x1e5e0]; cmovne rax, rdx; ret; 
0x0000000000430e7c: add eax, 0xb3f62; lea rax, [rip + 0x1cc37]; lea rdx, [rip + 0x26290]; cmovne rax, rdx; ret; 
0x000000000042e4d1: add eax, 0xb42ea; ret; 
0x000000000042e4c3: add eax, 0xb4300; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x000000000042e4b5: add eax, 0xb683e; lea rax, [rip - 0x9e1]; mov qword ptr [rip + 0xb4300], rax; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x000000000042e46f: add eax, 0xb68a8; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000042a6c7: add eax, 0xb80f4; ret; 
0x000000000042a6b9: add eax, 0xb810a; lea rax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x000000000042a5bb: add eax, 0xb8220; add rsp, 0x10; pop rbp; ret; 
0x000000000041e162: add eax, 0xb8c78948; mov edx, 0xf000000; add eax, 0x8944c689; ret 0xeab8; 
0x0000000000429763: add eax, 0xb9004; ret; 
0x000000000042973d: add eax, 0xb900e; ret; 
0x0000000000429759: add eax, 0xb9012; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0xb9004], eax; ret; 
0x0000000000429714: add eax, 0xb902f; ret; 
0x0000000000429732: add eax, 0xb9039; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xb900e], rax; ret; 
0x00000000004296f4: add eax, 0xb9047; ret; 
0x0000000000429709: add eax, 0xb9062; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xb902f], rax; ret; 
0x00000000004296e9: add eax, 0xb9082; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xb9047], rax; ret; 
0x00000000004293ea: add eax, 0xb93b9; ret; 
0x00000000004293d3: add eax, 0xb93c8; ret; 
0x000000000042937a: add eax, 0xb93d9; ret; 
0x000000000042936a: add eax, 0xb93f1; ret; 
0x0000000000428866: add eax, 0xb98f5; ret; 
0x00000000004297a7: add eax, 0xbb58c; ret; 
0x0000000000429779: add eax, 0xbb5b6; ret; 
0x000000000040d85a: add eax, 0xbdf90; ret; 
0x000000000040cd1a: add eax, 0xbead0; ret; 
0x000000000040c1da: add eax, 0xbf610; ret; 
0x000000000040b512: add eax, 0xc02d8; ret; 
0x000000000043abba: add eax, 0xc0310000; ret; 
0x000000000048f142: add eax, 0xc0894c00; ret; 
0x0000000000431993: add eax, 0xc218; lea rdx, [rip + 0x118b1]; cmovne rax, rdx; ret; 
0x000000000045501d: add eax, 0xc428d48; ret; 
0x0000000000456b1d: add eax, 0xc478d48; ret; 
0x0000000000485138: add eax, 0xc7394800; ja 0x85168; xor eax, eax; ret; 
0x00000000004310a4: add eax, 0xc97; lea rdx, [rip + 0x1fc30]; cmovne rax, rdx; ret; 
0x00000000004109eb: add eax, 0xd38f0; ret; 
0x00000000004109e4: add eax, 0xd38ff; lea rax, [rip + 0xd38f0]; ret; 
0x00000000004109db: add eax, 0xd3900; mov eax, dword ptr [rdx + rsi]; mov dword ptr [rip + 0xd38ff], eax; lea rax, [rip + 0xd38f0]; ret; 
0x0000000000410bbf: add eax, 0xd423c; add rsp, 0x88; pop rbx; ret; 
0x0000000000455dbd: add eax, 0xde88349; lea rdi, [rdi + 0xd]; jne 0x564f0; ret; 
0x00000000004037d5: add eax, 0xde92a; ret; 
0x0000000000403155: add eax, 0xdefae; test eax, eax; js 0x3160; ret; 
0x000000000040308f: add eax, 0xdf070; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000403065: add eax, 0xdf09a; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; pop rbx; ret; 
0x0000000000402175: add eax, 0xe2156; test eax, eax; je 0x2180; ret; 
0x00000000004020a3: add eax, 0xe2228; add rsp, 8; ret; 
0x00000000004017d6: add eax, 0xe3879; add byte ptr [rax], al; add byte ptr [rax], al; pop rdx; ret; 
0x00000000004626bc: add eax, 0xe8ff3100; imul esi, esi, 1; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000430ee4: add eax, 0xeb7; lea rdx, [rip + 0x25b0]; cmovne rax, rdx; ret; 
0x0000000000481d1b: add eax, 0xed0; cmove rax, rdx; ret; 
0x000000000044305a: add eax, 0xef00ff2; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000443063: add eax, 0xf7f0ff3; ret; 
0x0000000000409e5f: add eax, 0xffdf4be8; dec dword ptr [rax - 0x7d]; ret; 
0x00000000004112cc: add eax, 0xfffce6e9; dec dword ptr [rbx + 0xd3b0815]; add dh, dh; ret 0x7404; 
0x00000000004030ae: add eax, 0xffff7ce8; inc dword ptr [rbx + 0x77401f8]; xor eax, eax; pop r12; ret; 
0x000000000042e4ca: add eax, 0xfffff391; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x000000000042e4bc: add eax, 0xfffff61f; mov qword ptr [rip + 0xb4300], rax; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x00000000004841e1: add eax, 1; ret; 
0x00000000004841d8: add eax, 2; ret; 
0x00000000004841f1: add eax, 3; ret; 
0x0000000000483d74: add eax, 4; cmp edx, esi; je 0x83d7f; test edx, edx; jne 0x83d70; ret; 
0x0000000000411add: add eax, dword ptr [0]; ret; 
0x000000000048f757: add eax, dword ptr [rax]; add al, ch; sub ebp, 0x8948fff9; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x00000000004685db: add eax, dword ptr [rax]; add bh, dh; ret 0; 
0x00000000004a043c: add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000048b0ff: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; add al, 0x90; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000048b0cd: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; add al, 0x90; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x00000000004988d6: add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; add eax, 0x70; cmove rax, rdx; ret; 
0x000000000046e353: add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000049f35a: add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x8548; 
0x000000000048a92f: add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000438767: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c001: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000438795: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000049ab83: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], 0x83; ret 0x4801; 
0x00000000004a78b0: add eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000484233: add eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x000000000045c321: add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x5c370; ret; 
0x000000000045cb35: add eax, dword ptr [rax]; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x5cb48; ret; 
0x000000000042c476: add eax, dword ptr [rax]; add byte ptr [rbp + 0x39], cl; pop rdx; adc byte ptr [rdi], cl; test dword ptr [rip - 0x9fffffd], ebp; ret 0xf01; 
0x00000000004818b0: add eax, dword ptr [rax]; add byte ptr [rbp - 0x19], dh; and r11d, 0xffffffbb; cmp r11d, 0xa; je 0x818c0; ret; 
0x00000000004677a2: add eax, dword ptr [rax]; add byte ptr [rbx + 0x4be02e0], al; add byte ptr [rax], al; add byte ptr [rcx - 0x77], al; ret; 
0x0000000000469d4e: add eax, dword ptr [rax]; add byte ptr [rcx - 0x73], cl; add r9b, byte ptr [r8 + 0x39]; ret; 
0x0000000000481899: add eax, dword ptr [rax]; add byte ptr [rcx - 0x77], al; ret; 
0x0000000000401995: add eax, dword ptr [rax]; add byte ptr [rcx - 0x77], al; rol dword ptr [rcx - 0x77], cl; ret 0x8341; 
0x000000000046598d: add eax, dword ptr [rax]; add byte ptr [rcx - 0xa], al; ret; 
0x0000000000460967: add eax, dword ptr [rax]; add dh, dh; ret 0x7402; 
0x000000000048c4ca: add eax, dword ptr [rax]; add dh, dh; ret 0x7403; 
0x000000000042c480: add eax, dword ptr [rax]; add dh, dh; ret 0xf01; 
0x00000000004857ef: add eax, dword ptr [rax]; add dh, dh; ret 0xf07; 
0x0000000000499609: add eax, dword ptr [rax]; call 0x11c50; endbr64; ret; 
0x000000000045a7dc: add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000000499602: add eax, dword ptr [rax]; lea rdi, [rip + 0x329f5]; call 0x11c50; endbr64; ret; 
0x000000000045a7c1: add eax, dword ptr [rax]; ret; 
0x00000000004a6718: add eax, dword ptr [rax]; test rbx, rbx; jne 0xa6700; pop rbx; ret; 
0x00000000004a00cd: add eax, dword ptr [rbp - 0x72de8b2e]; dec dword ptr [rbp + r9*4 + 0x74]; ret; 
0x0000000000452a29: add eax, dword ptr [rbx]; add byte ptr [rax], al; ret; 
0x0000000000462174: add eax, dword ptr [rcx + 0x5c]; shl eax, cl; ret; 
0x000000000040a97a: add eax, dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000485259: add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000452b29: add eax, dword ptr [rdx]; add byte ptr [rax], al; ret; 
0x00000000004958a8: add eax, eax; mov eax, r8d; ret; 
0x0000000000485c27: add eax, ebp; xor esi, dword ptr [rbp - 0x37140009]; nop; ret; 
0x000000000044e1a8: add eax, ecx; add rax, rdi; vzeroupper; ret; 
0x00000000004285e9: add eax, ecx; mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004285ad: add eax, ecx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004109d7: add eax, ecx; mov qword ptr [rip + 0xd3900], rax; mov eax, dword ptr [rdx + rsi]; mov dword ptr [rip + 0xd38ff], eax; lea rax, [rip + 0xd38f0]; ret; 
0x0000000000439091: add eax, ecx; ret; 
0x00000000004591a6: add eax, ecx; sub rax, rdi; ret; 
0x00000000004842dd: add eax, ecx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e51d: add eax, ecx; sub rax, rdx; vzeroupper; ret; 
0x000000000043928d: add eax, ecx; vzeroupper; ret; 
0x000000000043908e: add eax, edi; add rax, rcx; ret; 
0x00000000004842da: add eax, edi; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e51a: add eax, edi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000000043928a: add eax, edi; add rax, rcx; vzeroupper; ret; 
0x0000000000439204: add eax, edi; ret; 
0x0000000000484395: add eax, edi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e5d5: add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439325: add eax, edi; vzeroupper; ret; 
0x0000000000410952: add eax, edx; lea rdx, [rip + 0xa2b45]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rdx; ret; 
0x0000000000410960: add eax, edx; ret; 
0x000000000044e4b6: add eax, edx; sub rax, rdi; ret; 
0x0000000000483f3b: add eax, edx; sub rax, rdi; shr rax, 2; ret; 
0x000000000048efaa: add eax, esi; inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x00000000004a16b9: add eax, esi; test dil, dil; js 0xa16e8; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x00000000004a4669: add eax, esi; test dil, dil; js 0xa4698; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x00000000004a6009: add eax, esi; test dil, dil; js 0xa6038; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x00000000004a0a2e: add ebx, dword ptr [rax + 0x5a]; pop rbx; ret; 
0x000000000049edae: add ebx, dword ptr [rbx + 0x5d]; pop r12; ret; 
0x00000000004296b1: add ebx, dword ptr [rbx + 0x5d]; ret; 
0x0000000000404c52: add ebx, ebp; in al, dx; xor eax, eax; ret; 
0x0000000000443223: add ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x000000000045a692: add ecx, 0x100; cmp rdx, rcx; jne 0x5a676; vzeroupper; ret; 
0x000000000045a4cf: add ecx, 0x80; cmp rdx, rcx; jne 0x5a4bb; vzeroupper; ret; 
0x0000000000450c35: add ecx, dword ptr [r9 - 0x76b7fcbe]; clc; ret; 
0x0000000000452a95: add ecx, dword ptr [r9 - 0x76b7fcbe]; clc; sub r8, 7; lea rcx, [rdx + 7]; jne 0x52d30; ret; 
0x00000000004870d4: add ecx, dword ptr [rax + 0x29]; ret 0x8948; 
0x0000000000429f5c: add ecx, dword ptr [rax + 0x29]; ret; 
0x0000000000404add: add ecx, dword ptr [rax + 0x39]; ret 0x4d74; 
0x000000000044eeed: add ecx, dword ptr [rax - 0x73]; jg 0x4eef5; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c7c: add ecx, dword ptr [rax - 0x73]; jg 0x55c84; jne 0x564f0; ret; 
0x000000000049821c: add ecx, dword ptr [rax - 0x75]; sbb byte ptr [r8 - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x950f; 
0x000000000045f87b: add ecx, dword ptr [rax - 0x77]; add eax, 0x8384d; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000450c39: add ecx, dword ptr [rax - 0x77]; clc; ret; 
0x0000000000452a99: add ecx, dword ptr [rax - 0x77]; clc; sub r8, 7; lea rcx, [rdx + 7]; jne 0x52d30; ret; 
0x00000000004682ec: add ecx, dword ptr [rax - 0x77]; fimul dword ptr [rax + 0x29]; ret 0x8348; 
0x000000000048e4b3: add ecx, dword ptr [rax - 0x77]; mov rax, r8; ret; 
0x0000000000482585: add ecx, dword ptr [rax - 0x7d]; ret 0x4801; 
0x000000000048c455: add ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000041ed2f: add ecx, dword ptr [rbp + rcx*4 + 0x64]; ret; 
0x00000000004a23ed: add ecx, dword ptr [rbp - 0x73]; or ecx, dword ptr [eax - 0x7d]; ret; 
0x0000000000442f92: add ecx, dword ptr [rbx + 0x357890e]; mov dword ptr [rdi], ecx; ret; 
0x0000000000456a84: add ecx, dword ptr [rcx + 0x357890f]; lea rax, [rdi + 6]; ret; 
0x0000000000455434: add ecx, dword ptr [rcx + 0x357890f]; ret; 
0x0000000000455cf4: add ecx, dword ptr [rcx + 0x357890f]; sub r8, 7; lea rdi, [rdi + 7]; jne 0x564f0; ret; 
0x0000000000450c36: add ecx, dword ptr [rcx - 0x76b7fcbe]; clc; ret; 
0x0000000000452a96: add ecx, dword ptr [rcx - 0x76b7fcbe]; clc; sub r8, 7; lea rcx, [rdx + 7]; jne 0x52d30; ret; 
0x0000000000426adf: add ecx, dword ptr [rdi]; mov dh, 2; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000044eef1: add ecx, dword ptr [rdi]; test dword ptr [rax + 2], ebx; add byte ptr [rax], al; vzeroupper; ret; 
0x0000000000455c80: add ecx, dword ptr [rdi]; test dword ptr [rcx + 8], ebp; add byte ptr [rax], al; ret; 
0x0000000000468205: add ecx, dword ptr [rdi]; xchg dword ptr [rax + 0x39480000], esp; ret; 
0x000000000045b6c1: add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x000000000045b715: add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xd284; 
0x0000000000434a10: add ecx, eax; movzx eax, byte ptr [rax + rcx + 0x40]; movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000048dcc4: add ecx, ebp; ret; 
0x0000000000481a62: add edi, dword ptr [rax + 1]; pop rbx; pop rbp; pop r12; ret; 
0x000000000046e8ce: add edi, ebx; mov byte ptr [rdi], 0; add rsp, 8; pop rbx; pop r14; ret; 
0x0000000000428502: add edx, 0x60; mov rax, qword ptr [rdi]; mov qword ptr [rdx], rax; ret; 
0x000000000049d7c2: add edx, eax; mov rax, rdx; pop rbx; ret; 
0x0000000000490d29: add esi, 1; test al, al; jne 0x90cfe; movsx eax, dl; neg eax; ret; 
0x00000000004a450d: add esi, dword ptr [rbp + 0x20]; add rsp, 8; ret; 
0x000000000042c915: add esi, dword ptr [rbp + rdi - 0x77]; ret 0xb48b; 
0x000000000046214c: add esi, dword ptr [rbp - 0x51]; add rsp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000443143: add esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x000000000045956e: add esi, ebx; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000042ce71: add esi, ebx; stosq qword ptr [rdi], rax; pop rbp; ret; 
0x000000000045a8bc: add esi, edi; int1; mov eax, eax; ret; 
0x000000000048d7c3: add esi, esi; ret 0xf01; 
0x00000000004590ed: add esp, 0x100; sub rax, rdx; ret; 
0x0000000000402f87: add esp, 0x10; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x0000000000407a14: add esp, 0x10; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000041f0ea: add esp, 0x10; mov eax, r8d; pop rbx; ret; 
0x000000000046db90: add esp, 0x10; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000047f699: add esp, 0x10; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000042d9b0: add esp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000000042d7b9: add esp, 0x10; mov rax, r8; pop rbx; ret; 
0x000000000046db68: add esp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x0000000000405350: add esp, 0x10; pop rbp; ret; 
0x0000000000421526: add esp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000499311: add esp, 0x10; pop rbx; ret; 
0x000000000049231f: add esp, 0x110; mov eax, r12d; pop r12; ret; 
0x000000000041e1b2: add esp, 0x118; ret; 
0x0000000000470146: add esp, 0x148; ret; 
0x000000000041efaa: add esp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000404ecc: add esp, 0x18; mov rax, rbx; pop rbx; pop rbp; ret; 
0x0000000000402966: add esp, 0x18; pop rbp; pop r12; ret; 
0x0000000000408617: add esp, 0x18; pop rbx; pop r12; ret; 
0x00000000004a48e0: add esp, 0x18; pop rbx; pop rbp; mov eax, r8d; ret; 
0x000000000042910a: add esp, 0x18; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000421f07: add esp, 0x18; pop rbx; pop rbp; ret; 
0x000000000040396f: add esp, 0x18; ret; 
0x0000000000404ef0: add esp, 0x18; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000004a35de: add esp, 0x198; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000462150: add esp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x000000000040324b: add esp, 0x20; mov eax, r12d; pop r12; ret; 
0x000000000046d48d: add esp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000045aee6: add esp, 0x20; pop rbx; ret; 
0x00000000004a3b4c: add esp, 0x278; mov rax, rbp; pop rbx; pop rbp; ret; 
0x00000000004a3b61: add esp, 0x278; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000041fbba: add esp, 0x28; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000045b4f1: add esp, 0x28; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000045be8e: add esp, 0x28; ret; 
0x0000000000492835: add esp, 0x30; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000049ec2d: add esp, 0x30; mov rax, r12; pop r12; ret; 
0x00000000004263aa: add esp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a141a: add esp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x00000000004078b7: add esp, 0x38; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004228b4: add esp, 0x38; pop rbx; pop rbp; ret; 
0x00000000004850f3: add esp, 0x38; ret; 
0x00000000004050eb: add esp, 0x48; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000045bae5: add esp, 0x48; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000404fed: add esp, 0x48; ret; 
0x000000000045cd05: add esp, 0x58; ret; 
0x000000000045bfec: add esp, 0x68; pop rbp; pop r12; ret; 
0x000000000048370e: add esp, 0x68; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000045c26d: add esp, 0x68; ret; 
0x000000000048397a: add esp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a0e13: add esp, 0x78; pop rbp; pop r12; ret; 
0x000000000045f77d: add esp, 0x88; pop rbx; pop rbp; ret; 
0x0000000000410bc5: add esp, 0x88; pop rbx; ret; 
0x00000000004a0b40: add esp, 0x98; pop rbp; pop r12; ret; 
0x00000000004115f3: add esp, 0x98; ret; 
0x000000000047faaa: add esp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000484e96: add esp, 0xa8; pop rbp; pop r12; ret; 
0x000000000046d35f: add esp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000499184: add esp, 0xc8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000402b00: add esp, 0xc8; ret; 
0x000000000041f94b: add esp, 0xd8; ret; 
0x000000000041fd5f: add esp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000407fb1: add esp, 8; mov eax, 0xffffffef; pop rbx; pop rbp; ret; 
0x0000000000403856: add esp, 8; mov eax, 0xfffffff2; pop rbx; pop rbp; ret; 
0x00000000004028c1: add esp, 8; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x0000000000422295: add esp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000047fd17: add esp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x00000000004222ab: add esp, 8; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000040247f: add esp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000004927a1: add esp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000004205a4: add esp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000404e0d: add esp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000407c88: add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000049eb6d: add esp, 8; movzx eax, al; neg eax; ret; 
0x00000000004024e0: add esp, 8; pop rbp; pop r12; ret; 
0x000000000046e8d4: add esp, 8; pop rbx; pop r14; ret; 
0x0000000000424142: add esp, 8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000403849: add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000401017: add esp, 8; ret; 
0x00000000004038e2: add esp, 8; sar eax, 0x1f; and eax, 0xffffff83; ret; 
0x0000000000402851: add esp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000407fc1: add esp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000041ef05: add esp, 8; xor r8d, r8d; mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000000426e70: add esp, dword ptr [rsi + 0xf]; insb byte ptr [rdi], dx; ror dword ptr [rdi], 0x11; cmp byte ptr [r11 + 0x5d], bl; pop r12; ret; 
0x0000000000445e69: add qword ptr [r10 - 0x2f], r12; jl 0x45eb7; adc dword ptr [rcx - 2], edx; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000041f3d2: add qword ptr [r8 - 0x7d], rcx; ret; 
0x0000000000431be9: add qword ptr [r8], rax; lea rdx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x00000000004529dd: add qword ptr [rdi], rcx; test dword ptr [rbx + 3], ecx; add byte ptr [rax], al; ret; 
0x000000000041ee9c: add qword ptr [rip + 0xc6a14], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000443222: add r11d, r14d; movq qword ptr [rdi], mm1; ret; 
0x0000000000492834: add r12d, 0x30; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000004431b2: add r14b, r11b; movq qword ptr [rdi], mm1; ret; 
0x0000000000443142: add r14d, r11d; movq qword ptr [rdi], mm1; ret; 
0x00000000004685da: add r8, qword ptr [r8]; add bh, dh; ret 0; 
0x0000000000438794: add r8, qword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004a16b8: add r8, rsi; test dil, dil; js 0xa16e8; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x00000000004a4668: add r8, rsi; test dil, dil; js 0xa4698; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x00000000004a6008: add r8, rsi; test dil, dil; js 0xa6038; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x0000000000457077: add r8b, byte ptr [r8]; lea rax, [rdi + 2]; vzeroupper; ret; 
0x000000000044e967: add r8b, byte ptr [r8]; vzeroupper; ret; 
0x0000000000409e77: add r8b, byte ptr [rax]; nop word ptr [rax + rax]; ret; 
0x00000000004958a7: add r8d, eax; mov eax, r8d; ret; 
0x0000000000469d53: add r9b, byte ptr [r8 + 0x39]; ret; 
0x0000000000490a8f: add r9b, byte ptr [r8 - 0x7d]; ret; 
0x0000000000490c85: add r9d, dword ptr [r8 - 0x7d]; ret; 
0x0000000000459164: add rax, 0x10; sub edx, esi; cmp edx, ecx; jle 0x59184; movsxd rax, ecx; ret; 
0x000000000046fe69: add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x00000000004843b4: add rax, 0x20; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e5e4: add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439334: add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000452a63: add rax, 0x2c5850f; add byte ptr [rax], al; ret; 
0x00000000004843d4: add rax, 0x40; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e604: add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439344: add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000484420: add rax, 0x60; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e650: add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439372: add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x00000000004841e0: add rax, 1; ret; 
0x00000000004841d7: add rax, 2; ret; 
0x00000000004841f0: add rax, 3; ret; 
0x0000000000483d73: add rax, 4; cmp edx, esi; je 0x83d7f; test edx, edx; jne 0x83d70; ret; 
0x0000000000411adc: add rax, qword ptr [0]; ret; 
0x000000000049f359: add rax, qword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x8548; 
0x0000000000411adb: add rax, qword ptr fs:[0]; ret; 
0x000000000044e1a7: add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x00000000004285e8: add rax, rcx; mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004285ac: add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004109d6: add rax, rcx; mov qword ptr [rip + 0xd3900], rax; mov eax, dword ptr [rdx + rsi]; mov dword ptr [rip + 0xd38ff], eax; lea rax, [rip + 0xd38f0]; ret; 
0x0000000000439090: add rax, rcx; ret; 
0x00000000004591a5: add rax, rcx; sub rax, rdi; ret; 
0x00000000004842dc: add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e51c: add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000000043928c: add rax, rcx; vzeroupper; ret; 
0x000000000043908d: add rax, rdi; add rax, rcx; ret; 
0x00000000004842d9: add rax, rdi; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e519: add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000439289: add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000000439203: add rax, rdi; ret; 
0x0000000000484394: add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e5d4: add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439324: add rax, rdi; vzeroupper; ret; 
0x0000000000410951: add rax, rdx; lea rdx, [rip + 0xa2b45]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rdx; ret; 
0x000000000041095f: add rax, rdx; ret; 
0x000000000044e4b5: add rax, rdx; sub rax, rdi; ret; 
0x0000000000483f3a: add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x000000000045a691: add rcx, 0x100; cmp rdx, rcx; jne 0x5a676; vzeroupper; ret; 
0x000000000045a4ce: add rcx, 0x80; cmp rdx, rcx; jne 0x5a4bb; vzeroupper; ret; 
0x0000000000434a0f: add rcx, r8; movzx eax, byte ptr [rax + rcx + 0x40]; movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000046e8cd: add rdi, rbx; mov byte ptr [rdi], 0; add rsp, 8; pop rbx; pop r14; ret; 
0x0000000000428501: add rdx, 0x60; mov rax, qword ptr [rdi]; mov qword ptr [rdx], rax; ret; 
0x000000000049d7c1: add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x0000000000490d28: add rsi, 1; test al, al; jne 0x90cfe; movsx eax, dl; neg eax; ret; 
0x00000000004590ec: add rsp, 0x100; sub rax, rdx; ret; 
0x0000000000402f86: add rsp, 0x10; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x0000000000407a13: add rsp, 0x10; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000041f0e9: add rsp, 0x10; mov eax, r8d; pop rbx; ret; 
0x000000000046db8f: add rsp, 0x10; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000047f698: add rsp, 0x10; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000042d9af: add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000000042d7b8: add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x000000000046db67: add rsp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x000000000040534f: add rsp, 0x10; pop rbp; ret; 
0x0000000000421525: add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000499310: add rsp, 0x10; pop rbx; ret; 
0x000000000049231e: add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x000000000041e1b1: add rsp, 0x118; ret; 
0x0000000000470145: add rsp, 0x148; ret; 
0x000000000041efa9: add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000404ecb: add rsp, 0x18; mov rax, rbx; pop rbx; pop rbp; ret; 
0x0000000000402965: add rsp, 0x18; pop rbp; pop r12; ret; 
0x0000000000408616: add rsp, 0x18; pop rbx; pop r12; ret; 
0x00000000004a48df: add rsp, 0x18; pop rbx; pop rbp; mov eax, r8d; ret; 
0x0000000000429109: add rsp, 0x18; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000421f06: add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000040396e: add rsp, 0x18; ret; 
0x0000000000404eef: add rsp, 0x18; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000004a35dd: add rsp, 0x198; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000046214f: add rsp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x000000000040324a: add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x000000000046d48c: add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000045aee5: add rsp, 0x20; pop rbx; ret; 
0x00000000004a3b4b: add rsp, 0x278; mov rax, rbp; pop rbx; pop rbp; ret; 
0x00000000004a3b60: add rsp, 0x278; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000041fbb9: add rsp, 0x28; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000045b4f0: add rsp, 0x28; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000045be8d: add rsp, 0x28; ret; 
0x000000000049ec2c: add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x00000000004263a9: add rsp, 0x30; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a1419: add rsp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x00000000004078b6: add rsp, 0x38; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004228b3: add rsp, 0x38; pop rbx; pop rbp; ret; 
0x00000000004850f2: add rsp, 0x38; ret; 
0x00000000004050ea: add rsp, 0x48; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000045bae4: add rsp, 0x48; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000404fec: add rsp, 0x48; ret; 
0x000000000045cd04: add rsp, 0x58; ret; 
0x000000000045bfeb: add rsp, 0x68; pop rbp; pop r12; ret; 
0x000000000048370d: add rsp, 0x68; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000045c26c: add rsp, 0x68; ret; 
0x0000000000483979: add rsp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a0e12: add rsp, 0x78; pop rbp; pop r12; ret; 
0x000000000045f77c: add rsp, 0x88; pop rbx; pop rbp; ret; 
0x0000000000410bc4: add rsp, 0x88; pop rbx; ret; 
0x00000000004a0b3f: add rsp, 0x98; pop rbp; pop r12; ret; 
0x00000000004115f2: add rsp, 0x98; ret; 
0x000000000047faa9: add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000484e95: add rsp, 0xa8; pop rbp; pop r12; ret; 
0x000000000046d35e: add rsp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000499183: add rsp, 0xc8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000402aff: add rsp, 0xc8; ret; 
0x000000000041f94a: add rsp, 0xd8; ret; 
0x000000000041fd5e: add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000407fb0: add rsp, 8; mov eax, 0xffffffef; pop rbx; pop rbp; ret; 
0x0000000000403855: add rsp, 8; mov eax, 0xfffffff2; pop rbx; pop rbp; ret; 
0x00000000004028c0: add rsp, 8; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x0000000000422294: add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000047fd16: add rsp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x00000000004222aa: add rsp, 8; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000040247e: add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000004927a0: add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000004205a3: add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000404e0c: add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000407c87: add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000049eb6c: add rsp, 8; movzx eax, al; neg eax; ret; 
0x00000000004024df: add rsp, 8; pop rbp; pop r12; ret; 
0x000000000046e8d3: add rsp, 8; pop rbx; pop r14; ret; 
0x0000000000424141: add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000403848: add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000401016: add rsp, 8; ret; 
0x00000000004038e1: add rsp, 8; sar eax, 0x1f; and eax, 0xffffff83; ret; 
0x0000000000402850: add rsp, 8; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000407fc0: add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000041ef04: add rsp, 8; xor r8d, r8d; mov rax, r8; pop rbx; pop rbp; ret; 
0x0000000000431c4e: add sil, sil; add eax, 0xb3132; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000431ade: add sil, sil; add eax, 0xb32a2; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x000000000043197e: add sil, sil; add eax, 0xb3402; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x0000000000499025: add word ptr [rdx + rax*2], 1; ret; 
0x0000000000405e65: and al, 0; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000004a3a1b: and al, 0x10; add rsp, 0x28; ret; 
0x000000000048e1aa: and al, 0x18; call 0x8dad0; add rsp, 0xd8; ret; 
0x000000000046db65: and al, 0x20; add rsp, 0x10; pop rbp; pop r12; pop r13; ret; 
0x0000000000409016: and al, 0x30; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000004824e4: and al, 0x41; pop rsp; pop r13; pop r14; ret; 
0x00000000004a14b8: and al, 0x48; add esp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x00000000004a11cf: and al, 0x48; add esp, 0x38; ret; 
0x0000000000404e49: and al, 0x48; add esp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000408c31: and al, 0x48; add esp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000049843b: and al, 0x48; mov edx, dword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x0000000000491a8a: and al, 0x48; xor rcx, qword ptr fs:[0x28]; jne 0x91ac4; add rsp, 0x58; ret; 
0x0000000000491f1a: and al, 0x48; xor rcx, qword ptr fs:[0x28]; jne 0x91f54; add rsp, 0x58; ret; 
0x0000000000491bfc: and al, 0x58; xor rcx, qword ptr fs:[0x28]; jne 0x91c44; add rsp, 0x68; ret; 
0x00000000004296cd: and al, 0x5d; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x000000000046da1b: and al, 0x83; call 0x8496323; pop rbx; ret; 
0x0000000000496200: and al, 0x83; ret; 
0x000000000042c930: and al, 0x89; ret 0xb48b; 
0x0000000000487046: and al, 0xb8; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret; 
0x0000000000487993: and al, 0xc0; add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x0000000000420048: and al, 0xc; add byte ptr [rdi], cl; xchg eax, esp; ret 0x3948; 
0x0000000000408f66: and al, 0xc; add rsp, 0x18; pop rbp; pop r12; ret; 
0x000000000045c361: and al, 0xc; add rsp, 0x18; ret; 
0x0000000000408de9: and al, 0xd4; ret; 
0x0000000000426f64: and al, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0x3bc0; 
0x000000000047b5cd: and al, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x000000000047560c: and al, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x0000000000487986: and al, 0xe8; add eax, dword ptr [rax]; add dh, dh; ret 0x7402; 
0x00000000004a11c6: and al, 0xe8; and al, 4; add byte ptr [rax], al; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000049e9d2: and al, 0xe8; movups xmmword ptr [rdi], xmm0; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x0000000000416d08: and al, 0xe8; ret 0x17d; 
0x000000000041d5f8: and al, 0xe8; ret 0xff89; 
0x000000000041c1f8: and al, 0xe8; ret 0xff9d; 
0x0000000000418df8: and al, 0xe8; ret 0xffd1; 
0x000000000041c4f7: and al, 0xe8; ret; 
0x0000000000418cb7: and al, 0xe9; ret 0xffed; 
0x00000000004a5278: and al, 0xf6; ret 0xf01; 
0x00000000004a7df3: and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x00000000004a11c8: and al, 4; add byte ptr [rax], al; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x0000000000455dc8: and al, 7; add byte ptr [rax], al; ret; 
0x000000000045cbe2: and al, 8; add cl, byte ptr [rbx + 0x750c2444]; ret 0xd8f7; 
0x000000000045c104: and al, 8; add rsp, 0x28; ret; 
0x000000000045c19d: and al, 8; call 0x818f0; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000048f263: and al, 8; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000045d009: and al, 8; syscall; cmp rax, -0xfff; jae 0x5d016; ret; 
0x000000000042170a: and al, byte ptr [rax + rax]; add byte ptr [rcx - 0x75], cl; xchg eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x00000000004a3a11: and al, byte ptr [rax]; add byte ptr [rax - 0x7b], cl; ror byte ptr [rax + 0xf], 0x45; and al, 0x10; add rsp, 0x28; ret; 
0x000000000040a425: and al, byte ptr [rcx + 0x8ff]; sal byte ptr [rbp + 0x72], 0x48; mov eax, 0x4ded80; ret; 
0x000000000044f42a: and al, byte ptr [rsp - 0xb7f68c]; ret 0xc148; 
0x000000000045639b: and bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; mov byte ptr [rdi + 0x20], cl; ret; 
0x000000000045639a: and bl, r14b; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; mov byte ptr [rdi + 0x20], cl; ret; 
0x000000000043078d: and byte ptr [r11], r9b; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000427879: and byte ptr [r15], cl; adc dword ptr [rcx + 0x30], eax; movups xmmword ptr [rcx + 0x40], xmm0; mov qword ptr [rdi + 0xa8], 0; ret; 
0x0000000000421b87: and byte ptr [r8 + 1], r9b; ret; 
0x00000000004268f6: and byte ptr [r9], sil; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000042d04d: and byte ptr [rax + 0x39], cl; ret 0x4273; 
0x000000000042c971: and byte ptr [rax + 0x39], cl; ret 0x860f; 
0x00000000004211ae: and byte ptr [rax + 0x39], cl; ret 0x894c; 
0x00000000004843b7: and byte ptr [rax + 1], cl; clc; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e5e7: and byte ptr [rax + 1], cl; clc; sub rax, rdx; vzeroupper; ret; 
0x0000000000439337: and byte ptr [rax + 1], cl; clc; vzeroupper; ret; 
0x0000000000410e2c: and byte ptr [rax + 1], cl; ret 0xb70f; 
0x0000000000421b88: and byte ptr [rax + 1], cl; ret; 
0x000000000044e4ad: and byte ptr [rax + 9], cl; retf 0xf48; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x0000000000483f89: and byte ptr [rax + 9], cl; retf 0xf48; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 2; ret; 
0x00000000004a1659: and byte ptr [rax + rdx - 0xd], dh; movups xmm0, xmmword ptr [rip + 0x2ec14]; divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x0000000000456095: and byte ptr [rax - 0x73], cl; jg 0x560ba; jne 0x564f0; ret; 
0x0000000000487761: and byte ptr [rax - 0x75], cl; sub byte ptr [r8 + 0x39], r9b; ret 0x870f; 
0x0000000000462e94: and byte ptr [rax - 0x77], cl; ret; 
0x00000000004a7023: and byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax - 0x18]; ret 0xfff7; 
0x00000000004a6f23: and byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax - 0x18]; ret 0xfff8; 
0x00000000004a6e23: and byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax - 0x18]; ret 0xfff9; 
0x00000000004a6d23: and byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax - 0x18]; ret 0xfffa; 
0x00000000004238c2: and byte ptr [rax - 1], bh; pop rbx; ret; 
0x000000000045f35e: and byte ptr [rax], al; add byte ptr [rax - 0x73], cl; adc byte ptr [r8 - 0x77], cl; ret 0x8148; 
0x000000000045a87b: and byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000045c3a5: and byte ptr [rax], al; add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5c3b4; ret; 
0x0000000000410d38: and byte ptr [rax], al; add dh, dh; ret 0x7440; 
0x00000000004a17d6: and byte ptr [rbp + 0x27], dh; mov rax, qword ptr [rsi + 0xa8]; add rsp, 8; ret; 
0x0000000000431c5b: and byte ptr [rbp + 0x42], dh; and edx, 8; lea rax, [rip + 0x9568]; lea rdx, [rip + 0xeaf1]; cmovne rax, rdx; ret; 
0x0000000000431aeb: and byte ptr [rbp + 0x42], dh; and edx, 8; lea rax, [rip + 0x96b8]; lea rdx, [rip + 0xec41]; cmovne rax, rdx; ret; 
0x000000000043198b: and byte ptr [rbp + 0x42], dh; and edx, 8; lea rax, [rip + 0xc218]; lea rdx, [rip + 0x118b1]; cmovne rax, rdx; ret; 
0x00000000004863ff: and byte ptr [rbx + 0x5b69a35], cl; add byte ptr [rbp - 0x7d7af00a], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000046d48f: and byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x0000000000407575: and byte ptr [rbx], al; add byte ptr [rax], al; add cl, ch; ret; 
0x000000000043078e: and byte ptr [rbx], cl; add byte ptr [rax + 0x39], cl; ret; 
0x000000000040a44f: and byte ptr [rcx + 0x16ff], al; xor byte ptr [rbp + 0x48], 0x48; mov eax, 0x4def40; ret; 
0x0000000000495dac: and byte ptr [rcx + 9], cl; ret; 
0x000000000040324d: and byte ptr [rcx + rcx*4 - 0x20], al; pop r12; ret; 
0x00000000004a549c: and byte ptr [rcx - 0x75], cl; insd dword ptr [rdi], dx; sbb dh, dh; ret 0xf01; 
0x000000000044ed7b: and byte ptr [rcx - 0x7d], cl; rcr byte ptr [rdi + 0x49], 0x29; ror byte ptr [rax - 0x73], 1; jl 0x4ed9e; and ecx, ebp; ret; 
0x000000000044ee28: and byte ptr [rcx], ch; retf 0x3944; ret 0x820f; 
0x0000000000430d15: and byte ptr [rcx], dh; imul al; ret; 
0x00000000004268f7: and byte ptr [rcx], dh; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x00000000004595b0: and byte ptr [rdi + 0x7e], dh; movups xmm0, xmmword ptr [rsi]; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000045a2e5: and byte ptr [rdi + 0xb], dh; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000042787a: and byte ptr [rdi], cl; adc dword ptr [rcx + 0x30], eax; movups xmmword ptr [rcx + 0x40], xmm0; mov qword ptr [rdi + 0xa8], 0; ret; 
0x00000000004597c5: and byte ptr [rdi], cl; adc dword ptr [rdi + 0x30], edi; movups xmmword ptr [r11], xmm8; ret; 
0x00000000004348f4: and byte ptr [rdi], cl; mov dh, 0x54; cmp ah, byte ptr [rax]; sub eax, edx; vzeroupper; ret; 
0x0000000000456099: and byte ptr [rdi], cl; test dword ptr [rax + 4], edx; add byte ptr [rax], al; ret; 
0x00000000004572ed: and byte ptr [rdi], cl; test dword ptr [rax + rax + 0x40a80000], edi; jne 0x573c0; lea rax, [rdi + 7]; ret; 
0x00000000004571d0: and byte ptr [rdi], cl; test ecx, ebx; add dword ptr [rax], eax; add dh, dh; ret 0x7520; 
0x000000000045a275: and byte ptr [rdi], cl; xchg dword ptr [rax - 0xd000000], eax; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000445eaa: and byte ptr [rdx + 0x14], dh; vmovdqu ymm0, ymmword ptr [rsi]; vmovdqu ymm1, ymmword ptr [rcx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x00000000004592fc: and byte ptr [rdx + 0xa], dh; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x000000000044f0a8: and byte ptr [rdx - 0x13abfb2], cl; jg 0x4f0c7; vmovdqu ymmword ptr [rdi + 0x20], ymm3; mov byte ptr [rdi + 0x40], cl; vzeroupper; ret; 
0x000000000041266b: and byte ptr [rip + 0x3d8b4c00], cl; ret; 
0x0000000000439c1a: and byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000048d505: and byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ret; 
0x0000000000439c15: and byte ptr [rsi + 0xf], ah; out dx, eax; push rsi; and byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004a5293: and byte ptr [rsi - 9], ah; ret; 
0x000000000045a838: and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x00000000004841d2: and ch, 0xf; je 0x841f0; add rax, 2; ret; 
0x0000000000482afc: and ch, al; std; xlatb; rol dword ptr [rbp + 0x311b75c0], 0xc0; vzeroupper; ret; 
0x000000000044ea47: and ch, al; std; xlatb; ror byte ptr [rcx - 0x7d], cl; ret 0x4d20; 
0x00000000004841bd: and cl, 0xf; je 0x841e0; ret; 
0x000000000045a7a3: and dh, 0xf0; mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x0000000000431be2: and dh, 2; lea rax, [rip + 0x14914]; lea rdx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x0000000000431049: and dh, 2; lea rax, [rip + 0x3afd]; lea rdx, [rip + 0x5356]; cmovne rax, rdx; ret; 
0x00000000004318f0: and dh, 2; lea rax, [rip + 0x7a86]; lea rdx, [rip + 0x25b3f]; cmovne rax, rdx; ret; 
0x000000000045fb11: and dh, al; sub byte ptr [r9], r8b; ret; 
0x000000000045fb7d: and dh, al; sub byte ptr [rcx], al; ret; 
0x000000000042b117: and dword ptr [rax + 0x39], ecx; ret 0x840f; 
0x00000000004038d9: and dword ptr [rax - 0x40], edx; call 0x5cf30; add rsp, 8; sar eax, 0x1f; and eax, 0xffffff83; ret; 
0x000000000048e733: and dword ptr [rax - 0x77], ecx; ret 0x2548; 
0x000000000048f04b: and dword ptr [rbp + rax], esp; ret; 
0x000000000042798b: and dword ptr [rbx], 0xffffffef; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000004279e3: and dword ptr [rbx], 0xffffffef; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000043945e: and dword ptr [rcx - 0x77], ecx; ret; 
0x0000000000455ecb: and dword ptr [rsi], eax; add byte ptr [rax], al; ret; 
0x0000000000402588: and dword ptr [rsi], ecx; mov rax, qword ptr [rax]; mov eax, dword ptr [rax]; ret; 
0x0000000000411adf: and eax, 0; ret; 
0x0000000000426157: and eax, 0x18; test edx, edx; jne 0x26170; sub dword ptr [rip + 0xbeb49], 1; ret; 
0x0000000000497e41: and eax, 0x18; test edx, edx; jne 0x97e50; sub dword ptr [rdi], 1; ret; 
0x000000000041e1a7: and eax, 0x28; jne 0x1e1d4; mov eax, r8d; add rsp, 0x118; ret; 
0x000000000041f943: and eax, 0x28; jne 0x1f952; add rsp, 0xd8; ret; 
0x0000000000402af4: and eax, 0x28; jne 0x2b8f; add rsp, 0xc8; ret; 
0x0000000000402ca4: and eax, 0x28; jne 0x2d3f; add rsp, 0xc8; ret; 
0x000000000042d667: and eax, 0x28; jne 0x2d674; add rsp, 0x10; pop rbp; ret; 
0x0000000000404fe5: and eax, 0x28; jne 0x4ff1; add rsp, 0x48; ret; 
0x0000000000405348: and eax, 0x28; jne 0x536c; add rsp, 0x10; pop rbp; ret; 
0x000000000045aede: and eax, 0x28; jne 0x5af04; add rsp, 0x20; pop rbx; ret; 
0x000000000045be86: and eax, 0x28; jne 0x5bea1; add rsp, 0x28; ret; 
0x000000000045c261: and eax, 0x28; jne 0x5c305; add rsp, 0x68; ret; 
0x000000000045cbb6: and eax, 0x28; jne 0x5cc03; add rsp, 0x68; ret; 
0x000000000045cc45: and eax, 0x28; jne 0x5cc93; add rsp, 0x18; ret; 
0x000000000045ccfd: and eax, 0x28; jne 0x5cd4b; add rsp, 0x58; ret; 
0x000000000045cd9b: and eax, 0x28; jne 0x5cdeb; add rsp, 0x58; ret; 
0x000000000045cfd9: and eax, 0x28; jne 0x5cfe5; add rsp, 0x28; ret; 
0x000000000045f9dc: and eax, 0x28; jne 0x5f9eb; add rsp, 0xd8; ret; 
0x000000000046fec0: and eax, 0x28; jne 0x6fecc; add rsp, 0x18; ret; 
0x000000000047013b: and eax, 0x28; jne 0x70184; mov eax, r9d; add rsp, 0x148; ret; 
0x0000000000470233: and eax, 0x28; jne 0x702d6; add rsp, 0x98; ret; 
0x0000000000471f73: and eax, 0x28; jne 0x71f82; add rsp, 0xd8; ret; 
0x000000000048502e: and eax, 0x28; jne 0x8503d; movzx eax, al; add rsp, 0x58; ret; 
0x00000000004850e8: and eax, 0x28; jne 0x85114; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000000408b07: and eax, 0x28; jne 0x8b13; add rsp, 0x18; ret; 
0x00000000004918c9: and eax, 0x28; jne 0x918d6; add rsp, 0x20; pop rbx; ret; 
0x00000000004919c4: and eax, 0x28; jne 0x919f3; add rsp, 0x38; ret; 
0x0000000000491a90: and eax, 0x28; jne 0x91ac4; add rsp, 0x58; ret; 
0x0000000000491c02: and eax, 0x28; jne 0x91c44; add rsp, 0x68; ret; 
0x0000000000491f20: and eax, 0x28; jne 0x91f54; add rsp, 0x58; ret; 
0x0000000000492710: and eax, 0x28; jne 0x92735; add rsp, 0x38; ret; 
0x00000000004984b7: and eax, 0x28; jne 0x984c3; add rsp, 0x28; ret; 
0x00000000004985a5: and eax, 0x28; jne 0x985b1; add rsp, 0x38; ret; 
0x000000000049e58d: and eax, 0x28; jne 0x9e615; leave; ret; 
0x000000000049eb20: and eax, 0x28; jne 0x9eb2c; add rsp, 0x38; ret; 
0x000000000040b09e: and eax, 0x2964c06b; ret; 
0x000000000049e80a: and eax, 0x2c7; add byte ptr [rax], al; mov eax, 1; ret; 
0x000000000045a7be: and eax, 0x3fc00; ret; 
0x000000000045a8b8: and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x000000000045a809: and eax, 0x3fffc00; ret; 
0x00000000004850ee: and eax, 0x48c88944; add esp, 0x38; ret; 
0x000000000048b68b: and eax, 0x57af0; or byte ptr [rdi + 0x31d], 4; ret; 
0x0000000000401d5d: and eax, 0x5d01000e; ret; 
0x0000000000480e1a: and eax, 0x6e0f4866; ret; 
0x000000000045a8a1: and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x000000000045a857: and eax, 0x7ff80000; ret; 
0x000000000048c46e: and eax, 0x8348df74; ret; 
0x000000000048191b: and eax, 0xc; cmp eax, 4; je 0x81924; ret; 
0x0000000000430d14: and eax, 0xe8f63120; ret; 
0x00000000004803e7: and eax, 0xebfffa2f; ret; 
0x000000000043b190: and eax, 0xff; and ecx, 0xff; sub eax, ecx; ret; 
0x000000000043a8c3: and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x00000000004038e8: and eax, 0xffffff83; ret; 
0x000000000044e3f4: and eax, 0xffffffc0; sar rdx, cl; test rdx, rdx; je 0x4e410; bsf rax, rdx; ret; 
0x000000000044e397: and eax, 0xffffffc0; sar rdx, cl; test rdx, rdx; je 0x4e420; bsf rax, rdx; ret; 
0x0000000000462056: and eax, 0xffffffc7; or eax, 0x10; mov dword ptr [rip + 0x838f2], eax; pop rbx; ret; 
0x00000000004620b7: and eax, 0xffffffc7; or eax, 0x18; mov dword ptr [rip + 0x83891], eax; ret; 
0x0000000000462087: and eax, 0xffffffc7; or eax, 8; mov dword ptr [rip + 0x838c1], eax; ret; 
0x000000000040aadb: and eax, 0xffffffdf; ret; 
0x0000000000408857: and eax, 0xffffffea; ret; 
0x00000000004293a8: and eax, 0xfffffff0; sub rax, 0x11; shr rax, 4; lea rdx, [rax + 1]; mov qword ptr [rip + 0xb93d2], rdx; ret; 
0x00000000004a16d5: and eax, 0xfffffff8; mov r8, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [rcx], r8; ret; 
0x0000000000461fe7: and eax, 0xfffffff8; or eax, 1; mov dword ptr [rip + 0x83961], eax; ret; 
0x0000000000461fb6: and eax, 0xfffffff8; or eax, 2; mov dword ptr [rip + 0x83992], eax; pop rbx; ret; 
0x0000000000462017: and eax, 0xfffffff8; or eax, 3; mov dword ptr [rip + 0x83931], eax; ret; 
0x000000000040396b: and eax, 0xfffffffe; add rsp, 0x18; ret; 
0x00000000004304b1: and eax, 1; cmovne rax, rdx; ret; 
0x00000000004a39bf: and eax, 1; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000049c96c: and eax, 2; sub eax, 1; ret; 
0x000000000040b669: and eax, dword ptr [r8]; add byte ptr [rbp - 0x5f6f7240], al; sldt word ptr [rax]; cmovns eax, edx; add rsp, 8; ret; 
0x000000000047df35: and eax, dword ptr [rax]; add byte ptr [rax + 0x39], cl; ret; 
0x000000000040b66a: and eax, dword ptr [rax]; add byte ptr [rbp - 0x5f6f7240], al; sldt word ptr [rax]; cmovns eax, edx; add rsp, 8; ret; 
0x000000000045aa54: and eax, dword ptr [rbx - 0x76bbfe3a]; ror byte ptr [rcx - 0x765df00f], 1; ret 0xe283; 
0x0000000000452b09: and eax, dword ptr [rdx]; add byte ptr [rax], al; ret; 
0x0000000000482c42: and eax, ecx; je 0x82e10; bsr rax, rax; add rax, rdi; ret; 
0x000000000048b72a: and eax, esi; cmp rdi, rax; jne 0x8b738; pop rbx; ret; 
0x000000000040b5eb: and eax, esp; or dword ptr [rax], eax; ret; 
0x000000000042798c: and ebp, edi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000004279e4: and ebp, edi; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004818b6: and ebx, 0xffffffbb; cmp r11d, 0xa; je 0x818c0; ret; 
0x0000000000423384: and ebx, dword ptr [rbx + 0x4c]; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000004a070a: and ecx, 0x39447fff; ret; 
0x000000000045a7d8: and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000043b195: and ecx, 0xff; sub eax, ecx; ret; 
0x000000000043a8c8: and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000046856d: and ecx, dword ptr [rax + 0x39]; ret 0x850f; 
0x0000000000429cd5: and ecx, dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000485252: and ecx, dword ptr [rsi + 0x10]; lea rcx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000485237: and ecx, dword ptr [rsi + 0xc]; lea rcx, [rsi + rcx*4]; mov edx, dword ptr [rcx + rdx]; test edx, edx; jne 0x85250; ret; 
0x000000000044ed87: and ecx, ebp; ret; 
0x00000000004a1657: and edi, 0x20; je 0xa166c; movss xmm0, dword ptr [rip + 0x2ec14]; divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x00000000004a1806: and edi, 0x60; jne 0x171e; xor eax, eax; add rsp, 8; ret; 
0x00000000004a4574: and edi, dword ptr [rax + rsi]; jne 0xa4588; mov rax, qword ptr [rsi + 0x10]; add rsp, 8; ret; 
0x00000000004a45d4: and edi, dword ptr [rax + rsi]; jne 0xa45e8; mov rax, qword ptr [rsi + 0x10]; add rsp, 8; ret; 
0x000000000048b727: and edi, esi; and rax, rsi; cmp rdi, rax; jne 0x8b738; pop rbx; ret; 
0x0000000000429796: and edx, 0xfffffff0; test rax, rax; mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0xbb58c], rax; ret; 
0x0000000000431c5e: and edx, 8; lea rax, [rip + 0x9568]; lea rdx, [rip + 0xeaf1]; cmovne rax, rdx; ret; 
0x0000000000431aee: and edx, 8; lea rax, [rip + 0x96b8]; lea rdx, [rip + 0xec41]; cmovne rax, rdx; ret; 
0x000000000043198e: and edx, 8; lea rax, [rip + 0xc218]; lea rdx, [rip + 0x118b1]; cmovne rax, rdx; ret; 
0x0000000000482dde: and edx, eax; cmovne rcx, rdi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x0000000000482ed2: and esi, eax; je 0x82e10; bsr rax, rsi; add rax, rdi; ret; 
0x0000000000482cdc: and esi, ecx; je 0x82e10; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x000000000040b543: and esp, eax; or dword ptr [rax], eax; ret; 
0x00000000004818b5: and r11d, 0xffffffbb; cmp r11d, 0xa; je 0x818c0; ret; 
0x0000000000482afb: and r13b, r8b; std; xlatb; rol dword ptr [rbp + 0x311b75c0], 0xc0; vzeroupper; ret; 
0x000000000044e3f3: and rax, 0xffffffffffffffc0; sar rdx, cl; test rdx, rdx; je 0x4e410; bsf rax, rdx; ret; 
0x000000000044e396: and rax, 0xffffffffffffffc0; sar rdx, cl; test rdx, rdx; je 0x4e420; bsf rax, rdx; ret; 
0x00000000004293a7: and rax, 0xfffffffffffffff0; sub rax, 0x11; shr rax, 4; lea rdx, [rax + 1]; mov qword ptr [rip + 0xb93d2], rdx; ret; 
0x00000000004a16d4: and rax, 0xfffffffffffffff8; mov r8, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [rcx], r8; ret; 
0x0000000000482c41: and rax, rcx; je 0x82e10; bsr rax, rax; add rax, rdi; ret; 
0x000000000048b729: and rax, rsi; cmp rdi, rax; jne 0x8b738; pop rbx; ret; 
0x000000000048b726: and rdi, rsi; and rax, rsi; cmp rdi, rax; jne 0x8b738; pop rbx; ret; 
0x0000000000429795: and rdx, 0xfffffffffffffff0; test rax, rax; mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0xbb58c], rax; ret; 
0x0000000000482ddd: and rdx, r8; cmovne rcx, rdi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x0000000000482ed1: and rsi, rax; je 0x82e10; bsr rax, rsi; add rax, rdi; ret; 
0x0000000000482cdb: and rsi, rcx; je 0x82e10; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x000000000045fb7c: and sil, al; sub byte ptr [rcx], al; ret; 
0x0000000000483d78: bnd je 0x83d7f; test edx, edx; jne 0x83d70; ret; 
0x000000000044e5e1: bsf eax, eax; add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439331: bsf eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000044e601: bsf eax, eax; add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439341: bsf eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x000000000044e64d: bsf eax, eax; add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000043936f: bsf eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x000000000044e1a4: bsf eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x000000000043908a: bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x000000000044e516: bsf eax, eax; add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000439286: bsf eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000000439200: bsf eax, eax; add rax, rdi; ret; 
0x0000000000484391: bsf eax, eax; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e5d1: bsf eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439321: bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000000482b11: bsf eax, eax; cmp rdx, rax; jbe 0x82b80; add rax, rdi; vzeroupper; ret; 
0x0000000000498e71: bsf eax, eax; cmp rdx, rax; jbe 0x98ee0; add rax, rdi; vzeroupper; ret; 
0x0000000000439210: bsf eax, eax; lea rax, [rax + rdi + 0x10]; ret; 
0x0000000000439220: bsf eax, eax; lea rax, [rax + rdi + 0x20]; ret; 
0x00000000004391f0: bsf eax, eax; lea rax, [rax + rdi - 0x10]; ret; 
0x00000000004391d9: bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000044dd37: bsf eax, eax; lea rax, [rdi + rax]; ret; 
0x000000000044db07: bsf eax, eax; mov edx, 0; lea rax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x0000000000482669: bsf eax, eax; sub rdx, rax; jbe 0x82910; add rax, rdi; add rax, rcx; ret; 
0x00000000004828d0: bsf eax, eax; sub rdx, rax; jbe 0x82910; add rax, rdi; ret; 
0x00000000004828e0: bsf eax, eax; sub rdx, rax; jbe 0x82910; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004828f0: bsf eax, eax; sub rdx, rax; jbe 0x82910; lea rax, [rdi + rax + 0x20]; ret; 
0x0000000000482900: bsf eax, eax; sub rdx, rax; jbe 0x82910; lea rax, [rdi + rax + 0x30]; ret; 
0x00000000004989c9: bsf eax, eax; sub rdx, rax; jbe 0x98c70; add rax, rdi; add rax, rcx; ret; 
0x0000000000498c30: bsf eax, eax; sub rdx, rax; jbe 0x98c70; add rax, rdi; ret; 
0x0000000000498c40: bsf eax, eax; sub rdx, rax; jbe 0x98c70; lea rax, [rdi + rax + 0x10]; ret; 
0x0000000000498c50: bsf eax, eax; sub rdx, rax; jbe 0x98c70; lea rax, [rdi + rax + 0x20]; ret; 
0x0000000000498c60: bsf eax, eax; sub rdx, rax; jbe 0x98c70; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000044e35a: bsf eax, edx; ret; 
0x0000000000483e27: bsf eax, edx; shr rax, 2; ret; 
0x0000000000439b21: bsf ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x20]; movzx edx, byte ptr [rsi + rcx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000439b41: bsf ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x40]; movzx edx, byte ptr [rsi + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000439b07: bsf ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x60]; movzx edx, byte ptr [rsi + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000439891: bsf ecx, eax; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000043339a: bsf ecx, ecx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x0000000000433460: bsf ecx, edi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x00000000004348c4: bsf ecx, edi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000434929: bsf ecx, esi; movzx eax, byte ptr [rax + rcx + 0x60]; movzx edx, byte ptr [rdx + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x00000000004348ed: bsf edi, ecx; movzx eax, byte ptr [rax + rdi + 0x20]; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000043490d: bsf edi, ecx; movzx eax, byte ptr [rax + rdi + 0x40]; movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000433230: bsf edx, eax; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x0000000000434761: bsf edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x20]; movzx edx, byte ptr [rsi + rdx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000434781: bsf edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x40]; movzx edx, byte ptr [rsi + rdx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000004347a1: bsf edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x60]; movzx edx, byte ptr [rsi + rdx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000434747: bsf edx, ecx; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x000000000044e4b2: bsf edx, edx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000483f37: bsf edx, edx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x00000000004331c1: bsf edx, edx; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000044de50: bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x000000000044dc30: bsf rax, rax; mov edx, 0; lea rax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000044e3a2: bsf rax, rdx; ret; 
0x0000000000483e26: bsf rax, rdx; shr rax, 2; ret; 
0x0000000000433399: bsf rcx, rcx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000043345f: bsf rcx, rdi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x0000000000434993: bsf rcx, rdi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x000000000043322f: bsf rdx, rax; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x000000000044e4b1: bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000483f36: bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x00000000004331c0: bsf rdx, rdx; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000482c4b: bsr eax, eax; add rax, rdi; ret; 
0x0000000000483031: bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x0000000000482edb: bsr eax, esi; add rax, rdi; ret; 
0x0000000000482de9: bsr esi, esi; lea rax, [rcx + rsi]; ret; 
0x0000000000482ce5: bsr esi, esi; lea rax, [rdi + rsi]; ret; 
0x0000000000482c4a: bsr rax, rax; add rax, rdi; ret; 
0x0000000000482eda: bsr rax, rsi; add rax, rdi; ret; 
0x0000000000482de8: bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x0000000000482ce4: bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x00000000004398fc: bswap eax; bswap ecx; mov al, byte ptr [rdi + rdx - 1]; mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x00000000004398fe: bswap ecx; mov al, byte ptr [rdi + rdx - 1]; mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x000000000049e991: bts eax, 0x30; mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x0000000000483273: bts edx, ebx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000483f33: bts edx, ebx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x00000000004831d4: bts edx, esi; sar rdx, cl; test rdx, rdx; je 0x831f0; bsf rax, rdx; ret; 
0x000000000049e821: bts esi, 0x34; mov eax, 1; mov qword ptr [rdi], rsi; ret; 
0x000000000049e990: bts rax, 0x30; mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x0000000000483272: bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000483f32: bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x00000000004831d3: bts rdx, rsi; sar rdx, cl; test rdx, rdx; je 0x831f0; bsf rax, rdx; ret; 
0x000000000049e820: bts rsi, 0x34; mov eax, 1; mov qword ptr [rdi], rsi; ret; 
0x0000000000401ca9: call 0x10d80; hlt; nop; endbr64; ret; 
0x000000000049960b: call 0x11c50; endbr64; ret; 
0x00000000004612f5: call 0x11c50; nop word ptr [rax + rax]; endbr64; lea rax, [rip + 0x81f55]; ret; 
0x000000000041eef8: call 0x11c50; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000402036: call 0x1e8a; mov eax, 0; leave; ret; 
0x000000000042330b: call 0x22ea0; endbr64; cmp qword ptr [rip + 0xbec84], 0; je 0x2331f; ret; 
0x0000000000424fa9: call 0x26530; mov dword ptr [rbx + 0x70], 0xffffffff; pop rbx; ret; 
0x0000000000401e83: call 0x2700; leave; ret; 
0x0000000000439848: call 0x2951b5c; add byte ptr [rax], al; xor eax, eax; vzeroupper; ret; 
0x000000000042d838: call 0x29810; mov rax, -0x40; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x0000000000494741: call 0x2a094744; ret; 
0x000000000048f95c: call 0x2ead0; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x0000000000420067: call 0x2ead0; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000404c41: call 0x2ead0; mov rax, rbx; pop rbx; ret; 
0x00000000004a682d: call 0x2ead0; test rbx, rbx; jne 0xa681d; pop rbx; ret; 
0x00000000004030af: call 0x3030; cmp eax, 1; je 0x30c0; xor eax, eax; pop r12; ret; 
0x0000000000402235: call 0x34a0; mov dword ptr [rip + 0xe2090], ebx; xor eax, eax; pop rbx; ret; 
0x000000000047bb24: call 0x39505371; ret; 
0x000000000047cc99: call 0x395064e6; ret; 
0x000000000042071f: call 0x415e4881; pop rbp; pop r14; ret; 
0x0000000000420746: call 0x415e48a8; pop rbp; pop r14; ret; 
0x000000000042723f: call 0x415eb3a1; pop rbp; pop r14; ret; 
0x000000000045d74a: call 0x416218ac; pop rbp; ret; 
0x000000000041fd61: call 0x4401fd66; mov eax, eax; pop rbx; pop rbp; ret; 
0x000000000041ff0f: call 0x4401ff14; mov eax, eax; pop rbx; pop rbp; ret; 
0x000000000049e993: call 0x479331c8; or byte ptr [rax + 2], bh; ret; 
0x000000000044f434: call 0x48eddf49; mov eax, edi; ret; 
0x000000000044f524: call 0x48ede039; mov eax, edx; ret; 
0x00000000004527e3: call 0x4a926ff8; adc byte ptr [rdi], cl; test dword ptr [rcx + 5], eax; add byte ptr [rax], al; ret; 
0x00000000004529d9: call 0x4a9271df; add dword ptr [rdi], ecx; test dword ptr [rbx + 3], ecx; add byte ptr [rax], al; ret; 
0x0000000000452a5f: call 0x4a927269; add eax, 0x2c5850f; add byte ptr [rax], al; ret; 
0x0000000000452ac1: call 0x4a9272cf; or dword ptr [rdi], ecx; test dword ptr [rbx + 2], esp; add byte ptr [rax], al; ret; 
0x0000000000452ae1: call 0x4a9272f0; or cl, byte ptr [rdi]; test dword ptr [rbx + 2], eax; add byte ptr [rax], al; ret; 
0x0000000000452b43: call 0x4a927355; or eax, 0x1e1850f; add byte ptr [rax], al; ret; 
0x000000000043ac95: call 0x4e72bc8d; call 0xf6a9551; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004427a0: call 0x4ef43797; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004452d0: call 0x4ef462c7; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004293b1: call 0x508fdbba; add dword ptr [rax - 0x77], ecx; adc eax, 0xb93d2; ret; 
0x000000000042cb6f: call 0x54901376; ret; 
0x000000000042472f: call 0x5c43a48f; ret; 
0x0000000000430602: call 0x5c446362; pop r13; pop r14; ret; 
0x000000000045d735: call 0x5c473495; pop r13; ret; 
0x000000000049952c: call 0x5c4af28c; pop r13; ret; 
0x00000000004115e4: call 0x5cb60; cmp eax, -1; je 0x116d8; add rsp, 0x98; ret; 
0x00000000004038dc: call 0x5cf30; add rsp, 8; sar eax, 0x1f; and eax, 0xffffff83; ret; 
0x0000000000403963: call 0x5cf30; sar eax, 0x1f; and eax, 0xfffffffe; add rsp, 0x18; ret; 
0x0000000000499557: call 0x5d4af19d; ret; 
0x00000000004991db: call 0x5fa10; endbr64; mov eax, dword ptr [rip + 0x4c79e]; ret; 
0x000000000046d1f3: call 0x5fa10; nop dword ptr [rax + rax]; endbr64; mov rax, qword ptr [rip + 0x77c45]; ret; 
0x0000000000464cfc: call 0x646e0; or dword ptr [rip + 0x80134], 2; add rsp, 8; ret; 
0x000000000041ed2e: call 0x648f3936; ret; 
0x000000000046fd86: call 0x6506fd8a; mov qword ptr [rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x000000000046fde7: call 0x6506fdeb; add rax, qword ptr [0]; ret; 
0x00000000004638b1: call 0x6dc60; mov qword ptr [rbx], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000407d31: call 0x6f90037; ja 0x7d14; mov eax, 1; ret; 
0x00000000004841b5: call 0x74dac5bc; adc eax, 0xe180d188; pcmpeqb mm3, qword ptr [rsi]; ret; 
0x000000000043b178: call 0x75cbe98d; adc ah, byte ptr [rip + 0xffff]; and ecx, 0xffff; sub eax, ecx; ret; 
0x00000000004842e4: call 0x780107eb; ret; 
0x000000000048439c: call 0x780108a3; ret; 
0x00000000004843c0: call 0x780108c7; ret; 
0x00000000004843e0: call 0x780108e7; ret; 
0x000000000048442c: call 0x78010933; ret; 
0x00000000004844cd: call 0x780109d4; ret; 
0x0000000000484608: call 0x78010b0f; ret; 
0x000000000048463a: call 0x78010b41; ret; 
0x0000000000484651: call 0x78010b58; ret; 
0x0000000000484675: call 0x78010b7c; ret; 
0x0000000000484695: call 0x78010b9c; ret; 
0x00000000004846b5: call 0x78010bbc; ret; 
0x00000000004846c5: call 0x78010bcc; ret; 
0x00000000004846ec: call 0x78010bf3; ret; 
0x0000000000484710: call 0x78010c17; ret; 
0x0000000000484730: call 0x78010c37; ret; 
0x000000000048477c: call 0x78010c83; ret; 
0x0000000000407c82: call 0x7bc0; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000408f5f: call 0x7db0; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; pop rbp; pop r12; ret; 
0x00000000004089b3: call 0x7ec0; pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000044eeec: call 0x7f9236f4; add ecx, dword ptr [rdi]; test dword ptr [rax + 2], ebx; add byte ptr [rax], al; vzeroupper; ret; 
0x0000000000455c7b: call 0x7f92a483; add ecx, dword ptr [rdi]; test dword ptr [rcx + 8], ebp; add byte ptr [rax], al; ret; 
0x0000000000455c96: call 0x7f92a49f; add al, 0xf; test dword ptr [rsi + 8], ecx; add byte ptr [rax], al; ret; 
0x0000000000455cb9: call 0x7f92a4c3; add eax, 0x82b850f; add byte ptr [rax], al; ret; 
0x0000000000455d7e: call 0x7f92a58e; or ecx, dword ptr [rdi]; test dword ptr [rsi + 7], esp; add byte ptr [rax], al; ret; 
0x0000000000455d9e: call 0x7f92a5af; or al, 0xf; test dword ptr [rsi + 7], eax; add byte ptr [rax], al; ret; 
0x0000000000455dc0: call 0x7f92a5d2; or eax, 0x724850f; add byte ptr [rax], al; ret; 
0x0000000000455ec3: call 0x7f92a6dd; adc eax, 0x621850f; add byte ptr [rax], al; ret; 
0x0000000000455f7a: call 0x7f92a799; sbb cl, byte ptr [rdi]; test dword ptr [rdx + 5], ebp; add byte ptr [rax], al; ret; 
0x0000000000456004: call 0x7f92a826; sbb eax, 0x4e0850f; add byte ptr [rax], al; ret; 
0x0000000000456094: call 0x7f92a8b9; and byte ptr [rdi], cl; test dword ptr [rax + 4], edx; add byte ptr [rax], al; ret; 
0x000000000045c35a: call 0x818f0; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000045c0fc: call 0x818f0; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000046da1d: call 0x8496323; pop rbx; ret; 
0x000000000046da05: call 0x84a630b; cmp eax, -3; je 0x6da28; pop rbx; ret; 
0x000000000049ee10: call 0x88c80; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000049190c: call 0x8a550; mov qword ptr [rbx + 0x10], rax; pop rax; pop rdx; pop rbx; ret; 
0x00000000004a0a27: call 0x8a550; mov qword ptr [rbx], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000000405c5d: call 0x8c4dfaa; pop rbp; pop r12; ret; 
0x00000000004a6577: call 0x8cee8c4; pop rbx; pop rbp; ret; 
0x000000000048e1ac: call 0x8dad0; add rsp, 0xd8; ret; 
0x000000000046da31: call 0x91970; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000049ea88: call 0x999d0; mov qword ptr [rbx + 0x10], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000000491841: call 0x999d0; mov qword ptr [rbx + 0x18], rax; pop rax; pop rdx; pop rbx; ret; 
0x000000000049e580: call 0x9d7d0; mov rax, qword ptr [rbp - 8]; xor rax, qword ptr fs:[0x28]; jne 0x9e615; leave; ret; 
0x000000000049ec57: call 0xa0a40; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000049eb93: call 0xa0d70; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x00000000004a11c7: call 0xa15f0; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000040a514: call 0xa330; cmp rax, 1; sbb eax, eax; and eax, 0xffffffea; ret; 
0x000000000040254d: call 0xa530; test rax, rax; je 0x2560; mov eax, dword ptr [rax]; add rsp, 8; ret; 
0x0000000000401d55: call 0xa5cc0; mov byte ptr [rip + 0xe251f], 1; pop rbp; ret; 
0x000000000040b668: call 0xd9b0; test eax, eax; lea edx, [rax + 0xfa0]; cmovns eax, edx; add rsp, 8; ret; 
0x000000000043ac9a: call 0xf6a9551; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000049e9d3: call 0xffffffff8910fae7; add bh, byte ptr [rax + 2]; ret; 
0x0000000000493d80: call 0xffffffff8a093d83; sar dword ptr [rcx], cl; ret 0x4d74; 
0x000000000048bd49: call 0xffffffff8b51bd4d; mov byte ptr [r9 - 0x77], r9b; xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x00000000004a2ea7: call 0xffffffff8b582ea1; adc cl, byte ptr [rcx + 1]; ret 0xef89; 
0x000000000042890b: call 0xffffffffa1081211; ret; 
0x000000000049f3a7: call 0xffffffffaf193bb0; ret; 
0x0000000000439af2: call 0xffffffffc52e10f6; std; xlatb; ret; 
0x000000000040b32a: call 0xffffffffc8c11c55; add byte ptr [rax], al; add byte ptr [rcx], ch; ret; 
0x000000000040bf64: call 0xffffffffc8c1288f; add byte ptr [rax], al; add byte ptr [rcx], ch; ret; 
0x000000000040ca9b: call 0xffffffffc8c133c6; add byte ptr [rax], al; add byte ptr [rcx], ch; ret; 
0x000000000040d5db: call 0xffffffffc8c13f06; add byte ptr [rax], al; add byte ptr [rcx], ch; ret; 
0x00000000004233ac: call 0xffffffffceed473c; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x00000000004293ad: call 0xffffffffe8c3dbc3; add al, 0x48; lea edx, [rax + 1]; mov qword ptr [rip + 0xb93d2], rdx; ret; 
0x000000000043cc23: call 0xfffffffff0625774; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043f603: call 0xfffffffff0628154; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043caf3: call 0xfffffffff0635444; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cb31: call 0xfffffffff0635482; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cb69: call 0xfffffffff06354ba; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cba7: call 0xfffffffff06354f8; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cbdf: call 0xfffffffff0635530; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cc07: call 0xfffffffff0635558; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cc2f: call 0xfffffffff0635580; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043f4d3: call 0xfffffffff0637e24; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043f511: call 0xfffffffff0637e62; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043f549: call 0xfffffffff0637e9a; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043f587: call 0xfffffffff0637ed8; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043f5bf: call 0xfffffffff0637f10; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043f5e7: call 0xfffffffff0637f38; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043f60f: call 0xfffffffff0637f60; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004a3cfa: call 0xfffffffff07fc84b; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x00000000004a3fc2: call 0xfffffffff07fcb13; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x00000000004a41e4: call 0xfffffffff07fcd35; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x0000000000460966: call 0xfffffffff606096e; ret 0x7402; 
0x0000000000487987: call 0xfffffffff608798f; ret 0x7402; 
0x000000000045a7bc: call 0xfffffffffc05cccf; add eax, dword ptr [rax]; ret; 
0x000000000045a807: call 0xfffffffffc05cd12; inc dword ptr [rbx]; ret; 
0x00000000004a5c09: call 0xffffffffffc00000; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a5a1e: call qword ptr [rax + 0x8c48348]; pop rbx; pop rbp; ret; 
0x00000000004287fe: call qword ptr [rax - 0x5e1f00d]; mov rax, -1; ret; 
0x000000000048b5d2: call qword ptr [rip + 0x57ba8]; xor eax, eax; add rsp, 8; ret; 
0x000000000040a449: call qword ptr [rip + 0x74800000]; and byte ptr [rcx + 0x16ff], al; xor byte ptr [rbp + 0x48], 0x48; mov eax, 0x4def40; ret; 
0x000000000040a451: call qword ptr [rsi]; add byte ptr [rax], al; xor byte ptr [rbp + 0x48], 0x48; mov eax, 0x4def40; ret; 
0x000000000040a3e4: call qword ptr [rsi]; jne 0xa4a0; mov rax, 0x4def00; ret; 
0x0000000000401014: call rax; add rsp, 8; ret; 
0x000000000040c1d3: call rbx; or dword ptr [rax], eax; ret; 
0x0000000000423b0b: cdq; add byte ptr [rax], al; add byte ptr [rbp + 0x31], al; dec dword ptr [rax + 0x39]; ret 0x830f; 
0x000000000042d153: cdq; ret 0xffff; 
0x0000000000421a4c: clc; add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret; 
0x0000000000493bb3: clc; add cl, ch; ret 0xfff6; 
0x00000000004088a0: clc; add dword ptr [rbp + 0x1c], esi; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000049edad: clc; add ebx, dword ptr [rbx + 0x5d]; pop r12; ret; 
0x000000000043908f: clc; add rax, rcx; ret; 
0x00000000004842db: clc; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e51b: clc; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x000000000043928b: clc; add rax, rcx; vzeroupper; ret; 
0x000000000047df34: clc; and eax, dword ptr [rax]; add byte ptr [rax + 0x39], cl; ret; 
0x000000000043a72d: clc; cmp rcx, rax; jne 0x3b163; xor eax, eax; ret; 
0x0000000000471dea: clc; dec dword ptr [rax - 0x77]; ret 0x8948; 
0x0000000000479b53: clc; dec dword ptr [rax - 0x77]; ret 0xb848; 
0x000000000047ac85: clc; dec dword ptr [rax - 0x77]; ret 0xc9e9; 
0x0000000000474408: clc; dec dword ptr [rax - 0x77]; ret; 
0x00000000004a669e: clc; dec dword ptr [rax - 0x7d]; ret; 
0x00000000004746a6: clc; idiv bh; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x0000000000479e96: clc; idiv bh; dec dword ptr [rbp + 0x63]; ret; 
0x000000000042ce67: clc; lea ecx, [r8 + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x00000000004a3d02: clc; leave; ret; 
0x000000000043cc47: clc; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d59b: clc; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d79b: clc; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d99b: clc; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cc2b: clc; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d56f: clc; mov qword ptr [rdi - 0x1d], r10; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d76f: clc; mov qword ptr [rdi - 0x1e], r10; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d96f: clc; mov qword ptr [rdi - 0x1f], r10; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cbff: clc; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d5b7: clc; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000442537: clc; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043d7b7: clc; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004424a7: clc; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043d9b7: clc; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000442417: clc; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cc63: clc; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000044f047: clc; mov qword ptr [rdi], rcx; mov qword ptr [rdi + r8 - 8], rdx; vzeroupper; ret; 
0x000000000045a392: clc; mov qword ptr [rdi], rcx; ret; 
0x000000000045a511: clc; mov qword ptr [rdi], rcx; vzeroupper; ret; 
0x0000000000445ee0: clc; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000045960e: clc; mov qword ptr [rdi], rsi; ret; 
0x00000000004a16d7: clc; mov r8, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [rcx], r8; ret; 
0x000000000043acaf: clc; mov rax, qword ptr [rdi - 8]; cmp rcx, rax; jne 0x3b163; xor eax, eax; ret; 
0x000000000043a729: clc; mov rcx, qword ptr [rsi - 8]; cmp rcx, rax; jne 0x3b163; xor eax, eax; ret; 
0x0000000000492545: clc; mov rdi, rdx; cmp rax, 9; ja 0x92520; mov rax, r8; ret; 
0x0000000000459606: clc; mov rsi, qword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x0000000000439473: clc; movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000049254b: clc; or dword ptr [rdi - 0x2f], esi; mov rax, r8; ret; 
0x000000000047ec41: clc; or dword ptr [rdi], ecx; xchg bh, al; add al, byte ptr [rax]; add byte ptr [rcx - 0x76b3d395], cl; ret 0x8348; 
0x000000000047f385: clc; or dword ptr [rdi], ecx; xchg dword ptr [rbx], esi; add al, 0; add byte ptr [rbx - 0x7cb7fb8e], cl; ret 0xb804; 
0x0000000000461fe9: clc; or eax, 1; mov dword ptr [rip + 0x83961], eax; ret; 
0x0000000000461fb8: clc; or eax, 2; mov dword ptr [rip + 0x83992], eax; pop rbx; ret; 
0x0000000000462019: clc; or eax, 3; mov dword ptr [rip + 0x83931], eax; ret; 
0x0000000000429b5a: clc; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x0000000000427a1f: clc; push qword ptr [rbp - 0x40]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000428896: clc; ret; 
0x000000000049d0ea: clc; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000483f3f: clc; shr rax, 2; ret; 
0x00000000004916b1: clc; std; jbe 0x916c0; ret; 
0x000000000046da0b: clc; std; je 0x6da28; pop rbx; ret; 
0x00000000004527e0: clc; sub r8, 0x10; lea rcx, [rdx + 0x10]; jne 0x52d30; ret; 
0x0000000000452ade: clc; sub r8, 0xa; lea rcx, [rdx + 0xa]; jne 0x52d30; ret; 
0x0000000000452afe: clc; sub r8, 0xb; lea rcx, [rdx + 0xb]; jne 0x52d30; ret; 
0x0000000000452b1e: clc; sub r8, 0xc; lea rcx, [rdx + 0xc]; jne 0x52d30; ret; 
0x0000000000452b40: clc; sub r8, 0xd; lea rcx, [rdx + 0xd]; jne 0x52d30; ret; 
0x0000000000452b60: clc; sub r8, 0xe; lea rcx, [rdx + 0xe]; jne 0x52d30; ret; 
0x0000000000452b80: clc; sub r8, 0xf; lea rcx, [rdx + 0xf]; jne 0x52d30; ret; 
0x00000000004529d6: clc; sub r8, 1; lea rcx, [rdx + 1]; jne 0x52d30; ret; 
0x00000000004529f8: clc; sub r8, 2; lea rcx, [rdx + 2]; jne 0x52d30; ret; 
0x0000000000452a1e: clc; sub r8, 3; lea rcx, [rdx + 3]; jne 0x52d30; ret; 
0x0000000000452a36: clc; sub r8, 4; lea rcx, [rdx + 4]; jne 0x52d30; ret; 
0x0000000000452a5c: clc; sub r8, 5; lea rcx, [rdx + 5]; jne 0x52d30; ret; 
0x0000000000452a7e: clc; sub r8, 6; lea rcx, [rdx + 6]; jne 0x52d30; ret; 
0x0000000000452a9c: clc; sub r8, 7; lea rcx, [rdx + 7]; jne 0x52d30; ret; 
0x0000000000452778: clc; sub r8, 8; lea rcx, [rdx + 8]; jne 0x52d30; ret; 
0x0000000000452abe: clc; sub r8, 9; lea rcx, [rdx + 9]; jne 0x52d30; ret; 
0x0000000000484396: clc; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e5d6: clc; sub rax, rdx; vzeroupper; ret; 
0x0000000000439326: clc; vzeroupper; ret; 
0x000000000049e588: clc; xor rax, qword ptr fs:[0x28]; jne 0x9e615; leave; ret; 
0x00000000004310ad: cld; add dword ptr [rax], eax; cmovne rax, rdx; ret; 
0x000000000045a7db: cld; add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000045a7c0: cld; add eax, dword ptr [rax]; ret; 
0x0000000000458971: cld; cmp eax, ecx; jne 0x58b80; xor eax, eax; ret; 
0x000000000043a756: cld; cmp ecx, eax; jne 0x3b16f; xor eax, eax; ret; 
0x000000000049892d: cld; dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x00000000004645f2: cld; dec dword ptr [rax - 0x77]; ret; 
0x000000000048fa41: cld; inc dword ptr [rbp + 0x481975c0]; mov dword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x536f2], 1; ret; 
0x000000000045a8ba: cld; inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x000000000045a80b: cld; inc dword ptr [rbx]; ret; 
0x000000000049b281: cld; inc edi; sbb byte ptr [rdx], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000043d3d2: cld; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d5d5: cld; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d7d5: cld; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d9d5: cld; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000044f026: cld; mov dword ptr [rdi], ecx; mov dword ptr [rdi + r8 - 4], edx; vzeroupper; ret; 
0x000000000045a39a: cld; mov dword ptr [rdi], ecx; ret; 
0x000000000045a51c: cld; mov dword ptr [rdi], ecx; vzeroupper; ret; 
0x0000000000445ef2: cld; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000045961c: cld; mov dword ptr [rdi], esi; ret; 
0x000000000043a753: cld; mov eax, dword ptr [rdi - 4]; cmp ecx, eax; jne 0x3b16f; xor eax, eax; ret; 
0x000000000045896e: cld; mov ecx, dword ptr [rsi - 4]; cmp eax, ecx; jne 0x58b80; xor eax, eax; ret; 
0x000000000043a9b5: cld; mov ecx, dword ptr [rsi - 4]; cmp ecx, eax; jne 0x3b16f; xor eax, eax; ret; 
0x0000000000459616: cld; mov esi, dword ptr [rsi]; mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x000000000043ce0a: cld; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cfea: cld; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d1ca: cld; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d3aa: cld; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cfce: cld; mov qword ptr [rdi - 0x1a], r10; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d1ae: cld; mov qword ptr [rdi - 0x1b], r10; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d38e: cld; mov qword ptr [rdi - 0x1c], r10; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d006: cld; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004426c6: cld; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d1e6: cld; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000442646: cld; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d3c6: cld; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004425c6: cld; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043ce26: cld; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000442746: cld; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043ccb1: cld; ret; 
0x0000000000446061: cld; vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000445e27: cld; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000446323: cld; vmovups zmmword ptr [rdi - 0x140], zmm12; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x00000000004592af: cld; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044f02d: cld; vzeroupper; ret; 
0x000000000049893b: cli; add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x000000000045a380: cli; add al, 0x73; adc eax, dword ptr [rax + 0x157701fa]; jb 0x5a38d; mov byte ptr [rdi], cl; ret; 
0x000000000042188c: cli; add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x000000000040a8b2: cli; add cl, byte ptr [rbp + 0x10f504]; add byte ptr [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000040a86c: cli; add cl, byte ptr [rbp + 0x14f504]; add byte ptr [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x0000000000459332: cli; add dh, byte ptr [rdx + 8]; mov word ptr [rdi], cx; mov word ptr [rsi - 2], cx; ret; 
0x000000000045a385: cli; add dword ptr [rdi + 0x15], esi; jb 0x5a38d; mov byte ptr [rdi], cl; ret; 
0x00000000004595f6: cli; add dword ptr [rdi + 0x26], esi; jb 0x59601; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000045a4f3: cli; add dword ptr [rdi + 0x2c], esi; jb 0x5a4fb; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000045a6bb: cli; add dword ptr [rdi + 0x3a], esi; jb 0x5a6c3; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x0000000000459966: cli; add dword ptr [rdi + 0x3b], esi; jb 0x59971; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x0000000000459db6: cli; add dword ptr [rdi + 0x53], esi; jb 0x59dc1; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000045933f: cli; add dword ptr [rdx + 2], esi; mov byte ptr [rdi], cl; ret; 
0x0000000000445f10: cli; add dword ptr [rdx + 4], esi; mov cl, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x0000000000468204: cli; add ecx, dword ptr [rdi]; xchg dword ptr [rax + 0x39480000], esp; ret; 
0x000000000045b6c0: cli; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x000000000045b714: cli; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xd284; 
0x00000000004847d4: cli; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000045a2e4: cli; and byte ptr [rdi + 0xb], dh; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045a274: cli; and byte ptr [rdi], cl; xchg dword ptr [rax - 0xd000000], eax; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x00000000004592fb: cli; and byte ptr [rdx + 0xa], dh; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x000000000040a513: cli; call 0xa330; cmp rax, 1; sbb eax, eax; and eax, 0xffffffea; ret; 
0x000000000048f133: cli; cmp byte ptr [rip + 0x5674d], 0; jne 0x8f150; mov r8, qword ptr [rip + 0x5632c]; mov rax, r8; ret; 
0x0000000000426df3: cli; cmp qword ptr [rdi + 0x38], 0; je 0x26e00; ret; 
0x0000000000423313: cli; cmp qword ptr [rip + 0xbec84], 0; je 0x2331f; ret; 
0x00000000004883a8: cli; dec dword ptr [rax - 0x77]; ret 0x8548; 
0x000000000045b977: cli; dec dword ptr [rax - 0x77]; ret; 
0x000000000046a663: cli; dec dword ptr [rbp - 0x77]; ret; 
0x000000000048256a: cli; dec dword ptr [rcx - 0x77]; add byte ptr [r8 - 0x7b], r9b; sal byte ptr [rcx + 0x48], 3; add byte ptr [r8 - 0x77], r9b; ret 0x14eb; 
0x000000000046bd75: cli; dec dword ptr [rcx - 0x77]; dec dword ptr [rbp - 0x77]; ret 0x87e9; 
0x000000000048a285: cli; dec dword ptr [rcx - 0x77]; ret; 
0x000000000048deff: cli; dec dword ptr [rdi]; test bl, ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000045a7df: cli; inc dword ptr [rax]; add byte ptr [rax], al; cmove rax, rcx; ret; 
0x000000000045a43c: cli; ja 0x5a44e; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000045a3ec: cli; ja 0x5a457; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x00000000004592e8: cli; jb 0x592fa; vmovups zmmword ptr [rdi], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x0000000000445ecb: cli; jg 0x45ed5; vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000044e9bb: cli; jg 0x4e9d5; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x000000000044f06c: cli; jg 0x4f086; vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm3; vzeroupper; ret; 
0x000000000044f111: cli; jg 0x4f11b; vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm0; vzeroupper; ret; 
0x00000000004570eb: cli; jg 0x57105; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000045930a: cli; jg 0x59314; vmovdqu xmmword ptr [rsi - 0x10], xmm0; ret; 
0x000000000045997d: cli; jg 0x59987; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000459de5: cli; jg 0x59def; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000045a506: cli; jg 0x5a510; vzeroupper; ret; 
0x000000000045a6dc: cli; jg 0x5a6e6; vzeroupper; ret; 
0x000000000042e466: cli; jne 0x2e44f; test r8b, r8b; jne 0x2e479; mov dword ptr [rip + 0xb68a8], 0; ret; 
0x0000000000490a89: cli; jp 0x90b00; adc ecx, dword ptr [rdi]; mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x0000000000461303: cli; lea rax, [rip + 0x81f55]; ret; 
0x0000000000402163: cli; lea rax, [rip + 0xa6f3d]; ret; 
0x000000000043d7d8: cli; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000045cf33: cli; mov eax, 0x10; syscall; cmp rax, -0xfff; jae 0x5cf44; ret; 
0x000000000045be23: cli; mov eax, 0x18; syscall; cmp rax, -0xfff; jae 0x5be34; ret; 
0x000000000045d143: cli; mov eax, 0x1c; syscall; cmp rax, -0xfff; jae 0x5d154; ret; 
0x000000000045c3a3: cli; mov eax, 0x20; syscall; cmp rax, -0xfff; jae 0x5c3b4; ret; 
0x000000000049ed23: cli; mov eax, 0x26; syscall; cmp rax, -0xfff; jae 0x9ed34; ret; 
0x0000000000498f93: cli; mov eax, 0x27; syscall; ret; 
0x0000000000484ed3: cli; mov eax, 0x3f; syscall; cmp rax, -0xfff; jae 0x84ee4; ret; 
0x000000000045f903: cli; mov eax, 0x63; syscall; cmp rax, -0xfff; jae 0x5f914; ret; 
0x0000000000484f03: cli; mov eax, 0x66; syscall; ret; 
0x0000000000484f23: cli; mov eax, 0x68; syscall; ret; 
0x0000000000484f13: cli; mov eax, 0x6b; syscall; ret; 
0x0000000000484f33: cli; mov eax, 0x6c; syscall; ret; 
0x000000000045d113: cli; mov eax, 0xa; syscall; cmp rax, -0xfff; jae 0x5d124; ret; 
0x000000000045d0e3: cli; mov eax, 0xb; syscall; cmp rax, -0xfff; jae 0x5d0f4; ret; 
0x0000000000426eb3: cli; mov eax, 0xffffffff; ret; 
0x000000000045ce23: cli; mov eax, 1; syscall; cmp rax, -0x1000; ja 0x5ce38; ret; 
0x000000000045cb33: cli; mov eax, 3; syscall; cmp rax, -0x1000; ja 0x5cb48; ret; 
0x000000000045c1e3: cli; mov eax, 8; syscall; cmp rax, -0x1000; ja 0x5c1f8; ret; 
0x0000000000428513: cli; mov eax, dword ptr [rdi + 0x10]; sub eax, dword ptr [rsi + 0x10]; ret; 
0x00000000004a5a93: cli; mov eax, dword ptr [rdi]; test eax, eax; jne 0xa5aa0; ret; 
0x00000000004a5cd3: cli; mov eax, dword ptr [rdi]; test eax, eax; jne 0xa5ce0; ret; 
0x00000000004991e3: cli; mov eax, dword ptr [rip + 0x4c79e]; ret; 
0x0000000000461313: cli; mov eax, dword ptr [rip + 0x846d6]; test eax, eax; je 0x61320; ret; 
0x000000000045f823: cli; mov eax, dword ptr [rip + 0x8615e]; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x00000000004037d3: cli; mov eax, dword ptr [rip + 0xde92a]; ret; 
0x0000000000403153: cli; mov eax, dword ptr [rip + 0xdefae]; test eax, eax; js 0x3160; ret; 
0x0000000000402173: cli; mov eax, dword ptr [rip + 0xe2156]; test eax, eax; je 0x2180; ret; 
0x000000000043d7d2: cli; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004a39d3: cli; mov qword ptr [rdi + 0x98], rsi; ret; 
0x000000000046fdc3: cli; mov rax, -0x10; add rax, qword ptr fs:[0]; ret; 
0x000000000046fde3: cli; mov rax, -0x18; add rax, qword ptr fs:[0]; ret; 
0x000000000046fe03: cli; mov rax, -0x20; add rax, qword ptr fs:[0]; ret; 
0x0000000000411ad3: cli; mov rax, -0x40; add rax, qword ptr fs:[0]; ret; 
0x000000000048fa63: cli; mov rax, -0x40; pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x000000000046fda3: cli; mov rax, -0x58; movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x0000000000427933: cli; mov rax, -1; ret; 
0x0000000000402583: cli; mov rax, 0x4e2130; mov rax, qword ptr [rax]; mov eax, dword ptr [rax]; ret; 
0x00000000004916e3: cli; mov rax, qword ptr [rax + 8]; ret; 
0x00000000004916f3: cli; mov rax, qword ptr [rax + 8]; sub rax, qword ptr fs:[0]; ret; 
0x00000000004292b3: cli; mov rax, qword ptr [rdi + 0x28]; cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000428883: cli; mov rax, qword ptr [rdi + 0x68]; ret; 
0x00000000004a3933: cli; mov rax, qword ptr [rdi + 0x90]; ret; 
0x00000000004a39a3: cli; mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000480d33: cli; mov rax, qword ptr [rdi + 0xa0]; cmp qword ptr [rax + 0x30], 0; je 0x80d48; ret; 
0x00000000004a39e3: cli; mov rax, qword ptr [rdi + 0xa0]; ret; 
0x00000000004a3a43: cli; mov rax, qword ptr [rdi + 0xa8]; ret; 
0x00000000004a3a33: cli; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x00000000004a39f3: cli; mov rax, qword ptr [rdi + 0xb8]; ret; 
0x0000000000429723: cli; mov rax, qword ptr [rdi]; cmp rax, 0x2000000; jbe 0x29730; ret; 
0x0000000000429383: cli; mov rax, qword ptr [rdi]; cmp rax, 0x408; jbe 0x29390; ret; 
0x0000000000429783: cli; mov rax, qword ptr [rdi]; cmp rax, 0xa0; jbe 0x29790; ret; 
0x00000000004293c3: cli; mov rax, qword ptr [rdi]; cmp rax, 0xffff; jbe 0x293d0; ret; 
0x000000000049bfd3: cli; mov rax, qword ptr [rdi]; cmp rax, rsi; je 0x9bfe0; ret; 
0x0000000000429753: cli; mov rax, qword ptr [rdi]; nop; mov dword ptr [rip + 0xb9012], 1; mov dword ptr [rip + 0xb9004], eax; ret; 
0x0000000000429703: cli; mov rax, qword ptr [rdi]; nop; mov dword ptr [rip + 0xb9062], 1; mov qword ptr [rip + 0xb902f], rax; ret; 
0x00000000004296e3: cli; mov rax, qword ptr [rdi]; nop; mov dword ptr [rip + 0xb9082], 1; mov qword ptr [rip + 0xb9047], rax; ret; 
0x0000000000429773: cli; mov rax, qword ptr [rdi]; nop; mov dword ptr [rip + 0xbb5b6], eax; ret; 
0x00000000004293e3: cli; mov rax, qword ptr [rdi]; nop; mov qword ptr [rip + 0xb93b9], rax; ret; 
0x0000000000429373: cli; mov rax, qword ptr [rdi]; nop; mov qword ptr [rip + 0xb93d9], rax; ret; 
0x0000000000429363: cli; mov rax, qword ptr [rdi]; nop; mov qword ptr [rip + 0xb93f1], rax; ret; 
0x000000000048f1a3: cli; mov rax, qword ptr [rip + 0x52f8d]; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x562b3]; mov qword ptr [rsi], rax; ret; 
0x000000000046d203: cli; mov rax, qword ptr [rip + 0x77c45]; ret; 
0x0000000000463853: cli; mov rax, qword ptr [rip + 0x821ad]; ret; 
0x000000000045cf63: cli; mov rax, qword ptr [rip + 0x861ed]; test rax, rax; je 0x5cf71; ret; 
0x0000000000428863: cli; mov rax, qword ptr [rip + 0xb98f5]; ret; 
0x0000000000428893: cli; mov rax, rdi; ret; 
0x00000000004924c1: cli; mov rdi, rax; cmp rdx, rcx; jae 0x924ac; mov rax, r8; ret; 
0x0000000000464f83: cli; movzx eax, sil; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000000403173: cli; movzx edi, dil; mov dword ptr [rip + 0xdef8a], edi; ret; 
0x0000000000439479: cli; movzx edx, dl; sub eax, edx; ret; 
0x0000000000437fe6: cli; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000459314: cli; or byte ptr [rdx + 0xa], dh; vmovq qword ptr [rdi], xmm0; vmovq qword ptr [rsi - 8], xmm0; ret; 
0x000000000045a2b6: cli; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000401cb3: cli; ret; 
0x000000000040aac7: cli; sbb byte ptr [rdi + 0xd], dh; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x0000000000429313: cli; setae al; ret; 
0x00000000004a8163: cli; sub rsp, 8; add rsp, 8; ret; 
0x0000000000498653: cli; test byte ptr [rip + 0x4c72f], 0x10; lea rdx, [rip + 0x11e]; lea rax, [rip + 0x67]; cmovne rax, rdx; ret; 
0x00000000004318a3: cli; test byte ptr [rip + 0xb3539], 0x10; lea rdx, [rip - 0x362]; lea rax, [rip + 0x272f7]; cmove rax, rdx; ret; 
0x0000000000430f63: cli; test byte ptr [rip + 0xb3e1f], 0x10; lea rdx, [rip + 0x2818e]; lea rax, [rip + 0x280d7]; cmovne rax, rdx; ret; 
0x000000000046d9e3: cli; test esi, esi; je 0x6d9f0; cmp esi, 3; je 0x6d9f0; ret; 
0x000000000044e3f9: cli; test rdx, rdx; je 0x4e410; bsf rax, rdx; ret; 
0x000000000044e39c: cli; test rdx, rdx; je 0x4e420; bsf rax, rdx; ret; 
0x00000000004831c8: cli; test rdx, rdx; je 0x831f0; bsf rax, rdx; ret; 
0x0000000000483158: cli; test rdx, rdx; je 0x83200; bsf rax, rdx; ret; 
0x0000000000483e88: cli; test rdx, rdx; je 0x83eb0; bsf rax, rdx; shr rax, 2; ret; 
0x0000000000483e1c: cli; test rdx, rdx; je 0x83ec0; bsf rax, rdx; shr rax, 2; ret; 
0x000000000045a2a3: cli; test rdx, rdx; jne 0x5a2ad; mov rax, rdi; ret; 
0x00000000004830c3: cli; test rsi, rsi; jne 0x830cd; xor rax, rax; ret; 
0x0000000000483d83: cli; test rsi, rsi; jne 0x83d8d; xor rax, rax; ret; 
0x0000000000446331: cli; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x00000000004278b3: cli; xor eax, eax; ret; 
0x000000000045cdf3: cli; xor eax, eax; syscall; cmp rax, -0x1000; ja 0x5ce08; ret; 
0x0000000000425193: cli; xor eax, eax; test rdx, rdx; jne 0x251a0; ret; 
0x000000000040a870: cmc; adc al, 0; add byte ptr [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000040a8ca: cmc; adc al, 0; add byte ptr [rax], al; ret; 
0x000000000040a8b6: cmc; adc byte ptr [rax], al; add byte ptr [rax], al; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000040a882: cmc; adc byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000425717: cmc; add dword ptr [rax], eax; add byte ptr [rdi + rcx - 0x42], cl; ret 0x4a8d; 
0x0000000000420047: cmc; and al, 0xc; add byte ptr [rdi], cl; xchg eax, esp; ret 0x3948; 
0x00000000004841d1: cmc; and ch, 0xf; je 0x841f0; add rax, 2; ret; 
0x0000000000428867: cmc; cwde; or eax, dword ptr [rax]; ret; 
0x00000000004a2a55: cmc; dec dword ptr [rbp - 0x75]; adc cl, byte ptr [rcx + 1]; ret 0xef89; 
0x000000000044264a: cmc; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d05e: cmc; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000442643: cmc; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d1c7: cmc; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d1e3: cmc; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004586b3: cmc; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x00000000004595c7: cmc; ret 8; 
0x00000000004586b7: cmc; sub eax, edx; ret; 
0x0000000000498f61: cmova edx, eax; mov eax, 0xd9; syscall; cmp rax, -0x1000; ja 0x98f78; ret; 
0x0000000000498f60: cmova rdx, rax; mov eax, 0xd9; syscall; cmp rax, -0x1000; ja 0x98f78; ret; 
0x00000000004292bd: cmovae eax, dword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x00000000004292bc: cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x000000000042930c: cmovbe edx, eax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x000000000042930b: cmovbe rdx, rax; xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x000000000048e52a: cmove eax, eax; mov rax, r8; ret; 
0x000000000045a7e5: cmove eax, ecx; ret; 
0x0000000000430e47: cmove eax, edx; add rsp, 8; ret; 
0x0000000000430ff1: cmove eax, edx; ret; 
0x000000000049ee0d: cmove edx, eax; call 0x88c80; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x00000000004025f3: cmove esp, eax; mov eax, r12d; pop r12; pop r13; ret; 
0x00000000004025f2: cmove r12d, eax; mov eax, r12d; pop r12; pop r13; ret; 
0x000000000048e529: cmove r8, rax; mov rax, r8; ret; 
0x000000000045a7e4: cmove rax, rcx; ret; 
0x0000000000430e46: cmove rax, rdx; add rsp, 8; ret; 
0x0000000000430ff0: cmove rax, rdx; ret; 
0x0000000000426813: cmovg eax, ecx; test rdx, rdx; jne 0x26808; ret; 
0x00000000004806bb: cmovg eax, ecx; test rdx, rdx; jne 0x806b0; ret; 
0x0000000000426812: cmovg rax, rcx; test rdx, rdx; jne 0x26808; ret; 
0x00000000004806ba: cmovg rax, rcx; test rdx, rdx; jne 0x806b0; ret; 
0x00000000004570ca: cmovl ecx, dword ptr [rcx + 0x48f9174c]; lea eax, [rdi + rdx]; vzeroupper; ret; 
0x00000000004a3a18: cmovne eax, dword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000049893e: cmovne eax, eax; mov rax, r8; ret; 
0x0000000000422bd4: cmovne eax, ecx; ret; 
0x0000000000480797: cmovne eax, edx; mov dword ptr [rbx + 0x74], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000004297a2: cmovne eax, edx; mov qword ptr [rip + 0xbb58c], rax; ret; 
0x000000000040a87a: cmovne eax, edx; ret; 
0x000000000044df84: cmovne eax, edx; vzeroupper; ret; 
0x0000000000482de1: cmovne ecx, edi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x0000000000482de5: cmovne esi, edx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x000000000040dbf3: cmovne esp, eax; mov rax, r12; pop r12; ret; 
0x000000000040dbf2: cmovne r12, rax; mov rax, r12; pop r12; ret; 
0x000000000049893d: cmovne r8, rax; mov rax, r8; ret; 
0x00000000004a3a17: cmovne rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x0000000000422bd3: cmovne rax, rcx; ret; 
0x00000000004297a1: cmovne rax, rdx; mov qword ptr [rip + 0xbb58c], rax; ret; 
0x00000000004304b4: cmovne rax, rdx; ret; 
0x000000000044df83: cmovne rax, rdx; vzeroupper; ret; 
0x0000000000482de0: cmovne rcx, rdi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x0000000000482de4: cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x00000000004665a6: cmovns eax, dword ptr [rbx + 0x394804c7]; ret 0x2074; 
0x0000000000456061: cmovns eax, dword ptr [rbx - 0x72b7e018]; jg 0x56089; jne 0x564f0; ret; 
0x0000000000455eff: cmovns eax, dword ptr [rbx - 0x72b7e818]; jg 0x55f1f; jne 0x564f0; ret; 
0x0000000000455e7d: cmovns eax, dword ptr [rbx - 0x72b7ec18]; jg 0x55e99; jne 0x564f0; ret; 
0x0000000000455d38: cmovns eax, dword ptr [rbx - 0x72b7f618]; jg 0x55d4a; jne 0x564f0; ret; 
0x0000000000455cb6: cmovns eax, dword ptr [rbx - 0x72b7fa18]; jg 0x55cc4; jne 0x564f0; ret; 
0x000000000040b617: cmovns eax, edx; add rsp, 8; ret; 
0x0000000000455efe: cmovns r8, qword ptr [r11 - 0x72b7e818]; jg 0x55f1f; jne 0x564f0; ret; 
0x0000000000455e7c: cmovns r8, qword ptr [r11 - 0x72b7ec18]; jg 0x55e99; jne 0x564f0; ret; 
0x000000000047d737: cmovs eax, dword ptr [rbx + 0x149f0e0]; ret 0xfb83; 
0x0000000000477bae: cmovs eax, dword ptr [rbx - 0x72b70f20]; push rax; adc byte ptr [rcx - 0x77], cl; push rsi; or cl, ch; ret 0xfff3; 
0x0000000000464f90: cmovs eax, edx; ret; 
0x0000000000455e01: cmovs ecx, dword ptr [rbp - 0x7af0f081]; in al, 6; add byte ptr [rax], al; ret; 
0x0000000000445ed9: cmovs ecx, dword ptr [rbx + 0x498b4836]; clc; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000042ae33: cmovs ecx, dword ptr [rbx - 0x173ef7be]; add al, 0x39; ret; 
0x0000000000455db9: cmovs ecx, dword ptr [rcx - 0x7cb6faa9]; call 0x7f92a5d2; or eax, 0x724850f; add byte ptr [rax], al; ret; 
0x0000000000427a58: cmovs edi, dword ptr [rcx]; int1; ja 0x27a50; lea eax, [rdx + rdi]; ret; 
0x00000000004348f8: cmp ah, byte ptr [rax]; sub eax, edx; vzeroupper; ret; 
0x000000000049881f: cmp ah, byte ptr [rbx - 0x25]; cmp ch, byte ptr [rcx]; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x000000000045921a: cmp ah, byte ptr [rbx - 0x25]; cmp cl, byte ptr [rax + 0x63]; leave; add rax, rcx; sub rax, rdi; ret; 
0x000000000044b7da: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044c33a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044bb1a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x000000000044b2fa: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x000000000044be5a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044b63a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044ae1a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000044bffa: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x000000000044b15a: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044b290: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bf90: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bab0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c2d0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044b5d0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x000000000044b0f0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bdf0: cmp ah, byte ptr [rbx - 0x3f]; sbb cl, byte ptr [rdi]; xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x0000000000498876: cmp ah, byte ptr [rbx]; adc dh, byte ptr [rbx - 0xc]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000004a17d5: cmp al, 0x20; jne 0xa1800; mov rax, qword ptr [rsi + 0xa8]; add rsp, 8; ret; 
0x0000000000425175: cmp al, 0x24; sbb eax, 0xe6ebe074; nop dword ptr [rax]; xor eax, eax; ret; 
0x00000000004a4575: cmp al, 0x30; jne 0xa4588; mov rax, qword ptr [rsi + 0x10]; add rsp, 8; ret; 
0x00000000004a45d5: cmp al, 0x30; jne 0xa45e8; mov rax, qword ptr [rsi + 0x10]; add rsp, 8; ret; 
0x00000000004a17e8: cmp al, 0x40; jne 0xa1820; mov rax, qword ptr [rsi + 0xb8]; add rsp, 8; ret; 
0x0000000000410bc0: cmp al, 0x42; or eax, 0xc4814800; mov byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x00000000004a4588: cmp al, 0x50; jne 0xa45b3; xor eax, eax; add rsp, 8; ret; 
0x00000000004a45e8: cmp al, 0x50; jne 0xa4613; xor eax, eax; add rsp, 8; ret; 
0x00000000004a5f98: cmp al, 0x50; jne 0xa5fbb; xor eax, eax; add rsp, 8; ret; 
0x000000000043109e: cmp al, 0xb; add byte ptr [rdx], al; lea rax, [rip + 0xc97]; lea rdx, [rip + 0x1fc30]; cmovne rax, rdx; ret; 
0x000000000040d833: cmp al, 0xbd; or dword ptr [rax], eax; ret; 
0x0000000000455fb0: cmp al, 5; add byte ptr [rax], al; ret; 
0x000000000046fd64: cmp al, 7; add byte ptr [rax - 0x77], cl; adc eax, 0x73cca; cmp qword ptr fs:[rdi], rsi; je 0x6fd78; ret; 
0x00000000004a3976: cmp al, 8; jne 0x175a; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x0000000000431050: cmp al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; adc eax, 0x5356; cmovne rax, rdx; ret; 
0x0000000000458a1e: cmp al, byte ptr [rsi - 1]; jne 0x58b95; xor eax, eax; ret; 
0x0000000000403041: cmp al, ch; test eax, 0x85000078; sar byte ptr [rax + 0x19], 0x89; ret; 
0x000000000043a8bb: cmp al, cl; jne 0x3b190; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000458ad2: cmp al, cl; jne 0x58b95; cmp eax, ecx; jne 0x58b95; xor eax, eax; ret; 
0x0000000000458b8f: cmp al, cl; jne 0x58b95; cmp eax, ecx; sbb eax, eax; sbb eax, -1; ret; 
0x00000000004391f6: cmp al, dh; ret; 
0x00000000004391f5: cmp al, r14b; ret; 
0x00000000004a450b: cmp bh, 3; jne 0xa4530; add rsp, 8; ret; 
0x000000000046da32: cmp bh, byte ptr [rdi]; add al, byte ptr [rax]; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x0000000000425682: cmp bh, byte ptr [rdx - 0x76b70003]; ret; 
0x000000000047fd30: cmp bl, ch; movabs dword ptr [0xc483480000441f0f], eax; or byte ptr [rax - 1], bh; pop rbx; pop rbp; ret; 
0x000000000042792c: cmp bl, ch; test al, 0x90; endbr64; mov rax, -1; ret; 
0x0000000000426e77: cmp byte ptr [r11 + 0x5d], bl; pop r12; ret; 
0x00000000004275e0: cmp byte ptr [r13 + 0x41], r11b; pop rsp; ret; 
0x00000000004856a8: cmp byte ptr [r8 + 8], 0x2f; jne 0x8566f; leave; mov eax, 1; ret; 
0x00000000004212dd: cmp byte ptr [r8 - 0x75], cl; push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x0000000000426dd0: cmp byte ptr [r9 - 0x3b7cb7fd], cl; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000487258: cmp byte ptr [rax + 0x29], cl; ret 0x8d49; 
0x000000000047bb13: cmp byte ptr [rax + 0x39], cl; ret; 
0x00000000004828d7: cmp byte ptr [rax + 1], cl; clc; ret; 
0x00000000004856a9: cmp byte ptr [rax + 8], 0x2f; jne 0x8566f; leave; mov eax, 1; ret; 
0x00000000004212de: cmp byte ptr [rax - 0x75], cl; push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x0000000000422384: cmp byte ptr [rax - 0x75], cl; xor byte ptr [rsi + 0xf], spl; outsd dx, dword ptr [rsi]; ret 0x4866; 
0x000000000048548f: cmp byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000004275ad: cmp byte ptr [rax - 0x77], cl; ret; 
0x00000000004348f3: cmp byte ptr [rax], ah; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000439226: cmp byte ptr [rax], ah; ret; 
0x0000000000426df7: cmp byte ptr [rax], al; je 0x26e00; ret; 
0x00000000004a28e1: cmp byte ptr [rax], al; je 0xa2934; add rsp, 0x18; ret; 
0x000000000044db14: cmp byte ptr [rax], dh; cmovne rax, rdx; ret; 
0x0000000000439216: cmp byte ptr [rax], dl; ret; 
0x0000000000439215: cmp byte ptr [rax], r10b; ret; 
0x00000000004348f2: cmp byte ptr [rax], r12b; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000439225: cmp byte ptr [rax], r12b; ret; 
0x000000000044db13: cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x0000000000468616: cmp byte ptr [rbp + 0x39], cl; ret 0x820f; 
0x000000000049c39f: cmp byte ptr [rbp + 0x39], cl; ret 0x840f; 
0x00000000004275e1: cmp byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x00000000004078b9: cmp byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000426e78: cmp byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x00000000004228b6: cmp byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000426dd1: cmp byte ptr [rcx - 0x3b7cb7fd], cl; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x000000000048fdda: cmp byte ptr [rcx - 0x7d], cl; ret 0x4908; 
0x0000000000427a54: cmp byte ptr [rcx], 0xa; je 0x27a68; cmp rcx, rsi; ja 0x27a50; lea eax, [rdx + rdi]; ret; 
0x0000000000408853: cmp byte ptr [rcx], al; sbb eax, eax; and eax, 0xffffffea; ret; 
0x000000000042ad2e: cmp byte ptr [rcx], dh; ror byte ptr [rax - 0x75], 0x46; or byte ptr [rax - 0x77], cl; ret; 
0x000000000043b120: cmp byte ptr [rdi], dl; ret 0x2373; 
0x000000000043b109: cmp byte ptr [rdi], dl; ret 0x3a73; 
0x000000000043b0f2: cmp byte ptr [rdi], dl; ret 0x5173; 
0x0000000000439bae: cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043a60d: cmp byte ptr [rdi], dl; ret; 
0x00000000004a3912: cmp byte ptr [rdx + rsi], 8; jne 0x1755; mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x0000000000481675: cmp byte ptr [rdx], cl; je 0x81688; cmp rax, rsi; ja 0x81670; lea eax, [rdx + rdi]; ret; 
0x000000000048f134: cmp byte ptr [rip + 0x5674d], 0; jne 0x8f150; mov r8, qword ptr [rip + 0x5632c]; mov rax, r8; ret; 
0x000000000048f034: cmp byte ptr [rip + 0x5684d], 0; mov r8, qword ptr [rip + 0x5642e]; jne 0x8f050; lea rax, [r8 + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x0000000000498822: cmp ch, byte ptr [rcx]; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x000000000040dc88: cmp cl, al; je 0xdbde; xor r12d, r12d; mov rax, r12; pop r12; ret; 
0x000000000045921d: cmp cl, byte ptr [rax + 0x63]; leave; add rax, rcx; sub rax, rdi; ret; 
0x0000000000458c94: cmp cl, byte ptr [rax + rdx + 2]; jne 0x58cb0; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x58c90; ret; 
0x0000000000458d44: cmp cl, byte ptr [rax + rdx + 2]; jne 0x58d60; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x58d40; ret; 
0x0000000000459163: cmp cl, byte ptr [rax - 0x7d]; rcl byte ptr [rax], 0x29; cmp edx, ecx; jle 0x59184; movsxd rax, ecx; ret; 
0x000000000049f5e2: cmp cl, byte ptr [rax - 0x7d]; ret 0xf08; 
0x000000000047f0db: cmp cl, byte ptr [rcx - 0x77]; ror byte ptr [rax - 0x7d], cl; ret 0x8901; 
0x000000000049e8b5: cmp cx, 0x7fff; jne 0x9e89c; mov eax, 1; ret; 
0x000000000044df81: cmp dh, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000045a6be: cmp dh, byte ptr [rdx + 2]; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x00000000004a450a: cmp dil, 3; jne 0xa4530; add rsp, 8; ret; 
0x00000000004592fa: cmp dl, 0x20; jb 0x59309; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x00000000004592e7: cmp dl, 0x40; jb 0x592fa; vmovups zmmword ptr [rdi], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004595f5: cmp dl, 1; ja 0x59620; jb 0x59601; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x0000000000459965: cmp dl, 1; ja 0x599a5; jb 0x59971; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x0000000000459db5: cmp dl, 1; ja 0x59e0d; jb 0x59dc1; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000045a384: cmp dl, 1; ja 0x5a39e; jb 0x5a38d; mov byte ptr [rdi], cl; ret; 
0x000000000045a4f2: cmp dl, 1; ja 0x5a523; jb 0x5a4fb; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000045a6ba: cmp dl, 1; ja 0x5a6f9; jb 0x5a6c3; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x0000000000445f0f: cmp dl, 1; jb 0x45f18; mov cl, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000045933e: cmp dl, 1; jb 0x59345; mov byte ptr [rdi], cl; ret; 
0x0000000000459331: cmp dl, 2; jb 0x5933e; mov word ptr [rdi], cx; mov word ptr [rsi - 2], cx; ret; 
0x0000000000459326: cmp dl, 4; jb 0x59331; mov dword ptr [rdi], ecx; mov dword ptr [rsi - 4], ecx; ret; 
0x0000000000459313: cmp dl, 8; jb 0x59322; vmovq qword ptr [rdi], xmm0; vmovq qword ptr [rsi - 8], xmm0; ret; 
0x000000000040c1a3: cmp dl, ah; or dword ptr [rax], eax; ret; 
0x0000000000430515: cmp dl, al; jne 0x30500; sub rax, 0x10; ret; 
0x00000000004296a2: cmp dl, byte ptr [rcx + 0x141000b]; adc eax, dword ptr [rbp + 1]; sbb byte ptr [r8 + 0x39], cl; ret; 
0x0000000000430514: cmp dl, r8b; jne 0x30500; sub rax, 0x10; ret; 
0x0000000000429733: cmp dword ptr [rax + 0x1000b], edx; add byte ptr [rax], al; mov qword ptr [rip + 0xb900e], rax; ret; 
0x0000000000480d3c: cmp dword ptr [rax + 0x30], 0; je 0x80d48; ret; 
0x0000000000470b0d: cmp dword ptr [rax - 0x7d], ecx; ret 0x4801; 
0x0000000000481674: cmp dword ptr [rax], 0xa; je 0x81688; cmp rax, rsi; ja 0x81670; lea eax, [rdx + rdi]; ret; 
0x000000000048566b: cmp dword ptr [rax], eax; je 0x856a8; leave; xor eax, eax; ret; 
0x000000000042e35e: cmp dword ptr [rbx + 0xb69ba2d], eax; add byte ptr [rcx], al; pop rbx; ret; 
0x0000000000442178: cmp dword ptr [rbx - 1], -1; dec dword ptr [rax - 0x7f]; ret 0x80; 
0x00000000004a28df: cmp dword ptr [rcx + 0x38], 0; je 0xa2934; add rsp, 0x18; ret; 
0x00000000004292b9: cmp dword ptr [rdi + 0x10], eax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x00000000004077f3: cmp dword ptr [rdi + 0x14], eax; sete al; ret; 
0x00000000004077eb: cmp dword ptr [rdi + 0x18], ecx; jne 0x77d8; mov eax, dword ptr [rsi + 0x14]; cmp dword ptr [rdi + 0x14], eax; sete al; ret; 
0x0000000000426df5: cmp dword ptr [rdi + 0x38], 0; je 0x26e00; ret; 
0x0000000000408851: cmp dword ptr [rdi + 0x38], 1; sbb eax, eax; and eax, 0xffffffea; ret; 
0x000000000046fd70: cmp dword ptr [rdi], esi; je 0x6fd78; ret; 
0x0000000000422bd1: cmp dword ptr [rdx + 0x48], eax; cmovne eax, ecx; ret; 
0x0000000000427a55: cmp dword ptr [rdx], ecx; je 0x27a68; cmp rcx, rsi; ja 0x27a50; lea eax, [rdx + rdi]; ret; 
0x00000000004089ff: cmp dword ptr [rdx], esi; jne 0x89f0; mov eax, 0xffffffef; ret; 
0x00000000004109dd: cmp dword ptr [rip + 0x32048b00], ecx; mov dword ptr [rip + 0xd38ff], eax; lea rax, [rip + 0xd38f0]; ret; 
0x00000000004916a8: cmp dword ptr [rip + 0x478d4800], eax; dec dword ptr [rax - 0x7d]; clc; std; jbe 0x916c0; ret; 
0x00000000004318a6: cmp dword ptr [rip + 0x4810000b], esi; lea edx, [rip - 0x362]; lea rax, [rip + 0x272f7]; cmove rax, rdx; ret; 
0x0000000000423315: cmp dword ptr [rip + 0xbec84], 0; je 0x2331f; ret; 
0x00000000004a435e: cmp dword ptr [rsi + 8], ecx; ja 0xa4365; sbb eax, eax; ret; 
0x0000000000430e43: cmp eax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x000000000048f693: cmp eax, -1; cmove rax, rdx; ret; 
0x00000000004115e9: cmp eax, -1; je 0x116d8; add rsp, 0x98; ret; 
0x0000000000427a1e: cmp eax, -1; jne 0x279e3; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004916b0: cmp eax, -3; jbe 0x916c0; ret; 
0x000000000046da0a: cmp eax, -3; je 0x6da28; pop rbx; ret; 
0x0000000000429728: cmp eax, 0x2000000; jbe 0x29730; ret; 
0x0000000000499606: cmp eax, 0x329f5; call 0x11c50; endbr64; ret; 
0x0000000000429388: cmp eax, 0x408; jbe 0x29390; ret; 
0x000000000049eca8: cmp eax, 0x4325a; add byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ret 0x290f; 
0x000000000048f135: cmp eax, 0x5674d; add byte ptr [rbp + 0x13], dh; mov r8, qword ptr [rip + 0x5632c]; mov rax, r8; ret; 
0x000000000048f035: cmp eax, 0x5684d; add byte ptr [rbx + rcx*4 + 5], cl; add eax, 0x490c7500; lea eax, [rax + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x00000000004612f0: cmp eax, 0x57843; call 0x11c50; nop word ptr [rax + rax]; endbr64; lea rax, [rip + 0x81f55]; ret; 
0x000000000041ea7b: cmp eax, 0x75e4854d; adc al, 0xeb; sbb eax, 0x441f0f; add byte ptr [rbx + rcx*4 + 0x63], cl; or byte ptr [rax - 0x7d], cl; ret; 
0x0000000000482f44: cmp eax, 0x89000001; ret 0x8948; 
0x00000000004486ff: cmp eax, 0x8b000726; or al, 0x8a; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000041eef3: cmp eax, 0x96075; call 0x11c50; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000429788: cmp eax, 0xa0; jbe 0x29790; ret; 
0x000000000043048c: cmp eax, 0xb487e; add dword ptr [rax - 0x77], ecx; ret 0x3174; 
0x000000000042d24d: cmp eax, 0xb558e; syscall; pop rbp; ret; 
0x000000000042e3b9: cmp eax, 0xb6962; syscall; pop rbx; ret; 
0x000000000042618f: cmp eax, 0xbeb1c; syscall; ret; 
0x0000000000427259: cmp eax, 0xd8ab8b48; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0x3bc0; 
0x0000000000403179: cmp eax, 0xdef8a; ret; 
0x00000000004293c8: cmp eax, 0xffff; jbe 0x293d0; ret; 
0x000000000045becb: cmp eax, 0xfffff000; ja 0x5bed8; ret; 
0x000000000045bf2a: cmp eax, 0xfffff000; ja 0x5bf38; ret; 
0x000000000045c0b3: cmp eax, 0xfffff000; ja 0x5c110; ret; 
0x000000000045c158: cmp eax, 0xfffff000; ja 0x5c1b0; ret; 
0x000000000045c1ec: cmp eax, 0xfffff000; ja 0x5c1f8; ret; 
0x000000000045c328: cmp eax, 0xfffff000; ja 0x5c370; ret; 
0x000000000045cb3c: cmp eax, 0xfffff000; ja 0x5cb48; ret; 
0x000000000045cdf9: cmp eax, 0xfffff000; ja 0x5ce08; ret; 
0x000000000045ce2c: cmp eax, 0xfffff000; ja 0x5ce38; ret; 
0x000000000045ce65: cmp eax, 0xfffff000; ja 0x5ce70; ret; 
0x000000000045d057: cmp eax, 0xfffff000; ja 0x5d0c0; pop rbx; pop rbp; ret; 
0x00000000004847f0: cmp eax, 0xfffff000; ja 0x847c0; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000484f5b: cmp eax, 0xfffff000; ja 0x84f68; ret; 
0x0000000000484fc0: cmp eax, 0xfffff000; ja 0x84fd0; ret; 
0x0000000000498f6c: cmp eax, 0xfffff000; ja 0x98f78; ret; 
0x0000000000498faf: cmp eax, 0xfffff000; ja 0x98fc0; ret; 
0x000000000045be2c: cmp eax, 0xfffff001; jae 0x5be34; ret; 
0x000000000045c3ac: cmp eax, 0xfffff001; jae 0x5c3b4; ret; 
0x000000000045cf3c: cmp eax, 0xfffff001; jae 0x5cf44; ret; 
0x000000000045d00e: cmp eax, 0xfffff001; jae 0x5d016; ret; 
0x000000000045d0ec: cmp eax, 0xfffff001; jae 0x5d0f4; ret; 
0x000000000045d11c: cmp eax, 0xfffff001; jae 0x5d124; ret; 
0x000000000045d14c: cmp eax, 0xfffff001; jae 0x5d154; ret; 
0x000000000045f8af: cmp eax, 0xfffff001; jae 0x5f8b7; ret; 
0x000000000045f8df: cmp eax, 0xfffff001; jae 0x5f8e7; ret; 
0x000000000045f90c: cmp eax, 0xfffff001; jae 0x5f914; ret; 
0x0000000000484edc: cmp eax, 0xfffff001; jae 0x84ee4; ret; 
0x000000000049ed2c: cmp eax, 0xfffff001; jae 0x9ed34; ret; 
0x000000000044f321: cmp eax, 1; ja 0x4eff0; je 0x4efe0; vzeroupper; ret; 
0x000000000044f1fd: cmp eax, 1; ja 0x4f0d0; je 0x4f0c0; vzeroupper; ret; 
0x00000000004030b4: cmp eax, 1; je 0x30c0; xor eax, eax; pop r12; ret; 
0x000000000045ad8a: cmp eax, 1; je 0x5ada0; cmp eax, 2; je 0x5ada8; xor eax, eax; ret; 
0x000000000040889f: cmp eax, 1; jne 0x88c0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040a51a: cmp eax, 1; sbb eax, eax; and eax, 0xffffffea; ret; 
0x000000000045ad8f: cmp eax, 2; je 0x5ada8; xor eax, eax; ret; 
0x000000000048191e: cmp eax, 4; je 0x81924; ret; 
0x0000000000407d33: cmp eax, 6; ja 0x7d14; mov eax, 1; ret; 
0x000000000049254a: cmp eax, 9; ja 0x92520; mov rax, r8; ret; 
0x000000000048f6d4: cmp eax, dword ptr [rcx + rsi + 0x10]; jae 0x8f685; xor eax, eax; ret; 
0x0000000000461351: cmp eax, dword ptr [rdx]; add byte ptr [rcx], bh; ret; 
0x0000000000499016: cmp eax, dword ptr [rip + 0x4c114]; jae 0x9902a; mov rdx, qword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000048f0d9: cmp eax, eax; ja 0x8f0e8; add rsp, 8; ret; 
0x0000000000426810: cmp eax, ecx; cmovg rax, rcx; test rdx, rdx; jne 0x26808; ret; 
0x00000000004806b8: cmp eax, ecx; cmovg rax, rcx; test rdx, rdx; jne 0x806b0; ret; 
0x0000000000458972: cmp eax, ecx; jne 0x58b80; xor eax, eax; ret; 
0x0000000000458ada: cmp eax, ecx; jne 0x58b95; xor eax, eax; ret; 
0x000000000040cd73: cmp eax, ecx; or dword ptr [rax], eax; ret; 
0x0000000000458b93: cmp eax, ecx; sbb eax, eax; sbb eax, -1; ret; 
0x00000000004289af: cmp eax, edx; jae 0x289d8; movzx eax, byte ptr [rax]; ret; 
0x0000000000481d10: cmp eax, edx; lea rdx, [rip + 0x11d7]; lea rax, [rip + 0xed0]; cmove rax, rdx; ret; 
0x0000000000481cd0: cmp eax, edx; lea rdx, [rip + 0x1607]; lea rax, [rip + 0x13e0]; cmove rax, rdx; ret; 
0x0000000000431d20: cmp eax, edx; lea rdx, [rip + 0x1c407]; lea rax, [rip + 0x1bfc0]; cmove rax, rdx; ret; 
0x0000000000430fe0: cmp eax, edx; lea rdx, [rip + 0x1d4d7]; lea rax, [rip + 0x1d330]; cmove rax, rdx; ret; 
0x00000000004988d0: cmp eax, edx; lea rdx, [rip + 0x3a7]; lea rax, [rip + 0x70]; cmove rax, rdx; ret; 
0x0000000000431ce0: cmp eax, edx; lea rdx, [rip + 0x7547]; lea rax, [rip + 0x7330]; cmove rax, rdx; ret; 
0x0000000000481dd0: cmp eax, edx; lea rdx, [rip + 0xb47]; lea rax, [rip + 0x810]; cmove rax, rdx; ret; 
0x0000000000483620: cmp eax, edx; lea rdx, [rip + 0xc57]; lea rax, [rip + 0x9b0]; cmove rax, rdx; ret; 
0x000000000048167a: cmp eax, esi; ja 0x81670; lea eax, [rdx + rdi]; ret; 
0x000000000049bfd8: cmp eax, esi; je 0x9bfe0; ret; 
0x00000000004818ba: cmp ebx, 0xa; je 0x818c0; ret; 
0x000000000042e2bc: cmp ebx, ebp; jne 0x2e2a0; pop rbx; pop rbp; pop r12; ret; 
0x000000000049e8b6: cmp ecx, 0xe0757fff; mov eax, 1; ret; 
0x0000000000407d22: cmp ecx, 1; ja 0x7ce8; cmp esi, edx; setb al; ret; 
0x000000000045fb75: cmp ecx, dword ptr [rax + 0x18]; ja 0x5fb8c; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x000000000045fb97: cmp ecx, dword ptr [rax + 0x18]; jg 0x5fb8c; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x000000000049c926: cmp ecx, dword ptr [rax + 0x28]; jae 0x9c910; mov eax, 1; ret; 
0x0000000000462b38: cmp ecx, dword ptr [rax - 0x7d]; ret; 
0x00000000004a29ef: cmp ecx, dword ptr [rcx - 0x7d]; ret; 
0x0000000000490dab: cmp ecx, eax; je 0x90cfa; mov eax, ecx; sub eax, r8d; ret; 
0x000000000043ad35: cmp ecx, eax; jne 0x3b163; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x000000000043a7db: cmp ecx, eax; jne 0x3b163; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x000000000043a72f: cmp ecx, eax; jne 0x3b163; xor eax, eax; ret; 
0x000000000043a826: cmp ecx, eax; jne 0x3b16f; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x000000000043a757: cmp ecx, eax; jne 0x3b16f; xor eax, eax; ret; 
0x000000000043aa28: cmp ecx, eax; jne 0x3b17a; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x000000000049c968: cmp ecx, eax; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x000000000048566e: cmp ecx, ecx; xor eax, eax; ret; 
0x00000000004077d4: cmp ecx, edx; je 0x77e0; ret; 
0x000000000048e3be: cmp ecx, edx; jne 0x8e398; mov eax, dword ptr [rcx]; ret; 
0x0000000000427a5a: cmp ecx, esi; ja 0x27a50; lea eax, [rdx + rdi]; ret; 
0x0000000000490daa: cmp ecx, r8d; je 0x90cfa; mov eax, ecx; sub eax, r8d; ret; 
0x000000000040207d: cmp edi, -0x5f; jne 0x2083; ret; 
0x0000000000402078: cmp edi, -0x7d; je 0x2082; cmp edi, -0x5f; jne 0x2083; ret; 
0x000000000040a3e3: cmp edi, 0x16; jne 0xa4a0; mov rax, 0x4def00; ret; 
0x000000000040a3c0: cmp edi, 0x40000028; jne 0xa4a0; mov rax, 0x4decc0; ret; 
0x0000000000403374: cmp edi, 0x7fc00000; je 0x3380; ret; 
0x000000000040336c: cmp edi, 0x80000000; je 0x3390; cmp edi, 0x7fc00000; je 0x3380; ret; 
0x000000000040a448: cmp edi, 0x80000015; je 0xa470; cmp edi, 0x80000016; jne 0xa4a0; mov rax, 0x4def40; ret; 
0x000000000040a450: cmp edi, 0x80000016; jne 0xa4a0; mov rax, 0x4def40; ret; 
0x000000000040a426: cmp edi, 0xc0000008; jne 0xa4a0; mov rax, 0x4ded80; ret; 
0x000000000040a3f4: cmp edi, 0xc000003e; je 0xa490; cmp edi, 0xc00000b7; jne 0xa4a0; mov rax, 0x4e11e0; ret; 
0x000000000040a400: cmp edi, 0xc00000b7; jne 0xa4a0; mov rax, 0x4e11e0; ret; 
0x000000000040a3a0: cmp edi, 0xe0000008; jne 0xa4a0; mov rax, 0x4dee00; ret; 
0x000000000040a43b: cmp edi, 0xf; jne 0xa4a0; mov rax, 0x4e1220; ret; 
0x000000000040a436: cmp edi, 8; je 0xa480; cmp edi, 0xf; jne 0xa4a0; mov rax, 0x4e1220; ret; 
0x000000000048513b: cmp edi, eax; ja 0x85168; xor eax, eax; ret; 
0x000000000048b72d: cmp edi, eax; jne 0x8b738; pop rbx; ret; 
0x0000000000495891: cmp edi, ecx; ja 0x95878; mov eax, r8d; ret; 
0x00000000004595dd: cmp edi, ecx; jb 0x59748; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000459948: cmp edi, ecx; jb 0x59b15; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000459d93: cmp edi, ecx; jb 0x59fd0; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000045956b: cmp edi, edx; jb 0x59572; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000040aaa9: cmp edx, 0x14; ja 0xaac0; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x000000000040b729: cmp edx, 0x14; ja 0xb740; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x000000000040c249: cmp edx, 0x14; ja 0xc260; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x000000000040cd89: cmp edx, 0x14; ja 0xcda0; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x000000000040aac6: cmp edx, 0x18; ja 0xaad8; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000040b746: cmp edx, 0x18; ja 0xb758; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000040c266: cmp edx, 0x18; ja 0xc278; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000040cda6: cmp edx, 0x18; ja 0xcdb8; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000045a2e3: cmp edx, 0x20; ja 0x5a2f3; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045a273: cmp edx, 0x20; ja 0x5a2fc; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045a43b: cmp edx, 0x40; ja 0x5a44e; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000045a3eb: cmp edx, 0x40; ja 0x5a457; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000045a7de: cmp edx, 0xff; cmove rax, rcx; ret; 
0x000000000044e8c6: cmp edx, 1; ja 0x4e960; je 0x4e950; mov byte ptr [rdi], 0; vzeroupper; ret; 
0x000000000040a8b1: cmp edx, 2; lea eax, [rsi*8 + 0x10]; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000040a86b: cmp edx, 2; lea eax, [rsi*8 + 0x14]; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000049893a: cmp edx, 4; cmovne r8, rax; mov rax, r8; ret; 
0x000000000045fb09: cmp edx, dword ptr [rdi + 0x18]; ja 0x5fb24; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000045fb2f: cmp edx, dword ptr [rdi + 0x18]; jg 0x5fb24; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000482b25: cmp edx, eax; jbe 0x82b80; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000482b45: cmp edx, eax; jbe 0x82b80; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000482b65: cmp edx, eax; jbe 0x82b80; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000000482b15: cmp edx, eax; jbe 0x82b80; add rax, rdi; vzeroupper; ret; 
0x0000000000498e85: cmp edx, eax; jbe 0x98ee0; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000498ea5: cmp edx, eax; jbe 0x98ee0; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000498ec5: cmp edx, eax; jbe 0x98ee0; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000000498e75: cmp edx, eax; jbe 0x98ee0; add rax, rdi; vzeroupper; ret; 
0x00000000004987e2: cmp edx, eax; jg 0x987f4; pcmpistri xmm2, xmm2, 0x3a; cmp edx, ecx; jle 0x98890; ret; 
0x00000000004924c6: cmp edx, ecx; jae 0x924ac; mov rax, r8; ret; 
0x000000000045916a: cmp edx, ecx; jle 0x59184; movsxd rax, ecx; ret; 
0x00000000004987ec: cmp edx, ecx; jle 0x98890; ret; 
0x000000000045a4d6: cmp edx, ecx; jne 0x5a4bb; vzeroupper; ret; 
0x000000000045a699: cmp edx, ecx; jne 0x5a676; vzeroupper; ret; 
0x000000000042e465: cmp edx, edi; jne 0x2e44f; test r8b, r8b; jne 0x2e479; mov dword ptr [rip + 0xb68a8], 0; ret; 
0x0000000000429312: cmp edx, edi; setae al; ret; 
0x0000000000483d77: cmp edx, esi; je 0x83d7f; test edx, edx; jne 0x83d70; ret; 
0x0000000000469d92: cmp esi, 0x860f07ff; pushfq; add dword ptr [rax], eax; add byte ptr [rcx + 0x3948fc51], cl; ret; 
0x000000000046d9e8: cmp esi, 3; je 0x6d9f0; ret; 
0x0000000000459969: cmp esi, dword ptr [rdx + 5]; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x00000000004834d5: cmp esi, eax; jbe 0x83550; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000407d27: cmp esi, edx; setb al; ret; 
0x000000000048566a: cmp qword ptr [r8], rax; je 0x856a8; leave; xor eax, eax; ret; 
0x00000000004a28de: cmp qword ptr [r9 + 0x38], 0; je 0xa2934; add rsp, 0x18; ret; 
0x0000000000480d3b: cmp qword ptr [rax + 0x30], 0; je 0x80d48; ret; 
0x00000000004292b8: cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000426df4: cmp qword ptr [rdi + 0x38], 0; je 0x26e00; ret; 
0x000000000046fd6f: cmp qword ptr [rdi], rsi; je 0x6fd78; ret; 
0x0000000000422bd0: cmp qword ptr [rdx + 0x48], r8; cmovne eax, ecx; ret; 
0x0000000000423314: cmp qword ptr [rip + 0xbec84], 0; je 0x2331f; ret; 
0x00000000004a435d: cmp qword ptr [rsi + 8], rcx; ja 0xa4365; sbb eax, eax; ret; 
0x000000000046fd6e: cmp qword ptr fs:[rdi], rsi; je 0x6fd78; ret; 
0x0000000000459db4: cmp r10b, 1; ja 0x59e0d; jb 0x59dc1; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000047fd2f: cmp r11b, r13b; movabs dword ptr [0xc483480000441f0f], eax; or byte ptr [rax - 1], bh; pop rbx; pop rbp; ret; 
0x000000000042792b: cmp r11b, r13b; test al, 0x90; endbr64; mov rax, -1; ret; 
0x00000000004818b9: cmp r11d, 0xa; je 0x818c0; ret; 
0x000000000040a43a: cmp r15d, 0xf; jne 0xa4a0; mov rax, 0x4e1220; ret; 
0x000000000048f6d3: cmp r8, qword ptr [rcx + rsi + 0x10]; jae 0x8f685; xor eax, eax; ret; 
0x000000000044f320: cmp r8d, 1; ja 0x4eff0; je 0x4efe0; vzeroupper; ret; 
0x000000000044f1fc: cmp r8d, 1; ja 0x4f0d0; je 0x4f0c0; vzeroupper; ret; 
0x000000000040889e: cmp r8d, 1; jne 0x88c0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045beca: cmp rax, -0x1000; ja 0x5bed8; ret; 
0x000000000045bf29: cmp rax, -0x1000; ja 0x5bf38; ret; 
0x000000000045c0b2: cmp rax, -0x1000; ja 0x5c110; ret; 
0x000000000045c157: cmp rax, -0x1000; ja 0x5c1b0; ret; 
0x000000000045c1eb: cmp rax, -0x1000; ja 0x5c1f8; ret; 
0x000000000045c327: cmp rax, -0x1000; ja 0x5c370; ret; 
0x000000000045cb3b: cmp rax, -0x1000; ja 0x5cb48; ret; 
0x000000000045cdf8: cmp rax, -0x1000; ja 0x5ce08; ret; 
0x000000000045ce2b: cmp rax, -0x1000; ja 0x5ce38; ret; 
0x000000000045ce64: cmp rax, -0x1000; ja 0x5ce70; ret; 
0x000000000045d056: cmp rax, -0x1000; ja 0x5d0c0; pop rbx; pop rbp; ret; 
0x00000000004847ef: cmp rax, -0x1000; ja 0x847c0; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000484f5a: cmp rax, -0x1000; ja 0x84f68; ret; 
0x0000000000484fbf: cmp rax, -0x1000; ja 0x84fd0; ret; 
0x0000000000498f6b: cmp rax, -0x1000; ja 0x98f78; ret; 
0x0000000000498fae: cmp rax, -0x1000; ja 0x98fc0; ret; 
0x000000000045be2b: cmp rax, -0xfff; jae 0x5be34; ret; 
0x000000000045c3ab: cmp rax, -0xfff; jae 0x5c3b4; ret; 
0x000000000045cf3b: cmp rax, -0xfff; jae 0x5cf44; ret; 
0x000000000045d00d: cmp rax, -0xfff; jae 0x5d016; ret; 
0x000000000045d0eb: cmp rax, -0xfff; jae 0x5d0f4; ret; 
0x000000000045d11b: cmp rax, -0xfff; jae 0x5d124; ret; 
0x000000000045d14b: cmp rax, -0xfff; jae 0x5d154; ret; 
0x000000000045f8ae: cmp rax, -0xfff; jae 0x5f8b7; ret; 
0x000000000045f8de: cmp rax, -0xfff; jae 0x5f8e7; ret; 
0x000000000045f90b: cmp rax, -0xfff; jae 0x5f914; ret; 
0x0000000000484edb: cmp rax, -0xfff; jae 0x84ee4; ret; 
0x000000000049ed2b: cmp rax, -0xfff; jae 0x9ed34; ret; 
0x0000000000430e42: cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x000000000048f692: cmp rax, -1; cmove rax, rdx; ret; 
0x00000000004916af: cmp rax, -3; jbe 0x916c0; ret; 
0x0000000000429727: cmp rax, 0x2000000; jbe 0x29730; ret; 
0x0000000000429387: cmp rax, 0x408; jbe 0x29390; ret; 
0x0000000000429787: cmp rax, 0xa0; jbe 0x29790; ret; 
0x00000000004293c7: cmp rax, 0xffff; jbe 0x293d0; ret; 
0x000000000040a519: cmp rax, 1; sbb eax, eax; and eax, 0xffffffea; ret; 
0x0000000000492549: cmp rax, 9; ja 0x92520; mov rax, r8; ret; 
0x0000000000499015: cmp rax, qword ptr [rip + 0x4c114]; jae 0x9902a; mov rdx, qword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000048f0d8: cmp rax, r8; ja 0x8f0e8; add rsp, 8; ret; 
0x000000000042680f: cmp rax, rcx; cmovg rax, rcx; test rdx, rdx; jne 0x26808; ret; 
0x00000000004806b7: cmp rax, rcx; cmovg rax, rcx; test rdx, rdx; jne 0x806b0; ret; 
0x00000000004289ae: cmp rax, rdx; jae 0x289d8; movzx eax, byte ptr [rax]; ret; 
0x0000000000481d0f: cmp rax, rdx; lea rdx, [rip + 0x11d7]; lea rax, [rip + 0xed0]; cmove rax, rdx; ret; 
0x0000000000481ccf: cmp rax, rdx; lea rdx, [rip + 0x1607]; lea rax, [rip + 0x13e0]; cmove rax, rdx; ret; 
0x0000000000431d1f: cmp rax, rdx; lea rdx, [rip + 0x1c407]; lea rax, [rip + 0x1bfc0]; cmove rax, rdx; ret; 
0x0000000000430fdf: cmp rax, rdx; lea rdx, [rip + 0x1d4d7]; lea rax, [rip + 0x1d330]; cmove rax, rdx; ret; 
0x00000000004988cf: cmp rax, rdx; lea rdx, [rip + 0x3a7]; lea rax, [rip + 0x70]; cmove rax, rdx; ret; 
0x0000000000431cdf: cmp rax, rdx; lea rdx, [rip + 0x7547]; lea rax, [rip + 0x7330]; cmove rax, rdx; ret; 
0x0000000000481dcf: cmp rax, rdx; lea rdx, [rip + 0xb47]; lea rax, [rip + 0x810]; cmove rax, rdx; ret; 
0x000000000048361f: cmp rax, rdx; lea rdx, [rip + 0xc57]; lea rax, [rip + 0x9b0]; cmove rax, rdx; ret; 
0x0000000000481679: cmp rax, rsi; ja 0x81670; lea eax, [rdx + rdi]; ret; 
0x000000000049bfd7: cmp rax, rsi; je 0x9bfe0; ret; 
0x000000000042e2bb: cmp rbx, rbp; jne 0x2e2a0; pop rbx; pop rbp; pop r12; ret; 
0x000000000045fb74: cmp rcx, qword ptr [rax + 0x18]; ja 0x5fb8c; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x000000000045fb96: cmp rcx, qword ptr [rax + 0x18]; jg 0x5fb8c; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x000000000049c925: cmp rcx, qword ptr [rax + 0x28]; jae 0x9c910; mov eax, 1; ret; 
0x000000000043ad34: cmp rcx, rax; jne 0x3b163; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x000000000043a7da: cmp rcx, rax; jne 0x3b163; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x000000000043a72e: cmp rcx, rax; jne 0x3b163; xor eax, eax; ret; 
0x000000000049c967: cmp rcx, rax; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x000000000048e3bd: cmp rcx, rdx; jne 0x8e398; mov eax, dword ptr [rcx]; ret; 
0x0000000000427a59: cmp rcx, rsi; ja 0x27a50; lea eax, [rdx + rdi]; ret; 
0x00000000004595dc: cmp rdi, r9; jb 0x59748; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000459947: cmp rdi, r9; jb 0x59b15; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000459d92: cmp rdi, r9; jb 0x59fd0; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000048513a: cmp rdi, rax; ja 0x85168; xor eax, eax; ret; 
0x000000000048b72c: cmp rdi, rax; jne 0x8b738; pop rbx; ret; 
0x000000000045956a: cmp rdi, rdx; jb 0x59572; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000045a2e2: cmp rdx, 0x20; ja 0x5a2f3; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045a272: cmp rdx, 0x20; ja 0x5a2fc; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045a43a: cmp rdx, 0x40; ja 0x5a44e; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000045a3ea: cmp rdx, 0x40; ja 0x5a457; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x0000000000498939: cmp rdx, 4; cmovne r8, rax; mov rax, r8; ret; 
0x000000000045fb08: cmp rdx, qword ptr [rdi + 0x18]; ja 0x5fb24; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000045fb2e: cmp rdx, qword ptr [rdi + 0x18]; jg 0x5fb24; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000482b24: cmp rdx, rax; jbe 0x82b80; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000482b44: cmp rdx, rax; jbe 0x82b80; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000482b64: cmp rdx, rax; jbe 0x82b80; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000000482b14: cmp rdx, rax; jbe 0x82b80; add rax, rdi; vzeroupper; ret; 
0x0000000000498e84: cmp rdx, rax; jbe 0x98ee0; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000498ea4: cmp rdx, rax; jbe 0x98ee0; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000498ec4: cmp rdx, rax; jbe 0x98ee0; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000000498e74: cmp rdx, rax; jbe 0x98ee0; add rax, rdi; vzeroupper; ret; 
0x00000000004924c5: cmp rdx, rcx; jae 0x924ac; mov rax, r8; ret; 
0x000000000045a4d5: cmp rdx, rcx; jne 0x5a4bb; vzeroupper; ret; 
0x000000000045a698: cmp rdx, rcx; jne 0x5a676; vzeroupper; ret; 
0x000000000042e464: cmp rdx, rdi; jne 0x2e44f; test r8b, r8b; jne 0x2e479; mov dword ptr [rip + 0xb68a8], 0; ret; 
0x0000000000429311: cmp rdx, rdi; setae al; ret; 
0x00000000004834d4: cmp rsi, rax; jbe 0x83550; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000044df80: cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000043abb9: cmpsb byte ptr [rsi], byte ptr [rdi]; add eax, 0xc0310000; ret; 
0x000000000044b916: cmpsb byte ptr [rsi], byte ptr [rdi]; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004017c0: cmpsb byte ptr [rsi], byte ptr [rdi]; seta al; sbb al, 0; test al, al; jne 0x17cb; ret; 
0x000000000045fa56: cmpsb byte ptr [rsi], byte ptr [rdi]; xor eax, 0xecebfffc; nop dword ptr [rax]; endbr64; ret; 
0x0000000000431c95: cmpsd dword ptr [rsi], dword ptr [rdi]; add byte ptr [rdx], 0; cmove rax, rdx; ret; 
0x0000000000430fb5: cmpsd dword ptr [rsi], dword ptr [rdi]; add ch, bh; lcall [rdx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000004988d5: cmpsd dword ptr [rsi], dword ptr [rdi]; add eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; add eax, 0x70; cmove rax, rdx; ret; 
0x0000000000431b95: cmpsd dword ptr [rsi], dword ptr [rdi]; fadd dword ptr [rcx]; add byte ptr [rax - 0x73], cl; adc eax, 0x21cc0; cmovne rax, rdx; ret; 
0x000000000042efe5: cmpsd dword ptr [rsi], dword ptr [rdi]; jb 0x2eff0; add al, ch; ret 0xffa7; 
0x000000000042a5b2: cmpxchg dword ptr [rip + 0xb8227], edx; lea rax, [rip + 0xb8220]; add rsp, 0x10; pop rbp; ret; 
0x00000000004a0b42: cwde; add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x00000000004a35e0: cwde; add dword ptr [rax], eax; add byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000408806: cwde; mov al, 0; add byte ptr [rax], al; movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x0000000000428868: cwde; or eax, dword ptr [rax]; ret; 
0x0000000000428918: cwde; ret; 
0x00000000004524f9: dec byte ptr [r8 + 0x29]; ret 0x149; 
0x0000000000450941: dec byte ptr [r8 + 0x29]; ret 0x280f; 
0x00000000004524fa: dec byte ptr [rax + 0x29]; ret 0x149; 
0x0000000000450942: dec byte ptr [rax + 0x29]; ret 0x280f; 
0x0000000000459ea9: dec byte ptr [rax + 0x7f]; je 0x59ec5; std; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7; vzeroupper; ret; 
0x000000000045a087: dec byte ptr [rax + 0x7f]; jg 0x5a08f; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000045a211: dec byte ptr [rax + 0x7f]; jg 0x5a219; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x0000000000459eb1: dec byte ptr [rax + 0x7f]; jl 0x59ecd; cld; vzeroupper; ret; 
0x0000000000459fba: dec byte ptr [rax + 0x7f]; jns 0x59fbd; vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000045a145: dec byte ptr [rax + 0x7f]; jns 0x5a148; vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x0000000000459fc1: dec byte ptr [rax + 0x7f]; std; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x0000000000414675: dec byte ptr [rax - 0x77]; ret; 
0x000000000045d3b8: dec byte ptr [rbp - 0x75]; pop rdx; or byte ptr [rcx - 0xa], al; ret; 
0x000000000049194e: dec byte ptr [rbx - 0x76b70001]; adc byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x0000000000459624: dec byte ptr [rdi]; mov bh, 0x36; mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x000000000045e3e7: dec byte ptr [rdi]; test dword ptr [rsi], eax; add eax, 0x8b4d0000; adc byte ptr [r13 - 0x7b], r9b; ror byte ptr [rdi], 0x85; ret 4; 
0x0000000000493e67: dec dword ptr [r8 - 0x77]; ret 0xf748; 
0x00000000004916ad: dec dword ptr [r8 - 0x7d]; clc; std; jbe 0x916c0; ret; 
0x000000000049892e: dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x000000000045267a: dec dword ptr [rax + 0x29]; ret 0x149; 
0x0000000000450a82: dec dword ptr [rax + 0x29]; ret 0x280f; 
0x0000000000429584: dec dword ptr [rax + 0x29]; ret 0x8d49; 
0x0000000000479f08: dec dword ptr [rax + 0x29]; ret 0xb8; 
0x000000000047a9db: dec dword ptr [rax + 0x29]; ret 0xf48; 
0x0000000000415035: dec dword ptr [rax + 0x29]; ret; 
0x0000000000482cd7: dec dword ptr [rax + 0x31]; ror dword ptr [rax + 0x21], 0xce; je 0x82e10; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x0000000000467a69: dec dword ptr [rax + 0x3948074a]; ret; 
0x000000000045c516: dec dword ptr [rax + 0x39]; je 0x5c53f; or byte ptr [rdi], cl; xchg eax, ebp; ret 0x8948; 
0x0000000000478e6d: dec dword ptr [rax + 0x39]; ret 0x2675; 
0x0000000000423b11: dec dword ptr [rax + 0x39]; ret 0x830f; 
0x0000000000473ee9: dec dword ptr [rax + 0x39]; ret 0x850f; 
0x0000000000470b1d: dec dword ptr [rax + 0x39]; ret 0xe575; 
0x000000000041d99a: dec dword ptr [rax + 0x39]; ret; 
0x000000000045a909: dec dword ptr [rax + 0x63]; ret 0xfac1; 
0x000000000048df81: dec dword ptr [rax + 0x63]; ret; 
0x000000000046d767: dec dword ptr [rax + 0x63]; ror byte ptr [rcx - 0x2d94b73b], 1; push -0x1605feb4; ret 0xfffe; 
0x0000000000482ed9: dec dword ptr [rax + 0xf]; mov ebp, 0xf80148c6; ret; 
0x0000000000470337: dec dword ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x0000000000490966: dec dword ptr [rax + 1]; ret; 
0x000000000046fe68: dec dword ptr [rax + 5]; add byte ptr [rdx], al; add byte ptr [rax], al; mov qword ptr fs:[rdx], rax; ret; 
0x000000000048eaec: dec dword ptr [rax + 9]; ret 0x1075; 
0x000000000048ec76: dec dword ptr [rax + 9]; ret 0x850f; 
0x00000000004a7cf9: dec dword ptr [rax - 0x39]; add eax, 0x3d273; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x00000000004a78aa: dec dword ptr [rax - 0x39]; add eax, 0x3d5a2; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x00000000004916cf: dec dword ptr [rax - 0x39]; add eax, 0x53925; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x00000000004a7a4f: dec dword ptr [rax - 0x39]; ret 0x140; 
0x00000000004a79d4: dec dword ptr [rax - 0x39]; ret 0x1c0; 
0x00000000004a79fd: dec dword ptr [rax - 0x39]; ret 0x380; 
0x00000000004a7a26: dec dword ptr [rax - 0x39]; ret 0x400; 
0x00000000004a7a78: dec dword ptr [rax - 0x39]; ret 0x940; 
0x00000000004a7aa1: dec dword ptr [rax - 0x39]; ret 0x9a0; 
0x00000000004a7aca: dec dword ptr [rax - 0x39]; ret 0xa20; 
0x00000000004a7af3: dec dword ptr [rax - 0x39]; ret 0xae0; 
0x00000000004a7b1c: dec dword ptr [rax - 0x39]; ret 0xb60; 
0x00000000004a7b45: dec dword ptr [rax - 0x39]; ret 0xbc0; 
0x00000000004a7985: dec dword ptr [rax - 0x39]; ret 0xc80; 
0x00000000004a79ae: dec dword ptr [rax - 0x39]; ret 0xf040; 
0x000000000045c07d: dec dword ptr [rax - 0x39]; ret 0xffc0; 
0x0000000000490e71: dec dword ptr [rax - 0x39]; ret 0xffff; 
0x0000000000412c73: dec dword ptr [rax - 0x39]; ret; 
0x000000000040b327: dec dword ptr [rax - 0x3f]; call 0xffffffffc8c11c55; add byte ptr [rax], al; add byte ptr [rcx], ch; ret; 
0x000000000040bf61: dec dword ptr [rax - 0x3f]; call 0xffffffffc8c1288f; add byte ptr [rax], al; add byte ptr [rcx], ch; ret; 
0x000000000040ca98: dec dword ptr [rax - 0x3f]; call 0xffffffffc8c133c6; add byte ptr [rax], al; add byte ptr [rcx], ch; ret; 
0x000000000040d5d8: dec dword ptr [rax - 0x3f]; call 0xffffffffc8c13f06; add byte ptr [rax], al; add byte ptr [rcx], ch; ret; 
0x00000000004318b1: dec dword ptr [rax - 0x73]; add eax, 0x272f7; cmove rax, rdx; ret; 
0x0000000000412401: dec dword ptr [rax - 0x73]; sbb byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000452eea: dec dword ptr [rax - 0x75]; add dword ptr [rax - 0x77], ecx; add cl, byte ptr [rax - 0x77]; clc; ret; 
0x00000000004a23ea: dec dword ptr [rax - 0x75]; add ecx, dword ptr [rbp - 0x73]; or ecx, dword ptr [eax - 0x7d]; ret; 
0x000000000049e584: dec dword ptr [rax - 0x75]; clc; xor rax, qword ptr fs:[0x28]; jne 0x9e615; leave; ret; 
0x00000000004212da: dec dword ptr [rax - 0x75]; cmp byte ptr [r8 - 0x75], cl; push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x00000000004a520b: dec dword ptr [rax - 0x75]; je 0xa5234; or byte ptr [rax - 0x39], cl; ret 0xffff; 
0x00000000004036f2: dec dword ptr [rax - 0x75]; jl 0x371b; adc al, ch; ret; 
0x000000000048c288: dec dword ptr [rax - 0x75]; mov byte ptr [r9 - 0x77], r9b; ret 0x8949; 
0x000000000048bd4b: dec dword ptr [rax - 0x75]; mov byte ptr [r9 - 0x77], r9b; xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000048775d: dec dword ptr [rax - 0x75]; push rbx; and byte ptr [rax - 0x75], cl; sub byte ptr [r8 + 0x39], r9b; ret 0x870f; 
0x0000000000491910: dec dword ptr [rax - 0x77]; adc byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x000000000042e4ce: dec dword ptr [rax - 0x77]; add eax, 0xb42ea; ret; 
0x000000000042e4c0: dec dword ptr [rax - 0x77]; add eax, 0xb4300; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x00000000004a0a2b: dec dword ptr [rax - 0x77]; add ebx, dword ptr [rax + 0x5a]; pop rbx; ret; 
0x000000000047aa85: dec dword ptr [rax - 0x77]; lea esi, [rax]; idiv edi; inc dword ptr [rcx - 1]; push rsp; ret; 
0x000000000048d1f1: dec dword ptr [rax - 0x77]; mov r8b, 0xf; xchg eax, ebp; ret 0x2148; 
0x000000000048f75e: dec dword ptr [rax - 0x77]; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x0000000000483fb9: dec dword ptr [rax - 0x77]; ret 0x2948; 
0x000000000048c921: dec dword ptr [rax - 0x77]; ret 0x36e8; 
0x000000000042b120: dec dword ptr [rax - 0x77]; ret 0x394c; 
0x000000000047db31: dec dword ptr [rax - 0x77]; ret 0x82e9; 
0x0000000000424834: dec dword ptr [rax - 0x77]; ret 0x8548; 
0x000000000041f5cb: dec dword ptr [rax - 0x77]; ret 0x8948; 
0x0000000000464a2f: dec dword ptr [rax - 0x77]; ret 0x8949; 
0x000000000046793f: dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x000000000048df61: dec dword ptr [rax - 0x77]; ret 0xb6e8; 
0x0000000000479b54: dec dword ptr [rax - 0x77]; ret 0xb848; 
0x000000000041307b: dec dword ptr [rax - 0x77]; ret 0xc031; 
0x00000000004a8064: dec dword ptr [rax - 0x77]; ret 0xc148; 
0x000000000047ac86: dec dword ptr [rax - 0x77]; ret 0xc9e9; 
0x0000000000415807: dec dword ptr [rax - 0x77]; ret 0xf748; 
0x0000000000409d34: dec dword ptr [rax - 0x77]; ret; 
0x000000000046e34c: dec dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x84; leave; add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x00000000004985d2: dec dword ptr [rax - 0x7b]; sal byte ptr [rax + rcx + 0x5b], 0x5d; pop r12; ret; 
0x0000000000498333: dec dword ptr [rax - 0x7b]; sal byte ptr [rdx + rcx + 0x48], 0x8d; adc eax, 0x4b7c0; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000493bae: dec dword ptr [rax - 0x7d]; adc al, 0xf8; add cl, ch; ret 0xfff6; 
0x0000000000474405: dec dword ptr [rax - 0x7d]; clc; dec dword ptr [rax - 0x77]; ret; 
0x00000000004916ae: dec dword ptr [rax - 0x7d]; clc; std; jbe 0x916c0; ret; 
0x0000000000498938: dec dword ptr [rax - 0x7d]; cli; add al, 0x4c; cmovne eax, eax; mov rax, r8; ret; 
0x0000000000476d42: dec dword ptr [rax - 0x7d]; ret 0x4420; 
0x0000000000415d32: dec dword ptr [rax - 0x7d]; ret 0x4901; 
0x000000000047ee5b: dec dword ptr [rax - 0x7d]; ret 0xe902; 
0x0000000000409e64: dec dword ptr [rax - 0x7d]; ret; 
0x000000000044217c: dec dword ptr [rax - 0x7f]; ret 0x80; 
0x000000000045f359: dec dword ptr [rax - 0x7f]; ret; 
0x0000000000429869: dec dword ptr [rax - 9]; fisttp dword ptr [rax + 0x21]; ret; 
0x000000000040a427: dec dword ptr [rax]; add byte ptr [rax], al; sal byte ptr [rbp + 0x72], 0x48; mov eax, 0x4ded80; ret; 
0x000000000040a437: dec dword ptr [rax]; je 0xa480; cmp edi, 0xf; jne 0xa4a0; mov rax, 0x4e1220; ret; 
0x0000000000479e99: dec dword ptr [rbp + 0x63]; ret; 
0x000000000048e506: dec dword ptr [rbp + 0xf]; scasd eax, dword ptr [rdi]; ret 0x8348; 
0x00000000004a00d3: dec dword ptr [rbp + r9*4 + 0x74]; ret; 
0x00000000004a00d4: dec dword ptr [rbp + rcx*4 + 0x74]; ret; 
0x00000000004159eb: dec dword ptr [rbp - 0x73]; je 0x159f6; add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x0000000000415943: dec dword ptr [rbp - 0x73]; jl 0x1594f; add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x00000000004a2a56: dec dword ptr [rbp - 0x75]; adc cl, byte ptr [rcx + 1]; ret 0xef89; 
0x000000000046a477: dec dword ptr [rbp - 0x77]; ret 0x2de9; 
0x000000000046bd79: dec dword ptr [rbp - 0x77]; ret 0x87e9; 
0x000000000046a664: dec dword ptr [rbp - 0x77]; ret; 
0x00000000004098d6: dec dword ptr [rbx + 0x43890445]; add al, 0xe9; ret 0xfffe; 
0x0000000000408f63: dec dword ptr [rbx + 0x480c2444]; add esp, 0x18; pop rbp; pop r12; ret; 
0x000000000048d037: dec dword ptr [rbx + 0x57da215]; add dh, dh; ret 0x7404; 
0x000000000043036d: dec dword ptr [rbx + 0x9082454]; ret 0x37e9; 
0x00000000004112d1: dec dword ptr [rbx + 0xd3b0815]; add dh, dh; ret 0x7404; 
0x0000000000473702: dec dword ptr [rbx - 0x8ef4b]; inc dword ptr [rbp - 0x7b]; in al, 0xf; lahf; ret; 
0x00000000004736df: dec dword ptr [rbx - 0x8ef7b]; inc dword ptr [rcx]; ret; 
0x0000000000479f02: dec dword ptr [rbx - 0x8ff4b]; dec dword ptr [rax + 0x29]; ret 0xb8; 
0x000000000048737f: dec dword ptr [rcx + 0x21]; ret 0x394c; 
0x000000000046a1dc: dec dword ptr [rcx + 0x3948fc51]; ret; 
0x000000000048bf41: dec dword ptr [rcx + 0x39]; ret 0x860f; 
0x00000000004a2fed: dec dword ptr [rcx + 0x39]; retf 0x894c; fild dword ptr [rcx + 0xf]; lahf; ret 0xf45; 
0x00000000004a2fda: dec dword ptr [rcx + 0x39]; retf 0x894c; fild dword ptr [rcx + 0xf]; popfq; ret 0xf45; 
0x00000000004a306e: dec dword ptr [rcx + 0x39]; retf 0x894c; fild dword ptr [rcx + 0xf]; pushfq; ret 0xf45; 
0x00000000004a305b: dec dword ptr [rcx + 0x39]; retf 0x894c; fild dword ptr [rcx + 0xf]; sahf; ret 0xf45; 
0x00000000004a303d: dec dword ptr [rcx + 0x39]; retf 0x894c; fild dword ptr [rcx + 0xf]; xchg eax, ebp; ret 0xf45; 
0x00000000004a2fc7: dec dword ptr [rcx + 0x39]; retf 0x894c; fild dword ptr [rcx + 0xf]; xchg eax, esp; ret 0xf45; 
0x0000000000474674: dec dword ptr [rcx + 0x63]; ret 0x8545; 
0x000000000046ebe4: dec dword ptr [rcx + 1]; ret 0x8d48; 
0x0000000000495553: dec dword ptr [rcx + rcx*4 + 0x44]; ret 0xe9f8; 
0x000000000043cdee: dec dword ptr [rcx + rcx*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000049448c: dec dword ptr [rcx + rcx*4 + 4]; ret 0x85c7; 
0x000000000048f277: dec dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a179f: dec dword ptr [rcx - 0x39]; ret 0xffff; 
0x0000000000490db2: dec dword ptr [rcx - 0x3fd6bb38]; ret; 
0x00000000004682e9: dec dword ptr [rcx - 0x75]; add ecx, dword ptr [rax - 0x77]; fimul dword ptr [rax + 0x29]; ret 0x8348; 
0x000000000048256b: dec dword ptr [rcx - 0x77]; add byte ptr [r8 - 0x7b], r9b; sal byte ptr [rcx + 0x48], 3; add byte ptr [r8 - 0x77], r9b; ret 0x14eb; 
0x000000000046bd76: dec dword ptr [rcx - 0x77]; dec dword ptr [rbp - 0x77]; ret 0x87e9; 
0x0000000000482053: dec dword ptr [rcx - 0x77]; ret 0x3948; 
0x000000000048c390: dec dword ptr [rcx - 0x77]; ret 0x8349; 
0x0000000000473923: dec dword ptr [rcx - 0x77]; ret 0x8445; 
0x00000000004738d9: dec dword ptr [rcx - 0x77]; ret 0x8548; 
0x0000000000473959: dec dword ptr [rcx - 0x77]; ret 0x8b4c; 
0x000000000041f6ef: dec dword ptr [rcx - 0x77]; ret; 
0x000000000042b762: dec dword ptr [rcx - 0x7b]; ret; 
0x000000000046b254: dec dword ptr [rcx - 0x7d]; ret; 
0x000000000042946e: dec dword ptr [rcx - 9]; ret; 
0x000000000042503a: dec dword ptr [rcx]; ret 0x1389; 
0x000000000042768d: dec dword ptr [rdi]; adc dword ptr [rdi + 0xa0], eax; ret; 
0x000000000040a43c: dec dword ptr [rdi]; jne 0xa4a0; mov rax, 0x4e1220; ret; 
0x0000000000490c82: dec dword ptr [rdi]; mov dh, 0x45; add ecx, dword ptr [rax - 0x7d]; ret; 
0x00000000004a27b2: dec dword ptr [rdi]; mov dh, 0x53; add cl, byte ptr [rax - 0x7d]; ret; 
0x0000000000494626: dec dword ptr [rdi]; mov dh, 0x58; or al, 0x89; fdiv st(6); ret; 
0x0000000000492f83: dec dword ptr [rdi]; mov dh, 0x58; or al, 0xf6; ret; 
0x000000000048df00: dec dword ptr [rdi]; test bl, ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000046804f: dec dword ptr [rdi]; test byte ptr [rbp + rax], al; add bh, dh; ret 0; 
0x0000000000439ae6: dec dword ptr [rdi]; test dword ptr [rbx - 0x3a000003], esp; std; xlatb; ret 0xe883; 
0x0000000000458a20: dec dword ptr [rdi]; test dword ptr [rsi + 1], ebp; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000430d10: dec dword ptr [rdx - 0x73]; jl 0x30d3a; and byte ptr [rcx], dh; imul al; ret; 
0x0000000000452679: dec qword ptr [r8 + 0x29]; ret 0x149; 
0x0000000000450a81: dec qword ptr [r8 + 0x29]; ret 0x280f; 
0x0000000000482cd6: dec qword ptr [rax + 0x31]; ror dword ptr [rax + 0x21], 0xce; je 0x82e10; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x0000000000467a68: dec qword ptr [rax + 0x3948074a]; ret; 
0x0000000000415d31: dec qword ptr [rax - 0x7d]; ret 0x4901; 
0x000000000046d9e5: div byte ptr [rax + rcx - 0x7d]; inc byte ptr [rbx]; je 0x6d9f0; ret; 
0x000000000049e808: div byte ptr [rbp + 0x25]; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000049e976: div byte ptr [rbp + 0x27]; test rax, rax; jne 0x9e9e0; mov dword ptr [rdx], 0; mov eax, 2; ret; 
0x000000000049e899: div byte ptr [rbp + 0x2c]; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000045de93: div byte ptr [rbp + 0xa]; pop rbp; pop r12; pop r13; ret; 
0x000000000046ff59: div byte ptr [rbp + 0xc]; mov dword ptr [rbx + 0x40], esi; xor eax, eax; pop rbx; ret; 
0x00000000004830c6: div byte ptr [rbp + 4]; xor rax, rax; ret; 
0x000000000045dde5: div byte ptr [rbp + 8]; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000404dfc: div byte ptr [rbp + rcx - 0x75]; or byte ptr [rbx + 0x518d0c46], r9b; add bh, byte ptr [rcx]; ret 0x1477; 
0x000000000049e8b2: div byte ptr [rbp - 0x13]; cmp cx, 0x7fff; jne 0x9e89c; mov eax, 1; ret; 
0x000000000048e4b1: div byte ptr [rbx + rax + 0x48]; mov dword ptr [rsi], edi; mov rax, r8; ret; 
0x0000000000430499: div byte ptr [rsp + rcx + 0x48]; lea eax, [rax - 0x10]; ret; 
0x00000000004958a5: div ecx; add r8d, eax; mov eax, r8d; ret; 
0x000000000045a8bd: div ecx; mov eax, eax; ret; 
0x000000000045a8a6: div esi; mov eax, eax; ret; 
0x00000000004a1665: divps xmm0, xmmword ptr [rip + 0x2ec10]; ret; 
0x00000000004a1664: divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x00000000004847d1: endbr64; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000040a510: endbr64; call 0xa330; cmp rax, 1; sbb eax, eax; and eax, 0xffffffea; ret; 
0x000000000048f130: endbr64; cmp byte ptr [rip + 0x5674d], 0; jne 0x8f150; mov r8, qword ptr [rip + 0x5632c]; mov rax, r8; ret; 
0x0000000000426df0: endbr64; cmp qword ptr [rdi + 0x38], 0; je 0x26e00; ret; 
0x0000000000423310: endbr64; cmp qword ptr [rip + 0xbec84], 0; je 0x2331f; ret; 
0x0000000000461300: endbr64; lea rax, [rip + 0x81f55]; ret; 
0x0000000000402160: endbr64; lea rax, [rip + 0xa6f3d]; ret; 
0x000000000045cf30: endbr64; mov eax, 0x10; syscall; cmp rax, -0xfff; jae 0x5cf44; ret; 
0x000000000045be20: endbr64; mov eax, 0x18; syscall; cmp rax, -0xfff; jae 0x5be34; ret; 
0x000000000045d140: endbr64; mov eax, 0x1c; syscall; cmp rax, -0xfff; jae 0x5d154; ret; 
0x000000000045c3a0: endbr64; mov eax, 0x20; syscall; cmp rax, -0xfff; jae 0x5c3b4; ret; 
0x000000000049ed20: endbr64; mov eax, 0x26; syscall; cmp rax, -0xfff; jae 0x9ed34; ret; 
0x0000000000498f90: endbr64; mov eax, 0x27; syscall; ret; 
0x0000000000484ed0: endbr64; mov eax, 0x3f; syscall; cmp rax, -0xfff; jae 0x84ee4; ret; 
0x000000000045f900: endbr64; mov eax, 0x63; syscall; cmp rax, -0xfff; jae 0x5f914; ret; 
0x0000000000484f00: endbr64; mov eax, 0x66; syscall; ret; 
0x0000000000484f20: endbr64; mov eax, 0x68; syscall; ret; 
0x0000000000484f10: endbr64; mov eax, 0x6b; syscall; ret; 
0x0000000000484f30: endbr64; mov eax, 0x6c; syscall; ret; 
0x000000000045d110: endbr64; mov eax, 0xa; syscall; cmp rax, -0xfff; jae 0x5d124; ret; 
0x000000000045d0e0: endbr64; mov eax, 0xb; syscall; cmp rax, -0xfff; jae 0x5d0f4; ret; 
0x0000000000426eb0: endbr64; mov eax, 0xffffffff; ret; 
0x000000000045ce20: endbr64; mov eax, 1; syscall; cmp rax, -0x1000; ja 0x5ce38; ret; 
0x000000000045cb30: endbr64; mov eax, 3; syscall; cmp rax, -0x1000; ja 0x5cb48; ret; 
0x000000000045c1e0: endbr64; mov eax, 8; syscall; cmp rax, -0x1000; ja 0x5c1f8; ret; 
0x0000000000428510: endbr64; mov eax, dword ptr [rdi + 0x10]; sub eax, dword ptr [rsi + 0x10]; ret; 
0x00000000004a5a90: endbr64; mov eax, dword ptr [rdi]; test eax, eax; jne 0xa5aa0; ret; 
0x00000000004a5cd0: endbr64; mov eax, dword ptr [rdi]; test eax, eax; jne 0xa5ce0; ret; 
0x00000000004991e0: endbr64; mov eax, dword ptr [rip + 0x4c79e]; ret; 
0x0000000000461310: endbr64; mov eax, dword ptr [rip + 0x846d6]; test eax, eax; je 0x61320; ret; 
0x000000000045f820: endbr64; mov eax, dword ptr [rip + 0x8615e]; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x00000000004037d0: endbr64; mov eax, dword ptr [rip + 0xde92a]; ret; 
0x0000000000403150: endbr64; mov eax, dword ptr [rip + 0xdefae]; test eax, eax; js 0x3160; ret; 
0x0000000000402170: endbr64; mov eax, dword ptr [rip + 0xe2156]; test eax, eax; je 0x2180; ret; 
0x00000000004a39d0: endbr64; mov qword ptr [rdi + 0x98], rsi; ret; 
0x000000000046fdc0: endbr64; mov rax, -0x10; add rax, qword ptr fs:[0]; ret; 
0x000000000046fde0: endbr64; mov rax, -0x18; add rax, qword ptr fs:[0]; ret; 
0x000000000046fe00: endbr64; mov rax, -0x20; add rax, qword ptr fs:[0]; ret; 
0x0000000000411ad0: endbr64; mov rax, -0x40; add rax, qword ptr fs:[0]; ret; 
0x000000000048fa60: endbr64; mov rax, -0x40; pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x000000000046fda0: endbr64; mov rax, -0x58; movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x0000000000427930: endbr64; mov rax, -1; ret; 
0x0000000000402580: endbr64; mov rax, 0x4e2130; mov rax, qword ptr [rax]; mov eax, dword ptr [rax]; ret; 
0x00000000004916e0: endbr64; mov rax, qword ptr [rax + 8]; ret; 
0x00000000004916f0: endbr64; mov rax, qword ptr [rax + 8]; sub rax, qword ptr fs:[0]; ret; 
0x00000000004292b0: endbr64; mov rax, qword ptr [rdi + 0x28]; cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000428880: endbr64; mov rax, qword ptr [rdi + 0x68]; ret; 
0x00000000004a3930: endbr64; mov rax, qword ptr [rdi + 0x90]; ret; 
0x00000000004a39a0: endbr64; mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000480d30: endbr64; mov rax, qword ptr [rdi + 0xa0]; cmp qword ptr [rax + 0x30], 0; je 0x80d48; ret; 
0x00000000004a39e0: endbr64; mov rax, qword ptr [rdi + 0xa0]; ret; 
0x00000000004a3a40: endbr64; mov rax, qword ptr [rdi + 0xa8]; ret; 
0x00000000004a3a30: endbr64; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x00000000004a39f0: endbr64; mov rax, qword ptr [rdi + 0xb8]; ret; 
0x0000000000429720: endbr64; mov rax, qword ptr [rdi]; cmp rax, 0x2000000; jbe 0x29730; ret; 
0x0000000000429380: endbr64; mov rax, qword ptr [rdi]; cmp rax, 0x408; jbe 0x29390; ret; 
0x0000000000429780: endbr64; mov rax, qword ptr [rdi]; cmp rax, 0xa0; jbe 0x29790; ret; 
0x00000000004293c0: endbr64; mov rax, qword ptr [rdi]; cmp rax, 0xffff; jbe 0x293d0; ret; 
0x000000000049bfd0: endbr64; mov rax, qword ptr [rdi]; cmp rax, rsi; je 0x9bfe0; ret; 
0x0000000000429750: endbr64; mov rax, qword ptr [rdi]; nop; mov dword ptr [rip + 0xb9012], 1; mov dword ptr [rip + 0xb9004], eax; ret; 
0x0000000000429700: endbr64; mov rax, qword ptr [rdi]; nop; mov dword ptr [rip + 0xb9062], 1; mov qword ptr [rip + 0xb902f], rax; ret; 
0x00000000004296e0: endbr64; mov rax, qword ptr [rdi]; nop; mov dword ptr [rip + 0xb9082], 1; mov qword ptr [rip + 0xb9047], rax; ret; 
0x0000000000429770: endbr64; mov rax, qword ptr [rdi]; nop; mov dword ptr [rip + 0xbb5b6], eax; ret; 
0x00000000004293e0: endbr64; mov rax, qword ptr [rdi]; nop; mov qword ptr [rip + 0xb93b9], rax; ret; 
0x0000000000429370: endbr64; mov rax, qword ptr [rdi]; nop; mov qword ptr [rip + 0xb93d9], rax; ret; 
0x0000000000429360: endbr64; mov rax, qword ptr [rdi]; nop; mov qword ptr [rip + 0xb93f1], rax; ret; 
0x000000000048f1a0: endbr64; mov rax, qword ptr [rip + 0x52f8d]; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x562b3]; mov qword ptr [rsi], rax; ret; 
0x000000000046d200: endbr64; mov rax, qword ptr [rip + 0x77c45]; ret; 
0x0000000000463850: endbr64; mov rax, qword ptr [rip + 0x821ad]; ret; 
0x000000000045cf60: endbr64; mov rax, qword ptr [rip + 0x861ed]; test rax, rax; je 0x5cf71; ret; 
0x0000000000428860: endbr64; mov rax, qword ptr [rip + 0xb98f5]; ret; 
0x0000000000428890: endbr64; mov rax, rdi; ret; 
0x0000000000464f80: endbr64; movzx eax, sil; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000000403170: endbr64; movzx edi, dil; mov dword ptr [rip + 0xdef8a], edi; ret; 
0x0000000000401cb0: endbr64; ret; 
0x00000000004a8160: endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000498650: endbr64; test byte ptr [rip + 0x4c72f], 0x10; lea rdx, [rip + 0x11e]; lea rax, [rip + 0x67]; cmovne rax, rdx; ret; 
0x00000000004318a0: endbr64; test byte ptr [rip + 0xb3539], 0x10; lea rdx, [rip - 0x362]; lea rax, [rip + 0x272f7]; cmove rax, rdx; ret; 
0x0000000000430f60: endbr64; test byte ptr [rip + 0xb3e1f], 0x10; lea rdx, [rip + 0x2818e]; lea rax, [rip + 0x280d7]; cmovne rax, rdx; ret; 
0x000000000046d9e0: endbr64; test esi, esi; je 0x6d9f0; cmp esi, 3; je 0x6d9f0; ret; 
0x000000000045a2a0: endbr64; test rdx, rdx; jne 0x5a2ad; mov rax, rdi; ret; 
0x00000000004830c0: endbr64; test rsi, rsi; jne 0x830cd; xor rax, rax; ret; 
0x0000000000483d80: endbr64; test rsi, rsi; jne 0x83d8d; xor rax, rax; ret; 
0x00000000004278b0: endbr64; xor eax, eax; ret; 
0x000000000045cdf0: endbr64; xor eax, eax; syscall; cmp rax, -0x1000; ja 0x5ce08; ret; 
0x0000000000425190: endbr64; xor eax, eax; test rdx, rdx; jne 0x251a0; ret; 
0x00000000004234e1: fadd dword ptr [rax]; add byte ptr [rax], al; lea rcx, [rip + 0xc0794]; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x000000000042063f: fadd dword ptr [rax]; add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x000000000041f94d: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000473bfb: fadd dword ptr [rbx - 0x1f3efe20]; add al, 0x89; ret 0xf41; 
0x0000000000404465: fadd dword ptr [rcx + 0x5c]; pop r13; pop r14; pop r15; ret; 
0x000000000048e526: fadd dword ptr [rcx + rcx*8 - 0x3fbbf0b4]; mov rax, r8; ret; 
0x0000000000431b96: fadd dword ptr [rcx]; add byte ptr [rax - 0x73], cl; adc eax, 0x21cc0; cmovne rax, rdx; ret; 
0x0000000000410fbb: fadd dword ptr [rdx]; add bl, bpl; or bh, bh; push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x000000000040b513: fadd dword ptr [rdx]; or al, 0; ret; 
0x000000000042d7b3: fadd qword ptr [rcx - 0x78]; or al, 0x18; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x00000000004571e0: fadd qword ptr [rcx]; add byte ptr [rax], al; test dl, 0x40; jne 0x571a0; lea rax, [rdi + 7]; ret; 
0x000000000043a7b1: fbld tbyte ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043a7af: fbstp tbyte ptr [rdx - 0x10f09921]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044e63b: fcmovnb st(0), st(5); std; xlatb; ret; 
0x0000000000428b6e: fcomp dword ptr [rbp + 0x41]; pop rsp; pop r13; pop r14; pop r15; ret; 
0x000000000048986b: fcomp dword ptr [rbx + 0x5d]; pop r12; pop r13; pop r14; ret; 
0x000000000042508a: fcomp dword ptr [rbx + 0x5d]; pop r12; ret; 
0x0000000000404ed1: fcomp dword ptr [rbx + 0x5d]; ret; 
0x00000000004a1655: fcomp dword ptr [rbx + 0x7420e783]; adc bl, dh; movups xmm0, xmmword ptr [rip + 0x2ec14]; divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x000000000043ac7f: fdiv dword ptr [rdx - 0x10f09928]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043aa7f: fdiv qword ptr [rdx - 0x10f09924]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004907fb: fdiv st(1), st(0); dec dword ptr [rax - 0x77]; ret; 
0x000000000049462c: fdiv st(6); ret; 
0x0000000000407d37: fdivr qword ptr [rax + 1]; ret; 
0x00000000004a6169: fdivr st(7); dec dword ptr [rax - 0x77]; ret; 
0x0000000000458b98: fdivr st(7); ret; 
0x0000000000457342: fiadd dword ptr [rax]; add byte ptr [rax], al; test ah, 0x40; jne 0x57430; lea rax, [rdi + 0xf]; ret; 
0x000000000041f378: fiadd dword ptr [rbp + 0x450f48c9]; ret 0x8348; 
0x000000000047f46d: fiadd dword ptr [rcx]; rol byte ptr [rcx + rbp - 0x36], 0x39; ret 0x2b7c; 
0x000000000042067c: fiadd word ptr [rax]; add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x000000000048299e: fiadd word ptr [rcx]; add byte ptr [rax], al; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x000000000044ef6e: fiadd word ptr [rcx]; add byte ptr [rax], al; vzeroupper; ret; 
0x00000000004839c2: fidiv dword ptr [rbp + 0x39480005]; ret; 
0x0000000000438f0f: fidiv dword ptr [rbx - 0x32]; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x000000000043ab7f: fidiv dword ptr [rdx - 0x10f09926]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043a87f: fidiv word ptr [rdx - 0x10f09922]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000047a149: fidivr dword ptr [rcx]; ret 0x820f; 
0x0000000000472890: fidivr dword ptr [rcx]; ret 0x830f; 
0x000000000040254e: fidivr word ptr [rdi]; add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rcx - 0x75], 0; add rsp, 8; ret; 
0x00000000004a2ff3: fild dword ptr [rcx + 0xf]; lahf; ret 0xf45; 
0x00000000004a2fe0: fild dword ptr [rcx + 0xf]; popfq; ret 0xf45; 
0x00000000004a3074: fild dword ptr [rcx + 0xf]; pushfq; ret 0xf45; 
0x00000000004a3061: fild dword ptr [rcx + 0xf]; sahf; ret 0xf45; 
0x00000000004a3043: fild dword ptr [rcx + 0xf]; xchg eax, ebp; ret 0xf45; 
0x00000000004a2fcd: fild dword ptr [rcx + 0xf]; xchg eax, esp; ret 0xf45; 
0x000000000042ac88: fimul dword ptr [rax + 0x21]; ret 0x8949; 
0x000000000049423b: fimul dword ptr [rax + 0x29]; ret 0x2948; 
0x000000000046541a: fimul dword ptr [rax + 0x29]; ret 0x8348; 
0x0000000000495265: fimul dword ptr [rax + 0x39]; ret 0xe57f; 
0x0000000000483275: fimul dword ptr [rax + 0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x0000000000483f35: fimul dword ptr [rax + 0xf]; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 2; ret; 
0x0000000000437e06: fimul dword ptr [rax + rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000046760b: fimul dword ptr [rax - 0x75]; add byte ptr [rax + 0x29], cl; ret 0x8348; 
0x000000000041253a: fimul dword ptr [rax - 0x7d]; ret 0x8001; 
0x000000000043ce71: fimul word ptr [r9 + r9*4 + 0x57]; out 0x4c, al; mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043ce72: fimul word ptr [rcx + rcx*4 + 0x57]; out 0x4c, al; mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000049ad8a: fimul word ptr [rdi]; xchg eax, esp; ror byte ptr [rdi], 0x94; ret 0xb60f; 
0x000000000042986c: fisttp dword ptr [rax + 0x21]; ret; 
0x00000000004a150a: fisttp dword ptr [rax + 9]; ror dword ptr [rdi], cl; xchg eax, esp; ret; 
0x000000000049d725: fisttp dword ptr [rax - 0x77]; ret; 
0x0000000000465986: fisttp dword ptr [rcx + 0x39]; test dword ptr [rdi], 0x33486; add byte ptr [rcx - 0xa], al; ret; 
0x000000000049d73f: fisttp dword ptr [rcx - 0x77]; ret 0x8b4a; 
0x000000000043d051: fisttp qword ptr [r9 + r9*4 + 0x57]; in eax, 0x4c; mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000409286: fisttp qword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x84; lock add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004590e2: fisttp qword ptr [rax - 1]; ror byte ptr [rax - 1], 0xc0; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000043d052: fisttp qword ptr [rcx + rcx*4 + 0x57]; in eax, 0x4c; mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cca1: fisttp word ptr [r9 + r9*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cd9d: fisttp word ptr [r9 + r9*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043cce9: fisttp word ptr [r9 + r9*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004a5420: fisttp word ptr [rax - 0x77]; ret 0xf7e8; 
0x0000000000415d53: fisttp word ptr [rax - 0x7d]; ret 0x4001; 
0x0000000000411a23: fisttp word ptr [rax - 0x7d]; ret; 
0x000000000049d7bf: fisttp word ptr [rax]; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000043cca2: fisttp word ptr [rcx + rcx*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cd9e: fisttp word ptr [rcx + rcx*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043ccea: fisttp word ptr [rcx + rcx*4 + 0x57]; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000415201: fisttp word ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x000000000044cc5d: fisttp word ptr [rip - 0x7cb80000]; ret 0x4910; 
0x000000000043ab81: fisub dword ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000457183: fisub dword ptr [rsi + 0xf]; xlatb; shl byte ptr [rsi + 0xf], 0xd7; ror dword ptr [rcx], cl; ret 0xe074; 
0x000000000043a881: fisub word ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004571c1: fisubr word ptr [rax - 0x297af0f0]; add dword ptr [rax], eax; add dh, dh; ret 0x7510; 
0x0000000000498f65: fld dword ptr [rax]; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x98f78; ret; 
0x000000000042077b: fld qword ptr [rax]; add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; retf 0; add byte ptr [rax - 0x77], cl; ret; 
0x000000000042d9aa: fld qword ptr [rcx - 0x78]; or al, 0x28; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000000482f16: fld st(5); std; xlatb; retf 0xfdc5; xlatb; ret; 
0x0000000000498b39: fldenv [rsi + 0xf]; jbe 0x98b8d; xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x00000000004391c7: fldenv [rsi + 0xf]; je 0x3921b; xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x00000000004827d9: fldenv [rsi + 0xf]; je 0x8282d; xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x000000000043ac01: fldenv [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004390e1: fldenv [rsi + 0xf]; xlatb; ret; 
0x00000000004a1001: fldpi; adc r10, r11; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x000000000049e671: fldpi; sbb r10, r11; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x000000000049e7b4: fmul dword ptr [rax + 0x11]; rcr byte ptr [rbp + 0x5b], 1; ret; 
0x000000000041ed2b: fmul dword ptr [rax - 0x3f]; call 0x648f3936; ret; 
0x000000000042270e: fmul dword ptr [rax - 0x77]; ret; 
0x000000000043d241: fmul qword ptr [r9 + r9*4 + 0x57]; in al, 0x4c; mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000488542: fmul qword ptr [rax - 0x7d]; ret; 
0x000000000043d242: fmul qword ptr [rcx + rcx*4 + 0x57]; in al, 0x4c; mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000431f89: fmul qword ptr [rcx - 0x7d]; ret 0x7f10; 
0x00000000004468bf: fmul qword ptr [rcx - 0x7d]; ret 0xf10; 
0x0000000000482f14: fnsave dword ptr [rcx + rbx*8 - 0x3b]; std; xlatb; retf 0xfdc5; xlatb; ret; 
0x000000000043a97f: fnsave dword ptr [rdx - 0x10f09923]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043abff: fnstenv [rdx - 0x10f09927]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042916f: fnstsw dword ptr [rsi - 3]; dec dword ptr [rax - 0x77]; ret; 
0x000000000043a981: frstor dword ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000046bd73: fstp dword ptr [rsi - 6]; dec dword ptr [rcx - 0x77]; dec dword ptr [rbp - 0x77]; ret 0x87e9; 
0x000000000045921c: fstp xword ptr [rdx]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000045be3c: fsub dword ptr [rcx + rcx*4 + 1]; or rax, 0xffffffffffffffff; ret; 
0x000000000045bee0: fsub dword ptr [rcx + rcx*4 + 2]; mov eax, 0xffffffff; ret; 
0x000000000045c118: fsub dword ptr [rcx + rcx*4 + 2]; mov rax, -1; ret; 
0x000000000049eb94: fsub dword ptr [rcx]; add byte ptr [rax], al; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x000000000049881c: fsub dword ptr [rsi + 0xf]; cmp ah, byte ptr [rbx - 0x25]; cmp ch, byte ptr [rcx]; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x000000000043ac81: fsub dword ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044f7b4: fsub dword ptr [rsi + 0xf]; xlatb; ret; 
0x000000000043aa81: fsub qword ptr [rsi + 0xf]; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044dc8c: fsub qword ptr [rsi + 0xf]; xlatb; ret; 
0x000000000046da30: fsubp st(0); cmp bh, byte ptr [rdi]; add al, byte ptr [rax]; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000045cc79: fsubr st(3); ror byte ptr [rdi], 0x1f; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x00000000004888f4: fucomi st(3); ret; 
0x00000000004a2a53: fucomi st(4); cmc; dec dword ptr [rbp - 0x75]; adc cl, byte ptr [rcx + 1]; ret 0xef89; 
0x0000000000439842: fucomi st(4); vptest ymm5, ymm0; jae 0x39ae0; xor eax, eax; vzeroupper; ret; 
0x00000000004684a8: fucomip st(0); ret 0xff8e; 
0x00000000004683e2: hlt; add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret 0x860f; 
0x00000000004425ca: hlt; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d24e: hlt; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004425c3: hlt; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d3a7: hlt; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d3c3: hlt; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000049887b: hlt; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000004586a3: hlt; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x0000000000401cae: hlt; nop; endbr64; ret; 
0x000000000042a6c8: hlt; or byte ptr [rbx], 0; ret; 
0x00000000004586a7: hlt; sub eax, edx; ret; 
0x000000000047a9d9: idiv bh; dec dword ptr [rax + 0x29]; ret 0xf48; 
0x00000000004746a7: idiv bh; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x000000000042e4be: idiv bh; dec dword ptr [rax - 0x77]; add eax, 0xb4300; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x0000000000493bac: idiv bh; dec dword ptr [rax - 0x7d]; adc al, 0xf8; add cl, ch; ret 0xfff6; 
0x0000000000479e97: idiv bh; dec dword ptr [rbp + 0x63]; ret; 
0x0000000000479f00: idiv bh; dec dword ptr [rbx - 0x8ff4b]; dec dword ptr [rax + 0x29]; ret 0xb8; 
0x0000000000473921: idiv bh; dec dword ptr [rcx - 0x77]; ret 0x8445; 
0x00000000004738d7: idiv bh; dec dword ptr [rcx - 0x77]; ret 0x8548; 
0x0000000000473957: idiv bh; dec dword ptr [rcx - 0x77]; ret 0x8b4c; 
0x000000000048c468: idiv bh; inc dword ptr [rbx + 0x7425087b]; fisttp word ptr [rax - 0x7d]; ret; 
0x0000000000464f8a: idiv byte ptr [rdx - 1]; cmovs eax, edx; ret; 
0x00000000004a3975: idiv dword ptr [rax + rcx]; jne 0x175a; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x0000000000479f06: idiv edi; dec dword ptr [rax + 0x29]; ret 0xb8; 
0x0000000000478e6b: idiv edi; dec dword ptr [rax + 0x39]; ret 0x2675; 
0x0000000000473ee7: idiv edi; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x0000000000474403: idiv edi; dec dword ptr [rax - 0x7d]; clc; dec dword ptr [rax - 0x77]; ret; 
0x000000000049960e: idiv edi; endbr64; ret; 
0x0000000000473a27: idiv edi; inc dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000473706: idiv edi; inc dword ptr [rbp - 0x7b]; in al, 0xf; lahf; ret; 
0x0000000000474279: idiv edi; inc dword ptr [rcx - 1]; push rsp; ret; 
0x00000000004736e3: idiv edi; inc dword ptr [rcx]; ret; 
0x0000000000481afc: idiv edi; pop rdx; xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000474278: idiv rdi; inc dword ptr [rcx - 1]; push rsp; ret; 
0x0000000000411bd7: imul al; push rbx; mov ah, 4; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000430d17: imul al; ret; 
0x00000000004956c5: imul cl; ret 0xfffb; 
0x0000000000484c95: imul eax, dword ptr [rcx + rax], 0x48; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000041f261: imul eax, dword ptr [rcx], 0; add byte ptr [rax - 0x7bf0cf07], al; ret 1; 
0x0000000000457201: imul eax, dword ptr [rcx], 0; add dh, dh; ret 0x7502; 
0x0000000000431bf0: imul eax, dword ptr [rcx], 0; cmovne rax, rdx; ret; 
0x000000000049c6b8: imul eax, dword ptr [rcx], 0x1f0f0000; add byte ptr [rax - 0x7d], cl; ret 0xf604; 
0x00000000004461ce: imul eax, dword ptr [rip + 0x487c5162], 0x62067111; push rcx; jl 0x46223; adc dword ptr [rcx + 7], edi; ret; 
0x000000000040775d: imul eax, eax, 0xc2b2ae35; mov edx, eax; shr edx, 0x10; xor eax, edx; ret; 
0x0000000000403ed8: imul eax; ret 0x584; 
0x00000000004133c8: imul eax; ret 0xfedd; 
0x000000000048976f: imul eax; sti; ret; 
0x0000000000422df3: imul eax; xlatb; ret; 
0x000000000047ec4a: imul ebp, dword ptr [rsp + rcx*2], -0x77; ret 0x8348; 
0x000000000041efa5: imul ecx, dword ptr [rax + rax], 0xc4834801; sbb byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x0000000000426e16: imul ecx, dword ptr [rax - 0x75], 0xd8ab; add byte ptr [rax - 0x39], cl; ret 0x3bc0; 
0x0000000000481996: imul ecx, dword ptr [rax], 0x5b; pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000004a042c: imul ecx, dword ptr [rax], 0xf; test byte ptr [rax + rax + 0x438b0000], al; adc byte ptr [rbp + 0x2d840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000042e3bb: imul ecx, dword ptr [rbx], 0x5b050f00; ret; 
0x0000000000421b84: imul ecx, dword ptr [rcx + 0x2b], 0x47; and byte ptr [rax + 1], cl; ret; 
0x0000000000446067: imul edi, ebp, 0x487c5162; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000445e2d: imul edi, ebp, 0x487cd162; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000498195: imul edi, ecx, 0x66d1ebff; nop dword ptr [rax + rax]; pop rbp; ret; 
0x0000000000429581: imul edi, edi, -1; dec dword ptr [rax + 0x29]; ret 0x8d49; 
0x00000000004626c1: imul esi, esi, 1; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000428419: imul esp, dword ptr [rax + 0x5b], 0x5d; pop r12; ret; 
0x00000000004296cc: imul esp, dword ptr [rbx*2 + 0x10438941], 0x41; mov dword ptr [rbx + 0x14], 0; ret; 
0x0000000000489241: imul esp, dword ptr [rdx + 0x48], 0x9480733; ret 0x1475; 
0x0000000000485668: imul esp, dword ptr [rdx + 0x49], 0x39740039; leave; xor eax, eax; ret; 
0x000000000049ec58: in al, 0x1d; add byte ptr [rax], al; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x0000000000499600: in al, 0x29; add eax, dword ptr [rax]; lea rdi, [rip + 0x329f5]; call 0x11c50; endbr64; ret; 
0x00000000004676af: in al, 0x29; ret; 
0x0000000000499982: in al, 0x48; add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000049a9b3: in al, 0x48; add esp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000043d246: in al, 0x4c; mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000040dc92: in al, 0x4c; mov eax, esp; pop r12; ret; 
0x000000000046dc14: in al, 0x4c; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x00000000004a09e6: in al, 0x5b; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x0000000000429978: in al, 0x5b; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000411d95: in al, 0x5b; pop rbp; mov rax, r12; pop r12; ret; 
0x0000000000481d96: in al, 0x5d; mov rax, r12; pop r12; pop r13; ret; 
0x000000000044f42c: in al, 0x74; or dword ptr [rax - 1], ecx; ret 0xc148; 
0x000000000041ea7e: in al, 0x75; adc al, 0xeb; sbb eax, 0x441f0f; add byte ptr [rbx + rcx*4 + 0x63], cl; or byte ptr [rax - 0x7d], cl; ret; 
0x00000000004425aa: in al, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000045a372: in al, 0xf3; ret; 
0x000000000047370b: in al, 0xf; lahf; ret; 
0x0000000000430f46: in al, 1; add byte ptr [rax - 0x73], cl; adc eax, 0x1e5e0; cmovne rax, rdx; ret; 
0x0000000000455e08: in al, 6; add byte ptr [rax], al; ret; 
0x00000000004a1661: in al, dx; add al, byte ptr [rax]; divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x00000000004a1669: in al, dx; add al, byte ptr [rax]; ret; 
0x0000000000431afc: in al, dx; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x000000000049ab82: in al, dx; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], 0x83; ret 0x4801; 
0x00000000004a2a54: in al, dx; cmc; dec dword ptr [rbp - 0x75]; adc cl, byte ptr [rcx + 1]; ret 0xef89; 
0x00000000004429a0: in al, dx; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004645f0: in al, dx; mov bh, 0xfc; dec dword ptr [rax - 0x77]; ret; 
0x0000000000481917: in al, dx; mov eax, r11d; and eax, 0xc; cmp eax, 4; je 0x81924; ret; 
0x000000000043d24a: in al, dx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004429aa: in al, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000045fa5b: in al, dx; nop dword ptr [rax]; endbr64; ret; 
0x0000000000483fb3: in al, dx; or al, ch; push rsi; sal edi, 1; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x000000000048b5d0: in al, dx; or bh, bh; adc eax, 0x57ba8; xor eax, eax; add rsp, 8; ret; 
0x0000000000404df8: in al, dx; or byte ptr [rax - 0x7b], cl; div byte ptr [rbp + rcx - 0x75]; or byte ptr [rbx + 0x518d0c46], r9b; add bh, byte ptr [rcx]; ret 0x1477; 
0x00000000004381f4: in al, dx; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000042d4c0: in al, dx; ret 0xffff; 
0x00000000004a4459: in al, dx; sbb byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; ret; 
0x0000000000439843: in al, dx; vptest ymm5, ymm0; jae 0x39ae0; xor eax, eax; vzeroupper; ret; 
0x0000000000404c54: in al, dx; xor eax, eax; ret; 
0x000000000043d056: in eax, 0x4c; mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000049c92a: in eax, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x000000000045a839: in eax, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000044262a: in eax, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x00000000004841d3: in eax, 0xf; je 0x841f0; add rax, 2; ret; 
0x00000000004685c6: in eax, dx; add al, byte ptr [rax]; add byte ptr [rbp - 0x1a77f02e], al; add al, byte ptr [rax]; add bh, dh; ret 0xf800; 
0x0000000000494852: in eax, dx; add dword ptr [rax + 0x39], ecx; ret; 
0x000000000049e8b4: in eax, dx; cmp cx, 0x7fff; jne 0x9e89c; mov eax, 1; ret; 
0x00000000004a6575: in eax, dx; jne 0xa6560; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000442a20: in eax, dx; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000458ec2: in eax, dx; lea rax, [rcx - 1]; ret; 
0x0000000000408cd2: in eax, dx; mov eax, 0xffffffef; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000408942: in eax, dx; mov eax, 0xffffffef; pop rbx; pop rbp; pop r12; ret; 
0x0000000000408a02: in eax, dx; mov eax, 0xffffffef; ret; 
0x000000000043d05a: in eax, dx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000442a2a: in eax, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000042681a: in eax, dx; ret; 
0x000000000048f75c: in eax, dx; stc; dec dword ptr [rax - 0x77]; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x0000000000459012: in eax, dx; sub rax, 1; ret; 
0x0000000000410cda: inc byte ptr [rax + 0xd]; add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rbx + 0xd40b415], cl; add dh, dh; ret 0x7408; 
0x000000000045d526: inc byte ptr [rbp - 0x60f0be2e]; vpaddsw ymm0, ymm15, ymmword ptr [rcx + 0xf]; lahf; ret; 
0x000000000046d9e9: inc byte ptr [rbx]; je 0x6d9f0; ret; 
0x0000000000485137: inc byte ptr [rip - 0x38c6b800]; ja 0x85168; xor eax, eax; ret; 
0x000000000048efac: inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x000000000048efad: inc dword ptr [rax + 0x10]; pop rbx; pop rbp; ret; 
0x000000000045bc4b: inc dword ptr [rax - 0x7af0f506]; ret; 
0x00000000004888c1: inc dword ptr [rax - 0x7bf0c506]; ret; 
0x00000000004a138a: inc dword ptr [rax]; add byte ptr [rax - 0x75], cl; je 0xa13b5; adc byte ptr [rcx - 0x77], cl; ret; 
0x0000000000473a29: inc dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000043b191: inc dword ptr [rax]; add byte ptr [rax], al; and ecx, 0xff; sub eax, ecx; ret; 
0x000000000045a7e0: inc dword ptr [rax]; add byte ptr [rax], al; cmove rax, rcx; ret; 
0x000000000043b197: inc dword ptr [rax]; add byte ptr [rax], al; sub eax, ecx; ret; 
0x000000000040336d: inc dword ptr [rax]; add byte ptr [rax], al; xor byte ptr [rsp + rbx - 0x7f], 0xff; add byte ptr [rax], al; sar byte ptr [rdi + 0x74], 4; ret; 
0x00000000004293ca: inc dword ptr [rax]; add byte ptr [rsi + 1], dh; ret; 
0x000000000040dc8f: inc dword ptr [rbp + 0x31]; in al, 0x4c; mov eax, esp; pop r12; ret; 
0x000000000048e4ab: inc dword ptr [rbp + 0x31]; ror byte ptr [rax - 0x7b], 0xf6; je 0x8e4b7; mov qword ptr [rsi], rdi; mov rax, r8; ret; 
0x0000000000469bc9: inc dword ptr [rbp + 0x31]; ror byte ptr [rcx - 0x7d], cl; ret 0x4b01; 
0x000000000042c576: inc dword ptr [rbp + 0x31]; shl byte ptr [rdi + rax*8], 0xc; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x0000000000408f48: inc dword ptr [rbp + 0x480b78c0]; add esp, 0x18; pop rbp; pop r12; ret; 
0x0000000000497e94: inc dword ptr [rbp + 0x480e74c0]; lea eax, [rip + 0x4d1a0]; mov qword ptr [rip + 0x4d181], rax; add rsp, 8; ret; 
0x000000000048fa42: inc dword ptr [rbp + 0x481975c0]; mov dword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x536f2], 1; ret; 
0x0000000000407fa2: inc dword ptr [rbp + 0x48b979c0]; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000040dbea: inc dword ptr [rbp + 0xb8c0]; add byte ptr [rax], al; cmovne r12, rax; mov rax, r12; pop r12; ret; 
0x000000000049eb66: inc dword ptr [rbp - 0x3f6af040]; add rsp, 8; movzx eax, al; neg eax; ret; 
0x0000000000473708: inc dword ptr [rbp - 0x7b]; in al, 0xf; lahf; ret; 
0x000000000040263e: inc dword ptr [rbp - 0x7b]; sal byte ptr [rsp + rcx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000048c46a: inc dword ptr [rbx + 0x7425087b]; fisttp word ptr [rax - 0x7d]; ret; 
0x00000000004030b3: inc dword ptr [rbx + 0x77401f8]; xor eax, eax; pop r12; ret; 
0x0000000000464d00: inc dword ptr [rbx + 0x801340d]; add byte ptr [rdx], al; add rsp, 8; ret; 
0x0000000000477b56: inc dword ptr [rbx - 0x78f0d008]; mov ecx, 0x89000002; ret 0xc083; 
0x000000000041ccfc: inc dword ptr [rbx - 0x7af0fe08]; ret 0xfff2; 
0x000000000045a8bb: inc dword ptr [rbx]; div ecx; mov eax, eax; ret; 
0x00000000004a450c: inc dword ptr [rbx]; jne 0xa4530; add rsp, 8; ret; 
0x000000000045a80c: inc dword ptr [rbx]; ret; 
0x0000000000402675: inc dword ptr [rcx + 0x5c]; pop r13; ret; 
0x00000000004a5497: inc dword ptr [rcx + 0xf]; mov dh, 0x55; and byte ptr [rcx - 0x75], cl; insd dword ptr [rdi], dx; sbb dh, dh; ret 0xf01; 
0x000000000047ae25: inc dword ptr [rcx + 0xf]; mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x0000000000495f4d: inc dword ptr [rcx + 0xf]; xchg eax, esp; ret 0x8545; 
0x000000000049e9cb: inc dword ptr [rcx + rbp - 0x38]; movhps xmm0, qword ptr [rsp - 0x18]; movups xmmword ptr [rdi], xmm0; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000049ea11: inc dword ptr [rcx + rbp - 0x40]; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000042540b: inc dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x000000000046a5c1: inc dword ptr [rcx - 0x77]; ret; 
0x000000000047427b: inc dword ptr [rcx - 1]; push rsp; ret; 
0x000000000047b625: inc dword ptr [rcx]; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000407a37: inc dword ptr [rcx]; ret; 
0x000000000044d43d: inc dword ptr [rip - 0x7cb80000]; ret 0x4910; 
0x00000000004590ea: inc eax; add rsp, 0x100; sub rax, rdx; ret; 
0x00000000004590e7: inc eax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x00000000004590e4: inc eax; inc rax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x0000000000439aec: inc ebp; std; xlatb; ret 0xe883; 
0x000000000049b282: inc edi; sbb byte ptr [rdx], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004590e9: inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x00000000004590e6: inc rax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x00000000004590e3: inc rax; inc rax; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x0000000000407e1f: insb byte ptr [rdi], dx; add al, byte ptr [rax]; nop word ptr [rax + rax]; ret; 
0x0000000000438974: insb byte ptr [rdi], dx; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000489240: insb byte ptr [rdi], dx; imul esp, dword ptr [rdx + 0x48], 0x9480733; ret 0x1475; 
0x0000000000485667: insb byte ptr [rdi], dx; imul esp, dword ptr [rdx + 0x49], 0x39740039; leave; xor eax, eax; ret; 
0x0000000000423d5f: insb byte ptr [rdi], dx; ret 0x110f; 
0x000000000048a0e2: insb byte ptr [rdi], dx; ret 0x290f; 
0x000000000042926f: insb byte ptr [rdi], dx; ret 0x4d83; 
0x000000000042221d: insb byte ptr [rdi], dx; ret 0x7589; 
0x000000000042c4e8: insb byte ptr [rdi], dx; ret 0x8348; 
0x0000000000413be9: insb byte ptr [rdi], dx; ret 0x8941; 
0x0000000000413486: insb byte ptr [rdi], dx; ret 0xf41; 
0x000000000041e7aa: insb byte ptr [rdi], dx; ret; 
0x00000000004223a1: insb byte ptr [rdi], dx; ror byte ptr [rdi], 0x11; add ah, byte ptr [rsi + 0xf]; outsd dx, dword ptr [rsi]; ret 0x34e9; 
0x000000000042a2fb: insb byte ptr [rdi], dx; ror byte ptr [rdi], 0x11; add byte ptr [rax + 0x39], cl; ret 0xeb75; 
0x0000000000426e73: insb byte ptr [rdi], dx; ror dword ptr [rdi], 0x11; cmp byte ptr [r11 + 0x5d], bl; pop r12; ret; 
0x0000000000480d98: insb byte ptr [rdi], dx; ror dword ptr [rdi], 0x11; xor byte ptr [rcx + 0x5d5b7453], cl; pop r12; ret; 
0x000000000048ee2f: insd dword ptr [rdi], dx; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4c08; 
0x00000000004a3cf9: insd dword ptr [rdi], dx; call 0xfffffffff07fc84b; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x00000000004a3fc1: insd dword ptr [rdi], dx; call 0xfffffffff07fcb13; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x00000000004a41e3: insd dword ptr [rdi], dx; call 0xfffffffff07fcd35; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x0000000000480738: insd dword ptr [rdi], dx; ror byte ptr [rax - 0x77], 0x48; adc byte ptr [rax - 0x77], cl; push rax; movups xmmword ptr [rax], xmm0; ret; 
0x0000000000426871: insd dword ptr [rdi], dx; ror byte ptr [rax - 0x77], 0x57; sbb byte ptr [rax - 0x77], cl; movups xmmword ptr [rdi + 8], xmm0; ret; 
0x00000000004a549f: insd dword ptr [rdi], dx; sbb dh, dh; ret 0xf01; 
0x0000000000485e83: int 0; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004982a2: int 4; add al, ch; push rsi; jge 0x9825f; dec dword ptr [rax - 0x77]; ret; 
0x000000000043a8bf: int 8; add byte ptr [rax], al; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x00000000004677bd: int1; add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret 0x860f; 
0x00000000004958a6: int1; add r8d, eax; mov eax, r8d; ret; 
0x0000000000433398: int1; bsf rcx, rcx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000045a086: int1; dec byte ptr [rax + 0x7f]; jg 0x5a08f; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000045a210: int1; dec byte ptr [rax + 0x7f]; jg 0x5a219; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x0000000000459eb0: int1; dec byte ptr [rax + 0x7f]; jl 0x59ecd; cld; vzeroupper; ret; 
0x0000000000427a5b: int1; ja 0x27a50; lea eax, [rdx + rdi]; ret; 
0x0000000000445e65: int1; jl 0x45eb0; adc dword ptr [rdi + 1], ecx; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x00000000004592b1: int1; jl 0x592fc; adc dword ptr [rsi - 3], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592b8: int1; jl 0x59303; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592bf: int1; jl 0x5930a; adc dword ptr [rsi - 1], edx; ret; 
0x00000000004592d2: int1; jl 0x5931d; adc dword ptr [rdi + 1], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592d9: int1; jl 0x59324; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592e0: int1; jl 0x5932b; adc dword ptr [rsi - 1], edx; ret; 
0x00000000004592ed: int1; jl 0x59338; adc dword ptr [rdi], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592f3: int1; jl 0x5933e; adc dword ptr [rsi - 1], edx; ret; 
0x00000000004593ba: int1; jl 0x59405; adc dword ptr [rsi - 3], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004593c1: int1; jl 0x5940c; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004593c8: int1; jl 0x59413; adc dword ptr [rsi - 1], edx; ret; 
0x0000000000459412: int1; jl 0x5945d; adc dword ptr [rsi + 1], edx; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x0000000000459419: int1; jl 0x59464; adc dword ptr [rsi + 2], edx; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x0000000000459420: int1; jl 0x5946b; adc dword ptr [rsi + 3], edx; ret; 
0x00000000004594af: int1; jl 0x594fa; adc dword ptr [rsi + 5], edx; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x00000000004594b6: int1; jl 0x59501; adc dword ptr [rsi + 6], edx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x00000000004594bd: int1; jl 0x59508; adc dword ptr [rsi + 7], edx; ret; 
0x00000000004570f3: int1; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000045a8be: int1; mov eax, eax; ret; 
0x000000000044241b: int1; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043d81f: int1; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000442413: int1; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043d997: int1; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d9b3: int1; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000458673: int1; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x0000000000483d7e: int1; ret; 
0x000000000048f6ce: int1; shl rcx, 4; cmp r8, qword ptr [rcx + rsi + 0x10]; jae 0x8f685; xor eax, eax; ret; 
0x0000000000458677: int1; sub eax, edx; ret; 
0x00000000004398d1: int1; sub rax, rcx; je 0x398e0; sbb eax, eax; or eax, 1; ret; 
0x000000000049c920: int1; sub rcx, qword ptr [rax + 0x10]; cmp rcx, qword ptr [rax + 0x28]; jae 0x9c910; mov eax, 1; ret; 
0x00000000004570e9: int1; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e9b9: int1; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x000000000044e9c3: int1; vzeroupper; ret; 
0x000000000042936b: int1; xchg eax, ebx; or eax, dword ptr [rax]; ret; 
0x000000000044c86d: iretd; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000048897b: iretd; add eax, 0x3d8b4800; ret; 
0x0000000000482de3: iretd; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x0000000000495892: iretd; ja 0x95878; mov eax, r8d; ret; 
0x00000000004595de: iretd; jb 0x59748; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000459949: iretd; jb 0x59b15; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000459d94: iretd; jb 0x59fd0; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000433462: iretd; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x00000000004348c6: iretd; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000004a45ad: iretd; nop; xor eax, eax; ret; 
0x000000000047c15d: iretd; or eax, dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret 0xb8; 
0x00000000004115e5: ja 0x1159c; add al, 0; cmp eax, -1; je 0x116d8; add rsp, 0x98; ret; 
0x00000000004a1800: ja 0x171e; and edi, 0x60; jne 0x171e; xor eax, eax; add rsp, 8; ret; 
0x0000000000427a5c: ja 0x27a50; lea eax, [rdx + rdi]; ret; 
0x00000000004285ed: ja 0x28607; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x0000000000429168: ja 0x2919b; test byte ptr [rcx + rcx*4 - 0x11], 0xe8; fnstsw dword ptr [rsi - 3]; dec dword ptr [rax - 0x77]; ret; 
0x00000000004319c5: ja 0x3194a; add al, byte ptr [rax]; cmove rax, rdx; ret; 
0x0000000000446337: ja 0x46332; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x0000000000404e0a: ja 0x4e20; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000044e8c9: ja 0x4e960; je 0x4e950; mov byte ptr [rdi], 0; vzeroupper; ret; 
0x000000000044f324: ja 0x4eff0; je 0x4efe0; vzeroupper; ret; 
0x000000000044f200: ja 0x4f0d0; je 0x4f0c0; vzeroupper; ret; 
0x000000000044f24a: ja 0x4f28c; sub r8, 0x20; jb 0x4ee65; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vzeroupper; ret; 
0x00000000004553f7: ja 0x553fb; ret; 
0x0000000000455413: ja 0x55419; mov dword ptr [rdi], ecx; ret; 
0x0000000000455454: ja 0x5545e; mov qword ptr [rdi], rcx; ret; 
0x00000000004554d9: ja 0x554eb; ret; 
0x000000000045552f: ja 0x55545; ret; 
0x00000000004555b1: ja 0x555cb; ret; 
0x0000000000455c77: ja 0x55c7b; sub r8, 3; lea rdi, [rdi + 3]; jne 0x564f0; ret; 
0x0000000000455cb3: ja 0x55cb9; mov dword ptr [rdi], ecx; sub r8, 5; lea rdi, [rdi + 5]; jne 0x564f0; ret; 
0x0000000000455d34: ja 0x55d3e; mov qword ptr [rdi], rcx; sub r8, 9; lea rdi, [rdi + 9]; jne 0x564f0; ret; 
0x0000000000455e39: ja 0x55e4b; sub r8, 0x11; lea rdi, [rdi + 0x11]; jne 0x564f0; ret; 
0x0000000000455ebf: ja 0x55ed5; sub r8, 0x15; lea rdi, [rdi + 0x15]; jne 0x564f0; ret; 
0x0000000000455f41: ja 0x55f5b; sub r8, 0x19; lea rdi, [rdi + 0x19]; jne 0x564f0; ret; 
0x00000000004565e7: ja 0x56609; sub r8, 0x10; jb 0x55b99; movdqu xmmword ptr [rdi + 0x30], xmm7; ret; 
0x0000000000456a37: ja 0x56a3b; lea rax, [rdi + 2]; ret; 
0x0000000000456a53: ja 0x56a59; mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x0000000000456aa4: ja 0x56aae; mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x0000000000456b89: ja 0x56b9b; lea rax, [rdi + 0x10]; ret; 
0x0000000000456bff: ja 0x56c15; lea rax, [rdi + 0x14]; ret; 
0x0000000000456c81: ja 0x56c9b; lea rax, [rdi + 0x18]; ret; 
0x0000000000456fd9: ja 0x57070; je 0x57060; mov byte ptr [rdi], 0; lea rax, [rdi]; vzeroupper; ret; 
0x00000000004595f8: ja 0x59620; jb 0x59601; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x00000000004595b1: ja 0x59631; movups xmm0, xmmword ptr [rsi]; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x00000000004597c4: ja 0x597e6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x0000000000459892: ja 0x598b4; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x0000000000459968: ja 0x599a5; jb 0x59971; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x0000000000459bac: ja 0x59bee; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x0000000000459cc8: ja 0x59d0a; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x0000000000459db8: ja 0x59e0d; jb 0x59dc1; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000045a083: ja 0x5a087; vmovdqu64 zmmword ptr [rdi + 0xc0], zmm7; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000045a20d: ja 0x5a211; vmovdqu64 zmmword ptr [rdi + 0xc0], zmm7; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000045a2e6: ja 0x5a2f3; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045a276: ja 0x5a2fc; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045a300: ja 0x5a318; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000045a387: ja 0x5a39e; jb 0x5a38d; mov byte ptr [rdi], cl; ret; 
0x000000000045a43e: ja 0x5a44e; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000045a3ee: ja 0x5a457; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000045a4f5: ja 0x5a523; jb 0x5a4fb; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000045a5d7: ja 0x5a5eb; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000045a577: ja 0x5a5f4; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x000000000045a6bd: ja 0x5a6f9; jb 0x5a6c3; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000045bed0: ja 0x5bed8; ret; 
0x000000000045bec1: ja 0x5bef0; mov eax, 4; syscall; cmp rax, -0x1000; ja 0x5bed8; ret; 
0x000000000045bf2f: ja 0x5bf38; ret; 
0x000000000045bf20: ja 0x5bf50; mov eax, 5; syscall; cmp rax, -0x1000; ja 0x5bf38; ret; 
0x000000000045c0b8: ja 0x5c110; ret; 
0x000000000045c15d: ja 0x5c1b0; ret; 
0x000000000045c1f1: ja 0x5c1f8; ret; 
0x000000000045c32d: ja 0x5c370; ret; 
0x000000000045cb41: ja 0x5cb48; ret; 
0x000000000045cdfe: ja 0x5ce08; ret; 
0x000000000045ce31: ja 0x5ce38; ret; 
0x000000000045ce6a: ja 0x5ce70; ret; 
0x000000000045d05c: ja 0x5d0c0; pop rbx; pop rbp; ret; 
0x000000000045fb0c: ja 0x5fb24; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000045fb22: ja 0x5fb44; ret; 
0x000000000045fb78: ja 0x5fb8c; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x0000000000407d25: ja 0x7ce8; cmp esi, edx; setb al; ret; 
0x0000000000407d36: ja 0x7d14; mov eax, 1; ret; 
0x000000000048167c: ja 0x81670; lea eax, [rdx + rdi]; ret; 
0x00000000004834d8: ja 0x83522; add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x0000000000484648: ja 0x84692; add eax, edi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x00000000004847f5: ja 0x847c0; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000484f60: ja 0x84f68; ret; 
0x0000000000484f51: ja 0x84f80; mov eax, 6; syscall; cmp rax, -0x1000; ja 0x84f68; ret; 
0x0000000000484fc5: ja 0x84fd0; ret; 
0x0000000000484fb6: ja 0x84fe8; mov eax, 0x106; syscall; cmp rax, -0x1000; ja 0x84fd0; ret; 
0x0000000000485131: ja 0x85148; mov qword ptr [rip + 0x5fe5e], rax; cmp rdi, rax; ja 0x85168; xor eax, eax; ret; 
0x000000000048513d: ja 0x85168; xor eax, eax; ret; 
0x000000000048f0db: ja 0x8f0e8; add rsp, 8; ret; 
0x000000000049254d: ja 0x92520; mov rax, r8; ret; 
0x0000000000495893: ja 0x95878; mov eax, r8d; ret; 
0x0000000000498f71: ja 0x98f78; ret; 
0x0000000000498fb4: ja 0x98fc0; ret; 
0x000000000049eb8e: ja 0x9eb98; mov rdi, qword ptr [rdi]; call 0xa0d70; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x000000000049ec52: ja 0x9ec5c; mov rdi, qword ptr [rdi]; call 0xa0a40; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x00000000004a17d3: ja 0xa17e8; cmp al, 0x20; jne 0xa1800; mov rax, qword ptr [rsi + 0xa8]; add rsp, 8; ret; 
0x00000000004a4361: ja 0xa4365; sbb eax, eax; ret; 
0x000000000040aaac: ja 0xaac0; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x000000000040aac9: ja 0xaad8; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000040b4b3: ja 0xb495; or dword ptr [rax], eax; ret; 
0x000000000040b72c: ja 0xb740; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x000000000040b749: ja 0xb758; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000040c24c: ja 0xc260; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x000000000040c269: ja 0xc278; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000040cd8c: ja 0xcda0; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x000000000040cda9: ja 0xcdb8; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000040d7e3: ja 0xd7a2; or dword ptr [rax], eax; ret; 
0x00000000004289b1: jae 0x289d8; movzx eax, byte ptr [rax]; ret; 
0x0000000000438b7b: jae 0x38ee0; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x0000000000439849: jae 0x39ae0; xor eax, eax; vzeroupper; ret; 
0x000000000044f31a: jae 0x4f000; cmp r8d, 1; ja 0x4eff0; je 0x4efe0; vzeroupper; ret; 
0x000000000044f1f6: jae 0x4f0e0; cmp r8d, 1; ja 0x4f0d0; je 0x4f0c0; vzeroupper; ret; 
0x000000000045a382: jae 0x5a397; cmp dl, 1; ja 0x5a39e; jb 0x5a38d; mov byte ptr [rdi], cl; ret; 
0x000000000045be31: jae 0x5be34; ret; 
0x000000000045c3b1: jae 0x5c3b4; ret; 
0x000000000045cf41: jae 0x5cf44; ret; 
0x000000000045d013: jae 0x5d016; ret; 
0x000000000045d0f1: jae 0x5d0f4; ret; 
0x000000000045d121: jae 0x5d124; ret; 
0x000000000045d151: jae 0x5d154; ret; 
0x000000000045f8b4: jae 0x5f8b7; ret; 
0x000000000045f8e4: jae 0x5f8e7; ret; 
0x000000000045f911: jae 0x5f914; ret; 
0x000000000046ff5d: jae 0x6ff9f; xor eax, eax; pop rbx; ret; 
0x000000000046ff80: jae 0x6ffc2; pop rbx; ret; 
0x0000000000484ee1: jae 0x84ee4; ret; 
0x000000000048f6d8: jae 0x8f685; xor eax, eax; ret; 
0x00000000004924c8: jae 0x924ac; mov rax, r8; ret; 
0x000000000049887a: jae 0x98870; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000049901c: jae 0x9902a; mov rdx, qword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000049c929: jae 0x9c910; mov eax, 1; ret; 
0x000000000049d152: jae 0x9d19d; shr ecx, cl; mov qword ptr [rdi], r9; ret; 
0x000000000049ed31: jae 0x9ed34; ret; 
0x00000000004a7cfd: jae 0xa7cd1; add eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000040c629: jae 0xc63f; add byte ptr [rax], al; nop dword ptr [rax]; mov eax, 0xffffff94; ret; 
0x000000000042d7b2: jb 0x2d790; mov byte ptr [r8 + rbx], cl; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x000000000042d9a9: jb 0x2d988; mov byte ptr [r8 + rbp], cl; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000000042efe6: jb 0x2eff0; add al, ch; ret 0xffa7; 
0x0000000000445eab: jb 0x45ec1; vmovdqu ymm0, ymmword ptr [rsi]; vmovdqu ymm1, ymmword ptr [rcx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x0000000000445ed8: jb 0x45ee9; mov rsi, qword ptr [rsi]; mov rcx, qword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x0000000000445eec: jb 0x45efa; mov esi, dword ptr [rsi]; mov ecx, dword ptr [rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x0000000000445efd: jb 0x45f0f; mov si, word ptr [rsi]; mov cx, word ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x0000000000445f12: jb 0x45f18; mov cl, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000044f250: jb 0x4ee65; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vzeroupper; ret; 
0x00000000004565de: jb 0x55b99; movdqu xmmword ptr [rdi + 0x20], xmm6; sub r8, 0x10; jb 0x55b99; movdqu xmmword ptr [rdi + 0x30], xmm7; ret; 
0x00000000004565ed: jb 0x55b99; movdqu xmmword ptr [rdi + 0x30], xmm7; ret; 
0x00000000004592ea: jb 0x592fa; vmovups zmmword ptr [rdi], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592fd: jb 0x59309; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x0000000000459316: jb 0x59322; vmovq qword ptr [rdi], xmm0; vmovq qword ptr [rsi - 8], xmm0; ret; 
0x0000000000459329: jb 0x59331; mov dword ptr [rdi], ecx; mov dword ptr [rsi - 4], ecx; ret; 
0x0000000000459334: jb 0x5933e; mov word ptr [rdi], cx; mov word ptr [rsi - 2], cx; ret; 
0x0000000000459341: jb 0x59345; mov byte ptr [rdi], cl; ret; 
0x000000000045956d: jb 0x59572; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x00000000004595fa: jb 0x59601; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x00000000004595df: jb 0x59748; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000045996a: jb 0x59971; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000045994a: jb 0x59b15; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000459dba: jb 0x59dc1; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x0000000000459d95: jb 0x59fd0; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000045a389: jb 0x5a38d; mov byte ptr [rdi], cl; ret; 
0x000000000045a4f7: jb 0x5a4fb; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000045a6bf: jb 0x5a6c3; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x000000000045fb06: jb 0x5fb24; cmp rdx, qword ptr [rdi + 0x18]; ja 0x5fb24; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000045fb72: jb 0x5fb8c; cmp rcx, qword ptr [rax + 0x18]; ja 0x5fb8c; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x0000000000485665: jb 0x85696; insb byte ptr [rdi], dx; imul esp, dword ptr [rdx + 0x49], 0x39740039; leave; xor eax, eax; ret; 
0x000000000048923e: jb 0x8926f; insb byte ptr [rdi], dx; imul esp, dword ptr [rdx + 0x48], 0x9480733; ret 0x1475; 
0x000000000048e3b8: jb 0x8e3c8; mov rcx, rax; cmp rcx, rdx; jne 0x8e398; mov eax, dword ptr [rcx]; ret; 
0x000000000049a9b2: jb 0x9a998; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000040a42d: jb 0xa477; mov eax, 0x4ded80; ret; 
0x000000000040d893: jb 0xd852; or dword ptr [rax], eax; ret; 
0x0000000000401e7a: jbe 0x1e4c; mov rax, qword ptr [rbp - 0x10]; mov rdi, rax; call 0x2700; leave; ret; 
0x000000000042938d: jbe 0x29390; ret; 
0x00000000004293cd: jbe 0x293d0; ret; 
0x000000000042972d: jbe 0x29730; ret; 
0x000000000042978d: jbe 0x29790; ret; 
0x0000000000436387: jbe 0x36394; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000437af7: jbe 0x37b04; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000438ad7: jbe 0x38ae4; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000438ce7: jbe 0x38ee0; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000438d21: jbe 0x38ee0; movzx eax, byte ptr [rax + rdi]; movzx edx, byte ptr [rdx + rdi]; sub eax, edx; vzeroupper; ret; 
0x000000000048266f: jbe 0x82910; add rax, rdi; add rax, rcx; ret; 
0x00000000004828d6: jbe 0x82910; add rax, rdi; ret; 
0x00000000004828e6: jbe 0x82910; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004828f6: jbe 0x82910; lea rax, [rdi + rax + 0x20]; ret; 
0x0000000000482906: jbe 0x82910; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000482b27: jbe 0x82b80; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000482b47: jbe 0x82b80; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000482b67: jbe 0x82b80; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000000482b17: jbe 0x82b80; add rax, rdi; vzeroupper; ret; 
0x00000000004834f7: jbe 0x83550; add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000483517: jbe 0x83550; add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000483537: jbe 0x83550; add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x00000000004834d7: jbe 0x83550; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000484647: jbe 0x846c0; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000048f6cd: jbe 0x8f6c0; shl rcx, 4; cmp r8, qword ptr [rcx + rsi + 0x10]; jae 0x8f685; xor eax, eax; ret; 
0x0000000000490da8: jbe 0x90d90; cmp ecx, r8d; je 0x90cfa; mov eax, ecx; sub eax, r8d; ret; 
0x00000000004916b3: jbe 0x916c0; ret; 
0x0000000000498b3c: jbe 0x98b8d; xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x0000000000498bde: jbe 0x98c2f; adc byte ptr [rsi + 0xf], ah; xlatb; rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x00000000004989cf: jbe 0x98c70; add rax, rdi; add rax, rcx; ret; 
0x0000000000498c36: jbe 0x98c70; add rax, rdi; ret; 
0x0000000000498c46: jbe 0x98c70; lea rax, [rdi + rax + 0x10]; ret; 
0x0000000000498c56: jbe 0x98c70; lea rax, [rdi + rax + 0x20]; ret; 
0x0000000000498c66: jbe 0x98c70; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000498e87: jbe 0x98ee0; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000498ea7: jbe 0x98ee0; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000498ec7: jbe 0x98ee0; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000000498e77: jbe 0x98ee0; add rax, rdi; vzeroupper; ret; 
0x000000000049ba36: jbe 0x9ba3c; add al, ch; ret 0xb645; 
0x000000000040a39e: jbe 0xa3f4; cmp edi, 0xe0000008; jne 0xa4a0; mov rax, 0x4dee00; ret; 
0x000000000040a3e1: jbe 0xa436; cmp edi, 0x16; jne 0xa4a0; mov rax, 0x4def00; ret; 
0x000000000040a424: jbe 0xa448; cmp edi, 0xc0000008; jne 0xa4a0; mov rax, 0x4ded80; ret; 
0x00000000004a4503: jbe 0xa4518; mov eax, 4; cmp dil, 3; jne 0xa4530; add rsp, 8; ret; 
0x00000000004a4573: jbe 0xa4598; cmp al, 0x30; jne 0xa4588; mov rax, qword ptr [rsi + 0x10]; add rsp, 8; ret; 
0x00000000004a45d3: jbe 0xa45f8; cmp al, 0x30; jne 0xa45e8; mov rax, qword ptr [rsi + 0x10]; add rsp, 8; ret; 
0x00000000004a6716: jbe 0xa66fd; add eax, dword ptr [rax]; test rbx, rbx; jne 0xa6700; pop rbx; ret; 
0x000000000040d883: jbe 0xd842; or dword ptr [rax], eax; ret; 
0x0000000000401012: je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004115ec: je 0x116d8; add rsp, 0x98; ret; 
0x00000000004159ee: je 0x159f6; add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x0000000000401d4e: je 0x1d5a; mov edi, 0x4d08d0; call 0xa5cc0; mov byte ptr [rip + 0xe251f], 1; pop rbp; ret; 
0x000000000040207b: je 0x2082; cmp edi, -0x5f; jne 0x2083; ret; 
0x0000000000420d04: je 0x20d34; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000040217c: je 0x2180; ret; 
0x00000000004222a8: je 0x22266; add rsp, 8; mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000000422292: je 0x222aa; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000042331c: je 0x2331f; ret; 
0x00000000004024d8: je 0x24f0; mov eax, 0xffffffea; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000402555: je 0x2560; mov eax, dword ptr [rax]; add rsp, 8; ret; 
0x0000000000402642: je 0x2650; pop rbp; pop r12; pop r13; ret; 
0x00000000004026b2: je 0x26c0; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000426df9: je 0x26e00; ret; 
0x0000000000402718: je 0x2720; pop rbp; ret; 
0x00000000004277cb: je 0x277dc; mov qword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x0000000000402772: je 0x2780; pop rbp; pop r12; pop r13; ret; 
0x0000000000427989: je 0x2798e; and dword ptr [rbx], 0xffffffef; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000427a57: je 0x27a68; cmp rcx, rsi; ja 0x27a50; lea eax, [rdx + rdi]; ret; 
0x00000000004027c2: je 0x27d0; pop rbp; pop r12; pop r13; ret; 
0x00000000004284f3: je 0x28505; mov rdx, rax; mov rax, qword ptr [rax]; test rax, rax; jne 0x284f0; ret; 
0x00000000004289a8: je 0x289c0; mov rax, qword ptr [rdi + 8]; cmp rax, rdx; jae 0x289d8; movzx eax, byte ptr [rax]; ret; 
0x00000000004296b0: je 0x296b5; pop rbx; pop rbp; ret; 
0x0000000000429dfc: je 0x29e10; mov qword ptr [rdx + 0x28], rcx; mov rax, qword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x000000000042aca9: je 0x2acb8; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000042d3ec: je 0x2d3f3; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000402eaa: je 0x2eb0; pop rbp; ret; 
0x0000000000402eec: je 0x2f00; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x000000000043049a: je 0x304a8; lea rax, [rax - 0x10]; ret; 
0x0000000000430495: je 0x304c8; test rsi, rsi; je 0x304a8; lea rax, [rax - 0x10]; ret; 
0x00000000004030b7: je 0x30c0; xor eax, eax; pop r12; ret; 
0x0000000000430e79: je 0x30e94; test byte ptr [rip + 0xb3f62], 0x40; lea rax, [rip + 0x1cc37]; lea rdx, [rip + 0x26290]; cmovne rax, rdx; ret; 
0x0000000000431047: je 0x3105e; and dh, 2; lea rax, [rip + 0x3afd]; lea rdx, [rip + 0x5356]; cmovne rax, rdx; ret; 
0x0000000000431687: je 0x31695; adc byte ptr [rbp - 0x7cb7fd8e], cl; ret 0x4802; 
0x0000000000431916: je 0x318e1; lea rax, [rip + 0x7e61]; test byte ptr [rip + 0xb34bf], 1; je 0x318e1; ret; 
0x0000000000431926: je 0x318e1; ret; 
0x0000000000431ac0: je 0x31ae0; test byte ptr [rip + 0xb32cc], 2; lea rdx, [rip + 0x27dd0]; lea rax, [rip + 0x27e19]; cmove rax, rdx; ret; 
0x0000000000431be0: je 0x31bf7; and dh, 2; lea rax, [rip + 0x14914]; lea rdx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x000000000043322d: je 0x33240; bsf rdx, rax; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x0000000000433459: je 0x332f5; bsf rcx, rdi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000040337a: je 0x3380; ret; 
0x0000000000403372: je 0x3390; cmp edi, 0x7fc00000; je 0x3380; ret; 
0x0000000000403853: je 0x3868; add rsp, 8; mov eax, 0xfffffff2; pop rbx; pop rbp; ret; 
0x0000000000403844: je 0x389e; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000438aba: je 0x38abd; xchg eax, edx; sub eax, edx; ret; 
0x0000000000439088: je 0x390a0; bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x00000000004391ca: je 0x3921b; xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x0000000000439283: je 0x392a0; tzcnt eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000000439881: je 0x3989a; vpmovmskb eax, ymm2; sub eax, -1; jne 0x39890; vzeroupper; ret; 
0x00000000004398d5: je 0x398e0; sbb eax, eax; or eax, 1; ret; 
0x0000000000439979: je 0x3994c; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x39890; ret; 
0x00000000004399b7: je 0x399d0; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x39890; ret; 
0x0000000000439ac6: je 0x39adf; vpmovmskb eax, ymm2; sub eax, -1; jne 0x39890; vzeroupper; ret; 
0x000000000043aef7: je 0x3aefb; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000404981: je 0x4997; mov byte ptr [rax + 0x26], 1; mov qword ptr [rax + 0x10], -1; mov qword ptr [rax + 0x18], -1; add rsp, 8; ret; 
0x0000000000404c3b: je 0x4c50; mov qword ptr [rdx + 8], rax; call 0x2ead0; mov rax, rbx; pop rbx; ret; 
0x000000000044dd35: je 0x4dd40; bsf eax, eax; lea rax, [rdi + rax]; ret; 
0x000000000044e1a1: je 0x4e1c0; tzcnt eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x000000000044e350: je 0x4e332; pmovmskb edx, xmm4; test edx, edx; je 0x4e35e; bsf eax, edx; ret; 
0x000000000044e358: je 0x4e35e; bsf eax, edx; ret; 
0x000000000044e3fd: je 0x4e410; bsf rax, rdx; ret; 
0x000000000044e3a0: je 0x4e420; bsf rax, rdx; ret; 
0x000000000044e8cf: je 0x4e950; mov byte ptr [rdi], 0; vzeroupper; ret; 
0x000000000044ea45: je 0x4ea9d; and ch, al; std; xlatb; ror byte ptr [rcx - 0x7d], cl; ret 0x4d20; 
0x000000000044f32a: je 0x4efe0; vzeroupper; ret; 
0x000000000044f206: je 0x4f0c0; vzeroupper; ret; 
0x0000000000452ee5: je 0x52a90; mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x00000000004556fd: je 0x55745; adc byte ptr [rsi + 0xf], ah; xlatb; ror byte ptr [rcx - 0x7d], 1; ret 0x4d10; 
0x0000000000456fdf: je 0x57060; mov byte ptr [rdi], 0; lea rax, [rdi]; vzeroupper; ret; 
0x00000000004591a0: je 0x59178; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x0000000000459564: je 0x59571; lea rdx, [rsi + rcx]; cmp rdi, rdx; jb 0x59572; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000459687: je 0x596a0; ror byte ptr [rdi], 1; adc dword ptr [rdi + rdx - 0x40], edi; ret; 
0x0000000000459eac: je 0x59ec5; std; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7; vzeroupper; ret; 
0x000000000045a84d: je 0x5a76a; lea eax, [rdx + rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x000000000045a7fd: je 0x5a76a; mov eax, ecx; pop rbx; shr eax, 6; and eax, 0x3fffc00; ret; 
0x000000000045ad8d: je 0x5ada0; cmp eax, 2; je 0x5ada8; xor eax, eax; ret; 
0x000000000045ad92: je 0x5ada8; xor eax, eax; ret; 
0x000000000045ade4: je 0x5adc8; ret; 
0x000000000045c519: je 0x5c53f; or byte ptr [rdi], cl; xchg eax, ebp; ret 0x8948; 
0x000000000045cf6e: je 0x5cf71; ret; 
0x000000000046131c: je 0x61320; ret; 
0x0000000000461338: je 0x61348; mov dword ptr [rip + 0x80760], eax; pop rbx; ret; 
0x0000000000464cf0: je 0x64cf8; ret; 
0x000000000046d9e6: je 0x6d9f0; cmp esi, 3; je 0x6d9f0; ret; 
0x000000000046d9eb: je 0x6d9f0; ret; 
0x000000000046da2f: je 0x6da0f; call 0x91970; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x000000000046da0d: je 0x6da28; pop rbx; ret; 
0x000000000046fd72: je 0x6fd78; ret; 
0x00000000004077d6: je 0x77e0; ret; 
0x0000000000479b52: je 0x79b4c; dec dword ptr [rax - 0x77]; ret 0xb848; 
0x000000000048079c: je 0x807e6; add esp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000480d40: je 0x80d48; ret; 
0x0000000000480e33: je 0x80ded; add dword ptr [rax], eax; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x0000000000480da0: je 0x80dfd; pop rbp; pop r12; ret; 
0x00000000004815ae: je 0x815b3; and dword ptr [rbx], 0xffffffef; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000048160a: je 0x8160f; and dword ptr [rbx], 0xffffffef; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000481677: je 0x81688; cmp rax, rsi; ja 0x81670; lea eax, [rdx + rdi]; ret; 
0x00000000004818bd: je 0x818c0; ret; 
0x0000000000481921: je 0x81924; ret; 
0x00000000004827dc: je 0x8282d; xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x000000000048287e: je 0x828cf; adc byte ptr [rsi + 0xf], ah; xlatb; rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x0000000000482c44: je 0x82e10; bsr rax, rax; add rax, rdi; ret; 
0x0000000000482ed4: je 0x82e10; bsr rax, rsi; add rax, rdi; ret; 
0x0000000000482cde: je 0x82e10; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x000000000048306f: je 0x83024; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x0000000000483094: je 0x830b0; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x00000000004831c4: je 0x831d3; sar rdx, cl; test rdx, rdx; je 0x831f0; bsf rax, rdx; ret; 
0x0000000000483154: je 0x831d3; sar rdx, cl; test rdx, rdx; je 0x83200; bsf rax, rdx; ret; 
0x00000000004831cc: je 0x831f0; bsf rax, rdx; ret; 
0x000000000048315c: je 0x83200; bsf rax, rdx; ret; 
0x0000000000483d79: je 0x83d7f; test edx, edx; jne 0x83d70; ret; 
0x0000000000483e8c: je 0x83eb0; bsf rax, rdx; shr rax, 2; ret; 
0x0000000000483e20: je 0x83ec0; bsf rax, rdx; shr rax, 2; ret; 
0x00000000004841b9: je 0x841d0; mov cl, dl; and cl, 0xf; je 0x841e0; ret; 
0x00000000004841c0: je 0x841e0; ret; 
0x00000000004841d5: je 0x841f0; add rax, 2; ret; 
0x000000000048566d: je 0x856a8; leave; xor eax, eax; ret; 
0x000000000048e4b2: je 0x8e4b7; mov qword ptr [rsi], rdi; mov rax, r8; ret; 
0x000000000048efa9: je 0x8efac; lock inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x0000000000490dad: je 0x90cfa; mov eax, ecx; sub eax, r8d; ret; 
0x000000000049588c: je 0x958a0; movsx ecx, byte ptr [rsi]; cmp edi, ecx; ja 0x95878; mov eax, r8d; ret; 
0x0000000000497e97: je 0x97ea7; lea rax, [rip + 0x4d1a0]; mov qword ptr [rip + 0x4d181], rax; add rsp, 8; ret; 
0x0000000000498337: je 0x98343; lea rdx, [rip + 0x4b7c0]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x00000000004985d6: je 0x985e0; pop rbx; pop rbp; pop r12; ret; 
0x000000000049a95b: je 0x9a974; add rsp, 8; mov eax, 1; pop rbx; pop rbp; ret; 
0x000000000049bfda: je 0x9bfe0; ret; 
0x000000000049c965: je 0x9c950; cmp rcx, rax; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00000000004a138f: je 0xa13b5; adc byte ptr [rcx - 0x77], cl; ret; 
0x00000000004a165a: je 0xa166c; movss xmm0, dword ptr [rip + 0x2ec14]; divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x00000000004a28e3: je 0xa2934; add rsp, 0x18; ret; 
0x000000000040a3ba: je 0xa460; cmp edi, 0x40000028; jne 0xa4a0; mov rax, 0x4decc0; ret; 
0x000000000040a44e: je 0xa470; cmp edi, 0x80000016; jne 0xa4a0; mov rax, 0x4def40; ret; 
0x000000000040a439: je 0xa480; cmp edi, 0xf; jne 0xa4a0; mov rax, 0x4e1220; ret; 
0x000000000040a3fa: je 0xa490; cmp edi, 0xc00000b7; jne 0xa4a0; mov rax, 0x4e11e0; ret; 
0x00000000004a520e: je 0xa5234; or byte ptr [rax - 0x39], cl; ret 0xffff; 
0x00000000004a7dce: je 0xa7db8; xor eax, eax; add rsp, 0x10; pop rbx; ret; 
0x000000000040a8af: je 0xa8c8; cmp edx, 2; lea eax, [rsi*8 + 0x10]; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000040d88b: je 0xd84a; or dword ptr [rax], eax; ret; 
0x000000000040dc8a: je 0xdbde; xor r12d, r12d; mov rax, r12; pop r12; ret; 
0x000000000040254f: jg 0x2551; add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rcx - 0x75], 0; add rsp, 8; ret; 
0x00000000004290b3: jg 0x290b2; dec dword ptr [rax - 0x77]; ret; 
0x000000000043196d: jg 0x31971; add byte ptr [rax - 0x73], cl; add eax, 0x27f89; cmove rax, rdx; ret; 
0x000000000043d409: jg 0x3d45a; ret; 
0x000000000043d48f: jg 0x3d4d8; ret; 
0x000000000043d609: jg 0x3d65a; ret 0x894c; 
0x000000000043d68f: jg 0x3d6d8; ret 0x894c; 
0x000000000043fde9: jg 0x3fe3a; ret; 
0x000000000043fe6f: jg 0x3feb8; ret; 
0x000000000043ffe9: jg 0x4003a; ret 0x894c; 
0x000000000044006f: jg 0x400b8; ret 0x894c; 
0x00000000004423f8: jg 0x42441; loope 0x423ef; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000044246f: jg 0x424b8; ret 0xff2; 
0x00000000004424ff: jg 0x42548; ret; 
0x00000000004425a8: jg 0x425f1; in al, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000442628: jg 0x42671; in eax, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x00000000004426a8: jg 0x426f1; out 0xf3, al; movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000442728: jg 0x42771; out 0xf3, eax; movq qword ptr [rdi - 0x10], mm1; ret; 
0x00000000004429a8: jg 0x429f1; in al, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442a28: jg 0x42a71; in eax, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442ab8: jg 0x42b01; out dx, al; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442b38: jg 0x42b81; out dx, eax; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442bac: jg 0x42bb5; ret; 
0x0000000000442c06: jg 0x42c17; ret; 
0x0000000000442c01: jg 0x42c4a; psllq mm1, qword ptr [rdi]; jg 0x42c17; ret; 
0x0000000000442c76: jg 0x42c87; ret; 
0x0000000000442ce6: jg 0x42cf7; ret; 
0x0000000000442cd3: jg 0x42d1c; sbb eax, 0x46f00ff2; or eax, 0xef00ff2; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442ce1: jg 0x42d2a; or eax, 0xf7f0ff3; ret; 
0x0000000000442d56: jg 0x42d67; ret; 
0x0000000000442d51: jg 0x42d9a; or al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x0000000000442dc6: jg 0x42dd7; ret; 
0x0000000000442dc1: jg 0x42e0a; or esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x0000000000442e36: jg 0x42e47; ret; 
0x0000000000442e31: jg 0x42e7a; or dh, bl; movq qword ptr [rdi], mm1; ret; 
0x0000000000442ea6: jg 0x42eb7; ret; 
0x0000000000442ea1: jg 0x42eea; or ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x0000000000442f16: jg 0x42f27; ret; 
0x0000000000442f11: jg 0x42f5a; or bl, dh; movq qword ptr [rdi], mm1; ret; 
0x0000000000442f86: jg 0x42f97; ret; 
0x0000000000442ff6: jg 0x43007; ret; 
0x0000000000443066: jg 0x43077; ret; 
0x0000000000443053: jg 0x4309c; adc eax, 0x46f00ff2; add eax, 0xef00ff2; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000443061: jg 0x430aa; add eax, 0xf7f0ff3; ret; 
0x00000000004430d6: jg 0x430e7; ret; 
0x00000000004430d1: jg 0x4311a; add al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x0000000000443146: jg 0x43157; ret; 
0x0000000000443141: jg 0x4318a; add esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x00000000004431b6: jg 0x431c7; ret; 
0x00000000004431b1: jg 0x431fa; add dh, bl; movq qword ptr [rdi], mm1; ret; 
0x0000000000443226: jg 0x43237; ret; 
0x0000000000443221: jg 0x4326a; add ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x0000000000444f28: jg 0x44f71; loope 0x44f1f; movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000444f9f: jg 0x44fe8; ret 0xff2; 
0x000000000044502f: jg 0x45078; ret; 
0x00000000004450d8: jg 0x45121; in al, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000445158: jg 0x451a1; in eax, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x00000000004451d8: jg 0x45221; out 0xf3, al; movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000445258: jg 0x452a1; out 0xf3, eax; movq qword ptr [rdi - 0x10], mm1; ret; 
0x00000000004454d8: jg 0x45521; in al, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000445558: jg 0x455a1; in eax, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004455e8: jg 0x45631; out dx, al; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000445668: jg 0x456b1; out dx, eax; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004456dc: jg 0x456e5; ret; 
0x0000000000445736: jg 0x45747; ret; 
0x0000000000445731: jg 0x4577a; psllq mm1, qword ptr [rdi]; jg 0x45747; ret; 
0x00000000004457a6: jg 0x457b7; ret; 
0x0000000000445816: jg 0x45827; ret; 
0x0000000000445803: jg 0x4584c; sbb eax, 0x46f00ff2; or eax, 0xef00ff2; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000445811: jg 0x4585a; or eax, 0xf7f0ff3; ret; 
0x0000000000445886: jg 0x45897; ret; 
0x0000000000445881: jg 0x458ca; or al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x00000000004458f6: jg 0x45907; ret; 
0x00000000004458f1: jg 0x4593a; or esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x0000000000445966: jg 0x45977; ret; 
0x0000000000445961: jg 0x459aa; or dh, bl; movq qword ptr [rdi], mm1; ret; 
0x00000000004459d6: jg 0x459e7; ret; 
0x00000000004459d1: jg 0x45a1a; or ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x0000000000445a46: jg 0x45a57; ret; 
0x0000000000445a41: jg 0x45a8a; or bl, dh; movq qword ptr [rdi], mm1; ret; 
0x0000000000445ab6: jg 0x45ac7; ret; 
0x0000000000445b26: jg 0x45b37; ret; 
0x0000000000445b96: jg 0x45ba7; ret; 
0x0000000000445b83: jg 0x45bcc; adc eax, 0x46f00ff2; add eax, 0xef00ff2; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000445b91: jg 0x45bda; add eax, 0xf7f0ff3; ret; 
0x0000000000445c06: jg 0x45c17; ret; 
0x0000000000445c01: jg 0x45c4a; add al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x0000000000445c76: jg 0x45c87; ret; 
0x0000000000445c71: jg 0x45cba; add esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x0000000000445ce6: jg 0x45cf7; ret; 
0x0000000000445ce1: jg 0x45d2a; add dh, bl; movq qword ptr [rdi], mm1; ret; 
0x0000000000445d56: jg 0x45d67; ret; 
0x0000000000445d51: jg 0x45d9a; add ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x0000000000445e94: jg 0x45e9d; vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x0000000000445eb8: jg 0x45ec1; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x0000000000445ecc: jg 0x45ed5; vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000044633e: jg 0x46338; ret; 
0x000000000044e9bc: jg 0x4e9d5; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x000000000044e9dc: jg 0x4e9f5; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; vzeroupper; ret; 
0x000000000044ed1e: jg 0x4ed21; jne 0x4f150; vzeroupper; ret; 
0x000000000044eecc: jg 0x4eed0; jne 0x4f150; vzeroupper; ret; 
0x000000000044eef0: jg 0x4eef5; jne 0x4f150; vzeroupper; ret; 
0x000000000044ef0a: jg 0x4ef10; jne 0x4f150; vzeroupper; ret; 
0x000000000044f06d: jg 0x4f086; vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm3; vzeroupper; ret; 
0x000000000044f08d: jg 0x4f0a6; vmovdqu ymmword ptr [rdi + r8 - 0x20], ymm3; vzeroupper; ret; 
0x000000000044f0ae: jg 0x4f0c7; vmovdqu ymmword ptr [rdi + 0x20], ymm3; mov byte ptr [rdi + 0x40], cl; vzeroupper; ret; 
0x000000000044f112: jg 0x4f11b; vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm0; vzeroupper; ret; 
0x000000000044f259: jg 0x4f2bb; vzeroupper; ret; 
0x000000000044f249: jg 0x4f2c2; sub r8, 0x20; jb 0x4ee65; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vzeroupper; ret; 
0x00000000004554c6: jg 0x554cf; ret; 
0x00000000004554d6: jg 0x554df; mov byte ptr [rdi + 0x10], dh; ret; 
0x00000000004554ea: jg 0x554f3; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000455509: jg 0x55512; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000455519: jg 0x55522; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000455529: jg 0x55532; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x000000000045554a: jg 0x55553; mov qword ptr [rdi + 0xe], rcx; ret; 
0x000000000045556a: jg 0x55573; mov qword ptr [rdi + 0xf], rcx; ret; 
0x000000000045558a: jg 0x55593; mov qword ptr [rdi + 0x10], rcx; ret; 
0x00000000004555aa: jg 0x555b3; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x00000000004555ce: jg 0x555d7; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x00000000004555ed: jg 0x555f6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x000000000045560d: jg 0x55616; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x000000000045562b: jg 0x55634; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x000000000045564b: jg 0x55654; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x000000000045566b: jg 0x55674; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x000000000045568b: jg 0x55694; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000455c38: jg 0x55c3b; jne 0x564f0; ret; 
0x0000000000455c5c: jg 0x55c60; jne 0x564f0; ret; 
0x0000000000455c7f: jg 0x55c84; jne 0x564f0; ret; 
0x0000000000455c9a: jg 0x55ca0; jne 0x564f0; ret; 
0x0000000000455cbd: jg 0x55cc4; jne 0x564f0; ret; 
0x0000000000455ce2: jg 0x55cea; jne 0x564f0; ret; 
0x0000000000455d00: jg 0x55d09; jne 0x564f0; ret; 
0x0000000000455d1c: jg 0x55d26; jne 0x564f0; ret; 
0x0000000000455d3f: jg 0x55d4a; jne 0x564f0; ret; 
0x0000000000455d64: jg 0x55d70; jne 0x564f0; ret; 
0x0000000000455d82: jg 0x55d8f; jne 0x564f0; ret; 
0x0000000000455da2: jg 0x55db0; jne 0x564f0; ret; 
0x0000000000455dc4: jg 0x55dd3; jne 0x564f0; ret; 
0x0000000000455de4: jg 0x55df4; jne 0x564f0; ret; 
0x0000000000455e04: jg 0x55e15; jne 0x564f0; ret; 
0x0000000000455e16: jg 0x55e1f; sub r8, 0x10; lea rdi, [rdi + 0x10]; jne 0x564f0; ret; 
0x0000000000455e1e: jg 0x55e30; jne 0x564f0; ret; 
0x0000000000455e36: jg 0x55e3f; mov byte ptr [rdi + 0x10], dh; sub r8, 0x11; lea rdi, [rdi + 0x11]; jne 0x564f0; ret; 
0x0000000000455e41: jg 0x55e54; jne 0x564f0; ret; 
0x0000000000455e5a: jg 0x55e63; mov word ptr [rdi + 0x10], cx; sub r8, 0x12; lea rdi, [rdi + 0x12]; jne 0x564f0; ret; 
0x0000000000455e66: jg 0x55e7a; jne 0x564f0; ret; 
0x0000000000455e79: jg 0x55e82; mov dword ptr [rdi + 0xf], ecx; sub r8, 0x13; lea rdi, [rdi + 0x13]; jne 0x564f0; ret; 
0x0000000000455e84: jg 0x55e99; jne 0x564f0; ret; 
0x0000000000455e99: jg 0x55ea2; mov dword ptr [rdi + 0x10], ecx; sub r8, 0x14; lea rdi, [rdi + 0x14]; jne 0x564f0; ret; 
0x0000000000455ea4: jg 0x55eba; jne 0x564f0; ret; 
0x0000000000455ec7: jg 0x55ede; jne 0x564f0; ret; 
0x0000000000455eda: jg 0x55ee3; mov qword ptr [rdi + 0xe], rcx; sub r8, 0x16; lea rdi, [rdi + 0x16]; jne 0x564f0; ret; 
0x0000000000455ee6: jg 0x55efe; jne 0x564f0; ret; 
0x0000000000455efa: jg 0x55f03; mov qword ptr [rdi + 0xf], rcx; sub r8, 0x17; lea rdi, [rdi + 0x17]; jne 0x564f0; ret; 
0x0000000000455f06: jg 0x55f1f; jne 0x564f0; ret; 
0x0000000000455f1a: jg 0x55f23; mov qword ptr [rdi + 0x10], rcx; sub r8, 0x18; lea rdi, [rdi + 0x18]; jne 0x564f0; ret; 
0x0000000000455f26: jg 0x55f40; jne 0x564f0; ret; 
0x0000000000455f49: jg 0x55f64; jne 0x564f0; ret; 
0x0000000000455f7e: jg 0x55f9a; jne 0x564f0; ret; 
0x0000000000455fac: jg 0x55fc9; jne 0x564f0; ret; 
0x0000000000455fdc: jg 0x55ffa; jne 0x564f0; ret; 
0x0000000000455ffb: jg 0x56004; movdqu xmmword ptr [rdi + 0xd], xmm2; sub r8, 0x1d; lea rdi, [rdi + 0x1d]; jne 0x564f0; ret; 
0x0000000000456008: jg 0x56027; jne 0x564f0; ret; 
0x000000000045602b: jg 0x56034; movdqu xmmword ptr [rdi + 0xe], xmm2; sub r8, 0x1e; lea rdi, [rdi + 0x1e]; jne 0x564f0; ret; 
0x0000000000456038: jg 0x56058; jne 0x564f0; ret; 
0x0000000000455fff: jg 0x56058; or eax, 0x1de88349; lea rdi, [rdi + 0x1d]; jne 0x564f0; ret; 
0x000000000045605b: jg 0x56064; movdqu xmmword ptr [rdi + 0xf], xmm2; sub r8, 0x1f; lea rdi, [rdi + 0x1f]; jne 0x564f0; ret; 
0x0000000000456068: jg 0x56089; jne 0x564f0; ret; 
0x000000000045605f: jg 0x560b8; cmovns eax, dword ptr [rbx - 0x72b7e018]; jg 0x56089; jne 0x564f0; ret; 
0x0000000000456098: jg 0x560ba; jne 0x564f0; ret; 
0x00000000004561b6: jg 0x561bf; ret; 
0x00000000004561c9: jg 0x561d2; mov byte ptr [rdi + 0x10], cl; ret; 
0x00000000004561da: jg 0x561e3; mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004561f9: jg 0x56202; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000456209: jg 0x56212; mov dword ptr [rdi + 0x10], ecx; ret; 
0x000000000045621c: jg 0x56225; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dl; ret; 
0x000000000045623a: jg 0x56243; mov qword ptr [rdi + 0xe], rcx; ret; 
0x000000000045625a: jg 0x56263; mov qword ptr [rdi + 0xf], rcx; ret; 
0x000000000045627a: jg 0x56283; mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000045629d: jg 0x562a6; mov qword ptr [rdi + 0x10], rdx; mov byte ptr [rdi + 0x18], cl; ret; 
0x00000000004562be: jg 0x562c7; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x00000000004562dd: jg 0x562e6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x00000000004562fd: jg 0x56306; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x000000000045631b: jg 0x56324; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x000000000045633b: jg 0x56344; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x000000000045635b: jg 0x56364; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x000000000045637b: jg 0x56384; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x000000000045639e: jg 0x563a7; movdqu xmmword ptr [rdi + 0x10], xmm2; mov byte ptr [rdi + 0x20], cl; ret; 
0x00000000004564b2: jg 0x564bb; ret; 
0x00000000004565f6: jg 0x56628; ret; 
0x0000000000456b76: jg 0x56b7f; lea rax, [rdi + 0xf]; ret; 
0x0000000000456b86: jg 0x56b8f; mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x0000000000456b9a: jg 0x56ba3; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x0000000000456bb9: jg 0x56bc2; mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x0000000000456bd9: jg 0x56be2; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x0000000000456bf9: jg 0x56c02; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x0000000000456c1a: jg 0x56c23; mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x0000000000456c3a: jg 0x56c43; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000456c5a: jg 0x56c63; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000456c7a: jg 0x56c83; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x0000000000456c9e: jg 0x56ca7; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x0000000000456cbd: jg 0x56cc6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x0000000000456cdd: jg 0x56ce6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x0000000000456cfb: jg 0x56d04; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000456d1b: jg 0x56d24; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x0000000000456d3b: jg 0x56d44; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, [rdi + 0x1e]; ret; 
0x0000000000456cff: jg 0x56d58; or eax, 0x1c478d48; ret; 
0x0000000000456d5b: jg 0x56d64; movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, [rdi + 0x1f]; ret; 
0x00000000004570ec: jg 0x57105; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000045710c: jg 0x57125; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000045930b: jg 0x59314; vmovdqu xmmword ptr [rsi - 0x10], xmm0; ret; 
0x0000000000459301: jg 0x5931a; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x00000000004597c8: jg 0x597fa; movups xmmword ptr [r11], xmm8; ret; 
0x0000000000459896: jg 0x598c8; movups xmmword ptr [r11], xmm8; ret; 
0x00000000004598d7: jg 0x598e0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x0000000000459923: jg 0x5992c; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x000000000045997e: jg 0x59987; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000459a4a: jg 0x59a53; vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x0000000000459b0f: jg 0x59b34; vzeroupper; ret; 
0x0000000000459b09: jg 0x59b4c; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x0000000000459b04: jg 0x59b7f; rol ch, 0x7e; jg 0x59b4c; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x0000000000459bb6: jg 0x59bbb; vzeroupper; ret; 
0x0000000000459bb1: jg 0x59c13; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x0000000000459c42: jg 0x59c67; vzeroupper; ret; 
0x0000000000459c3c: jg 0x59c7f; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x0000000000459c37: jg 0x59cb2; rol ch, 0x7e; jg 0x59c7f; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x0000000000459cd2: jg 0x59cd7; vzeroupper; ret; 
0x0000000000459d20: jg 0x59d29; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x0000000000459ccd: jg 0x59d2f; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x0000000000459d6c: jg 0x59d75; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x0000000000459dce: jg 0x59dd7; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x0000000000459de6: jg 0x59def; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000459edc: jg 0x59ee5; vmovdqu64 zmmword ptr [rdi + 0x40], zmm1; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm2; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x0000000000459fca: jg 0x59fef; vzeroupper; ret; 
0x0000000000459fc3: jg 0x5a006; std; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000045a08a: jg 0x5a08f; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000045a090: jg 0x5a095; vzeroupper; ret; 
0x000000000045a155: jg 0x5a17a; vzeroupper; ret; 
0x000000000045a14e: jg 0x5a191; std; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000045a214: jg 0x5a219; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000045a21a: jg 0x5a21f; vzeroupper; ret; 
0x000000000045a284: jg 0x5a28d; ret; 
0x000000000045a2f0: jg 0x5a2f9; ret; 
0x000000000045a304: jg 0x5a30d; movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000045a308: jg 0x5a351; adc bl, dh; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000045a3f8: jg 0x5a401; vzeroupper; ret; 
0x000000000045a448: jg 0x5a451; vzeroupper; ret; 
0x000000000045a462: jg 0x5a46b; vmovdqu ymmword ptr [rdi + 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x000000000045a507: jg 0x5a510; vzeroupper; ret; 
0x000000000045a585: jg 0x5a58e; vzeroupper; ret; 
0x000000000045a5e5: jg 0x5a5ee; vzeroupper; ret; 
0x000000000045a601: jg 0x5a60a; vmovdqu64 zmmword ptr [rdi + 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x000000000045a6cf: jg 0x5a6d8; vzeroupper; ret; 
0x000000000045a6dd: jg 0x5a6e6; vzeroupper; ret; 
0x000000000045fb32: jg 0x5fb24; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000045fb9a: jg 0x5fb8c; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x000000000047288e: jg 0x728b9; fidivr dword ptr [rcx]; ret 0x830f; 
0x000000000047a147: jg 0x7a172; fidivr dword ptr [rcx]; ret 0x820f; 
0x000000000049807f: jg 0x98037; dec dword ptr [rax - 0x77]; ret; 
0x00000000004987e4: jg 0x987f4; pcmpistri xmm2, xmm2, 0x3a; cmp edx, ecx; jle 0x98890; ret; 
0x000000000049e894: jg 0x9e90b; sbb dword ptr [rax - 0x7b], ecx; div byte ptr [rbp + 0x2c]; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000040c173: jg 0xc149; or dword ptr [rax], eax; ret; 
0x000000000040d75d: jg 0xd762; add byte ptr [rax], al; nop dword ptr [rax]; lea rax, [rip + 0x9bdb0]; ret; 
0x000000000040d853: jg 0xd812; or dword ptr [rax], eax; ret; 
0x0000000000427334: jge 0x294f7280; ret 0x8348; 
0x0000000000431acd: jge 0x31ad1; add byte ptr [rax - 0x73], cl; add eax, 0x27e19; cmove rax, rdx; ret; 
0x0000000000439846: jge 0x3985f; call 0x2951b5c; add byte ptr [rax], al; xor eax, eax; vzeroupper; ret; 
0x0000000000483155: jge 0x8319f; sar edx, cl; test rdx, rdx; je 0x83200; bsf rax, rdx; ret; 
0x0000000000488abc: jge 0x88a86; add byte ptr [rax - 0x77], cl; ret; 
0x000000000048d03b: jge 0x8d042; add dh, dh; ret 0x7404; 
0x00000000004982a7: jge 0x9825f; dec dword ptr [rax - 0x77]; ret; 
0x000000000049d038: jge 0x9d083; shl ecx, cl; mov qword ptr [rdi], r9; ret; 
0x000000000049e594: jge 0x9e596; add byte ptr [rax], al; leave; ret; 
0x00000000004a3d01: jge 0xa3cfb; leave; ret; 
0x00000000004a3fc9: jge 0xa3fc3; leave; ret; 
0x00000000004a41eb: jge 0xa41e5; leave; ret; 
0x0000000000415946: jl 0x1594f; add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x000000000042d1a8: jl 0x2d1aa; add byte ptr [rax], al; sub dword ptr [rip + 0xb562d], 1; pop rbp; ret; 
0x0000000000430362: jl 0x30388; sbb byte ptr [rcx - 0x17f7dbac], cl; test al, 0xff; dec dword ptr [rbx + 0x9082454]; ret 0x37e9; 
0x0000000000430d13: jl 0x30d3a; and byte ptr [rcx], dh; imul al; ret; 
0x0000000000431c3d: jl 0x31c41; add byte ptr [rax - 0x73], cl; add eax, 0x27cb9; cmove rax, rdx; ret; 
0x00000000004036f5: jl 0x371b; adc al, ch; ret; 
0x0000000000445e23: jl 0x45e6d; adc dword ptr [rcx - 4], esp; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000445e2a: jl 0x45e74; adc dword ptr [rcx - 3], ebp; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000445e31: jl 0x45e7b; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000445e38: jl 0x45e82; adc dword ptr [rcx - 1], edi; ret; 
0x0000000000445e60: jl 0x45eaa; adc dword ptr [rdi], eax; vmovups zmmword ptr [rdi + 0x40], zmm1; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x0000000000445e66: jl 0x45eb0; adc dword ptr [rdi + 1], ecx; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x0000000000445e6d: jl 0x45eb7; adc dword ptr [rcx - 2], edx; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x0000000000445e74: jl 0x45ebe; adc dword ptr [rcx - 1], ebx; ret; 
0x000000000044605d: jl 0x460a7; adc dword ptr [rcx - 4], esp; vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000446064: jl 0x460ae; adc dword ptr [rcx - 3], ebp; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000044606b: jl 0x460b5; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000446072: jl 0x460bc; adc dword ptr [rcx - 1], edi; ret; 
0x00000000004461cb: jl 0x46215; adc dword ptr [rcx + 5], ebp; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x00000000004461d2: jl 0x4621c; adc dword ptr [rcx + 6], esi; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x00000000004461d9: jl 0x46223; adc dword ptr [rcx + 7], edi; ret; 
0x0000000000446326: jl 0x46370; adc dword ptr [rdi - 5], esp; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000044632d: jl 0x46377; adc dword ptr [rdi - 6], ebp; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x0000000000446334: jl 0x4637e; adc dword ptr [rdi - 7], esi; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000044633b: jl 0x46385; adc dword ptr [rdi - 8], edi; ret; 
0x000000000044ed85: jl 0x4ed9e; and ecx, ebp; ret; 
0x000000000044eed0: jl 0x4eed4; add byte ptr [rax], al; vzeroupper; ret; 
0x000000000044efcd: jl 0x4efe6; add dword ptr [rdi], ecx; test dword ptr [rdx + 1], edi; add byte ptr [rax], al; vzeroupper; ret; 
0x00000000004592ab: jl 0x592f5; adc dword ptr [rsi - 4], edx; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592b2: jl 0x592fc; adc dword ptr [rsi - 3], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592b9: jl 0x59303; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592c0: jl 0x5930a; adc dword ptr [rsi - 1], edx; ret; 
0x00000000004592cd: jl 0x59317; adc dword ptr [rdi], edx; vmovups zmmword ptr [rdi + 0x40], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592d3: jl 0x5931d; adc dword ptr [rdi + 1], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592da: jl 0x59324; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592e1: jl 0x5932b; adc dword ptr [rsi - 1], edx; ret; 
0x00000000004592ee: jl 0x59338; adc dword ptr [rdi], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592f4: jl 0x5933e; adc dword ptr [rsi - 1], edx; ret; 
0x00000000004593b4: jl 0x593fe; adc dword ptr [rsi - 4], edx; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004593bb: jl 0x59405; adc dword ptr [rsi - 3], edx; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004593c2: jl 0x5940c; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004593c9: jl 0x59413; adc dword ptr [rsi - 1], edx; ret; 
0x000000000045940d: jl 0x59457; adc dword ptr [rsi], edx; vmovups zmmword ptr [rsi + 0x40], zmm2; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x0000000000459413: jl 0x5945d; adc dword ptr [rsi + 1], edx; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000045941a: jl 0x59464; adc dword ptr [rsi + 2], edx; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x0000000000459421: jl 0x5946b; adc dword ptr [rsi + 3], edx; ret; 
0x00000000004594b0: jl 0x594fa; adc dword ptr [rsi + 5], edx; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x00000000004594b7: jl 0x59501; adc dword ptr [rsi + 6], edx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x00000000004594be: jl 0x59508; adc dword ptr [rsi + 7], edx; ret; 
0x0000000000459eb4: jl 0x59ecd; cld; vzeroupper; ret; 
0x000000000045c514: jl 0x5c53a; dec dword ptr [rax + 0x39]; je 0x5c53f; or byte ptr [rdi], cl; xchg eax, ebp; ret 0x8948; 
0x000000000045fb2c: jl 0x5fb24; cmp rdx, qword ptr [rdi + 0x18]; jg 0x5fb24; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000045fb94: jl 0x5fb8c; cmp rcx, qword ptr [rax + 0x18]; jg 0x5fb8c; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x0000000000465981: jl 0x659a7; adc byte ptr [rax + 0x63], cl; fisttp dword ptr [rcx + 0x39]; test dword ptr [rdi], 0x33486; add byte ptr [rcx - 0xa], al; ret; 
0x0000000000482252: jl 0x82288; adc byte ptr [rbp - 0x7cb7fd8e], cl; ret 0x4802; 
0x000000000048f605: jl 0x8f60c; or al, ch; ret; 
0x000000000040ccf3: jl 0xccbd; or dword ptr [rax], eax; ret; 
0x000000000040ccfb: jl 0xccc5; or dword ptr [rax], eax; ret; 
0x0000000000422382: jle 0x223db; cmp byte ptr [rax - 0x75], cl; xor byte ptr [rsi + 0xf], spl; outsd dx, dword ptr [rsi]; ret 0x4866; 
0x0000000000429170: jle 0x2916f; dec dword ptr [rax - 0x77]; ret; 
0x000000000042923b: jle 0x2923a; dec dword ptr [rax - 0x77]; ret; 
0x000000000043048d: jle 0x304d7; or eax, dword ptr [rax]; add dword ptr [rax - 0x77], ecx; ret 0x3174; 
0x0000000000439975: jle 0x3998d; vpcmpeqb xmm2, xmm2, xmm1; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x39890; ret; 
0x000000000044e3a1: jle 0x4e3eb; bsf eax, edx; ret; 
0x000000000045916c: jle 0x59184; movsxd rax, ecx; ret; 
0x0000000000459324: jle 0x592e7; cmp dl, 4; jb 0x59331; mov dword ptr [rdi], ecx; mov dword ptr [rsi - 4], ecx; ret; 
0x00000000004595b2: jle 0x595c3; adc byte ptr [rsi], al; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000459b08: jle 0x59b89; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x0000000000459c3b: jle 0x59cbc; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x000000000046da1a: jle 0x6da40; sub eax, 1; mov dword ptr [rdx + 8], eax; pop rbx; ret; 
0x0000000000492859: jle 0x9275a; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000049484d: jle 0x94852; add byte ptr [rcx - 0x7d], al; in eax, dx; add dword ptr [rax + 0x39], ecx; ret; 
0x00000000004987ee: jle 0x98890; ret; 
0x00000000004a1809: jne 0x171e; xor eax, eax; add rsp, 8; ret; 
0x00000000004a3916: jne 0x1755; mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x00000000004a3978: jne 0x175a; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x00000000004017c8: jne 0x17cb; ret; 
0x000000000041e0ad: jne 0x1e088; ret; 
0x000000000041e1ac: jne 0x1e1d4; mov eax, r8d; add rsp, 0x118; ret; 
0x0000000000401fe2: jne 0x1ecc; nop; nop; leave; ret; 
0x000000000041eef4: jne 0x1ef56; or dword ptr [rax], eax; call 0x11c50; xor r8d, r8d; mov rax, r8; ret; 
0x000000000041f0e0: jne 0x1f120; sub dword ptr [rip + 0xc67c7], 1; add rsp, 0x10; mov eax, r8d; pop rbx; ret; 
0x000000000041f948: jne 0x1f952; add rsp, 0xd8; ret; 
0x000000000041fd5c: jne 0x1fdb5; add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000041ff0a: jne 0x1ff65; add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000402080: jne 0x2083; ret; 
0x000000000040209b: jne 0x20b0; mov eax, 1; mov dword ptr [rip + 0xe2228], eax; add rsp, 8; ret; 
0x0000000000421523: jne 0x21546; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x0000000000421f00: jne 0x21f9a; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000004228ad: jne 0x2299c; add rsp, 0x38; pop rbx; pop rbp; ret; 
0x0000000000422bcc: jne 0x22be0; mov eax, dword ptr [rdx + 0x4c]; cmp dword ptr [rdx + 0x48], eax; cmovne eax, ecx; ret; 
0x0000000000425199: jne 0x251a0; ret; 
0x000000000042615e: jne 0x26170; sub dword ptr [rip + 0xbeb49], 1; ret; 
0x0000000000426819: jne 0x26808; ret; 
0x0000000000427766: jne 0x27758; ret; 
0x0000000000427a21: jne 0x279e3; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004284fe: jne 0x284f0; ret; 
0x0000000000428537: jne 0x28548; sub edx, dword ptr [rax + 0x18]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x00000000004294e7: jne 0x294c8; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000402963: jne 0x2987; add rsp, 0x18; pop rbp; pop r12; ret; 
0x0000000000429b49: jne 0x29b34; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x0000000000402af9: jne 0x2b8f; add rsp, 0xc8; ret; 
0x000000000042bab0: jne 0x2babd; add byte ptr [rbp + 0x39], cl; ret; 
0x000000000042d1a6: jne 0x2d228; sub dword ptr [rip + 0xb562d], 1; pop rbp; ret; 
0x0000000000402ca9: jne 0x2d3f; add rsp, 0xc8; ret; 
0x000000000042d66c: jne 0x2d674; add rsp, 0x10; pop rbp; ret; 
0x000000000042e2be: jne 0x2e2a0; pop rbx; pop rbp; pop r12; ret; 
0x000000000042e35d: jne 0x2e398; sub dword ptr [rip + 0xb69ba], 1; pop rbx; ret; 
0x000000000042e467: jne 0x2e44f; test r8b, r8b; jne 0x2e479; mov dword ptr [rip + 0xb68a8], 0; ret; 
0x000000000042e46c: jne 0x2e479; mov dword ptr [rip + 0xb68a8], 0; ret; 
0x0000000000430517: jne 0x30500; sub rax, 0x10; ret; 
0x0000000000403080: jne 0x3064; mov dword ptr [rip + 0xdf078], ebx; mov eax, 1; pop rbx; mov dword ptr [rip + 0xdf070], 1; ret; 
0x00000000004318ee: jne 0x31905; and dh, 2; lea rax, [rip + 0x7a86]; lea rdx, [rip + 0x25b3f]; cmovne rax, rdx; ret; 
0x000000000043198c: jne 0x319d0; and edx, 8; lea rax, [rip + 0xc218]; lea rdx, [rip + 0x118b1]; cmovne rax, rdx; ret; 
0x0000000000431aec: jne 0x31b30; and edx, 8; lea rax, [rip + 0x96b8]; lea rdx, [rip + 0xec41]; cmovne rax, rdx; ret; 
0x0000000000431c5c: jne 0x31ca0; and edx, 8; lea rax, [rip + 0x9568]; lea rdx, [rip + 0xeaf1]; cmovne rax, rdx; ret; 
0x0000000000431ce6: jne 0x31ce8; add byte ptr [rax - 0x73], cl; add eax, 0x7330; cmove rax, rdx; ret; 
0x000000000043348c: jne 0x33470; xor eax, eax; sub eax, ecx; ret; 
0x0000000000403244: jne 0x3355; add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x0000000000434a4d: jne 0x34a30; sub eax, ecx; vzeroupper; ret; 
0x0000000000438ed2: jne 0x38eb0; sub eax, ecx; vzeroupper; ret; 
0x00000000004391d3: jne 0x39220; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000439984: jne 0x39890; ret; 
0x000000000043988a: jne 0x39890; vzeroupper; ret; 
0x000000000043ad37: jne 0x3b163; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x000000000043a7dd: jne 0x3b163; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x000000000043a731: jne 0x3b163; xor eax, eax; ret; 
0x000000000043a828: jne 0x3b16f; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x000000000043a759: jne 0x3b16f; xor eax, eax; ret; 
0x000000000043aa2a: jne 0x3b17a; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x000000000043a8bd: jne 0x3b190; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000404eed: jne 0x4e81; add rsp, 0x18; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000044ed20: jne 0x4f150; vzeroupper; ret; 
0x0000000000404fea: jne 0x4ff1; add rsp, 0x48; ret; 
0x0000000000452781: jne 0x52d30; ret; 
0x000000000040534d: jne 0x536c; add rsp, 0x10; pop rbp; ret; 
0x0000000000455c3a: jne 0x564f0; ret; 
0x00000000004572b0: jne 0x571a0; lea rax, [rdi + 0xb]; ret; 
0x000000000045726a: jne 0x571a0; lea rax, [rdi + 0xf]; ret; 
0x0000000000457215: jne 0x571a0; lea rax, [rdi + 3]; ret; 
0x00000000004571e7: jne 0x571a0; lea rax, [rdi + 7]; ret; 
0x0000000000457196: jne 0x571a4; nop dword ptr [rax + rax]; xor rax, rax; ret; 
0x000000000045720c: jne 0x57380; test dl, 4; jne 0x571a0; lea rax, [rdi + 3]; ret; 
0x00000000004572ee: jne 0x573b0; test al, 0x40; jne 0x573c0; lea rax, [rdi + 7]; ret; 
0x00000000004572f6: jne 0x573c0; lea rax, [rdi + 7]; ret; 
0x00000000004571de: jne 0x573c0; test dl, 0x40; jne 0x571a0; lea rax, [rdi + 7]; ret; 
0x00000000004572a7: jne 0x573f0; test dh, 4; jne 0x571a0; lea rax, [rdi + 0xb]; ret; 
0x0000000000457340: jne 0x57420; test ah, 0x40; jne 0x57430; lea rax, [rdi + 0xf]; ret; 
0x0000000000457349: jne 0x57430; lea rax, [rdi + 0xf]; ret; 
0x0000000000457261: jne 0x57430; test dh, 0x40; jne 0x571a0; lea rax, [rdi + 0xf]; ret; 
0x0000000000458645: jne 0x586c0; movzx eax, byte ptr [rdi - 9]; movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x0000000000458974: jne 0x58b80; xor eax, eax; ret; 
0x0000000000458ad4: jne 0x58b95; cmp eax, ecx; jne 0x58b95; xor eax, eax; ret; 
0x0000000000458b91: jne 0x58b95; cmp eax, ecx; sbb eax, eax; sbb eax, -1; ret; 
0x0000000000458b70: jne 0x58b95; movzx eax, byte ptr [rdi - 1]; cmp al, byte ptr [rsi - 1]; jne 0x58b95; xor eax, eax; ret; 
0x0000000000458a21: jne 0x58b95; xor eax, eax; ret; 
0x0000000000458ca1: jne 0x58c90; ret; 
0x0000000000458c98: jne 0x58cb0; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x58c90; ret; 
0x0000000000458d51: jne 0x58d40; ret; 
0x0000000000458d48: jne 0x58d60; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x58d40; ret; 
0x0000000000458ec1: jne 0x58eb0; lea rax, [rcx - 1]; ret; 
0x0000000000458eb8: jne 0x58ed0; movzx edx, byte ptr [rsi + rax + 3]; test dl, dl; jne 0x58eb0; lea rax, [rcx - 1]; ret; 
0x0000000000459011: jne 0x59000; sub rax, 1; ret; 
0x0000000000459008: jne 0x59020; movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x59000; sub rax, 1; ret; 
0x000000000045a2a7: jne 0x5a2ad; mov rax, rdi; ret; 
0x000000000045a4d8: jne 0x5a4bb; vzeroupper; ret; 
0x000000000045a69b: jne 0x5a676; vzeroupper; ret; 
0x000000000045aee3: jne 0x5af04; add rsp, 0x20; pop rbx; ret; 
0x000000000045b38c: jne 0x5b431; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045be8b: jne 0x5bea1; add rsp, 0x28; ret; 
0x000000000045bfe5: jne 0x5c091; add rsp, 0x68; pop rbp; pop r12; ret; 
0x000000000045c0ae: jne 0x5c0c0; syscall; cmp rax, -0x1000; ja 0x5c110; ret; 
0x000000000045c14e: jne 0x5c160; mov eax, 1; syscall; cmp rax, -0x1000; ja 0x5c1b0; ret; 
0x000000000045c266: jne 0x5c305; add rsp, 0x68; ret; 
0x000000000045c31e: jne 0x5c330; mov eax, 3; syscall; cmp rax, -0x1000; ja 0x5c370; ret; 
0x000000000045cbbb: jne 0x5cc03; add rsp, 0x68; ret; 
0x000000000045cc4a: jne 0x5cc93; add rsp, 0x18; ret; 
0x000000000045cd02: jne 0x5cd4b; add rsp, 0x58; ret; 
0x000000000045cda0: jne 0x5cdeb; add rsp, 0x58; ret; 
0x000000000045cfde: jne 0x5cfe5; add rsp, 0x28; ret; 
0x000000000045dde6: jne 0x5ddf0; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000045de94: jne 0x5dea0; pop rbp; pop r12; pop r13; ret; 
0x000000000045f77a: jne 0x5f786; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000045f80a: jne 0x5f816; add rsp, 0x88; pop rbx; pop rbp; ret; 
0x000000000045f9e1: jne 0x5f9eb; add rsp, 0xd8; ret; 
0x000000000046214d: jne 0x620fe; add rsp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x000000000046a662: jne 0x6a65e; dec dword ptr [rbp - 0x77]; ret; 
0x000000000046d358: jne 0x6d41f; add rsp, 0xb8; mov eax, r8d; pop rbp; pop r12; ret; 
0x000000000046d48a: jne 0x6d4bd; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x000000000046fec5: jne 0x6fecc; add rsp, 0x18; ret; 
0x000000000046ff5a: jne 0x6ff68; mov dword ptr [rbx + 0x40], esi; xor eax, eax; pop rbx; ret; 
0x0000000000470140: jne 0x70184; mov eax, r9d; add rsp, 0x148; ret; 
0x0000000000470238: jne 0x702d6; add rsp, 0x98; ret; 
0x00000000004718be: jne 0x718e8; sub dword ptr [rip + 0x736b9], 1; xor eax, eax; add rsp, 8; ret; 
0x0000000000471f78: jne 0x71f82; add rsp, 0xd8; ret; 
0x00000000004077ee: jne 0x77d8; mov eax, dword ptr [rsi + 0x14]; cmp dword ptr [rdi + 0x14], eax; sete al; ret; 
0x0000000000407c3f: jne 0x7c28; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000047faa3: jne 0x7fb3a; add rsp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x00000000004806c1: jne 0x806b0; ret; 
0x0000000000480fd3: jne 0x80f1e; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000048115b: jne 0x810ae; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x000000000048172c: jne 0x81740; mov eax, dword ptr [rdi + 0x10]; sub rdx, qword ptr [rcx + 0x10]; sar rdx, 2; sub eax, edx; ret; 
0x00000000004818b3: jne 0x8189c; and r11d, 0xffffffbb; cmp r11d, 0xa; je 0x818c0; ret; 
0x0000000000481916: jne 0x81904; mov eax, r11d; and eax, 0xc; cmp eax, 4; je 0x81924; ret; 
0x00000000004827e5: jne 0x828c0; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000482887: jne 0x828e0; xor eax, eax; ret; 
0x0000000000482857: jne 0x82900; xor eax, eax; ret; 
0x0000000000482b03: jne 0x82b20; xor eax, eax; vzeroupper; ret; 
0x0000000000482ac6: jne 0x82b60; xor eax, eax; vzeroupper; ret; 
0x00000000004830c7: jne 0x830cd; xor rax, rax; ret; 
0x00000000004834c3: jne 0x834f0; mov rax, r8; vzeroupper; ret; 
0x000000000048348a: jne 0x83530; mov rax, r8; vzeroupper; ret; 
0x0000000000483977: jne 0x839e0; add rsp, 0x70; pop rbx; pop rbp; pop r12; ret; 
0x0000000000483d7d: jne 0x83d70; ret; 
0x0000000000483d87: jne 0x83d8d; xor rax, rax; ret; 
0x0000000000484633: jne 0x84660; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x00000000004845fd: jne 0x846a0; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x0000000000484c92: jne 0x84cc0; sub dword ptr [rbx + 4], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000484e93: jne 0x84eca; add rsp, 0xa8; pop rbp; pop r12; ret; 
0x0000000000485033: jne 0x8503d; movzx eax, al; add rsp, 0x58; ret; 
0x00000000004850ed: jne 0x85114; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000000485243: jne 0x85250; ret; 
0x00000000004856ad: jne 0x8566f; leave; mov eax, 1; ret; 
0x0000000000408610: jne 0x873f; add rsp, 0x18; pop rbx; pop r12; ret; 
0x000000000040884f: jne 0x8860; cmp dword ptr [rdi + 0x38], 1; sbb eax, eax; and eax, 0xffffffea; ret; 
0x00000000004088a2: jne 0x88c0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048923c: jne 0x892b1; jb 0x8926f; insb byte ptr [rdi], dx; imul esp, dword ptr [rdx + 0x48], 0x9480733; ret 0x1475; 
0x0000000000408941: jne 0x8930; mov eax, 0xffffffef; pop rbx; pop rbp; pop r12; ret; 
0x0000000000408a01: jne 0x89f0; mov eax, 0xffffffef; ret; 
0x0000000000408b0c: jne 0x8b13; add rsp, 0x18; ret; 
0x000000000048b72f: jne 0x8b738; pop rbx; ret; 
0x0000000000408cd1: jne 0x8cc0; mov eax, 0xffffffef; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000408e74: jne 0x8e20; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000048e35e: jne 0x8e348; mov eax, 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048e3c0: jne 0x8e398; mov eax, dword ptr [rcx]; ret; 
0x000000000048f042: jne 0x8f050; lea rax, [r8 + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x000000000048f13b: jne 0x8f150; mov r8, qword ptr [rip + 0x5632c]; mov rax, r8; ret; 
0x000000000048fa45: jne 0x8fa60; mov qword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x536f2], 1; ret; 
0x0000000000490d2e: jne 0x90cfe; movsx eax, dl; neg eax; ret; 
0x00000000004918ce: jne 0x918d6; add rsp, 0x20; pop rbx; ret; 
0x00000000004919c9: jne 0x919f3; add rsp, 0x38; ret; 
0x0000000000491a95: jne 0x91ac4; add rsp, 0x58; ret; 
0x0000000000491c07: jne 0x91c44; add rsp, 0x68; ret; 
0x0000000000491f25: jne 0x91f54; add rsp, 0x58; ret; 
0x000000000049231c: jne 0x9236f; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x00000000004923da: jne 0x923e5; add rsp, 0x20; pop rbx; pop rbp; pop r12; ret; 
0x0000000000492715: jne 0x92735; add rsp, 0x38; ret; 
0x0000000000497d70: jne 0x97da8; sub dword ptr [rip + 0x4d29b], 1; mov eax, r8d; pop rbx; ret; 
0x0000000000497e48: jne 0x97e50; sub dword ptr [rdi], 1; ret; 
0x0000000000497f5b: jne 0x98135; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000049843a: jne 0x98460; mov rdx, qword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x00000000004984bc: jne 0x984c3; add rsp, 0x28; ret; 
0x00000000004985aa: jne 0x985b1; add rsp, 0x38; ret; 
0x0000000000498b45: jne 0x98c20; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000498be7: jne 0x98c40; xor eax, eax; ret; 
0x0000000000498bb7: jne 0x98c60; xor eax, eax; ret; 
0x0000000000498e63: jne 0x98e80; xor eax, eax; vzeroupper; ret; 
0x0000000000498e26: jne 0x98ec0; xor eax, eax; vzeroupper; ret; 
0x000000000049930b: jne 0x99310; mov qword ptr [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x0000000000499996: jne 0x999a3; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000049ba01: jne 0x9ba08; ret; 
0x000000000049e592: jne 0x9e615; leave; ret; 
0x000000000049e804: jne 0x9e820; test rsi, rsi; jne 0x9e830; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000049e809: jne 0x9e830; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000049e8ba: jne 0x9e89c; mov eax, 1; ret; 
0x000000000049e8b3: jne 0x9e8a2; cmp cx, 0x7fff; jne 0x9e89c; mov eax, 1; ret; 
0x000000000049e895: jne 0x9e8b0; test rsi, rsi; jne 0x9e8c8; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000049e89a: jne 0x9e8c8; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000049e977: jne 0x9e9a0; test rax, rax; jne 0x9e9e0; mov dword ptr [rdx], 0; mov eax, 2; ret; 
0x000000000049e97c: jne 0x9e9e0; mov dword ptr [rdx], 0; mov eax, 2; ret; 
0x000000000049eb25: jne 0x9eb2c; add rsp, 0x38; ret; 
0x000000000049ec2a: jne 0x9ec36; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x000000000049ed08: jne 0x9ed14; add rsp, 0x30; mov rax, r12; pop r12; ret; 
0x00000000004a0b39: jne 0xa0d65; add rsp, 0x98; pop rbp; pop r12; ret; 
0x00000000004a0e0c: jne 0xa0fa4; add rsp, 0x78; pop rbp; pop r12; ret; 
0x00000000004a126d: jne 0xa11c0; add rsp, 0x38; ret; 
0x00000000004a1413: jne 0xa14a9; add rsp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x00000000004a17d7: jne 0xa1800; mov rax, qword ptr [rsi + 0xa8]; add rsp, 8; ret; 
0x00000000004a17ea: jne 0xa1820; mov rax, qword ptr [rsi + 0xb8]; add rsp, 8; ret; 
0x00000000004a28dc: jne 0xa28e5; cmp qword ptr [r9 + 0x38], 0; je 0xa2934; add rsp, 0x18; ret; 
0x00000000004a3cfd: jne 0xa3cef; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x00000000004a3fc5: jne 0xa3fb7; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x00000000004a41e7: jne 0xa41d9; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x00000000004a450e: jne 0xa4530; add rsp, 8; ret; 
0x00000000004a451b: jne 0xa4553; mov eax, 8; add rsp, 8; ret; 
0x00000000004a4577: jne 0xa4588; mov rax, qword ptr [rsi + 0x10]; add rsp, 8; ret; 
0x00000000004a458a: jne 0xa45b3; xor eax, eax; add rsp, 8; ret; 
0x00000000004a45d7: jne 0xa45e8; mov rax, qword ptr [rsi + 0x10]; add rsp, 8; ret; 
0x00000000004a45ea: jne 0xa4613; xor eax, eax; add rsp, 8; ret; 
0x000000000040a3c6: jne 0xa4a0; mov rax, 0x4decc0; ret; 
0x000000000040a42c: jne 0xa4a0; mov rax, 0x4ded80; ret; 
0x000000000040a368: jne 0xa4a0; mov rax, 0x4dedc0; ret; 
0x000000000040a3a6: jne 0xa4a0; mov rax, 0x4dee00; ret; 
0x000000000040a3e6: jne 0xa4a0; mov rax, 0x4def00; ret; 
0x000000000040a456: jne 0xa4a0; mov rax, 0x4def40; ret; 
0x000000000040a406: jne 0xa4a0; mov rax, 0x4e11e0; ret; 
0x000000000040a43e: jne 0xa4a0; mov rax, 0x4e1220; ret; 
0x00000000004a5a98: jne 0xa5aa0; ret; 
0x00000000004a5cd8: jne 0xa5ce0; ret; 
0x00000000004a5f9a: jne 0xa5fbb; xor eax, eax; add rsp, 8; ret; 
0x00000000004a6576: jne 0xa6560; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004a65c9: jne 0xa65a0; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004a671d: jne 0xa6700; pop rbx; ret; 
0x00000000004a682b: jne 0xa6818; call 0x2ead0; test rbx, rbx; jne 0xa681d; pop rbx; ret; 
0x00000000004a6835: jne 0xa681d; pop rbx; ret; 
0x000000000040a764: jne 0xa76d; mov rax, 0x4e12e0; pop rbp; ret; 
0x00000000004a7c5e: jne 0xa7c40; pop rbx; pop rbp; pop r12; ret; 
0x000000000040aacd: jne 0xaacf; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000040b74d: jne 0xb74f; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000040c26d: jne 0xc26f; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000040cdad: jne 0xcdaf; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043a9ee: jno 0x3a9f7; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000445e34: jno 0x45e34; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x000000000044606e: jno 0x4606e; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x00000000004461d5: jno 0x461dd; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x0000000000446325: jno 0x463a3; adc qword ptr [rdi - 5], rsp; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000044632c: jno 0x463aa; adc qword ptr [rdi - 6], rbp; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x0000000000446333: jno 0x463b1; adc qword ptr [rdi - 7], rsi; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000044633a: jno 0x463b8; adc qword ptr [rdi - 8], rdi; ret; 
0x0000000000459738: jno 0x5972a; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x0000000000459826: jno 0x59818; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x0000000000459b00: jno 0x59ae2; vmovdqu ymmword ptr [rcx - 0x40], ymm7; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x0000000000459c33: jno 0x59c15; vmovdqu ymmword ptr [rcx - 0x40], ymm7; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x0000000000459fc0: jno 0x59fc0; jg 0x5a006; std; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000045a14b: jno 0x5a14b; jg 0x5a191; std; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000040d89b: jno 0xd85a; or dword ptr [rax], eax; ret; 
0x00000000004319db: jnp 0x319df; add byte ptr [rax - 0x73], cl; add eax, 0x27bbb; cmove rax, rdx; ret; 
0x00000000004053f2: jnp 0x541d; add byte ptr [rdi], cl; test esp, ecx; add al, byte ptr [rax]; add byte ptr [rbx - 0x76bef7bd], cl; ret 0xc085; 
0x000000000047f4e2: jnp 0x7f4fc; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000048c46c: jnp 0x8c476; and eax, 0x8348df74; ret; 
0x00000000004982c2: jnp 0x982bd; dec dword ptr [rax - 0x77]; ret; 
0x000000000040cceb: jnp 0xccb5; or dword ptr [rax], eax; ret; 
0x000000000047ceb1: jnp 0xffffffff89495fcb; adc dword ptr [rax - 0x77], ecx; ret 0xc148; 
0x0000000000495c9f: jnp 0xffffffff894af3b9; adc byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000495e04: jnp 0xffffffff894af41e; adc byte ptr [rax - 0x77], cl; ret 0xc148; 
0x00000000004963c1: jnp 0xffffffff894af4db; adc byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000431b3b: jns 0x31b3f; add byte ptr [rax - 0x73], cl; add eax, 0x27a4b; cmove rax, rdx; ret; 
0x0000000000445e3b: jns 0x45e3c; ret; 
0x0000000000446075: jns 0x46076; ret; 
0x00000000004461dc: jns 0x461e5; ret; 
0x000000000044c717: jns 0x4c77c; rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c768: jns 0x4c7cd; rcr dword ptr [rdx], 0xf; xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044c867: jns 0x4c8cc; rcr dword ptr [rdx], 0xf; xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044ca06: jns 0x4ca6b; rcr dword ptr [rdx], 0xf; xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044cc57: jns 0x4ccbc; rcr dword ptr [rdx], 0xf; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x000000000044cdf8: jns 0x4ce5d; rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044cef7: jns 0x4cf5c; rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044cf48: jns 0x4cfad; rcr dword ptr [rdx], 0xf; xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044d047: jns 0x4d0ac; rcr dword ptr [rdx], 0xf; xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044d437: jns 0x4d49c; rcr dword ptr [rdx], 0xf; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x000000000044d728: jns 0x4d78d; rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044d827: jns 0x4d88c; rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000045973c: jns 0x5971e; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000045982a: jns 0x5980c; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x0000000000459b05: jns 0x59ac7; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x0000000000459c38: jns 0x59bfa; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x0000000000459fbd: jns 0x59fbd; vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000045a148: jns 0x5a148; vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x0000000000407fa5: jns 0x7f60; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004a28e0: jns 0xa291a; add byte ptr [rdi + rcx*2 + 0x48], dh; add esp, 0x18; ret; 
0x000000000040c233: jns 0xc208; or dword ptr [rax], eax; ret; 
0x000000000040d84b: jns 0xd80a; or dword ptr [rax], eax; ret; 
0x0000000000455d78: jns 0xffffffff834e64d5; call 0x7f92a58e; or ecx, dword ptr [rdi]; test dword ptr [rsi + 7], esp; add byte ptr [rax], al; ret; 
0x000000000040a978: jns 0xffffffffe089ed81; pop rbx; pop rbp; pop r12; ret; 
0x000000000041ed1c: jo 0x1ed60; add byte ptr [rax + 0x39], r9b; ret; 
0x000000000042b77d: jo 0x2b78a; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000431c3c: jo 0x31cba; add al, byte ptr [rax]; lea rax, [rip + 0x27cb9]; cmove rax, rdx; ret; 
0x000000000045fb8a: jo 0x5fbac; ret; 
0x0000000000467a65: jo 0x67a76; mov dh, 0x48; dec dword ptr [rax + 0x3948074a]; ret; 
0x00000000004687c1: jo 0x687d2; mov dh, 0x48; dec dword ptr [rax + 0x3948074a]; ret; 
0x000000000046afe9: jo 0x6affa; mov dh, 0x48; dec dword ptr [rax + 0x3948074a]; ret; 
0x000000000046c741: jo 0x6c752; mov dh, 0x48; dec dword ptr [rax + 0x3948074a]; ret; 
0x00000000004817ee: jo 0x81830; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000048397c: jo 0x839d9; pop rbp; pop r12; ret; 
0x000000000048862d: jo 0x885f0; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x0000000000491dbb: jo 0x91e18; pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000004988dc: jo 0x988de; add byte ptr [rax], al; cmove rax, rdx; ret; 
0x0000000000499adf: jo 0x99b3c; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000040b6f1: jo 0xb70a; add byte ptr [rax], al; cmovns eax, edx; add rsp, 8; ret; 
0x00000000004318f7: jp 0x318f9; add byte ptr [rax - 0x73], cl; adc eax, 0x25b3f; cmovne rax, rdx; ret; 
0x000000000044efd2: jp 0x4efd5; add byte ptr [rax], al; vzeroupper; ret; 
0x0000000000490a8a: jp 0x90b00; adc ecx, dword ptr [rdi]; mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x0000000000401e84: js 0x1e8e; add byte ptr [rax], al; leave; ret; 
0x000000000042340c: js 0x23437; mov qword ptr [rbx + 0x90], rax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000403044: js 0x3046; add byte ptr [rbp - 0x76e68740], al; ret; 
0x0000000000403084: js 0x3076; or eax, 0x1b800; add byte ptr [rax], al; pop rbx; mov dword ptr [rip + 0xdf070], 1; ret; 
0x000000000040315c: js 0x3160; ret; 
0x0000000000431cab: js 0x31caf; add byte ptr [rax - 0x73], cl; add eax, 0x278eb; cmove rax, rdx; ret; 
0x000000000045cf23: js 0x5ced6; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x00000000004817ea: js 0x817fc; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000408eeb: js 0x8f00; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000408f4b: js 0x8f58; add rsp, 0x18; pop rbp; pop r12; ret; 
0x00000000004a0e15: js 0xa0e74; pop r12; ret; 
0x00000000004a16be: js 0xa16e8; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x00000000004a3b4e: js 0xa3b52; add byte ptr [rax], al; mov rax, rbp; pop rbx; pop rbp; ret; 
0x00000000004a3b63: js 0xa3b67; add byte ptr [rax], al; xor eax, eax; pop rbx; pop rbp; ret; 
0x00000000004a466e: js 0xa4698; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x00000000004a600e: js 0xa6038; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x000000000040a9cd: js 0xa9db; xor eax, eax; pop rbx; ret; 
0x000000000040b4a3: js 0xb485; or dword ptr [rax], eax; ret; 
0x0000000000455c75: js 0xffffffff834e5ef2; call 0x7f92a483; add ecx, dword ptr [rdi]; test dword ptr [rcx + 8], ebp; add byte ptr [rax], al; ret; 
0x000000000049b9fd: lahf; add al, 0; jne 0x9ba08; ret; 
0x000000000044d19d: lahf; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000428ed8: lahf; ret 0x3949; 
0x0000000000428f72: lahf; ret 0x61e9; 
0x00000000004a2ff6: lahf; ret 0xf45; 
0x000000000045d531: lahf; ret; 
0x000000000045d52b: lahf; vpaddsw ymm0, ymm15, ymmword ptr [rcx + 0xf]; lahf; ret; 
0x000000000044d82d: lar eax, word ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000042f5b6: lar eax, word ptr [rax]; add byte ptr [rbp + 0x4c], bl; mov eax, eax; pop r12; pop r13; ret; 
0x0000000000471702: lcall [rbp + 0x41]; pop rsp; pop r13; ret; 
0x00000000004028c8: lcall [rbp + 0x41]; pop rsp; ret; 
0x00000000004025d1: lcall [rbp + 0x44]; mov eax, esp; pop r12; pop r13; ret; 
0x00000000004089b7: lcall [rbx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x000000000040b209: lcall [rbx + 0x44]; mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x000000000040a98d: lcall [rbx + 0x5d]; mov eax, r12d; pop r12; ret; 
0x0000000000402a30: lcall [rbx + 0x5d]; pop r12; pop r13; pop r14; ret; 
0x0000000000422585: lcall [rbx + 0x5d]; pop r12; pop r13; ret; 
0x00000000004029f4: lcall [rbx + 0x5d]; pop r12; ret; 
0x000000000040385d: lcall [rbx + 0x5d]; ret; 
0x000000000048fa6a: lcall [rbx + 0x64]; mov eax, dword ptr [rax]; ret; 
0x0000000000430fb8: lcall [rdx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000442b9c: lddqu xmm0, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi + 0x10], xmm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000442e26: lddqu xmm0, xmmword ptr [rsi + 0xa]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442db6: lddqu xmm0, xmmword ptr [rsi + 0xb]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442d46: lddqu xmm0, xmmword ptr [rsi + 0xc]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442cd6: lddqu xmm0, xmmword ptr [rsi + 0xd]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442c66: lddqu xmm0, xmmword ptr [rsi + 0xe]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442bf6: lddqu xmm0, xmmword ptr [rsi + 0xf]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000443216: lddqu xmm0, xmmword ptr [rsi + 1]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004431a6: lddqu xmm0, xmmword ptr [rsi + 2]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000443136: lddqu xmm0, xmmword ptr [rsi + 3]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004430c6: lddqu xmm0, xmmword ptr [rsi + 4]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000443056: lddqu xmm0, xmmword ptr [rsi + 5]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442fe6: lddqu xmm0, xmmword ptr [rsi + 6]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442f76: lddqu xmm0, xmmword ptr [rsi + 7]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442f06: lddqu xmm0, xmmword ptr [rsi + 8]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442e96: lddqu xmm0, xmmword ptr [rsi + 9]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442386: lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x0000000000442b2c: lddqu xmm0, xmmword ptr [rsi - 0x11]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442aac: lddqu xmm0, xmmword ptr [rsi - 0x12]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442a1c: lddqu xmm0, xmmword ptr [rsi - 0x13]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044299c: lddqu xmm0, xmmword ptr [rsi - 0x14]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044291c: lddqu xmm0, xmmword ptr [rsi - 0x15]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044289c: lddqu xmm0, xmmword ptr [rsi - 0x16]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044281c: lddqu xmm0, xmmword ptr [rsi - 0x17]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044279c: lddqu xmm0, xmmword ptr [rsi - 0x18]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044271c: lddqu xmm0, xmmword ptr [rsi - 0x19]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x19], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044269c: lddqu xmm0, xmmword ptr [rsi - 0x1a]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044261c: lddqu xmm0, xmmword ptr [rsi - 0x1b]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044259c: lddqu xmm0, xmmword ptr [rsi - 0x1c]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044250c: lddqu xmm0, xmmword ptr [rsi - 0x1d]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044247c: lddqu xmm0, xmmword ptr [rsi - 0x1e]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004423ec: lddqu xmm0, xmmword ptr [rsi - 0x1f]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044237c: lddqu xmm0, xmmword ptr [rsi - 0x20]; movdqu xmmword ptr [rdi - 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x0000000000442ba6: lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000442b31: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442ab1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442a21: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004429a1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442921: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004428a1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442821: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004427a1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442721: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x19], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004426a1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442621: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004425a1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442511: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442481: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004423f1: lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442e2b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442dbb: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442d4b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442cdb: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442c6b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442bfb: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000044321b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004431ab: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000044313b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004430cb: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000044305b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442feb: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442f7b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442f0b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442e9b: lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000048f045: lea eax, [rax + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x00000000004a16dc: lea eax, [rax + 8]; mov qword ptr [rcx], r8; ret; 
0x0000000000439214: lea eax, [rax + rdi + 0x10]; ret; 
0x0000000000439224: lea eax, [rax + rdi + 0x20]; ret; 
0x00000000004391f4: lea eax, [rax + rdi - 0x10]; ret; 
0x000000000048b103: lea eax, [rax + rdx*4]; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000048b0d1: lea eax, [rax + rdx*4]; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000043049d: lea eax, [rax - 0x10]; ret; 
0x0000000000482ded: lea eax, [rcx + rsi]; ret; 
0x0000000000458ec4: lea eax, [rcx - 1]; ret; 
0x0000000000456b8c: lea eax, [rdi + 0x10]; ret; 
0x0000000000456ba1: lea eax, [rdi + 0x11]; ret; 
0x0000000000456bbf: lea eax, [rdi + 0x12]; ret; 
0x0000000000456bdf: lea eax, [rdi + 0x13]; ret; 
0x0000000000456c02: lea eax, [rdi + 0x14]; ret; 
0x0000000000456c21: lea eax, [rdi + 0x15]; ret; 
0x0000000000456c41: lea eax, [rdi + 0x16]; ret; 
0x0000000000456c61: lea eax, [rdi + 0x17]; ret; 
0x0000000000456c84: lea eax, [rdi + 0x18]; ret; 
0x0000000000456ca9: lea eax, [rdi + 0x19]; ret; 
0x0000000000456cc7: lea eax, [rdi + 0x1a]; ret; 
0x0000000000456ce7: lea eax, [rdi + 0x1b]; ret; 
0x0000000000456d03: lea eax, [rdi + 0x1c]; ret; 
0x0000000000456d23: lea eax, [rdi + 0x1d]; ret; 
0x0000000000456d43: lea eax, [rdi + 0x1e]; ret; 
0x0000000000456d63: lea eax, [rdi + 0x1f]; ret; 
0x0000000000456add: lea eax, [rdi + 0xa]; ret; 
0x0000000000456afd: lea eax, [rdi + 0xb]; ret; 
0x0000000000456b1f: lea eax, [rdi + 0xc]; ret; 
0x0000000000456b3f: lea eax, [rdi + 0xd]; ret; 
0x0000000000456b5f: lea eax, [rdi + 0xe]; ret; 
0x0000000000456b79: lea eax, [rdi + 0xf]; ret; 
0x0000000000456a27: lea eax, [rdi + 1]; ret; 
0x0000000000457067: lea eax, [rdi + 1]; vzeroupper; ret; 
0x0000000000456a3a: lea eax, [rdi + 2]; ret; 
0x000000000045707b: lea eax, [rdi + 2]; vzeroupper; ret; 
0x0000000000456a45: lea eax, [rdi + 3]; ret; 
0x0000000000457095: lea eax, [rdi + 3]; vzeroupper; ret; 
0x0000000000456a58: lea eax, [rdi + 4]; ret; 
0x0000000000456a6d: lea eax, [rdi + 5]; ret; 
0x0000000000456a8b: lea eax, [rdi + 6]; ret; 
0x0000000000456a97: lea eax, [rdi + 7]; ret; 
0x0000000000456aaa: lea eax, [rdi + 8]; ret; 
0x0000000000456abf: lea eax, [rdi + 9]; ret; 
0x00000000004828e9: lea eax, [rdi + rax + 0x10]; ret; 
0x000000000044e0b7: lea eax, [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000004828f9: lea eax, [rdi + rax + 0x20]; ret; 
0x00000000004391dd: lea eax, [rdi + rax + 0x30]; ret; 
0x000000000044e0d7: lea eax, [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044e115: lea eax, [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000483035: lea eax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x000000000044db10: lea eax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000044df7d: lea eax, [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044dd3b: lea eax, [rdi + rax]; ret; 
0x00000000004570ad: lea eax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000482ce9: lea eax, [rdi + rsi]; ret; 
0x00000000004916ac: lea eax, [rdi - 1]; cmp rax, -3; jbe 0x916c0; ret; 
0x00000000004958a0: lea eax, [rdi - 1]; xor edx, edx; div ecx; add r8d, eax; mov eax, r8d; ret; 
0x0000000000456a13: lea eax, [rdi]; ret; 
0x0000000000456fe5: lea eax, [rdi]; vzeroupper; ret; 
0x0000000000454fdd: lea eax, [rdx + 0xa]; ret; 
0x0000000000454ffd: lea eax, [rdx + 0xb]; ret; 
0x000000000045501f: lea eax, [rdx + 0xc]; ret; 
0x000000000045503f: lea eax, [rdx + 0xd]; ret; 
0x000000000045505f: lea eax, [rdx + 0xe]; ret; 
0x0000000000454eef: lea eax, [rdx + 0xf]; ret; 
0x0000000000454f17: lea eax, [rdx + 1]; ret; 
0x0000000000454f2d: lea eax, [rdx + 2]; ret; 
0x0000000000454f45: lea eax, [rdx + 3]; ret; 
0x0000000000454f5b: lea eax, [rdx + 4]; ret; 
0x0000000000454f6d: lea eax, [rdx + 5]; ret; 
0x0000000000454f8b: lea eax, [rdx + 6]; ret; 
0x00000000004a16d1: lea eax, [rdx + 7]; and rax, 0xfffffffffffffff8; mov r8, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [rcx], r8; ret; 
0x0000000000454e97: lea eax, [rdx + 7]; ret; 
0x0000000000454f9d: lea eax, [rdx + 8]; ret; 
0x0000000000454fbd: lea eax, [rdx + 9]; ret; 
0x0000000000499012: lea eax, [rdx + rcx]; cmp rax, qword ptr [rip + 0x4c114]; jae 0x9902a; mov rdx, qword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000427a5e: lea eax, [rdx + rdi]; ret; 
0x000000000045a853: lea eax, [rdx + rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x0000000000454f05: lea eax, [rdx]; ret; 
0x0000000000481cda: lea eax, [rip + 0x13e0]; cmove rax, rdx; ret; 
0x0000000000431be6: lea eax, [rip + 0x14914]; lea rdx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x0000000000431d2a: lea eax, [rip + 0x1bfc0]; cmove rax, rdx; ret; 
0x0000000000430e83: lea eax, [rip + 0x1cc37]; lea rdx, [rip + 0x26290]; cmovne rax, rdx; ret; 
0x0000000000430fea: lea eax, [rip + 0x1d330]; cmove rax, rdx; ret; 
0x0000000000431b93: lea eax, [rip + 0x1d8a7]; lea rdx, [rip + 0x21cc0]; cmovne rax, rdx; ret; 
0x0000000000430f43: lea eax, [rip + 0x1e407]; lea rdx, [rip + 0x1e5e0]; cmovne rax, rdx; ret; 
0x0000000000483d43: lea eax, [rip + 0x257]; lea rdx, [rip + 0x30]; cmovne rax, rdx; ret; 
0x00000000004318b3: lea eax, [rip + 0x272f7]; cmove rax, rdx; ret; 
0x0000000000431caf: lea eax, [rip + 0x278eb]; cmove rax, rdx; ret; 
0x0000000000431b3f: lea eax, [rip + 0x27a4b]; cmove rax, rdx; ret; 
0x00000000004319df: lea eax, [rip + 0x27bbb]; cmove rax, rdx; ret; 
0x0000000000431c41: lea eax, [rip + 0x27cb9]; cmove rax, rdx; ret; 
0x0000000000431ad1: lea eax, [rip + 0x27e19]; cmove rax, rdx; ret; 
0x0000000000431971: lea eax, [rip + 0x27f89]; cmove rax, rdx; ret; 
0x0000000000431c93: lea eax, [rip + 0x280a7]; cmove rax, rdx; ret; 
0x0000000000430f73: lea eax, [rip + 0x280d7]; cmovne rax, rdx; ret; 
0x0000000000431b23: lea eax, [rip + 0x28207]; cmove rax, rdx; ret; 
0x00000000004319c3: lea eax, [rip + 0x28377]; cmove rax, rdx; ret; 
0x0000000000431a5a: lea eax, [rip + 0x287f0]; cmovne rax, rdx; ret; 
0x0000000000431a3b: lea eax, [rip + 0x289df]; cmove rax, rdx; ret; 
0x0000000000431a83: lea eax, [rip + 0x28b27]; cmove rax, rdx; ret; 
0x000000000042a6bf: lea eax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x000000000042a6b1: lea eax, [rip + 0x3429]; mov qword ptr [rip + 0xb810a], rax; lea rax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x000000000043104d: lea eax, [rip + 0x3afd]; lea rdx, [rip + 0x5356]; cmovne rax, rdx; ret; 
0x0000000000497eb1: lea eax, [rip + 0x4d189]; mov qword ptr [rip + 0x4d16a], rax; ret; 
0x0000000000497e9a: lea eax, [rip + 0x4d1a0]; mov qword ptr [rip + 0x4d181], rax; add rsp, 8; ret; 
0x0000000000498663: lea eax, [rip + 0x67]; cmovne rax, rdx; ret; 
0x00000000004988da: lea eax, [rip + 0x70]; cmove rax, rdx; ret; 
0x0000000000431cea: lea eax, [rip + 0x7330]; cmove rax, rdx; ret; 
0x00000000004318f4: lea eax, [rip + 0x7a86]; lea rdx, [rip + 0x25b3f]; cmovne rax, rdx; ret; 
0x0000000000431919: lea eax, [rip + 0x7e61]; test byte ptr [rip + 0xb34bf], 1; je 0x318e1; ret; 
0x0000000000481dda: lea eax, [rip + 0x810]; cmove rax, rdx; ret; 
0x0000000000461305: lea eax, [rip + 0x81f55]; ret; 
0x0000000000431c62: lea eax, [rip + 0x9568]; lea rdx, [rip + 0xeaf1]; cmovne rax, rdx; ret; 
0x0000000000431af2: lea eax, [rip + 0x96b8]; lea rdx, [rip + 0xec41]; cmovne rax, rdx; ret; 
0x000000000048362a: lea eax, [rip + 0x9b0]; cmove rax, rdx; ret; 
0x000000000040d8b1: lea eax, [rip + 0x9bcf9]; ret; 
0x000000000040d8a1: lea eax, [rip + 0x9bd00]; ret; 
0x000000000040d8a9: lea eax, [rip + 0x9bd08]; ret; 
0x000000000040d861: lea eax, [rip + 0x9bd1d]; ret; 
0x000000000040d871: lea eax, [rip + 0x9bd1e]; ret; 
0x000000000040d829: lea eax, [rip + 0x9bd3b]; ret; 
0x000000000040d831: lea eax, [rip + 0x9bd3c]; ret; 
0x000000000040d899: lea eax, [rip + 0x9bd71]; ret; 
0x000000000040d891: lea eax, [rip + 0x9bd72]; ret; 
0x000000000040d889: lea eax, [rip + 0x9bd74]; ret; 
0x000000000040d881: lea eax, [rip + 0x9bd76]; ret; 
0x000000000040d7e1: lea eax, [rip + 0x9bd77]; ret; 
0x000000000040d849: lea eax, [rip + 0x9bd79]; ret; 
0x000000000040d851: lea eax, [rip + 0x9bd7f]; ret; 
0x000000000040d7c1: lea eax, [rip + 0x9bd80]; ret; 
0x000000000040d7b1: lea eax, [rip + 0x9bd84]; ret; 
0x000000000040d841: lea eax, [rip + 0x9bd88]; ret; 
0x000000000040d7a1: lea eax, [rip + 0x9bd8c]; ret; 
0x000000000040d7d1: lea eax, [rip + 0x9bd8e]; ret; 
0x000000000040d791: lea eax, [rip + 0x9bd8f]; ret; 
0x000000000040d769: lea eax, [rip + 0x9bdb0]; ret; 
0x000000000040d771: lea eax, [rip + 0x9bdb7]; ret; 
0x000000000040d821: lea eax, [rip + 0x9bdba]; ret; 
0x000000000040d781: lea eax, [rip + 0x9bdcc]; ret; 
0x000000000040d811: lea eax, [rip + 0x9bdd1]; ret; 
0x000000000040d801: lea eax, [rip + 0x9bde8]; ret; 
0x000000000040d7f1: lea eax, [rip + 0x9bdff]; ret; 
0x000000000040cd71: lea eax, [rip + 0x9c839]; ret; 
0x000000000040cd61: lea eax, [rip + 0x9c840]; ret; 
0x000000000040cd69: lea eax, [rip + 0x9c848]; ret; 
0x000000000040cd21: lea eax, [rip + 0x9c85d]; ret; 
0x000000000040cd31: lea eax, [rip + 0x9c85e]; ret; 
0x000000000040cce9: lea eax, [rip + 0x9c87b]; ret; 
0x000000000040ccf1: lea eax, [rip + 0x9c87c]; ret; 
0x000000000040cd59: lea eax, [rip + 0x9c8b1]; ret; 
0x000000000040cd51: lea eax, [rip + 0x9c8b2]; ret; 
0x000000000040cd49: lea eax, [rip + 0x9c8b4]; ret; 
0x000000000040cd41: lea eax, [rip + 0x9c8b6]; ret; 
0x000000000040cca1: lea eax, [rip + 0x9c8b7]; ret; 
0x000000000040cd09: lea eax, [rip + 0x9c8b9]; ret; 
0x000000000040cd11: lea eax, [rip + 0x9c8bf]; ret; 
0x000000000040cc81: lea eax, [rip + 0x9c8c0]; ret; 
0x000000000040cc71: lea eax, [rip + 0x9c8c4]; ret; 
0x000000000040cd01: lea eax, [rip + 0x9c8c8]; ret; 
0x000000000040cc61: lea eax, [rip + 0x9c8cc]; ret; 
0x000000000040cc91: lea eax, [rip + 0x9c8ce]; ret; 
0x000000000040cc51: lea eax, [rip + 0x9c8cf]; ret; 
0x000000000040cc29: lea eax, [rip + 0x9c8f0]; ret; 
0x000000000040cc31: lea eax, [rip + 0x9c8f7]; ret; 
0x000000000040cce1: lea eax, [rip + 0x9c8fa]; ret; 
0x000000000040cc41: lea eax, [rip + 0x9c90c]; ret; 
0x000000000040ccd1: lea eax, [rip + 0x9c911]; ret; 
0x000000000040ccc1: lea eax, [rip + 0x9c928]; ret; 
0x000000000040ccb1: lea eax, [rip + 0x9c93f]; ret; 
0x000000000040c231: lea eax, [rip + 0x9d379]; ret; 
0x000000000040c221: lea eax, [rip + 0x9d380]; ret; 
0x000000000040c229: lea eax, [rip + 0x9d388]; ret; 
0x000000000040c1e1: lea eax, [rip + 0x9d39d]; ret; 
0x000000000040c1f1: lea eax, [rip + 0x9d39e]; ret; 
0x000000000040c1a9: lea eax, [rip + 0x9d3bb]; ret; 
0x000000000040c1b1: lea eax, [rip + 0x9d3bc]; ret; 
0x000000000040c219: lea eax, [rip + 0x9d3f1]; ret; 
0x000000000040c211: lea eax, [rip + 0x9d3f2]; ret; 
0x000000000040c209: lea eax, [rip + 0x9d3f4]; ret; 
0x000000000040c201: lea eax, [rip + 0x9d3f6]; ret; 
0x000000000040c161: lea eax, [rip + 0x9d3f7]; ret; 
0x000000000040c1c9: lea eax, [rip + 0x9d3f9]; ret; 
0x000000000040c1d1: lea eax, [rip + 0x9d3ff]; ret; 
0x000000000040c141: lea eax, [rip + 0x9d400]; ret; 
0x000000000040c131: lea eax, [rip + 0x9d404]; ret; 
0x000000000040c1c1: lea eax, [rip + 0x9d408]; ret; 
0x000000000040c121: lea eax, [rip + 0x9d40c]; ret; 
0x000000000040c151: lea eax, [rip + 0x9d40e]; ret; 
0x000000000040c111: lea eax, [rip + 0x9d40f]; ret; 
0x000000000040c0e9: lea eax, [rip + 0x9d430]; ret; 
0x000000000040c0f1: lea eax, [rip + 0x9d437]; ret; 
0x000000000040c1a1: lea eax, [rip + 0x9d43a]; ret; 
0x000000000040c101: lea eax, [rip + 0x9d44c]; ret; 
0x000000000040c191: lea eax, [rip + 0x9d451]; ret; 
0x000000000040c181: lea eax, [rip + 0x9d468]; ret; 
0x000000000040c171: lea eax, [rip + 0x9d47f]; ret; 
0x000000000040b5f9: lea eax, [rip + 0x9e004]; ret; 
0x000000000040b5f1: lea eax, [rip + 0x9e012]; ret; 
0x000000000040b561: lea eax, [rip + 0x9e014]; ret; 
0x000000000040b569: lea eax, [rip + 0x9e015]; ret; 
0x000000000040b579: lea eax, [rip + 0x9e016]; ret; 
0x000000000040b5b9: lea eax, [rip + 0x9e017]; ret; 
0x000000000040b589: lea eax, [rip + 0x9e018]; ret; 
0x000000000040b591: lea eax, [rip + 0x9e019]; ret; 
0x000000000040b5c1: lea eax, [rip + 0x9e01a]; ret; 
0x000000000040b5a1: lea eax, [rip + 0x9e01b]; ret; 
0x000000000040b551: lea eax, [rip + 0x9e01c]; ret; 
0x000000000040b5e9: lea eax, [rip + 0x9e021]; ret; 
0x000000000040b541: lea eax, [rip + 0x9e023]; ret; 
0x000000000040b531: lea eax, [rip + 0x9e02e]; ret; 
0x000000000040b521: lea eax, [rip + 0x9e037]; ret; 
0x000000000040b501: lea eax, [rip + 0x9e040]; ret; 
0x000000000040b4f1: lea eax, [rip + 0x9e044]; ret; 
0x000000000040b4e1: lea eax, [rip + 0x9e04c]; ret; 
0x000000000040b4d1: lea eax, [rip + 0x9e04f]; ret; 
0x000000000040b4b1: lea eax, [rip + 0x9e077]; ret; 
0x000000000040b4a1: lea eax, [rip + 0x9e078]; ret; 
0x000000000040b4c1: lea eax, [rip + 0x9e08c]; ret; 
0x0000000000402165: lea eax, [rip + 0xa6f3d]; ret; 
0x000000000042a5ba: lea eax, [rip + 0xb8220]; add rsp, 0x10; pop rbp; ret; 
0x000000000040d859: lea eax, [rip + 0xbdf90]; ret; 
0x000000000040cd19: lea eax, [rip + 0xbead0]; ret; 
0x000000000040c1d9: lea eax, [rip + 0xbf610]; ret; 
0x000000000040b511: lea eax, [rip + 0xc02d8]; ret; 
0x0000000000431992: lea eax, [rip + 0xc218]; lea rdx, [rip + 0x118b1]; cmovne rax, rdx; ret; 
0x00000000004310a3: lea eax, [rip + 0xc97]; lea rdx, [rip + 0x1fc30]; cmovne rax, rdx; ret; 
0x00000000004109ea: lea eax, [rip + 0xd38f0]; ret; 
0x0000000000430ee3: lea eax, [rip + 0xeb7]; lea rdx, [rip + 0x25b0]; cmovne rax, rdx; ret; 
0x0000000000481d1a: lea eax, [rip + 0xed0]; cmove rax, rdx; ret; 
0x000000000042e4bb: lea eax, [rip - 0x9e1]; mov qword ptr [rip + 0xb4300], rax; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x000000000042e4c9: lea eax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x000000000040a8b4: lea eax, [rsi*8 + 0x10]; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000040a880: lea eax, [rsi*8 + 0x10]; ret; 
0x000000000040a86e: lea eax, [rsi*8 + 0x14]; mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000040a8c8: lea eax, [rsi*8 + 0x14]; ret; 
0x000000000048f1a7: lea ebp, [rdi]; add eax, 0x7894800; mov rax, qword ptr [rip + 0x562b3]; mov qword ptr [rsi], rax; ret; 
0x000000000042ce68: lea ecx, [r8 + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x000000000042ce69: lea ecx, [rax + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x00000000004527e6: lea ecx, [rdx + 0x10]; jne 0x52d30; ret; 
0x0000000000452ae4: lea ecx, [rdx + 0xa]; jne 0x52d30; ret; 
0x0000000000452b04: lea ecx, [rdx + 0xb]; jne 0x52d30; ret; 
0x0000000000452b24: lea ecx, [rdx + 0xc]; jne 0x52d30; ret; 
0x0000000000452b46: lea ecx, [rdx + 0xd]; jne 0x52d30; ret; 
0x0000000000452b66: lea ecx, [rdx + 0xe]; jne 0x52d30; ret; 
0x0000000000452b86: lea ecx, [rdx + 0xf]; jne 0x52d30; ret; 
0x00000000004529dc: lea ecx, [rdx + 1]; jne 0x52d30; ret; 
0x00000000004529fe: lea ecx, [rdx + 2]; jne 0x52d30; ret; 
0x0000000000452a24: lea ecx, [rdx + 3]; jne 0x52d30; ret; 
0x0000000000452a3c: lea ecx, [rdx + 4]; jne 0x52d30; ret; 
0x0000000000452a62: lea ecx, [rdx + 5]; jne 0x52d30; ret; 
0x0000000000452a84: lea ecx, [rdx + 6]; jne 0x52d30; ret; 
0x0000000000452aa2: lea ecx, [rdx + 7]; jne 0x52d30; ret; 
0x000000000045277e: lea ecx, [rdx + 8]; jne 0x52d30; ret; 
0x0000000000452ac4: lea ecx, [rdx + 9]; jne 0x52d30; ret; 
0x0000000000437c80: lea ecx, [rdx + rcx - 0x10]; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x000000000044da59: lea ecx, [rip + 0x6d2e1]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000044c644: lea ecx, [rip + 0x6e6f6]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000044c3d9: lea ecx, [rip + 0x6e961]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000044ab04: lea ecx, [rip + 0x70236]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x00000000004234e6: lea ecx, [rip + 0xc0794]; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x000000000045fabe: lea ecx, [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x0000000000485256: lea ecx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x000000000048523b: lea ecx, [rsi + rcx*4]; mov edx, dword ptr [rcx + rdx]; test edx, edx; jne 0x85250; ret; 
0x00000000004595d9: lea ecx, [rsi + rdx]; cmp rdi, r9; jb 0x59748; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000459944: lea ecx, [rsi + rdx]; cmp rdi, r9; jb 0x59b15; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000459d8f: lea ecx, [rsi + rdx]; cmp rdi, r9; jb 0x59fd0; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000479974: lea ecx, [rsi + rsi*8 - 0x76b30001]; ret 0x894c; 
0x0000000000455e1d: lea edi, [rdi + 0x10]; jne 0x564f0; ret; 
0x0000000000455e40: lea edi, [rdi + 0x11]; jne 0x564f0; ret; 
0x0000000000455e65: lea edi, [rdi + 0x12]; jne 0x564f0; ret; 
0x0000000000455e83: lea edi, [rdi + 0x13]; jne 0x564f0; ret; 
0x0000000000455ea3: lea edi, [rdi + 0x14]; jne 0x564f0; ret; 
0x0000000000455ec6: lea edi, [rdi + 0x15]; jne 0x564f0; ret; 
0x0000000000455ee5: lea edi, [rdi + 0x16]; jne 0x564f0; ret; 
0x0000000000455f05: lea edi, [rdi + 0x17]; jne 0x564f0; ret; 
0x0000000000455f25: lea edi, [rdi + 0x18]; jne 0x564f0; ret; 
0x0000000000455f48: lea edi, [rdi + 0x19]; jne 0x564f0; ret; 
0x0000000000455f7d: lea edi, [rdi + 0x1a]; jne 0x564f0; ret; 
0x0000000000455fab: lea edi, [rdi + 0x1b]; jne 0x564f0; ret; 
0x0000000000455fdb: lea edi, [rdi + 0x1c]; jne 0x564f0; ret; 
0x0000000000456007: lea edi, [rdi + 0x1d]; jne 0x564f0; ret; 
0x0000000000456037: lea edi, [rdi + 0x1e]; jne 0x564f0; ret; 
0x0000000000456067: lea edi, [rdi + 0x1f]; jne 0x564f0; ret; 
0x0000000000456097: lea edi, [rdi + 0x20]; jne 0x564f0; ret; 
0x0000000000455d63: lea edi, [rdi + 0xa]; jne 0x564f0; ret; 
0x0000000000455d81: lea edi, [rdi + 0xb]; jne 0x564f0; ret; 
0x0000000000455da1: lea edi, [rdi + 0xc]; jne 0x564f0; ret; 
0x0000000000455dc3: lea edi, [rdi + 0xd]; jne 0x564f0; ret; 
0x0000000000455de3: lea edi, [rdi + 0xe]; jne 0x564f0; ret; 
0x0000000000455e03: lea edi, [rdi + 0xf]; jne 0x564f0; ret; 
0x000000000044ed1d: lea edi, [rdi + 1]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c37: lea edi, [rdi + 1]; jne 0x564f0; ret; 
0x000000000044eecb: lea edi, [rdi + 2]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c5b: lea edi, [rdi + 2]; jne 0x564f0; ret; 
0x000000000044eeef: lea edi, [rdi + 3]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c7e: lea edi, [rdi + 3]; jne 0x564f0; ret; 
0x000000000044ef09: lea edi, [rdi + 4]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c99: lea edi, [rdi + 4]; jne 0x564f0; ret; 
0x0000000000455cbc: lea edi, [rdi + 5]; jne 0x564f0; ret; 
0x0000000000455ce1: lea edi, [rdi + 6]; jne 0x564f0; ret; 
0x0000000000455cff: lea edi, [rdi + 7]; jne 0x564f0; ret; 
0x0000000000455d1b: lea edi, [rdi + 8]; jne 0x564f0; ret; 
0x0000000000455d3e: lea edi, [rdi + 9]; jne 0x564f0; ret; 
0x0000000000459573: lea edi, [rdi + rcx - 1]; lea rsi, [rsi + rcx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x000000000046ebe0: lea edi, [rdi + rdi*8 - 1]; dec dword ptr [rcx + 1]; ret 0x8d48; 
0x000000000044ef34: lea edi, [rdi + rdx + 1]; jne 0x4f150; vzeroupper; ret; 
0x0000000000476061: lea edi, [rdx + rdi*8 - 0x76b60001]; ret; 
0x0000000000499605: lea edi, [rip + 0x329f5]; call 0x11c50; endbr64; ret; 
0x00000000004612ef: lea edi, [rip + 0x57843]; call 0x11c50; nop word ptr [rax + rax]; endbr64; lea rax, [rip + 0x81f55]; ret; 
0x000000000041eef2: lea edi, [rip + 0x96075]; call 0x11c50; xor r8d, r8d; mov rax, r8; ret; 
0x000000000042d24c: lea edi, [rip + 0xb558e]; syscall; pop rbp; ret; 
0x000000000042e3b8: lea edi, [rip + 0xb6962]; syscall; pop rbx; ret; 
0x000000000042618e: lea edi, [rip + 0xbeb1c]; syscall; ret; 
0x000000000040b6af: lea edx, [rax + 0x1388]; cmovns eax, edx; add rsp, 8; ret; 
0x000000000040b6ef: lea edx, [rax + 0x1770]; cmovns eax, edx; add rsp, 8; ret; 
0x000000000040aaa6: lea edx, [rax + 0x78]; cmp edx, 0x14; ja 0xaac0; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x000000000040b726: lea edx, [rax + 0x78]; cmp edx, 0x14; ja 0xb740; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x000000000040c246: lea edx, [rax + 0x78]; cmp edx, 0x14; ja 0xc260; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x000000000040cd86: lea edx, [rax + 0x78]; cmp edx, 0x14; ja 0xcda0; mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x000000000040aac0: lea edx, [rax + 0xe0]; cmp edx, 0x18; ja 0xaad8; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000040b740: lea edx, [rax + 0xe0]; cmp edx, 0x18; ja 0xb758; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000040c260: lea edx, [rax + 0xe0]; cmp edx, 0x18; ja 0xc278; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000040cda0: lea edx, [rax + 0xe0]; cmp edx, 0x18; ja 0xcdb8; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000040b66f: lea edx, [rax + 0xfa0]; cmovns eax, edx; add rsp, 8; ret; 
0x00000000004293b4: lea edx, [rax + 1]; mov qword ptr [rip + 0xb93d2], rdx; ret; 
0x00000000004077cf: lea edx, [rax + rdx*2]; xor eax, eax; cmp ecx, edx; je 0x77e0; ret; 
0x00000000004817e5: lea edx, [rax + rdx*4]; mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x00000000004817b4: lea edx, [rax + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000431999: lea edx, [rip + 0x118b1]; cmovne rax, rdx; ret; 
0x0000000000481d13: lea edx, [rip + 0x11d7]; lea rax, [rip + 0xed0]; cmove rax, rdx; ret; 
0x000000000049865c: lea edx, [rip + 0x11e]; lea rax, [rip + 0x67]; cmovne rax, rdx; ret; 
0x0000000000481cd3: lea edx, [rip + 0x1607]; lea rax, [rip + 0x13e0]; cmove rax, rdx; ret; 
0x0000000000431bed: lea edx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x0000000000431d23: lea edx, [rip + 0x1c407]; lea rax, [rip + 0x1bfc0]; cmove rax, rdx; ret; 
0x0000000000430fe3: lea edx, [rip + 0x1d4d7]; lea rax, [rip + 0x1d330]; cmove rax, rdx; ret; 
0x0000000000430f4a: lea edx, [rip + 0x1e5e0]; cmovne rax, rdx; ret; 
0x00000000004310aa: lea edx, [rip + 0x1fc30]; cmovne rax, rdx; ret; 
0x0000000000431b9a: lea edx, [rip + 0x21cc0]; cmovne rax, rdx; ret; 
0x0000000000430eea: lea edx, [rip + 0x25b0]; cmovne rax, rdx; ret; 
0x00000000004318fb: lea edx, [rip + 0x25b3f]; cmovne rax, rdx; ret; 
0x0000000000430e8a: lea edx, [rip + 0x26290]; cmovne rax, rdx; ret; 
0x0000000000431ca8: lea edx, [rip + 0x27832]; lea rax, [rip + 0x278eb]; cmove rax, rdx; ret; 
0x0000000000431b38: lea edx, [rip + 0x27992]; lea rax, [rip + 0x27a4b]; cmove rax, rdx; ret; 
0x00000000004319d8: lea edx, [rip + 0x27b02]; lea rax, [rip + 0x27bbb]; cmove rax, rdx; ret; 
0x0000000000431c3a: lea edx, [rip + 0x27c70]; lea rax, [rip + 0x27cb9]; cmove rax, rdx; ret; 
0x0000000000431aca: lea edx, [rip + 0x27dd0]; lea rax, [rip + 0x27e19]; cmove rax, rdx; ret; 
0x000000000043196a: lea edx, [rip + 0x27f40]; lea rax, [rip + 0x27f89]; cmove rax, rdx; ret; 
0x0000000000431c8c: lea edx, [rip + 0x2805e]; lea rax, [rip + 0x280a7]; cmove rax, rdx; ret; 
0x0000000000430f6c: lea edx, [rip + 0x2818e]; lea rax, [rip + 0x280d7]; cmovne rax, rdx; ret; 
0x0000000000431b1c: lea edx, [rip + 0x281be]; lea rax, [rip + 0x28207]; cmove rax, rdx; ret; 
0x00000000004319bc: lea edx, [rip + 0x2832e]; lea rax, [rip + 0x28377]; cmove rax, rdx; ret; 
0x0000000000431a53: lea edx, [rip + 0x28867]; lea rax, [rip + 0x287f0]; cmovne rax, rdx; ret; 
0x0000000000431a34: lea edx, [rip + 0x28996]; lea rax, [rip + 0x289df]; cmove rax, rdx; ret; 
0x0000000000431a7c: lea edx, [rip + 0x28ace]; lea rax, [rip + 0x28b27]; cmove rax, rdx; ret; 
0x0000000000483d4a: lea edx, [rip + 0x30]; cmovne rax, rdx; ret; 
0x00000000004988d3: lea edx, [rip + 0x3a7]; lea rax, [rip + 0x70]; cmove rax, rdx; ret; 
0x00000000004a390c: lea edx, [rip + 0x4184e]; cmp byte ptr [rdx + rsi], 8; jne 0x1755; mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x000000000049833a: lea edx, [rip + 0x4b7c0]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000431054: lea edx, [rip + 0x5356]; cmovne rax, rdx; ret; 
0x000000000044daa7: lea edx, [rip + 0x6d293]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044da8d: lea edx, [rip + 0x6d2ad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044c427: lea edx, [rip + 0x6e913]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044c40d: lea edx, [rip + 0x6e92d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044a85d: lea edx, [rip + 0x704dd]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000448717: lea edx, [rip + 0x72623]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x00000000004486fd: lea edx, [rip + 0x7263d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000431ce3: lea edx, [rip + 0x7547]; lea rax, [rip + 0x7330]; cmove rax, rdx; ret; 
0x0000000000410955: lea edx, [rip + 0xa2b45]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rdx; ret; 
0x0000000000481dd3: lea edx, [rip + 0xb47]; lea rax, [rip + 0x810]; cmove rax, rdx; ret; 
0x0000000000483623: lea edx, [rip + 0xc57]; lea rax, [rip + 0x9b0]; cmove rax, rdx; ret; 
0x0000000000431c69: lea edx, [rip + 0xeaf1]; cmovne rax, rdx; ret; 
0x0000000000431af9: lea edx, [rip + 0xec41]; cmovne rax, rdx; ret; 
0x00000000004318ac: lea edx, [rip - 0x362]; lea rax, [rip + 0x272f7]; cmove rax, rdx; ret; 
0x0000000000459567: lea edx, [rsi + rcx]; cmp rdi, rdx; jb 0x59572; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000047aa88: lea esi, [rax]; idiv edi; inc dword ptr [rcx - 1]; push rsp; ret; 
0x00000000004995fe: lea esi, [rip + 0x329e4]; lea rdi, [rip + 0x329f5]; call 0x11c50; endbr64; ret; 
0x000000000041eeeb: lea esi, [rip + 0x9606f]; lea rdi, [rip + 0x96075]; call 0x11c50; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000459578: lea esi, [rsi + rcx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x0000000000474401: lea esp, [rax]; idiv edi; dec dword ptr [rax - 0x7d]; clc; dec dword ptr [rax - 0x77]; ret; 
0x00000000004595d8: lea r9, [rsi + rdx]; cmp rdi, r9; jb 0x59748; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000459943: lea r9, [rsi + rdx]; cmp rdi, r9; jb 0x59b15; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000459d8e: lea r9, [rsi + rdx]; cmp rdi, r9; jb 0x59fd0; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000048f044: lea rax, [r8 + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x00000000004a16db: lea rax, [rax + 8]; mov qword ptr [rcx], r8; ret; 
0x0000000000439213: lea rax, [rax + rdi + 0x10]; ret; 
0x0000000000439223: lea rax, [rax + rdi + 0x20]; ret; 
0x00000000004391f3: lea rax, [rax + rdi - 0x10]; ret; 
0x000000000048b102: lea rax, [rax + rdx*4]; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000048b0d0: lea rax, [rax + rdx*4]; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000043049c: lea rax, [rax - 0x10]; ret; 
0x0000000000482dec: lea rax, [rcx + rsi]; ret; 
0x0000000000458ec3: lea rax, [rcx - 1]; ret; 
0x0000000000456b8b: lea rax, [rdi + 0x10]; ret; 
0x0000000000456ba0: lea rax, [rdi + 0x11]; ret; 
0x0000000000456bbe: lea rax, [rdi + 0x12]; ret; 
0x0000000000456bde: lea rax, [rdi + 0x13]; ret; 
0x0000000000456c01: lea rax, [rdi + 0x14]; ret; 
0x0000000000456c20: lea rax, [rdi + 0x15]; ret; 
0x0000000000456c40: lea rax, [rdi + 0x16]; ret; 
0x0000000000456c60: lea rax, [rdi + 0x17]; ret; 
0x0000000000456c83: lea rax, [rdi + 0x18]; ret; 
0x0000000000456ca8: lea rax, [rdi + 0x19]; ret; 
0x0000000000456cc6: lea rax, [rdi + 0x1a]; ret; 
0x0000000000456ce6: lea rax, [rdi + 0x1b]; ret; 
0x0000000000456d02: lea rax, [rdi + 0x1c]; ret; 
0x0000000000456d22: lea rax, [rdi + 0x1d]; ret; 
0x0000000000456d42: lea rax, [rdi + 0x1e]; ret; 
0x0000000000456d62: lea rax, [rdi + 0x1f]; ret; 
0x0000000000456adc: lea rax, [rdi + 0xa]; ret; 
0x0000000000456afc: lea rax, [rdi + 0xb]; ret; 
0x0000000000456b1e: lea rax, [rdi + 0xc]; ret; 
0x0000000000456b3e: lea rax, [rdi + 0xd]; ret; 
0x0000000000456b5e: lea rax, [rdi + 0xe]; ret; 
0x0000000000456b78: lea rax, [rdi + 0xf]; ret; 
0x0000000000456a26: lea rax, [rdi + 1]; ret; 
0x0000000000457066: lea rax, [rdi + 1]; vzeroupper; ret; 
0x0000000000456a39: lea rax, [rdi + 2]; ret; 
0x000000000045707a: lea rax, [rdi + 2]; vzeroupper; ret; 
0x0000000000456a44: lea rax, [rdi + 3]; ret; 
0x0000000000457094: lea rax, [rdi + 3]; vzeroupper; ret; 
0x0000000000456a57: lea rax, [rdi + 4]; ret; 
0x0000000000456a6c: lea rax, [rdi + 5]; ret; 
0x0000000000456a8a: lea rax, [rdi + 6]; ret; 
0x0000000000456a96: lea rax, [rdi + 7]; ret; 
0x0000000000456aa9: lea rax, [rdi + 8]; ret; 
0x0000000000456abe: lea rax, [rdi + 9]; ret; 
0x00000000004828e8: lea rax, [rdi + rax + 0x10]; ret; 
0x000000000044e0b6: lea rax, [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000004828f8: lea rax, [rdi + rax + 0x20]; ret; 
0x00000000004391dc: lea rax, [rdi + rax + 0x30]; ret; 
0x000000000044e0d6: lea rax, [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044e114: lea rax, [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000483034: lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x000000000044db0f: lea rax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000044df7c: lea rax, [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044dd3a: lea rax, [rdi + rax]; ret; 
0x00000000004570ac: lea rax, [rdi + rdx]; vzeroupper; ret; 
0x0000000000482ce8: lea rax, [rdi + rsi]; ret; 
0x00000000004916ab: lea rax, [rdi - 1]; cmp rax, -3; jbe 0x916c0; ret; 
0x0000000000456a12: lea rax, [rdi]; ret; 
0x0000000000456fe4: lea rax, [rdi]; vzeroupper; ret; 
0x0000000000454fdc: lea rax, [rdx + 0xa]; ret; 
0x0000000000454ffc: lea rax, [rdx + 0xb]; ret; 
0x000000000045501e: lea rax, [rdx + 0xc]; ret; 
0x000000000045503e: lea rax, [rdx + 0xd]; ret; 
0x000000000045505e: lea rax, [rdx + 0xe]; ret; 
0x0000000000454eee: lea rax, [rdx + 0xf]; ret; 
0x0000000000454f16: lea rax, [rdx + 1]; ret; 
0x0000000000454f2c: lea rax, [rdx + 2]; ret; 
0x0000000000454f44: lea rax, [rdx + 3]; ret; 
0x0000000000454f5a: lea rax, [rdx + 4]; ret; 
0x0000000000454f6c: lea rax, [rdx + 5]; ret; 
0x0000000000454f8a: lea rax, [rdx + 6]; ret; 
0x00000000004a16d0: lea rax, [rdx + 7]; and rax, 0xfffffffffffffff8; mov r8, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [rcx], r8; ret; 
0x0000000000454e96: lea rax, [rdx + 7]; ret; 
0x0000000000454f9c: lea rax, [rdx + 8]; ret; 
0x0000000000454fbc: lea rax, [rdx + 9]; ret; 
0x0000000000499011: lea rax, [rdx + rcx]; cmp rax, qword ptr [rip + 0x4c114]; jae 0x9902a; mov rdx, qword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000454f04: lea rax, [rdx]; ret; 
0x0000000000481cd9: lea rax, [rip + 0x13e0]; cmove rax, rdx; ret; 
0x0000000000431be5: lea rax, [rip + 0x14914]; lea rdx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x0000000000431d29: lea rax, [rip + 0x1bfc0]; cmove rax, rdx; ret; 
0x0000000000430e82: lea rax, [rip + 0x1cc37]; lea rdx, [rip + 0x26290]; cmovne rax, rdx; ret; 
0x0000000000430fe9: lea rax, [rip + 0x1d330]; cmove rax, rdx; ret; 
0x0000000000431b92: lea rax, [rip + 0x1d8a7]; lea rdx, [rip + 0x21cc0]; cmovne rax, rdx; ret; 
0x0000000000430f42: lea rax, [rip + 0x1e407]; lea rdx, [rip + 0x1e5e0]; cmovne rax, rdx; ret; 
0x0000000000483d42: lea rax, [rip + 0x257]; lea rdx, [rip + 0x30]; cmovne rax, rdx; ret; 
0x00000000004318b2: lea rax, [rip + 0x272f7]; cmove rax, rdx; ret; 
0x0000000000431cae: lea rax, [rip + 0x278eb]; cmove rax, rdx; ret; 
0x0000000000431b3e: lea rax, [rip + 0x27a4b]; cmove rax, rdx; ret; 
0x00000000004319de: lea rax, [rip + 0x27bbb]; cmove rax, rdx; ret; 
0x0000000000431c40: lea rax, [rip + 0x27cb9]; cmove rax, rdx; ret; 
0x0000000000431ad0: lea rax, [rip + 0x27e19]; cmove rax, rdx; ret; 
0x0000000000431970: lea rax, [rip + 0x27f89]; cmove rax, rdx; ret; 
0x0000000000431c92: lea rax, [rip + 0x280a7]; cmove rax, rdx; ret; 
0x0000000000430f72: lea rax, [rip + 0x280d7]; cmovne rax, rdx; ret; 
0x0000000000431b22: lea rax, [rip + 0x28207]; cmove rax, rdx; ret; 
0x00000000004319c2: lea rax, [rip + 0x28377]; cmove rax, rdx; ret; 
0x0000000000431a59: lea rax, [rip + 0x287f0]; cmovne rax, rdx; ret; 
0x0000000000431a3a: lea rax, [rip + 0x289df]; cmove rax, rdx; ret; 
0x0000000000431a82: lea rax, [rip + 0x28b27]; cmove rax, rdx; ret; 
0x000000000042a6be: lea rax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x000000000042a6b0: lea rax, [rip + 0x3429]; mov qword ptr [rip + 0xb810a], rax; lea rax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x000000000043104c: lea rax, [rip + 0x3afd]; lea rdx, [rip + 0x5356]; cmovne rax, rdx; ret; 
0x0000000000497eb0: lea rax, [rip + 0x4d189]; mov qword ptr [rip + 0x4d16a], rax; ret; 
0x0000000000497e99: lea rax, [rip + 0x4d1a0]; mov qword ptr [rip + 0x4d181], rax; add rsp, 8; ret; 
0x0000000000498662: lea rax, [rip + 0x67]; cmovne rax, rdx; ret; 
0x00000000004988d9: lea rax, [rip + 0x70]; cmove rax, rdx; ret; 
0x0000000000431ce9: lea rax, [rip + 0x7330]; cmove rax, rdx; ret; 
0x00000000004318f3: lea rax, [rip + 0x7a86]; lea rdx, [rip + 0x25b3f]; cmovne rax, rdx; ret; 
0x0000000000431918: lea rax, [rip + 0x7e61]; test byte ptr [rip + 0xb34bf], 1; je 0x318e1; ret; 
0x0000000000481dd9: lea rax, [rip + 0x810]; cmove rax, rdx; ret; 
0x0000000000461304: lea rax, [rip + 0x81f55]; ret; 
0x0000000000431c61: lea rax, [rip + 0x9568]; lea rdx, [rip + 0xeaf1]; cmovne rax, rdx; ret; 
0x0000000000431af1: lea rax, [rip + 0x96b8]; lea rdx, [rip + 0xec41]; cmovne rax, rdx; ret; 
0x0000000000483629: lea rax, [rip + 0x9b0]; cmove rax, rdx; ret; 
0x000000000040d8b0: lea rax, [rip + 0x9bcf9]; ret; 
0x000000000040d8a0: lea rax, [rip + 0x9bd00]; ret; 
0x000000000040d8a8: lea rax, [rip + 0x9bd08]; ret; 
0x000000000040d860: lea rax, [rip + 0x9bd1d]; ret; 
0x000000000040d870: lea rax, [rip + 0x9bd1e]; ret; 
0x000000000040d828: lea rax, [rip + 0x9bd3b]; ret; 
0x000000000040d830: lea rax, [rip + 0x9bd3c]; ret; 
0x000000000040d898: lea rax, [rip + 0x9bd71]; ret; 
0x000000000040d890: lea rax, [rip + 0x9bd72]; ret; 
0x000000000040d888: lea rax, [rip + 0x9bd74]; ret; 
0x000000000040d880: lea rax, [rip + 0x9bd76]; ret; 
0x000000000040d7e0: lea rax, [rip + 0x9bd77]; ret; 
0x000000000040d848: lea rax, [rip + 0x9bd79]; ret; 
0x000000000040d850: lea rax, [rip + 0x9bd7f]; ret; 
0x000000000040d7c0: lea rax, [rip + 0x9bd80]; ret; 
0x000000000040d7b0: lea rax, [rip + 0x9bd84]; ret; 
0x000000000040d840: lea rax, [rip + 0x9bd88]; ret; 
0x000000000040d7a0: lea rax, [rip + 0x9bd8c]; ret; 
0x000000000040d7d0: lea rax, [rip + 0x9bd8e]; ret; 
0x000000000040d790: lea rax, [rip + 0x9bd8f]; ret; 
0x000000000040d768: lea rax, [rip + 0x9bdb0]; ret; 
0x000000000040d770: lea rax, [rip + 0x9bdb7]; ret; 
0x000000000040d820: lea rax, [rip + 0x9bdba]; ret; 
0x000000000040d780: lea rax, [rip + 0x9bdcc]; ret; 
0x000000000040d810: lea rax, [rip + 0x9bdd1]; ret; 
0x000000000040d800: lea rax, [rip + 0x9bde8]; ret; 
0x000000000040d7f0: lea rax, [rip + 0x9bdff]; ret; 
0x000000000040cd70: lea rax, [rip + 0x9c839]; ret; 
0x000000000040cd60: lea rax, [rip + 0x9c840]; ret; 
0x000000000040cd68: lea rax, [rip + 0x9c848]; ret; 
0x000000000040cd20: lea rax, [rip + 0x9c85d]; ret; 
0x000000000040cd30: lea rax, [rip + 0x9c85e]; ret; 
0x000000000040cce8: lea rax, [rip + 0x9c87b]; ret; 
0x000000000040ccf0: lea rax, [rip + 0x9c87c]; ret; 
0x000000000040cd58: lea rax, [rip + 0x9c8b1]; ret; 
0x000000000040cd50: lea rax, [rip + 0x9c8b2]; ret; 
0x000000000040cd48: lea rax, [rip + 0x9c8b4]; ret; 
0x000000000040cd40: lea rax, [rip + 0x9c8b6]; ret; 
0x000000000040cca0: lea rax, [rip + 0x9c8b7]; ret; 
0x000000000040cd08: lea rax, [rip + 0x9c8b9]; ret; 
0x000000000040cd10: lea rax, [rip + 0x9c8bf]; ret; 
0x000000000040cc80: lea rax, [rip + 0x9c8c0]; ret; 
0x000000000040cc70: lea rax, [rip + 0x9c8c4]; ret; 
0x000000000040cd00: lea rax, [rip + 0x9c8c8]; ret; 
0x000000000040cc60: lea rax, [rip + 0x9c8cc]; ret; 
0x000000000040cc90: lea rax, [rip + 0x9c8ce]; ret; 
0x000000000040cc50: lea rax, [rip + 0x9c8cf]; ret; 
0x000000000040cc28: lea rax, [rip + 0x9c8f0]; ret; 
0x000000000040cc30: lea rax, [rip + 0x9c8f7]; ret; 
0x000000000040cce0: lea rax, [rip + 0x9c8fa]; ret; 
0x000000000040cc40: lea rax, [rip + 0x9c90c]; ret; 
0x000000000040ccd0: lea rax, [rip + 0x9c911]; ret; 
0x000000000040ccc0: lea rax, [rip + 0x9c928]; ret; 
0x000000000040ccb0: lea rax, [rip + 0x9c93f]; ret; 
0x000000000040c230: lea rax, [rip + 0x9d379]; ret; 
0x000000000040c220: lea rax, [rip + 0x9d380]; ret; 
0x000000000040c228: lea rax, [rip + 0x9d388]; ret; 
0x000000000040c1e0: lea rax, [rip + 0x9d39d]; ret; 
0x000000000040c1f0: lea rax, [rip + 0x9d39e]; ret; 
0x000000000040c1a8: lea rax, [rip + 0x9d3bb]; ret; 
0x000000000040c1b0: lea rax, [rip + 0x9d3bc]; ret; 
0x000000000040c218: lea rax, [rip + 0x9d3f1]; ret; 
0x000000000040c210: lea rax, [rip + 0x9d3f2]; ret; 
0x000000000040c208: lea rax, [rip + 0x9d3f4]; ret; 
0x000000000040c200: lea rax, [rip + 0x9d3f6]; ret; 
0x000000000040c160: lea rax, [rip + 0x9d3f7]; ret; 
0x000000000040c1c8: lea rax, [rip + 0x9d3f9]; ret; 
0x000000000040c1d0: lea rax, [rip + 0x9d3ff]; ret; 
0x000000000040c140: lea rax, [rip + 0x9d400]; ret; 
0x000000000040c130: lea rax, [rip + 0x9d404]; ret; 
0x000000000040c1c0: lea rax, [rip + 0x9d408]; ret; 
0x000000000040c120: lea rax, [rip + 0x9d40c]; ret; 
0x000000000040c150: lea rax, [rip + 0x9d40e]; ret; 
0x000000000040c110: lea rax, [rip + 0x9d40f]; ret; 
0x000000000040c0e8: lea rax, [rip + 0x9d430]; ret; 
0x000000000040c0f0: lea rax, [rip + 0x9d437]; ret; 
0x000000000040c1a0: lea rax, [rip + 0x9d43a]; ret; 
0x000000000040c100: lea rax, [rip + 0x9d44c]; ret; 
0x000000000040c190: lea rax, [rip + 0x9d451]; ret; 
0x000000000040c180: lea rax, [rip + 0x9d468]; ret; 
0x000000000040c170: lea rax, [rip + 0x9d47f]; ret; 
0x000000000040b5f8: lea rax, [rip + 0x9e004]; ret; 
0x000000000040b5f0: lea rax, [rip + 0x9e012]; ret; 
0x000000000040b560: lea rax, [rip + 0x9e014]; ret; 
0x000000000040b568: lea rax, [rip + 0x9e015]; ret; 
0x000000000040b578: lea rax, [rip + 0x9e016]; ret; 
0x000000000040b5b8: lea rax, [rip + 0x9e017]; ret; 
0x000000000040b588: lea rax, [rip + 0x9e018]; ret; 
0x000000000040b590: lea rax, [rip + 0x9e019]; ret; 
0x000000000040b5c0: lea rax, [rip + 0x9e01a]; ret; 
0x000000000040b5a0: lea rax, [rip + 0x9e01b]; ret; 
0x000000000040b550: lea rax, [rip + 0x9e01c]; ret; 
0x000000000040b5e8: lea rax, [rip + 0x9e021]; ret; 
0x000000000040b540: lea rax, [rip + 0x9e023]; ret; 
0x000000000040b530: lea rax, [rip + 0x9e02e]; ret; 
0x000000000040b520: lea rax, [rip + 0x9e037]; ret; 
0x000000000040b500: lea rax, [rip + 0x9e040]; ret; 
0x000000000040b4f0: lea rax, [rip + 0x9e044]; ret; 
0x000000000040b4e0: lea rax, [rip + 0x9e04c]; ret; 
0x000000000040b4d0: lea rax, [rip + 0x9e04f]; ret; 
0x000000000040b4b0: lea rax, [rip + 0x9e077]; ret; 
0x000000000040b4a0: lea rax, [rip + 0x9e078]; ret; 
0x000000000040b4c0: lea rax, [rip + 0x9e08c]; ret; 
0x0000000000402164: lea rax, [rip + 0xa6f3d]; ret; 
0x000000000042a5b9: lea rax, [rip + 0xb8220]; add rsp, 0x10; pop rbp; ret; 
0x000000000040d858: lea rax, [rip + 0xbdf90]; ret; 
0x000000000040cd18: lea rax, [rip + 0xbead0]; ret; 
0x000000000040c1d8: lea rax, [rip + 0xbf610]; ret; 
0x000000000040b510: lea rax, [rip + 0xc02d8]; ret; 
0x0000000000431991: lea rax, [rip + 0xc218]; lea rdx, [rip + 0x118b1]; cmovne rax, rdx; ret; 
0x00000000004310a2: lea rax, [rip + 0xc97]; lea rdx, [rip + 0x1fc30]; cmovne rax, rdx; ret; 
0x00000000004109e9: lea rax, [rip + 0xd38f0]; ret; 
0x0000000000430ee2: lea rax, [rip + 0xeb7]; lea rdx, [rip + 0x25b0]; cmovne rax, rdx; ret; 
0x0000000000481d19: lea rax, [rip + 0xed0]; cmove rax, rdx; ret; 
0x000000000042e4ba: lea rax, [rip - 0x9e1]; mov qword ptr [rip + 0xb4300], rax; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x000000000042e4c8: lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x00000000004527e5: lea rcx, [rdx + 0x10]; jne 0x52d30; ret; 
0x0000000000452ae3: lea rcx, [rdx + 0xa]; jne 0x52d30; ret; 
0x0000000000452b03: lea rcx, [rdx + 0xb]; jne 0x52d30; ret; 
0x0000000000452b23: lea rcx, [rdx + 0xc]; jne 0x52d30; ret; 
0x0000000000452b45: lea rcx, [rdx + 0xd]; jne 0x52d30; ret; 
0x0000000000452b65: lea rcx, [rdx + 0xe]; jne 0x52d30; ret; 
0x0000000000452b85: lea rcx, [rdx + 0xf]; jne 0x52d30; ret; 
0x00000000004529db: lea rcx, [rdx + 1]; jne 0x52d30; ret; 
0x00000000004529fd: lea rcx, [rdx + 2]; jne 0x52d30; ret; 
0x0000000000452a23: lea rcx, [rdx + 3]; jne 0x52d30; ret; 
0x0000000000452a3b: lea rcx, [rdx + 4]; jne 0x52d30; ret; 
0x0000000000452a61: lea rcx, [rdx + 5]; jne 0x52d30; ret; 
0x0000000000452a83: lea rcx, [rdx + 6]; jne 0x52d30; ret; 
0x0000000000452aa1: lea rcx, [rdx + 7]; jne 0x52d30; ret; 
0x000000000045277d: lea rcx, [rdx + 8]; jne 0x52d30; ret; 
0x0000000000452ac3: lea rcx, [rdx + 9]; jne 0x52d30; ret; 
0x0000000000437c7f: lea rcx, [rdx + rcx - 0x10]; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x000000000044da58: lea rcx, [rip + 0x6d2e1]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000044c643: lea rcx, [rip + 0x6e6f6]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000044c3d8: lea rcx, [rip + 0x6e961]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000044ab03: lea rcx, [rip + 0x70236]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x00000000004234e5: lea rcx, [rip + 0xc0794]; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x000000000045fabd: lea rcx, [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x0000000000485255: lea rcx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x000000000048523a: lea rcx, [rsi + rcx*4]; mov edx, dword ptr [rcx + rdx]; test edx, edx; jne 0x85250; ret; 
0x0000000000455e1c: lea rdi, [rdi + 0x10]; jne 0x564f0; ret; 
0x0000000000455e3f: lea rdi, [rdi + 0x11]; jne 0x564f0; ret; 
0x0000000000455e64: lea rdi, [rdi + 0x12]; jne 0x564f0; ret; 
0x0000000000455e82: lea rdi, [rdi + 0x13]; jne 0x564f0; ret; 
0x0000000000455ea2: lea rdi, [rdi + 0x14]; jne 0x564f0; ret; 
0x0000000000455ec5: lea rdi, [rdi + 0x15]; jne 0x564f0; ret; 
0x0000000000455ee4: lea rdi, [rdi + 0x16]; jne 0x564f0; ret; 
0x0000000000455f04: lea rdi, [rdi + 0x17]; jne 0x564f0; ret; 
0x0000000000455f24: lea rdi, [rdi + 0x18]; jne 0x564f0; ret; 
0x0000000000455f47: lea rdi, [rdi + 0x19]; jne 0x564f0; ret; 
0x0000000000455f7c: lea rdi, [rdi + 0x1a]; jne 0x564f0; ret; 
0x0000000000455faa: lea rdi, [rdi + 0x1b]; jne 0x564f0; ret; 
0x0000000000455fda: lea rdi, [rdi + 0x1c]; jne 0x564f0; ret; 
0x0000000000456006: lea rdi, [rdi + 0x1d]; jne 0x564f0; ret; 
0x0000000000456036: lea rdi, [rdi + 0x1e]; jne 0x564f0; ret; 
0x0000000000456066: lea rdi, [rdi + 0x1f]; jne 0x564f0; ret; 
0x0000000000456096: lea rdi, [rdi + 0x20]; jne 0x564f0; ret; 
0x0000000000455d62: lea rdi, [rdi + 0xa]; jne 0x564f0; ret; 
0x0000000000455d80: lea rdi, [rdi + 0xb]; jne 0x564f0; ret; 
0x0000000000455da0: lea rdi, [rdi + 0xc]; jne 0x564f0; ret; 
0x0000000000455dc2: lea rdi, [rdi + 0xd]; jne 0x564f0; ret; 
0x0000000000455de2: lea rdi, [rdi + 0xe]; jne 0x564f0; ret; 
0x0000000000455e02: lea rdi, [rdi + 0xf]; jne 0x564f0; ret; 
0x000000000044ed1c: lea rdi, [rdi + 1]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c36: lea rdi, [rdi + 1]; jne 0x564f0; ret; 
0x000000000044eeca: lea rdi, [rdi + 2]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c5a: lea rdi, [rdi + 2]; jne 0x564f0; ret; 
0x000000000044eeee: lea rdi, [rdi + 3]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c7d: lea rdi, [rdi + 3]; jne 0x564f0; ret; 
0x000000000044ef08: lea rdi, [rdi + 4]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c98: lea rdi, [rdi + 4]; jne 0x564f0; ret; 
0x0000000000455cbb: lea rdi, [rdi + 5]; jne 0x564f0; ret; 
0x0000000000455ce0: lea rdi, [rdi + 6]; jne 0x564f0; ret; 
0x0000000000455cfe: lea rdi, [rdi + 7]; jne 0x564f0; ret; 
0x0000000000455d1a: lea rdi, [rdi + 8]; jne 0x564f0; ret; 
0x0000000000455d3d: lea rdi, [rdi + 9]; jne 0x564f0; ret; 
0x0000000000459572: lea rdi, [rdi + rcx - 1]; lea rsi, [rsi + rcx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x000000000044ef33: lea rdi, [rdi + rdx + 1]; jne 0x4f150; vzeroupper; ret; 
0x0000000000499604: lea rdi, [rip + 0x329f5]; call 0x11c50; endbr64; ret; 
0x00000000004612ee: lea rdi, [rip + 0x57843]; call 0x11c50; nop word ptr [rax + rax]; endbr64; lea rax, [rip + 0x81f55]; ret; 
0x000000000041eef1: lea rdi, [rip + 0x96075]; call 0x11c50; xor r8d, r8d; mov rax, r8; ret; 
0x000000000042d24b: lea rdi, [rip + 0xb558e]; syscall; pop rbp; ret; 
0x000000000042e3b7: lea rdi, [rip + 0xb6962]; syscall; pop rbx; ret; 
0x000000000042618d: lea rdi, [rip + 0xbeb1c]; syscall; ret; 
0x00000000004817e4: lea rdx, [r8 + rdx*4]; mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x00000000004817b3: lea rdx, [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x00000000004293b3: lea rdx, [rax + 1]; mov qword ptr [rip + 0xb93d2], rdx; ret; 
0x0000000000431998: lea rdx, [rip + 0x118b1]; cmovne rax, rdx; ret; 
0x0000000000481d12: lea rdx, [rip + 0x11d7]; lea rax, [rip + 0xed0]; cmove rax, rdx; ret; 
0x000000000049865b: lea rdx, [rip + 0x11e]; lea rax, [rip + 0x67]; cmovne rax, rdx; ret; 
0x0000000000481cd2: lea rdx, [rip + 0x1607]; lea rax, [rip + 0x13e0]; cmove rax, rdx; ret; 
0x0000000000431bec: lea rdx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x0000000000431d22: lea rdx, [rip + 0x1c407]; lea rax, [rip + 0x1bfc0]; cmove rax, rdx; ret; 
0x0000000000430fe2: lea rdx, [rip + 0x1d4d7]; lea rax, [rip + 0x1d330]; cmove rax, rdx; ret; 
0x0000000000430f49: lea rdx, [rip + 0x1e5e0]; cmovne rax, rdx; ret; 
0x00000000004310a9: lea rdx, [rip + 0x1fc30]; cmovne rax, rdx; ret; 
0x0000000000431b99: lea rdx, [rip + 0x21cc0]; cmovne rax, rdx; ret; 
0x0000000000430ee9: lea rdx, [rip + 0x25b0]; cmovne rax, rdx; ret; 
0x00000000004318fa: lea rdx, [rip + 0x25b3f]; cmovne rax, rdx; ret; 
0x0000000000430e89: lea rdx, [rip + 0x26290]; cmovne rax, rdx; ret; 
0x0000000000431ca7: lea rdx, [rip + 0x27832]; lea rax, [rip + 0x278eb]; cmove rax, rdx; ret; 
0x0000000000431b37: lea rdx, [rip + 0x27992]; lea rax, [rip + 0x27a4b]; cmove rax, rdx; ret; 
0x00000000004319d7: lea rdx, [rip + 0x27b02]; lea rax, [rip + 0x27bbb]; cmove rax, rdx; ret; 
0x0000000000431c39: lea rdx, [rip + 0x27c70]; lea rax, [rip + 0x27cb9]; cmove rax, rdx; ret; 
0x0000000000431ac9: lea rdx, [rip + 0x27dd0]; lea rax, [rip + 0x27e19]; cmove rax, rdx; ret; 
0x0000000000431969: lea rdx, [rip + 0x27f40]; lea rax, [rip + 0x27f89]; cmove rax, rdx; ret; 
0x0000000000431c8b: lea rdx, [rip + 0x2805e]; lea rax, [rip + 0x280a7]; cmove rax, rdx; ret; 
0x0000000000430f6b: lea rdx, [rip + 0x2818e]; lea rax, [rip + 0x280d7]; cmovne rax, rdx; ret; 
0x0000000000431b1b: lea rdx, [rip + 0x281be]; lea rax, [rip + 0x28207]; cmove rax, rdx; ret; 
0x00000000004319bb: lea rdx, [rip + 0x2832e]; lea rax, [rip + 0x28377]; cmove rax, rdx; ret; 
0x0000000000431a52: lea rdx, [rip + 0x28867]; lea rax, [rip + 0x287f0]; cmovne rax, rdx; ret; 
0x0000000000431a33: lea rdx, [rip + 0x28996]; lea rax, [rip + 0x289df]; cmove rax, rdx; ret; 
0x0000000000431a7b: lea rdx, [rip + 0x28ace]; lea rax, [rip + 0x28b27]; cmove rax, rdx; ret; 
0x0000000000483d49: lea rdx, [rip + 0x30]; cmovne rax, rdx; ret; 
0x00000000004988d2: lea rdx, [rip + 0x3a7]; lea rax, [rip + 0x70]; cmove rax, rdx; ret; 
0x00000000004a390b: lea rdx, [rip + 0x4184e]; cmp byte ptr [rdx + rsi], 8; jne 0x1755; mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x0000000000498339: lea rdx, [rip + 0x4b7c0]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000431053: lea rdx, [rip + 0x5356]; cmovne rax, rdx; ret; 
0x000000000044daa6: lea rdx, [rip + 0x6d293]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044da8c: lea rdx, [rip + 0x6d2ad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044c426: lea rdx, [rip + 0x6e913]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044c40c: lea rdx, [rip + 0x6e92d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044a85c: lea rdx, [rip + 0x704dd]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000448716: lea rdx, [rip + 0x72623]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x00000000004486fc: lea rdx, [rip + 0x7263d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000431ce2: lea rdx, [rip + 0x7547]; lea rax, [rip + 0x7330]; cmove rax, rdx; ret; 
0x0000000000410954: lea rdx, [rip + 0xa2b45]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rdx; ret; 
0x0000000000481dd2: lea rdx, [rip + 0xb47]; lea rax, [rip + 0x810]; cmove rax, rdx; ret; 
0x0000000000483622: lea rdx, [rip + 0xc57]; lea rax, [rip + 0x9b0]; cmove rax, rdx; ret; 
0x0000000000431c68: lea rdx, [rip + 0xeaf1]; cmovne rax, rdx; ret; 
0x0000000000431af8: lea rdx, [rip + 0xec41]; cmovne rax, rdx; ret; 
0x00000000004318ab: lea rdx, [rip - 0x362]; lea rax, [rip + 0x272f7]; cmove rax, rdx; ret; 
0x0000000000459566: lea rdx, [rsi + rcx]; cmp rdi, rdx; jb 0x59572; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x00000000004995fd: lea rsi, [rip + 0x329e4]; lea rdi, [rip + 0x329f5]; call 0x11c50; endbr64; ret; 
0x000000000041eeea: lea rsi, [rip + 0x9606f]; lea rdi, [rip + 0x96075]; call 0x11c50; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000459577: lea rsi, [rsi + rcx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x000000000046e352: leave; add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x00000000004591a4: leave; add rax, rcx; sub rax, rdi; ret; 
0x00000000004847f6: leave; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000048e528: leave; cmove r8, rax; mov rax, r8; ret; 
0x0000000000422bcb: leave; jne 0x22be0; mov eax, dword ptr [rdx + 0x4c]; cmp dword ptr [rdx + 0x48], eax; cmovne eax, ecx; ret; 
0x0000000000458ca0: leave; jne 0x58c90; ret; 
0x0000000000458d50: leave; jne 0x58d40; ret; 
0x0000000000459010: leave; jne 0x59000; sub rax, 1; ret; 
0x0000000000431917: leave; lea rax, [rip + 0x7e61]; test byte ptr [rip + 0xb34bf], 1; je 0x318e1; ret; 
0x00000000004398ff: leave; mov al, byte ptr [rdi + rdx - 1]; mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x00000000004856af: leave; mov eax, 1; ret; 
0x000000000043339c: leave; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x00000000004a4546: leave; nop word ptr [rax + rax]; xor eax, eax; ret; 
0x000000000040cc44: leave; or dword ptr [rax], eax; ret; 
0x0000000000415d92: leave; pop rbx; pop rbp; mov rax, r9; pop r12; ret; 
0x0000000000401e88: leave; ret; 
0x000000000048566f: leave; xor eax, eax; ret; 
0x000000000040a3c1: ljmp [rax]; add byte ptr [rax], al; jne 0xa4a0; mov rax, 0x4decc0; ret; 
0x0000000000494744: ljmp [rcx]; ret; 
0x000000000040928c: lock add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000439f40: lock add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000401cab: lock add byte ptr [rax], al; hlt; nop; endbr64; ret; 
0x000000000048efab: lock inc dword ptr [r8 + 0x10]; pop rbx; pop rbp; ret; 
0x0000000000458620: lodsb al, byte ptr [rsi]; add byte ptr [rax], al; add dh, dh; ret 0x7501; 
0x0000000000437e34: lodsb al, byte ptr [rsi]; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000049d1b2: lodsd eax, dword ptr [rsi]; ret; 
0x00000000004114a8: loope 0x114e3; ret 0x860f; 
0x000000000043d817: loope 0x3d865; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d85f: loope 0x3d8ad; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d89d: loope 0x3d8eb; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d8d5: loope 0x3d923; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d913: loope 0x3d961; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d94b: loope 0x3d999; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d973: loope 0x3d9c1; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004401f7: loope 0x40245; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000044023f: loope 0x4028d; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000044027d: loope 0x402cb; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004402b5: loope 0x40303; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004402f3: loope 0x40341; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000044032b: loope 0x40379; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000440353: loope 0x403a1; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004423fa: loope 0x423ef; movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000444f2a: loope 0x44f1f; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000044e4ac: loope 0x4e4ce; or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000452b4b: loope 0x52b4e; add byte ptr [rax], al; ret; 
0x00000000004553c6: loope 0x5542e; nop dword ptr [rax + rax]; mov byte ptr [rdi], dh; ret; 
0x0000000000456a06: loope 0x56a6e; nop dword ptr [rax + rax]; mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x0000000000457113: loope 0x5715d; lea eax, [rdi + rdx]; vzeroupper; ret; 
0x000000000045734b: loope 0x5734d; add byte ptr [rax], al; lea rax, [rdi + 0xf]; ret; 
0x000000000045a7d9: loope 0x5a7db; cld; add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000000462173: loope 0x62178; pop r12; shl eax, cl; ret; 
0x00000000004832c8: loope 0x832ea; or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000004841be: loope 0x841cf; je 0x841e0; ret; 
0x000000000048f6d1: loope 0x8f6d7; cmp r8, qword ptr [rcx + rsi + 0x10]; jae 0x8f685; xor eax, eax; ret; 
0x000000000049d03b: loope 0x9d089; mov dword ptr [rdi], ecx; ret; 
0x000000000049d06c: loope 0x9d0ba; mov dword ptr [rdi - 8], ecx; ret; 
0x000000000049d0ed: loope 0x9d13b; mov dword ptr [rdi - 0x10], ecx; ret; 
0x00000000004a671e: loope 0xa677b; ret; 
0x000000000040a3e8: mov ah, 0; add byte ptr [rax], al; mov rax, 0x4def00; ret; 
0x0000000000410d24: mov ah, 0x40; or eax, 0x100000; add dh, dh; ret 0x7402; 
0x0000000000497cff: mov ah, 0x5b; mov eax, 1; pop rbp; pop r12; pop r13; ret; 
0x000000000040cd4b: mov ah, 0xc8; or dword ptr [rax], eax; ret; 
0x0000000000411bda: mov ah, 4; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004a183b: mov al, 0; add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000408807: mov al, 0; add byte ptr [rax], al; movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x00000000004a3a37: mov al, 0; add byte ptr [rax], al; ret; 
0x0000000000430eec: mov al, 0x25; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x0000000000423b53: mov al, 0x3b; add byte ptr [rax - 0x39], r9b; ret; 
0x000000000040d76b: mov al, 0xbd; or dword ptr [rax], eax; ret; 
0x000000000044e0ff: mov al, 0xc5; std; xlatb; ret; 
0x000000000048d1f5: mov al, 0xf; xchg eax, ebp; ret 0x2148; 
0x000000000045603c: mov al, 4; add byte ptr [rax], al; ret; 
0x0000000000455c3c: mov al, 8; add byte ptr [rax], al; ret; 
0x000000000048362c: mov al, 9; add byte ptr [rax], al; cmove rax, rdx; ret; 
0x000000000049073b: mov al, byte ptr [rax]; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000454f26: mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, [rdx + 2]; ret; 
0x0000000000450bf6: mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x0000000000454f54: mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; lea rax, [rdx + 4]; ret; 
0x0000000000450c14: mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x0000000000491842: mov al, byte ptr [rcx - 0x76b80000]; sbb byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x0000000000454f00: mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, [rdx]; ret; 
0x0000000000450bd0: mov al, byte ptr [rcx]; mov byte ptr [rdx], al; mov rax, rdi; ret; 
0x0000000000439900: mov al, byte ptr [rdi + rdx - 1]; mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x0000000000431a7f: mov al, byte ptr [rdx]; add byte ptr [rax - 0x73], cl; add eax, 0x28b27; cmove rax, rdx; ret; 
0x00000000004a2ea6: mov al, ch; cmc; dec dword ptr [rbp - 0x75]; adc cl, byte ptr [rcx + 1]; ret 0xef89; 
0x0000000000454f64: mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; lea rax, [rdx + 5]; ret; 
0x0000000000450c24: mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x0000000000454f10: mov ax, word ptr [rcx]; mov word ptr [rdx], ax; lea rax, [rdx + 1]; ret; 
0x0000000000454f20: mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, [rdx + 2]; ret; 
0x0000000000450bf0: mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x0000000000450be0: mov ax, word ptr [rcx]; mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x000000000040a402: mov bh, 0; add al, al; jne 0xa4a0; mov rax, 0x4e11e0; ret; 
0x0000000000457061: mov bh, 0x16; mov word ptr [rdi], dx; lea rax, [rdi + 1]; vzeroupper; ret; 
0x00000000004431c1: mov bh, 0x16; mov word ptr [rdi], dx; ret; 
0x000000000044e951: mov bh, 0x16; mov word ptr [rdi], dx; vzeroupper; ret; 
0x0000000000459626: mov bh, 0x36; mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x00000000004571e8: mov bh, 0x48; lea eax, [rdi + 7]; ret; 
0x00000000004a5291: mov bh, 0x5d; and byte ptr [rsi - 9], ah; ret; 
0x000000000040d773: mov bh, 0xbd; or dword ptr [rax], eax; ret; 
0x000000000040cca3: mov bh, 0xc8; or dword ptr [rax], eax; ret; 
0x0000000000430ee5: mov bh, 0xe; add byte ptr [rax], al; lea rdx, [rip + 0x25b0]; cmovne rax, rdx; ret; 
0x0000000000457071: mov bh, 0xe; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; lea rax, [rdi + 2]; vzeroupper; ret; 
0x000000000044e961: mov bh, 0xe; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000044f001: mov bh, 0xe; movzx edx, word ptr [rsi + r8 - 2]; mov word ptr [rdi], cx; mov word ptr [rdi + r8 - 2], dx; vzeroupper; ret; 
0x00000000004645f1: mov bh, 0xfc; dec dword ptr [rax - 0x77]; ret; 
0x00000000004159e9: mov bh, 0xfe; dec dword ptr [rbp - 0x73]; je 0x159f6; add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x0000000000458ade: mov bl, 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000048f1b1: mov bl, 0x62; add eax, 0x6894800; ret; 
0x000000000042518e: mov bl, 0x90; endbr64; xor eax, eax; test rdx, rdx; jne 0x251a0; ret; 
0x000000000047841b: mov bl, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0x3bc0; 
0x000000000040c22b: mov bl, dl; or dword ptr [rax], eax; ret; 
0x0000000000431a55: mov byte ptr [edx], al; add byte ptr [rax - 0x73], cl; add eax, 0x287f0; cmovne rax, rdx; ret; 
0x000000000042d9ab: mov byte ptr [r8 + rbp], cl; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000000042d7b4: mov byte ptr [r8 + rbx], cl; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x000000000048c00a: mov byte ptr [r8 - 0x7b], r9b; ror byte ptr [rdi], 0x84; ret; 
0x0000000000464492: mov byte ptr [r8 - 0x7d], r9b; ret; 
0x000000000048c28b: mov byte ptr [r9 - 0x77], r9b; ret 0x8949; 
0x000000000048bd4e: mov byte ptr [r9 - 0x77], r9b; xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000404983: mov byte ptr [rax + 0x26], 1; mov qword ptr [rax + 0x10], -1; mov qword ptr [rax + 0x18], -1; add rsp, 8; ret; 
0x000000000045fb7e: mov byte ptr [rax + 0x28], 1; ret; 
0x00000000004586f7: mov byte ptr [rax + 0x75], 0xc5; movzx eax, byte ptr [rdi - 9]; movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x000000000042d9ac: mov byte ptr [rax + rbp], cl; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000000042d7b5: mov byte ptr [rax + rbx], cl; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x000000000048c00b: mov byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x0000000000464f87: mov byte ptr [rax - 0x7c], 0xf6; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000000464493: mov byte ptr [rax - 0x7d], cl; ret; 
0x0000000000415d64: mov byte ptr [rax], 0; mov rax, r9; pop rbx; pop rbp; pop r12; ret; 
0x000000000045f77f: mov byte ptr [rax], al; add byte ptr [rax], al; pop rbx; pop rbp; ret; 
0x0000000000410bc7: mov byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000040b6b1: mov byte ptr [rbx], dl; add byte ptr [rax], al; cmovns eax, edx; add rsp, 8; ret; 
0x0000000000452bc3: mov byte ptr [rcx + 2], dl; ret; 
0x0000000000452be2: mov byte ptr [rcx + 4], dl; ret; 
0x0000000000452c23: mov byte ptr [rcx + 8], dl; ret; 
0x0000000000415804: mov byte ptr [rcx - 0x76b70002], bh; ret 0xf748; 
0x000000000048c28c: mov byte ptr [rcx - 0x77], cl; ret 0x8949; 
0x000000000048bd4f: mov byte ptr [rcx - 0x77], cl; xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000482c46: mov byte ptr [rcx], 0; add byte ptr [rax + 0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000000425711: mov byte ptr [rcx], 0x84; ror byte ptr [rdi], cl; test ch, dh; add dword ptr [rax], eax; add byte ptr [rdi + rcx - 0x42], cl; ret 0x4a8d; 
0x0000000000452ba0: mov byte ptr [rcx], dl; ret; 
0x00000000004561cb: mov byte ptr [rdi + 0x10], cl; ret; 
0x0000000000456b88: mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x00000000004554d8: mov byte ptr [rdi + 0x10], dh; ret; 
0x0000000000455e38: mov byte ptr [rdi + 0x10], dh; sub r8, 0x11; lea rdi, [rdi + 0x11]; jne 0x564f0; ret; 
0x0000000000456bfe: mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x000000000045552e: mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000455ebe: mov byte ptr [rdi + 0x14], dh; sub r8, 0x15; lea rdi, [rdi + 0x15]; jne 0x564f0; ret; 
0x0000000000456221: mov byte ptr [rdi + 0x14], dl; ret; 
0x00000000004562a3: mov byte ptr [rdi + 0x18], cl; ret; 
0x0000000000456c80: mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x00000000004555b0: mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000455f40: mov byte ptr [rdi + 0x18], dh; sub r8, 0x19; lea rdi, [rdi + 0x19]; jne 0x564f0; ret; 
0x00000000004563a5: mov byte ptr [rdi + 0x20], cl; ret; 
0x000000000045fb12: mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000044f0b5: mov byte ptr [rdi + 0x40], cl; vzeroupper; ret; 
0x0000000000457076: mov byte ptr [rdi + 2], 0; lea rax, [rdi + 2]; vzeroupper; ret; 
0x000000000044e966: mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x0000000000456a36: mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x00000000004553f6: mov byte ptr [rdi + 2], dh; ret; 
0x0000000000455c76: mov byte ptr [rdi + 2], dh; sub r8, 3; lea rdi, [rdi + 3]; jne 0x564f0; ret; 
0x00000000004560e9: mov byte ptr [rdi + 2], dl; ret; 
0x0000000000456a52: mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x0000000000455412: mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; ret; 
0x0000000000455cb2: mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; sub r8, 5; lea rdi, [rdi + 5]; jne 0x564f0; ret; 
0x0000000000456107: mov byte ptr [rdi + 4], dl; ret; 
0x0000000000456aa3: mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x0000000000455453: mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x0000000000455d33: mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; sub r8, 9; lea rdi, [rdi + 9]; jne 0x564f0; ret; 
0x0000000000456149: mov byte ptr [rdi + 8], dl; ret; 
0x000000000043cdab: mov byte ptr [rdi - 1], dl; ret; 
0x000000000046e8d0: mov byte ptr [rdi], 0; add rsp, 8; pop rbx; pop r14; ret; 
0x0000000000456fe1: mov byte ptr [rdi], 0; lea rax, [rdi]; vzeroupper; ret; 
0x000000000044ed15: mov byte ptr [rdi], 0; sub r8, 1; lea rdi, [rdi + 1]; jne 0x4f150; vzeroupper; ret; 
0x000000000044e8d1: mov byte ptr [rdi], 0; vzeroupper; ret; 
0x00000000004a48a4: mov byte ptr [rdi], cl; mov dh, 0x53; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000445f16: mov byte ptr [rdi], cl; ret; 
0x000000000045a4f9: mov byte ptr [rdi], cl; vzeroupper; ret; 
0x0000000000456a10: mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x00000000004553d0: mov byte ptr [rdi], dh; ret; 
0x0000000000455c30: mov byte ptr [rdi], dh; sub r8, 1; lea rdi, [rdi + 1]; jne 0x564f0; ret; 
0x0000000000443233: mov byte ptr [rdi], dl; ret; 
0x000000000044efe3: mov byte ptr [rdi], dl; vzeroupper; ret; 
0x0000000000454f29: mov byte ptr [rdx + 2], al; lea rax, [rdx + 2]; ret; 
0x0000000000450bf9: mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x0000000000452a19: mov byte ptr [rdx + 2], al; mov rax, rdi; sub r8, 3; lea rcx, [rdx + 3]; jne 0x52d30; ret; 
0x0000000000454f57: mov byte ptr [rdx + 4], al; lea rax, [rdx + 4]; ret; 
0x0000000000450c17: mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x0000000000452a57: mov byte ptr [rdx + 4], al; mov rax, rdi; sub r8, 5; lea rcx, [rdx + 5]; jne 0x52d30; ret; 
0x00000000004756d0: mov byte ptr [rdx + rbp], dh; add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000045861b: mov byte ptr [rdx + rdx*8 + 0xac840f], 0; add dh, dh; ret 0x7501; 
0x0000000000431a56: mov byte ptr [rdx], al; add byte ptr [rax - 0x73], cl; add eax, 0x287f0; cmovne rax, rdx; ret; 
0x0000000000454f02: mov byte ptr [rdx], al; lea rax, [rdx]; ret; 
0x0000000000450bd2: mov byte ptr [rdx], al; mov rax, rdi; ret; 
0x00000000004529d2: mov byte ptr [rdx], al; mov rax, rdi; sub r8, 1; lea rcx, [rdx + 1]; jne 0x52d30; ret; 
0x00000000004a2134: mov byte ptr [rip + 0x43035], 8; ret; 
0x00000000004a212d: mov byte ptr [rip + 0x4303b], 8; mov byte ptr [rip + 0x43035], 8; ret; 
0x00000000004a2126: mov byte ptr [rip + 0x43041], 8; mov byte ptr [rip + 0x4303b], 8; mov byte ptr [rip + 0x43035], 8; ret; 
0x00000000004a211f: mov byte ptr [rip + 0x43047], 8; mov byte ptr [rip + 0x43041], 8; mov byte ptr [rip + 0x4303b], 8; mov byte ptr [rip + 0x43035], 8; ret; 
0x00000000004a2118: mov byte ptr [rip + 0x4304d], 8; mov byte ptr [rip + 0x43047], 8; mov byte ptr [rip + 0x43041], 8; mov byte ptr [rip + 0x4303b], 8; mov byte ptr [rip + 0x43035], 8; ret; 
0x0000000000401d5a: mov byte ptr [rip + 0xe251f], 1; pop rbp; ret; 
0x0000000000468045: mov byte ptr [rsi], cl; add al, 0; add bh, dh; ret 0xf800; 
0x0000000000479f04: mov ch, 0; idiv edi; dec dword ptr [rax + 0x29]; ret 0xb8; 
0x0000000000473704: mov ch, 0x10; idiv edi; inc dword ptr [rbp - 0x7b]; in al, 0xf; lahf; ret; 
0x0000000000480b22: mov ch, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0x3bc0; 
0x00000000004a5c0c: mov ch, 0xff; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a5b31: mov ch, 0xff; nop dword ptr [rax + rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004a5a1d: mov ch, 0xff; nop; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004115e6: mov ch, 4; add byte ptr [rbx - 0x7bf00008], al; out 0, al; add byte ptr [rax], al; add rsp, 0x98; ret; 
0x00000000004839c3: mov ch, 5; add byte ptr [rax + 0x39], cl; ret; 
0x000000000043aab6: mov ch, 6; add byte ptr [rax], al; xor eax, eax; ret; 
0x00000000004685cd: mov ch, ah; add al, byte ptr [rax]; add bh, dh; ret 0xf800; 
0x00000000004841d0: mov ch, dh; and ch, 0xf; je 0x841f0; add rax, 2; ret; 
0x000000000043199b: mov cl, 0x18; add dword ptr [rax], eax; cmovne rax, rdx; ret; 
0x000000000045cf24: mov cl, 0x48; add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000040cd5b: mov cl, 0xc8; or dword ptr [rax], eax; ret; 
0x0000000000448705: mov cl, byte ptr [rbx - 0x37d67dfc]; ret; 
0x00000000004561c4: mov cl, byte ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], cl; ret; 
0x0000000000456298: mov cl, byte ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov byte ptr [rdi + 0x18], cl; ret; 
0x0000000000456399: mov cl, byte ptr [rsi + 0x20]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; mov byte ptr [rdi + 0x20], cl; ret; 
0x000000000044f0a9: mov cl, byte ptr [rsi + 0x40]; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + 0x20], ymm3; mov byte ptr [rdi + 0x40], cl; vzeroupper; ret; 
0x0000000000439904: mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x0000000000445f14: mov cl, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x00000000004841bb: mov cl, dl; and cl, 0xf; je 0x841e0; ret; 
0x000000000048523d: mov cs, word ptr [rbx - 0x2d7aeeec]; jne 0x85250; ret; 
0x000000000044ccae: mov cs, word ptr [rip - 0x7cb80000]; ret 0xe910; 
0x0000000000445f02: mov cx, word ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x0000000000456b94: mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004554e4: mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000456c98: mov cx, word ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004555c8: mov cx, word ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x000000000043d1f4: mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x00000000004560e0: mov cx, word ptr [rsi]; mov dl, byte ptr [rsi + 2]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dl; ret; 
0x0000000000443154: mov cx, word ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x0000000000456a30: mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x00000000004553f0: mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x0000000000445f01: mov cx, word ptr ss:[rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x00000000004a48dd: mov dh, 0; add rsp, 0x18; pop rbx; pop rbp; mov eax, r8d; ret; 
0x0000000000426b81: mov dh, 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004289b4: mov dh, 0; ret; 
0x000000000041e0a9: mov dh, 0x11; test dl, dl; jne 0x1e088; ret; 
0x0000000000430511: mov dh, 0x14; add dword ptr [rax + rdi - 0x3e], eax; jne 0x30500; sub rax, 0x10; ret; 
0x0000000000443231: mov dh, 0x16; mov byte ptr [rdi], dl; ret; 
0x000000000044efe1: mov dh, 0x16; mov byte ptr [rdi], dl; vzeroupper; ret; 
0x0000000000439455: mov dh, 0x16; sub eax, edx; ret; 
0x000000000041dfa7: mov dh, 0x40; or dword ptr [rax + rax*8 - 0x38b78d8c], eax; ret 0xfff0; 
0x0000000000415251: mov dh, 0x42; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x0000000000415203: mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004a7df1: mov dh, 0x44; and al, 0xf; add rsp, 0x10; pop rbx; ret; 
0x00000000004348f1: mov dh, 0x44; cmp byte ptr [rax], ah; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000490a8e: mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x0000000000490c84: mov dh, 0x45; add ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000472ccc: mov dh, 0x46; or al, 0x83; ret; 
0x00000000004586b1: mov dh, 0x47; cmc; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x00000000004586a1: mov dh, 0x47; hlt; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x0000000000458671: mov dh, 0x47; int1; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x0000000000458691: mov dh, 0x47; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x0000000000458681: mov dh, 0x47; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x0000000000467a67: mov dh, 0x48; dec dword ptr [rax + 0x3948074a]; ret; 
0x000000000041f3d1: mov dh, 0x4b; add dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004a27b4: mov dh, 0x53; add cl, byte ptr [rax - 0x7d]; ret; 
0x0000000000415221: mov dh, 0x53; add dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004960d1: mov dh, 0x53; or al, 0xf6; ret 0xf01; 
0x000000000047f521: mov dh, 0x53; or al, 0xf6; ret 0xf04; 
0x00000000004348f6: mov dh, 0x54; cmp ah, byte ptr [rax]; sub eax, edx; vzeroupper; ret; 
0x00000000004a549a: mov dh, 0x55; and byte ptr [rcx - 0x75], cl; insd dword ptr [rdi], dx; sbb dh, dh; ret 0xf01; 
0x00000000004586b5: mov dh, 0x56; cmc; sub eax, edx; ret; 
0x00000000004586a5: mov dh, 0x56; hlt; sub eax, edx; ret; 
0x0000000000458675: mov dh, 0x56; int1; sub eax, edx; ret; 
0x0000000000479272: mov dh, 0x56; or al, 0xf6; ret 0xf08; 
0x0000000000458685: mov dh, 0x56; sub eax, edx; ret; 
0x0000000000494628: mov dh, 0x58; or al, 0x89; fdiv st(6); ret; 
0x0000000000492f85: mov dh, 0x58; or al, 0xf6; ret; 
0x0000000000488ceb: mov dh, 0x87; sbb eax, 0x89000003; ret 0xe8c0; 
0x000000000042977a: mov dh, 0xb5; or eax, dword ptr [rax]; ret; 
0x0000000000485036: mov dh, 0xc0; add rsp, 0x58; ret; 
0x000000000049eb71: mov dh, 0xc0; neg eax; ret; 
0x000000000049822e: mov dh, 0xc0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000439475: mov dh, 0xc0; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000045a7f1: mov dh, 0xc1; pop rbx; ret; 
0x000000000045a7a1: mov dh, 0xc2; and dh, 0xf0; mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x000000000045a2b2: mov dh, 0xc6; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000464f86: mov dh, 0xc6; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000040cd43: mov dh, 0xc8; or dword ptr [rax], eax; ret; 
0x000000000045a831: mov dh, 0xd1; mov eax, 0; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000043947b: mov dh, 0xd2; sub eax, edx; ret; 
0x00000000004595fd: mov dh, 0xe; mov byte ptr [rdi], cl; ret; 
0x00000000004331e1: mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000000438ef1: mov dh, 0xe; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x0000000000439914: mov dh, 0xe; sub eax, ecx; ret; 
0x0000000000403502: mov dh, 0xf6; mov dword ptr [rip + 0xdec16], esi; ret; 
0x00000000004034f2: mov dh, 0xf6; mov dword ptr [rip + 0xdec22], esi; ret; 
0x00000000004034e2: mov dh, 0xf6; mov dword ptr [rip + 0xdec26], esi; ret; 
0x00000000004034d2: mov dh, 0xf6; mov dword ptr [rip + 0xdec32], esi; ret; 
0x00000000004034c2: mov dh, 0xf6; mov dword ptr [rip + 0xdec5e], esi; ret; 
0x00000000004033a2: mov dh, 0xf6; mov dword ptr [rip + 0xded6a], esi; ret; 
0x0000000000403392: mov dh, 0xf6; mov dword ptr [rip + 0xded7e], esi; ret; 
0x0000000000403382: mov dh, 0xf6; mov dword ptr [rip + 0xded9a], esi; ret; 
0x0000000000403176: mov dh, 0xff; mov dword ptr [rip + 0xdef8a], edi; ret; 
0x000000000049c012: mov dh, 0xff; nop dword ptr [rax]; add rsp, 8; ret; 
0x0000000000426ae1: mov dh, 2; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004839bc: mov dh, 5; add byte ptr [rbp + rcx*4 + 0x25], cl; fidiv dword ptr [rbp + 0x39480005]; ret; 
0x0000000000486403: mov dh, 5; add byte ptr [rbp - 0x7d7af00a], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000044daa4: mov dh, 7; lea rdx, [rip + 0x6d293]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044c424: mov dh, 7; lea rdx, [rip + 0x6e913]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000448714: mov dh, 7; lea rdx, [rip + 0x72623]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000439911: mov dh, 7; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000000439452: mov dh, 7; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x00000000004331e4: mov dh, 7; sub eax, ecx; ret; 
0x0000000000438ef4: mov dh, 7; sub eax, ecx; vzeroupper; ret; 
0x000000000040884d: mov dl, 0xa1; jne 0x8860; cmp dword ptr [rdi + 0x38], 1; sbb eax, eax; and eax, 0xffffffea; ret; 
0x0000000000407761: mov dl, 0xc2; mov edx, eax; shr edx, 0x10; xor eax, edx; ret; 
0x000000000040cd53: mov dl, 0xc8; or dword ptr [rax], eax; ret; 
0x000000000046f04a: mov dl, 5; add byte ptr [rax], al; nop; ret; 
0x0000000000456217: mov dl, byte ptr [rsi + 0x14]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dl; ret; 
0x00000000004560e3: mov dl, byte ptr [rsi + 2]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dl; ret; 
0x0000000000456102: mov dl, byte ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov byte ptr [rdi + 4], dl; ret; 
0x0000000000456143: mov dl, byte ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov byte ptr [rdi + 8], dl; ret; 
0x000000000043ce30: mov dl, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x00000000004560c0: mov dl, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x00000000004792a3: mov dl, dl; sbb al, 0; add dh, dh; ret 0xf40; 
0x00000000004296cf: mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x00000000004296d3: mov dword ptr [r11 + 0x14], 0; ret; 
0x00000000004296ca: mov dword ptr [r11 + 0x24], ebp; pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x0000000000445f0a: mov dword ptr [r9 - 2], ecx; ret; 
0x0000000000445ef5: mov dword ptr [r9 - 4], ecx; ret; 
0x0000000000404988: mov dword ptr [rax + 0x10], 0xffffffff; mov qword ptr [rax + 0x18], -1; add rsp, 8; ret; 
0x000000000048073b: mov dword ptr [rax + 0x10], ecx; mov qword ptr [rax + 0x40], rdx; movups xmmword ptr [rax], xmm0; ret; 
0x000000000045fac5: mov dword ptr [rax + 0x10], ecx; mov qword ptr [rax + 8], rdx; ret; 
0x00000000004817ad: mov dword ptr [rax + 0x10], ecx; mov r8, rcx; lea rdx, [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x00000000004817e9: mov dword ptr [rax + 0x10], edi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x00000000004806fd: mov dword ptr [rax + 0x10], edx; mov qword ptr [rax + 0x40], rcx; ret; 
0x0000000000404990: mov dword ptr [rax + 0x18], 0xffffffff; add rsp, 8; ret; 
0x0000000000480ecc: mov dword ptr [rax + 0x18], edx; xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x000000000045fb7b: mov dword ptr [rax + 0x20], ecx; mov byte ptr [rax + 0x28], 1; ret; 
0x0000000000429e07: mov dword ptr [rax + 0x20], edx; add rsp, 8; ret; 
0x000000000045fb89: mov dword ptr [rax + 0x20], esi; ret; 
0x0000000000480ec8: mov dword ptr [rax + 0x28], edx; mov qword ptr [rax + 0x18], rdx; xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x0000000000404ec8: mov dword ptr [rax + 0x30], edx; add rsp, 0x18; mov rax, rbx; pop rbx; pop rbp; ret; 
0x0000000000405c58: mov dword ptr [rax + 0x30], edx; mov rax, rbp; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000480701: mov dword ptr [rax + 0x40], ecx; ret; 
0x000000000048073f: mov dword ptr [rax + 0x40], edx; movups xmmword ptr [rax], xmm0; ret; 
0x00000000004817ed: mov dword ptr [rax + 0x40], esi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000481552: mov dword ptr [rax + 0x50], 0; movups xmmword ptr [rax + 0x40], xmm0; pop rbx; ret; 
0x00000000004277d5: mov dword ptr [rax + 8], 0; ret; 
0x00000000004806f2: mov dword ptr [rax + 8], ecx; mov rcx, qword ptr [rax + 0x10]; mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000045fac9: mov dword ptr [rax + 8], edx; ret; 
0x000000000044e942: mov dword ptr [rax - 0x17], 0xffffff50; nop dword ptr [rax]; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000042d433: mov dword ptr [rax - 0x2b17fff8], eax; ret; 
0x00000000004a80a8: mov dword ptr [rax - 0x77], ecx; ret 0xc148; 
0x00000000004277ce: mov dword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x000000000049841d: mov dword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000045bef8: mov dword ptr [rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000045d070: mov dword ptr [rax], 0x16; mov rax, -1; ret; 
0x0000000000420684: mov dword ptr [rax], 0x89480000; ret; 
0x000000000042da2b: mov dword ptr [rax], 0xc; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000000485170: mov dword ptr [rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000000042c57b: mov dword ptr [rax], 0xc; mov rax, r8; ret; 
0x000000000047786d: mov dword ptr [rax], eax; add byte ptr [rax + 0x39], cl; ret; 
0x000000000049e8de: mov dword ptr [rax], eax; mov eax, 0xffffc002; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000049e8fb: mov dword ptr [rax], eax; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000004983d5: mov dword ptr [rax], edi; pop rbx; ret; 
0x0000000000498341: mov dword ptr [rax], edx; add rsp, 8; ret; 
0x0000000000480fed: mov dword ptr [rax], edx; mov eax, dword ptr [rcx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004806fa: mov dword ptr [rax], edx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x00000000004983c9: mov dword ptr [rax], edx; pop rbx; ret; 
0x00000000004817b8: mov dword ptr [rax], edx; xor eax, eax; ret; 
0x0000000000407ea7: mov dword ptr [rbp + 0x18], ebx; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000480e31: mov dword ptr [rbp + 0x74], eax; mov eax, 1; pop rbp; pop r12; ret; 
0x00000000004a3b48: mov dword ptr [rbp + 8], eax; add rsp, 0x278; mov rax, rbp; pop rbx; pop rbp; ret; 
0x0000000000426cb5: mov dword ptr [rbp + 8], eax; movzx eax, byte ptr [rdx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004275d6: mov dword ptr [rbp], eax; mov eax, 1; movups xmmword ptr [rbp + 0x38], xmm0; pop rbp; pop r12; ret; 
0x00000000004816da: mov dword ptr [rbp], eax; mov qword ptr [rbx + 0x60], rbp; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000428414: mov dword ptr [rbp], eax; mov qword ptr [rbx + 0x60], rbp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000481d7e: mov dword ptr [rbp], eax; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000490cd6: mov dword ptr [rbx + 0x10], 0; movups xmmword ptr [rbx], xmm0; pop rbx; ret; 
0x000000000046da37: mov dword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x00000000004296d0: mov dword ptr [rbx + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x0000000000491912: mov dword ptr [rbx + 0x10], eax; pop rax; pop rdx; pop rbx; ret; 
0x00000000004296d4: mov dword ptr [rbx + 0x14], 0; ret; 
0x0000000000491847: mov dword ptr [rbx + 0x18], eax; pop rax; pop rdx; pop rbx; ret; 
0x000000000049eb99: mov dword ptr [rbx + 0x18], eax; pop rbx; ret; 
0x000000000047f4e1: mov dword ptr [rbx + 0x18], edi; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000049ec5d: mov dword ptr [rbx + 0x20], eax; pop rbx; ret; 
0x00000000004268f5: mov dword ptr [rbx + 0x20], eax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004296cb: mov dword ptr [rbx + 0x24], ebp; pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x0000000000408d11: mov dword ptr [rbx + 0x28], edx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000046ff7f: mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x000000000046ff5c: mov dword ptr [rbx + 0x40], esi; xor eax, eax; pop rbx; ret; 
0x0000000000462089: mov dword ptr [rbx + 0x58908c8], 0x838c1; ret; 
0x0000000000462058: mov dword ptr [rbx + 0x58910c8], 0x838f2; pop rbx; ret; 
0x00000000004620b9: mov dword ptr [rbx + 0x58918c8], 0x83891; ret; 
0x000000000042695d: mov dword ptr [rbx + 0x58], 0; movups xmmword ptr [rbx + 0x48], xmm0; pop rbx; ret; 
0x00000000004816de: mov dword ptr [rbx + 0x60], ebp; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000428418: mov dword ptr [rbx + 0x60], ebp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000424fae: mov dword ptr [rbx + 0x70], 0xffffffff; pop rbx; ret; 
0x000000000048079a: mov dword ptr [rbx + 0x74], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000480d9e: mov dword ptr [rbx + 0x74], edx; pop rbx; pop rbp; pop r12; ret; 
0x000000000042340f: mov dword ptr [rbx + 0x90], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000424727: mov dword ptr [rbx + 0x90], eax; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x00000000004238a9: mov dword ptr [rbx + 0x90], esi; xor eax, eax; punpcklqdq xmm0, xmm0; movups xmmword ptr [rbx + 8], xmm0; pop rbx; ret; 
0x00000000004a36f7: mov dword ptr [rbx + 0x98], edx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000046da07: mov dword ptr [rbx + 8], eax; cmp eax, -3; je 0x6da28; pop rbx; ret; 
0x00000000004638b7: mov dword ptr [rbx], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048fa48: mov dword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x536f2], 1; ret; 
0x000000000049930e: mov dword ptr [rbx], eax; add rsp, 0x10; pop rbx; ret; 
0x0000000000426dd2: mov dword ptr [rbx], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x000000000049869e: mov dword ptr [rbx], eax; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000481a61: mov dword ptr [rbx], eax; mov eax, 1; pop rbx; pop rbp; pop r12; ret; 
0x000000000040a979: mov dword ptr [rbx], eax; mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a0a2d: mov dword ptr [rbx], eax; pop rax; pop rdx; pop rbx; ret; 
0x0000000000497c16: mov dword ptr [rbx], ebp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000480ed1: mov dword ptr [rbx], ecx; pop rbx; ret; 
0x0000000000429cd4: mov dword ptr [rbx], esp; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000423383: mov dword ptr [rbx], esp; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x0000000000423382: mov dword ptr [rbx], r12d; pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x0000000000452c02: mov dword ptr [rcx + 3], edx; ret; 
0x0000000000452bf3: mov dword ptr [rcx + 4], edx; ret; 
0x0000000000452c64: mov dword ptr [rcx + 5], edx; ret; 
0x0000000000452c74: mov dword ptr [rcx + 6], edx; ret; 
0x0000000000452c43: mov dword ptr [rcx + 7], edx; ret; 
0x0000000000452c34: mov dword ptr [rcx + 8], edx; ret; 
0x000000000049279d: mov dword ptr [rcx + rdx*8], eax; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000042d99e: mov dword ptr [rcx - 0x78], 0x29481004; ret 0x3948; 
0x0000000000445f0b: mov dword ptr [rcx - 2], ecx; ret; 
0x0000000000445ef6: mov dword ptr [rcx - 4], ecx; ret; 
0x0000000000445ee5: mov dword ptr [rcx - 8], ecx; ret; 
0x0000000000490d26: mov dword ptr [rcx], 0x1c68348; test al, al; jne 0x90cfe; movsx eax, dl; neg eax; ret; 
0x00000000004a16c1: mov dword ptr [rcx], eax; add rsp, 8; ret; 
0x000000000045be3e: mov dword ptr [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000004a16e0: mov dword ptr [rcx], eax; ret; 
0x00000000004a397f: mov dword ptr [rcx], edx; add rsp, 8; ret; 
0x0000000000452bc1: mov dword ptr [rcx], edx; mov byte ptr [rcx + 2], dl; ret; 
0x0000000000452be0: mov dword ptr [rcx], edx; mov byte ptr [rcx + 4], dl; ret; 
0x0000000000452c21: mov dword ptr [rcx], edx; mov byte ptr [rcx + 8], dl; ret; 
0x0000000000452c00: mov dword ptr [rcx], edx; mov dword ptr [rcx + 3], edx; ret; 
0x0000000000452c41: mov dword ptr [rcx], edx; mov dword ptr [rcx + 7], edx; ret; 
0x0000000000452c51: mov dword ptr [rcx], edx; mov dword ptr [rcx + 8], edx; ret; 
0x0000000000452c61: mov dword ptr [rcx], edx; mov qword ptr [rcx + 5], rdx; ret; 
0x0000000000452c71: mov dword ptr [rcx], edx; mov qword ptr [rcx + 6], rdx; ret; 
0x0000000000452c81: mov dword ptr [rcx], edx; mov qword ptr [rcx + 7], rdx; ret; 
0x0000000000452c91: mov dword ptr [rcx], edx; mov qword ptr [rcx + 8], rdx; ret; 
0x000000000046fe5c: mov dword ptr [rcx], edx; mov rax, qword ptr [rax + 0x58]; mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000046fd8c: mov dword ptr [rcx], edx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000452bf0: mov dword ptr [rcx], edx; mov word ptr [rcx + 4], dx; ret; 
0x0000000000452c31: mov dword ptr [rcx], edx; mov word ptr [rcx + 8], dx; ret; 
0x0000000000452bb1: mov dword ptr [rcx], edx; ret; 
0x0000000000456b9d: mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x11]; ret; 
0x0000000000456bdb: mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x0000000000456c5d: mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x17]; ret; 
0x0000000000456bfb: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x000000000045552b: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000455ebb: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; sub r8, 0x15; lea rdi, [rdi + 0x15]; jne 0x564f0; ret; 
0x000000000045621e: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dl; ret; 
0x0000000000456c7d: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x00000000004555ad: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000455f3d: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x18], dh; sub r8, 0x19; lea rdi, [rdi + 0x19]; jne 0x564f0; ret; 
0x00000000004554ed: mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000455e5d: mov dword ptr [rdi + 0x10], ecx; sub r8, 0x12; lea rdi, [rdi + 0x12]; jne 0x564f0; ret; 
0x0000000000455e9b: mov dword ptr [rdi + 0x10], ecx; sub r8, 0x14; lea rdi, [rdi + 0x14]; jne 0x564f0; ret; 
0x0000000000455f1d: mov dword ptr [rdi + 0x10], ecx; sub r8, 0x18; lea rdi, [rdi + 0x18]; jne 0x564f0; ret; 
0x00000000004562a0: mov dword ptr [rdi + 0x10], edx; mov byte ptr [rdi + 0x18], cl; ret; 
0x0000000000456cc0: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x00000000004555f0: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000455fa0: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x17], ecx; sub r8, 0x1b; lea rdi, [rdi + 0x1b]; jne 0x564f0; ret; 
0x0000000000456ce0: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x0000000000455610: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000455fd0: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x18], ecx; sub r8, 0x1c; lea rdi, [rdi + 0x1c]; jne 0x564f0; ret; 
0x0000000000456ca1: mov dword ptr [rdi + 0x10], edx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004555d1: mov dword ptr [rdi + 0x10], edx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000408bb7: mov dword ptr [rdi + 0x14], eax; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000456cc3: mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x00000000004555f3: mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000455fa3: mov dword ptr [rdi + 0x17], ecx; sub r8, 0x1b; lea rdi, [rdi + 0x1b]; jne 0x564f0; ret; 
0x0000000000426847: mov dword ptr [rdi + 0x18], eax; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000456ca5: mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x19]; ret; 
0x0000000000456ce3: mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x00000000004555d5: mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000455f75: mov dword ptr [rdi + 0x18], ecx; sub r8, 0x1a; lea rdi, [rdi + 0x1a]; jne 0x564f0; ret; 
0x0000000000455fd3: mov dword ptr [rdi + 0x18], ecx; sub r8, 0x1c; lea rdi, [rdi + 0x1c]; jne 0x564f0; ret; 
0x0000000000426874: mov dword ptr [rdi + 0x18], edx; mov qword ptr [rdi + 0x48], rax; movups xmmword ptr [rdi + 8], xmm0; ret; 
0x00000000004285a6: mov dword ptr [rdi + 0x18], edx; mov rcx, rdx; add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004285ec: mov dword ptr [rdi + 0x18], esi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000045fb0f: mov dword ptr [rdi + 0x20], edx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000045fb21: mov dword ptr [rdi + 0x20], esi; ret; 
0x0000000000408c2f: mov dword ptr [rdi + 0x24], eax; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000048b106: mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000048b0d4: mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000048b10d: mov dword ptr [rdi + 0x308], eax; ret; 
0x000000000048b0db: mov dword ptr [rdi + 0x310], eax; ret; 
0x0000000000426878: mov dword ptr [rdi + 0x48], eax; movups xmmword ptr [rdi + 8], xmm0; ret; 
0x0000000000426843: mov dword ptr [rdi + 0x48], edx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000042683b: mov dword ptr [rdi + 0x58], eax; mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x00000000004a39d5: mov dword ptr [rdi + 0x98], esi; ret; 
0x0000000000427891: mov dword ptr [rdi + 0xa0], 0xffffffff; mov qword ptr [rdi + 0xa8], 0; ret; 
0x0000000000427884: mov dword ptr [rdi + 0xa8], 0; ret; 
0x0000000000408b7f: mov dword ptr [rdi + 0xc], eax; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000042063d: mov dword ptr [rdi + 0xd8], edx; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x0000000000456c1d: mov dword ptr [rdi + 0xe], ecx; lea rax, [rdi + 0x15]; ret; 
0x000000000045554d: mov dword ptr [rdi + 0xe], ecx; ret; 
0x0000000000455edd: mov dword ptr [rdi + 0xe], ecx; sub r8, 0x16; lea rdi, [rdi + 0x16]; jne 0x564f0; ret; 
0x0000000000456bbb: mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x0000000000456c3d: mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x16]; ret; 
0x000000000045550b: mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000455e7b: mov dword ptr [rdi + 0xf], ecx; sub r8, 0x13; lea rdi, [rdi + 0x13]; jne 0x564f0; ret; 
0x0000000000455efd: mov dword ptr [rdi + 0xf], ecx; sub r8, 0x17; lea rdi, [rdi + 0x17]; jne 0x564f0; ret; 
0x0000000000443075: mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000442eb8: mov dword ptr [rdi + 1], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000443158: mov dword ptr [rdi + 1], edx; mov word ptr [rdi], cx; ret; 
0x0000000000443005: mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000442e48: mov dword ptr [rdi + 2], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000456a87: mov dword ptr [rdi + 3], edx; lea rax, [rdi + 6]; ret; 
0x0000000000442f95: mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000442dd8: mov dword ptr [rdi + 3], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000455437: mov dword ptr [rdi + 3], edx; ret; 
0x0000000000455cf7: mov dword ptr [rdi + 3], edx; sub r8, 7; lea rdi, [rdi + 7]; jne 0x564f0; ret; 
0x0000000000456a69: mov dword ptr [rdi + 4], edx; lea rax, [rdi + 5]; ret; 
0x0000000000442d68: mov dword ptr [rdi + 4], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000455429: mov dword ptr [rdi + 4], edx; ret; 
0x0000000000455cd9: mov dword ptr [rdi + 4], edx; sub r8, 6; lea rdi, [rdi + 6]; jne 0x564f0; ret; 
0x0000000000456b1b: mov dword ptr [rdi + 5], edx; lea rax, [rdi + 0xc]; ret; 
0x0000000000442cf8: mov dword ptr [rdi + 5], edx; mov qword ptr [rdi], rcx; ret; 
0x000000000045549b: mov dword ptr [rdi + 5], edx; ret; 
0x0000000000455dbb: mov dword ptr [rdi + 5], edx; sub r8, 0xd; lea rdi, [rdi + 0xd]; jne 0x564f0; ret; 
0x0000000000456b3b: mov dword ptr [rdi + 6], edx; lea rax, [rdi + 0xd]; ret; 
0x0000000000442c88: mov dword ptr [rdi + 6], edx; mov qword ptr [rdi], rcx; ret; 
0x00000000004554ab: mov dword ptr [rdi + 6], edx; ret; 
0x0000000000455ddb: mov dword ptr [rdi + 6], edx; sub r8, 0xe; lea rdi, [rdi + 0xe]; jne 0x564f0; ret; 
0x0000000000456ad9: mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xa]; ret; 
0x0000000000456b5b: mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xe]; ret; 
0x0000000000442c18: mov dword ptr [rdi + 7], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000455479: mov dword ptr [rdi + 7], edx; ret; 
0x0000000000455d79: mov dword ptr [rdi + 7], edx; sub r8, 0xb; lea rdi, [rdi + 0xb]; jne 0x564f0; ret; 
0x0000000000455dfb: mov dword ptr [rdi + 7], edx; sub r8, 0xf; lea rdi, [rdi + 0xf]; jne 0x564f0; ret; 
0x000000000049ea0a: mov dword ptr [rdi + 8], eax; mov eax, 0xffffc002; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000049e996: mov dword ptr [rdi + 8], eax; mov eax, 2; ret; 
0x000000000042684b: mov dword ptr [rdi + 8], eax; ret; 
0x000000000049d1f8: mov dword ptr [rdi + 8], eax; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x00000000004285b0: mov dword ptr [rdi + 8], eax; xor eax, eax; ret; 
0x000000000049d188: mov dword ptr [rdi + 8], ecx; ret; 
0x0000000000456af9: mov dword ptr [rdi + 8], edx; lea rax, [rdi + 0xb]; ret; 
0x0000000000456abb: mov dword ptr [rdi + 8], edx; lea rax, [rdi + 9]; ret; 
0x000000000049e7b0: mov dword ptr [rdi + 8], edx; mov eax, ebx; adc rax, rdx; pop rbp; pop rbx; ret; 
0x000000000049e678: mov dword ptr [rdi + 8], edx; mov eax, ecx; adc eax, eax; ret; 
0x000000000045546b: mov dword ptr [rdi + 8], edx; ret; 
0x0000000000455d5b: mov dword ptr [rdi + 8], edx; sub r8, 0xa; lea rdi, [rdi + 0xa]; jne 0x564f0; ret; 
0x000000000044f00d: mov dword ptr [rdi + r8 - 2], edx; vzeroupper; ret; 
0x000000000044f029: mov dword ptr [rdi + r8 - 4], edx; vzeroupper; ret; 
0x000000000044f00e: mov dword ptr [rdi + rax - 2], edx; vzeroupper; ret; 
0x000000000044f02a: mov dword ptr [rdi + rax - 4], edx; vzeroupper; ret; 
0x000000000044f04c: mov dword ptr [rdi + rax - 8], edx; vzeroupper; ret; 
0x000000000049d7bd: mov dword ptr [rdi + rbx*8 + 8], ecx; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000045a39f: mov dword ptr [rdi + rdx - 2], ecx; mov word ptr [rdi], cx; ret; 
0x000000000045a524: mov dword ptr [rdi + rdx - 2], ecx; mov word ptr [rdi], cx; vzeroupper; ret; 
0x0000000000459629: mov dword ptr [rdi + rdx - 2], ecx; mov word ptr [rdi], si; ret; 
0x00000000004570a8: mov dword ptr [rdi + rdx - 3], ecx; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e988: mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x000000000045a397: mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], ecx; ret; 
0x000000000045a519: mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], ecx; vzeroupper; ret; 
0x0000000000459619: mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x00000000004570cc: mov dword ptr [rdi + rdx - 7], ecx; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e99c: mov dword ptr [rdi + rdx - 7], ecx; vzeroupper; ret; 
0x000000000045a38f: mov dword ptr [rdi + rdx - 8], ecx; mov qword ptr [rdi], rcx; ret; 
0x000000000045a50e: mov dword ptr [rdi + rdx - 8], ecx; mov qword ptr [rdi], rcx; vzeroupper; ret; 
0x000000000045960b: mov dword ptr [rdi + rdx - 8], ecx; mov qword ptr [rdi], rsi; ret; 
0x00000000004a3991: mov dword ptr [rdi + rsi*8], edx; add rsp, 8; ret; 
0x000000000043caf5: mov dword ptr [rdi - 0x10], ebx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cb33: mov dword ptr [rdi - 0x10], ebx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000049d0ef: mov dword ptr [rdi - 0x10], ecx; ret; 
0x000000000043cca8: mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cda4: mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043ccf0: mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043ce78: mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d058: mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d248: mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d419: mov dword ptr [rdi - 0x15], ebx; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d619: mov dword ptr [rdi - 0x16], ebx; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d819: mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043caf1: mov dword ptr [rdi - 0x18], edx; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cb2f: mov dword ptr [rdi - 0x18], edx; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cca4: mov dword ptr [rdi - 0x19], edx; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cda0: mov dword ptr [rdi - 0x19], edx; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043ccec: mov dword ptr [rdi - 0x19], edx; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043ce74: mov dword ptr [rdi - 0x1a], edx; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d054: mov dword ptr [rdi - 0x1b], edx; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d244: mov dword ptr [rdi - 0x1c], edx; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d415: mov dword ptr [rdi - 0x1d], edx; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d615: mov dword ptr [rdi - 0x1e], edx; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d815: mov dword ptr [rdi - 0x1f], edx; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043caed: mov dword ptr [rdi - 0x20], ecx; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cb2b: mov dword ptr [rdi - 0x20], ecx; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cca0: mov dword ptr [rdi - 0x21], ecx; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cd9c: mov dword ptr [rdi - 0x21], ecx; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043cce8: mov dword ptr [rdi - 0x21], ecx; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043ce70: mov dword ptr [rdi - 0x22], ecx; mov qword ptr [rdi - 0x1a], r10; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d050: mov dword ptr [rdi - 0x23], ecx; mov qword ptr [rdi - 0x1b], r10; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d240: mov dword ptr [rdi - 0x24], ecx; mov qword ptr [rdi - 0x1c], r10; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d411: mov dword ptr [rdi - 0x25], ecx; mov qword ptr [rdi - 0x1d], r10; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d611: mov dword ptr [rdi - 0x26], ecx; mov qword ptr [rdi - 0x1e], r10; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d811: mov dword ptr [rdi - 0x27], ecx; mov qword ptr [rdi - 0x1f], r10; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cae9: mov dword ptr [rdi - 0x28], eax; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cb27: mov dword ptr [rdi - 0x28], eax; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043ce7c: mov dword ptr [rdi - 0xa], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004426c8: mov dword ptr [rdi - 0xa], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d05c: mov dword ptr [rdi - 0xb], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000442648: mov dword ptr [rdi - 0xb], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d24c: mov dword ptr [rdi - 0xc], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004425c8: mov dword ptr [rdi - 0xc], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d41d: mov dword ptr [rdi - 0xd], ecx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000442539: mov dword ptr [rdi - 0xd], edx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043d61d: mov dword ptr [rdi - 0xe], ecx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004424a9: mov dword ptr [rdi - 0xe], edx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043d81d: mov dword ptr [rdi - 0xf], ecx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000442419: mov dword ptr [rdi - 0xf], edx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004563e0: mov dword ptr [rdi - 1], edx; ret; 
0x000000000043d1fd: mov dword ptr [rdi - 2], ecx; ret; 
0x000000000043d015: mov dword ptr [rdi - 2], edx; ret; 
0x000000000043d1f9: mov dword ptr [rdi - 3], edx; mov word ptr [rdi - 2], cx; ret; 
0x000000000043d5d9: mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043ccaf: mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d5d6: mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d7d6: mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d9d6: mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000049d0e8: mov dword ptr [rdi - 8], eax; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x000000000043caf9: mov dword ptr [rdi - 8], ecx; ret; 
0x000000000043cb37: mov dword ptr [rdi - 8], edx; ret; 
0x000000000043ccac: mov dword ptr [rdi - 9], eax; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cda8: mov dword ptr [rdi - 9], ecx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043ccf4: mov dword ptr [rdi - 9], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000442748: mov dword ptr [rdi - 9], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000040aaae: mov dword ptr [rdi], 0x66; xor eax, eax; ret; 
0x000000000040aacb: mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000048f1ac: mov dword ptr [rdi], eax; mov rax, qword ptr [rip + 0x562b3]; mov qword ptr [rsi], rax; ret; 
0x000000000049d068: mov dword ptr [rdi], eax; shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x000000000049d182: mov dword ptr [rdi], eax; shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x000000000049d0e1: mov dword ptr [rdi], ebx; shld r8, r9, cl; mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x000000000049d1f1: mov dword ptr [rdi], ebx; shrd r8, r9, cl; mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000456a55: mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x0000000000456aa7: mov dword ptr [rdi], ecx; lea rax, [rdi + 8]; ret; 
0x0000000000457074: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], 0; lea rax, [rdi + 2]; vzeroupper; ret; 
0x000000000044e964: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x0000000000456a34: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x00000000004553f4: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], dh; ret; 
0x0000000000455c74: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], dh; sub r8, 3; lea rdi, [rdi + 3]; jne 0x564f0; ret; 
0x00000000004560e7: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], dl; ret; 
0x0000000000456105: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 4], dl; ret; 
0x0000000000456147: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 8], dl; ret; 
0x0000000000456a85: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; lea rax, [rdi + 6]; ret; 
0x0000000000455435: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x0000000000455cf5: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; sub r8, 7; lea rdi, [rdi + 7]; jne 0x564f0; ret; 
0x0000000000456ad7: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xa]; ret; 
0x0000000000455477: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 7], edx; ret; 
0x0000000000455d77: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 7], edx; sub r8, 0xb; lea rdi, [rdi + 0xb]; jne 0x564f0; ret; 
0x0000000000456af7: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 8], edx; lea rax, [rdi + 0xb]; ret; 
0x0000000000455487: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 8], edx; ret; 
0x000000000044f027: mov dword ptr [rdi], ecx; mov dword ptr [rdi + r8 - 4], edx; vzeroupper; ret; 
0x000000000045932b: mov dword ptr [rdi], ecx; mov dword ptr [rsi - 4], ecx; ret; 
0x00000000004570a2: mov dword ptr [rdi], ecx; mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e982: mov dword ptr [rdi], ecx; mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x0000000000456b18: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000455498: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000455db8: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 5], rdx; sub r8, 0xd; lea rdi, [rdi + 0xd]; jne 0x564f0; ret; 
0x0000000000456b38: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x00000000004554a8: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000455dd8: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 6], rdx; sub r8, 0xe; lea rdi, [rdi + 0xe]; jne 0x564f0; ret; 
0x0000000000456b58: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004554b8: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000455df8: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 7], rdx; sub r8, 0xf; lea rdi, [rdi + 0xf]; jne 0x564f0; ret; 
0x000000000044f049: mov dword ptr [rdi], ecx; mov qword ptr [rdi + r8 - 8], rdx; vzeroupper; ret; 
0x00000000004570c9: mov dword ptr [rdi], ecx; mov qword ptr [rdi + rdx - 7], r9; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e999: mov dword ptr [rdi], ecx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x0000000000456a66: mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; lea rax, [rdi + 5]; ret; 
0x0000000000455426: mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000455cd6: mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; sub r8, 6; lea rdi, [rdi + 6]; jne 0x564f0; ret; 
0x0000000000456ab8: mov dword ptr [rdi], ecx; mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x0000000000455468: mov dword ptr [rdi], ecx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000455d58: mov dword ptr [rdi], ecx; mov word ptr [rdi + 8], dx; sub r8, 0xa; lea rdi, [rdi + 0xa]; jne 0x564f0; ret; 
0x000000000044f00a: mov dword ptr [rdi], ecx; mov word ptr [rdi + r8 - 2], dx; vzeroupper; ret; 
0x0000000000459337: mov dword ptr [rdi], ecx; mov word ptr [rsi - 2], cx; ret; 
0x0000000000442c1c: mov dword ptr [rdi], ecx; ret; 
0x0000000000455cb5: mov dword ptr [rdi], ecx; sub r8, 5; lea rdi, [rdi + 5]; jne 0x564f0; ret; 
0x0000000000455d37: mov dword ptr [rdi], ecx; sub r8, 9; lea rdi, [rdi + 9]; jne 0x564f0; ret; 
0x000000000045a513: mov dword ptr [rdi], ecx; vzeroupper; ret; 
0x0000000000456a24: mov dword ptr [rdi], edx; lea rax, [rdi + 1]; ret; 
0x0000000000457064: mov dword ptr [rdi], edx; lea rax, [rdi + 1]; vzeroupper; ret; 
0x0000000000456a42: mov dword ptr [rdi], edx; lea rax, [rdi + 3]; ret; 
0x0000000000457092: mov dword ptr [rdi], edx; lea rax, [rdi + 3]; vzeroupper; ret; 
0x0000000000456a94: mov dword ptr [rdi], edx; lea rax, [rdi + 7]; ret; 
0x0000000000456400: mov dword ptr [rdi], edx; mov byte ptr [rdi + 4], dl; ret; 
0x0000000000456441: mov dword ptr [rdi], edx; mov byte ptr [rdi + 8], dl; ret; 
0x0000000000456461: mov dword ptr [rdi], edx; mov dword ptr [rdi + 7], edx; ret; 
0x0000000000456471: mov dword ptr [rdi], edx; mov dword ptr [rdi + 8], edx; ret; 
0x000000000044f0f0: mov dword ptr [rdi], edx; mov dword ptr [rdi + r8 - 4], edx; vzeroupper; ret; 
0x0000000000456481: mov dword ptr [rdi], edx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000456491: mov dword ptr [rdi], edx; mov qword ptr [rdi + 6], rdx; ret; 
0x000000000044f101: mov dword ptr [rdi], edx; mov qword ptr [rdi + r8 - 8], rdx; vzeroupper; ret; 
0x0000000000456410: mov dword ptr [rdi], edx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000456451: mov dword ptr [rdi], edx; mov word ptr [rdi + 8], dx; ret; 
0x000000000044f0e1: mov dword ptr [rdi], edx; mov word ptr [rdi + r8 - 2], dx; vzeroupper; ret; 
0x0000000000442f24: mov dword ptr [rdi], edx; ret; 
0x000000000044eec4: mov dword ptr [rdi], edx; sub r8, 2; lea rdi, [rdi + 2]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c54: mov dword ptr [rdi], edx; sub r8, 2; lea rdi, [rdi + 2]; jne 0x564f0; ret; 
0x000000000044ef02: mov dword ptr [rdi], edx; sub r8, 4; lea rdi, [rdi + 4]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c92: mov dword ptr [rdi], edx; sub r8, 4; lea rdi, [rdi + 4]; jne 0x564f0; ret; 
0x0000000000455d14: mov dword ptr [rdi], edx; sub r8, 8; lea rdi, [rdi + 8]; jne 0x564f0; ret; 
0x000000000044e954: mov dword ptr [rdi], edx; vzeroupper; ret; 
0x0000000000445ef3: mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x000000000049e846: mov dword ptr [rdi], esi; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x0000000000445ee2: mov dword ptr [rdi], esi; mov qword ptr [r9 - 8], rcx; ret; 
0x0000000000445f07: mov dword ptr [rdi], esi; mov word ptr [r9 - 2], cx; ret; 
0x0000000000459610: mov dword ptr [rdi], esi; ret; 
0x0000000000429dff: mov dword ptr [rdx + 0x28], ecx; mov rax, qword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x0000000000407e85: mov dword ptr [rdx + 0xd0], ecx; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004234ed: mov dword ptr [rdx + 0xe0], ecx; pop rbx; ret; 
0x000000000042064b: mov dword ptr [rdx + 0xe0], ecx; ret; 
0x0000000000454f87: mov dword ptr [rdx + 3], eax; lea rax, [rdx + 6]; ret; 
0x0000000000450c37: mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x0000000000452a97: mov dword ptr [rdx + 3], eax; mov rax, rdi; sub r8, 7; lea rcx, [rdx + 7]; jne 0x52d30; ret; 
0x0000000000454f69: mov dword ptr [rdx + 4], eax; lea rax, [rdx + 5]; ret; 
0x0000000000450c29: mov dword ptr [rdx + 4], eax; mov rax, rdi; ret; 
0x0000000000452a79: mov dword ptr [rdx + 4], eax; mov rax, rdi; sub r8, 6; lea rcx, [rdx + 6]; jne 0x52d30; ret; 
0x000000000045501b: mov dword ptr [rdx + 5], eax; lea rax, [rdx + 0xc]; ret; 
0x0000000000454f99: mov dword ptr [rdx + 5], eax; lea rax, [rdx + 8]; ret; 
0x0000000000450c49: mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000452b3b: mov dword ptr [rdx + 5], eax; mov rax, rdi; sub r8, 0xd; lea rcx, [rdx + 0xd]; jne 0x52d30; ret; 
0x0000000000452ab9: mov dword ptr [rdx + 5], eax; mov rax, rdi; sub r8, 9; lea rcx, [rdx + 9]; jne 0x52d30; ret; 
0x000000000045503b: mov dword ptr [rdx + 6], eax; lea rax, [rdx + 0xd]; ret; 
0x0000000000454fb9: mov dword ptr [rdx + 6], eax; lea rax, [rdx + 9]; ret; 
0x0000000000450c59: mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000452ad9: mov dword ptr [rdx + 6], eax; mov rax, rdi; sub r8, 0xa; lea rcx, [rdx + 0xa]; jne 0x52d30; ret; 
0x0000000000452b5b: mov dword ptr [rdx + 6], eax; mov rax, rdi; sub r8, 0xe; lea rcx, [rdx + 0xe]; jne 0x52d30; ret; 
0x0000000000454fd9: mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xa]; ret; 
0x000000000045505b: mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xe]; ret; 
0x0000000000450c69: mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000452af9: mov dword ptr [rdx + 7], eax; mov rax, rdi; sub r8, 0xb; lea rcx, [rdx + 0xb]; jne 0x52d30; ret; 
0x0000000000452b7b: mov dword ptr [rdx + 7], eax; mov rax, rdi; sub r8, 0xf; lea rcx, [rdx + 0xf]; jne 0x52d30; ret; 
0x0000000000404c3e: mov dword ptr [rdx + 8], eax; call 0x2ead0; mov rax, rbx; pop rbx; ret; 
0x0000000000454ff9: mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xb]; ret; 
0x0000000000454eeb: mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xf]; ret; 
0x0000000000450bbb: mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x00000000004527db: mov dword ptr [rdx + 8], eax; mov rax, rdi; sub r8, 0x10; lea rcx, [rdx + 0x10]; jne 0x52d30; ret; 
0x0000000000452b19: mov dword ptr [rdx + 8], eax; mov rax, rdi; sub r8, 0xc; lea rcx, [rdx + 0xc]; jne 0x52d30; ret; 
0x000000000046da1f: mov dword ptr [rdx + 8], eax; pop rbx; ret; 
0x000000000049e80b: mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000049e97e: mov dword ptr [rdx], 0; mov eax, 2; ret; 
0x000000000049e902: mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000000431a37: mov dword ptr [rdx], eax; add byte ptr [rax - 0x73], cl; add eax, 0x289df; cmove rax, rdx; ret; 
0x0000000000454f14: mov dword ptr [rdx], eax; lea rax, [rdx + 1]; ret; 
0x0000000000454f42: mov dword ptr [rdx], eax; lea rax, [rdx + 3]; ret; 
0x0000000000454e94: mov dword ptr [rdx], eax; lea rax, [rdx + 7]; ret; 
0x0000000000454f24: mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, [rdx + 2]; ret; 
0x0000000000450bf4: mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x0000000000454f52: mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; lea rax, [rdx + 4]; ret; 
0x0000000000450c12: mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x0000000000454f62: mov dword ptr [rdx], eax; mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; lea rax, [rdx + 5]; ret; 
0x0000000000450c22: mov dword ptr [rdx], eax; mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x000000000045bee2: mov dword ptr [rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000049e848: mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000049e9d7: mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x0000000000454f82: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; lea rax, [rdx + 6]; ret; 
0x0000000000450c32: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x0000000000454f94: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, [rdx + 8]; ret; 
0x0000000000450c44: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000454fb4: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, [rdx + 9]; ret; 
0x0000000000450c54: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000454fd4: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xa]; ret; 
0x0000000000450c64: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000454ff4: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xb]; ret; 
0x0000000000450c74: mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x000000000045c11a: mov dword ptr [rdx], eax; mov rax, -1; ret; 
0x0000000000455014: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x0000000000450c84: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000455034: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x0000000000450ca4: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000455054: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x0000000000450cc4: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000454ee4: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x0000000000450bb4: mov dword ptr [rdx], eax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x0000000000450b64: mov dword ptr [rdx], eax; mov rax, rdi; ret; 
0x00000000004529f4: mov dword ptr [rdx], eax; mov rax, rdi; sub r8, 2; lea rcx, [rdx + 2]; jne 0x52d30; ret; 
0x0000000000452a32: mov dword ptr [rdx], eax; mov rax, rdi; sub r8, 4; lea rcx, [rdx + 4]; jne 0x52d30; ret; 
0x0000000000452774: mov dword ptr [rdx], eax; mov rax, rdi; sub r8, 8; lea rcx, [rdx + 8]; jne 0x52d30; ret; 
0x0000000000498441: mov dword ptr [rdx], eax; pop rbx; ret; 
0x0000000000428509: mov dword ptr [rdx], eax; ret; 
0x0000000000408a43: mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000480a4c: mov dword ptr [rdx], ecx; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004a7cfb: mov dword ptr [rip + 0x3d273], 0; add rsp, 8; ret; 
0x00000000004a78ac: mov dword ptr [rip + 0x3d5a2], 0; add rsp, 8; ret; 
0x00000000004a6714: mov dword ptr [rip + 0x3e576], ebx; test rbx, rbx; jne 0xa6700; pop rbx; ret; 
0x0000000000497eb8: mov dword ptr [rip + 0x4d16a], eax; ret; 
0x0000000000497ea1: mov dword ptr [rip + 0x4d181], eax; add rsp, 8; ret; 
0x00000000004916d1: mov dword ptr [rip + 0x53925], 0; add rsp, 8; ret; 
0x000000000048f049: mov dword ptr [rip + 0x56421], eax; ret; 
0x0000000000485134: mov dword ptr [rip + 0x5fe5e], eax; cmp rdi, rax; ja 0x85168; xor eax, eax; ret; 
0x000000000046fd68: mov dword ptr [rip + 0x73cca], edx; cmp qword ptr fs:[rdi], rsi; je 0x6fd78; ret; 
0x000000000046133a: mov dword ptr [rip + 0x80760], eax; pop rbx; ret; 
0x000000000045f87d: mov dword ptr [rip + 0x8384d], eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004620bd: mov dword ptr [rip + 0x83891], eax; ret; 
0x000000000046208d: mov dword ptr [rip + 0x838c1], eax; ret; 
0x000000000046205c: mov dword ptr [rip + 0x838f2], eax; pop rbx; ret; 
0x000000000046201d: mov dword ptr [rip + 0x83931], eax; ret; 
0x0000000000461fed: mov dword ptr [rip + 0x83961], eax; ret; 
0x0000000000461fbc: mov dword ptr [rip + 0x83992], eax; pop rbx; ret; 
0x000000000042e4d0: mov dword ptr [rip + 0xb42ea], eax; ret; 
0x000000000042e4c2: mov dword ptr [rip + 0xb4300], eax; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x000000000042e4b4: mov dword ptr [rip + 0xb683e], eax; lea rax, [rip - 0x9e1]; mov qword ptr [rip + 0xb4300], rax; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x000000000042e46e: mov dword ptr [rip + 0xb68a8], 0; ret; 
0x000000000042a6c6: mov dword ptr [rip + 0xb80f4], eax; ret; 
0x000000000042a6b8: mov dword ptr [rip + 0xb810a], eax; lea rax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x0000000000429762: mov dword ptr [rip + 0xb9004], eax; ret; 
0x000000000042973c: mov dword ptr [rip + 0xb900e], eax; ret; 
0x0000000000429758: mov dword ptr [rip + 0xb9012], 1; mov dword ptr [rip + 0xb9004], eax; ret; 
0x0000000000429713: mov dword ptr [rip + 0xb902f], eax; ret; 
0x0000000000429731: mov dword ptr [rip + 0xb9039], 1; mov qword ptr [rip + 0xb900e], rax; ret; 
0x00000000004296f3: mov dword ptr [rip + 0xb9047], eax; ret; 
0x0000000000429708: mov dword ptr [rip + 0xb9062], 1; mov qword ptr [rip + 0xb902f], rax; ret; 
0x00000000004296e8: mov dword ptr [rip + 0xb9082], 1; mov qword ptr [rip + 0xb9047], rax; ret; 
0x00000000004293e9: mov dword ptr [rip + 0xb93b9], eax; ret; 
0x00000000004293d2: mov dword ptr [rip + 0xb93c8], eax; ret; 
0x00000000004293b8: mov dword ptr [rip + 0xb93d2], edx; ret; 
0x0000000000429379: mov dword ptr [rip + 0xb93d9], eax; ret; 
0x0000000000429369: mov dword ptr [rip + 0xb93f1], eax; ret; 
0x00000000004297a6: mov dword ptr [rip + 0xbb58c], eax; ret; 
0x0000000000429778: mov dword ptr [rip + 0xbb5b6], eax; ret; 
0x00000000004109e3: mov dword ptr [rip + 0xd38ff], eax; lea rax, [rip + 0xd38f0]; ret; 
0x00000000004109da: mov dword ptr [rip + 0xd3900], eax; mov eax, dword ptr [rdx + rsi]; mov dword ptr [rip + 0xd38ff], eax; lea rax, [rip + 0xd38f0]; ret; 
0x0000000000410bbe: mov dword ptr [rip + 0xd423c], eax; add rsp, 0x88; pop rbx; ret; 
0x0000000000403504: mov dword ptr [rip + 0xdec16], esi; ret; 
0x00000000004034f4: mov dword ptr [rip + 0xdec22], esi; ret; 
0x00000000004034e4: mov dword ptr [rip + 0xdec26], esi; ret; 
0x00000000004034d4: mov dword ptr [rip + 0xdec32], esi; ret; 
0x00000000004034c4: mov dword ptr [rip + 0xdec5e], esi; ret; 
0x00000000004033a4: mov dword ptr [rip + 0xded6a], esi; ret; 
0x0000000000403394: mov dword ptr [rip + 0xded7e], esi; ret; 
0x0000000000403384: mov dword ptr [rip + 0xded9a], esi; ret; 
0x0000000000403178: mov dword ptr [rip + 0xdef8a], edi; ret; 
0x000000000040308e: mov dword ptr [rip + 0xdf070], 1; ret; 
0x0000000000403082: mov dword ptr [rip + 0xdf078], ebx; mov eax, 1; pop rbx; mov dword ptr [rip + 0xdf070], 1; ret; 
0x0000000000403064: mov dword ptr [rip + 0xdf09a], 0; xor eax, eax; pop rbx; ret; 
0x000000000040223a: mov dword ptr [rip + 0xe2090], ebx; xor eax, eax; pop rbx; ret; 
0x00000000004020a2: mov dword ptr [rip + 0xe2228], eax; add rsp, 8; ret; 
0x00000000004017d5: mov dword ptr [rip + 0xe3879], 0; pop rdx; ret; 
0x000000000045933a: mov dword ptr [rsi - 2], ecx; ret; 
0x000000000045932d: mov dword ptr [rsi - 4], ecx; ret; 
0x00000000004a39c2: mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000048f1b6: mov dword ptr [rsi], eax; ret; 
0x000000000046fd81: mov dword ptr [rsi], ecx; mov rcx, -0x18; mov qword ptr fs:[rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x000000000048e4b5: mov dword ptr [rsi], edi; mov rax, r8; ret; 
0x000000000048e1a8: mov dword ptr [rsp + 0x18], eax; call 0x8dad0; add rsp, 0xd8; ret; 
0x0000000000409014: mov dword ptr [rsp + 0x30], eax; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000045c19b: mov dword ptr [rsp + 8], eax; call 0x818f0; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000048f261: mov dword ptr [rsp + 8], eax; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000404e47: mov dword ptr [rsp], eax; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x00000000004a11c4: mov dword ptr [rsp], eax; call 0xa15f0; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x00000000004824e2: mov dword ptr [rsp], esi; pop r12; pop r13; pop r14; ret; 
0x000000000045bef7: mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000045d06f: mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x000000000042da2a: mov dword ptr fs:[rax], 0xc; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000000048516f: mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000000042c57a: mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000000045be3d: mov dword ptr fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000045bee1: mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000045c119: mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x0000000000459618: mov dword ptr ss:[rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x0000000000443150: mov dx, word ptr [rsi + 1]; mov cx, word ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x0000000000456a62: mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; lea rax, [rdi + 5]; ret; 
0x0000000000455422: mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000456ab3: mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x0000000000455463: mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000043d010: mov dx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x000000000043d1f0: mov dx, word ptr [rsi - 3]; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x0000000000456a20: mov dx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, [rdi + 1]; ret; 
0x00000000004553e0: mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000455c50: mov dx, word ptr [rsi]; mov word ptr [rdi], dx; sub r8, 2; lea rdi, [rdi + 2]; jne 0x564f0; ret; 
0x000000000045a833: mov eax, 0; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000040dbed: mov eax, 0; cmovne r12, rax; mov rax, r12; pop r12; ret; 
0x000000000040203b: mov eax, 0; leave; ret; 
0x0000000000484fb8: mov eax, 0x106; syscall; cmp rax, -0x1000; ja 0x84fd0; ret; 
0x000000000042979c: mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0xbb58c], rax; ret; 
0x000000000045a881: mov eax, 0x10; pop rbx; ret; 
0x000000000045cf34: mov eax, 0x10; syscall; cmp rax, -0xfff; jae 0x5cf44; ret; 
0x0000000000498fa7: mov eax, 0x11; syscall; cmp rax, -0x1000; ja 0x98fc0; ret; 
0x000000000045ce5b: mov eax, 0x12e; xor edi, edi; syscall; cmp rax, -0x1000; ja 0x5ce70; ret; 
0x0000000000430e10: mov eax, 0x16; ret; 
0x000000000045be24: mov eax, 0x18; syscall; cmp rax, -0xfff; jae 0x5be34; ret; 
0x000000000045f8a7: mov eax, 0x19; syscall; cmp rax, -0xfff; jae 0x5f8b7; ret; 
0x000000000045d144: mov eax, 0x1c; syscall; cmp rax, -0xfff; jae 0x5d154; ret; 
0x000000000045a87a: mov eax, 0x20; pop rbx; ret; 
0x000000000045c3a4: mov eax, 0x20; syscall; cmp rax, -0xfff; jae 0x5c3b4; ret; 
0x000000000049ed24: mov eax, 0x26; syscall; cmp rax, -0xfff; jae 0x9ed34; ret; 
0x0000000000498f94: mov eax, 0x27; syscall; ret; 
0x000000000045a873: mov eax, 0x30; pop rbx; ret; 
0x0000000000484ed4: mov eax, 0x3f; syscall; cmp rax, -0xfff; jae 0x84ee4; ret; 
0x000000000045a86c: mov eax, 0x40; pop rbx; ret; 
0x000000000046d361: mov eax, 0x44000000; mov eax, eax; pop rbp; pop r12; ret; 
0x00000000004a17ef: mov eax, 0x48000000; add esp, 8; ret; 
0x0000000000431af4: mov eax, 0x48000096; lea edx, [rip + 0xec41]; cmovne rax, rdx; ret; 
0x000000000040a781: mov eax, 0x4dec40; pop rbp; ret; 
0x000000000040a4e1: mov eax, 0x4dec40; ret; 
0x000000000040a7a1: mov eax, 0x4dec80; pop rbp; ret; 
0x000000000040a4d1: mov eax, 0x4dec80; ret; 
0x000000000040a791: mov eax, 0x4decc0; pop rbp; ret; 
0x000000000040a3cd: mov eax, 0x4decc0; ret; 
0x000000000040a7e1: mov eax, 0x4ded00; pop rbp; ret; 
0x000000000040a461: mov eax, 0x4ded00; ret; 
0x000000000040a7d1: mov eax, 0x4ded40; pop rbp; ret; 
0x000000000040a481: mov eax, 0x4ded40; ret; 
0x000000000040a7f1: mov eax, 0x4ded80; pop rbp; ret; 
0x000000000040a42f: mov eax, 0x4ded80; ret; 
0x000000000040a7c1: mov eax, 0x4dedc0; pop rbp; ret; 
0x000000000040a36f: mov eax, 0x4dedc0; ret; 
0x000000000040a803: mov eax, 0x4dee00; pop rbp; ret; 
0x000000000040a3ad: mov eax, 0x4dee00; ret; 
0x000000000040a7fa: mov eax, 0x4dee40; pop rbp; ret; 
0x000000000040a4a9: mov eax, 0x4dee40; ret; 
0x000000000040a830: mov eax, 0x4dee80; pop rbp; ret; 
0x000000000040a4f1: mov eax, 0x4dee80; ret; 
0x000000000040a827: mov eax, 0x4deec0; pop rbp; ret; 
0x000000000040a471: mov eax, 0x4deec0; ret; 
0x000000000040a839: mov eax, 0x4def00; pop rbp; ret; 
0x000000000040a3ed: mov eax, 0x4def00; ret; 
0x000000000040a842: mov eax, 0x4def40; pop rbp; ret; 
0x000000000040a459: mov eax, 0x4def40; ret; 
0x000000000040a771: mov eax, 0x4e11a0; pop rbp; ret; 
0x000000000040a491: mov eax, 0x4e11a0; ret; 
0x000000000040a7b1: mov eax, 0x4e11e0; pop rbp; ret; 
0x000000000040a40d: mov eax, 0x4e11e0; ret; 
0x000000000040a815: mov eax, 0x4e1220; pop rbp; ret; 
0x000000000040a441: mov eax, 0x4e1220; ret; 
0x000000000040a80c: mov eax, 0x4e1260; pop rbp; ret; 
0x000000000040a501: mov eax, 0x4e1260; ret; 
0x000000000040a81e: mov eax, 0x4e12a0; pop rbp; ret; 
0x000000000040a4b1: mov eax, 0x4e12a0; ret; 
0x000000000040a767: mov eax, 0x4e12e0; pop rbp; ret; 
0x000000000040a4c1: mov eax, 0x4e12e0; ret; 
0x0000000000402585: mov eax, 0x4e2130; mov rax, qword ptr [rax]; mov eax, dword ptr [rax]; ret; 
0x000000000045a865: mov eax, 0x60; pop rbx; ret; 
0x00000000004912e1: mov eax, 0x62696c67; movsxd rbp, dword ptr [rip + 0x3349646c]; add byte ptr [rax + 9], cl; ret 0x4475; 
0x000000000045f904: mov eax, 0x63; syscall; cmp rax, -0xfff; jae 0x5f914; ret; 
0x0000000000484f04: mov eax, 0x66; syscall; ret; 
0x0000000000484f24: mov eax, 0x68; syscall; ret; 
0x0000000000484f14: mov eax, 0x6b; syscall; ret; 
0x0000000000484f34: mov eax, 0x6c; syscall; ret; 
0x000000000045a88f: mov eax, 0x80; pop rbx; ret; 
0x0000000000479eff: mov eax, 0x8bfffff6; mov ch, 0; idiv edi; dec dword ptr [rax + 0x29]; ret 0xb8; 
0x0000000000415941: mov eax, 0x8d4dfffe; jl 0x1594f; add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x000000000045f8d7: mov eax, 0x9d; syscall; cmp rax, -0xfff; jae 0x5f8e7; ret; 
0x000000000045d114: mov eax, 0xa; syscall; cmp rax, -0xfff; jae 0x5d124; ret; 
0x000000000045d0e4: mov eax, 0xb; syscall; cmp rax, -0xfff; jae 0x5d0f4; ret; 
0x000000000042d246: mov eax, 0xca; lea rdi, [rip + 0xb558e]; syscall; pop rbp; ret; 
0x000000000042e3b2: mov eax, 0xca; lea rdi, [rip + 0xb6962]; syscall; pop rbx; ret; 
0x0000000000426188: mov eax, 0xca; lea rdi, [rip + 0xbeb1c]; syscall; ret; 
0x0000000000497e64: mov eax, 0xca; syscall; ret; 
0x0000000000498f64: mov eax, 0xd9; syscall; cmp rax, -0x1000; ja 0x98f78; ret; 
0x000000000043ac49: mov eax, 0xf66b8b2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000049e8e0: mov eax, 0xffffc002; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000049ea0d: mov eax, 0xffffc002; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000040aeb0: mov eax, 0xffffff20; ret; 
0x000000000040af92: mov eax, 0xffffff21; ret; 
0x000000000040af8c: mov eax, 0xffffff22; ret; 
0x000000000040af86: mov eax, 0xffffff23; ret; 
0x000000000040af80: mov eax, 0xffffff2a; ret; 
0x000000000040af7a: mov eax, 0xffffff2b; ret; 
0x000000000040af74: mov eax, 0xffffff2c; ret; 
0x000000000040af6e: mov eax, 0xffffff2d; ret; 
0x000000000040af68: mov eax, 0xffffff34; ret; 
0x000000000040af62: mov eax, 0xffffff35; ret; 
0x000000000040af56: mov eax, 0xffffff36; ret; 
0x000000000040af5c: mov eax, 0xffffff37; ret; 
0x0000000000402f22: mov eax, 0xffffff83; cmove r12d, eax; mov eax, r12d; pop r12; pop r13; ret; 
0x000000000040af32: mov eax, 0xffffff88; ret; 
0x000000000040af20: mov eax, 0xffffff89; ret; 
0x000000000040aed0: mov eax, 0xffffff8a; ret; 
0x000000000040af1a: mov eax, 0xffffff8b; ret; 
0x000000000040af2c: mov eax, 0xffffff8c; ret; 
0x000000000040af02: mov eax, 0xffffff8d; ret; 
0x000000000040af3e: mov eax, 0xffffff8e; ret; 
0x000000000040af44: mov eax, 0xffffff8f; ret; 
0x000000000040af14: mov eax, 0xffffff90; ret; 
0x000000000040af38: mov eax, 0xffffff91; ret; 
0x000000000040af0e: mov eax, 0xffffff92; ret; 
0x000000000040af26: mov eax, 0xffffff93; ret; 
0x000000000040af50: mov eax, 0xffffff94; ret; 
0x000000000040aef6: mov eax, 0xffffff95; ret; 
0x000000000040aefc: mov eax, 0xffffff96; ret; 
0x000000000040aec0: mov eax, 0xffffff97; ret; 
0x000000000040af08: mov eax, 0xffffff98; ret; 
0x000000000040aef0: mov eax, 0xffffff99; ret; 
0x000000000040aee0: mov eax, 0xffffff9a; ret; 
0x000000000040af4a: mov eax, 0xffffff9b; ret; 
0x00000000004033d8: mov eax, 0xffffffa1; add rsp, 8; ret; 
0x0000000000403498: mov eax, 0xffffffa1; ret; 
0x000000000046fda5: mov eax, 0xffffffa8; movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x0000000000411ad5: mov eax, 0xffffffc0; add rax, qword ptr fs:[0]; ret; 
0x000000000045bef1: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000045d069: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x0000000000485169: mov eax, 0xffffffc0; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000000048fa65: mov eax, 0xffffffc0; pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x000000000042c571: mov eax, 0xffffffc0; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000000040a9db: mov eax, 0xffffffdf; pop rbx; ret; 
0x00000000004089bf: mov eax, 0xffffffdf; ret; 
0x000000000046fe05: mov eax, 0xffffffe0; add rax, qword ptr fs:[0]; ret; 
0x000000000046fde5: mov eax, 0xffffffe8; add rax, qword ptr fs:[0]; ret; 
0x00000000004024da: mov eax, 0xffffffea; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000402671: mov eax, 0xffffffea; pop r12; pop r13; ret; 
0x0000000000409081: mov eax, 0xffffffea; pop rbp; pop r12; ret; 
0x00000000004029f0: mov eax, 0xffffffea; pop rbx; pop rbp; pop r12; ret; 
0x00000000004023e4: mov eax, 0xffffffea; pop rbx; ret; 
0x00000000004023de: mov eax, 0xffffffea; ret; 
0x0000000000402710: mov eax, 0xffffffea; test r8d, r8d; je 0x2720; pop rbp; ret; 
0x0000000000402ea2: mov eax, 0xffffffea; test r8d, r8d; je 0x2eb0; pop rbp; ret; 
0x0000000000408cd3: mov eax, 0xffffffef; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004025ed: mov eax, 0xffffffef; cmove r12d, eax; mov eax, r12d; pop r12; pop r13; ret; 
0x0000000000408943: mov eax, 0xffffffef; pop rbx; pop rbp; pop r12; ret; 
0x0000000000407fb4: mov eax, 0xffffffef; pop rbx; pop rbp; ret; 
0x0000000000408a03: mov eax, 0xffffffef; ret; 
0x000000000046fdc5: mov eax, 0xfffffff0; add rax, qword ptr fs:[0]; ret; 
0x0000000000403859: mov eax, 0xfffffff2; pop rbx; pop rbp; ret; 
0x0000000000402083: mov eax, 0xfffffff2; ret; 
0x0000000000408b50: mov eax, 0xfffffff3; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000404f54: mov eax, 0xfffffff4; pop rbp; pop r12; ret; 
0x00000000004847cc: mov eax, 0xffffffff; endbr64; add rsp, 8; pop rbp; pop r12; ret; 
0x00000000004716fe: mov eax, 0xffffffff; pop rbp; pop r12; pop r13; ret; 
0x00000000004028c4: mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x0000000000421e20: mov eax, 0xffffffff; pop rbp; ret; 
0x0000000000422581: mov eax, 0xffffffff; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000422298: mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x00000000004238c3: mov eax, 0xffffffff; pop rbx; ret; 
0x000000000040a908: mov eax, 0xffffffff; ret; 
0x000000000048e360: mov eax, 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004a4358: mov eax, 1; cmp qword ptr [rsi + 8], rcx; ja 0xa4365; sbb eax, eax; ret; 
0x000000000049e8fd: mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x000000000040209d: mov eax, 1; mov dword ptr [rip + 0xe2228], eax; add rsp, 8; ret; 
0x000000000049e825: mov eax, 1; mov qword ptr [rdi], rsi; ret; 
0x00000000004275d9: mov eax, 1; movups xmmword ptr [rbp + 0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000000497c29: mov eax, 1; pop rbp; pop r12; pop r13; ret; 
0x0000000000480e34: mov eax, 1; pop rbp; pop r12; ret; 
0x0000000000403088: mov eax, 1; pop rbx; mov dword ptr [rip + 0xdf070], 1; ret; 
0x0000000000481a63: mov eax, 1; pop rbx; pop rbp; pop r12; ret; 
0x000000000047fd1a: mov eax, 1; pop rbx; pop rbp; ret; 
0x0000000000407d38: mov eax, 1; ret; 
0x000000000045c150: mov eax, 1; syscall; cmp rax, -0x1000; ja 0x5c1b0; ret; 
0x000000000045ce24: mov eax, 1; syscall; cmp rax, -0x1000; ja 0x5ce38; ret; 
0x0000000000484221: mov eax, 2; ret; 
0x0000000000484231: mov eax, 3; ret; 
0x000000000045c320: mov eax, 3; syscall; cmp rax, -0x1000; ja 0x5c370; ret; 
0x000000000045cb34: mov eax, 3; syscall; cmp rax, -0x1000; ja 0x5cb48; ret; 
0x00000000004a4505: mov eax, 4; cmp dil, 3; jne 0xa4530; add rsp, 8; ret; 
0x0000000000484241: mov eax, 4; ret; 
0x000000000045bec3: mov eax, 4; syscall; cmp rax, -0x1000; ja 0x5bed8; ret; 
0x0000000000484251: mov eax, 5; ret; 
0x000000000045bf22: mov eax, 5; syscall; cmp rax, -0x1000; ja 0x5bf38; ret; 
0x0000000000484261: mov eax, 6; ret; 
0x0000000000484f53: mov eax, 6; syscall; cmp rax, -0x1000; ja 0x84f68; ret; 
0x0000000000484271: mov eax, 7; ret; 
0x00000000004a451d: mov eax, 8; add rsp, 8; ret; 
0x000000000045a888: mov eax, 8; pop rbx; ret; 
0x000000000045c1e4: mov eax, 8; syscall; cmp rax, -0x1000; ja 0x5c1f8; ret; 
0x000000000046fe5f: mov eax, dword ptr [rax + 0x58]; mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000427760: mov eax, dword ptr [rax + 0x68]; test rax, rax; jne 0x27758; ret; 
0x00000000004916e5: mov eax, dword ptr [rax + 8]; ret; 
0x00000000004916f5: mov eax, dword ptr [rax + 8]; sub rax, qword ptr fs:[0]; ret; 
0x000000000046fdb3: mov eax, dword ptr [rax + rdi*8 + 0x80]; ret; 
0x0000000000410907: mov eax, dword ptr [rax + rsi]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000049067b: mov eax, dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000402557: mov eax, dword ptr [rax]; add rsp, 8; ret; 
0x00000000004a16d9: mov eax, dword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [rcx], r8; ret; 
0x000000000040258c: mov eax, dword ptr [rax]; mov eax, dword ptr [rax]; ret; 
0x00000000004a16e9: mov eax, dword ptr [rax]; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x0000000000480a49: mov eax, dword ptr [rax]; mov qword ptr [rdx], rcx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000046fdb0: mov eax, dword ptr [rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x0000000000402031: mov eax, dword ptr [rax]; mov rdi, rax; call 0x1e8a; mov eax, 0; leave; ret; 
0x000000000040258e: mov eax, dword ptr [rax]; ret; 
0x00000000004284f9: mov eax, dword ptr [rax]; test rax, rax; jne 0x284f0; ret; 
0x0000000000411f00: mov eax, dword ptr [rbp + 8]; sub eax, dword ptr [rbx + 8]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000401e7d: mov eax, dword ptr [rbp - 0x10]; mov rdi, rax; call 0x2700; leave; ret; 
0x000000000049e586: mov eax, dword ptr [rbp - 8]; xor rax, qword ptr fs:[0x28]; jne 0x9e615; leave; ret; 
0x0000000000498419: mov eax, dword ptr [rbx + 0x10]; mov qword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004983d1: mov eax, dword ptr [rbx + 0x10]; mov qword ptr [rax], rdi; pop rbx; ret; 
0x00000000004983c1: mov eax, dword ptr [rbx + 0x10]; mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000045f87a: mov eax, dword ptr [rbx]; mov qword ptr [rip + 0x8384d], rax; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040a9c9: mov eax, dword ptr [rbx]; test eax, eax; js 0xa9db; xor eax, eax; pop rbx; ret; 
0x0000000000454f84: mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; lea rax, [rdx + 6]; ret; 
0x0000000000450c34: mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x0000000000454f65: mov eax, dword ptr [rcx + 4]; mov word ptr [rdx + 4], ax; lea rax, [rdx + 5]; ret; 
0x0000000000450c25: mov eax, dword ptr [rcx + 4]; mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x0000000000454f96: mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, [rdx + 8]; ret; 
0x0000000000450c46: mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000455017: mov eax, dword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x0000000000450c87: mov eax, dword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000454fb6: mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, [rdx + 9]; ret; 
0x0000000000450c56: mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000455037: mov eax, dword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x0000000000450ca7: mov eax, dword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000454fd6: mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xa]; ret; 
0x0000000000450c66: mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000455057: mov eax, dword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x0000000000450cc7: mov eax, dword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000454ff6: mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xb]; ret; 
0x0000000000450c76: mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x0000000000454ee7: mov eax, dword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x0000000000450bb7: mov eax, dword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x00000000004304a9: mov eax, dword ptr [rcx + rax + 8]; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x000000000044ab0a: mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000045addd: mov eax, dword ptr [rcx + rax*4]; sub eax, dword ptr [rcx + r8*4]; je 0x5adc8; ret; 
0x000000000044c3e2: mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x0000000000480fef: mov eax, dword ptr [rcx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000454f40: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; lea rax, [rdx + 3]; ret; 
0x0000000000454f50: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; lea rax, [rdx + 4]; ret; 
0x0000000000450c10: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov al, byte ptr [rcx + 4]; mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x0000000000454f60: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; lea rax, [rdx + 5]; ret; 
0x0000000000450c20: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov ax, word ptr [rcx + 4]; mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x0000000000454f80: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; lea rax, [rdx + 6]; ret; 
0x0000000000450c30: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov eax, dword ptr [rcx + 3]; mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x0000000000450c00: mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; mov rax, rdi; ret; 
0x0000000000454e91: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; lea rax, [rdx + 7]; ret; 
0x0000000000454f91: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, [rdx + 8]; ret; 
0x0000000000450c41: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000454fb1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, [rdx + 9]; ret; 
0x0000000000450c51: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000454fd1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xa]; ret; 
0x0000000000450c61: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000454ff1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xb]; ret; 
0x0000000000450c71: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x0000000000455011: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x0000000000450c81: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000455031: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x0000000000450ca1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000455051: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x0000000000450cc1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000454ee1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x0000000000450bb1: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x0000000000450b61: mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x0000000000454f11: mov eax, dword ptr [rcx]; mov word ptr [rdx], ax; lea rax, [rdx + 1]; ret; 
0x0000000000454f21: mov eax, dword ptr [rcx]; mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, [rdx + 2]; ret; 
0x0000000000450bf1: mov eax, dword ptr [rcx]; mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x0000000000450be1: mov eax, dword ptr [rcx]; mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x000000000048e3c2: mov eax, dword ptr [rcx]; ret; 
0x0000000000408a80: mov eax, dword ptr [rdi + 0x10]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000428514: mov eax, dword ptr [rdi + 0x10]; sub eax, dword ptr [rsi + 0x10]; ret; 
0x000000000042853c: mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x000000000048172e: mov eax, dword ptr [rdi + 0x10]; sub rdx, qword ptr [rcx + 0x10]; sar rdx, 2; sub eax, edx; ret; 
0x0000000000481740: mov eax, dword ptr [rdi + 0x10]; sub rdx, qword ptr [rcx + 8]; sar rdx, 2; sub eax, edx; ret; 
0x0000000000408a90: mov eax, dword ptr [rdi + 0x14]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408aa0: mov eax, dword ptr [rdi + 0x18]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x000000000042686c: mov eax, dword ptr [rdi + 0x18]; punpckhqdq xmm0, xmm0; mov qword ptr [rdi + 0x18], rdx; mov qword ptr [rdi + 0x48], rax; movups xmmword ptr [rdi + 8], xmm0; ret; 
0x0000000000408ab0: mov eax, dword ptr [rdi + 0x1c]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408ac0: mov eax, dword ptr [rdi + 0x20]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408a40: mov eax, dword ptr [rdi + 0x24]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x00000000004292b5: mov eax, dword ptr [rdi + 0x28]; cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000429e03: mov eax, dword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x000000000042683f: mov eax, dword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000428885: mov eax, dword ptr [rdi + 0x68]; ret; 
0x00000000004a3935: mov eax, dword ptr [rdi + 0x90]; ret; 
0x00000000004a39a5: mov eax, dword ptr [rdi + 0x98]; ret; 
0x0000000000480d35: mov eax, dword ptr [rdi + 0xa0]; cmp qword ptr [rax + 0x30], 0; je 0x80d48; ret; 
0x00000000004a39e5: mov eax, dword ptr [rdi + 0xa0]; ret; 
0x00000000004a3a45: mov eax, dword ptr [rdi + 0xa8]; ret; 
0x00000000004a3a35: mov eax, dword ptr [rdi + 0xb0]; ret; 
0x00000000004a39f5: mov eax, dword ptr [rdi + 0xb8]; ret; 
0x00000000004a39b5: mov eax, dword ptr [rdi + 0xc0]; sar rax, 0x3f; and eax, 1; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000408a70: mov eax, dword ptr [rdi + 0xc]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x0000000000408a50: mov eax, dword ptr [rdi + 4]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x00000000004289ab: mov eax, dword ptr [rdi + 8]; cmp rax, rdx; jae 0x289d8; movzx eax, byte ptr [rax]; ret; 
0x0000000000408a60: mov eax, dword ptr [rdi + 8]; mov dword ptr [rdx], eax; xor eax, eax; ret; 
0x000000000043a754: mov eax, dword ptr [rdi - 4]; cmp ecx, eax; jne 0x3b16f; xor eax, eax; ret; 
0x000000000045896c: mov eax, dword ptr [rdi - 4]; mov ecx, dword ptr [rsi - 4]; cmp eax, ecx; jne 0x58b80; xor eax, eax; ret; 
0x000000000043a9b3: mov eax, dword ptr [rdi - 4]; mov ecx, dword ptr [rsi - 4]; cmp ecx, eax; jne 0x3b16f; xor eax, eax; ret; 
0x000000000043acb1: mov eax, dword ptr [rdi - 8]; cmp rcx, rax; jne 0x3b163; xor eax, eax; ret; 
0x000000000043a727: mov eax, dword ptr [rdi - 8]; mov rcx, qword ptr [rsi - 8]; cmp rcx, rax; jne 0x3b163; xor eax, eax; ret; 
0x0000000000429725: mov eax, dword ptr [rdi]; cmp rax, 0x2000000; jbe 0x29730; ret; 
0x0000000000429385: mov eax, dword ptr [rdi]; cmp rax, 0x408; jbe 0x29390; ret; 
0x0000000000429785: mov eax, dword ptr [rdi]; cmp rax, 0xa0; jbe 0x29790; ret; 
0x00000000004293c5: mov eax, dword ptr [rdi]; cmp rax, 0xffff; jbe 0x293d0; ret; 
0x000000000049bfd5: mov eax, dword ptr [rdi]; cmp rax, rsi; je 0x9bfe0; ret; 
0x0000000000428506: mov eax, dword ptr [rdi]; mov qword ptr [rdx], rax; ret; 
0x0000000000429755: mov eax, dword ptr [rdi]; nop; mov dword ptr [rip + 0xb9012], 1; mov dword ptr [rip + 0xb9004], eax; ret; 
0x0000000000429705: mov eax, dword ptr [rdi]; nop; mov dword ptr [rip + 0xb9062], 1; mov qword ptr [rip + 0xb902f], rax; ret; 
0x00000000004296e5: mov eax, dword ptr [rdi]; nop; mov dword ptr [rip + 0xb9082], 1; mov qword ptr [rip + 0xb9047], rax; ret; 
0x0000000000429775: mov eax, dword ptr [rdi]; nop; mov dword ptr [rip + 0xbb5b6], eax; ret; 
0x00000000004293e5: mov eax, dword ptr [rdi]; nop; mov qword ptr [rip + 0xb93b9], rax; ret; 
0x0000000000429375: mov eax, dword ptr [rdi]; nop; mov qword ptr [rip + 0xb93d9], rax; ret; 
0x0000000000429365: mov eax, dword ptr [rdi]; nop; mov qword ptr [rip + 0xb93f1], rax; ret; 
0x00000000004a5a94: mov eax, dword ptr [rdi]; test eax, eax; jne 0xa5aa0; ret; 
0x00000000004a5cd4: mov eax, dword ptr [rdi]; test eax, eax; jne 0xa5ce0; ret; 
0x0000000000422bce: mov eax, dword ptr [rdx + 0x4c]; cmp dword ptr [rdx + 0x48], eax; cmovne eax, ecx; ret; 
0x0000000000448706: mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000048f68a: mov eax, dword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x00000000004109e0: mov eax, dword ptr [rdx + rsi]; mov dword ptr [rip + 0xd38ff], eax; lea rax, [rip + 0xd38f0]; ret; 
0x00000000004991e4: mov eax, dword ptr [rip + 0x4c79e]; ret; 
0x000000000048f1a5: mov eax, dword ptr [rip + 0x52f8d]; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x562b3]; mov qword ptr [rsi], rax; ret; 
0x000000000048f1af: mov eax, dword ptr [rip + 0x562b3]; mov qword ptr [rsi], rax; ret; 
0x000000000048f13e: mov eax, dword ptr [rip + 0x5632c]; mov rax, r8; ret; 
0x000000000048f03c: mov eax, dword ptr [rip + 0x5642e]; jne 0x8f050; lea rax, [r8 + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x000000000046d205: mov eax, dword ptr [rip + 0x77c45]; ret; 
0x0000000000464ce8: mov eax, dword ptr [rip + 0x8014e]; test eax, eax; je 0x64cf8; ret; 
0x0000000000463855: mov eax, dword ptr [rip + 0x821ad]; ret; 
0x00000000004620b0: mov eax, dword ptr [rip + 0x8389e]; pop rbx; and eax, 0xffffffc7; or eax, 0x18; mov dword ptr [rip + 0x83891], eax; ret; 
0x0000000000462080: mov eax, dword ptr [rip + 0x838ce]; pop rbx; and eax, 0xffffffc7; or eax, 8; mov dword ptr [rip + 0x838c1], eax; ret; 
0x0000000000462050: mov eax, dword ptr [rip + 0x838fe]; and eax, 0xffffffc7; or eax, 0x10; mov dword ptr [rip + 0x838f2], eax; pop rbx; ret; 
0x0000000000462010: mov eax, dword ptr [rip + 0x8393e]; pop rbx; and eax, 0xfffffff8; or eax, 3; mov dword ptr [rip + 0x83931], eax; ret; 
0x0000000000461fe0: mov eax, dword ptr [rip + 0x8396e]; pop rbx; and eax, 0xfffffff8; or eax, 1; mov dword ptr [rip + 0x83961], eax; ret; 
0x0000000000461fb0: mov eax, dword ptr [rip + 0x8399e]; and eax, 0xfffffff8; or eax, 2; mov dword ptr [rip + 0x83992], eax; pop rbx; ret; 
0x0000000000461314: mov eax, dword ptr [rip + 0x846d6]; test eax, eax; je 0x61320; ret; 
0x000000000045f824: mov eax, dword ptr [rip + 0x8615e]; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x000000000045cf65: mov eax, dword ptr [rip + 0x861ed]; test rax, rax; je 0x5cf71; ret; 
0x0000000000428865: mov eax, dword ptr [rip + 0xb98f5]; ret; 
0x00000000004037d4: mov eax, dword ptr [rip + 0xde92a]; ret; 
0x0000000000403154: mov eax, dword ptr [rip + 0xdefae]; test eax, eax; js 0x3160; ret; 
0x0000000000402174: mov eax, dword ptr [rip + 0xe2156]; test eax, eax; je 0x2180; ret; 
0x00000000004a457a: mov eax, dword ptr [rsi + 0x10]; add rsp, 8; ret; 
0x00000000004077f0: mov eax, dword ptr [rsi + 0x14]; cmp dword ptr [rdi + 0x14], eax; sete al; ret; 
0x00000000004a17da: mov eax, dword ptr [rsi + 0xa8]; add rsp, 8; ret; 
0x00000000004a1839: mov eax, dword ptr [rsi + 0xb0]; add rsp, 8; ret; 
0x00000000004a17ed: mov eax, dword ptr [rsi + 0xb8]; add rsp, 8; ret; 
0x0000000000408f64: mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; pop rbp; pop r12; ret; 
0x000000000045c35f: mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000045c102: mov eax, dword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x00000000004a14b6: mov eax, dword ptr [rsp]; add rsp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x00000000004a11cd: mov eax, dword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000048fa6c: mov eax, dword ptr fs:[rax]; ret; 
0x000000000041ee9a: mov eax, eax; add qword ptr [rip + 0xc6a14], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000041e1af: mov eax, eax; add rsp, 0x118; ret; 
0x000000000040270e: mov eax, eax; mov eax, 0xffffffea; test r8d, r8d; je 0x2720; pop rbp; ret; 
0x0000000000402ea0: mov eax, eax; mov eax, 0xffffffea; test r8d, r8d; je 0x2eb0; pop rbp; ret; 
0x000000000048e522: mov eax, eax; neg rax; test cl, cl; cmove r8, rax; mov rax, r8; ret; 
0x000000000042e89a: mov eax, eax; pop r12; pop r13; ret; 
0x0000000000429b5e: mov eax, eax; pop r12; ret; 
0x000000000042e907: mov eax, eax; pop r13; ret; 
0x0000000000420ae1: mov eax, eax; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000420d08: mov eax, eax; pop rbp; pop r12; ret; 
0x000000000042d9b4: mov eax, eax; pop rbp; ret; 
0x000000000042fea9: mov eax, eax; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000420d5e: mov eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x00000000004050ef: mov eax, eax; pop rbx; pop rbp; ret; 
0x000000000041f0ee: mov eax, eax; pop rbx; ret; 
0x000000000041ef01: mov eax, eax; ret; 
0x0000000000484604: mov eax, eax; shr rax, 2; vzeroupper; ret; 
0x0000000000483491: mov eax, eax; vzeroupper; ret; 
0x0000000000405c5c: mov eax, ebp; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000499556: mov eax, ebp; pop r12; pop r13; ret; 
0x000000000042071e: mov eax, ebp; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000045d749: mov eax, ebp; pop rbp; pop r12; pop r13; ret; 
0x000000000045d734: mov eax, ebp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000042472e: mov eax, ebp; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a3b53: mov eax, ebp; pop rbx; pop rbp; ret; 
0x000000000049e7b3: mov eax, ebx; adc rax, rdx; pop rbp; pop rbx; ret; 
0x0000000000481919: mov eax, ebx; and eax, 0xc; cmp eax, 4; je 0x81924; ret; 
0x0000000000425089: mov eax, ebx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000404ed0: mov eax, ebx; pop rbx; pop rbp; ret; 
0x0000000000404c47: mov eax, ebx; pop rbx; ret; 
0x000000000049e67b: mov eax, ecx; adc eax, eax; ret; 
0x0000000000470143: mov eax, ecx; add rsp, 0x148; ret; 
0x00000000004850f0: mov eax, ecx; add rsp, 0x38; ret; 
0x000000000045a89f: mov eax, ecx; and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x00000000004817b1: mov eax, ecx; lea rdx, [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x000000000045d004: mov eax, ecx; mov r9, qword ptr [rsp + 8]; syscall; cmp rax, -0xfff; jae 0x5d016; ret; 
0x0000000000415d96: mov eax, ecx; pop r12; ret; 
0x0000000000478678: mov eax, ecx; pop r14; ret; 
0x00000000004785c7: mov eax, ecx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000415d68: mov eax, ecx; pop rbx; pop rbp; pop r12; ret; 
0x000000000045a7b8: mov eax, ecx; pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x000000000045a803: mov eax, ecx; pop rbx; shr eax, 6; and eax, 0x3fffc00; ret; 
0x0000000000490db3: mov eax, ecx; sub eax, r8d; ret; 
0x0000000000492544: mov eax, edi; mov rdi, rdx; cmp rax, 9; ja 0x92520; mov rax, r8; ret; 
0x0000000000429b59: mov eax, edi; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x0000000000428895: mov eax, edi; ret; 
0x00000000004527df: mov eax, edi; sub r8, 0x10; lea rcx, [rdx + 0x10]; jne 0x52d30; ret; 
0x0000000000452add: mov eax, edi; sub r8, 0xa; lea rcx, [rdx + 0xa]; jne 0x52d30; ret; 
0x0000000000452afd: mov eax, edi; sub r8, 0xb; lea rcx, [rdx + 0xb]; jne 0x52d30; ret; 
0x0000000000452b1d: mov eax, edi; sub r8, 0xc; lea rcx, [rdx + 0xc]; jne 0x52d30; ret; 
0x0000000000452b3f: mov eax, edi; sub r8, 0xd; lea rcx, [rdx + 0xd]; jne 0x52d30; ret; 
0x0000000000452b5f: mov eax, edi; sub r8, 0xe; lea rcx, [rdx + 0xe]; jne 0x52d30; ret; 
0x0000000000452b7f: mov eax, edi; sub r8, 0xf; lea rcx, [rdx + 0xf]; jne 0x52d30; ret; 
0x00000000004529d5: mov eax, edi; sub r8, 1; lea rcx, [rdx + 1]; jne 0x52d30; ret; 
0x00000000004529f7: mov eax, edi; sub r8, 2; lea rcx, [rdx + 2]; jne 0x52d30; ret; 
0x0000000000452a1d: mov eax, edi; sub r8, 3; lea rcx, [rdx + 3]; jne 0x52d30; ret; 
0x0000000000452a35: mov eax, edi; sub r8, 4; lea rcx, [rdx + 4]; jne 0x52d30; ret; 
0x0000000000452a5b: mov eax, edi; sub r8, 5; lea rcx, [rdx + 5]; jne 0x52d30; ret; 
0x0000000000452a7d: mov eax, edi; sub r8, 6; lea rcx, [rdx + 6]; jne 0x52d30; ret; 
0x0000000000452a9b: mov eax, edi; sub r8, 7; lea rcx, [rdx + 7]; jne 0x52d30; ret; 
0x0000000000452777: mov eax, edi; sub r8, 8; lea rcx, [rdx + 8]; jne 0x52d30; ret; 
0x0000000000452abd: mov eax, edi; sub r8, 9; lea rcx, [rdx + 9]; jne 0x52d30; ret; 
0x000000000044f341: mov eax, edi; vzeroupper; ret; 
0x000000000045a7d6: mov eax, edx; and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000000491a85: mov eax, edx; mov rcx, qword ptr [rsp + 0x48]; xor rcx, qword ptr fs:[0x28]; jne 0x91ac4; add rsp, 0x58; ret; 
0x0000000000491f15: mov eax, edx; mov rcx, qword ptr [rsp + 0x48]; xor rcx, qword ptr fs:[0x28]; jne 0x91f54; add rsp, 0x58; ret; 
0x0000000000491bf7: mov eax, edx; mov rcx, qword ptr [rsp + 0x58]; xor rcx, qword ptr fs:[0x28]; jne 0x91c44; add rsp, 0x68; ret; 
0x000000000048302c: mov eax, edx; mov rdi, rsi; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x000000000045a861: mov eax, edx; pop rbx; ret; 
0x000000000044f529: mov eax, edx; ret; 
0x000000000045a8b4: mov eax, edx; xor edx, edx; and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x00000000004025d4: mov eax, esp; pop r12; pop r13; ret; 
0x000000000040324f: mov eax, esp; pop r12; ret; 
0x0000000000481325: mov eax, esp; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000402eef: mov eax, esp; pop rbp; pop r12; pop r13; ret; 
0x0000000000402483: mov eax, esp; pop rbp; pop r12; ret; 
0x0000000000407c8c: mov eax, esp; pop rbx; pop r12; ret; 
0x000000000040b1c3: mov eax, esp; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000407a18: mov eax, esp; pop rbx; pop rbp; pop r12; ret; 
0x000000000049eda9: mov eax, esp; sar rax, 3; pop rbx; pop rbp; pop r12; ret; 
0x000000000040b4c3: mov eax, fs; or dword ptr [rax], eax; ret; 
0x0000000000481918: mov eax, r11d; and eax, 0xc; cmp eax, 4; je 0x81924; ret; 
0x00000000004025d3: mov eax, r12d; pop r12; pop r13; ret; 
0x000000000040324e: mov eax, r12d; pop r12; ret; 
0x0000000000402eee: mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x0000000000402482: mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000004927a4: mov eax, r12d; pop rbx; pop r12; ret; 
0x000000000040b1c2: mov eax, r12d; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000407a17: mov eax, r12d; pop rbx; pop rbp; pop r12; ret; 
0x000000000041e1ae: mov eax, r8d; add rsp, 0x118; ret; 
0x0000000000420ae0: mov eax, r8d; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000420d07: mov eax, r8d; pop rbp; pop r12; ret; 
0x00000000004717bf: mov eax, r8d; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000420d5d: mov eax, r8d; pop rbx; pop rbp; pop r12; ret; 
0x00000000004050ee: mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000041f0ed: mov eax, r8d; pop rbx; ret; 
0x0000000000495895: mov eax, r8d; ret; 
0x0000000000470142: mov eax, r9d; add rsp, 0x148; ret; 
0x00000000004850ef: mov eax, r9d; add rsp, 0x38; ret; 
0x0000000000497c27: mov ebp, 0x1b85b; add byte ptr [rax], al; pop rbp; pop r12; pop r13; ret; 
0x000000000043a944: mov ebp, 0x4e6f0ff3; mov ebp, 0xf66bdb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043a949: mov ebp, 0xf66bdb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000482c4c: mov ebp, 0xf80148c0; ret; 
0x0000000000482edc: mov ebp, 0xf80148c6; ret; 
0x000000000047c194: mov ebp, 0xfffffb18; add byte ptr [rcx - 0x77], al; ret 0x1d74; 
0x00000000004a3cf8: mov ebp, dword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x00000000004319e1: mov ebx, 0x4800027b; cmove eax, edx; ret; 
0x0000000000415ea4: mov ebx, 0x850f5f3c; test byte ptr [rax], 0; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004746a0: mov ebx, 0x8b480000; xchg eax, ebp; clc; idiv bh; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x00000000004818b8: mov ebx, 0xafb8341; je 0x818c0; ret; 
0x000000000043aac9: mov ebx, 0xf66bbb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043cc41: mov ebx, dword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cc25: mov ebx, dword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004718c2: mov ecx, 0x1000736; xor eax, eax; add rsp, 8; ret; 
0x0000000000431c43: mov ecx, 0x4800027c; cmove eax, edx; ret; 
0x0000000000477b5c: mov ecx, 0x89000002; ret 0xc083; 
0x0000000000415805: mov ecx, 0x8948fffe; ret 0xf748; 
0x00000000004736dc: mov ecx, 0x8bfffff1; test dword ptr [rax], edx; idiv edi; inc dword ptr [rcx]; ret; 
0x0000000000407fa6: mov ecx, 0x8c48348; pop rbx; pop rbp; ret; 
0x000000000043abc9: mov ecx, 0xf66b9b2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000045be35: mov ecx, 0xffffffc0; neg eax; mov dword ptr fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000046fd84: mov ecx, 0xffffffe8; mov qword ptr fs:[rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x00000000004806f6: mov ecx, dword ptr [rax + 0x10]; mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x0000000000445f03: mov ecx, dword ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x0000000000445ef0: mov ecx, dword ptr [rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x0000000000445ede: mov ecx, dword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x00000000004a3973: mov ecx, dword ptr [rdi + rsi*8]; cmp al, 8; jne 0x175a; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x00000000004a4355: mov ecx, dword ptr [rdx + 8]; mov eax, 1; cmp qword ptr [rsi + 8], rcx; ja 0xa4365; sbb eax, eax; ret; 
0x0000000000448703: mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000456214: mov ecx, dword ptr [rsi + 0x10]; mov dl, byte ptr [rsi + 0x14]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dl; ret; 
0x0000000000456bd4: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x0000000000456bf4: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x0000000000455524: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000455514: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000456c55: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000456c75: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x00000000004555a5: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000455585: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000456b95: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004554e5: mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000456cb8: mov ecx, dword ptr [rsi + 0x17]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x00000000004555e8: mov ecx, dword ptr [rsi + 0x17]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000456cd8: mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x0000000000455608: mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000456c99: mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004555c9: mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000456c15: mov ecx, dword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x0000000000455545: mov ecx, dword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000456bb4: mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x0000000000455504: mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000456c35: mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000455565: mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x00000000004570a4: mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e984: mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x0000000000459613: mov ecx, dword ptr [rsi + rdx - 4]; mov esi, dword ptr [rsi]; mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x00000000004570c4: mov ecx, dword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e994: mov ecx, dword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x0000000000459603: mov ecx, dword ptr [rsi + rdx - 8]; mov rsi, qword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x000000000043cfe5: mov ecx, dword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d001: mov ecx, dword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d1c5: mov ecx, dword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d1e1: mov ecx, dword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d3a5: mov ecx, dword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d3c1: mov ecx, dword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d595: mov ecx, dword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d5b1: mov ecx, dword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d795: mov ecx, dword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d7b1: mov ecx, dword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d995: mov ecx, dword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d9b1: mov ecx, dword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d1f5: mov ecx, dword ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x000000000045896f: mov ecx, dword ptr [rsi - 4]; cmp eax, ecx; jne 0x58b80; xor eax, eax; ret; 
0x000000000043a9b6: mov ecx, dword ptr [rsi - 4]; cmp ecx, eax; jne 0x3b16f; xor eax, eax; ret; 
0x000000000043d5d3: mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d7d3: mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d9d3: mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043a751: mov ecx, dword ptr [rsi - 4]; mov eax, dword ptr [rdi - 4]; cmp ecx, eax; jne 0x3b16f; xor eax, eax; ret; 
0x00000000004426c4: mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000442644: mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004425c4: mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000442744: mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043a72b: mov ecx, dword ptr [rsi - 8]; cmp rcx, rax; jne 0x3b163; xor eax, eax; ret; 
0x0000000000442535: mov ecx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004424a5: mov ecx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000442415: mov ecx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043acad: mov ecx, dword ptr [rsi - 8]; mov rax, qword ptr [rdi - 8]; cmp rcx, rax; jne 0x3b163; xor eax, eax; ret; 
0x000000000043ce05: mov ecx, dword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043ce21: mov ecx, dword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000456a50: mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x0000000000455410: mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; ret; 
0x0000000000456aa1: mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x0000000000455451: mov ecx, dword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x00000000004560e1: mov ecx, dword ptr [rsi]; mov dl, byte ptr [rsi + 2]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dl; ret; 
0x0000000000456100: mov ecx, dword ptr [rsi]; mov dl, byte ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov byte ptr [rdi + 4], dl; ret; 
0x0000000000456141: mov ecx, dword ptr [rsi]; mov dl, byte ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov byte ptr [rdi + 8], dl; ret; 
0x0000000000443073: mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000443003: mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000442f93: mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x000000000044e980: mov ecx, dword ptr [rsi]; mov dword ptr [rdi], ecx; mov ecx, dword ptr [rsi + rdx - 3]; mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x0000000000456a60: mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; lea rax, [rdi + 5]; ret; 
0x0000000000455420: mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000456ab1: mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x0000000000455461: mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000456a80: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; lea rax, [rdi + 6]; ret; 
0x0000000000455430: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x0000000000456ad1: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xa]; ret; 
0x0000000000455471: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x0000000000456af1: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; lea rax, [rdi + 0xb]; ret; 
0x0000000000455481: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x000000000044f020: mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + r8 - 4]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + r8 - 4], edx; vzeroupper; ret; 
0x0000000000442eb5: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442e45: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442dd5: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442d65: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442cf5: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442c85: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442c15: mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000044e991: mov ecx, dword ptr [rsi]; mov r9, qword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x0000000000456b11: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000455491: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000456b31: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x00000000004554a1: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000456b51: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004554b1: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x000000000044f041: mov ecx, dword ptr [rsi]; mov rdx, qword ptr [rsi + r8 - 8]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + r8 - 8], rdx; vzeroupper; ret; 
0x0000000000443155: mov ecx, dword ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x0000000000456a31: mov ecx, dword ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x00000000004553f1: mov ecx, dword ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x0000000000491a88: mov ecx, dword ptr [rsp + 0x48]; xor rcx, qword ptr fs:[0x28]; jne 0x91ac4; add rsp, 0x58; ret; 
0x0000000000491f18: mov ecx, dword ptr [rsp + 0x48]; xor rcx, qword ptr fs:[0x28]; jne 0x91f54; add rsp, 0x58; ret; 
0x0000000000491bfa: mov ecx, dword ptr [rsp + 0x58]; xor rcx, qword ptr fs:[0x28]; jne 0x91c44; add rsp, 0x68; ret; 
0x000000000045d007: mov ecx, dword ptr [rsp + 8]; syscall; cmp rax, -0xfff; jae 0x5d016; ret; 
0x0000000000445eef: mov ecx, dword ptr ss:[rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x0000000000485250: mov ecx, eax; and ecx, dword ptr [rsi + 0x10]; lea rcx, [rsi + rcx*4]; add eax, dword ptr [rcx + rdx]; ret; 
0x000000000048e3bb: mov ecx, eax; cmp rcx, rdx; jne 0x8e398; mov eax, dword ptr [rcx]; ret; 
0x000000000045addb: mov ecx, eax; mov eax, dword ptr [rcx + rax*4]; sub eax, dword ptr [rcx + r8*4]; je 0x5adc8; ret; 
0x000000000045a7d4: mov ecx, eax; mov eax, edx; and ecx, 0x3fc00; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000000478671: mov ecx, eax; pop r12; pop r13; mov rax, r9; pop r14; ret; 
0x0000000000497eb3: mov ecx, edx; add al, 0; mov qword ptr [rip + 0x4d16a], rax; ret; 
0x00000000004285e6: mov ecx, edx; add rax, rcx; mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004285aa: mov ecx, edx; add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000045a2ae: mov ecx, edx; movzx eax, sil; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x00000000004595e6: mov ecx, edx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000049c91f: mov ecx, esi; sub rcx, qword ptr [rax + 0x10]; cmp rcx, qword ptr [rax + 0x28]; jae 0x9c910; mov eax, 1; ret; 
0x0000000000431921: mov edi, 0x1000b34; je 0x318e1; ret; 
0x0000000000401d50: mov edi, 0x4d08d0; call 0xa5cc0; mov byte ptr [rip + 0xe251f], 1; pop rbp; ret; 
0x000000000043a779: mov edi, 0xf66bfb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004a3d00: mov edi, dword ptr [rbp - 8]; leave; ret; 
0x000000000049ec55: mov edi, dword ptr [rdi]; call 0xa0a40; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000049eb91: mov edi, dword ptr [rdi]; call 0xa0d70; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x0000000000402034: mov edi, eax; call 0x1e8a; mov eax, 0; leave; ret; 
0x0000000000401e81: mov edi, eax; call 0x2700; leave; ret; 
0x00000000004924c3: mov edi, eax; cmp rdx, rcx; jae 0x924ac; mov rax, r8; ret; 
0x000000000045c198: mov edi, eax; mov qword ptr [rsp + 8], rax; call 0x818f0; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x00000000004a11c1: mov edi, eax; mov qword ptr [rsp], rax; call 0xa15f0; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000049194f: mov edi, edi; dec dword ptr [rax - 0x77]; adc byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x0000000000492547: mov edi, edx; cmp rax, 9; ja 0x92520; mov rax, r8; ret; 
0x000000000048302f: mov edi, esi; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x000000000045c197: mov edi, r8d; mov qword ptr [rsp + 8], rax; call 0x818f0; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x00000000004a11c0: mov edi, r8d; mov qword ptr [rsp], rax; call 0xa15f0; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x0000000000430e3d: mov edx, 0; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x000000000048f68d: mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000044db0a: mov edx, 0; lea rax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000045a7a6: mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x000000000042e361: mov edx, 0x1000b69; pop rbx; ret; 
0x0000000000474739: mov edx, 0x39480000; ret; 
0x000000000045f82a: mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x000000000049e992: mov edx, 0x894830e8; or byte ptr [r8 + 2], r15b; ret; 
0x0000000000425683: mov edx, 0x8948fffd; ret; 
0x00000000004287fb: mov edx, 0x90fffffe; endbr64; mov rax, -1; ret; 
0x000000000041e167: mov edx, 0xf000000; add eax, 0x8944c689; ret 0xeab8; 
0x000000000043ab49: mov edx, 0xf66bab2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000045bed9: mov edx, 0xffffffc0; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000045c111: mov edx, 0xffffffc0; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000040a875: mov edx, 0xffffffdf; cmovne eax, edx; ret; 
0x000000000046fe63: mov edx, 0xffffffe0; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000046fd8f: mov edx, 0xffffffe0; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000464f8b: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000000497e5a: mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x00000000004089fa: mov edx, dword ptr [rax]; mov rdx, qword ptr [rdx]; cmp dword ptr [rdx], esi; jne 0x89f0; mov eax, 0xffffffef; ret; 
0x000000000049843d: mov edx, dword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x000000000044c3df: mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000044ab0d: mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000045faba: mov edx, dword ptr [rcx + rdx]; lea rcx, [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000048523e: mov edx, dword ptr [rcx + rdx]; test edx, edx; jne 0x85250; ret; 
0x00000000004983c5: mov edx, dword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000498424: mov edx, dword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000420644: mov edx, dword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x00000000004077cd: mov edx, dword ptr [rdi]; lea edx, [rax + rdx*2]; xor eax, eax; cmp ecx, edx; je 0x77e0; ret; 
0x0000000000408d0e: mov edx, dword ptr [rdx + 0xc]; mov dword ptr [rbx + 0x28], edx; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004089fd: mov edx, dword ptr [rdx]; cmp dword ptr [rdx], esi; jne 0x89f0; mov eax, 0xffffffef; ret; 
0x000000000042680d: mov edx, dword ptr [rdx]; cmp rax, rcx; cmovg rax, rcx; test rdx, rdx; jne 0x26808; ret; 
0x00000000004806b5: mov edx, dword ptr [rdx]; cmp rax, rcx; cmovg rax, rcx; test rdx, rdx; jne 0x806b0; ret; 
0x00000000004a36f4: mov edx, dword ptr [rdx]; mov qword ptr [rbx + 0x98], rdx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000049901f: mov edx, dword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000456295: mov edx, dword ptr [rsi + 0x10]; mov cl, byte ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov byte ptr [rdi + 0x18], cl; ret; 
0x00000000004555e5: mov edx, dword ptr [rsi + 0x10]; mov ecx, dword ptr [rsi + 0x17]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000455605: mov edx, dword ptr [rsi + 0x10]; mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000443151: mov edx, dword ptr [rsi + 1]; mov cx, word ptr [rsi]; mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x0000000000443070: mov edx, dword ptr [rsi + 1]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000442eb1: mov edx, dword ptr [rsi + 1]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000443000: mov edx, dword ptr [rsi + 2]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000442e41: mov edx, dword ptr [rsi + 2]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000456a82: mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; lea rax, [rdi + 6]; ret; 
0x0000000000455432: mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x0000000000442f90: mov edx, dword ptr [rsi + 3]; mov ecx, dword ptr [rsi]; mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000442dd1: mov edx, dword ptr [rsi + 3]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000456a63: mov edx, dword ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; lea rax, [rdi + 5]; ret; 
0x0000000000455423: mov edx, dword ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000442d61: mov edx, dword ptr [rsi + 4]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000456b14: mov edx, dword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000455494: mov edx, dword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000442cf1: mov edx, dword ptr [rsi + 5]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000456b34: mov edx, dword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x00000000004554a4: mov edx, dword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000442c81: mov edx, dword ptr [rsi + 6]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000456ad3: mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xa]; ret; 
0x0000000000455473: mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x0000000000456b54: mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004554b4: mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000442c11: mov edx, dword ptr [rsi + 7]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000456af3: mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; lea rax, [rdi + 0xb]; ret; 
0x0000000000455483: mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x0000000000456ab4: mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x0000000000455464: mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000044f022: mov edx, dword ptr [rsi + r8 - 4]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + r8 - 4], edx; vzeroupper; ret; 
0x000000000044f023: mov edx, dword ptr [rsi + rax - 4]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + r8 - 4], edx; vzeroupper; ret; 
0x000000000044f044: mov edx, dword ptr [rsi + rax - 8]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + r8 - 8], rdx; vzeroupper; ret; 
0x00000000004426c1: mov edx, dword ptr [rsi - 0xa]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000442641: mov edx, dword ptr [rsi - 0xb]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004425c1: mov edx, dword ptr [rsi - 0xc]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000442531: mov edx, dword ptr [rsi - 0xd]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004424a1: mov edx, dword ptr [rsi - 0xe]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000442411: mov edx, dword ptr [rsi - 0xf]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043d011: mov edx, dword ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x000000000043d1f1: mov edx, dword ptr [rsi - 3]; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x000000000043d3d0: mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043ce08: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cfe8: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d1c8: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d3a8: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d004: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d1e4: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d3c4: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043ce24: mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d5d0: mov edx, dword ptr [rsi - 5]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d7d0: mov edx, dword ptr [rsi - 6]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d9d0: mov edx, dword ptr [rsi - 7]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043cc45: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d599: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d799: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d999: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cc29: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d5b5: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d7b5: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d9b5: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cc61: mov edx, dword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000442741: mov edx, dword ptr [rsi - 9]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000456a40: mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; lea rax, [rdi + 3]; ret; 
0x0000000000457090: mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; lea rax, [rdi + 3]; vzeroupper; ret; 
0x00000000004430e0: mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x0000000000455c90: mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; sub r8, 4; lea rdi, [rdi + 4]; jne 0x564f0; ret; 
0x000000000044e970: mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; vzeroupper; ret; 
0x0000000000456a91: mov edx, dword ptr [rsi]; mov qword ptr [rdi], rdx; lea rax, [rdi + 7]; ret; 
0x0000000000442f21: mov edx, dword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x0000000000455d11: mov edx, dword ptr [rsi]; mov qword ptr [rdi], rdx; sub r8, 8; lea rdi, [rdi + 8]; jne 0x564f0; ret; 
0x0000000000456a21: mov edx, dword ptr [rsi]; mov word ptr [rdi], dx; lea rax, [rdi + 1]; ret; 
0x00000000004553e1: mov edx, dword ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000455c51: mov edx, dword ptr [rsi]; mov word ptr [rdi], dx; sub r8, 2; lea rdi, [rdi + 2]; jne 0x564f0; ret; 
0x0000000000430493: mov edx, eax; je 0x304c8; test rsi, rsi; je 0x304a8; lea rax, [rax - 0x10]; ret; 
0x00000000004284f6: mov edx, eax; mov rax, qword ptr [rax]; test rax, rax; jne 0x284f0; ret; 
0x000000000040b60d: mov edx, eax; or edx, 0x40000000; test eax, eax; cmovns eax, edx; add rsp, 8; ret; 
0x0000000000407763: mov edx, eax; shr edx, 0x10; xor eax, edx; ret; 
0x0000000000498fa5: mov edx, ecx; mov eax, 0x11; syscall; cmp rax, -0x1000; ja 0x98fc0; ret; 
0x000000000045f8a5: mov edx, ecx; mov eax, 0x19; syscall; cmp rax, -0xfff; jae 0x5f8b7; ret; 
0x000000000045f8d5: mov edx, ecx; mov eax, 0x9d; syscall; cmp rax, -0xfff; jae 0x5f8e7; ret; 
0x00000000004924c0: mov edx, edi; mov rdi, rax; cmp rdx, rcx; jae 0x924ac; mov rax, r8; ret; 
0x000000000045a2b5: mov edx, edi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000485258: mov es, word ptr [rbx]; add al, 0x11; ret; 
0x0000000000430f6e: mov es, word ptr [rcx - 0x72b7fffe]; add eax, 0x280d7; cmovne rax, rdx; ret; 
0x00000000004319d2: mov esi, 0x2000b33; lea rdx, [rip + 0x27b02]; lea rax, [rip + 0x27bbb]; cmove rax, rdx; ret; 
0x0000000000431b1e: mov esi, 0x48000281; lea eax, [rip + 0x28207]; cmove rax, rdx; ret; 
0x0000000000426183: mov esi, 0x81; mov eax, 0xca; lea rdi, [rip + 0xbeb1c]; syscall; ret; 
0x0000000000497e5f: mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x0000000000464b2a: mov esi, 0x83480142; ret 0xf01; 
0x000000000041f232: mov esi, 0x83480143; ret; 
0x00000000004038d7: mov esi, 0xc0502100; call 0x5cf30; add rsp, 8; sar eax, 0x1f; and eax, 0xffffff83; ret; 
0x000000000043a849: mov esi, 0xf66beb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000431bc6: mov esi, 0xf7000b31; ret 0; 
0x00000000004a3cfc: mov esi, dword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000049ec51: mov esi, dword ptr [rdi + 8]; mov rdi, qword ptr [rdi]; call 0xa0a40; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000049eb8d: mov esi, dword ptr [rdi + 8]; mov rdi, qword ptr [rdi]; call 0xa0d70; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x0000000000445f00: mov esi, dword ptr [rsi]; mov cx, word ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x0000000000459617: mov esi, dword ptr [rsi]; mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x0000000000445eee: mov esi, dword ptr [rsi]; mov ecx, dword ptr [rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x0000000000459608: mov esi, dword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x0000000000445edb: mov esi, dword ptr [rsi]; mov rcx, qword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000046a2eb: mov esp, 0x24448b48; or byte ptr [rax - 0x77], cl; fimul dword ptr [rax - 0x75]; add byte ptr [rax + 0x29], cl; ret 0x8348; 
0x00000000004391f1: mov esp, 0x448d48c0; cmp al, dh; ret; 
0x0000000000439221: mov esp, 0x448d48c0; cmp byte ptr [rax], ah; ret; 
0x0000000000439211: mov esp, 0x448d48c0; cmp byte ptr [rax], dl; ret; 
0x00000000004348ee: mov esp, 0x44b60ff9; cmp byte ptr [rax], ah; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000044e0b2: mov esp, 0x48d231c0; lea eax, [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044e0d2: mov esp, 0x48d231c0; lea eax, [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044e110: mov esp, 0x48d231c0; lea eax, [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044e092: mov esp, 0x48d231c0; lea eax, [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000043aa44: mov esp, 0x4e6f0ff3; mov esp, 0xf66bcb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004222a9: mov esp, 0x8c48348; mov eax, ebx; pop rbx; pop rbp; ret; 
0x00000000004117ff: mov esp, 0x90005; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004572f0: mov esp, 0xa8000000; jne 0x573c0; lea rax, [rdi + 7]; ret; 
0x000000000044db08: mov esp, 0xbac0; add byte ptr [rax], al; lea rax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x00000000004843d2: mov esp, 0xc08348c0; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e602: mov esp, 0xc08348c0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439342: mov esp, 0xc08348c0; add rax, rdi; vzeroupper; ret; 
0x000000000044e5e2: mov esp, 0xc08348c0; and byte ptr [rax + 1], cl; clc; sub rax, rdx; vzeroupper; ret; 
0x0000000000439332: mov esp, 0xc08348c0; and byte ptr [rax + 1], cl; clc; vzeroupper; ret; 
0x000000000048266a: mov esp, 0xc22948c0; jbe 0x82910; add rax, rdi; add rax, rcx; ret; 
0x00000000004828d1: mov esp, 0xc22948c0; jbe 0x82910; add rax, rdi; ret; 
0x00000000004828e1: mov esp, 0xc22948c0; jbe 0x82910; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004828f1: mov esp, 0xc22948c0; jbe 0x82910; lea rax, [rdi + rax + 0x20]; ret; 
0x0000000000482901: mov esp, 0xc22948c0; jbe 0x82910; lea rax, [rdi + rax + 0x30]; ret; 
0x00000000004989ca: mov esp, 0xc22948c0; jbe 0x98c70; add rax, rdi; add rax, rcx; ret; 
0x0000000000498c31: mov esp, 0xc22948c0; jbe 0x98c70; add rax, rdi; ret; 
0x0000000000498c41: mov esp, 0xc22948c0; jbe 0x98c70; lea rax, [rdi + rax + 0x10]; ret; 
0x0000000000498c51: mov esp, 0xc22948c0; jbe 0x98c70; lea rax, [rdi + rax + 0x20]; ret; 
0x0000000000498c61: mov esp, 0xc22948c0; jbe 0x98c70; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000482b22: mov esp, 0xc23948c0; jbe 0x82b80; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000482b42: mov esp, 0xc23948c0; jbe 0x82b80; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000482b62: mov esp, 0xc23948c0; jbe 0x82b80; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000000482b12: mov esp, 0xc23948c0; jbe 0x82b80; add rax, rdi; vzeroupper; ret; 
0x0000000000498e82: mov esp, 0xc23948c0; jbe 0x98ee0; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000498ea2: mov esp, 0xc23948c0; jbe 0x98ee0; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000498ec2: mov esp, 0xc23948c0; jbe 0x98ee0; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000000498e72: mov esp, 0xc23948c0; jbe 0x98ee0; add rax, rdi; vzeroupper; ret; 
0x00000000004834d2: mov esp, 0xc63948c0; jbe 0x83550; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000044e1a5: mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x000000000044e4b3: mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x0000000000483f38: mov esp, 0xd00148d2; sub rax, rdi; shr rax, 2; ret; 
0x0000000000436382: mov esp, 0xd32949d2; jbe 0x36394; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000437af2: mov esp, 0xd32949d2; jbe 0x37b04; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000438ad2: mov esp, 0xd32949d2; jbe 0x38ae4; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000043aa49: mov esp, 0xf66bcb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043908b: mov esp, 0xf80148c0; add rax, rcx; ret; 
0x00000000004842d7: mov esp, 0xf80148c0; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e517: mov esp, 0xf80148c0; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000439287: mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x0000000000439201: mov esp, 0xf80148c0; ret; 
0x0000000000484392: mov esp, 0xf80148c0; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e5d2: mov esp, 0xf80148c0; sub rax, rdx; vzeroupper; ret; 
0x0000000000439322: mov esp, 0xf80148c0; vzeroupper; ret; 
0x0000000000402479: mov esp, 0xffffffea; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000004025cd: mov esp, 0xffffffea; pop rbp; mov eax, r12d; pop r12; pop r13; ret; 
0x000000000040a989: mov esp, 0xfffffff2; pop rbx; pop rbp; mov eax, r12d; pop r12; ret; 
0x000000000045ced7: mov esp, 0xffffffff; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x00000000004a3cf4: mov esp, dword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x0000000000409013: mov qword ptr [r12 + 0x30], rax; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x000000000048f260: mov qword ptr [r12 + 8], rax; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x00000000004824e1: mov qword ptr [r12], r14; pop r12; pop r13; pop r14; ret; 
0x0000000000404e46: mov qword ptr [r12], rax; add rsp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x000000000049e8dd: mov qword ptr [r8], rax; mov eax, 0xffffc002; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000049e8fa: mov qword ptr [r8], rax; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x0000000000445ee4: mov qword ptr [r9 - 8], rcx; ret; 
0x00000000004a16c0: mov qword ptr [r9], r8; add rsp, 8; ret; 
0x0000000000404987: mov qword ptr [rax + 0x10], -1; mov qword ptr [rax + 0x18], -1; add rsp, 8; ret; 
0x000000000048073a: mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 0x40], rdx; movups xmmword ptr [rax], xmm0; ret; 
0x000000000045fac4: mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x00000000004817ac: mov qword ptr [rax + 0x10], rcx; mov r8, rcx; lea rdx, [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x00000000004817e8: mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x00000000004806fc: mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000040498f: mov qword ptr [rax + 0x18], -1; add rsp, 8; ret; 
0x0000000000480ecb: mov qword ptr [rax + 0x18], rdx; xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x000000000045fb7a: mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x0000000000429e06: mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x000000000045fb88: mov qword ptr [rax + 0x20], rsi; ret; 
0x0000000000480ec7: mov qword ptr [rax + 0x28], rdx; mov qword ptr [rax + 0x18], rdx; xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x0000000000404ec7: mov qword ptr [rax + 0x30], rdx; add rsp, 0x18; mov rax, rbx; pop rbx; pop rbp; ret; 
0x0000000000405c57: mov qword ptr [rax + 0x30], rdx; mov rax, rbp; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000480700: mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000048073e: mov qword ptr [rax + 0x40], rdx; movups xmmword ptr [rax], xmm0; ret; 
0x00000000004817ec: mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000481551: mov qword ptr [rax + 0x50], 0; movups xmmword ptr [rax + 0x40], xmm0; pop rbx; ret; 
0x00000000004277d4: mov qword ptr [rax + 8], 0; ret; 
0x00000000004806f1: mov qword ptr [rax + 8], rcx; mov rcx, qword ptr [rax + 0x10]; mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000045fac8: mov qword ptr [rax + 8], rdx; ret; 
0x00000000004277cd: mov qword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x000000000049841c: mov qword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004983d4: mov qword ptr [rax], rdi; pop rbx; ret; 
0x0000000000498340: mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000480fec: mov qword ptr [rax], rdx; mov eax, dword ptr [rcx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004806f9: mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x00000000004983c8: mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004817b7: mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000407ea6: mov qword ptr [rbp + 0x18], rbx; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004a3b47: mov qword ptr [rbp + 8], rax; add rsp, 0x278; mov rax, rbp; pop rbx; pop rbp; ret; 
0x0000000000426cb4: mov qword ptr [rbp + 8], rax; movzx eax, byte ptr [rdx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004816d9: mov qword ptr [rbp], rax; mov qword ptr [rbx + 0x60], rbp; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000428413: mov qword ptr [rbp], rax; mov qword ptr [rbx + 0x60], rbp; pop rbx; pop rbp; pop r12; ret; 
0x0000000000481d7d: mov qword ptr [rbp], rax; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000490cd5: mov qword ptr [rbx + 0x10], 0; movups xmmword ptr [rbx], xmm0; pop rbx; ret; 
0x000000000046da36: mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x0000000000491911: mov qword ptr [rbx + 0x10], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000000491846: mov qword ptr [rbx + 0x18], rax; pop rax; pop rdx; pop rbx; ret; 
0x000000000049eb98: mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x000000000047f4e0: mov qword ptr [rbx + 0x18], rdi; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x000000000049ec5c: mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x00000000004268f4: mov qword ptr [rbx + 0x20], rax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000042695c: mov qword ptr [rbx + 0x58], 0; movups xmmword ptr [rbx + 0x48], xmm0; pop rbx; ret; 
0x00000000004816dd: mov qword ptr [rbx + 0x60], rbp; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000428417: mov qword ptr [rbx + 0x60], rbp; pop rbx; pop rbp; pop r12; ret; 
0x000000000042340e: mov qword ptr [rbx + 0x90], rax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000424726: mov qword ptr [rbx + 0x90], rax; mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x00000000004238a8: mov qword ptr [rbx + 0x90], rsi; xor eax, eax; punpcklqdq xmm0, xmm0; movups xmmword ptr [rbx + 8], xmm0; pop rbx; ret; 
0x00000000004a36f6: mov qword ptr [rbx + 0x98], rdx; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004638b6: mov qword ptr [rbx], 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048fa47: mov qword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x536f2], 1; ret; 
0x0000000000429cd3: mov qword ptr [rbx], r12; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x0000000000497c15: mov qword ptr [rbx], r13; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000049930d: mov qword ptr [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x000000000049869d: mov qword ptr [rbx], rax; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000481a60: mov qword ptr [rbx], rax; mov eax, 1; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a0a2c: mov qword ptr [rbx], rax; pop rax; pop rdx; pop rbx; ret; 
0x0000000000452c63: mov qword ptr [rcx + 5], rdx; ret; 
0x0000000000452c73: mov qword ptr [rcx + 6], rdx; ret; 
0x0000000000452c83: mov qword ptr [rcx + 7], rdx; ret; 
0x0000000000452c93: mov qword ptr [rcx + 8], rdx; ret; 
0x000000000049279c: mov qword ptr [rcx + rdx*8], rax; add rsp, 8; mov eax, r12d; pop rbx; pop r12; ret; 
0x00000000004a16df: mov qword ptr [rcx], r8; ret; 
0x00000000004a397e: mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x0000000000452c20: mov qword ptr [rcx], rdx; mov byte ptr [rcx + 8], dl; ret; 
0x0000000000452c40: mov qword ptr [rcx], rdx; mov dword ptr [rcx + 7], edx; ret; 
0x0000000000452c50: mov qword ptr [rcx], rdx; mov dword ptr [rcx + 8], edx; ret; 
0x0000000000452c60: mov qword ptr [rcx], rdx; mov qword ptr [rcx + 5], rdx; ret; 
0x0000000000452c70: mov qword ptr [rcx], rdx; mov qword ptr [rcx + 6], rdx; ret; 
0x0000000000452c80: mov qword ptr [rcx], rdx; mov qword ptr [rcx + 7], rdx; ret; 
0x0000000000452c90: mov qword ptr [rcx], rdx; mov qword ptr [rcx + 8], rdx; ret; 
0x000000000046fe5b: mov qword ptr [rcx], rdx; mov rax, qword ptr [rax + 0x58]; mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000046fd8b: mov qword ptr [rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000452c30: mov qword ptr [rcx], rdx; mov word ptr [rcx + 8], dx; ret; 
0x0000000000452c10: mov qword ptr [rcx], rdx; ret; 
0x000000000049d1fe: mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000456c5c: mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000456c7c: mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x00000000004555ac: mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000455f3c: mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; sub r8, 0x19; lea rdi, [rdi + 0x19]; jne 0x564f0; ret; 
0x000000000045558c: mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000455f1c: mov qword ptr [rdi + 0x10], rcx; sub r8, 0x18; lea rdi, [rdi + 0x18]; jne 0x564f0; ret; 
0x000000000045629f: mov qword ptr [rdi + 0x10], rdx; mov byte ptr [rdi + 0x18], cl; ret; 
0x0000000000456cbf: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x00000000004555ef: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000455f9f: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; sub r8, 0x1b; lea rdi, [rdi + 0x1b]; jne 0x564f0; ret; 
0x0000000000456cdf: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x000000000045560f: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000455fcf: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; sub r8, 0x1c; lea rdi, [rdi + 0x1c]; jne 0x564f0; ret; 
0x0000000000456ca0: mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004555d0: mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000426846: mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000426873: mov qword ptr [rdi + 0x18], rdx; mov qword ptr [rdi + 0x48], rax; movups xmmword ptr [rdi + 8], xmm0; ret; 
0x00000000004285a5: mov qword ptr [rdi + 0x18], rdx; mov rcx, rdx; add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004285eb: mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000045fb0e: mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000045fb20: mov qword ptr [rdi + 0x20], rsi; ret; 
0x000000000048b10c: mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000048b0da: mov qword ptr [rdi + 0x310], rax; ret; 
0x0000000000426877: mov qword ptr [rdi + 0x48], rax; movups xmmword ptr [rdi + 8], xmm0; ret; 
0x0000000000426842: mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000042683a: mov qword ptr [rdi + 0x58], rax; mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x00000000004a39d4: mov qword ptr [rdi + 0x98], rsi; ret; 
0x0000000000427890: mov qword ptr [rdi + 0xa0], -1; mov qword ptr [rdi + 0xa8], 0; ret; 
0x0000000000427883: mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000042063c: mov qword ptr [rdi + 0xd8], rdx; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x0000000000456c1c: mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x000000000045554c: mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000455edc: mov qword ptr [rdi + 0xe], rcx; sub r8, 0x16; lea rdi, [rdi + 0x16]; jne 0x564f0; ret; 
0x0000000000456c3c: mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x000000000045556c: mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000455efc: mov qword ptr [rdi + 0xf], rcx; sub r8, 0x17; lea rdi, [rdi + 0x17]; jne 0x564f0; ret; 
0x0000000000442eb7: mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442e47: mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442dd7: mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442d67: mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000456b1a: mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000442cf7: mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000045549a: mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000455dba: mov qword ptr [rdi + 5], rdx; sub r8, 0xd; lea rdi, [rdi + 0xd]; jne 0x564f0; ret; 
0x0000000000456b3a: mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x0000000000442c87: mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004554aa: mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000455dda: mov qword ptr [rdi + 6], rdx; sub r8, 0xe; lea rdi, [rdi + 0xe]; jne 0x564f0; ret; 
0x0000000000456b5a: mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x0000000000442c17: mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004554ba: mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000455dfa: mov qword ptr [rdi + 7], rdx; sub r8, 0xf; lea rdi, [rdi + 0xf]; jne 0x564f0; ret; 
0x000000000049e7af: mov qword ptr [rdi + 8], r10; mov eax, ebx; adc rax, rdx; pop rbp; pop rbx; ret; 
0x000000000049e677: mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x000000000049d1f7: mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x000000000049d187: mov qword ptr [rdi + 8], r9; ret; 
0x000000000049ea09: mov qword ptr [rdi + 8], rax; mov eax, 0xffffc002; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000049e995: mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x000000000042684a: mov qword ptr [rdi + 8], rax; ret; 
0x00000000004285af: mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000049d7bc: mov qword ptr [rdi + r11*8 + 8], r9; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000044f04b: mov qword ptr [rdi + r8 - 8], rdx; vzeroupper; ret; 
0x00000000004570cb: mov qword ptr [rdi + rdx - 7], r9; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e99b: mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x000000000045a38e: mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rcx; ret; 
0x000000000045a50d: mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rcx; vzeroupper; ret; 
0x000000000045960a: mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x00000000004a3990: mov qword ptr [rdi + rsi*8], rdx; add rsp, 8; ret; 
0x000000000043caf4: mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cb32: mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000049d0ee: mov qword ptr [rdi - 0x10], r9; ret; 
0x000000000043cca7: mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cda3: mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043ccef: mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043ce77: mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d057: mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d247: mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d418: mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d618: mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d818: mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043caf0: mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cb2e: mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cca3: mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cd9f: mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043cceb: mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043ce73: mov qword ptr [rdi - 0x1a], r10; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d053: mov qword ptr [rdi - 0x1b], r10; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d243: mov qword ptr [rdi - 0x1c], r10; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d414: mov qword ptr [rdi - 0x1d], r10; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d614: mov qword ptr [rdi - 0x1e], r10; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d814: mov qword ptr [rdi - 0x1f], r10; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043caec: mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cb2a: mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cc9f: mov qword ptr [rdi - 0x21], r9; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cd9b: mov qword ptr [rdi - 0x21], r9; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043cce7: mov qword ptr [rdi - 0x21], r9; mov qword ptr [rdi - 0x19], r10; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043ce6f: mov qword ptr [rdi - 0x22], r9; mov qword ptr [rdi - 0x1a], r10; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d04f: mov qword ptr [rdi - 0x23], r9; mov qword ptr [rdi - 0x1b], r10; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d23f: mov qword ptr [rdi - 0x24], r9; mov qword ptr [rdi - 0x1c], r10; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d410: mov qword ptr [rdi - 0x25], r9; mov qword ptr [rdi - 0x1d], r10; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d610: mov qword ptr [rdi - 0x26], r9; mov qword ptr [rdi - 0x1e], r10; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d810: mov qword ptr [rdi - 0x27], r9; mov qword ptr [rdi - 0x1f], r10; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cae8: mov qword ptr [rdi - 0x28], r8; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cb26: mov qword ptr [rdi - 0x28], r8; mov qword ptr [rdi - 0x20], r9; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043ce7b: mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004426c7: mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d05b: mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000442647: mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d24b: mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004425c7: mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d41c: mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000442538: mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043d61c: mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004424a8: mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043d81c: mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000442418: mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000456420: mov qword ptr [rdi - 1], rdx; ret; 
0x000000000049d0e7: mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x000000000049d06d: mov qword ptr [rdi - 8], r9; ret; 
0x000000000043caf8: mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cb36: mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043ccab: mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cda7: mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043ccf3: mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000442747: mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000049d0e0: mov qword ptr [rdi], r11; shld r8, r9, cl; mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x000000000049d1f0: mov qword ptr [rdi], r11; shrd r8, r9, cl; mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x000000000049d067: mov qword ptr [rdi], r8; shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x000000000049d181: mov qword ptr [rdi], r8; shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x000000000049d03c: mov qword ptr [rdi], r9; ret; 
0x000000000048f1ab: mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x562b3]; mov qword ptr [rsi], rax; ret; 
0x0000000000456aa6: mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x0000000000456146: mov qword ptr [rdi], rcx; mov byte ptr [rdi + 8], dl; ret; 
0x0000000000456ad6: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xa]; ret; 
0x0000000000455476: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x0000000000455d76: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; sub r8, 0xb; lea rdi, [rdi + 0xb]; jne 0x564f0; ret; 
0x0000000000456af6: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; lea rax, [rdi + 0xb]; ret; 
0x0000000000455486: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x0000000000456b17: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000455497: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000455db7: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; sub r8, 0xd; lea rdi, [rdi + 0xd]; jne 0x564f0; ret; 
0x0000000000456b37: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x00000000004554a7: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000455dd7: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; sub r8, 0xe; lea rdi, [rdi + 0xe]; jne 0x564f0; ret; 
0x0000000000456b57: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004554b7: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000455df7: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; sub r8, 0xf; lea rdi, [rdi + 0xf]; jne 0x564f0; ret; 
0x000000000044f048: mov qword ptr [rdi], rcx; mov qword ptr [rdi + r8 - 8], rdx; vzeroupper; ret; 
0x00000000004570c8: mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e998: mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x0000000000456ab7: mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x0000000000455467: mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000455d57: mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; sub r8, 0xa; lea rdi, [rdi + 0xa]; jne 0x564f0; ret; 
0x0000000000442c1b: mov qword ptr [rdi], rcx; ret; 
0x0000000000455d36: mov qword ptr [rdi], rcx; sub r8, 9; lea rdi, [rdi + 9]; jne 0x564f0; ret; 
0x000000000045a512: mov qword ptr [rdi], rcx; vzeroupper; ret; 
0x0000000000456a93: mov qword ptr [rdi], rdx; lea rax, [rdi + 7]; ret; 
0x0000000000456440: mov qword ptr [rdi], rdx; mov byte ptr [rdi + 8], dl; ret; 
0x0000000000456460: mov qword ptr [rdi], rdx; mov dword ptr [rdi + 7], edx; ret; 
0x0000000000456470: mov qword ptr [rdi], rdx; mov dword ptr [rdi + 8], edx; ret; 
0x0000000000456480: mov qword ptr [rdi], rdx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000456490: mov qword ptr [rdi], rdx; mov qword ptr [rdi + 6], rdx; ret; 
0x000000000044f100: mov qword ptr [rdi], rdx; mov qword ptr [rdi + r8 - 8], rdx; vzeroupper; ret; 
0x0000000000456450: mov qword ptr [rdi], rdx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000442f23: mov qword ptr [rdi], rdx; ret; 
0x0000000000455d13: mov qword ptr [rdi], rdx; sub r8, 8; lea rdi, [rdi + 8]; jne 0x564f0; ret; 
0x000000000049e845: mov qword ptr [rdi], rsi; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x0000000000445ee1: mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000045960f: mov qword ptr [rdi], rsi; ret; 
0x0000000000429dfe: mov qword ptr [rdx + 0x28], rcx; mov rax, qword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x0000000000407e84: mov qword ptr [rdx + 0xd0], rcx; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004234ec: mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x000000000042064a: mov qword ptr [rdx + 0xe0], rcx; ret; 
0x000000000045501a: mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x0000000000450c8a: mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000452b3a: mov qword ptr [rdx + 5], rax; mov rax, rdi; sub r8, 0xd; lea rcx, [rdx + 0xd]; jne 0x52d30; ret; 
0x000000000045503a: mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x0000000000450caa: mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000452b5a: mov qword ptr [rdx + 6], rax; mov rax, rdi; sub r8, 0xe; lea rcx, [rdx + 0xe]; jne 0x52d30; ret; 
0x000000000045505a: mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x0000000000450cca: mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000452b7a: mov qword ptr [rdx + 7], rax; mov rax, rdi; sub r8, 0xf; lea rcx, [rdx + 0xf]; jne 0x52d30; ret; 
0x0000000000404c3d: mov qword ptr [rdx + 8], rax; call 0x2ead0; mov rax, rbx; pop rbx; ret; 
0x0000000000454eea: mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x0000000000450bba: mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x00000000004527da: mov qword ptr [rdx + 8], rax; mov rax, rdi; sub r8, 0x10; lea rcx, [rdx + 0x10]; jne 0x52d30; ret; 
0x0000000000454e93: mov qword ptr [rdx], rax; lea rax, [rdx + 7]; ret; 
0x0000000000454f93: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, [rdx + 8]; ret; 
0x0000000000450c43: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000454fb3: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, [rdx + 9]; ret; 
0x0000000000450c53: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000454fd3: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xa]; ret; 
0x0000000000450c63: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000454ff3: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xb]; ret; 
0x0000000000450c73: mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x0000000000455013: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x0000000000450c83: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000455033: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x0000000000450ca3: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000455053: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x0000000000450cc3: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000454ee3: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x0000000000450bb3: mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x0000000000450b63: mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x0000000000452773: mov qword ptr [rdx], rax; mov rax, rdi; sub r8, 8; lea rcx, [rdx + 8]; jne 0x52d30; ret; 
0x0000000000498440: mov qword ptr [rdx], rax; pop rbx; ret; 
0x0000000000428508: mov qword ptr [rdx], rax; ret; 
0x0000000000480a4b: mov qword ptr [rdx], rcx; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004a7cfa: mov qword ptr [rip + 0x3d273], 0; add rsp, 8; ret; 
0x00000000004a78ab: mov qword ptr [rip + 0x3d5a2], 0; add rsp, 8; ret; 
0x00000000004a6713: mov qword ptr [rip + 0x3e576], rbx; test rbx, rbx; jne 0xa6700; pop rbx; ret; 
0x0000000000497eb7: mov qword ptr [rip + 0x4d16a], rax; ret; 
0x0000000000497ea0: mov qword ptr [rip + 0x4d181], rax; add rsp, 8; ret; 
0x00000000004916d0: mov qword ptr [rip + 0x53925], 0; add rsp, 8; ret; 
0x000000000048f048: mov qword ptr [rip + 0x56421], rax; ret; 
0x0000000000485133: mov qword ptr [rip + 0x5fe5e], rax; cmp rdi, rax; ja 0x85168; xor eax, eax; ret; 
0x000000000046fd67: mov qword ptr [rip + 0x73cca], rdx; cmp qword ptr fs:[rdi], rsi; je 0x6fd78; ret; 
0x000000000045f87c: mov qword ptr [rip + 0x8384d], rax; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000042e4cf: mov qword ptr [rip + 0xb42ea], rax; ret; 
0x000000000042e4c1: mov qword ptr [rip + 0xb4300], rax; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x000000000042e4b3: mov qword ptr [rip + 0xb683e], rax; lea rax, [rip - 0x9e1]; mov qword ptr [rip + 0xb4300], rax; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x000000000042a6c5: mov qword ptr [rip + 0xb80f4], rax; ret; 
0x000000000042a6b7: mov qword ptr [rip + 0xb810a], rax; lea rax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x000000000042973b: mov qword ptr [rip + 0xb900e], rax; ret; 
0x0000000000429712: mov qword ptr [rip + 0xb902f], rax; ret; 
0x00000000004296f2: mov qword ptr [rip + 0xb9047], rax; ret; 
0x00000000004293e8: mov qword ptr [rip + 0xb93b9], rax; ret; 
0x00000000004293d1: mov qword ptr [rip + 0xb93c8], rax; ret; 
0x00000000004293b7: mov qword ptr [rip + 0xb93d2], rdx; ret; 
0x0000000000429378: mov qword ptr [rip + 0xb93d9], rax; ret; 
0x0000000000429368: mov qword ptr [rip + 0xb93f1], rax; ret; 
0x00000000004297a5: mov qword ptr [rip + 0xbb58c], rax; ret; 
0x00000000004109d9: mov qword ptr [rip + 0xd3900], rax; mov eax, dword ptr [rdx + rsi]; mov dword ptr [rip + 0xd38ff], eax; lea rax, [rip + 0xd38f0]; ret; 
0x0000000000410bbd: mov qword ptr [rip + 0xd423c], rax; add rsp, 0x88; pop rbx; ret; 
0x00000000004017d4: mov qword ptr [rip + 0xe3879], 0; pop rdx; ret; 
0x000000000048f1b5: mov qword ptr [rsi], rax; ret; 
0x000000000046fd80: mov qword ptr [rsi], rcx; mov rcx, -0x18; mov qword ptr fs:[rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x000000000048e4b4: mov qword ptr [rsi], rdi; mov rax, r8; ret; 
0x000000000048e1a7: mov qword ptr [rsp + 0x18], rax; call 0x8dad0; add rsp, 0xd8; ret; 
0x000000000045c19a: mov qword ptr [rsp + 8], rax; call 0x818f0; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x00000000004a11c3: mov qword ptr [rsp], rax; call 0xa15f0; mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x0000000000429cd2: mov qword ptr fs:[rbx], r12; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000046fe5a: mov qword ptr fs:[rcx], rdx; mov rax, qword ptr [rax + 0x58]; mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000046fd8a: mov qword ptr fs:[rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x000000000046fd95: mov qword ptr fs:[rdx], rax; ret; 
0x000000000046fd7f: mov qword ptr fs:[rsi], rcx; mov rcx, -0x18; mov qword ptr fs:[rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000459609: mov qword ptr ss:[rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x0000000000498fa4: mov r10, rcx; mov eax, 0x11; syscall; cmp rax, -0x1000; ja 0x98fc0; ret; 
0x000000000045f8a4: mov r10, rcx; mov eax, 0x19; syscall; cmp rax, -0xfff; jae 0x5f8b7; ret; 
0x000000000045f8d4: mov r10, rcx; mov eax, 0x9d; syscall; cmp rax, -0xfff; jae 0x5f8e7; ret; 
0x000000000043cc40: mov r11, qword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cc24: mov r11, qword ptr [rsi - 0x10]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000045ced6: mov r12, -1; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x00000000004a3cf3: mov r12, qword ptr [rbp - 0x20]; mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x0000000000402478: mov r12d, 0xffffffea; add rsp, 8; mov eax, r12d; pop rbp; pop r12; ret; 
0x00000000004025cc: mov r12d, 0xffffffea; pop rbp; mov eax, r12d; pop r12; pop r13; ret; 
0x000000000040a988: mov r12d, 0xfffffff2; pop rbx; pop rbp; mov eax, r12d; pop r12; ret; 
0x00000000004a3cf7: mov r13, qword ptr [rbp - 0x18]; mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x00000000004a3cfb: mov r14, qword ptr [rbp - 0x10]; mov r15, qword ptr [rbp - 8]; leave; ret; 
0x00000000004a3cff: mov r15, qword ptr [rbp - 8]; leave; ret; 
0x00000000004a16e8: mov r8, qword ptr [r8]; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x00000000004a16d8: mov r8, qword ptr [rax]; lea rax, [rax + 8]; mov qword ptr [rcx], r8; ret; 
0x000000000048f13d: mov r8, qword ptr [rip + 0x5632c]; mov rax, r8; ret; 
0x000000000048f03b: mov r8, qword ptr [rip + 0x5642e]; jne 0x8f050; lea rax, [r8 + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x000000000045d003: mov r8, r9; mov r9, qword ptr [rsp + 8]; syscall; cmp rax, -0xfff; jae 0x5d016; ret; 
0x00000000004817b0: mov r8, rcx; lea rdx, [r8 + rdx*4]; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000429b58: mov r8, rdi; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x000000000048d1f4: mov r8b, 0xf; xchg eax, ebp; ret 0x2148; 
0x000000000040270d: mov r8d, eax; mov eax, 0xffffffea; test r8d, r8d; je 0x2720; pop rbp; ret; 
0x0000000000402e9f: mov r8d, eax; mov eax, 0xffffffea; test r8d, r8d; je 0x2eb0; pop rbp; ret; 
0x00000000004570c3: mov r9, qword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e993: mov r9, qword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x000000000045d006: mov r9, qword ptr [rsp + 8]; syscall; cmp rax, -0xfff; jae 0x5d016; ret; 
0x000000000045adda: mov r9, rax; mov eax, dword ptr [rcx + rax*4]; sub eax, dword ptr [rcx + r8*4]; je 0x5adc8; ret; 
0x0000000000478670: mov r9, rax; pop r12; pop r13; mov rax, r9; pop r14; ret; 
0x000000000046fdc4: mov rax, -0x10; add rax, qword ptr fs:[0]; ret; 
0x000000000046fde4: mov rax, -0x18; add rax, qword ptr fs:[0]; ret; 
0x000000000046fe04: mov rax, -0x20; add rax, qword ptr fs:[0]; ret; 
0x0000000000411ad4: mov rax, -0x40; add rax, qword ptr fs:[0]; ret; 
0x000000000045bef0: mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000045d068: mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x0000000000485168: mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000000048fa64: mov rax, -0x40; pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x000000000042c570: mov rax, -0x40; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000000046fda4: mov rax, -0x58; movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x0000000000427934: mov rax, -1; ret; 
0x000000000040a780: mov rax, 0x4dec40; pop rbp; ret; 
0x000000000040a4e0: mov rax, 0x4dec40; ret; 
0x000000000040a7a0: mov rax, 0x4dec80; pop rbp; ret; 
0x000000000040a4d0: mov rax, 0x4dec80; ret; 
0x000000000040a790: mov rax, 0x4decc0; pop rbp; ret; 
0x000000000040a3cc: mov rax, 0x4decc0; ret; 
0x000000000040a7e0: mov rax, 0x4ded00; pop rbp; ret; 
0x000000000040a460: mov rax, 0x4ded00; ret; 
0x000000000040a7d0: mov rax, 0x4ded40; pop rbp; ret; 
0x000000000040a480: mov rax, 0x4ded40; ret; 
0x000000000040a7f0: mov rax, 0x4ded80; pop rbp; ret; 
0x000000000040a42e: mov rax, 0x4ded80; ret; 
0x000000000040a7c0: mov rax, 0x4dedc0; pop rbp; ret; 
0x000000000040a36e: mov rax, 0x4dedc0; ret; 
0x000000000040a802: mov rax, 0x4dee00; pop rbp; ret; 
0x000000000040a3ac: mov rax, 0x4dee00; ret; 
0x000000000040a7f9: mov rax, 0x4dee40; pop rbp; ret; 
0x000000000040a4a8: mov rax, 0x4dee40; ret; 
0x000000000040a82f: mov rax, 0x4dee80; pop rbp; ret; 
0x000000000040a4f0: mov rax, 0x4dee80; ret; 
0x000000000040a826: mov rax, 0x4deec0; pop rbp; ret; 
0x000000000040a470: mov rax, 0x4deec0; ret; 
0x000000000040a838: mov rax, 0x4def00; pop rbp; ret; 
0x000000000040a3ec: mov rax, 0x4def00; ret; 
0x000000000040a841: mov rax, 0x4def40; pop rbp; ret; 
0x000000000040a458: mov rax, 0x4def40; ret; 
0x000000000040a770: mov rax, 0x4e11a0; pop rbp; ret; 
0x000000000040a490: mov rax, 0x4e11a0; ret; 
0x000000000040a7b0: mov rax, 0x4e11e0; pop rbp; ret; 
0x000000000040a40c: mov rax, 0x4e11e0; ret; 
0x000000000040a814: mov rax, 0x4e1220; pop rbp; ret; 
0x000000000040a440: mov rax, 0x4e1220; ret; 
0x000000000040a80b: mov rax, 0x4e1260; pop rbp; ret; 
0x000000000040a500: mov rax, 0x4e1260; ret; 
0x000000000040a81d: mov rax, 0x4e12a0; pop rbp; ret; 
0x000000000040a4b0: mov rax, 0x4e12a0; ret; 
0x000000000040a766: mov rax, 0x4e12e0; pop rbp; ret; 
0x000000000040a4c0: mov rax, 0x4e12e0; ret; 
0x0000000000402584: mov rax, 0x4e2130; mov rax, qword ptr [rax]; mov eax, dword ptr [rax]; ret; 
0x0000000000484210: mov rax, 1; ret; 
0x0000000000484220: mov rax, 2; ret; 
0x0000000000484230: mov rax, 3; ret; 
0x0000000000484240: mov rax, 4; ret; 
0x0000000000484250: mov rax, 5; ret; 
0x0000000000484260: mov rax, 6; ret; 
0x0000000000484270: mov rax, 7; ret; 
0x000000000046fe5e: mov rax, qword ptr [rax + 0x58]; mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000042775f: mov rax, qword ptr [rax + 0x68]; test rax, rax; jne 0x27758; ret; 
0x00000000004916e4: mov rax, qword ptr [rax + 8]; ret; 
0x00000000004916f4: mov rax, qword ptr [rax + 8]; sub rax, qword ptr fs:[0]; ret; 
0x000000000046fdb2: mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x00000000004a391c: mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x000000000040258b: mov rax, qword ptr [rax]; mov eax, dword ptr [rax]; ret; 
0x000000000046fdaf: mov rax, qword ptr [rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x0000000000402030: mov rax, qword ptr [rax]; mov rdi, rax; call 0x1e8a; mov eax, 0; leave; ret; 
0x00000000004284f8: mov rax, qword ptr [rax]; test rax, rax; jne 0x284f0; ret; 
0x0000000000401e7c: mov rax, qword ptr [rbp - 0x10]; mov rdi, rax; call 0x2700; leave; ret; 
0x000000000049e585: mov rax, qword ptr [rbp - 8]; xor rax, qword ptr fs:[0x28]; jne 0x9e615; leave; ret; 
0x0000000000498418: mov rax, qword ptr [rbx + 0x10]; mov qword ptr [rax], 0; mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x00000000004983d0: mov rax, qword ptr [rbx + 0x10]; mov qword ptr [rax], rdi; pop rbx; ret; 
0x00000000004983c0: mov rax, qword ptr [rbx + 0x10]; mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000045f879: mov rax, qword ptr [rbx]; mov qword ptr [rip + 0x8384d], rax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000455016: mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x0000000000450c86: mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000455036: mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x0000000000450ca6: mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000455056: mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x0000000000450cc6: mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000454ee6: mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x0000000000450bb6: mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x00000000004304a8: mov rax, qword ptr [rcx + rax + 8]; sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x0000000000454e90: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; lea rax, [rdx + 7]; ret; 
0x0000000000454f90: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; lea rax, [rdx + 8]; ret; 
0x0000000000450c40: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 5]; mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000454fb0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; lea rax, [rdx + 9]; ret; 
0x0000000000450c50: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 6]; mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000454fd0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xa]; ret; 
0x0000000000450c60: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 7]; mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000454ff0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xb]; ret; 
0x0000000000450c70: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov eax, dword ptr [rcx + 8]; mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x0000000000455010: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x0000000000450c80: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 5]; mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000455030: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x0000000000450ca0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 6]; mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000455050: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x0000000000450cc0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 7]; mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000454ee0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x0000000000450bb0: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, qword ptr [rcx + 8]; mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x0000000000450b60: mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x000000000042686b: mov rax, qword ptr [rdi + 0x18]; punpckhqdq xmm0, xmm0; mov qword ptr [rdi + 0x18], rdx; mov qword ptr [rdi + 0x48], rax; movups xmmword ptr [rdi + 8], xmm0; ret; 
0x00000000004292b4: mov rax, qword ptr [rdi + 0x28]; cmp qword ptr [rdi + 0x10], rax; cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000429e02: mov rax, qword ptr [rdi + 0x28]; mov qword ptr [rax + 0x20], rdx; add rsp, 8; ret; 
0x000000000042683e: mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000428884: mov rax, qword ptr [rdi + 0x68]; ret; 
0x00000000004a3934: mov rax, qword ptr [rdi + 0x90]; ret; 
0x00000000004a39a4: mov rax, qword ptr [rdi + 0x98]; ret; 
0x0000000000480d34: mov rax, qword ptr [rdi + 0xa0]; cmp qword ptr [rax + 0x30], 0; je 0x80d48; ret; 
0x00000000004a39e4: mov rax, qword ptr [rdi + 0xa0]; ret; 
0x00000000004a3a44: mov rax, qword ptr [rdi + 0xa8]; ret; 
0x00000000004a3a34: mov rax, qword ptr [rdi + 0xb0]; ret; 
0x00000000004a39f4: mov rax, qword ptr [rdi + 0xb8]; ret; 
0x00000000004a39b4: mov rax, qword ptr [rdi + 0xc0]; sar rax, 0x3f; and eax, 1; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x00000000004289aa: mov rax, qword ptr [rdi + 8]; cmp rax, rdx; jae 0x289d8; movzx eax, byte ptr [rax]; ret; 
0x000000000043acb0: mov rax, qword ptr [rdi - 8]; cmp rcx, rax; jne 0x3b163; xor eax, eax; ret; 
0x000000000043a726: mov rax, qword ptr [rdi - 8]; mov rcx, qword ptr [rsi - 8]; cmp rcx, rax; jne 0x3b163; xor eax, eax; ret; 
0x0000000000429724: mov rax, qword ptr [rdi]; cmp rax, 0x2000000; jbe 0x29730; ret; 
0x0000000000429384: mov rax, qword ptr [rdi]; cmp rax, 0x408; jbe 0x29390; ret; 
0x0000000000429784: mov rax, qword ptr [rdi]; cmp rax, 0xa0; jbe 0x29790; ret; 
0x00000000004293c4: mov rax, qword ptr [rdi]; cmp rax, 0xffff; jbe 0x293d0; ret; 
0x000000000049bfd4: mov rax, qword ptr [rdi]; cmp rax, rsi; je 0x9bfe0; ret; 
0x0000000000428505: mov rax, qword ptr [rdi]; mov qword ptr [rdx], rax; ret; 
0x0000000000429754: mov rax, qword ptr [rdi]; nop; mov dword ptr [rip + 0xb9012], 1; mov dword ptr [rip + 0xb9004], eax; ret; 
0x0000000000429704: mov rax, qword ptr [rdi]; nop; mov dword ptr [rip + 0xb9062], 1; mov qword ptr [rip + 0xb902f], rax; ret; 
0x00000000004296e4: mov rax, qword ptr [rdi]; nop; mov dword ptr [rip + 0xb9082], 1; mov qword ptr [rip + 0xb9047], rax; ret; 
0x0000000000429774: mov rax, qword ptr [rdi]; nop; mov dword ptr [rip + 0xbb5b6], eax; ret; 
0x00000000004293e4: mov rax, qword ptr [rdi]; nop; mov qword ptr [rip + 0xb93b9], rax; ret; 
0x0000000000429374: mov rax, qword ptr [rdi]; nop; mov qword ptr [rip + 0xb93d9], rax; ret; 
0x0000000000429364: mov rax, qword ptr [rdi]; nop; mov qword ptr [rip + 0xb93f1], rax; ret; 
0x000000000048f689: mov rax, qword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000048f1a4: mov rax, qword ptr [rip + 0x52f8d]; mov qword ptr [rdi], rax; mov rax, qword ptr [rip + 0x562b3]; mov qword ptr [rsi], rax; ret; 
0x000000000048f1ae: mov rax, qword ptr [rip + 0x562b3]; mov qword ptr [rsi], rax; ret; 
0x000000000046d204: mov rax, qword ptr [rip + 0x77c45]; ret; 
0x0000000000463854: mov rax, qword ptr [rip + 0x821ad]; ret; 
0x000000000045cf64: mov rax, qword ptr [rip + 0x861ed]; test rax, rax; je 0x5cf71; ret; 
0x0000000000428864: mov rax, qword ptr [rip + 0xb98f5]; ret; 
0x00000000004a4579: mov rax, qword ptr [rsi + 0x10]; add rsp, 8; ret; 
0x00000000004a17d9: mov rax, qword ptr [rsi + 0xa8]; add rsp, 8; ret; 
0x00000000004a1838: mov rax, qword ptr [rsi + 0xb0]; add rsp, 8; ret; 
0x00000000004a17ec: mov rax, qword ptr [rsi + 0xb8]; add rsp, 8; ret; 
0x000000000045c101: mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x00000000004a14b5: mov rax, qword ptr [rsp]; add rsp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x00000000004a11cc: mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000046fdae: mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x0000000000481d98: mov rax, r12; pop r12; pop r13; ret; 
0x000000000040dbf6: mov rax, r12; pop r12; ret; 
0x0000000000481324: mov rax, r12; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000042997a: mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000404e10: mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000407c8b: mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000420821: mov rax, r12; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000411cfa: mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000049eda8: mov rax, r12; sar rax, 3; pop rbx; pop rbp; pop r12; ret; 
0x0000000000499555: mov rax, r13; pop r12; pop r13; ret; 
0x000000000042071d: mov rax, r13; pop rbp; pop r12; pop r13; pop r14; ret; 
0x000000000045d748: mov rax, r13; pop rbp; pop r12; pop r13; ret; 
0x000000000045d733: mov rax, r13; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000041ee99: mov rax, r8; add qword ptr [rip + 0xc6a14], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048e521: mov rax, r8; neg rax; test cl, cl; cmove r8, rax; mov rax, r8; ret; 
0x000000000042e899: mov rax, r8; pop r12; pop r13; ret; 
0x0000000000429b5d: mov rax, r8; pop r12; ret; 
0x000000000042e906: mov rax, r8; pop r13; ret; 
0x0000000000484db2: mov rax, r8; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000423386: mov rax, r8; pop rbp; pop r12; ret; 
0x000000000042d9b3: mov rax, r8; pop rbp; ret; 
0x000000000042fea8: mov rax, r8; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000042e0b9: mov rax, r8; pop rbx; pop rbp; pop r12; ret; 
0x000000000041ef0b: mov rax, r8; pop rbx; pop rbp; ret; 
0x000000000042d7bc: mov rax, r8; pop rbx; ret; 
0x000000000041ef00: mov rax, r8; ret; 
0x0000000000484603: mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x0000000000483490: mov rax, r8; vzeroupper; ret; 
0x0000000000415d95: mov rax, r9; pop r12; ret; 
0x0000000000478677: mov rax, r9; pop r14; ret; 
0x00000000004785c6: mov rax, r9; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000415d67: mov rax, r9; pop rbx; pop rbp; pop r12; ret; 
0x0000000000405c5b: mov rax, rbp; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000042472d: mov rax, rbp; pop rbx; pop rbp; pop r12; ret; 
0x00000000004a3b52: mov rax, rbp; pop rbx; pop rbp; ret; 
0x0000000000425088: mov rax, rbx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000404ecf: mov rax, rbx; pop rbx; pop rbp; ret; 
0x0000000000404c46: mov rax, rbx; pop rbx; ret; 
0x0000000000492543: mov rax, rdi; mov rdi, rdx; cmp rax, 9; ja 0x92520; mov rax, r8; ret; 
0x0000000000428894: mov rax, rdi; ret; 
0x00000000004527de: mov rax, rdi; sub r8, 0x10; lea rcx, [rdx + 0x10]; jne 0x52d30; ret; 
0x0000000000452adc: mov rax, rdi; sub r8, 0xa; lea rcx, [rdx + 0xa]; jne 0x52d30; ret; 
0x0000000000452afc: mov rax, rdi; sub r8, 0xb; lea rcx, [rdx + 0xb]; jne 0x52d30; ret; 
0x0000000000452b1c: mov rax, rdi; sub r8, 0xc; lea rcx, [rdx + 0xc]; jne 0x52d30; ret; 
0x0000000000452b3e: mov rax, rdi; sub r8, 0xd; lea rcx, [rdx + 0xd]; jne 0x52d30; ret; 
0x0000000000452b5e: mov rax, rdi; sub r8, 0xe; lea rcx, [rdx + 0xe]; jne 0x52d30; ret; 
0x0000000000452b7e: mov rax, rdi; sub r8, 0xf; lea rcx, [rdx + 0xf]; jne 0x52d30; ret; 
0x00000000004529d4: mov rax, rdi; sub r8, 1; lea rcx, [rdx + 1]; jne 0x52d30; ret; 
0x00000000004529f6: mov rax, rdi; sub r8, 2; lea rcx, [rdx + 2]; jne 0x52d30; ret; 
0x0000000000452a1c: mov rax, rdi; sub r8, 3; lea rcx, [rdx + 3]; jne 0x52d30; ret; 
0x0000000000452a34: mov rax, rdi; sub r8, 4; lea rcx, [rdx + 4]; jne 0x52d30; ret; 
0x0000000000452a5a: mov rax, rdi; sub r8, 5; lea rcx, [rdx + 5]; jne 0x52d30; ret; 
0x0000000000452a7c: mov rax, rdi; sub r8, 6; lea rcx, [rdx + 6]; jne 0x52d30; ret; 
0x0000000000452a9a: mov rax, rdi; sub r8, 7; lea rcx, [rdx + 7]; jne 0x52d30; ret; 
0x0000000000452776: mov rax, rdi; sub r8, 8; lea rcx, [rdx + 8]; jne 0x52d30; ret; 
0x0000000000452abc: mov rax, rdi; sub r8, 9; lea rcx, [rdx + 9]; jne 0x52d30; ret; 
0x000000000044f340: mov rax, rdi; vzeroupper; ret; 
0x0000000000491a84: mov rax, rdx; mov rcx, qword ptr [rsp + 0x48]; xor rcx, qword ptr fs:[0x28]; jne 0x91ac4; add rsp, 0x58; ret; 
0x0000000000491f14: mov rax, rdx; mov rcx, qword ptr [rsp + 0x48]; xor rcx, qword ptr fs:[0x28]; jne 0x91f54; add rsp, 0x58; ret; 
0x0000000000491bf6: mov rax, rdx; mov rcx, qword ptr [rsp + 0x58]; xor rcx, qword ptr fs:[0x28]; jne 0x91c44; add rsp, 0x68; ret; 
0x000000000045a860: mov rax, rdx; pop rbx; ret; 
0x000000000044f528: mov rax, rdx; ret; 
0x000000000046fd83: mov rcx, -0x18; mov qword ptr fs:[rcx], rdx; mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x000000000045be34: mov rcx, -0x40; neg eax; mov dword ptr fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000004806f5: mov rcx, qword ptr [rax + 0x10]; mov qword ptr [rax], rdx; mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x0000000000445edd: mov rcx, qword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x00000000004a3972: mov rcx, qword ptr [rdi + rsi*8]; cmp al, 8; jne 0x175a; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x00000000004a4354: mov rcx, qword ptr [rdx + 8]; mov eax, 1; cmp qword ptr [rsi + 8], rcx; ja 0xa4365; sbb eax, eax; ret; 
0x0000000000456c54: mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000456c74: mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x00000000004555a4: mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000455584: mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000456c14: mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x0000000000455544: mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000456c34: mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000455564: mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000459602: mov rcx, qword ptr [rsi + rdx - 8]; mov rsi, qword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x000000000043cfe4: mov rcx, qword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d000: mov rcx, qword ptr [rsi - 0xa]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d1c4: mov rcx, qword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d1e0: mov rcx, qword ptr [rsi - 0xb]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d3a4: mov rcx, qword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d3c0: mov rcx, qword ptr [rsi - 0xc]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d594: mov rcx, qword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d5b0: mov rcx, qword ptr [rsi - 0xd]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d794: mov rcx, qword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d7b0: mov rcx, qword ptr [rsi - 0xe]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d994: mov rcx, qword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d9b0: mov rcx, qword ptr [rsi - 0xf]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043a72a: mov rcx, qword ptr [rsi - 8]; cmp rcx, rax; jne 0x3b163; xor eax, eax; ret; 
0x0000000000442534: mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004424a4: mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000442414: mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043acac: mov rcx, qword ptr [rsi - 8]; mov rax, qword ptr [rdi - 8]; cmp rcx, rax; jne 0x3b163; xor eax, eax; ret; 
0x000000000043ce04: mov rcx, qword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043ce20: mov rcx, qword ptr [rsi - 9]; mov edx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000456aa0: mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x0000000000455450: mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x0000000000456140: mov rcx, qword ptr [rsi]; mov dl, byte ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov byte ptr [rdi + 8], dl; ret; 
0x0000000000456ab0: mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x0000000000455460: mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000456ad0: mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xa]; ret; 
0x0000000000455470: mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x0000000000456af0: mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; lea rax, [rdi + 0xb]; ret; 
0x0000000000455480: mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x0000000000442eb4: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442e44: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442dd4: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442d64: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442cf4: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442c84: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442c14: mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000044e990: mov rcx, qword ptr [rsi]; mov r9, qword ptr [rsi + rdx - 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x0000000000456b10: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000455490: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000456b30: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x00000000004554a0: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000456b50: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004554b0: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x000000000044f040: mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + r8 - 8]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + r8 - 8], rdx; vzeroupper; ret; 
0x0000000000491a87: mov rcx, qword ptr [rsp + 0x48]; xor rcx, qword ptr fs:[0x28]; jne 0x91ac4; add rsp, 0x58; ret; 
0x0000000000491f17: mov rcx, qword ptr [rsp + 0x48]; xor rcx, qword ptr fs:[0x28]; jne 0x91f54; add rsp, 0x58; ret; 
0x0000000000491bf9: mov rcx, qword ptr [rsp + 0x58]; xor rcx, qword ptr fs:[0x28]; jne 0x91c44; add rsp, 0x68; ret; 
0x0000000000445edc: mov rcx, qword ptr ss:[rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000048e3ba: mov rcx, rax; cmp rcx, rdx; jne 0x8e398; mov eax, dword ptr [rcx]; ret; 
0x00000000004285e5: mov rcx, rdx; add rax, rcx; mov qword ptr [rdi + 0x18], rsi; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x00000000004285a9: mov rcx, rdx; add rax, rcx; mov qword ptr [rdi + 8], rax; xor eax, eax; ret; 
0x000000000045a2ad: mov rcx, rdx; movzx eax, sil; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x00000000004595e5: mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000049c91e: mov rcx, rsi; sub rcx, qword ptr [rax + 0x10]; cmp rcx, qword ptr [rax + 0x28]; jae 0x9c910; mov eax, 1; ret; 
0x000000000049ec54: mov rdi, qword ptr [rdi]; call 0xa0a40; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000049eb90: mov rdi, qword ptr [rdi]; call 0xa0d70; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x0000000000402033: mov rdi, rax; call 0x1e8a; mov eax, 0; leave; ret; 
0x0000000000401e80: mov rdi, rax; call 0x2700; leave; ret; 
0x00000000004924c2: mov rdi, rax; cmp rdx, rcx; jae 0x924ac; mov rax, r8; ret; 
0x0000000000492546: mov rdi, rdx; cmp rax, 9; ja 0x92520; mov rax, r8; ret; 
0x000000000048302e: mov rdi, rsi; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x000000000046fe62: mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x000000000046fd8e: mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x000000000045bed8: mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000045c110: mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x00000000004089f9: mov rdx, qword ptr [rax]; mov rdx, qword ptr [rdx]; cmp dword ptr [rdx], esi; jne 0x89f0; mov eax, 0xffffffef; ret; 
0x000000000049843c: mov rdx, qword ptr [rbx + 0x10]; mov qword ptr [rdx], rax; pop rbx; ret; 
0x000000000045fab9: mov rdx, qword ptr [rcx + rdx]; lea rcx, [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x00000000004983c4: mov rdx, qword ptr [rdi + 0x30]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000498423: mov rdx, qword ptr [rdi + 0x458]; mov qword ptr [rax], rdx; pop rbx; ret; 
0x0000000000420643: mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x00000000004089fc: mov rdx, qword ptr [rdx]; cmp dword ptr [rdx], esi; jne 0x89f0; mov eax, 0xffffffef; ret; 
0x000000000042680c: mov rdx, qword ptr [rdx]; cmp rax, rcx; cmovg rax, rcx; test rdx, rdx; jne 0x26808; ret; 
0x00000000004806b4: mov rdx, qword ptr [rdx]; cmp rax, rcx; cmovg rax, rcx; test rdx, rdx; jne 0x806b0; ret; 
0x00000000004a36f3: mov rdx, qword ptr [rdx]; mov qword ptr [rbx + 0x98], rdx; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000049901e: mov rdx, qword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000456294: mov rdx, qword ptr [rsi + 0x10]; mov cl, byte ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov byte ptr [rdi + 0x18], cl; ret; 
0x00000000004555e4: mov rdx, qword ptr [rsi + 0x10]; mov ecx, dword ptr [rsi + 0x17]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000455604: mov rdx, qword ptr [rsi + 0x10]; mov ecx, dword ptr [rsi + 0x18]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000442eb0: mov rdx, qword ptr [rsi + 1]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442e40: mov rdx, qword ptr [rsi + 2]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442dd0: mov rdx, qword ptr [rsi + 3]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000442d60: mov rdx, qword ptr [rsi + 4]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000456b13: mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000455493: mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000442cf0: mov rdx, qword ptr [rsi + 5]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000456b33: mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x00000000004554a3: mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x0000000000442c80: mov rdx, qword ptr [rsi + 6]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000456b53: mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x00000000004554b3: mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000442c10: mov rdx, qword ptr [rsi + 7]; mov rcx, qword ptr [rsi]; mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000044f043: mov rdx, qword ptr [rsi + r8 - 8]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + r8 - 8], rdx; vzeroupper; ret; 
0x00000000004426c0: mov rdx, qword ptr [rsi - 0xa]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000442640: mov rdx, qword ptr [rsi - 0xb]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004425c0: mov rdx, qword ptr [rsi - 0xc]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000442530: mov rdx, qword ptr [rsi - 0xd]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004424a0: mov rdx, qword ptr [rsi - 0xe]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000442410: mov rdx, qword ptr [rsi - 0xf]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cc44: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d598: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d798: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d998: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cc28: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d5b4: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d7b4: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d9b4: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cc60: mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000442740: mov rdx, qword ptr [rsi - 9]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000456a90: mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; lea rax, [rdi + 7]; ret; 
0x0000000000442f20: mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x0000000000455d10: mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; sub r8, 8; lea rdi, [rdi + 8]; jne 0x564f0; ret; 
0x0000000000430492: mov rdx, rax; je 0x304c8; test rsi, rsi; je 0x304a8; lea rax, [rax - 0x10]; ret; 
0x00000000004284f5: mov rdx, rax; mov rax, qword ptr [rax]; test rax, rax; jne 0x284f0; ret; 
0x00000000004924bf: mov rdx, rdi; mov rdi, rax; cmp rdx, rcx; jae 0x924ac; mov rax, r8; ret; 
0x000000000045a2b4: mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x000000000049ec50: mov rsi, qword ptr [rdi + 8]; mov rdi, qword ptr [rdi]; call 0xa0a40; mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x000000000049eb8c: mov rsi, qword ptr [rdi + 8]; mov rdi, qword ptr [rdi]; call 0xa0d70; mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x0000000000459607: mov rsi, qword ptr [rsi]; mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x0000000000445eda: mov rsi, qword ptr [rsi]; mov rcx, qword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x0000000000445eff: mov si, word ptr [rsi]; mov cx, word ptr [rcx - 2]; mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x0000000000445f09: mov word ptr [r9 - 2], cx; ret; 
0x0000000000455c60: mov word ptr [rax], cs; add byte ptr [rax], al; ret; 
0x00000000004905b4: mov word ptr [rax], es; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000429b38: mov word ptr [rbx], cs; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000429b2e: mov word ptr [rbx], cs; add byte ptr [rax + 1], cl; ret; 
0x0000000000452bf2: mov word ptr [rcx + 4], dx; ret; 
0x0000000000452c33: mov word ptr [rcx + 8], dx; ret; 
0x0000000000452bc0: mov word ptr [rcx], dx; mov byte ptr [rcx + 2], dl; ret; 
0x0000000000452bb0: mov word ptr [rcx], dx; ret; 
0x0000000000456b9c: mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004554ec: mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000455e5c: mov word ptr [rdi + 0x10], cx; sub r8, 0x12; lea rdi, [rdi + 0x12]; jne 0x564f0; ret; 
0x0000000000456ca4: mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004555d4: mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000455f74: mov word ptr [rdi + 0x18], cx; sub r8, 0x1a; lea rdi, [rdi + 0x1a]; jne 0x564f0; ret; 
0x0000000000443157: mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x0000000000456a68: mov word ptr [rdi + 4], dx; lea rax, [rdi + 5]; ret; 
0x0000000000455428: mov word ptr [rdi + 4], dx; ret; 
0x0000000000455cd8: mov word ptr [rdi + 4], dx; sub r8, 6; lea rdi, [rdi + 6]; jne 0x564f0; ret; 
0x0000000000456aba: mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x000000000045546a: mov word ptr [rdi + 8], dx; ret; 
0x0000000000455d5a: mov word ptr [rdi + 8], dx; sub r8, 0xa; lea rdi, [rdi + 0xa]; jne 0x564f0; ret; 
0x000000000044f00c: mov word ptr [rdi + r8 - 2], dx; vzeroupper; ret; 
0x000000000045a39e: mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], cx; ret; 
0x000000000045a523: mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], cx; vzeroupper; ret; 
0x0000000000459628: mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x000000000043d1fc: mov word ptr [rdi - 2], cx; ret; 
0x000000000043d014: mov word ptr [rdi - 2], dx; ret; 
0x000000000043d1f8: mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x0000000000457073: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; lea rax, [rdi + 2]; vzeroupper; ret; 
0x000000000044e963: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x0000000000456a33: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x00000000004553f3: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x0000000000455c73: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; sub r8, 3; lea rdi, [rdi + 3]; jne 0x564f0; ret; 
0x00000000004560e6: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dl; ret; 
0x000000000044f009: mov word ptr [rdi], cx; mov word ptr [rdi + r8 - 2], dx; vzeroupper; ret; 
0x0000000000459336: mov word ptr [rdi], cx; mov word ptr [rsi - 2], cx; ret; 
0x000000000044315b: mov word ptr [rdi], cx; ret; 
0x000000000045a528: mov word ptr [rdi], cx; vzeroupper; ret; 
0x0000000000456a23: mov word ptr [rdi], dx; lea rax, [rdi + 1]; ret; 
0x0000000000457063: mov word ptr [rdi], dx; lea rax, [rdi + 1]; vzeroupper; ret; 
0x000000000044f0e0: mov word ptr [rdi], dx; mov word ptr [rdi + r8 - 2], dx; vzeroupper; ret; 
0x00000000004431c3: mov word ptr [rdi], dx; ret; 
0x000000000044eec3: mov word ptr [rdi], dx; sub r8, 2; lea rdi, [rdi + 2]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c53: mov word ptr [rdi], dx; sub r8, 2; lea rdi, [rdi + 2]; jne 0x564f0; ret; 
0x000000000044e953: mov word ptr [rdi], dx; vzeroupper; ret; 
0x0000000000445f06: mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x000000000045962d: mov word ptr [rdi], si; ret; 
0x0000000000454f68: mov word ptr [rdx + 4], ax; lea rax, [rdx + 5]; ret; 
0x0000000000450c28: mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x0000000000452a78: mov word ptr [rdx + 4], ax; mov rax, rdi; sub r8, 6; lea rcx, [rdx + 6]; jne 0x52d30; ret; 
0x0000000000454f13: mov word ptr [rdx], ax; lea rax, [rdx + 1]; ret; 
0x0000000000454f23: mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; lea rax, [rdx + 2]; ret; 
0x0000000000450bf3: mov word ptr [rdx], ax; mov al, byte ptr [rcx + 2]; mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x0000000000450be3: mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x00000000004529f3: mov word ptr [rdx], ax; mov rax, rdi; sub r8, 2; lea rcx, [rdx + 2]; jne 0x52d30; ret; 
0x0000000000459339: mov word ptr [rsi - 2], cx; ret; 
0x0000000000459627: mov word ptr ss:[rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x000000000040a3bc: movabs al, byte ptr [0x28ff81000000]; jne 0xa4a0; mov rax, 0x4decc0; ret; 
0x0000000000480d37: movabs al, byte ptr [0x30788348000000]; je 0x80d48; ret; 
0x000000000042168c: movabs al, byte ptr [0x3bc0c5c749000005]; add byte ptr [rax - 0x39], r9b; ret; 
0x0000000000427893: movabs al, byte ptr [0x48ffffffff000000]; mov dword ptr [rdi + 0xa8], 0; ret; 
0x0000000000459b0b: movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x0000000000496c54: movabs al, byte ptr [0x8304768b41000000]; ret; 
0x0000000000496c80: movabs al, byte ptr [0x8324348b41000000]; ret; 
0x00000000004788b3: movabs al, byte ptr [0x852c8d4c000000]; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x0000000000408800: movabs al, byte ptr [0xb098110f000000]; add byte ptr [rax], al; movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x0000000000497e9c: movabs al, byte ptr [0xd1810589480004d1]; add al, 0; add rsp, 8; ret; 
0x0000000000420646: movabs al, byte ptr [0xe08a8948000000]; add byte ptr [rax], al; ret; 
0x0000000000437dfc: movabs al, byte ptr [0xf10eb834900000c]; xchg dl, bl; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004a78ae: movabs byte ptr [0x48000000000003d5], al; add esp, 8; ret; 
0x00000000004380fa: movabs byte ptr [0xf10eb8349000009], al; xchg ah, bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004a5c0b: movabs dword ptr [0x415d5be0894cffb5], eax; pop rsp; ret; 
0x000000000040b499: movabs dword ptr [0x8d48001f0f000026], eax; add eax, 0x9e078; ret; 
0x0000000000424b99: movabs dword ptr [0xc08d8b000bf1], eax; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x000000000047fd32: movabs dword ptr [0xc483480000441f0f], eax; or byte ptr [rax - 1], bh; pop rbx; pop rbp; ret; 
0x000000000044f090: movabs eax, dword ptr [0x77f8c5e0075c7f7e]; ret; 
0x000000000044f115: movabs eax, dword ptr [0x77f8c5f007447f7a]; ret; 
0x000000000044f070: movabs eax, dword ptr [0x77f8c5f0075c7f7a]; ret; 
0x0000000000498216: movabs eax, dword ptr [0x8b480389d231ffff]; sbb byte ptr [r8 - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x950f; 
0x000000000040884e: movabs eax, dword ptr [0xc01901387f830f75]; and eax, 0xffffffea; ret; 
0x000000000047469f: movabs r11, 0xfff6f8958b480000; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x000000000043a948: movabs rbp, 0xf66d1ef0f66bdb2; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043aa48: movabs rsp, 0xf66d1ef0f66bcb2; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000464eff: movd mm1, esi; movd xmm3, eax; punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups xmmword ptr [rdx + 0x48], xmm0; ret; 
0x0000000000464f03: movd mm3, eax; punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups xmmword ptr [rdx + 0x48], xmm0; ret; 
0x0000000000464efe: movd xmm1, esi; movd xmm3, eax; punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups xmmword ptr [rdx + 0x48], xmm0; ret; 
0x0000000000464f02: movd xmm3, eax; punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups xmmword ptr [rdx + 0x48], xmm0; ret; 
0x00000000004561c0: movdqu xmm0, xmmword ptr [rsi]; mov cl, byte ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], cl; ret; 
0x0000000000456b90: movdqu xmm0, xmmword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004554e0: movdqu xmm0, xmmword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000456bd0: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x0000000000455520: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000455510: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000456bb0: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x0000000000455500: movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000456c50: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x00000000004555a0: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000455580: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000456c10: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x0000000000455540: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000456c30: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000455560: movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000455680: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000456cf0: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000455620: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000456d10: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x0000000000455640: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000455660: movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000456b70: movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x0000000000456b80: movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x00000000004554d0: movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x00000000004554c0: movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000455e10: movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; sub r8, 0x10; lea rdi, [rdi + 0x10]; jne 0x564f0; ret; 
0x0000000000455684: movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000456cf4: movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000455624: movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000456d14: movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x0000000000455644: movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000455664: movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000442ba1: movdqu xmmword ptr [rdi + 0x10], xmm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045a306: movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x0000000000456d5d: movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, [rdi + 0x1f]; ret; 
0x00000000004563a0: movdqu xmmword ptr [rdi + 0x10], xmm2; mov byte ptr [rdi + 0x20], cl; ret; 
0x000000000045568d: movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000443211: movdqu xmmword ptr [rdi + 0x11], xmm0; lddqu xmm0, xmmword ptr [rsi + 1]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004431a1: movdqu xmmword ptr [rdi + 0x12], xmm0; lddqu xmm0, xmmword ptr [rsi + 2]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000443131: movdqu xmmword ptr [rdi + 0x13], xmm0; lddqu xmm0, xmmword ptr [rsi + 3]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004430c1: movdqu xmmword ptr [rdi + 0x14], xmm0; lddqu xmm0, xmmword ptr [rsi + 4]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000443051: movdqu xmmword ptr [rdi + 0x15], xmm0; lddqu xmm0, xmmword ptr [rsi + 5]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442fe1: movdqu xmmword ptr [rdi + 0x16], xmm0; lddqu xmm0, xmmword ptr [rsi + 6]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442f71: movdqu xmmword ptr [rdi + 0x17], xmm0; lddqu xmm0, xmmword ptr [rsi + 7]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442f01: movdqu xmmword ptr [rdi + 0x18], xmm0; lddqu xmm0, xmmword ptr [rsi + 8]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442e91: movdqu xmmword ptr [rdi + 0x19], xmm0; lddqu xmm0, xmmword ptr [rsi + 9]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442e21: movdqu xmmword ptr [rdi + 0x1a], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xa]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442db1: movdqu xmmword ptr [rdi + 0x1b], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xb]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442d41: movdqu xmmword ptr [rdi + 0x1c], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xc]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442cd1: movdqu xmmword ptr [rdi + 0x1d], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xd]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442c61: movdqu xmmword ptr [rdi + 0x1e], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xe]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442bf1: movdqu xmmword ptr [rdi + 0x1f], xmm0; lddqu xmm0, xmmword ptr [rsi + 0xf]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442b97: movdqu xmmword ptr [rdi + 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi + 0x10], xmm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x00000000004565e4: movdqu xmmword ptr [rdi + 0x20], xmm6; sub r8, 0x10; jb 0x55b99; movdqu xmmword ptr [rdi + 0x30], xmm7; ret; 
0x00000000004565f3: movdqu xmmword ptr [rdi + 0x30], xmm7; ret; 
0x0000000000442e2f: movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442dbf: movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442d4f: movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442cdf: movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000456cfd: movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x000000000045562d: movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000455ffd: movdqu xmmword ptr [rdi + 0xd], xmm2; sub r8, 0x1d; lea rdi, [rdi + 0x1d]; jne 0x564f0; ret; 
0x0000000000442c6f: movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000456d1d: movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x000000000045564d: movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x000000000045602d: movdqu xmmword ptr [rdi + 0xe], xmm2; sub r8, 0x1e; lea rdi, [rdi + 0x1e]; jne 0x564f0; ret; 
0x0000000000442bff: movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000456d3d: movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, [rdi + 0x1e]; ret; 
0x000000000045566d: movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x000000000045605d: movdqu xmmword ptr [rdi + 0xf], xmm2; sub r8, 0x1f; lea rdi, [rdi + 0x1f]; jne 0x564f0; ret; 
0x000000000044321f: movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004431af: movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000044313f: movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004430cf: movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000044305f: movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442fef: movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442f7f: movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442f0f: movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442e9f: movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000045a30b: movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000045a27c: movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045a311: movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000044238b: movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x00000000004423fb: movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442b36: movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442ab6: movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442a26: movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004429a6: movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442926: movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004428a6: movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442826: movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004427a6: movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442726: movdqu xmmword ptr [rdi - 0x19], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004426a6: movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442626: movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004425a6: movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442516: movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442486: movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004423f6: movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442381: movdqu xmmword ptr [rdi - 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x0000000000442b27: movdqu xmmword ptr [rdi - 0x21], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x11]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442aa7: movdqu xmmword ptr [rdi - 0x22], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x12]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442a17: movdqu xmmword ptr [rdi - 0x23], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x13]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442997: movdqu xmmword ptr [rdi - 0x24], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x14]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442917: movdqu xmmword ptr [rdi - 0x25], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x15]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442897: movdqu xmmword ptr [rdi - 0x26], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x16]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442817: movdqu xmmword ptr [rdi - 0x27], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x17]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442797: movdqu xmmword ptr [rdi - 0x28], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x18]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442697: movdqu xmmword ptr [rdi - 0x2a], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1a]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442617: movdqu xmmword ptr [rdi - 0x2b], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1b]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442597: movdqu xmmword ptr [rdi - 0x2c], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1c]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442507: movdqu xmmword ptr [rdi - 0x2d], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1d]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442477: movdqu xmmword ptr [rdi - 0x2e], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1e]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004423e7: movdqu xmmword ptr [rdi - 0x2f], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x1f]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442377: movdqu xmmword ptr [rdi - 0x30], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x20]; movdqu xmmword ptr [rdi - 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x00000000004564a0: movdqu xmmword ptr [rdi - 1], xmm0; ret; 
0x0000000000456b74: movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x00000000004561c7: movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], cl; ret; 
0x0000000000456b84: movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x00000000004554d4: movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x0000000000455e34: movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; sub r8, 0x11; lea rdi, [rdi + 0x11]; jne 0x564f0; ret; 
0x0000000000456bd7: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x0000000000456bf7: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x0000000000455527: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x000000000045621a: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dl; ret; 
0x0000000000455517: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000455e97: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; sub r8, 0x14; lea rdi, [rdi + 0x14]; jne 0x564f0; ret; 
0x0000000000456bb7: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x0000000000455507: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000455e77: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; sub r8, 0x13; lea rdi, [rdi + 0x13]; jne 0x564f0; ret; 
0x0000000000456c58: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000456c78: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x00000000004555a8: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000455588: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000455f18: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; sub r8, 0x18; lea rdi, [rdi + 0x18]; jne 0x564f0; ret; 
0x000000000045629b: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov byte ptr [rdi + 0x18], cl; ret; 
0x0000000000456cbb: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x00000000004555eb: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000456cdb: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x000000000045560b: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000456c9c: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004555cc: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000456c18: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x0000000000455548: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000455ed8: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; sub r8, 0x16; lea rdi, [rdi + 0x16]; jne 0x564f0; ret; 
0x0000000000456c38: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000455568: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000455ef8: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; sub r8, 0x17; lea rdi, [rdi + 0x17]; jne 0x564f0; ret; 
0x0000000000456b98: movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004554e8: movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000455e58: movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; sub r8, 0x12; lea rdi, [rdi + 0x12]; jne 0x564f0; ret; 
0x000000000045a302: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x0000000000456d59: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, [rdi + 0x1f]; ret; 
0x000000000045639c: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; mov byte ptr [rdi + 0x20], cl; ret; 
0x0000000000455689: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000456cf9: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000455629: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000455ff9: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; sub r8, 0x1d; lea rdi, [rdi + 0x1d]; jne 0x564f0; ret; 
0x0000000000456d19: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x0000000000455649: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000456029: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; sub r8, 0x1e; lea rdi, [rdi + 0x1e]; jne 0x564f0; ret; 
0x0000000000456d39: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, [rdi + 0x1e]; ret; 
0x0000000000455669: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000456059: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; sub r8, 0x1f; lea rdi, [rdi + 0x1f]; jne 0x564f0; ret; 
0x0000000000442baa: movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000455e14: movdqu xmmword ptr [rdi], xmm0; sub r8, 0x10; lea rdi, [rdi + 0x10]; jne 0x564f0; ret; 
0x0000000000442c04: movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000049e9cf: movhps xmm0, qword ptr [rsp - 0x18]; movups xmmword ptr [rdi], xmm0; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x0000000000428538: movntps xmmword ptr [rax + 0x18], xmm2; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x00000000004561c1: movq mm0, qword ptr [rsi]; mov cl, byte ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], cl; ret; 
0x0000000000456b91: movq mm0, qword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004554e1: movq mm0, qword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000456bd1: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x0000000000455521: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000455511: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000456bb1: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x0000000000455501: movq mm0, qword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000456c51: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x00000000004555a1: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000455581: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000456c11: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x0000000000455541: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000456c31: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000455561: movq mm0, qword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000455681: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000456cf1: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000455621: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000456d11: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x0000000000455641: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000455661: movq mm0, qword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000456b71: movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x0000000000456b81: movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x00000000004554d1: movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x00000000004554c1: movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000455e11: movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; sub r8, 0x10; lea rdi, [rdi + 0x10]; jne 0x564f0; ret; 
0x0000000000455685: movq mm2, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000456cf5: movq mm2, qword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000455625: movq mm2, qword ptr [rsi + 0xd]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000456d15: movq mm2, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x0000000000455645: movq mm2, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000455665: movq mm2, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000442ba2: movq qword ptr [rdi + 0x10], mm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045a307: movq qword ptr [rdi + 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x0000000000456d5e: movq qword ptr [rdi + 0x10], mm2; lea rax, [rdi + 0x1f]; ret; 
0x00000000004563a1: movq qword ptr [rdi + 0x10], mm2; mov byte ptr [rdi + 0x20], cl; ret; 
0x000000000045568e: movq qword ptr [rdi + 0x10], mm2; ret; 
0x0000000000443212: movq qword ptr [rdi + 0x11], mm0; lddqu xmm0, xmmword ptr [rsi + 1]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 1], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004431a2: movq qword ptr [rdi + 0x12], mm0; lddqu xmm0, xmmword ptr [rsi + 2]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 2], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000443132: movq qword ptr [rdi + 0x13], mm0; lddqu xmm0, xmmword ptr [rsi + 3]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 3], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004430c2: movq qword ptr [rdi + 0x14], mm0; lddqu xmm0, xmmword ptr [rsi + 4]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 4], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000443052: movq qword ptr [rdi + 0x15], mm0; lddqu xmm0, xmmword ptr [rsi + 5]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442fe2: movq qword ptr [rdi + 0x16], mm0; lddqu xmm0, xmmword ptr [rsi + 6]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442f72: movq qword ptr [rdi + 0x17], mm0; lddqu xmm0, xmmword ptr [rsi + 7]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442f02: movq qword ptr [rdi + 0x18], mm0; lddqu xmm0, xmmword ptr [rsi + 8]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 8], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442e92: movq qword ptr [rdi + 0x19], mm0; lddqu xmm0, xmmword ptr [rsi + 9]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 9], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442e22: movq qword ptr [rdi + 0x1a], mm0; lddqu xmm0, xmmword ptr [rsi + 0xa]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xa], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442db2: movq qword ptr [rdi + 0x1b], mm0; lddqu xmm0, xmmword ptr [rsi + 0xb]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xb], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442d42: movq qword ptr [rdi + 0x1c], mm0; lddqu xmm0, xmmword ptr [rsi + 0xc]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xc], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442cd2: movq qword ptr [rdi + 0x1d], mm0; lddqu xmm0, xmmword ptr [rsi + 0xd]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442c62: movq qword ptr [rdi + 0x1e], mm0; lddqu xmm0, xmmword ptr [rsi + 0xe]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442bf2: movq qword ptr [rdi + 0x1f], mm0; lddqu xmm0, xmmword ptr [rsi + 0xf]; lddqu xmm1, xmmword ptr [rsi]; movdqu xmmword ptr [rdi + 0xf], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442b98: movq qword ptr [rdi + 0x20], mm0; lddqu xmm0, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi + 0x10], xmm0; lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x00000000004565e5: movq qword ptr [rdi + 0x20], mm6; sub r8, 0x10; jb 0x55b99; movdqu xmmword ptr [rdi + 0x30], xmm7; ret; 
0x00000000004565f4: movq qword ptr [rdi + 0x30], mm7; ret; 
0x0000000000442e30: movq qword ptr [rdi + 0xa], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442dc0: movq qword ptr [rdi + 0xb], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442d50: movq qword ptr [rdi + 0xc], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442ce0: movq qword ptr [rdi + 0xd], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000456cfe: movq qword ptr [rdi + 0xd], mm2; lea rax, [rdi + 0x1c]; ret; 
0x000000000045562e: movq qword ptr [rdi + 0xd], mm2; ret; 
0x0000000000455ffe: movq qword ptr [rdi + 0xd], mm2; sub r8, 0x1d; lea rdi, [rdi + 0x1d]; jne 0x564f0; ret; 
0x0000000000442c70: movq qword ptr [rdi + 0xe], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000456d1e: movq qword ptr [rdi + 0xe], mm2; lea rax, [rdi + 0x1d]; ret; 
0x000000000045564e: movq qword ptr [rdi + 0xe], mm2; ret; 
0x000000000045602e: movq qword ptr [rdi + 0xe], mm2; sub r8, 0x1e; lea rdi, [rdi + 0x1e]; jne 0x564f0; ret; 
0x0000000000442c00: movq qword ptr [rdi + 0xf], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000456d3e: movq qword ptr [rdi + 0xf], mm2; lea rax, [rdi + 0x1e]; ret; 
0x000000000045566e: movq qword ptr [rdi + 0xf], mm2; ret; 
0x000000000045605e: movq qword ptr [rdi + 0xf], mm2; sub r8, 0x1f; lea rdi, [rdi + 0x1f]; jne 0x564f0; ret; 
0x0000000000443220: movq qword ptr [rdi + 1], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004431b0: movq qword ptr [rdi + 2], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000443140: movq qword ptr [rdi + 3], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004430d0: movq qword ptr [rdi + 4], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000443060: movq qword ptr [rdi + 5], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442ff0: movq qword ptr [rdi + 6], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442f80: movq qword ptr [rdi + 7], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442f10: movq qword ptr [rdi + 8], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442ea0: movq qword ptr [rdi + 9], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000045a30c: movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x000000000045a27d: movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000045a312: movq qword ptr [rdi + rdx - 0x20], mm0; ret; 
0x000000000044238c: movq qword ptr [rdi - 0x10], mm0; ret; 
0x00000000004423fc: movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000442b37: movq qword ptr [rdi - 0x11], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442ab7: movq qword ptr [rdi - 0x12], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442a27: movq qword ptr [rdi - 0x13], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004429a7: movq qword ptr [rdi - 0x14], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442927: movq qword ptr [rdi - 0x15], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004428a7: movq qword ptr [rdi - 0x16], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442827: movq qword ptr [rdi - 0x17], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004427a7: movq qword ptr [rdi - 0x18], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442727: movq qword ptr [rdi - 0x19], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004426a7: movq qword ptr [rdi - 0x1a], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442627: movq qword ptr [rdi - 0x1b], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004425a7: movq qword ptr [rdi - 0x1c], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442517: movq qword ptr [rdi - 0x1d], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442487: movq qword ptr [rdi - 0x1e], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004423f7: movq qword ptr [rdi - 0x1f], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442382: movq qword ptr [rdi - 0x20], mm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x0000000000442b28: movq qword ptr [rdi - 0x21], mm0; lddqu xmm0, xmmword ptr [rsi - 0x11]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442aa8: movq qword ptr [rdi - 0x22], mm0; lddqu xmm0, xmmword ptr [rsi - 0x12]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442a18: movq qword ptr [rdi - 0x23], mm0; lddqu xmm0, xmmword ptr [rsi - 0x13]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x13], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442998: movq qword ptr [rdi - 0x24], mm0; lddqu xmm0, xmmword ptr [rsi - 0x14]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x14], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442918: movq qword ptr [rdi - 0x25], mm0; lddqu xmm0, xmmword ptr [rsi - 0x15]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442898: movq qword ptr [rdi - 0x26], mm0; lddqu xmm0, xmmword ptr [rsi - 0x16]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442818: movq qword ptr [rdi - 0x27], mm0; lddqu xmm0, xmmword ptr [rsi - 0x17]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442798: movq qword ptr [rdi - 0x28], mm0; lddqu xmm0, xmmword ptr [rsi - 0x18]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442698: movq qword ptr [rdi - 0x2a], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1a]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1a], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442618: movq qword ptr [rdi - 0x2b], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1b]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1b], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442598: movq qword ptr [rdi - 0x2c], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1c]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1c], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442508: movq qword ptr [rdi - 0x2d], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1d]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442478: movq qword ptr [rdi - 0x2e], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1e]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x00000000004423e8: movq qword ptr [rdi - 0x2f], mm0; lddqu xmm0, xmmword ptr [rsi - 0x1f]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x1f], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000442378: movq qword ptr [rdi - 0x30], mm0; lddqu xmm0, xmmword ptr [rsi - 0x20]; movdqu xmmword ptr [rdi - 0x20], xmm0; lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x00000000004564a1: movq qword ptr [rdi - 1], mm0; ret; 
0x0000000000456b75: movq qword ptr [rdi], mm0; lea rax, [rdi + 0xf]; ret; 
0x00000000004561c8: movq qword ptr [rdi], mm0; mov byte ptr [rdi + 0x10], cl; ret; 
0x0000000000456b85: movq qword ptr [rdi], mm0; mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x00000000004554d5: movq qword ptr [rdi], mm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x0000000000455e35: movq qword ptr [rdi], mm0; mov byte ptr [rdi + 0x10], dh; sub r8, 0x11; lea rdi, [rdi + 0x11]; jne 0x564f0; ret; 
0x0000000000456bd8: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x0000000000456bf8: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x0000000000455528: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x000000000045621b: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dl; ret; 
0x0000000000455518: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000455e98: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; sub r8, 0x14; lea rdi, [rdi + 0x14]; jne 0x564f0; ret; 
0x0000000000456bb8: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x0000000000455508: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000455e78: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0xf], ecx; sub r8, 0x13; lea rdi, [rdi + 0x13]; jne 0x564f0; ret; 
0x0000000000456c59: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x0000000000456c79: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x00000000004555a9: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000455589: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000455f19: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; sub r8, 0x18; lea rdi, [rdi + 0x18]; jne 0x564f0; ret; 
0x000000000045629c: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov byte ptr [rdi + 0x18], cl; ret; 
0x0000000000456cbc: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x00000000004555ec: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000456cdc: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x000000000045560c: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000456c9d: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004555cd: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000456c19: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x0000000000455549: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000455ed9: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xe], rcx; sub r8, 0x16; lea rdi, [rdi + 0x16]; jne 0x564f0; ret; 
0x0000000000456c39: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000455569: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000455ef9: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xf], rcx; sub r8, 0x17; lea rdi, [rdi + 0x17]; jne 0x564f0; ret; 
0x0000000000456b99: movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x00000000004554e9: movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000455e59: movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; sub r8, 0x12; lea rdi, [rdi + 0x12]; jne 0x564f0; ret; 
0x000000000045a303: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x0000000000456d5a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, [rdi + 0x1f]; ret; 
0x000000000045639d: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; mov byte ptr [rdi + 0x20], cl; ret; 
0x000000000045568a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000456cfa: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x000000000045562a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000455ffa: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xd], xmm2; sub r8, 0x1d; lea rdi, [rdi + 0x1d]; jne 0x564f0; ret; 
0x0000000000456d1a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x000000000045564a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x000000000045602a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xe], xmm2; sub r8, 0x1e; lea rdi, [rdi + 0x1e]; jne 0x564f0; ret; 
0x0000000000456d3a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, [rdi + 0x1e]; ret; 
0x000000000045566a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x000000000045605a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xf], xmm2; sub r8, 0x1f; lea rdi, [rdi + 0x1f]; jne 0x564f0; ret; 
0x0000000000442bab: movq qword ptr [rdi], mm0; ret; 
0x0000000000455e15: movq qword ptr [rdi], mm0; sub r8, 0x10; lea rdi, [rdi + 0x10]; jne 0x564f0; ret; 
0x0000000000442c05: movq qword ptr [rdi], mm1; ret; 
0x0000000000471de8: movsb byte ptr [rdi], byte ptr [rsi]; clc; dec dword ptr [rax - 0x77]; ret 0x8948; 
0x000000000045957e: movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x0000000000459570: movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000479e95: movsd dword ptr [rdi], dword ptr [rsi]; clc; idiv bh; dec dword ptr [rbp + 0x63]; ret; 
0x0000000000410d33: movsd dword ptr [rdi], dword ptr [rsi]; or eax, 0x200000; add dh, dh; ret 0x7440; 
0x0000000000412827: movsd dword ptr [rdi], dword ptr [rsi]; ret 1; 
0x000000000049d0a2: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x00000000004a165c: movss xmm0, dword ptr [rip + 0x2ec14]; divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x0000000000490d30: movsx eax, dl; neg eax; ret; 
0x000000000049588e: movsx ecx, byte ptr [rsi]; cmp edi, ecx; ja 0x95878; mov eax, r8d; ret; 
0x0000000000498877: movsxd rax, dword ptr [rax]; adc dh, byte ptr [rbx - 0xc]; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000045f905: movsxd rax, dword ptr [rax]; add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5f914; ret; 
0x000000000041095c: movsxd rax, dword ptr [rcx + rax*4]; add rax, rdx; ret; 
0x00000000004595e1: movsxd rax, dword ptr [rcx]; add byte ptr [rax], al; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000452ac9: movsxd rax, dword ptr [rdx]; add byte ptr [rax], al; ret; 
0x000000000048cd63: movsxd rax, dword ptr [rip + 0x4b8b4800]; adc byte ptr [rax - 0x77], cl; ret 0xf748; 
0x000000000048f141: movsxd rax, dword ptr [rip - 0x3f76b400]; ret; 
0x000000000045916f: movsxd rax, ecx; ret; 
0x000000000044b7db: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044d438: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x000000000044cc58: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x000000000044d048: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c868: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c33b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044bb1b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x000000000044b2fb: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x000000000044ca07: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044be5b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044b63b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044ae1b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000044bffb: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x000000000044cef8: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c718: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044d828: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044b15b: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044b291: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bf91: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bab1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044cdf9: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044d729: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044c2d1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044b5d1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x000000000044b0f1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bdf1: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x000000000044cf49: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044c769: movsxd rax, ecx; sbb cl, byte ptr [rdi]; xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004912e6: movsxd rbp, dword ptr [rip + 0x3349646c]; add byte ptr [rax + 9], cl; ret 0x4475; 
0x0000000000498820: movsxd rbx, ebx; cmp ch, byte ptr [rcx]; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x000000000045921b: movsxd rbx, ebx; cmp cl, byte ptr [rax + 0x63]; leave; add rax, rcx; sub rax, rdi; ret; 
0x000000000040d169: movsxd rcx, dword ptr [rcx]; add byte ptr [rax], al; nop dword ptr [rax]; mov eax, 0xffffff94; ret; 
0x00000000004591a3: movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000004781c9: movsxd rdi, ebx; dec dword ptr [rcx - 0x77]; ret; 
0x000000000046fdac: movsxd rdi, edi; mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x0000000000410905: movsxd rsi, ebx; mov eax, dword ptr [rax + rsi]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045863c: movsxd rsi, esi; ret 0x7520; 
0x00000000004a165d: movups xmm0, xmmword ptr [rip + 0x2ec14]; divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x00000000004594fb: movups xmm0, xmmword ptr [rsi]; movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x00000000004594fe: movups xmm1, xmmword ptr [rsi + rdx - 0x10]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000045969c: movups xmm3, xmmword ptr [rsi + rdx - 0x20]; movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x0000000000459743: movups xmmword ptr [r11], xmm4; ret; 
0x00000000004597ca: movups xmmword ptr [r11], xmm8; ret; 
0x0000000000480d9a: movups xmmword ptr [rax + 0x30], xmm0; mov dword ptr [rbx + 0x74], edx; pop rbx; pop rbp; pop r12; ret; 
0x0000000000481559: movups xmmword ptr [rax + 0x40], xmm0; pop rbx; ret; 
0x00000000004087fd: movups xmmword ptr [rax + 0xa0], xmm2; movups xmmword ptr [rax + 0xb0], xmm3; movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x0000000000408804: movups xmmword ptr [rax + 0xb0], xmm3; movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x000000000040880b: movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x0000000000480742: movups xmmword ptr [rax], xmm0; ret; 
0x0000000000429288: movups xmmword ptr [rbp + 0x28], xmm1; add rsp, 0x10; pop rbx; pop rbp; pop r12; ret; 
0x00000000004275de: movups xmmword ptr [rbp + 0x38], xmm0; pop rbp; pop r12; ret; 
0x0000000000423472: movups xmmword ptr [rbx + 0x18], xmm0; movups xmmword ptr [rbx + 0x28], xmm0; pop rbx; ret; 
0x0000000000423476: movups xmmword ptr [rbx + 0x28], xmm0; pop rbx; ret; 
0x0000000000426dce: movups xmmword ptr [rbx + 0x38], xmm0; mov dword ptr [rbx], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000426e75: movups xmmword ptr [rbx + 0x38], xmm0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000426964: movups xmmword ptr [rbx + 0x48], xmm0; pop rbx; ret; 
0x000000000042346e: movups xmmword ptr [rbx + 8], xmm0; movups xmmword ptr [rbx + 0x18], xmm0; movups xmmword ptr [rbx + 0x28], xmm0; pop rbx; ret; 
0x00000000004238b5: movups xmmword ptr [rbx + 8], xmm0; pop rbx; ret; 
0x0000000000490cdd: movups xmmword ptr [rbx], xmm0; pop rbx; ret; 
0x00000000004597cb: movups xmmword ptr [rbx], xmm0; ret; 
0x0000000000459744: movups xmmword ptr [rbx], xmm4; ret; 
0x0000000000427873: movups xmmword ptr [rcx + 0x10], xmm0; movups xmmword ptr [rcx + 0x20], xmm0; movups xmmword ptr [rcx + 0x30], xmm0; movups xmmword ptr [rcx + 0x40], xmm0; mov qword ptr [rdi + 0xa8], 0; ret; 
0x0000000000427877: movups xmmword ptr [rcx + 0x20], xmm0; movups xmmword ptr [rcx + 0x30], xmm0; movups xmmword ptr [rcx + 0x40], xmm0; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000042787b: movups xmmword ptr [rcx + 0x30], xmm0; movups xmmword ptr [rcx + 0x40], xmm0; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000042787f: movups xmmword ptr [rcx + 0x40], xmm0; mov qword ptr [rdi + 0xa8], 0; ret; 
0x0000000000459736: movups xmmword ptr [rcx - 0x10], xmm6; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000045973a: movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x000000000045973f: movups xmmword ptr [rcx - 0x30], xmm0; movups xmmword ptr [r11], xmm4; ret; 
0x000000000045973e: movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x0000000000459733: movups xmmword ptr [rcx], xmm5; movups xmmword ptr [rcx - 0x10], xmm6; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x00000000004596a4: movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x00000000004597be: movups xmmword ptr [rdi + 0x10], xmm5; movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x00000000004597c2: movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x00000000004597c6: movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x00000000004277c4: movups xmmword ptr [rdi + 0x58], xmm0; test rax, rax; je 0x277dc; mov qword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x000000000042768e: movups xmmword ptr [rdi + 0xa0], xmm0; ret; 
0x000000000042687b: movups xmmword ptr [rdi + 8], xmm0; ret; 
0x0000000000459506: movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x00000000004596a8: movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x000000000045967b: movups xmmword ptr [rdi + rdx - 0x10], xmm4; movups xmmword ptr [rdi + rdx - 0x20], xmm5; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x00000000004596ad: movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x0000000000459680: movups xmmword ptr [rdi + rdx - 0x20], xmm5; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x0000000000459685: movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000045968a: movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x000000000049e9d4: movups xmmword ptr [rdi], xmm0; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x00000000004596a1: movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + 0x10], xmm1; movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x0000000000459503: movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x00000000004597bb: movups xmmword ptr [rdi], xmm4; movups xmmword ptr [rdi + 0x10], xmm5; movups xmmword ptr [rdi + 0x20], xmm6; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x0000000000464f0e: movups xmmword ptr [rdx + 0x48], xmm0; ret; 
0x0000000000485035: movzx eax, al; add rsp, 0x58; ret; 
0x000000000049eb70: movzx eax, al; neg eax; ret; 
0x000000000049822d: movzx eax, al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000439474: movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x0000000000434a12: movzx eax, byte ptr [rax + rcx + 0x40]; movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000043492c: movzx eax, byte ptr [rax + rcx + 0x60]; movzx edx, byte ptr [rdx + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000043339d: movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x00000000004348c7: movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000004348f0: movzx eax, byte ptr [rax + rdi + 0x20]; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000434910: movzx eax, byte ptr [rax + rdi + 0x40]; movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000438d27: movzx eax, byte ptr [rax + rdi]; movzx edx, byte ptr [rdx + rdi]; sub eax, edx; vzeroupper; ret; 
0x00000000004279df: movzx eax, byte ptr [rax - 1]; and dword ptr [rbx], 0xffffffef; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004a48dc: movzx eax, byte ptr [rax]; add rsp, 0x18; pop rbx; pop rbp; mov eax, r8d; ret; 
0x0000000000426b80: movzx eax, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004289b3: movzx eax, byte ptr [rax]; ret; 
0x0000000000439b24: movzx eax, byte ptr [rdi + rcx + 0x20]; movzx edx, byte ptr [rsi + rcx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000439b44: movzx eax, byte ptr [rdi + rcx + 0x40]; movzx edx, byte ptr [rsi + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000439b0a: movzx eax, byte ptr [rdi + rcx + 0x60]; movzx edx, byte ptr [rsi + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000437c84: movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x0000000000439894: movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000434764: movzx eax, byte ptr [rdi + rdx + 0x20]; movzx edx, byte ptr [rsi + rdx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000434784: movzx eax, byte ptr [rdi + rdx + 0x40]; movzx edx, byte ptr [rsi + rdx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000004347a4: movzx eax, byte ptr [rdi + rdx + 0x60]; movzx edx, byte ptr [rsi + rdx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000044da88: movzx eax, byte ptr [rdi + rdx]; lea rdx, [rip + 0x6d2ad]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044c408: movzx eax, byte ptr [rdi + rdx]; lea rdx, [rip + 0x6e92d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044a858: movzx eax, byte ptr [rdi + rdx]; lea rdx, [rip + 0x704dd]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x00000000004486f8: movzx eax, byte ptr [rdi + rdx]; lea rdx, [rip + 0x7263d]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000433233: movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x000000000043474a: movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x00000000004331c8: movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000458660: movzx eax, byte ptr [rdi - 0x10]; movzx edx, byte ptr [rsi - 0x10]; sub eax, edx; ret; 
0x00000000004586c0: movzx eax, byte ptr [rdi - 0xa]; movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x00000000004586b0: movzx eax, byte ptr [rdi - 0xb]; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x00000000004586a0: movzx eax, byte ptr [rdi - 0xc]; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x0000000000458690: movzx eax, byte ptr [rdi - 0xd]; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x0000000000458680: movzx eax, byte ptr [rdi - 0xe]; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x0000000000458670: movzx eax, byte ptr [rdi - 0xf]; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x0000000000458a1a: movzx eax, byte ptr [rdi - 1]; cmp al, byte ptr [rsi - 1]; jne 0x58b95; xor eax, eax; ret; 
0x000000000043aa30: movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x000000000043a7e3: movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x0000000000458647: movzx eax, byte ptr [rdi - 9]; movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x000000000044daa3: movzx eax, byte ptr [rdi]; lea rdx, [rip + 0x6d293]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x000000000044c423: movzx eax, byte ptr [rdi]; lea rdx, [rip + 0x6e913]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000448713: movzx eax, byte ptr [rdi]; lea rdx, [rip + 0x72623]; mov ecx, dword ptr [rdx + rcx*4]; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000439910: movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000000439451: movzx eax, byte ptr [rdi]; movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x00000000004331e3: movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000000438ef3: movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x0000000000426ae0: movzx eax, byte ptr [rdx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045add6: movzx eax, byte ptr [rsi + rdx]; mov r9, rax; mov eax, dword ptr [rcx + rax*4]; sub eax, dword ptr [rcx + r8*4]; je 0x5adc8; ret; 
0x00000000004a7df0: movzx eax, byte ptr [rsp + 0xf]; add rsp, 0x10; pop rbx; ret; 
0x000000000045a7f0: movzx eax, cl; pop rbx; ret; 
0x000000000045a2b1: movzx eax, dh; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000464f85: movzx eax, dh; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000045a7a0: movzx eax, dl; and dh, 0xf0; mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x000000000045a2b0: movzx eax, sil; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000464f84: movzx eax, sil; test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0000000000458c9a: movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x58c90; ret; 
0x0000000000458d4a: movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x58d40; ret; 
0x000000000045900a: movzx ecx, byte ptr [rsi + rdx + 3]; test cl, cl; jne 0x59000; sub rax, 1; ret; 
0x00000000004331c4: movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000433486: movzx ecx, byte ptr [rsi + rdx]; test al, al; jne 0x33470; xor eax, eax; sub eax, ecx; ret; 
0x0000000000434a47: movzx ecx, byte ptr [rsi + rdx]; test eax, eax; jne 0x34a30; sub eax, ecx; vzeroupper; ret; 
0x0000000000438ecc: movzx ecx, byte ptr [rsi + rdx]; test eax, eax; jne 0x38eb0; sub eax, ecx; vzeroupper; ret; 
0x000000000043aa34: movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x00000000004595fc: movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x00000000004331e0: movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000000438ef0: movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; vzeroupper; ret; 
0x0000000000439913: movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000000459620: movzx ecx, word ptr [rsi + rdx - 2]; movzx esi, word ptr [rsi]; mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x0000000000457070: movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; lea rax, [rdi + 2]; vzeroupper; ret; 
0x000000000044e960: movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000044f000: movzx ecx, word ptr [rsi]; movzx edx, word ptr [rsi + r8 - 2]; mov word ptr [rdi], cx; mov word ptr [rdi + r8 - 2], dx; vzeroupper; ret; 
0x0000000000403175: movzx edi, bh; mov dword ptr [rip + 0xdef8a], edi; ret; 
0x0000000000403174: movzx edi, dil; mov dword ptr [rip + 0xdef8a], edi; ret; 
0x0000000000430510: movzx edx, byte ptr [rcx + rax]; cmp dl, r8b; jne 0x30500; sub rax, 0x10; ret; 
0x000000000041e0a8: movzx edx, byte ptr [rcx]; test dl, dl; jne 0x1e088; ret; 
0x0000000000434a17: movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000434931: movzx edx, byte ptr [rdx + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x00000000004333a1: movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x00000000004348cb: movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000004348f5: movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000434915: movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000438d2b: movzx edx, byte ptr [rdx + rdi]; sub eax, edx; vzeroupper; ret; 
0x0000000000458eba: movzx edx, byte ptr [rsi + rax + 3]; test dl, dl; jne 0x58eb0; lea rax, [rcx - 1]; ret; 
0x0000000000439b29: movzx edx, byte ptr [rsi + rcx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000439b49: movzx edx, byte ptr [rsi + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000439b0f: movzx edx, byte ptr [rsi + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x000000000044c63f: movzx edx, byte ptr [rsi + rcx]; lea rcx, [rip + 0x6e6f6]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000044aaff: movzx edx, byte ptr [rsi + rcx]; lea rcx, [rip + 0x70236]; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000437c88: movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x0000000000439898: movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000434769: movzx edx, byte ptr [rsi + rdx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000434789: movzx edx, byte ptr [rsi + rdx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000004347a9: movzx edx, byte ptr [rsi + rdx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000433237: movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x000000000043474e: movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x0000000000438ab3: movzx edx, byte ptr [rsi + rdx]; test r8d, r8d; je 0x38abd; xchg eax, edx; sub eax, edx; ret; 
0x0000000000458664: movzx edx, byte ptr [rsi - 0x10]; sub eax, edx; ret; 
0x00000000004586c4: movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x00000000004586b4: movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x00000000004586a4: movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x0000000000458694: movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x0000000000458684: movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x0000000000458674: movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x0000000000442b50: movzx edx, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043a7e7: movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x000000000045864b: movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x0000000000443230: movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x000000000044efe0: movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; vzeroupper; ret; 
0x0000000000439454: movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x000000000045a830: movzx edx, cl; mov eax, 0; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x000000000043947a: movzx edx, dl; sub eax, edx; ret; 
0x000000000044f003: movzx edx, word ptr [rsi + r8 - 2]; mov word ptr [rdi], cx; mov word ptr [rdi + r8 - 2], dx; vzeroupper; ret; 
0x000000000044f004: movzx edx, word ptr [rsi + rax - 2]; mov word ptr [rdi], cx; mov word ptr [rdi + r8 - 2], dx; vzeroupper; ret; 
0x0000000000442ad0: movzx edx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x0000000000457060: movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; lea rax, [rdi + 1]; vzeroupper; ret; 
0x00000000004431c0: movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000044e950: movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x0000000000403501: movzx esi, dh; mov dword ptr [rip + 0xdec16], esi; ret; 
0x00000000004034f1: movzx esi, dh; mov dword ptr [rip + 0xdec22], esi; ret; 
0x00000000004034e1: movzx esi, dh; mov dword ptr [rip + 0xdec26], esi; ret; 
0x00000000004034d1: movzx esi, dh; mov dword ptr [rip + 0xdec32], esi; ret; 
0x00000000004034c1: movzx esi, dh; mov dword ptr [rip + 0xdec5e], esi; ret; 
0x00000000004033a1: movzx esi, dh; mov dword ptr [rip + 0xded6a], esi; ret; 
0x0000000000403391: movzx esi, dh; mov dword ptr [rip + 0xded7e], esi; ret; 
0x0000000000403381: movzx esi, dh; mov dword ptr [rip + 0xded9a], esi; ret; 
0x0000000000403500: movzx esi, sil; mov dword ptr [rip + 0xdec16], esi; ret; 
0x00000000004034f0: movzx esi, sil; mov dword ptr [rip + 0xdec22], esi; ret; 
0x00000000004034e0: movzx esi, sil; mov dword ptr [rip + 0xdec26], esi; ret; 
0x00000000004034d0: movzx esi, sil; mov dword ptr [rip + 0xdec32], esi; ret; 
0x00000000004034c0: movzx esi, sil; mov dword ptr [rip + 0xdec5e], esi; ret; 
0x00000000004033a0: movzx esi, sil; mov dword ptr [rip + 0xded6a], esi; ret; 
0x0000000000403390: movzx esi, sil; mov dword ptr [rip + 0xded7e], esi; ret; 
0x0000000000403380: movzx esi, sil; mov dword ptr [rip + 0xded9a], esi; ret; 
0x0000000000459625: movzx esi, word ptr [rsi]; mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x0000000000438e9a: movzx r8d, byte ptr [r8 + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000004a48db: movzx r8d, byte ptr [rax]; add rsp, 0x18; pop rbx; pop rbp; mov eax, r8d; ret; 
0x000000000045add5: movzx r8d, byte ptr [rsi + rdx]; mov r9, rax; mov eax, dword ptr [rcx + rax*4]; sub eax, dword ptr [rcx + r8*4]; je 0x5adc8; ret; 
0x0000000000482d27: mul byte ptr [rsi + 0xf]; outsd dx, dword ptr [rsi]; push rdi; xor byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret; 
0x000000000045be3b: neg eax; mov dword ptr fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x000000000045bedf: neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000045c117: neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x0000000000404464: neg eax; pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000490d33: neg eax; ret; 
0x000000000048e525: neg eax; test cl, cl; cmove r8, rax; mov rax, r8; ret; 
0x000000000048e524: neg rax; test cl, cl; cmove r8, rax; mov rax, r8; ret; 
0x00000000004841e8: nop dword ptr [rax + rax]; add rax, 3; ret; 
0x000000000042eb58: nop dword ptr [rax + rax]; add rsp, 0x18; ret; 
0x000000000047fd33: nop dword ptr [rax + rax]; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x0000000000402e6b: nop dword ptr [rax + rax]; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000462bb3: nop dword ptr [rax + rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000408d1b: nop dword ptr [rax + rax]; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000439208: nop dword ptr [rax + rax]; bsf eax, eax; lea rax, [rax + rdi + 0x10]; ret; 
0x000000000049e98b: nop dword ptr [rax + rax]; bts rax, 0x30; mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x00000000004a4583: nop dword ptr [rax + rax]; cmp al, 0x50; jne 0xa45b3; xor eax, eax; add rsp, 8; ret; 
0x00000000004a45e3: nop dword ptr [rax + rax]; cmp al, 0x50; jne 0xa4613; xor eax, eax; add rsp, 8; ret; 
0x00000000004612fb: nop dword ptr [rax + rax]; endbr64; lea rax, [rip + 0x81f55]; ret; 
0x0000000000426ea8: nop dword ptr [rax + rax]; endbr64; mov eax, 0xffffffff; ret; 
0x000000000046fdbb: nop dword ptr [rax + rax]; endbr64; mov rax, -0x10; add rax, qword ptr fs:[0]; ret; 
0x0000000000411acb: nop dword ptr [rax + rax]; endbr64; mov rax, -0x40; add rax, qword ptr fs:[0]; ret; 
0x000000000042881b: nop dword ptr [rax + rax]; endbr64; mov rax, -1; ret; 
0x0000000000428878: nop dword ptr [rax + rax]; endbr64; mov rax, qword ptr [rdi + 0x68]; ret; 
0x000000000042971b: nop dword ptr [rax + rax]; endbr64; mov rax, qword ptr [rdi]; cmp rax, 0x2000000; jbe 0x29730; ret; 
0x000000000042935b: nop dword ptr [rax + rax]; endbr64; mov rax, qword ptr [rdi]; nop; mov qword ptr [rip + 0xb93f1], rax; ret; 
0x000000000046d1f8: nop dword ptr [rax + rax]; endbr64; mov rax, qword ptr [rip + 0x77c45]; ret; 
0x0000000000463848: nop dword ptr [rax + rax]; endbr64; mov rax, qword ptr [rip + 0x821ad]; ret; 
0x0000000000428858: nop dword ptr [rax + rax]; endbr64; mov rax, qword ptr [rip + 0xb98f5]; ret; 
0x000000000042884b: nop dword ptr [rax + rax]; endbr64; ret; 
0x00000000004278a8: nop dword ptr [rax + rax]; endbr64; xor eax, eax; ret; 
0x00000000004573e8: nop dword ptr [rax + rax]; lea rax, [rdi + 0xa]; ret; 
0x00000000004573f8: nop dword ptr [rax + rax]; lea rax, [rdi + 0xb]; ret; 
0x0000000000457408: nop dword ptr [rax + rax]; lea rax, [rdi + 0xc]; ret; 
0x0000000000457418: nop dword ptr [rax + rax]; lea rax, [rdi + 0xd]; ret; 
0x0000000000457428: nop dword ptr [rax + rax]; lea rax, [rdi + 0xe]; ret; 
0x0000000000457378: nop dword ptr [rax + rax]; lea rax, [rdi + 2]; ret; 
0x0000000000457388: nop dword ptr [rax + rax]; lea rax, [rdi + 3]; ret; 
0x0000000000457398: nop dword ptr [rax + rax]; lea rax, [rdi + 4]; ret; 
0x00000000004573a8: nop dword ptr [rax + rax]; lea rax, [rdi + 5]; ret; 
0x00000000004573b8: nop dword ptr [rax + rax]; lea rax, [rdi + 6]; ret; 
0x00000000004573c8: nop dword ptr [rax + rax]; lea rax, [rdi + 8]; ret; 
0x00000000004573d8: nop dword ptr [rax + rax]; lea rax, [rdi + 9]; ret; 
0x000000000040d7d8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9bd77]; ret; 
0x000000000040d7b8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9bd80]; ret; 
0x000000000040d7a8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9bd84]; ret; 
0x000000000040d798: nop dword ptr [rax + rax]; lea rax, [rip + 0x9bd8c]; ret; 
0x000000000040d7c8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9bd8e]; ret; 
0x000000000040d788: nop dword ptr [rax + rax]; lea rax, [rip + 0x9bd8f]; ret; 
0x000000000040d818: nop dword ptr [rax + rax]; lea rax, [rip + 0x9bdba]; ret; 
0x000000000040d778: nop dword ptr [rax + rax]; lea rax, [rip + 0x9bdcc]; ret; 
0x000000000040d808: nop dword ptr [rax + rax]; lea rax, [rip + 0x9bdd1]; ret; 
0x000000000040d7f8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9bde8]; ret; 
0x000000000040d7e8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9bdff]; ret; 
0x000000000040cc98: nop dword ptr [rax + rax]; lea rax, [rip + 0x9c8b7]; ret; 
0x000000000040cc78: nop dword ptr [rax + rax]; lea rax, [rip + 0x9c8c0]; ret; 
0x000000000040cc68: nop dword ptr [rax + rax]; lea rax, [rip + 0x9c8c4]; ret; 
0x000000000040cc58: nop dword ptr [rax + rax]; lea rax, [rip + 0x9c8cc]; ret; 
0x000000000040cc88: nop dword ptr [rax + rax]; lea rax, [rip + 0x9c8ce]; ret; 
0x000000000040cc48: nop dword ptr [rax + rax]; lea rax, [rip + 0x9c8cf]; ret; 
0x000000000040ccd8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9c8fa]; ret; 
0x000000000040cc38: nop dword ptr [rax + rax]; lea rax, [rip + 0x9c90c]; ret; 
0x000000000040ccc8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9c911]; ret; 
0x000000000040ccb8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9c928]; ret; 
0x000000000040cca8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9c93f]; ret; 
0x000000000040c158: nop dword ptr [rax + rax]; lea rax, [rip + 0x9d3f7]; ret; 
0x000000000040c138: nop dword ptr [rax + rax]; lea rax, [rip + 0x9d400]; ret; 
0x000000000040c128: nop dword ptr [rax + rax]; lea rax, [rip + 0x9d404]; ret; 
0x000000000040c118: nop dword ptr [rax + rax]; lea rax, [rip + 0x9d40c]; ret; 
0x000000000040c148: nop dword ptr [rax + rax]; lea rax, [rip + 0x9d40e]; ret; 
0x000000000040c108: nop dword ptr [rax + rax]; lea rax, [rip + 0x9d40f]; ret; 
0x000000000040c198: nop dword ptr [rax + rax]; lea rax, [rip + 0x9d43a]; ret; 
0x000000000040c0f8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9d44c]; ret; 
0x000000000040c188: nop dword ptr [rax + rax]; lea rax, [rip + 0x9d451]; ret; 
0x000000000040c178: nop dword ptr [rax + rax]; lea rax, [rip + 0x9d468]; ret; 
0x000000000040c168: nop dword ptr [rax + rax]; lea rax, [rip + 0x9d47f]; ret; 
0x000000000040b558: nop dword ptr [rax + rax]; lea rax, [rip + 0x9e014]; ret; 
0x000000000040b548: nop dword ptr [rax + rax]; lea rax, [rip + 0x9e01c]; ret; 
0x000000000040b538: nop dword ptr [rax + rax]; lea rax, [rip + 0x9e023]; ret; 
0x000000000040b528: nop dword ptr [rax + rax]; lea rax, [rip + 0x9e02e]; ret; 
0x000000000040b518: nop dword ptr [rax + rax]; lea rax, [rip + 0x9e037]; ret; 
0x000000000040b4f8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9e040]; ret; 
0x000000000040b4e8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9e044]; ret; 
0x000000000040b4d8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9e04c]; ret; 
0x000000000040b4c8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9e04f]; ret; 
0x000000000040b4a8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9e077]; ret; 
0x000000000040b4b8: nop dword ptr [rax + rax]; lea rax, [rip + 0x9e08c]; ret; 
0x000000000040b508: nop dword ptr [rax + rax]; lea rax, [rip + 0xc02d8]; ret; 
0x0000000000456a08: nop dword ptr [rax + rax]; mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x00000000004553c8: nop dword ptr [rax + rax]; mov byte ptr [rdi], dh; ret; 
0x0000000000456a2b: nop dword ptr [rax + rax]; mov cx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x0000000000452bf8: nop dword ptr [rax + rax]; mov dword ptr [rcx], edx; mov dword ptr [rcx + 3], edx; ret; 
0x0000000000452be8: nop dword ptr [rax + rax]; mov dword ptr [rcx], edx; mov word ptr [rcx + 4], dx; ret; 
0x0000000000452bc8: nop dword ptr [rax + rax]; mov dword ptr [rcx], edx; ret; 
0x0000000000456408: nop dword ptr [rax + rax]; mov dword ptr [rdi], edx; mov word ptr [rdi + 4], dx; ret; 
0x00000000004560c8: nop dword ptr [rax + rax]; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000040aeab: nop dword ptr [rax + rax]; mov eax, 0xffffff20; ret; 
0x000000000040aec8: nop dword ptr [rax + rax]; mov eax, 0xffffff8a; ret; 
0x000000000040aeb8: nop dword ptr [rax + rax]; mov eax, 0xffffff97; ret; 
0x000000000040aee8: nop dword ptr [rax + rax]; mov eax, 0xffffff99; ret; 
0x000000000040aed8: nop dword ptr [rax + rax]; mov eax, 0xffffff9a; ret; 
0x0000000000403493: nop dword ptr [rax + rax]; mov eax, 0xffffffa1; ret; 
0x000000000040a9e3: nop dword ptr [rax + rax]; mov eax, 0xffffffdf; ret; 
0x0000000000402c53: nop dword ptr [rax + rax]; mov eax, 0xffffffea; ret; 
0x0000000000408b4b: nop dword ptr [rax + rax]; mov eax, 0xfffffff3; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000421e1b: nop dword ptr [rax + rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x0000000000422bd8: nop dword ptr [rax + rax]; mov eax, 0xffffffff; ret; 
0x000000000045610b: nop dword ptr [rax + rax]; mov ecx, dword ptr [rsi]; mov dx, word ptr [rsi + 4]; mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x00000000004553fb: nop dword ptr [rax + rax]; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x000000000045fb83: nop dword ptr [rax + rax]; mov qword ptr [rax + 0x20], rsi; ret; 
0x0000000000452c38: nop dword ptr [rax + rax]; mov qword ptr [rcx], rdx; mov dword ptr [rcx + 7], edx; ret; 
0x0000000000452c48: nop dword ptr [rax + rax]; mov qword ptr [rcx], rdx; mov dword ptr [rcx + 8], edx; ret; 
0x0000000000452c58: nop dword ptr [rax + rax]; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 5], rdx; ret; 
0x0000000000452c68: nop dword ptr [rax + rax]; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 6], rdx; ret; 
0x0000000000452c78: nop dword ptr [rax + rax]; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 7], rdx; ret; 
0x0000000000452c88: nop dword ptr [rax + rax]; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 8], rdx; ret; 
0x0000000000452c28: nop dword ptr [rax + rax]; mov qword ptr [rcx], rdx; mov word ptr [rcx + 8], dx; ret; 
0x0000000000452c08: nop dword ptr [rax + rax]; mov qword ptr [rcx], rdx; ret; 
0x000000000045fb18: nop dword ptr [rax + rax]; mov qword ptr [rdi + 0x20], rsi; ret; 
0x00000000004a3988: nop dword ptr [rax + rax]; mov qword ptr [rdi + rsi*8], rdx; add rsp, 8; ret; 
0x0000000000456418: nop dword ptr [rax + rax]; mov qword ptr [rdi - 1], rdx; ret; 
0x0000000000456458: nop dword ptr [rax + rax]; mov qword ptr [rdi], rdx; mov dword ptr [rdi + 7], edx; ret; 
0x0000000000456468: nop dword ptr [rax + rax]; mov qword ptr [rdi], rdx; mov dword ptr [rdi + 8], edx; ret; 
0x0000000000456478: nop dword ptr [rax + rax]; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000456488: nop dword ptr [rax + rax]; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 6], rdx; ret; 
0x000000000044f0fb: nop dword ptr [rax + rax]; mov qword ptr [rdi], rdx; mov qword ptr [rdi + r8 - 8], rdx; vzeroupper; ret; 
0x0000000000456448: nop dword ptr [rax + rax]; mov qword ptr [rdi], rdx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000456428: nop dword ptr [rax + rax]; mov qword ptr [rdi], rdx; ret; 
0x00000000004a16e3: nop dword ptr [rax + rax]; mov r8, qword ptr [r8]; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x000000000045beeb: nop dword ptr [rax + rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000000485163: nop dword ptr [rax + rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x000000000040a4d8: nop dword ptr [rax + rax]; mov rax, 0x4dec40; ret; 
0x000000000040a4c8: nop dword ptr [rax + rax]; mov rax, 0x4dec80; ret; 
0x000000000040a478: nop dword ptr [rax + rax]; mov rax, 0x4ded40; ret; 
0x000000000040a4a3: nop dword ptr [rax + rax]; mov rax, 0x4dee40; ret; 
0x000000000040a4e8: nop dword ptr [rax + rax]; mov rax, 0x4dee80; ret; 
0x000000000040a468: nop dword ptr [rax + rax]; mov rax, 0x4deec0; ret; 
0x000000000040a488: nop dword ptr [rax + rax]; mov rax, 0x4e11a0; ret; 
0x000000000040a4f8: nop dword ptr [rax + rax]; mov rax, 0x4e1260; ret; 
0x000000000040a4b8: nop dword ptr [rax + rax]; mov rax, 0x4e12e0; ret; 
0x0000000000484218: nop dword ptr [rax + rax]; mov rax, 2; ret; 
0x0000000000484228: nop dword ptr [rax + rax]; mov rax, 3; ret; 
0x0000000000484238: nop dword ptr [rax + rax]; mov rax, 4; ret; 
0x0000000000484248: nop dword ptr [rax + rax]; mov rax, 5; ret; 
0x0000000000484258: nop dword ptr [rax + rax]; mov rax, 6; ret; 
0x0000000000484268: nop dword ptr [rax + rax]; mov rax, 7; ret; 
0x00000000004a1833: nop dword ptr [rax + rax]; mov rax, qword ptr [rsi + 0xb0]; add rsp, 8; ret; 
0x00000000004846bb: nop dword ptr [rax + rax]; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x0000000000483548: nop dword ptr [rax + rax]; mov rax, r8; vzeroupper; ret; 
0x000000000045669b: nop dword ptr [rax + rax]; mov rax, rdi; ret; 
0x0000000000456a9b: nop dword ptr [rax + rax]; mov rcx, qword ptr [rsi]; mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x000000000045545b: nop dword ptr [rax + rax]; mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000045bed3: nop dword ptr [rax + rax]; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000045c10b: nop dword ptr [rax + rax]; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x000000000045543b: nop dword ptr [rax + rax]; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000044f0c8: nop dword ptr [rax + rax]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x0000000000456498: nop dword ptr [rax + rax]; movdqu xmmword ptr [rdi - 1], xmm0; ret; 
0x00000000004564a8: nop dword ptr [rax + rax]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000426b7b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004586bb: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xa]; movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x00000000004586ab: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xb]; movzx edx, byte ptr [rsi - 0xb]; sub eax, edx; ret; 
0x000000000045869b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xc]; movzx edx, byte ptr [rsi - 0xc]; sub eax, edx; ret; 
0x000000000045868b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xd]; movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x000000000045867b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xe]; movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x000000000045866b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi - 0xf]; movzx edx, byte ptr [rsi - 0xf]; sub eax, edx; ret; 
0x000000000043990b: nop dword ptr [rax + rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000044e95b: nop dword ptr [rax + rax]; movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000044efdb: nop dword ptr [rax + rax]; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; vzeroupper; ret; 
0x00000000004034fb: nop dword ptr [rax + rax]; movzx esi, sil; mov dword ptr [rip + 0xdec16], esi; ret; 
0x00000000004034eb: nop dword ptr [rax + rax]; movzx esi, sil; mov dword ptr [rip + 0xdec22], esi; ret; 
0x00000000004034db: nop dword ptr [rax + rax]; movzx esi, sil; mov dword ptr [rip + 0xdec26], esi; ret; 
0x00000000004034cb: nop dword ptr [rax + rax]; movzx esi, sil; mov dword ptr [rip + 0xdec32], esi; ret; 
0x000000000040339b: nop dword ptr [rax + rax]; movzx esi, sil; mov dword ptr [rip + 0xded6a], esi; ret; 
0x000000000040338b: nop dword ptr [rax + rax]; movzx esi, sil; mov dword ptr [rip + 0xded7e], esi; ret; 
0x0000000000452b94: nop dword ptr [rax + rax]; nop dword ptr [rax]; mov byte ptr [rcx], dl; ret; 
0x00000000004563b4: nop dword ptr [rax + rax]; nop dword ptr [rax]; mov byte ptr [rdi], dl; ret; 
0x00000000004560a4: nop dword ptr [rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000459035: nop dword ptr [rax + rax]; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000457367: nop dword ptr [rax + rax]; nop; lea rax, [rdi + 1]; ret; 
0x0000000000457357: nop dword ptr [rax + rax]; nop; lea rax, [rdi]; ret; 
0x00000000004563d7: nop dword ptr [rax + rax]; nop; mov dword ptr [rdi - 1], edx; ret; 
0x00000000004563e7: nop dword ptr [rax + rax]; nop; mov dword ptr [rdi], edx; ret; 
0x0000000000484207: nop dword ptr [rax + rax]; nop; mov rax, 1; ret; 
0x0000000000452ba6: nop dword ptr [rax + rax]; nop; mov word ptr [rcx], dx; ret; 
0x00000000004563c6: nop dword ptr [rax + rax]; nop; mov word ptr [rdi], dx; ret; 
0x00000000004238bb: nop dword ptr [rax + rax]; or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x000000000040266b: nop dword ptr [rax + rax]; pop rbp; mov eax, 0xffffffea; pop r12; pop r13; ret; 
0x000000000049819b: nop dword ptr [rax + rax]; pop rbp; ret; 
0x00000000004275fb: nop dword ptr [rax + rax]; pop rbx; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x0000000000401d63: nop dword ptr [rax + rax]; ret; 
0x0000000000428543: nop dword ptr [rax + rax]; sub edx, dword ptr [rax + 0x10]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000427a63: nop dword ptr [rax + rax]; sub rax, rcx; sub eax, 1; ret; 
0x0000000000481683: nop dword ptr [rax + rax]; sub rcx, rax; sar rcx, 2; lea eax, [rcx - 1]; ret; 
0x0000000000464cf3: nop dword ptr [rax + rax]; sub rsp, 8; call 0x646e0; or dword ptr [rip + 0x80134], 2; add rsp, 8; ret; 
0x000000000043932b: nop dword ptr [rax + rax]; tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000040241b: nop dword ptr [rax + rax]; xor eax, eax; pop rbp; ret; 
0x000000000045a763: nop dword ptr [rax + rax]; xor eax, eax; pop rbx; ret; 
0x0000000000402568: nop dword ptr [rax + rax]; xor eax, eax; ret; 
0x0000000000438edb: nop dword ptr [rax + rax]; xor eax, eax; vzeroupper; ret; 
0x0000000000457198: nop dword ptr [rax + rax]; xor rax, rax; ret; 
0x00000000004841dc: nop dword ptr [rax]; add rax, 1; ret; 
0x0000000000480a55: nop dword ptr [rax]; add rsp, 8; mov eax, 0xffffffff; pop rbx; pop rbp; ret; 
0x0000000000402d8d: nop dword ptr [rax]; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000402dec: nop dword ptr [rax]; add rsp, 8; ret; 
0x0000000000407fbc: nop dword ptr [rax]; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000043b18c: nop dword ptr [rax]; and eax, 0xff; and ecx, 0xff; sub eax, ecx; ret; 
0x00000000004391f9: nop dword ptr [rax]; bsf eax, eax; add rax, rdi; ret; 
0x0000000000439219: nop dword ptr [rax]; bsf eax, eax; lea rax, [rax + rdi + 0x20]; ret; 
0x00000000004391ed: nop dword ptr [rax]; bsf eax, eax; lea rax, [rax + rdi - 0x10]; ret; 
0x00000000004828dc: nop dword ptr [rax]; bsf eax, eax; sub rdx, rax; jbe 0x82910; lea rax, [rdi + rax + 0x10]; ret; 
0x0000000000498c3c: nop dword ptr [rax]; bsf eax, eax; sub rdx, rax; jbe 0x98c70; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004a17e5: nop dword ptr [rax]; cmp al, 0x40; jne 0xa1820; mov rax, qword ptr [rsi + 0xb8]; add rsp, 8; ret; 
0x00000000004856a4: nop dword ptr [rax]; cmp byte ptr [r8 + 8], 0x2f; jne 0x8566f; leave; mov eax, 1; ret; 
0x0000000000402075: nop dword ptr [rax]; cmp edi, -0x7d; je 0x2082; cmp edi, -0x5f; jne 0x2083; ret; 
0x000000000048f0d1: nop dword ptr [rax]; cmp rax, r8; ja 0x8f0e8; add rsp, 8; ret; 
0x0000000000426de9: nop dword ptr [rax]; endbr64; cmp qword ptr [rdi + 0x38], 0; je 0x26e00; ret; 
0x000000000040215c: nop dword ptr [rax]; endbr64; lea rax, [rip + 0xa6f3d]; ret; 
0x0000000000498f8c: nop dword ptr [rax]; endbr64; mov eax, 0x27; syscall; ret; 
0x0000000000484f1c: nop dword ptr [rax]; endbr64; mov eax, 0x68; syscall; ret; 
0x0000000000484f0c: nop dword ptr [rax]; endbr64; mov eax, 0x6b; syscall; ret; 
0x0000000000484f2c: nop dword ptr [rax]; endbr64; mov eax, 0x6c; syscall; ret; 
0x000000000042880c: nop dword ptr [rax]; endbr64; mov eax, 0xffffffff; ret; 
0x000000000042850c: nop dword ptr [rax]; endbr64; mov eax, dword ptr [rdi + 0x10]; sub eax, dword ptr [rsi + 0x10]; ret; 
0x00000000004a5a8c: nop dword ptr [rax]; endbr64; mov eax, dword ptr [rdi]; test eax, eax; jne 0xa5aa0; ret; 
0x000000000046130c: nop dword ptr [rax]; endbr64; mov eax, dword ptr [rip + 0x846d6]; test eax, eax; je 0x61320; ret; 
0x00000000004037cd: nop dword ptr [rax]; endbr64; mov eax, dword ptr [rip + 0xde92a]; ret; 
0x000000000040314d: nop dword ptr [rax]; endbr64; mov eax, dword ptr [rip + 0xdefae]; test eax, eax; js 0x3160; ret; 
0x000000000040216c: nop dword ptr [rax]; endbr64; mov eax, dword ptr [rip + 0xe2156]; test eax, eax; je 0x2180; ret; 
0x00000000004a39cc: nop dword ptr [rax]; endbr64; mov qword ptr [rdi + 0x98], rsi; ret; 
0x00000000004916e9: nop dword ptr [rax]; endbr64; mov rax, qword ptr [rax + 8]; sub rax, qword ptr fs:[0]; ret; 
0x00000000004a3999: nop dword ptr [rax]; endbr64; mov rax, qword ptr [rdi + 0x98]; ret; 
0x00000000004a39dc: nop dword ptr [rax]; endbr64; mov rax, qword ptr [rdi + 0xa0]; ret; 
0x00000000004a3a3c: nop dword ptr [rax]; endbr64; mov rax, qword ptr [rdi + 0xa8]; ret; 
0x00000000004a3a2d: nop dword ptr [rax]; endbr64; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x00000000004a39ec: nop dword ptr [rax]; endbr64; mov rax, qword ptr [rdi + 0xb8]; ret; 
0x000000000046385c: nop dword ptr [rax]; endbr64; mov rax, qword ptr [rip + 0x821ad]; ret; 
0x0000000000428889: nop dword ptr [rax]; endbr64; mov rax, rdi; ret; 
0x000000000045fa5c: nop dword ptr [rax]; endbr64; ret; 
0x000000000045a29d: nop dword ptr [rax]; endbr64; test rdx, rdx; jne 0x5a2ad; mov rax, rdi; ret; 
0x000000000042882c: nop dword ptr [rax]; endbr64; xor eax, eax; ret; 
0x000000000040a8c4: nop dword ptr [rax]; lea eax, [rsi*8 + 0x14]; ret; 
0x0000000000497eac: nop dword ptr [rax]; lea rax, [rip + 0x4d189]; mov qword ptr [rip + 0x4d16a], rax; ret; 
0x000000000040d761: nop dword ptr [rax]; lea rax, [rip + 0x9bdb0]; ret; 
0x000000000040cc21: nop dword ptr [rax]; lea rax, [rip + 0x9c8f0]; ret; 
0x000000000040c0e1: nop dword ptr [rax]; lea rax, [rip + 0x9d430]; ret; 
0x000000000040b49d: nop dword ptr [rax]; lea rax, [rip + 0x9e078]; ret; 
0x0000000000450bcd: nop dword ptr [rax]; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; mov rax, rdi; ret; 
0x0000000000452b9c: nop dword ptr [rax]; mov byte ptr [rcx], dl; ret; 
0x00000000004563bc: nop dword ptr [rax]; mov byte ptr [rdi], dl; ret; 
0x000000000044f0bc: nop dword ptr [rax]; mov byte ptr [rdi], dl; vzeroupper; ret; 
0x00000000004560bc: nop dword ptr [rax]; mov dl, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x000000000044f0ed: nop dword ptr [rax]; mov dword ptr [rdi], edx; mov dword ptr [rdi + r8 - 4], edx; vzeroupper; ret; 
0x000000000040bb0d: nop dword ptr [rax]; mov eax, 0xffffff94; ret; 
0x00000000004033d4: nop dword ptr [rax]; mov eax, 0xffffffa1; add rsp, 8; ret; 
0x00000000004038ec: nop dword ptr [rax]; mov eax, 0xffffffa1; ret; 
0x00000000004029ed: nop dword ptr [rax]; mov eax, 0xffffffea; pop rbx; pop rbp; pop r12; ret; 
0x000000000040a905: nop dword ptr [rax]; mov eax, 0xffffffff; ret; 
0x000000000048116d: nop dword ptr [rax]; mov eax, dword ptr [rcx]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000454f3c: nop dword ptr [rax]; mov eax, dword ptr [rcx]; mov dword ptr [rdx], eax; lea rax, [rdx + 3]; ret; 
0x000000000048173c: nop dword ptr [rax]; mov eax, dword ptr [rdi + 0x10]; sub rdx, qword ptr [rcx + 8]; sar rdx, 2; sub eax, edx; ret; 
0x0000000000464ce1: nop dword ptr [rax]; mov eax, dword ptr [rip + 0x8014e]; test eax, eax; je 0x64cf8; ret; 
0x000000000045542d: nop dword ptr [rax]; mov ecx, dword ptr [rsi]; mov edx, dword ptr [rsi + 3]; mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x00000000004429bc: nop dword ptr [rax]; mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d5cc: nop dword ptr [rax]; mov edx, dword ptr [rsi - 5]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d7cc: nop dword ptr [rax]; mov edx, dword ptr [rsi - 6]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d9cc: nop dword ptr [rax]; mov edx, dword ptr [rsi - 7]; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000045708d: nop dword ptr [rax]; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; lea rax, [rdi + 3]; vzeroupper; ret; 
0x00000000004430d9: nop dword ptr [rax]; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x00000000004701a9: nop dword ptr [rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x000000000045d061: nop dword ptr [rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x000000000040a779: nop dword ptr [rax]; mov rax, 0x4dec40; pop rbp; ret; 
0x000000000040a799: nop dword ptr [rax]; mov rax, 0x4dec80; pop rbp; ret; 
0x000000000040a789: nop dword ptr [rax]; mov rax, 0x4decc0; pop rbp; ret; 
0x000000000040a7d9: nop dword ptr [rax]; mov rax, 0x4ded00; pop rbp; ret; 
0x000000000040a7c9: nop dword ptr [rax]; mov rax, 0x4ded40; pop rbp; ret; 
0x000000000040a7e9: nop dword ptr [rax]; mov rax, 0x4ded80; pop rbp; ret; 
0x000000000040a7b9: nop dword ptr [rax]; mov rax, 0x4dedc0; pop rbp; ret; 
0x000000000040a7a9: nop dword ptr [rax]; mov rax, 0x4e11e0; pop rbp; ret; 
0x00000000004983cd: nop dword ptr [rax]; mov rax, qword ptr [rbx + 0x10]; mov qword ptr [rax], rdi; pop rbx; ret; 
0x0000000000454e8d: nop dword ptr [rax]; mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; lea rax, [rdx + 7]; ret; 
0x0000000000450b5d: nop dword ptr [rax]; mov rax, qword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x000000000045a85d: nop dword ptr [rax]; mov rax, rdx; pop rbx; ret; 
0x000000000045614d: nop dword ptr [rax]; mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000045547d: nop dword ptr [rax]; mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x000000000045548d: nop dword ptr [rax]; mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 5]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x000000000045cb44: nop dword ptr [rax]; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x000000000045c1f4: nop dword ptr [rax]; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x00000000004426bc: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 0xa]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000044252c: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 0xd]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000044249c: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 0xe]; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cc5c: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 8]; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000044273c: nop dword ptr [rax]; mov rdx, qword ptr [rsi - 9]; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000442f19: nop dword ptr [rax]; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x00000000004554dc: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004554fc: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x000000000045557c: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000045553d: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x000000000045555c: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; mov rcx, qword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000456b7d: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x00000000004554c9: nop dword ptr [rax]; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000045865d: nop dword ptr [rax]; movzx eax, byte ptr [rdi - 0x10]; movzx edx, byte ptr [rsi - 0x10]; sub eax, edx; ret; 
0x0000000000439b8d: nop dword ptr [rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x000000000045a7e9: nop dword ptr [rax]; movzx eax, cl; pop rbx; ret; 
0x00000000004331dd: nop dword ptr [rax]; movzx ecx, byte ptr [rsi]; movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000000442b4c: nop dword ptr [rax]; movzx edx, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000443229: nop dword ptr [rax]; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x0000000000442acc: nop dword ptr [rax]; movzx edx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x00000000004431b9: nop dword ptr [rax]; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000044e949: nop dword ptr [rax]; movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x00000000004034bc: nop dword ptr [rax]; movzx esi, sil; mov dword ptr [rip + 0xdec5e], esi; ret; 
0x000000000040337d: nop dword ptr [rax]; movzx esi, sil; mov dword ptr [rip + 0xded9a], esi; ret; 
0x0000000000427754: nop dword ptr [rax]; or dword ptr [rax + 0x74], 0x80; mov rax, qword ptr [rax + 0x68]; test rax, rax; jne 0x27758; ret; 
0x0000000000427915: nop dword ptr [rax]; pop rbp; ret; 
0x000000000049a8c9: nop dword ptr [rax]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000407ce1: nop dword ptr [rax]; ret; 
0x000000000040aad4: nop dword ptr [rax]; sar eax, 0x1f; and eax, 0xffffffdf; ret; 
0x00000000004a4515: nop dword ptr [rax]; test dil, dil; jne 0xa4553; mov eax, 8; add rsp, 8; ret; 
0x000000000044e2bd: nop dword ptr [rax]; tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000044f10c: nop dword ptr [rax]; vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm0; vzeroupper; ret; 
0x0000000000408a09: nop dword ptr [rax]; xor eax, eax; ret; 
0x00000000004830ad: nop dword ptr [rax]; xor eax, eax; vzeroupper; ret; 
0x00000000004233b1: nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x00000000004841e7: nop dword ptr cs:[rax + rax]; add rax, 3; ret; 
0x0000000000463847: nop dword ptr cs:[rax + rax]; endbr64; mov rax, qword ptr [rip + 0x821ad]; ret; 
0x0000000000428857: nop dword ptr cs:[rax + rax]; endbr64; mov rax, qword ptr [rip + 0xb98f5]; ret; 
0x00000000004573e7: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 0xa]; ret; 
0x00000000004573f7: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 0xb]; ret; 
0x0000000000457407: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 0xc]; ret; 
0x0000000000457417: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 0xd]; ret; 
0x0000000000457427: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 0xe]; ret; 
0x0000000000457377: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 2]; ret; 
0x0000000000457387: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 3]; ret; 
0x0000000000457397: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 4]; ret; 
0x00000000004573a7: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 5]; ret; 
0x00000000004573b7: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 6]; ret; 
0x00000000004573c7: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 8]; ret; 
0x00000000004573d7: nop dword ptr cs:[rax + rax]; lea rax, [rdi + 9]; ret; 
0x0000000000452be7: nop dword ptr cs:[rax + rax]; mov dword ptr [rcx], edx; mov word ptr [rcx + 4], dx; ret; 
0x0000000000456407: nop dword ptr cs:[rax + rax]; mov dword ptr [rdi], edx; mov word ptr [rdi + 4], dx; ret; 
0x00000000004560c7: nop dword ptr cs:[rax + rax]; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000040aec7: nop dword ptr cs:[rax + rax]; mov eax, 0xffffff8a; ret; 
0x000000000040aeb7: nop dword ptr cs:[rax + rax]; mov eax, 0xffffff97; ret; 
0x000000000040aee7: nop dword ptr cs:[rax + rax]; mov eax, 0xffffff99; ret; 
0x000000000040aed7: nop dword ptr cs:[rax + rax]; mov eax, 0xffffff9a; ret; 
0x00000000004285f7: nop dword ptr cs:[rax + rax]; mov eax, 0xffffffff; ret; 
0x0000000000452c07: nop dword ptr cs:[rax + rax]; mov qword ptr [rcx], rdx; ret; 
0x00000000004a3987: nop dword ptr cs:[rax + rax]; mov qword ptr [rdi + rsi*8], rdx; add rsp, 8; ret; 
0x0000000000456427: nop dword ptr cs:[rax + rax]; mov qword ptr [rdi], rdx; ret; 
0x000000000044f0c7: nop dword ptr cs:[rax + rax]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x00000000004564a7: nop dword ptr cs:[rax + rax]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000452b93: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; mov byte ptr [rcx], dl; ret; 
0x00000000004563b3: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; mov byte ptr [rdi], dl; ret; 
0x00000000004560a3: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000459034: nop dword ptr cs:[rax + rax]; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000457366: nop dword ptr cs:[rax + rax]; nop; lea rax, [rdi + 1]; ret; 
0x0000000000457356: nop dword ptr cs:[rax + rax]; nop; lea rax, [rdi]; ret; 
0x00000000004563d6: nop dword ptr cs:[rax + rax]; nop; mov dword ptr [rdi - 1], edx; ret; 
0x00000000004563e6: nop dword ptr cs:[rax + rax]; nop; mov dword ptr [rdi], edx; ret; 
0x0000000000484206: nop dword ptr cs:[rax + rax]; nop; mov rax, 1; ret; 
0x0000000000452ba5: nop dword ptr cs:[rax + rax]; nop; mov word ptr [rcx], dx; ret; 
0x00000000004563c5: nop dword ptr cs:[rax + rax]; nop; mov word ptr [rdi], dx; ret; 
0x00000000004a7857: nop dword ptr cs:[rax + rax]; ret; 
0x00000000004841f7: nop dword ptr cs:[rax + rax]; xor rax, rax; ret; 
0x000000000042eb57: nop word ptr [rax + rax]; add rsp, 0x18; ret; 
0x0000000000462bb2: nop word ptr [rax + rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000439207: nop word ptr [rax + rax]; bsf eax, eax; lea rax, [rax + rdi + 0x10]; ret; 
0x000000000049e98a: nop word ptr [rax + rax]; bts rax, 0x30; mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x00000000004a4582: nop word ptr [rax + rax]; cmp al, 0x50; jne 0xa45b3; xor eax, eax; add rsp, 8; ret; 
0x00000000004a45e2: nop word ptr [rax + rax]; cmp al, 0x50; jne 0xa4613; xor eax, eax; add rsp, 8; ret; 
0x00000000004612fa: nop word ptr [rax + rax]; endbr64; lea rax, [rip + 0x81f55]; ret; 
0x0000000000426ea7: nop word ptr [rax + rax]; endbr64; mov eax, 0xffffffff; ret; 
0x000000000042881a: nop word ptr [rax + rax]; endbr64; mov rax, -1; ret; 
0x0000000000428877: nop word ptr [rax + rax]; endbr64; mov rax, qword ptr [rdi + 0x68]; ret; 
0x000000000042971a: nop word ptr [rax + rax]; endbr64; mov rax, qword ptr [rdi]; cmp rax, 0x2000000; jbe 0x29730; ret; 
0x000000000042884a: nop word ptr [rax + rax]; endbr64; ret; 
0x00000000004278a7: nop word ptr [rax + rax]; endbr64; xor eax, eax; ret; 
0x0000000000456a07: nop word ptr [rax + rax]; mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x00000000004553c7: nop word ptr [rax + rax]; mov byte ptr [rdi], dh; ret; 
0x0000000000452bf7: nop word ptr [rax + rax]; mov dword ptr [rcx], edx; mov dword ptr [rcx + 3], edx; ret; 
0x0000000000452bc7: nop word ptr [rax + rax]; mov dword ptr [rcx], edx; ret; 
0x000000000040a9e2: nop word ptr [rax + rax]; mov eax, 0xffffffdf; ret; 
0x0000000000421e1a: nop word ptr [rax + rax]; mov eax, 0xffffffff; pop rbp; ret; 
0x00000000004553fa: nop word ptr [rax + rax]; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x0000000000452c47: nop word ptr [rax + rax]; mov qword ptr [rcx], rdx; mov dword ptr [rcx + 8], edx; ret; 
0x0000000000452c57: nop word ptr [rax + rax]; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 5], rdx; ret; 
0x0000000000452c27: nop word ptr [rax + rax]; mov qword ptr [rcx], rdx; mov word ptr [rcx + 8], dx; ret; 
0x000000000045fb17: nop word ptr [rax + rax]; mov qword ptr [rdi + 0x20], rsi; ret; 
0x0000000000456417: nop word ptr [rax + rax]; mov qword ptr [rdi - 1], rdx; ret; 
0x0000000000456467: nop word ptr [rax + rax]; mov qword ptr [rdi], rdx; mov dword ptr [rdi + 8], edx; ret; 
0x0000000000456477: nop word ptr [rax + rax]; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 5], rdx; ret; 
0x0000000000456447: nop word ptr [rax + rax]; mov qword ptr [rdi], rdx; mov word ptr [rdi + 8], dx; ret; 
0x000000000045beea: nop word ptr [rax + rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0x16; mov eax, 0xffffffff; ret; 
0x0000000000485162: nop word ptr [rax + rax]; mov rax, -0x40; mov dword ptr fs:[rax], 0xc; mov eax, 0xffffffff; ret; 
0x0000000000483547: nop word ptr [rax + rax]; mov rax, r8; vzeroupper; ret; 
0x000000000045545a: nop word ptr [rax + rax]; mov rcx, qword ptr [rsi]; mov dx, word ptr [rsi + 8]; mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000045bf32: nop word ptr [rax + rax]; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000000426b7a: nop word ptr [rax + rax]; movzx eax, byte ptr [rax]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000044e95a: nop word ptr [rax + rax]; movzx ecx, word ptr [rsi]; mov word ptr [rdi], cx; mov byte ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000044efda: nop word ptr [rax + rax]; movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; vzeroupper; ret; 
0x000000000049819a: nop word ptr [rax + rax]; pop rbp; ret; 
0x00000000004275fa: nop word ptr [rax + rax]; pop rbx; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x0000000000404887: nop word ptr [rax + rax]; ret; 
0x0000000000428542: nop word ptr [rax + rax]; sub edx, dword ptr [rax + 0x10]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000427a62: nop word ptr [rax + rax]; sub rax, rcx; sub eax, 1; ret; 
0x0000000000481682: nop word ptr [rax + rax]; sub rcx, rax; sar rcx, 2; lea eax, [rcx - 1]; ret; 
0x0000000000402567: nop word ptr [rax + rax]; xor eax, eax; ret; 
0x0000000000438eda: nop word ptr [rax + rax]; xor eax, eax; vzeroupper; ret; 
0x00000000004841e6: nop word ptr cs:[rax + rax]; add rax, 3; ret; 
0x0000000000463846: nop word ptr cs:[rax + rax]; endbr64; mov rax, qword ptr [rip + 0x821ad]; ret; 
0x0000000000428856: nop word ptr cs:[rax + rax]; endbr64; mov rax, qword ptr [rip + 0xb98f5]; ret; 
0x00000000004573e6: nop word ptr cs:[rax + rax]; lea rax, [rdi + 0xa]; ret; 
0x00000000004573f6: nop word ptr cs:[rax + rax]; lea rax, [rdi + 0xb]; ret; 
0x0000000000457406: nop word ptr cs:[rax + rax]; lea rax, [rdi + 0xc]; ret; 
0x0000000000457416: nop word ptr cs:[rax + rax]; lea rax, [rdi + 0xd]; ret; 
0x0000000000457426: nop word ptr cs:[rax + rax]; lea rax, [rdi + 0xe]; ret; 
0x0000000000457376: nop word ptr cs:[rax + rax]; lea rax, [rdi + 2]; ret; 
0x0000000000457386: nop word ptr cs:[rax + rax]; lea rax, [rdi + 3]; ret; 
0x0000000000457396: nop word ptr cs:[rax + rax]; lea rax, [rdi + 4]; ret; 
0x00000000004573a6: nop word ptr cs:[rax + rax]; lea rax, [rdi + 5]; ret; 
0x00000000004573b6: nop word ptr cs:[rax + rax]; lea rax, [rdi + 6]; ret; 
0x00000000004573c6: nop word ptr cs:[rax + rax]; lea rax, [rdi + 8]; ret; 
0x00000000004573d6: nop word ptr cs:[rax + rax]; lea rax, [rdi + 9]; ret; 
0x0000000000452be6: nop word ptr cs:[rax + rax]; mov dword ptr [rcx], edx; mov word ptr [rcx + 4], dx; ret; 
0x0000000000456406: nop word ptr cs:[rax + rax]; mov dword ptr [rdi], edx; mov word ptr [rdi + 4], dx; ret; 
0x00000000004560c6: nop word ptr cs:[rax + rax]; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000040aec6: nop word ptr cs:[rax + rax]; mov eax, 0xffffff8a; ret; 
0x000000000040aeb6: nop word ptr cs:[rax + rax]; mov eax, 0xffffff97; ret; 
0x000000000040aee6: nop word ptr cs:[rax + rax]; mov eax, 0xffffff99; ret; 
0x000000000040aed6: nop word ptr cs:[rax + rax]; mov eax, 0xffffff9a; ret; 
0x00000000004285f6: nop word ptr cs:[rax + rax]; mov eax, 0xffffffff; ret; 
0x0000000000452c06: nop word ptr cs:[rax + rax]; mov qword ptr [rcx], rdx; ret; 
0x00000000004a3986: nop word ptr cs:[rax + rax]; mov qword ptr [rdi + rsi*8], rdx; add rsp, 8; ret; 
0x0000000000456426: nop word ptr cs:[rax + rax]; mov qword ptr [rdi], rdx; ret; 
0x000000000044f0c6: nop word ptr cs:[rax + rax]; mov word ptr [rdi], dx; vzeroupper; ret; 
0x00000000004564a6: nop word ptr cs:[rax + rax]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000452b92: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; mov byte ptr [rcx], dl; ret; 
0x00000000004563b2: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; mov byte ptr [rdi], dl; ret; 
0x00000000004560a2: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; ret; 
0x0000000000459033: nop word ptr cs:[rax + rax]; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000457365: nop word ptr cs:[rax + rax]; nop; lea rax, [rdi + 1]; ret; 
0x0000000000457355: nop word ptr cs:[rax + rax]; nop; lea rax, [rdi]; ret; 
0x00000000004563d5: nop word ptr cs:[rax + rax]; nop; mov dword ptr [rdi - 1], edx; ret; 
0x00000000004563e5: nop word ptr cs:[rax + rax]; nop; mov dword ptr [rdi], edx; ret; 
0x0000000000484205: nop word ptr cs:[rax + rax]; nop; mov rax, 1; ret; 
0x0000000000452ba4: nop word ptr cs:[rax + rax]; nop; mov word ptr [rcx], dx; ret; 
0x00000000004563c4: nop word ptr cs:[rax + rax]; nop; mov word ptr [rdi], dx; ret; 
0x00000000004a7856: nop word ptr cs:[rax + rax]; ret; 
0x00000000004841f6: nop word ptr cs:[rax + rax]; xor rax, rax; ret; 
0x0000000000410fb4: nop; add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000424729: nop; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; call 0x5c43a48f; ret; 
0x0000000000442277: nop; add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x0000000000421059: nop; add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x0000000000439e9e: nop; add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000407faf: nop; add rsp, 8; mov eax, 0xffffffef; pop rbx; pop rbp; ret; 
0x00000000004a5a1f: nop; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004828ef: nop; bsf eax, eax; sub rdx, rax; jbe 0x82910; lea rax, [rdi + rax + 0x20]; ret; 
0x00000000004828ff: nop; bsf eax, eax; sub rdx, rax; jbe 0x82910; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000498c4f: nop; bsf eax, eax; sub rdx, rax; jbe 0x98c70; lea rax, [rdi + rax + 0x20]; ret; 
0x0000000000498c5f: nop; bsf eax, eax; sub rdx, rax; jbe 0x98c70; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000484eff: nop; endbr64; mov eax, 0x66; syscall; ret; 
0x000000000042792f: nop; endbr64; mov rax, -1; ret; 
0x000000000040257f: nop; endbr64; mov rax, 0x4e2130; mov rax, qword ptr [rax]; mov eax, dword ptr [rax]; ret; 
0x00000000004a392f: nop; endbr64; mov rax, qword ptr [rdi + 0x90]; ret; 
0x0000000000480d2f: nop; endbr64; mov rax, qword ptr [rdi + 0xa0]; cmp qword ptr [rax + 0x30], 0; je 0x80d48; ret; 
0x000000000042977f: nop; endbr64; mov rax, qword ptr [rdi]; cmp rax, 0xa0; jbe 0x29790; ret; 
0x00000000004293bf: nop; endbr64; mov rax, qword ptr [rdi]; cmp rax, 0xffff; jbe 0x293d0; ret; 
0x000000000045cf5f: nop; endbr64; mov rax, qword ptr [rip + 0x861ed]; test rax, rax; je 0x5cf71; ret; 
0x0000000000401caf: nop; endbr64; ret; 
0x000000000042518f: nop; endbr64; xor eax, eax; test rdx, rdx; jne 0x251a0; ret; 
0x000000000049ab81: nop; in al, dx; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ror dword ptr [rax], 0x83; ret 0x4801; 
0x000000000040b6f0: nop; jo 0xb70a; add byte ptr [rax], al; cmovns eax, edx; add rsp, 8; ret; 
0x000000000040a87f: nop; lea eax, [rsi*8 + 0x10]; ret; 
0x000000000045736f: nop; lea rax, [rdi + 1]; ret; 
0x000000000045735f: nop; lea rax, [rdi]; ret; 
0x0000000000401fe9: nop; leave; ret; 
0x0000000000454eff: nop; mov al, byte ptr [rcx]; mov byte ptr [rdx], al; lea rax, [rdx]; ret; 
0x000000000040b6b0: nop; mov byte ptr [rbx], dl; add byte ptr [rax], al; cmovns eax, edx; add rsp, 8; ret; 
0x00000000004841cf: nop; mov ch, dh; and ch, 0xf; je 0x841f0; add rax, 2; ret; 
0x000000000043ce2f: nop; mov dl, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000452bdf: nop; mov dword ptr [rcx], edx; mov byte ptr [rcx + 4], dl; ret; 
0x000000000048b105: nop; mov dword ptr [rdi + 0x2f4], edx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000048b0d3: nop; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x00000000004563df: nop; mov dword ptr [rdi - 1], edx; ret; 
0x00000000004563ff: nop; mov dword ptr [rdi], edx; mov byte ptr [rdi + 4], dl; ret; 
0x00000000004563ef: nop; mov dword ptr [rdi], edx; ret; 
0x0000000000429757: nop; mov dword ptr [rip + 0xb9012], 1; mov dword ptr [rip + 0xb9004], eax; ret; 
0x0000000000429730: nop; mov dword ptr [rip + 0xb9039], 1; mov qword ptr [rip + 0xb900e], rax; ret; 
0x0000000000429707: nop; mov dword ptr [rip + 0xb9062], 1; mov qword ptr [rip + 0xb902f], rax; ret; 
0x00000000004296e7: nop; mov dword ptr [rip + 0xb9082], 1; mov qword ptr [rip + 0xb9047], rax; ret; 
0x0000000000429777: nop; mov dword ptr [rip + 0xbb5b6], eax; ret; 
0x000000000043d00f: nop; mov dx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x000000000043d1ef: nop; mov dx, word ptr [rsi - 3]; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x00000000004553df: nop; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000430e0f: nop; mov eax, 0x16; ret; 
0x000000000043d3cf: nop; mov edx, dword ptr [rsi - 4]; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000456a3f: nop; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; lea rax, [rdi + 3]; ret; 
0x000000000044e96f: nop; mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; vzeroupper; ret; 
0x00000000004817e7: nop; mov qword ptr [rax + 0x10], rdi; mov qword ptr [rax + 0x40], rsi; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x00000000004817b6: nop; mov qword ptr [rax], rdx; xor eax, eax; ret; 
0x0000000000452c1f: nop; mov qword ptr [rcx], rdx; mov byte ptr [rcx + 8], dl; ret; 
0x000000000042788f: nop; mov qword ptr [rdi + 0xa0], -1; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000045643f: nop; mov qword ptr [rdi], rdx; mov byte ptr [rdi + 8], dl; ret; 
0x00000000004293e7: nop; mov qword ptr [rip + 0xb93b9], rax; ret; 
0x00000000004293d0: nop; mov qword ptr [rip + 0xb93c8], rax; ret; 
0x0000000000429377: nop; mov qword ptr [rip + 0xb93d9], rax; ret; 
0x0000000000429367: nop; mov qword ptr [rip + 0xb93f1], rax; ret; 
0x000000000042c56f: nop; mov rax, -0x40; xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000000040a76f: nop; mov rax, 0x4e11a0; pop rbp; ret; 
0x000000000048420f: nop; mov rax, 1; ret; 
0x000000000044f33f: nop; mov rax, rdi; vzeroupper; ret; 
0x000000000045546f: nop; mov rcx, qword ptr [rsi]; mov edx, dword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x000000000045549f: nop; mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 6]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x00000000004554af: nop; mov rcx, qword ptr [rsi]; mov rdx, qword ptr [rsi + 7]; mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x000000000045c1af: nop; mov rdx, -0x40; neg eax; mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x0000000000456a8f: nop; mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; lea rax, [rdi + 7]; ret; 
0x0000000000452bbf: nop; mov word ptr [rcx], dx; mov byte ptr [rcx + 2], dl; ret; 
0x0000000000452baf: nop; mov word ptr [rcx], dx; ret; 
0x00000000004563cf: nop; mov word ptr [rdi], dx; ret; 
0x00000000004087ff: nop; movabs al, byte ptr [0xb098110f000000]; add byte ptr [rax], al; movups xmmword ptr [rax + 0xc0], xmm4; pop rbx; ret; 
0x00000000004561cf: nop; movdqu xmm0, xmmword ptr [rsi]; mov cx, word ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x000000000045550f: nop; movdqu xmm0, xmmword ptr [rsi]; mov ecx, dword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x000000000045567f: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0x10]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x000000000045563f: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xe]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x000000000045565f: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmm2, xmmword ptr [rsi + 0xf]; movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000456b6f: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x00000000004554bf: nop; movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000401fe8: nop; nop; leave; ret; 
0x000000000048b5df: nop; or byte ptr [rdi + 0x31d], 4; xor eax, eax; ret; 
0x000000000042975b: nop; or eax, dword ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0xb9004], eax; ret; 
0x0000000000429734: nop; or eax, dword ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xb900e], rax; ret; 
0x000000000042970b: nop; or eax, dword ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xb902f], rax; ret; 
0x00000000004296eb: nop; or eax, dword ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xb9047], rax; ret; 
0x00000000004296f6: nop; or eax, dword ptr [rax]; ret; 
0x000000000040907f: nop; pop rbx; mov eax, 0xffffffea; pop rbp; pop r12; ret; 
0x0000000000401cdf: nop; ret; 
0x00000000004319cf: nop; test byte ptr [rip + 0xb33be], 2; lea rdx, [rip + 0x27b02]; lea rax, [rip + 0x27bbb]; cmove rax, rdx; ret; 
0x000000000043933f: nop; tzcnt eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x000000000044e5cf: nop; tzcnt eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000482b7f: nop; vzeroupper; xor eax, eax; ret; 
0x000000000040255f: nop; xor eax, eax; add rsp, 8; ret; 
0x000000000048290f: nop; xor eax, eax; ret; 
0x000000000040c203: not bl; or dword ptr [rax], eax; ret; 
0x000000000040c163: not ebx; or dword ptr [rax], eax; ret; 
0x000000000040c1c3: or ah, dl; or dword ptr [rax], eax; ret; 
0x00000000004310a6: or al, 0; add byte ptr [rax - 0x73], cl; adc eax, 0x1fc30; cmovne rax, rdx; ret; 
0x0000000000483626: or al, 0; add byte ptr [rax - 0x73], cl; add eax, 0x9b0; cmove rax, rdx; ret; 
0x0000000000437e07: or al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044cdff: or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000437e35: or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000042da2d: or al, 0; add byte ptr [rax], al; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000000485172: or al, 0; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x000000000042c57d: or al, 0; add byte ptr [rax], al; mov rax, r8; ret; 
0x0000000000492ca6: or al, 0; add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x00000000004234ea: or al, 0; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x000000000040b515: or al, 0; ret; 
0x00000000004595da: or al, 0x16; cmp rdi, r9; jb 0x59748; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000459945: or al, 0x16; cmp rdi, r9; jb 0x59b15; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000459d90: or al, 0x16; cmp rdi, r9; jb 0x59fd0; mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x00000000004331c6: or al, 0x16; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000433488: or al, 0x16; test al, al; jne 0x33470; xor eax, eax; sub eax, ecx; ret; 
0x0000000000434a49: or al, 0x16; test eax, eax; jne 0x34a30; sub eax, ecx; vzeroupper; ret; 
0x0000000000438ece: or al, 0x16; test eax, eax; jne 0x38eb0; sub eax, ecx; vzeroupper; ret; 
0x000000000042d7b6: or al, 0x18; add rsp, 0x10; mov rax, r8; pop rbx; ret; 
0x000000000041f942: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x1f952; add rsp, 0xd8; ret; 
0x0000000000404fe4: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4ff1; add rsp, 0x48; ret; 
0x000000000045c260: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5c305; add rsp, 0x68; ret; 
0x000000000045cbb5: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5cc03; add rsp, 0x68; ret; 
0x000000000045cc44: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5cc93; add rsp, 0x18; ret; 
0x000000000045ccfc: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5cd4b; add rsp, 0x58; ret; 
0x000000000045cd9a: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5cdeb; add rsp, 0x58; ret; 
0x000000000045f9db: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5f9eb; add rsp, 0xd8; ret; 
0x0000000000470232: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x702d6; add rsp, 0x98; ret; 
0x0000000000471f72: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x71f82; add rsp, 0xd8; ret; 
0x0000000000408b06: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x8b13; add rsp, 0x18; ret; 
0x00000000004919c3: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x919f3; add rsp, 0x38; ret; 
0x0000000000491a8f: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x91ac4; add rsp, 0x58; ret; 
0x0000000000491c01: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x91c44; add rsp, 0x68; ret; 
0x0000000000491f1f: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x91f54; add rsp, 0x58; ret; 
0x000000000049270f: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x92735; add rsp, 0x38; ret; 
0x00000000004984b6: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x984c3; add rsp, 0x28; ret; 
0x000000000049eb1f: or al, 0x25; sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x9eb2c; add rsp, 0x38; ret; 
0x000000000042d9ad: or al, 0x28; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x0000000000408f67: or al, 0x48; add esp, 0x18; pop rbp; pop r12; ret; 
0x000000000045c362: or al, 0x48; add esp, 0x18; ret; 
0x00000000004026b3: or al, 0x48; add esp, 8; pop rbp; pop r12; ret; 
0x0000000000408b81: or al, 0x48; add esp, 8; xor eax, eax; pop rbx; pop rbp; ret; 
0x000000000043049b: or al, 0x48; lea eax, [rax - 0x10]; ret; 
0x0000000000452b22: or al, 0x48; lea ecx, [rdx + 0xc]; jne 0x52d30; ret; 
0x0000000000485239: or al, 0x48; lea ecx, [rsi + rcx*4]; mov edx, dword ptr [rcx + rdx]; test edx, edx; jne 0x85250; ret; 
0x0000000000455d9f: or al, 0x48; lea edi, [rdi + 0xc]; jne 0x564f0; ret; 
0x000000000049901d: or al, 0x48; mov edx, dword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x000000000048f043: or al, 0x49; lea eax, [rax + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x0000000000402643: or al, 0x5d; pop r12; pop r13; ret; 
0x000000000045cbe8: or al, 0x75; ret 0xd8f7; 
0x000000000047774a: or al, 0x7e; ret; 
0x0000000000472cce: or al, 0x83; ret; 
0x000000000047929f: or al, 0x84; ror byte ptr [rdi], cl; mov dl, dl; sbb al, 0; add dh, dh; ret 0xf40; 
0x00000000004a06f1: or al, 0x85; sal byte ptr [rsp + 0x48], 1; ret 0xb70f; 
0x000000000049462a: or al, 0x89; fdiv st(6); ret; 
0x000000000046ff5b: or al, 0x89; jae 0x6ff9f; xor eax, eax; pop rbx; ret; 
0x000000000045a81b: or al, 0x89; ret 0xe283; 
0x0000000000448704: or al, 0x8a; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000445eed: or al, 0x8b; mov ecx, dword ptr ss:[rcx - 4]; mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x0000000000404e04: or al, 0x8d; push rcx; add bh, byte ptr [rcx]; ret 0x1477; 
0x0000000000485257: or al, 0x8e; add eax, dword ptr [rcx + rdx]; ret; 
0x000000000048523c: or al, 0x8e; mov edx, dword ptr [rcx + rdx]; test edx, edx; jne 0x85250; ret; 
0x000000000040cc43: or al, 0xc9; or dword ptr [rax], eax; ret; 
0x000000000040c123: or al, 0xd4; or dword ptr [rax], eax; ret; 
0x00000000004798b7: or al, 0xe9; ret; 
0x0000000000442d53: or al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x00000000004960d3: or al, 0xf6; ret 0xf01; 
0x000000000047f523: or al, 0xf6; ret 0xf04; 
0x0000000000479274: or al, 0xf6; ret 0xf08; 
0x0000000000492f87: or al, 0xf6; ret; 
0x00000000004a3974: or al, 0xf7; cmp al, 8; jne 0x175a; mov qword ptr [rcx], rdx; add rsp, 8; ret; 
0x0000000000455da3: or al, 0xf; test dword ptr [rsi + 7], eax; add byte ptr [rax], al; ret; 
0x0000000000455fe0: or al, 5; add byte ptr [rax], al; ret; 
0x0000000000437fe7: or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044b981: or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000438015: or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000045d115: or al, byte ptr [rax]; add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5d124; ret; 
0x0000000000401d58: or al, byte ptr [rax]; mov byte ptr [rip + 0xe251f], 1; pop rbp; ret; 
0x0000000000410959: or al, byte ptr [rax]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rdx; ret; 
0x0000000000402169: or al, byte ptr [rax]; ret; 
0x0000000000410d30: or al, byte ptr [rcx + 0xd40a50d]; add byte ptr [rax], al; and byte ptr [rax], al; add dh, dh; ret 0x7440; 
0x0000000000410d21: or al, byte ptr [rcx + 0xd40b40d]; add byte ptr [rax], al; adc byte ptr [rax], al; add dh, dh; ret 0x7402; 
0x0000000000410cd7: or al, byte ptr [rcx + 0xd40fe0d]; add byte ptr [rax], al; add dword ptr [rax], eax; add byte ptr [rbx + 0xd40b415], cl; add dh, dh; ret 0x7408; 
0x0000000000460097: or al, byte ptr [rcx + rcx*8 + 0x1f0f1574]; add byte ptr [rax - 0x7d], cl; ret 0x8801; 
0x000000000042a6ba: or al, byte ptr [rcx - 0x72b7fff5]; add eax, 0x319b; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x000000000040254c: or al, ch; fidivr word ptr [rdi]; add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rcx - 0x75], 0; add rsp, 8; ret; 
0x000000000045c19e: or al, ch; push rdi; add al, byte ptr [rax]; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000483fb4: or al, ch; push rsi; sal edi, 1; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x000000000048f607: or al, ch; ret; 
0x0000000000430368: or al, ch; test al, 0xff; dec dword ptr [rbx + 0x9082454]; ret 0x37e9; 
0x000000000048b5d1: or bh, bh; adc eax, 0x57ba8; xor eax, eax; add rsp, 8; ret; 
0x0000000000410fc0: or bh, bh; push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000401d4f: or bh, byte ptr [rdi + 0x4d08d0]; call 0xa5cc0; mov byte ptr [rip + 0xe251f], 1; pop rbp; ret; 
0x0000000000490964: or bh, dh; dec dword ptr [rax + 1]; ret; 
0x00000000004908b9: or bh, dh; dec dword ptr [rax - 0x77]; ret; 
0x000000000045de95: or bl, byte ptr [rbp + 0x41]; pop rsp; pop r13; ret; 
0x00000000004a45ab: or bl, ch; iretd; nop; xor eax, eax; ret; 
0x000000000049d060: or bl, ch; shld r8, r9, cl; mov qword ptr [rdi], r8; shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x0000000000442f13: or bl, dh; movq qword ptr [rdi], mm1; ret; 
0x00000000004a45aa: or bl, r13b; iretd; nop; xor eax, eax; ret; 
0x000000000046da08: or byte ptr [r11 + 0x1974fdf8], al; pop rbx; ret; 
0x0000000000423470: or byte ptr [r15], cl; adc dword ptr [rbx + 0x18], eax; movups xmmword ptr [rbx + 0x28], xmm0; pop rbx; ret; 
0x0000000000426cb6: or byte ptr [r15], r9b; mov dh, 2; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000426a4e: or byte ptr [r8 + 0x39], r9b; ret 0x870f; 
0x00000000004289ac: or byte ptr [r8 + 0x39], r9b; sal byte ptr [rbx + 0x25], 1; movzx eax, byte ptr [rax]; ret; 
0x000000000049e997: or byte ptr [r8 + 2], r15b; ret; 
0x000000000049ea0b: or byte ptr [r8 - 0x3ffe], r15b; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x0000000000450bb8: or byte ptr [r8 - 0x77], cl; or byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000048f761: or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x000000000045d69c: or byte ptr [r8 - 0x77], cl; ret 0xe083; 
0x0000000000485aa2: or byte ptr [r8 - 0x7b], cl; sal byte ptr [rdi + 0x48], 0x89; ret; 
0x000000000048f70d: or byte ptr [r8 - 0x7b], cl; sal byte ptr [rsp + rdi + 0x48], 0x89; ret; 
0x0000000000422213: or byte ptr [r9 + 0x800ce], r8b; add byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ret 0x7589; 
0x000000000045dc91: or byte ptr [r9 - 0x75], cl; add dword ptr [rbx + 0x94901e0], eax; ret; 
0x0000000000450c77: or byte ptr [r9 - 0x76b7f7be], cl; clc; ret; 
0x0000000000452b17: or byte ptr [r9 - 0x76b7f7be], cl; clc; sub r8, 0xc; lea rcx, [rdx + 0xc]; jne 0x52d30; ret; 
0x00000000004053fc: or byte ptr [r9 - 0x77], al; ret 0xc085; 
0x000000000045dc83: or byte ptr [r9 - 0x77], cl; adc byte ptr [r11 + 0x94801e0], al; ror byte ptr [rcx - 0x77], 1; or byte ptr [r9 - 0x75], cl; add dword ptr [rbx + 0x94901e0], eax; ret; 
0x0000000000421886: or byte ptr [rax + 0x2b], cl; adc dword ptr [rax - 0x3f], ecx; cli; add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x0000000000426a4f: or byte ptr [rax + 0x39], cl; ret 0x870f; 
0x000000000048aa24: or byte ptr [rax + 0x39], cl; ret 0xd74; 
0x0000000000409d0a: or byte ptr [rax + 0x39], cl; ret 0xf075; 
0x000000000042c5fe: or byte ptr [rax + 0x39], cl; ret; 
0x00000000004289ad: or byte ptr [rax + 0x39], cl; sal byte ptr [rbx + 0x25], 1; movzx eax, byte ptr [rax]; ret; 
0x00000000004a4357: or byte ptr [rax + 1], bh; cmp qword ptr [rsi + 8], rcx; ja 0xa4365; sbb eax, eax; ret; 
0x000000000047fd19: or byte ptr [rax + 1], bh; pop rbx; pop rbp; ret; 
0x000000000049923e: or byte ptr [rax + 1], cl; ret; 
0x00000000004a4356: or byte ptr [rax + 1], dil; cmp qword ptr [rsi + 8], rcx; ja 0xa4365; sbb eax, eax; ret; 
0x000000000049e998: or byte ptr [rax + 2], bh; ret; 
0x000000000049d3f4: or byte ptr [rax + 3], cl; add dword ptr [rdi], ecx; xchg eax, edx; ret 0x8948; 
0x0000000000429389: or byte ptr [rax + rax], al; add byte ptr [rsi + 1], dh; ret; 
0x00000000004916f7: or byte ptr [rax + rcx*2 + 0x2b], ah; add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000004916f6: or byte ptr [rax + rcx*2 + 0x2b], spl; add al, 0x25; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000407fb3: or byte ptr [rax - 0x11], bh; pop rbx; pop rbp; ret; 
0x000000000049c42e: or byte ptr [rax - 0x39], cl; ret 0xffff; 
0x000000000049ea0c: or byte ptr [rax - 0x3ffe], bh; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x0000000000483d41: or byte ptr [rax - 0x73], cl; add eax, 0x257; lea rdx, [rip + 0x30]; cmovne rax, rdx; ret; 
0x0000000000431c60: or byte ptr [rax - 0x73], cl; add eax, 0x9568; lea rdx, [rip + 0xeaf1]; cmovne rax, rdx; ret; 
0x0000000000431af0: or byte ptr [rax - 0x73], cl; add eax, 0x96b8; lea rdx, [rip + 0xec41]; cmovne rax, rdx; ret; 
0x0000000000431990: or byte ptr [rax - 0x73], cl; add eax, 0xc218; lea rdx, [rip + 0x118b1]; cmovne rax, rdx; ret; 
0x0000000000455d19: or byte ptr [rax - 0x73], cl; jg 0x55d26; jne 0x564f0; ret; 
0x000000000049dd7c: or byte ptr [rax - 0x73], cl; push rdi; add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x000000000049e424: or byte ptr [rax - 0x73], cl; push rsi; add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x000000000049bfbc: or byte ptr [rax - 0x75], cl; xchg eax, ebp; push rax; add al, 0; add bl, ch; ret; 
0x0000000000423263: or byte ptr [rax - 0x75], cl; xor ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000481a5f: or byte ptr [rax - 0x77], cl; add edi, dword ptr [rax + 1]; pop rbx; pop rbp; pop r12; ret; 
0x0000000000450bbd: or byte ptr [rax - 0x77], cl; clc; ret; 
0x00000000004527dd: or byte ptr [rax - 0x77], cl; clc; sub r8, 0x10; lea rcx, [rdx + 0x10]; jne 0x52d30; ret; 
0x0000000000452b1b: or byte ptr [rax - 0x77], cl; clc; sub r8, 0xc; lea rcx, [rdx + 0xc]; jne 0x52d30; ret; 
0x0000000000455d35: or byte ptr [rax - 0x77], cl; cmovns eax, dword ptr [rbx - 0x72b7f618]; jg 0x55d4a; jne 0x564f0; ret; 
0x000000000046a2f0: or byte ptr [rax - 0x77], cl; fimul dword ptr [rax - 0x75]; add byte ptr [rax + 0x29], cl; ret 0x8348; 
0x0000000000450bb9: or byte ptr [rax - 0x77], cl; or byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000042c8ae: or byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000048f762: or byte ptr [rax - 0x77], cl; ret 0x8548; 
0x000000000040988a: or byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000045d69d: or byte ptr [rax - 0x77], cl; ret 0xe083; 
0x000000000042ad34: or byte ptr [rax - 0x77], cl; ret; 
0x000000000042ad33: or byte ptr [rax - 0x77], r9b; ret; 
0x000000000045dde2: or byte ptr [rax - 0x7b], cl; div byte ptr [rbp + 8]; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000404df9: or byte ptr [rax - 0x7b], cl; div byte ptr [rbp + rcx - 0x75]; or byte ptr [rbx + 0x518d0c46], r9b; add bh, byte ptr [rcx]; ret 0x1477; 
0x0000000000426dad: or byte ptr [rax - 0x7b], cl; push qword ptr [rsp + rax - 0x58]; add dword ptr [rcx + rbp - 0x77], esi; ret 0xff3; 
0x0000000000485aa3: or byte ptr [rax - 0x7b], cl; sal byte ptr [rdi + 0x48], 0x89; ret; 
0x000000000048f70e: or byte ptr [rax - 0x7b], cl; sal byte ptr [rsp + rdi + 0x48], 0x89; ret; 
0x000000000042c066: or byte ptr [rax - 0x7d], cl; ret 0x4110; 
0x000000000049ac87: or byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000041364a: or byte ptr [rax - 0x7d], cl; ret; 
0x0000000000403858: or byte ptr [rax - 0xe], bh; pop rbx; pop rbp; ret; 
0x00000000004028c3: or byte ptr [rax - 1], bh; pop rbp; pop r12; ret; 
0x0000000000422297: or byte ptr [rax - 1], bh; pop rbx; pop rbp; ret; 
0x000000000040a3a2: or byte ptr [rax], al; add al, ah; jne 0xa4a0; mov rax, 0x4dee00; ret; 
0x000000000040a428: or byte ptr [rax], al; add al, al; jne 0xa4a0; mov rax, 0x4ded80; ret; 
0x000000000040a364: or byte ptr [rax], al; add byte ptr [rax + 0x132850f], al; add byte ptr [rax], al; mov rax, 0x4dedc0; ret; 
0x00000000004382b7: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bb21: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004381f5: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000496852: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004a451e: or byte ptr [rax], al; add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000045a889: or byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x000000000045c1e5: or byte ptr [rax], al; add byte ptr [rax], al; syscall; cmp rax, -0x1000; ja 0x5c1f8; ret; 
0x000000000042c91e: or byte ptr [rax], al; add byte ptr [rbp + 0x3e850ff6], al; add al, byte ptr [rax]; add byte ptr [rbp - 0x7cfdb9], cl; add dh, byte ptr [rsp - 0x77]; ret 0xb48b; 
0x000000000043a8c0: or byte ptr [rax], al; add byte ptr [rip + 0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x0000000000422218: or byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ret 0x7589; 
0x0000000000401e85: or byte ptr [rax], al; add cl, cl; ret; 
0x000000000045f881: or byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000462054: or byte ptr [rax], al; and eax, 0xffffffc7; or eax, 0x10; mov dword ptr [rip + 0x838f2], eax; pop rbx; ret; 
0x0000000000461fb4: or byte ptr [rax], al; and eax, 0xfffffff8; or eax, 2; mov dword ptr [rip + 0x83992], eax; pop rbx; ret; 
0x000000000045f828: or byte ptr [rax], al; mov edx, 0x64; test eax, eax; cmove eax, edx; ret; 
0x00000000004620b4: or byte ptr [rax], al; pop rbx; and eax, 0xffffffc7; or eax, 0x18; mov dword ptr [rip + 0x83891], eax; ret; 
0x0000000000462084: or byte ptr [rax], al; pop rbx; and eax, 0xffffffc7; or eax, 8; mov dword ptr [rip + 0x838c1], eax; ret; 
0x0000000000461fe4: or byte ptr [rax], al; pop rbx; and eax, 0xfffffff8; or eax, 1; mov dword ptr [rip + 0x83961], eax; ret; 
0x0000000000462014: or byte ptr [rax], al; pop rbx; and eax, 0xfffffff8; or eax, 3; mov dword ptr [rip + 0x83931], eax; ret; 
0x000000000046133e: or byte ptr [rax], al; pop rbx; ret; 
0x0000000000461309: or byte ptr [rax], al; ret; 
0x0000000000461318: or byte ptr [rax], al; test eax, eax; je 0x61320; ret; 
0x0000000000464cec: or byte ptr [rax], al; test eax, eax; je 0x64cf8; ret; 
0x000000000045cf69: or byte ptr [rax], al; test rax, rax; je 0x5cf71; ret; 
0x000000000044d1ee: or byte ptr [rax], r8b; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000461317: or byte ptr [rax], r8b; test eax, eax; je 0x61320; ret; 
0x000000000041ef07: or byte ptr [rbp + 0x31], al; ror byte ptr [rcx + rcx*4 - 0x40], 0x5b; pop rbp; ret; 
0x00000000004024e2: or byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x000000000049bf23: or byte ptr [rbp + 0x440f4cf6], al; ret 0x8d48; 
0x000000000040a438: or byte ptr [rbp + rax*2 - 0x7d], dh; dec dword ptr [rdi]; jne 0xa4a0; mov rax, 0x4e1220; ret; 
0x0000000000401d52: or byte ptr [rbp], cl; call 0xa5cc0; mov byte ptr [rip + 0xe251f], 1; pop rbp; ret; 
0x000000000046da09: or byte ptr [rbx + 0x1974fdf8], al; pop rbx; ret; 
0x000000000046d9e7: or byte ptr [rbx + 0x37403fe], al; ret; 
0x000000000046e8d6: or byte ptr [rbx + 0x41], bl; pop rsi; ret; 
0x000000000042477e: or byte ptr [rbx + 0x48], bl; sub eax, edx; pop rbp; pop r12; ret; 
0x0000000000404e01: or byte ptr [rbx + 0x518d0c46], cl; add bh, byte ptr [rcx]; ret 0x1477; 
0x0000000000404e00: or byte ptr [rbx + 0x518d0c46], r9b; add bh, byte ptr [rcx]; ret 0x1477; 
0x0000000000481997: or byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x0000000000424144: or byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x00000000004985d7: or byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000040384b: or byte ptr [rbx + 0x5d], bl; ret; 
0x00000000004200c0: or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x0000000000499425: or byte ptr [rbx - 0x7af0f802], al; ret 1; 
0x000000000042a6c9: or byte ptr [rbx], 0; ret; 
0x000000000048b0cc: or byte ptr [rbx], al; add byte ptr [rax], al; lea rax, [rax + rdx*4]; mov dword ptr [rdi + 0x2fc], ecx; mov qword ptr [rdi + 0x310], rax; ret; 
0x000000000048b10f: or byte ptr [rbx], al; add byte ptr [rax], al; ret; 
0x000000000049e7ab: or byte ptr [rcx + 0x29], cl; ret 0x894c; 
0x0000000000460963: or byte ptr [rcx + 0x3e895], cl; add dh, dh; ret 0x7402; 
0x0000000000422214: or byte ptr [rcx + 0x800ce], al; add byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ret 0x7589; 
0x0000000000410a24: or byte ptr [rcx + 0xd43591d], cl; add byte ptr [rbx + 0xd890fe2], al; push rsp; or eax, 0x46058900; or eax, 0x89178900; ret 0xeac1; 
0x00000000004a113b: or byte ptr [rcx + 1], cl; ret 0x894c; 
0x000000000049d9f1: or byte ptr [rcx + 1], cl; ret 0x8d48; 
0x000000000042a83b: or byte ptr [rcx + 1], cl; ror dword ptr [rax + 0xf], 1; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x000000000049d7c0: or byte ptr [rcx + rax - 0x3e], cl; mov rax, rdx; pop rbx; ret; 
0x000000000041c1f4: or byte ptr [rcx + rcx*4 + 0xc], cl; and al, 0xe8; ret 0xff9d; 
0x000000000041caf3: or byte ptr [rcx + rcx*4 + 0xc], cl; and al, 0xe8; ret; 
0x00000000004a16de: or byte ptr [rcx + rcx*4 + 1], cl; ret; 
0x000000000041d5f4: or byte ptr [rcx + rcx*4 + 4], cl; and al, 0xe8; ret 0xff89; 
0x000000000045d732: or byte ptr [rcx + rcx*4 - 0x18], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000402481: or byte ptr [rcx + rcx*4 - 0x20], al; pop rbp; pop r12; ret; 
0x00000000004927a3: or byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop r12; ret; 
0x00000000004a09a5: or byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000404e0f: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbp; pop r12; ret; 
0x0000000000407c8a: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop r12; ret; 
0x0000000000420820: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000048f264: or byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; ret; 
0x00000000004717be: or byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004205a6: or byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x000000000042fea7: or byte ptr [rcx + rcx*4 - 0x40], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000049e7b2: or byte ptr [rcx - 0x2feeb728], cl; pop rbp; pop rbx; ret; 
0x000000000045dc92: or byte ptr [rcx - 0x75], cl; add dword ptr [rbx + 0x94901e0], eax; ret; 
0x0000000000421b7b: or byte ptr [rcx - 0x75], cl; sub byte ptr [r13 - 0x7b], r8b; sal byte ptr [rbx + rbp*2 + 0x49], 0x2b; and byte ptr [r8 + 1], r9b; ret; 
0x0000000000450c78: or byte ptr [rcx - 0x76b7f7be], cl; clc; ret; 
0x0000000000452b18: or byte ptr [rcx - 0x76b7f7be], cl; clc; sub r8, 0xc; lea rcx, [rdx + 0xc]; jne 0x52d30; ret; 
0x000000000049e8f9: or byte ptr [rcx - 0x77], 0; mov eax, 1; mov dword ptr [rdx], 0xffffc002; ret; 
0x00000000004053fd: or byte ptr [rcx - 0x77], al; ret 0xc085; 
0x0000000000487982: or byte ptr [rcx - 0x77], al; xchg eax, esp; and al, 0xe8; add eax, dword ptr [rax]; add dh, dh; ret 0x7402; 
0x000000000045dc84: or byte ptr [rcx - 0x77], cl; adc byte ptr [r11 + 0x94801e0], al; ror byte ptr [rcx - 0x77], 1; or byte ptr [r9 - 0x75], cl; add dword ptr [rbx + 0x94901e0], eax; ret; 
0x000000000048798f: or byte ptr [rcx - 0x77], cl; test byte ptr [rax + rax*8], ah; add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x0000000000455d9b: or byte ptr [rcx - 0x7d], cl; call 0x7f92a5af; or al, 0xf; test dword ptr [rsi + 7], eax; add byte ptr [rax], al; ret; 
0x000000000049fe08: or byte ptr [rcx - 0x7d], cl; ret 0x4808; 
0x000000000049fe5b: or byte ptr [rcx - 0x7d], cl; ret 0x4d08; 
0x000000000045d3bc: or byte ptr [rcx - 0xa], al; ret; 
0x0000000000430371: or byte ptr [rcx], cl; ret 0x37e9; 
0x0000000000402853: or byte ptr [rcx], dh; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000430ba1: or byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000046061a: or byte ptr [rcx], dh; rol byte ptr [rax - 0x6af0ffc8], cl; ret 0x8348; 
0x0000000000460de8: or byte ptr [rcx], dh; rol byte ptr [rax - 0x6af0ffc8], cl; ret 0x8d48; 
0x0000000000460dc7: or byte ptr [rcx], dh; rol byte ptr [rax - 0x6bf0ffc8], cl; ret 0x8d48; 
0x000000000048b690: or byte ptr [rdi + 0x31d], 4; ret; 
0x000000000048b5e0: or byte ptr [rdi + 0x31d], 4; xor eax, eax; ret; 
0x00000000004a4360: or byte ptr [rdi + 2], dh; sbb eax, eax; ret; 
0x00000000004a435f: or byte ptr [rdi + 2], r14b; sbb eax, eax; ret; 
0x00000000004141ac: or byte ptr [rdi + rcx - 0x7b], dl; ret; 
0x000000000040a367: or byte ptr [rdi], 0x85; xor al, byte ptr [rcx]; add byte ptr [rax], al; mov rax, 0x4dedc0; ret; 
0x00000000004856ab: or byte ptr [rdi], ch; jne 0x8566f; leave; mov eax, 1; ret; 
0x0000000000423471: or byte ptr [rdi], cl; adc dword ptr [rbx + 0x18], eax; movups xmmword ptr [rbx + 0x28], xmm0; pop rbx; ret; 
0x0000000000426d5f: or byte ptr [rdi], cl; mov dh, 0; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000485034: or byte ptr [rdi], cl; mov dh, 0xc0; add rsp, 0x58; ret; 
0x000000000049eb6f: or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x0000000000426cb7: or byte ptr [rdi], cl; mov dh, 2; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004a042d: or byte ptr [rdi], cl; test byte ptr [rax + rax + 0x438b0000], al; adc byte ptr [rbp + 0x2d840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000045c51b: or byte ptr [rdi], cl; xchg eax, ebp; ret 0x8948; 
0x0000000000411225: or byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x0000000000459315: or byte ptr [rdx + 0xa], dh; vmovq qword ptr [rdi], xmm0; vmovq qword ptr [rsi - 8], xmm0; ret; 
0x0000000000445ed7: or byte ptr [rdx + 0xf], dh; mov rsi, qword ptr [rsi]; mov rcx, qword ptr [rcx - 8]; mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x000000000048c46d: or byte ptr [rip - 0x7cb7208c], ah; ret; 
0x0000000000499014: or cl, byte ptr [rax + 0x3b]; add eax, 0x4c114; jae 0x9902a; mov rdx, qword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000421069: or cl, byte ptr [rax + 1]; ret 0x8948; 
0x0000000000424136: or cl, byte ptr [rax + 1]; ret 0x8949; 
0x0000000000498338: or cl, byte ptr [rax - 0x73]; adc eax, 0x4b7c0; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000455d61: or cl, byte ptr [rax - 0x73]; jg 0x55d70; jne 0x564f0; ret; 
0x0000000000452ae2: or cl, byte ptr [rax - 0x73]; or cl, byte ptr [rdi]; test dword ptr [rbx + 2], eax; add byte ptr [rax], al; ret; 
0x00000000004109ab: or cl, byte ptr [rax - 0x7d]; ret 0x3944; 
0x0000000000423128: or cl, byte ptr [rax - 0x7d]; ret; 
0x0000000000452ae6: or cl, byte ptr [rdi]; test dword ptr [rbx + 2], eax; add byte ptr [rax], al; ret; 
0x0000000000477bba: or cl, ch; ret 0xfff3; 
0x0000000000437c82: or dh, al; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x0000000000442e33: or dh, bl; movq qword ptr [rdi], mm1; ret; 
0x0000000000408cd0: or dh, byte ptr [rbp - 0x13]; mov eax, 0xffffffef; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000408940: or dh, byte ptr [rbp - 0x13]; mov eax, 0xffffffef; pop rbx; pop rbp; pop r12; ret; 
0x0000000000481676: or dh, byte ptr [rdi + rcx + 0x48]; cmp eax, esi; ja 0x81670; lea eax, [rdx + rdi]; ret; 
0x0000000000427a56: or dh, byte ptr [rdi + rcx + 0x48]; cmp ecx, esi; ja 0x27a50; lea eax, [rdx + rdi]; ret; 
0x00000000004222a7: or dh, byte ptr [rsp + rdi*4 + 0x48]; add esp, 8; mov eax, ebx; pop rbx; pop rbp; ret; 
0x000000000042d6cb: or dh, dh; ret 0xf02; 
0x0000000000427758: or dword ptr [rax + 0x74], 0x80; mov rax, qword ptr [rax + 0x68]; test rax, rax; jne 0x27758; ret; 
0x000000000041dfa9: or dword ptr [rax + rax*8 - 0x38b78d8c], eax; ret 0xfff0; 
0x0000000000455d3c: or dword ptr [rax - 0x73], ecx; jg 0x55d4a; jne 0x564f0; ret; 
0x0000000000452ac2: or dword ptr [rax - 0x73], ecx; or qword ptr [rdi], rcx; test dword ptr [rbx + 2], esp; add byte ptr [rax], al; ret; 
0x00000000004125b6: or dword ptr [rax - 0x77], 0xc58349d7; add dword ptr [rax - 0x7d], ecx; ret 0x8801; 
0x000000000046f776: or dword ptr [rax - 0x7d], ecx; ret 0x4101; 
0x000000000044f42e: or dword ptr [rax - 1], ecx; ret 0xc148; 
0x0000000000411802: or dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004381c7: or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044d09f: or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000438105: or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000041eef6: or dword ptr [rax], eax; call 0x11c50; xor r8d, r8d; mov rax, r8; ret; 
0x000000000041eeef: or dword ptr [rax], eax; lea rdi, [rip + 0x96075]; call 0x11c50; xor r8d, r8d; mov rax, r8; ret; 
0x000000000040b4a5: or dword ptr [rax], eax; ret; 
0x000000000043afb6: or dword ptr [rbp - 0xcffffff], 0xf; outsd dx, dword ptr [rsi]; push rdi; ret 0xff3; 
0x000000000047ac83: or dword ptr [rbp - 8], esp; dec dword ptr [rax - 0x77]; ret 0xc9e9; 
0x00000000004238c0: or dword ptr [rbx], 0x20; mov eax, 0xffffffff; pop rbx; ret; 
0x000000000042a6bb: or dword ptr [rbx], 0x58d4800; wait; xor dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; add eax, 0xb80f4; ret; 
0x000000000045b042: or dword ptr [rcx - 0x77], 0xc68348d2; add dword ptr [rax - 0x7d], ecx; ret 0x8801; 
0x000000000049254c: or dword ptr [rdi - 0x2f], esi; mov rax, r8; ret; 
0x000000000041dfa5: or dword ptr [rdi], ecx; mov dh, 0x40; or dword ptr [rax + rax*8 - 0x38b78d8c], eax; ret 0xfff0; 
0x0000000000452ac6: or dword ptr [rdi], ecx; test dword ptr [rbx + 2], esp; add byte ptr [rax], al; ret; 
0x000000000047ec42: or dword ptr [rdi], ecx; xchg bh, al; add al, byte ptr [rax]; add byte ptr [rcx - 0x76b3d395], cl; ret 0x8348; 
0x000000000047f386: or dword ptr [rdi], ecx; xchg dword ptr [rbx], esi; add al, 0; add byte ptr [rbx - 0x7cb7fb8e], cl; ret 0xb804; 
0x000000000048fa4f: or dword ptr [rip + 0x536f2], 1; ret; 
0x0000000000464d01: or dword ptr [rip + 0x80134], 2; add rsp, 8; ret; 
0x0000000000490da7: or dword ptr [rsi - 0x1a], esi; cmp ecx, r8d; je 0x90cfa; mov eax, ecx; sub eax, r8d; ret; 
0x0000000000410d26: or eax, 0x100000; add dh, dh; ret 0x7402; 
0x0000000000410cdc: or eax, 0x10000; add byte ptr [rbx + 0xd40b415], cl; add dh, dh; ret 0x7408; 
0x0000000000462059: or eax, 0x10; mov dword ptr [rip + 0x838f2], eax; pop rbx; ret; 
0x00000000004620ba: or eax, 0x18; mov dword ptr [rip + 0x83891], eax; ret; 
0x0000000000403086: or eax, 0x1b800; add byte ptr [rax], al; pop rbx; mov dword ptr [rip + 0xdf070], 1; ret; 
0x0000000000456d01: or eax, 0x1c478d48; ret; 
0x0000000000456001: or eax, 0x1de88349; lea rdi, [rdi + 0x1d]; jne 0x564f0; ret; 
0x0000000000452b48: or eax, 0x1e1850f; add byte ptr [rax], al; ret; 
0x0000000000410d35: or eax, 0x200000; add dh, dh; ret 0x7440; 
0x00000000004109de: or eax, 0x32048b00; mov dword ptr [rip + 0xd38ff], eax; lea rax, [rip + 0xd38f0]; ret; 
0x000000000041266c: or eax, 0x3d8b4c00; ret; 
0x000000000047e9fa: or eax, 0x401f0f08; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000047f2b2: or eax, 0x401f0f08; add byte ptr [rbx - 0x7cb7fbbe], cl; ret 0x4104; 
0x0000000000410a32: or eax, 0x46058900; or eax, 0x89178900; ret 0xeac1; 
0x00000000004831c5: or eax, 0x48fad348; test edx, edx; je 0x831f0; bsf rax, rdx; ret; 
0x0000000000411d92: or eax, 0x5be43145; pop rbp; mov rax, r12; pop r12; ret; 
0x000000000042acaa: or eax, 0x5d5bc031; pop r12; ret; 
0x000000000044da5a: or eax, 0x6d2e1; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000044c645: or eax, 0x6e6f6; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000044c3da: or eax, 0x6e961; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000044ab05: or eax, 0x70236; mov eax, dword ptr [rcx + rax*4]; mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x0000000000455dc5: or eax, 0x724850f; add byte ptr [rax], al; ret; 
0x000000000040aaca: or eax, 0x7507c7; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000456cf8: or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000455628: or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000455ff8: or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; sub r8, 0x1d; lea rdi, [rdi + 0x1d]; jne 0x564f0; ret; 
0x0000000000437d17: or eax, 0x83480000; ret 0x4910; 
0x000000000044b641: or eax, 0x83480000; ret 0xe910; 
0x0000000000437d45: or eax, 0x83480000; ret 0xeb10; 
0x0000000000410a38: or eax, 0x89178900; ret 0xeac1; 
0x0000000000404dfe: or eax, 0x8b084e8b; or al, 0x8d; push rcx; add bh, byte ptr [rcx]; ret 0x1477; 
0x0000000000410903: or eax, 0x8bf36348; add al, 0x30; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004234e7: or eax, 0xc0794; mov qword ptr [rdx + 0xe0], rcx; pop rbx; ret; 
0x0000000000483ea2: or eax, 0xc2bc0f48; shr rax, 2; ret; 
0x0000000000410bc2: or eax, 0xc4814800; mov byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000452b44: or eax, 0xd4a8d48; jne 0x52d30; ret; 
0x0000000000455dc1: or eax, 0xd7f8d48; jne 0x564f0; ret; 
0x000000000048976c: or eax, 0xe8f7894c; sti; ret; 
0x0000000000442cda: or eax, 0xef00ff2; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442ce3: or eax, 0xf7f0ff3; ret; 
0x000000000045fabf: or eax, 0xffffff9c; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x00000000004028cd: or eax, 0xffffffff; ret; 
0x0000000000461fea: or eax, 1; mov dword ptr [rip + 0x83961], eax; ret; 
0x00000000004398d9: or eax, 1; ret; 
0x0000000000461fb9: or eax, 2; mov dword ptr [rip + 0x83992], eax; pop rbx; ret; 
0x000000000046201a: or eax, 3; mov dword ptr [rip + 0x83931], eax; ret; 
0x000000000046208a: or eax, 8; mov dword ptr [rip + 0x838c1], eax; ret; 
0x000000000042e4c5: or eax, dword ptr [r8]; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x0000000000430f68: or eax, dword ptr [rax]; adc byte ptr [rax - 0x73], cl; adc eax, 0x2818e; lea rax, [rip + 0x280d7]; cmovne rax, rdx; ret; 
0x00000000004318a8: or eax, dword ptr [rax]; adc byte ptr [rax - 0x73], cl; adc eax, 0xfffffc9e; lea rax, [rip + 0x272f7]; cmove rax, rdx; ret; 
0x0000000000481dd6: or eax, dword ptr [rax]; add byte ptr [rax - 0x73], cl; add eax, 0x810; cmove rax, rdx; ret; 
0x0000000000437ef7: or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044b7e1: or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000437f25: or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000428974: or eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000045d0e5: or eax, dword ptr [rax]; add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5d0f4; ret; 
0x000000000047c15e: or eax, dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret 0xb8; 
0x0000000000431ca4: or eax, dword ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x27832; lea rax, [rip + 0x278eb]; cmove rax, rdx; ret; 
0x0000000000431b34: or eax, dword ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x27992; lea rax, [rip + 0x27a4b]; cmove rax, rdx; ret; 
0x00000000004319d4: or eax, dword ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x27b02; lea rax, [rip + 0x27bbb]; cmove rax, rdx; ret; 
0x0000000000431c36: or eax, dword ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x27c70; lea rax, [rip + 0x27cb9]; cmove rax, rdx; ret; 
0x0000000000431ac6: or eax, dword ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x27dd0; lea rax, [rip + 0x27e19]; cmove rax, rdx; ret; 
0x0000000000431966: or eax, dword ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x27f40; lea rax, [rip + 0x27f89]; cmove rax, rdx; ret; 
0x0000000000431c88: or eax, dword ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x2805e; lea rax, [rip + 0x280a7]; cmove rax, rdx; ret; 
0x0000000000431b18: or eax, dword ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x281be; lea rax, [rip + 0x28207]; cmove rax, rdx; ret; 
0x00000000004319b8: or eax, dword ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x2832e; lea rax, [rip + 0x28377]; cmove rax, rdx; ret; 
0x0000000000431a78: or eax, dword ptr [rax]; add cl, byte ptr [rax - 0x73]; adc eax, 0x28ace; lea rax, [rip + 0x28b27]; cmove rax, rdx; ret; 
0x0000000000431b8f: or eax, dword ptr [rax]; add cl, byte ptr [rax - 0x73]; add eax, 0x1d8a7; lea rdx, [rip + 0x21cc0]; cmovne rax, rdx; ret; 
0x0000000000430f3f: or eax, dword ptr [rax]; add cl, byte ptr [rax - 0x73]; add eax, 0x1e407; lea rdx, [rip + 0x1e5e0]; cmovne rax, rdx; ret; 
0x000000000043109f: or eax, dword ptr [rax]; add cl, byte ptr [rax - 0x73]; add eax, 0xc97; lea rdx, [rip + 0x1fc30]; cmovne rax, rdx; ret; 
0x0000000000430edf: or eax, dword ptr [rax]; add cl, byte ptr [rax - 0x73]; add eax, 0xeb7; lea rdx, [rip + 0x25b0]; cmovne rax, rdx; ret; 
0x0000000000431984: or eax, dword ptr [rax]; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x000000000043048f: or eax, dword ptr [rax]; add dword ptr [rax - 0x77], ecx; ret 0x3174; 
0x000000000042975c: or eax, dword ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0xb9004], eax; ret; 
0x0000000000429735: or eax, dword ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xb900e], rax; ret; 
0x000000000042970c: or eax, dword ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xb902f], rax; ret; 
0x00000000004296ec: or eax, dword ptr [rax]; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rip + 0xb9047], rax; ret; 
0x000000000042a5be: or eax, dword ptr [rax]; add rsp, 0x10; pop rbp; ret; 
0x0000000000431d1d: or eax, dword ptr [rax]; cmp rax, rdx; lea rdx, [rip + 0x1c407]; lea rax, [rip + 0x1bfc0]; cmove rax, rdx; ret; 
0x0000000000430fdd: or eax, dword ptr [rax]; cmp rax, rdx; lea rdx, [rip + 0x1d4d7]; lea rax, [rip + 0x1d330]; cmove rax, rdx; ret; 
0x0000000000431cdd: or eax, dword ptr [rax]; cmp rax, rdx; lea rdx, [rip + 0x7547]; lea rax, [rip + 0x7330]; cmove rax, rdx; ret; 
0x0000000000430e7f: or eax, dword ptr [rax]; lea rax, [rip + 0x1cc37]; lea rdx, [rip + 0x26290]; cmovne rax, rdx; ret; 
0x000000000042a6bc: or eax, dword ptr [rax]; lea rax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x000000000042a6ae: or eax, dword ptr [rax]; lea rax, [rip + 0x3429]; mov qword ptr [rip + 0xb810a], rax; lea rax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x000000000042a5b7: or eax, dword ptr [rax]; lea rax, [rip + 0xb8220]; add rsp, 0x10; pop rbp; ret; 
0x000000000042e4b8: or eax, dword ptr [rax]; lea rax, [rip - 0x9e1]; mov qword ptr [rip + 0xb4300], rax; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x000000000042e4c6: or eax, dword ptr [rax]; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x00000000004296c8: or eax, dword ptr [rax]; mov dword ptr [r11 + 0x24], ebp; pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x000000000040c1dd: or eax, dword ptr [rax]; ret; 
0x000000000042d250: or eax, dword ptr [rax]; syscall; pop rbp; ret; 
0x000000000042e3bc: or eax, dword ptr [rax]; syscall; pop rbx; ret; 
0x0000000000426192: or eax, dword ptr [rax]; syscall; ret; 
0x000000000046da03: or eax, dword ptr [rbx + 0x438901e8]; or byte ptr [rbx + 0x1974fdf8], al; pop rbx; ret; 
0x0000000000403246: or eax, dword ptr [rcx]; add byte ptr [rax], al; add rsp, 0x20; mov eax, r12d; pop r12; ret; 
0x0000000000430f67: or eax, dword ptr ds:[rax]; adc byte ptr [rax - 0x73], cl; adc eax, 0x2818e; lea rax, [rip + 0x280d7]; cmovne rax, rdx; ret; 
0x0000000000430f3e: or eax, dword ptr ds:[rax]; add cl, byte ptr [rax - 0x73]; add eax, 0x1e407; lea rdx, [rip + 0x1e5e0]; cmovne rax, rdx; ret; 
0x0000000000430ede: or eax, dword ptr ds:[rax]; add cl, byte ptr [rax - 0x73]; add eax, 0xeb7; lea rdx, [rip + 0x25b0]; cmovne rax, rdx; ret; 
0x0000000000430fdc: or eax, dword ptr ds:[rax]; cmp rax, rdx; lea rdx, [rip + 0x1d4d7]; lea rax, [rip + 0x1d330]; cmove rax, rdx; ret; 
0x000000000044de47: or eax, ecx; shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x000000000042e46d: or eax, edi; add eax, 0xb68a8; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000044de4e: or eax, edx; bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x0000000000421308: or ebp, eax; ret 0xd7; 
0x0000000000442ea3: or ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x00000000004a23f0: or ecx, dword ptr [eax - 0x7d]; ret; 
0x0000000000459565: or ecx, dword ptr [rax - 0x73]; adc al, 0xe; cmp rdi, rdx; jb 0x59572; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000455d7f: or ecx, dword ptr [rax - 0x73]; jg 0x55d8f; jne 0x564f0; ret; 
0x00000000004a23f1: or ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000455d83: or ecx, dword ptr [rdi]; test dword ptr [rsi + 7], esp; add byte ptr [rax], al; ret; 
0x0000000000433397: or ecx, esi; bsf rcx, rcx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x00000000004398d0: or ecx, esi; sub rax, rcx; je 0x398e0; sbb eax, eax; or eax, 1; ret; 
0x000000000040b60f: or edx, 0x40000000; test eax, eax; cmovns eax, edx; add rsp, 8; ret; 
0x000000000044e4af: or edx, ecx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000483f8b: or edx, ecx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x0000000000483270: or edx, ecx; bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000459563: or esi, dword ptr [rbx + rcx + 0x48]; lea edx, [rsi + rcx]; cmp rdi, rdx; jb 0x59572; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000045a2e7: or esi, ebx; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000442dc3: or esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x00000000004238c1: or esp, dword ptr [rax]; mov eax, 0xffffffff; pop rbx; ret; 
0x0000000000452ac5: or qword ptr [rdi], rcx; test dword ptr [rbx + 2], esp; add byte ptr [rax], al; ret; 
0x0000000000442f12: or r11b, r14b; movq qword ptr [rdi], mm1; ret; 
0x0000000000442ea2: or r11d, r14d; movq qword ptr [rdi], mm1; ret; 
0x0000000000437c81: or r14b, al; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x0000000000442e32: or r14b, r11b; movq qword ptr [rdi], mm1; ret; 
0x0000000000442dc2: or r14d, r11d; movq qword ptr [rdi], mm1; ret; 
0x0000000000481dd5: or r8d, dword ptr [r8]; add byte ptr [rax - 0x73], cl; add eax, 0x810; cmove rax, rdx; ret; 
0x0000000000452b47: or rax, 0x1e1850f; add byte ptr [rax], al; ret; 
0x000000000047e9f9: or rax, 0x401f0f08; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000047f2b1: or rax, 0x401f0f08; add byte ptr [rbx - 0x7cb7fbbe], cl; ret 0x4104; 
0x000000000045be40: or rax, 0xffffffffffffffff; ret; 
0x000000000043048e: or rax, qword ptr [rax]; add dword ptr [rax - 0x77], ecx; ret 0x3174; 
0x000000000044de46: or rax, rcx; shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x000000000044de4d: or rax, rdx; bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x0000000000433396: or rcx, rsi; bsf rcx, rcx; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x00000000004398cf: or rcx, rsi; sub rax, rcx; je 0x398e0; sbb eax, eax; or eax, 1; ret; 
0x000000000044e4ae: or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000483f8a: or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; shr rax, 2; ret; 
0x000000000048326f: or rdx, rcx; bts rdx, r11; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x00000000004115ee: out 0, al; add byte ptr [rax], al; add rsp, 0x98; ret; 
0x00000000004a1658: out 0x20, eax; je 0xa166c; movss xmm0, dword ptr [rip + 0x2ec14]; divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x00000000004818b4: out 0x41, eax; and ebx, 0xffffffbb; cmp r11d, 0xa; je 0x818c0; ret; 
0x0000000000490da9: out 0x44, al; cmp ecx, eax; je 0x90cfa; mov eax, ecx; sub eax, r8d; ret; 
0x000000000042e468: out 0x45, al; test al, al; jne 0x2e479; mov dword ptr [rip + 0xb68a8], 0; ret; 
0x000000000049e844: out 0x48, al; mov dword ptr [rdi], esi; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x0000000000407c40: out 0x48, eax; add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000430518: out 0x48, eax; sub eax, 0x10; ret; 
0x000000000043ce76: out 0x4c, al; mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cca6: out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cda2: out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043ccee: out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004a6836: out 0x5b, al; ret; 
0x00000000004a1807: out 0x60, eax; jne 0x171e; xor eax, eax; add rsp, 8; ret; 
0x0000000000472d6b: out 0x83, al; ret; 
0x000000000046fc67: out 0xe8, al; ret; 
0x0000000000429238: out 0xe8, eax; adc bh, byte ptr [rsi - 3]; dec dword ptr [rax - 0x77]; ret; 
0x000000000047ac81: out 0xe8, eax; or dword ptr [rbp - 8], esp; dec dword ptr [rax - 0x77]; ret 0xc9e9; 
0x000000000046dc08: out 0xe8, eax; ret 0xfc0e; 
0x000000000045a7a4: out 0xf0, al; mov edx, 0; pop rbx; cmove rax, rdx; ret; 
0x00000000004426aa: out 0xf3, al; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000044272a: out 0xf3, eax; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000047cc7e: out 0xff, eax; push rax; cmp byte ptr [rax + 0x39], cl; ret; 
0x0000000000431be3: out 2, al; lea rax, [rip + 0x14914]; lea rdx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x000000000043104a: out 2, al; lea rax, [rip + 0x3afd]; lea rdx, [rip + 0x5356]; cmovne rax, rdx; ret; 
0x00000000004318f1: out 2, al; lea rax, [rip + 0x7a86]; lea rdx, [rip + 0x25b3f]; cmovne rax, rdx; ret; 
0x000000000044c647: out 6, al; add byte ptr [rbx + 0x148b8104], cl; xchg eax, ecx; sub eax, edx; ret; 
0x0000000000496a19: out dx, al; adc byte ptr [rcx + 0x39], cl; ret; 
0x0000000000496083: out dx, al; add al, 0xc7; add al, 0x30; add byte ptr [rax], al; add byte ptr [rcx + 0x39], cl; ret; 
0x0000000000442ab0: out dx, al; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x12], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000043ce7a: out dx, al; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000442aba: out dx, al; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044cf4e: out dx, al; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000046931f: out dx, al; ret 0; 
0x000000000049e823: out dx, al; xor al, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rdi], rsi; ret; 
0x0000000000488629: out dx, eax; add ah, byte ptr [rsi + 0xf]; jo 0x885f0; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000045b6ba: out dx, eax; add dword ptr [rbp - 0x57c03b0], ecx; add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x00000000004870d3: out dx, eax; add ecx, dword ptr [rax + 0x29]; ret 0x8948; 
0x000000000042798d: out dx, eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000004279e5: out dx, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000442b30: out dx, eax; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x11], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000043ccaa: out dx, eax; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cda6: out dx, eax; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043ccf2: out dx, eax; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000442b3a: out dx, eax; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000044d04d: out dx, eax; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000045c0fd: out dx, eax; push rdi; add al, byte ptr [rax]; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000439c03: out dx, eax; push rsi; adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000439c18: out dx, eax; push rsi; and byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000439c2d: out dx, eax; push rsi; xor byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000458de3: out dx, eax; ret 0xf66; 
0x0000000000428666: out dx, eax; ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x000000000043b11c: out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x2373; 
0x000000000043b105: out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x000000000043b0ee: out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x5173; 
0x0000000000439baa: out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000439e81: out dx, eax; xchg eax, esi; add byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000439f3e: out dx, eax; xchg eax, esi; lock add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000439eed: out dx, eax; xchg eax, esi; rol byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044af4e: outsb dx, byte ptr [rsi]; adc al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000045720e: outsb dx, byte ptr [rsi]; add dword ptr [rax], eax; add dh, dh; ret 0x7504; 
0x000000000049c5df: outsb dx, byte ptr [rsi]; ret 0x160f; 
0x0000000000429e18: outsb dx, byte ptr [rsi]; ret 0x4866; 
0x000000000048a115: outsb dx, byte ptr [rsi]; ret 0x4966; 
0x00000000004243e3: outsb dx, byte ptr [rsi]; ret 0x4d83; 
0x000000000049eca4: outsb dx, byte ptr [rsi]; ret 0x8348; 
0x000000000048a089: outsb dx, byte ptr [rsi]; ret 0x8944; 
0x000000000042c80b: outsb dx, byte ptr [rsi]; ret 0x894c; 
0x0000000000462e22: outsb dx, byte ptr [rsi]; ret 0x8d48; 
0x0000000000425da4: outsb dx, byte ptr [rsi]; ret 0xde9; 
0x0000000000423f86: outsb dx, byte ptr [rsi]; ret 0xe083; 
0x0000000000428e40: outsb dx, byte ptr [rsi]; ret 0xe480; 
0x0000000000424eeb: outsb dx, byte ptr [rsi]; ret 0xf66; 
0x000000000041e792: outsb dx, byte ptr [rsi]; ret; 
0x000000000048a0d9: outsb dx, byte ptr [rsi]; shl byte ptr [rsi + 0x48], 0xf; outsb dx, byte ptr [rsi]; shl dword ptr [rsi + 0xf], cl; insb byte ptr [rdi], dx; ret 0x290f; 
0x000000000049e964: outsb dx, byte ptr [rsi]; shl byte ptr [rsi + 0xf], 1; insb byte ptr [rdi], dx; ret 0x110f; 
0x0000000000490868: outsb dx, byte ptr [rsi]; shl byte ptr [rsi + 0xf], 1; insb byte ptr [rdi], dx; ret 0xf41; 
0x0000000000490863: outsb dx, byte ptr [rsi]; shl dword ptr [rsi + 0x48], 0xf; outsb dx, byte ptr [rsi]; shl byte ptr [rsi + 0xf], 1; insb byte ptr [rdi], dx; ret 0xf41; 
0x000000000042239d: outsb dx, byte ptr [rsi]; shl dword ptr [rsi + 0xf], 0x6c; ror byte ptr [rdi], 0x11; add ah, byte ptr [rsi + 0xf]; outsd dx, dword ptr [rsi]; ret 0x34e9; 
0x000000000048a0de: outsb dx, byte ptr [rsi]; shl dword ptr [rsi + 0xf], cl; insb byte ptr [rdi], dx; ret 0x290f; 
0x000000000042926b: outsb dx, byte ptr [rsi]; shl dword ptr [rsi + 0xf], cl; insb byte ptr [rdi], dx; ret 0x4d83; 
0x0000000000492c82: outsd dx, dword ptr [rsi]; adc ah, byte ptr [rsi + 0xf]; outsd dx, dword ptr [rsi]; retf 0xf66; outsd dx, dword ptr [rsi]; ret 0x290f; 
0x00000000004597c0: outsd dx, dword ptr [rsi]; adc byte ptr [rdi], cl; adc dword ptr [rdi + 0x20], esi; movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x0000000000495bc7: outsd dx, dword ptr [rsi]; adc dword ptr [rsi + 0xf], esp; outsd dx, dword ptr [rsi]; retf 0xf66; outsd dx, dword ptr [rsi]; ret 0x290f; 
0x000000000043ac98: outsd dx, dword ptr [rsi]; call 0xf6a9551; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000446330: outsd dx, dword ptr [rsi]; cli; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000043ac7d: outsd dx, dword ptr [rsi]; fdiv dword ptr [rdx - 0x10f09928]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043aa7d: outsd dx, dword ptr [rsi]; fdiv qword ptr [rdx - 0x10f09924]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000431f88: outsd dx, dword ptr [rsi]; fmul qword ptr [rcx - 0x7d]; ret 0x7f10; 
0x00000000004468be: outsd dx, dword ptr [rsi]; fmul qword ptr [rcx - 0x7d]; ret 0xf10; 
0x000000000043abfd: outsd dx, dword ptr [rsi]; fnstenv [rdx - 0x10f09927]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043a947: outsd dx, dword ptr [rsi]; movabs rbp, 0xf66d1ef0f66bdb2; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043aa47: outsd dx, dword ptr [rsi]; movabs rsp, 0xf66d1ef0f66bcb2; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000402168: outsd dx, dword ptr [rsi]; or al, byte ptr [rax]; ret; 
0x000000000043ab7d: outsd dx, dword ptr [rsi]; push rdi; fidiv dword ptr [rdx - 0x10f09926]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043a97d: outsd dx, dword ptr [rsi]; push rdi; fnsave dword ptr [rdx - 0x10f09923]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043afbd: outsd dx, dword ptr [rsi]; push rdi; ret 0xff3; 
0x000000000043af1d: outsd dx, dword ptr [rsi]; push rdi; ret; 
0x0000000000482d2a: outsd dx, dword ptr [rsi]; push rdi; xor byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret; 
0x0000000000455686: outsd dx, dword ptr [rsi]; push rsi; adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x000000000043a7ad: outsd dx, dword ptr [rsi]; push rsi; fbstp tbyte ptr [rdx - 0x10f09921]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043a87d: outsd dx, dword ptr [rsi]; push rsi; fidiv word ptr [rdx - 0x10f09922]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000456cf6: outsd dx, dword ptr [rsi]; push rsi; or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000455626: outsd dx, dword ptr [rsi]; push rsi; or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000455666: outsd dx, dword ptr [rsi]; push rsi; psllq mm1, qword ptr [rdi]; jg 0x55674; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000456356: outsd dx, dword ptr [rsi]; push rsi; psllq mm1, qword ptr [rdi]; jg 0x56364; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000492c8a: outsd dx, dword ptr [rsi]; ret 0x290f; 
0x0000000000493a15: outsd dx, dword ptr [rsi]; ret 0x2be; 
0x00000000004223a8: outsd dx, dword ptr [rsi]; ret 0x34e9; 
0x000000000042238b: outsd dx, dword ptr [rsi]; ret 0x4866; 
0x0000000000428cfb: outsd dx, dword ptr [rsi]; ret 0x8948; 
0x0000000000482d7a: outsd dx, dword ptr [rsi]; ret 0xf66; 
0x000000000042245d: outsd dx, dword ptr [rsi]; ret 0xff3; 
0x000000000048daad: outsd dx, dword ptr [rsi]; ret 3; 
0x0000000000458d8c: outsd dx, dword ptr [rsi]; ret; 
0x0000000000492c86: outsd dx, dword ptr [rsi]; retf 0xf66; outsd dx, dword ptr [rsi]; ret 0x290f; 
0x000000000043afdd: outsd dx, dword ptr [rsi]; sal byte ptr [rdx - 0x10f0992e], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043b0fe: outsd dx, dword ptr [rsi]; sal byte ptr [rdx - 0x10f09930], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x000000000043af3d: outsd dx, dword ptr [rsi]; sal qword ptr [rdx - 0x10f0992d], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043b07d: outsd dx, dword ptr [rsi]; sal qword ptr [rdx - 0x10f0992f], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000048287d: pcmpeqb mm1, qword ptr [rdi + 0x10]; pmovmskb eax, xmm1; test eax, eax; jne 0x828e0; xor eax, eax; ret; 
0x00000000004841d4: pcmpeqb mm3, qword ptr [rcx]; add rax, 2; ret; 
0x00000000004841bf: pcmpeqb mm3, qword ptr [rsi]; ret; 
0x000000000044e34f: pcmpeqb mm4, mm0; pmovmskb edx, xmm4; test edx, edx; je 0x4e35e; bsf eax, edx; ret; 
0x000000000048287c: pcmpeqb xmm1, xmmword ptr [rdi + 0x10]; pmovmskb eax, xmm1; test eax, eax; jne 0x828e0; xor eax, eax; ret; 
0x000000000044e34e: pcmpeqb xmm4, xmm0; pmovmskb edx, xmm4; test edx, edx; je 0x4e35e; bsf eax, edx; ret; 
0x0000000000498bdd: pcmpeqd mm1, qword ptr [rdi + 0x10]; pmovmskb eax, xmm1; test eax, eax; jne 0x98c40; xor eax, eax; ret; 
0x0000000000498bdc: pcmpeqd xmm1, xmmword ptr [rdi + 0x10]; pmovmskb eax, xmm1; test eax, eax; jne 0x98c40; xor eax, eax; ret; 
0x000000000040a43d: pcmpeqw mm4, qword ptr [rax + 0x48]; mov eax, 0x4e1220; ret; 
0x0000000000498874: pcmpistri xmm0, xmmword ptr [rax], 0x12; jae 0x98870; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000004987e6: pcmpistri xmm2, xmm2, 0x3a; cmp edx, ecx; jle 0x98890; ret; 
0x0000000000459218: pcmpistri xmm3, xmm3, 0x3a; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x000000000045a4fa: pextrw edi, mm0, 0x77; ret; 
0x000000000044aafe: pi2fd mm6, qword ptr [rsi - 0x72b7f1ec]; add al, byte ptr ss:[rdi]; add byte ptr [rbx + 0x148b8104], cl; xchg eax, ecx; sub eax, edx; ret; 
0x000000000044dd30: pmovmskb eax, mm0; test eax, eax; je 0x4dd40; bsf eax, eax; lea rax, [rdi + rax]; ret; 
0x00000000004391d6: pmovmskb eax, mm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000482882: pmovmskb eax, mm1; test eax, eax; jne 0x828e0; xor eax, eax; ret; 
0x0000000000482852: pmovmskb eax, mm1; test eax, eax; jne 0x82900; xor eax, eax; ret; 
0x0000000000498be2: pmovmskb eax, mm1; test eax, eax; jne 0x98c40; xor eax, eax; ret; 
0x0000000000498bb2: pmovmskb eax, mm1; test eax, eax; jne 0x98c60; xor eax, eax; ret; 
0x000000000044dd2f: pmovmskb eax, xmm0; test eax, eax; je 0x4dd40; bsf eax, eax; lea rax, [rdi + rax]; ret; 
0x00000000004391d5: pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000482881: pmovmskb eax, xmm1; test eax, eax; jne 0x828e0; xor eax, eax; ret; 
0x0000000000482851: pmovmskb eax, xmm1; test eax, eax; jne 0x82900; xor eax, eax; ret; 
0x0000000000498be1: pmovmskb eax, xmm1; test eax, eax; jne 0x98c40; xor eax, eax; ret; 
0x0000000000498bb1: pmovmskb eax, xmm1; test eax, eax; jne 0x98c60; xor eax, eax; ret; 
0x0000000000457191: pmovmskb edx, mm3; test eax, eax; jne 0x571a4; nop dword ptr [rax + rax]; xor rax, rax; ret; 
0x000000000044e353: pmovmskb edx, mm4; test edx, edx; je 0x4e35e; bsf eax, edx; ret; 
0x0000000000457190: pmovmskb edx, xmm3; test eax, eax; jne 0x571a4; nop dword ptr [rax + rax]; xor rax, rax; ret; 
0x000000000044e352: pmovmskb edx, xmm4; test edx, edx; je 0x4e35e; bsf eax, edx; ret; 
0x000000000049042b: pop qword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000042e904: pop r12; mov rax, r8; pop r13; ret; 
0x0000000000478673: pop r12; pop r13; mov rax, r9; pop r14; ret; 
0x000000000041210c: pop r12; pop r13; pop r14; pop r15; pop rbp; ret; 
0x00000000004018d3: pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000402a33: pop r12; pop r13; pop r14; ret; 
0x00000000004025d6: pop r12; pop r13; ret; 
0x0000000000402486: pop r12; ret; 
0x0000000000462175: pop r12; shl eax, cl; ret; 
0x0000000000478675: pop r13; mov rax, r9; pop r14; ret; 
0x000000000041210e: pop r13; pop r14; pop r15; pop rbp; ret; 
0x00000000004018d5: pop r13; pop r14; pop r15; ret; 
0x0000000000402a35: pop r13; pop r14; ret; 
0x00000000004025d8: pop r13; ret; 
0x0000000000412110: pop r14; pop r15; pop rbp; ret; 
0x00000000004018d7: pop r14; pop r15; ret; 
0x0000000000402a37: pop r14; ret; 
0x0000000000412112: pop r15; pop rbp; ret; 
0x00000000004018d9: pop r15; ret; 
0x000000000042695e: pop r8; add byte ptr [rax], al; add byte ptr [rax], al; movups xmmword ptr [rbx + 0x48], xmm0; pop rbx; ret; 
0x000000000042683c: pop r8; mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x00000000004277c6: pop r8; test rax, rax; je 0x277dc; mov qword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x000000000042695f: pop rax; add byte ptr [rax], al; add byte ptr [rax], al; movups xmmword ptr [rbx + 0x48], xmm0; pop rbx; ret; 
0x000000000045b976: pop rax; cli; dec dword ptr [rax - 0x77]; ret; 
0x0000000000482052: pop rax; dec dword ptr [rcx - 0x77]; ret 0x3948; 
0x000000000042683d: pop rax; mov rax, qword ptr [rdi + 0x48]; mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000046fe61: pop rax; mov rdx, -0x20; add rax, 0x200; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000494629: pop rax; or al, 0x89; fdiv st(6); ret; 
0x0000000000492f86: pop rax; or al, 0xf6; ret; 
0x000000000041dfa4: pop rax; or dword ptr [rdi], ecx; mov dh, 0x40; or dword ptr [rax + rax*8 - 0x38b78d8c], eax; ret 0xfff0; 
0x000000000049184a: pop rax; pop rdx; pop rbx; ret; 
0x000000000045cd07: pop rax; ret; 
0x00000000004277c7: pop rax; test rax, rax; je 0x277dc; mov qword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x0000000000403845: pop rax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000491bfd: pop rax; xor rcx, qword ptr fs:[0x28]; jne 0x91c44; add rsp, 0x68; ret; 
0x00000000004a5292: pop rbp; and byte ptr [rsi - 9], ah; ret; 
0x0000000000431bef: pop rbp; imul eax, dword ptr [rcx], 0; cmovne rax, rdx; ret; 
0x00000000004296ce: pop rbp; mov dword ptr [r11 + 0x10], eax; mov dword ptr [r11 + 0x14], 0; ret; 
0x0000000000402670: pop rbp; mov eax, 0xffffffea; pop r12; pop r13; ret; 
0x00000000004025d2: pop rbp; mov eax, r12d; pop r12; pop r13; ret; 
0x000000000040a98f: pop rbp; mov eax, r12d; pop r12; ret; 
0x00000000004a48e4: pop rbp; mov eax, r8d; ret; 
0x00000000004824e0: pop rbp; mov qword ptr [r12], r14; pop r12; pop r13; pop r14; ret; 
0x0000000000481d97: pop rbp; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000411d97: pop rbp; mov rax, r12; pop r12; ret; 
0x0000000000499554: pop rbp; mov rax, r13; pop r12; pop r13; ret; 
0x000000000042e898: pop rbp; mov rax, r8; pop r12; pop r13; ret; 
0x0000000000429b5c: pop rbp; mov rax, r8; pop r12; ret; 
0x0000000000415d94: pop rbp; mov rax, r9; pop r12; ret; 
0x0000000000478676: pop rbp; mov rax, r9; pop r14; ret; 
0x000000000042e903: pop rbp; pop r12; mov rax, r8; pop r13; ret; 
0x00000000004018d2: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000402a32: pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000402644: pop rbp; pop r12; pop r13; ret; 
0x0000000000402485: pop rbp; pop r12; ret; 
0x000000000041210f: pop rbp; pop r14; pop r15; pop rbp; ret; 
0x00000000004018d6: pop rbp; pop r14; pop r15; ret; 
0x0000000000402a36: pop rbp; pop r14; ret; 
0x000000000049e7b8: pop rbp; pop rbx; ret; 
0x0000000000401d61: pop rbp; ret; 
0x0000000000462171: pop rbp; shl ecx, 3; pop r12; shl eax, cl; ret; 
0x00000000004318fe: pop rbx; add al, byte ptr [rax]; cmovne rax, rdx; ret; 
0x000000000045a856: pop rbx; and eax, 0x7ff80000; ret; 
0x00000000004620b6: pop rbx; and eax, 0xffffffc7; or eax, 0x18; mov dword ptr [rip + 0x83891], eax; ret; 
0x0000000000462086: pop rbx; and eax, 0xffffffc7; or eax, 8; mov dword ptr [rip + 0x838c1], eax; ret; 
0x0000000000461fe6: pop rbx; and eax, 0xfffffff8; or eax, 1; mov dword ptr [rip + 0x83961], eax; ret; 
0x0000000000462016: pop rbx; and eax, 0xfffffff8; or eax, 3; mov dword ptr [rip + 0x83931], eax; ret; 
0x000000000048a284: pop rbx; cli; dec dword ptr [rcx - 0x77]; ret; 
0x000000000045a7ab: pop rbx; cmove rax, rdx; ret; 
0x000000000045a83b: pop rbx; cmovne rax, rdx; ret; 
0x0000000000480e30: pop rbx; mov dword ptr [rbp + 0x74], eax; mov eax, 1; pop rbp; pop r12; ret; 
0x000000000040308d: pop rbx; mov dword ptr [rip + 0xdf070], 1; ret; 
0x0000000000409080: pop rbx; mov eax, 0xffffffea; pop rbp; pop r12; ret; 
0x0000000000404f53: pop rbx; mov eax, 0xfffffff4; pop rbp; pop r12; ret; 
0x0000000000427600: pop rbx; mov eax, 0xffffffff; pop rbp; pop r12; ret; 
0x0000000000497c28: pop rbx; mov eax, 1; pop rbp; pop r12; pop r13; ret; 
0x000000000048fa6b: pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x000000000045a89e: pop rbx; mov eax, ecx; and eax, 0x7ff80000; div esi; mov eax, eax; ret; 
0x000000000040b20a: pop rbx; mov eax, r12d; pop rbp; pop r12; pop r13; ret; 
0x0000000000420d06: pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000429979: pop rbx; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x000000000045d747: pop rbx; mov rax, r13; pop rbp; pop r12; pop r13; ret; 
0x0000000000423385: pop rbx; mov rax, r8; pop rbp; pop r12; ret; 
0x000000000048fa4e: pop rbx; or dword ptr [rip + 0x536f2], 1; ret; 
0x0000000000407c8e: pop rbx; pop r12; ret; 
0x000000000046e8d7: pop rbx; pop r14; ret; 
0x000000000040a98e: pop rbx; pop rbp; mov eax, r12d; pop r12; ret; 
0x00000000004a48e3: pop rbx; pop rbp; mov eax, r8d; ret; 
0x0000000000411d96: pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x0000000000499553: pop rbx; pop rbp; mov rax, r13; pop r12; pop r13; ret; 
0x0000000000429b5b: pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x0000000000415d93: pop rbx; pop rbp; mov rax, r9; pop r12; ret; 
0x0000000000402a31: pop rbx; pop rbp; pop r12; pop r13; pop r14; ret; 
0x00000000004078ba: pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004029f5: pop rbx; pop rbp; pop r12; ret; 
0x00000000004a141d: pop rbx; pop rbp; pop r14; ret; 
0x000000000040384c: pop rbx; pop rbp; ret; 
0x0000000000462170: pop rbx; pop rbp; shl ecx, 3; pop r12; shl eax, cl; ret; 
0x0000000000402242: pop rbx; ret; 
0x000000000045a7ba: pop rbx; shr eax, 0xe; and eax, 0x3fc00; ret; 
0x000000000045a805: pop rbx; shr eax, 6; and eax, 0x3fffc00; ret; 
0x000000000042477f: pop rbx; sub rax, rdx; pop rbp; pop r12; ret; 
0x00000000004089b8: pop rbx; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000042cf53: pop rcx; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xb817; 
0x000000000041ff0b: pop rcx; add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000048a283: pop rcx; pop rbx; cli; dec dword ptr [rcx - 0x77]; ret; 
0x000000000044d6dd: pop rdi; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043d249: pop rdi; in al, dx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d059: pop rdi; in eax, dx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004200bf: pop rdi; or byte ptr [rbx - 0x76fefbb9], al; ret 0xe281; 
0x000000000043ce79: pop rdi; out dx, al; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cca9: pop rdi; out dx, eax; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cda5: pop rdi; out dx, eax; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043ccf1: pop rdi; out dx, eax; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000412113: pop rdi; pop rbp; ret; 
0x00000000004018da: pop rdi; ret; 
0x000000000042c47b: pop rdx; adc byte ptr [rdi], cl; test dword ptr [rip - 0x9fffffd], ebp; ret 0xf01; 
0x0000000000438586: pop rdx; add eax, 0x83480000; ret 0x4910; 
0x000000000045d3bb: pop rdx; or byte ptr [rcx - 0xa], al; ret; 
0x000000000049184b: pop rdx; pop rbx; ret; 
0x00000000004017df: pop rdx; ret; 
0x000000000049eca9: pop rdx; xor al, byte ptr [rax + rax]; add byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ret 0x290f; 
0x0000000000430fb9: pop rdx; xor eax, eax; pop rbp; pop r12; ret; 
0x000000000044d5de: pop rsi; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000431c8e: pop rsi; add byte ptr [rdx], 0; lea rax, [rip + 0x280a7]; cmove rax, rdx; ret; 
0x00000000004a1666: pop rsi; add eax, 0x2ec10; ret; 
0x000000000046bd74: pop rsi; cli; dec dword ptr [rcx - 0x77]; dec dword ptr [rbp - 0x77]; ret 0x87e9; 
0x0000000000485136: pop rsi; inc byte ptr [rip - 0x38c6b800]; ja 0x85168; xor eax, eax; ret; 
0x0000000000412111: pop rsi; pop r15; pop rbp; ret; 
0x00000000004018d8: pop rsi; pop r15; ret; 
0x0000000000402a38: pop rsi; ret; 
0x000000000044b160: pop rsp; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000438884: pop rsp; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000049b302: pop rsp; add eax, 0x248d4d00; ret 0x2944; 
0x000000000044be60: pop rsp; add eax, 0x83480000; ret 0xe910; 
0x000000000042e905: pop rsp; mov rax, r8; pop r13; ret; 
0x0000000000478674: pop rsp; pop r13; mov rax, r9; pop r14; ret; 
0x000000000041210d: pop rsp; pop r13; pop r14; pop r15; pop rbp; ret; 
0x00000000004018d4: pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000000402a34: pop rsp; pop r13; pop r14; ret; 
0x00000000004025d7: pop rsp; pop r13; ret; 
0x0000000000402487: pop rsp; ret; 
0x0000000000462176: pop rsp; shl eax, cl; ret; 
0x00000000004845ff: popfq; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; shr rax, 2; vzeroupper; ret; 
0x000000000049daee: popfq; ret 0x3948; 
0x00000000004a2fe3: popfq; ret 0xf45; 
0x00000000004a7dcb: prefetchnta byte ptr [rax]; je 0xa7db8; xor eax, eax; add rsp, 0x10; pop rbx; ret; 
0x0000000000442c02: psllq mm1, qword ptr [r15]; jg 0x42c17; ret; 
0x0000000000445732: psllq mm1, qword ptr [r15]; jg 0x45747; ret; 
0x0000000000442c03: psllq mm1, qword ptr [rdi]; jg 0x42c17; ret; 
0x0000000000445733: psllq mm1, qword ptr [rdi]; jg 0x45747; ret; 
0x0000000000455506: psllq mm1, qword ptr [rdi]; jg 0x55512; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000455567: psllq mm1, qword ptr [rdi]; jg 0x55573; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000455668: psllq mm1, qword ptr [rdi]; jg 0x55674; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x00000000004561f6: psllq mm1, qword ptr [rdi]; jg 0x56202; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000456257: psllq mm1, qword ptr [rdi]; jg 0x56263; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000456358: psllq mm1, qword ptr [rdi]; jg 0x56364; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000456bb6: psllq mm1, qword ptr [rdi]; jg 0x56bc2; mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x0000000000456c37: psllq mm1, qword ptr [rdi]; jg 0x56c43; mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x0000000000456d38: psllq mm1, qword ptr [rdi]; jg 0x56d44; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, [rdi + 0x1e]; ret; 
0x0000000000480736: punpckhqdq xmm0, xmm0; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 0x40], rdx; movups xmmword ptr [rax], xmm0; ret; 
0x000000000042686f: punpckhqdq xmm0, xmm0; mov qword ptr [rdi + 0x18], rdx; mov qword ptr [rdi + 0x48], rax; movups xmmword ptr [rdi + 8], xmm0; ret; 
0x0000000000464f07: punpckldq mm1, mm3; punpcklqdq xmm0, xmm1; movups xmmword ptr [rdx + 0x48], xmm0; ret; 
0x0000000000464f06: punpckldq xmm1, xmm3; punpcklqdq xmm0, xmm1; movups xmmword ptr [rdx + 0x48], xmm0; ret; 
0x00000000004238b1: punpcklqdq xmm0, xmm0; movups xmmword ptr [rbx + 8], xmm0; pop rbx; ret; 
0x0000000000426e71: punpcklqdq xmm0, xmm1; movups xmmword ptr [rbx + 0x38], xmm0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000464f0a: punpcklqdq xmm0, xmm1; movups xmmword ptr [rdx + 0x48], xmm0; ret; 
0x000000000046d770: push -0x1605feb4; ret 0xfffe; 
0x0000000000497eba: push -0x2f; add al, 0; ret; 
0x000000000042e4b7: push -0x72b7fff5; add eax, 0xfffff61f; mov qword ptr [rip + 0xb4300], rax; lea rax, [rip - 0xc6f]; mov qword ptr [rip + 0xb42ea], rax; ret; 
0x00000000004571f4: push -0x9ffffff; ret 0x7501; 
0x000000000045c511: push 0x247c8d49; dec dword ptr [rax + 0x39]; je 0x5c53f; or byte ptr [rdi], cl; xchg eax, ebp; ret 0x8948; 
0x0000000000431c64: push 0x48000095; lea edx, [rip + 0xeaf1]; cmovne rax, rdx; ret; 
0x000000000048f037: push 0x4c000005; mov eax, dword ptr [rip + 0x5642e]; jne 0x8f050; lea rax, [r8 + 1]; mov qword ptr [rip + 0x56421], rax; ret; 
0x0000000000483710: push 0x5c415d5b; pop r13; ret; 
0x000000000042c86e: push 0x6e0f4966; ret; 
0x000000000045bb1f: push 0x75158d48; ret; 
0x000000000042e471: push 0xb; add byte ptr [rax], al; ret; 
0x000000000041eea0: push 0xc; add byte ptr [rcx], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000455f82: push 5; add byte ptr [rax], al; ret; 
0x0000000000407021: push qword ptr [r9]; ror byte ptr [rdi], 0x1f; add byte ptr [rax - 0x77], cl; ret 0x4c7; 
0x00000000004958a1: push qword ptr [r9]; sal bh, cl; int1; add r8d, eax; mov eax, r8d; ret; 
0x0000000000458b78: push qword ptr [rbp + 0x1a]; xor eax, eax; ret; 
0x00000000004a451a: push qword ptr [rbp + 0x36]; mov eax, 8; add rsp, 8; ret; 
0x0000000000439889: push qword ptr [rbp + 4]; vzeroupper; ret; 
0x00000000004a7026: push qword ptr [rbp + rax - 0x18]; ret 0xfff7; 
0x00000000004a6f26: push qword ptr [rbp + rax - 0x18]; ret 0xfff8; 
0x00000000004a6e26: push qword ptr [rbp + rax - 0x18]; ret 0xfff9; 
0x00000000004a6d26: push qword ptr [rbp + rax - 0x18]; ret 0xfffa; 
0x0000000000480d81: push qword ptr [rbp + rax - 0xa]; ret 0x7408; 
0x00000000004831c3: push qword ptr [rbp + rcx + 0x48]; sar edx, cl; test rdx, rdx; je 0x831f0; bsf rax, rdx; ret; 
0x0000000000483153: push qword ptr [rbp + rdi*2 + 0x48]; sar edx, cl; test rdx, rdx; je 0x83200; bsf rax, rdx; ret; 
0x0000000000407c3e: push qword ptr [rbp - 0x19]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000427a20: push qword ptr [rbp - 0x40]; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000045be30: push qword ptr [rbx + 1]; ret; 
0x0000000000427988: push qword ptr [rbx + rax - 0x7d]; and ebp, edi; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000481609: push qword ptr [rbx + rax - 0x7d]; and ebp, edi; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000421306: push qword ptr [rbx + rcx - 0x18]; ret 0xd7; 
0x0000000000425ef3: push qword ptr [rcx]; ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000498218: push qword ptr [rcx]; ror byte ptr [rcx + 0x438b4803], cl; sbb byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x950f; 
0x0000000000407022: push qword ptr [rcx]; ror byte ptr [rdi], 0x1f; add byte ptr [rax - 0x77], cl; ret 0x4c7; 
0x00000000004958a2: push qword ptr [rcx]; sal bh, cl; int1; add r8d, eax; mov eax, r8d; ret; 
0x0000000000485130: push qword ptr [rdi + 0x15]; mov qword ptr [rip + 0x5fe5e], rax; cmp rdi, rax; ja 0x85168; xor eax, eax; ret; 
0x000000000045c32c: push qword ptr [rdi + 0x41]; ret; 
0x000000000045c15c: push qword ptr [rdi + 0x51]; ret; 
0x000000000045c0b7: push qword ptr [rdi + 0x56]; ret; 
0x000000000045d05b: push qword ptr [rdi + 0x62]; pop rbx; pop rbp; ret; 
0x0000000000498fb3: push qword ptr [rdi + 0xa]; ret; 
0x000000000045ce69: push qword ptr [rdi + 4]; ret; 
0x000000000045c1f0: push qword ptr [rdi + 5]; ret; 
0x000000000045becf: push qword ptr [rdi + 6]; ret; 
0x000000000045bf2e: push qword ptr [rdi + 7]; ret; 
0x000000000045cdfd: push qword ptr [rdi + 8]; ret; 
0x0000000000484fc4: push qword ptr [rdi + 9]; ret; 
0x00000000004847f4: push qword ptr [rdi - 0x37]; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000046da2e: push qword ptr [rsi + rbx*8 - 0x18]; cmp bh, byte ptr [rdi]; add al, byte ptr [rax]; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x0000000000426db0: push qword ptr [rsp + rax - 0x58]; add dword ptr [rcx + rbp - 0x77], esi; ret 0xff3; 
0x0000000000428549: push rax; adc byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x0000000000477bb5: push rax; adc byte ptr [rcx - 0x77], cl; push rsi; or cl, ch; ret 0xfff3; 
0x000000000049bfc0: push rax; add al, 0; add bl, ch; ret; 
0x0000000000481554: push rax; add byte ptr [rax], al; add byte ptr [rax], al; movups xmmword ptr [rax + 0x40], xmm0; pop rbx; ret; 
0x00000000004293b5: push rax; add dword ptr [rax - 0x77], ecx; adc eax, 0xb93d2; ret; 
0x000000000040b494: push rax; add dword ptr [rax], eax; add cl, ch; movabs dword ptr [0x8d48001f0f000026], eax; add eax, 0x9e078; ret; 
0x0000000000472d14: push rax; add dword ptr [rcx - 0x77], ecx; push rdi; sub dh, al; add byte ptr [rcx - 0x7d], cl; ret; 
0x0000000000410e2b: push rax; and byte ptr [rax + 1], cl; ret 0xb70f; 
0x000000000047bb12: push rax; cmp byte ptr [rax + 0x39], cl; ret; 
0x00000000004a4589: push rax; jne 0xa45b3; xor eax, eax; add rsp, 8; ret; 
0x00000000004a45e9: push rax; jne 0xa4613; xor eax, eax; add rsp, 8; ret; 
0x00000000004a5f99: push rax; jne 0xa5fbb; xor eax, eax; add rsp, 8; ret; 
0x0000000000480740: push rax; movups xmmword ptr [rax], xmm0; ret; 
0x0000000000460962: push rax; or byte ptr [rcx + 0x3e895], cl; add dh, dh; ret 0x7402; 
0x000000000042d6ca: push rax; or dh, dh; ret 0xf02; 
0x0000000000404c7c: push rax; sahf; add al, byte ptr [rax]; ret; 
0x000000000042853a: push rax; sbb byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x00000000004a4b5c: push rax; sub byte ptr [rbp + 1], cl; ret 0x394c; 
0x0000000000405c59: push rax; xor byte ptr [rax - 0x77], cl; call 0x8c4dfaa; pop rbp; pop r12; ret; 
0x00000000004077d1: push rax; xor eax, eax; cmp ecx, edx; je 0x77e0; ret; 
0x00000000004a679b: push rbp; adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000422459: push rbp; adc byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xff3; 
0x000000000045c35c: push rbp; add al, byte ptr [rax]; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x0000000000409ef1: push rbp; add byte ptr [rcx - 0x75], cl; sbb byte ptr [rbx + r9*4 + 0x2c], r9b; ret 0x8b49; 
0x000000000042225f: push rbp; add dh, dh; ret 0x7402; 
0x000000000042c970: push rbp; and byte ptr [rax + 0x39], cl; ret 0x860f; 
0x00000000004a549b: push rbp; and byte ptr [rcx - 0x75], cl; insd dword ptr [rdi], dx; sbb dh, dh; ret 0xf01; 
0x000000000042d24f: push rbp; or eax, dword ptr [rax]; syscall; pop rbp; ret; 
0x0000000000427a1c: push rbp; xor byte ptr [rbx - 0x3f8a0008], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004212e1: push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x0000000000410fc2: push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000431057: push rbx; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x00000000004a27b5: push rbx; add cl, byte ptr [rax - 0x7d]; ret; 
0x0000000000415222: push rbx; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000487760: push rbx; and byte ptr [rax - 0x75], cl; sub byte ptr [r8 + 0x39], r9b; ret 0x870f; 
0x000000000040a3e2: push rbx; cmp edi, 0x16; jne 0xa4a0; mov rax, 0x4def00; ret; 
0x0000000000459db9: push rbx; jb 0x59dc1; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x0000000000480d9f: push rbx; je 0x80dfd; pop rbp; pop r12; ret; 
0x0000000000411bd9: push rbx; mov ah, 4; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004565e3: push rbx; movq qword ptr [rdi + 0x20], mm6; sub r8, 0x10; jb 0x55b99; movdqu xmmword ptr [rdi + 0x30], xmm7; ret; 
0x00000000004565f2: push rbx; movq qword ptr [rdi + 0x30], mm7; ret; 
0x00000000004960d2: push rbx; or al, 0xf6; ret 0xf01; 
0x000000000047f522: push rbx; or al, 0xf6; ret 0xf04; 
0x0000000000423262: push rbx; or byte ptr [rax - 0x75], cl; xor ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000045d70a: push rbx; or byte ptr [rax - 0x7d], cl; ret; 
0x000000000047f83e: push rbx; xor al, 0xe9; ret 0xfffc; 
0x00000000004927ca: push rbx; xor byte ptr [rcx - 0x77], cl; ror byte ptr [rax - 0x75], 0x43; sbb byte ptr [rax + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b4c; 
0x0000000000404e06: push rcx; add bh, byte ptr [rcx]; ret 0x1477; 
0x000000000045ab08: push rcx; add dword ptr [rdi], ecx; scasd eax, dword ptr [rdi]; ret 0xda89; 
0x000000000049231d: push rcx; add rsp, 0x110; mov eax, r12d; pop r12; ret; 
0x0000000000446063: push rcx; jl 0x460ae; adc dword ptr [rcx - 3], ebp; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x000000000044606a: push rcx; jl 0x460b5; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000446071: push rcx; jl 0x460bc; adc dword ptr [rcx - 1], edi; ret; 
0x00000000004461ca: push rcx; jl 0x46215; adc dword ptr [rcx + 5], ebp; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x00000000004461d1: push rcx; jl 0x4621c; adc dword ptr [rcx + 6], esi; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x00000000004461d8: push rcx; jl 0x46223; adc dword ptr [rcx + 7], edi; ret; 
0x000000000042c5fd: push rcx; or byte ptr [rax + 0x39], cl; ret; 
0x000000000045c15e: push rcx; ret; 
0x000000000042a845: push rcx; sbb byte ptr [rcx + 1], cl; ret; 
0x0000000000456a6a: push rdi; add al, 0x48; lea eax, [rdi + 5]; ret; 
0x0000000000442d69: push rdi; add al, 0x48; mov dword ptr [rdi], ecx; ret; 
0x0000000000455cda: push rdi; add al, 0x49; sub eax, 6; lea rdi, [rdi + 6]; jne 0x564f0; ret; 
0x0000000000483d45: push rdi; add al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; adc eax, 0x30; cmovne rax, rdx; ret; 
0x000000000045c0fe: push rdi; add al, byte ptr [rax]; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x000000000049dd7f: push rdi; add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x00000000004592d6: push rdi; add dword ptr [rdx - 0xf], esp; jl 0x59324; adc dword ptr [rsi - 2], edx; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x0000000000456b1c: push rdi; add eax, 0xc478d48; ret; 
0x0000000000455dbc: push rdi; add eax, 0xde88349; lea rdi, [rdi + 0xd]; jne 0x564f0; ret; 
0x000000000046b49d: push rdi; add eax, dword ptr [rax]; add byte ptr [rcx - 0x73], cl; add r9b, byte ptr [r8 + 0x39]; ret; 
0x00000000004834f8: push rdi; add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000482b28: push rdi; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000041fd5d: push rdi; add rsp, 0xe8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000042d04c: push rdi; and byte ptr [rax + 0x39], cl; ret 0x4273; 
0x000000000045fb10: push rdi; and dh, al; sub byte ptr [r9], r8b; ret; 
0x000000000043caf2: push rdi; call 0xfffffffff0635444; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cb30: push rdi; call 0xfffffffff0635482; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cb68: push rdi; call 0xfffffffff06354ba; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043cba6: push rdi; call 0xfffffffff06354f8; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cbde: push rdi; call 0xfffffffff0635530; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cc06: push rdi; call 0xfffffffff0635558; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cc2e: push rdi; call 0xfffffffff0635580; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043f4d2: push rdi; call 0xfffffffff0637e24; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043f510: push rdi; call 0xfffffffff0637e62; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043f548: push rdi; call 0xfffffffff0637e9a; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043f586: push rdi; call 0xfffffffff0637ed8; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043f5be: push rdi; call 0xfffffffff0637f10; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043f5e6: push rdi; call 0xfffffffff0637f38; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043f60e: push rdi; call 0xfffffffff0637f60; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cb38: push rdi; clc; ret; 
0x000000000043ccb0: push rdi; cld; ret; 
0x000000000043d7d7: push rdi; cli; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000442649: push rdi; cmc; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000456060: push rdi; cmovns eax, dword ptr [rbx - 0x72b7e018]; jg 0x56089; jne 0x564f0; ret; 
0x0000000000422383: push rdi; cmp byte ptr [rax - 0x75], cl; xor byte ptr [rsi + 0xf], spl; outsd dx, dword ptr [rsi]; ret 0x4866; 
0x000000000043ab7e: push rdi; fidiv dword ptr [rdx - 0x10f09926]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043a97e: push rdi; fnsave dword ptr [rdx - 0x10f09923]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000045be3a: push rdi; fsub dword ptr [rcx + rcx*4 + 1]; or rax, 0xffffffffffffffff; ret; 
0x000000000045bede: push rdi; fsub dword ptr [rcx + rcx*4 + 2]; mov eax, 0xffffffff; ret; 
0x000000000045c116: push rdi; fsub dword ptr [rcx + rcx*4 + 2]; mov rax, -1; ret; 
0x00000000004425c9: push rdi; hlt; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d245: push rdi; in al, 0x4c; mov dword ptr [rdi - 0x14], ebx; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d055: push rdi; in eax, 0x4c; mov dword ptr [rdi - 0x13], ebx; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000044241a: push rdi; int1; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000043d816: push rdi; loope 0x3d865; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d85e: push rdi; loope 0x3d8ad; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d89c: push rdi; loope 0x3d8eb; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d8d4: push rdi; loope 0x3d923; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d912: push rdi; loope 0x3d961; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d94a: push rdi; loope 0x3d999; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d972: push rdi; loope 0x3d9c1; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004401f6: push rdi; loope 0x40245; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000044023e: push rdi; loope 0x4028d; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000044027c: push rdi; loope 0x402cb; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004402b4: push rdi; loope 0x40303; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004402f2: push rdi; loope 0x40341; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000044032a: push rdi; loope 0x40379; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000440352: push rdi; loope 0x403a1; mov dword ptr [rdi - 0x17], ebx; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043ac48: push rdi; mov eax, 0xf66b8b2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043aac8: push rdi; mov ebx, 0xf66bbb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043abc8: push rdi; mov ecx, 0xf66b9b2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043ab48: push rdi; mov edx, 0xf66bab2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000426844: push rdi; mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x00000000004424aa: push rdi; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000483625: push rdi; or al, 0; add byte ptr [rax - 0x73], cl; add eax, 0x9b0; cmove rax, rdx; ret; 
0x0000000000492ca5: push rdi; or al, 0; add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x000000000042477d: push rdi; or byte ptr [rbx + 0x48], bl; sub eax, edx; pop rbp; pop r12; ret; 
0x000000000049e7aa: push rdi; or byte ptr [rcx + 0x29], cl; ret 0x894c; 
0x00000000004a113a: push rdi; or byte ptr [rcx + 1], cl; ret 0x894c; 
0x000000000049e7b1: push rdi; or byte ptr [rcx - 0x2feeb728], cl; pop rbp; pop rbx; ret; 
0x0000000000456d00: push rdi; or eax, 0x1c478d48; ret; 
0x0000000000456000: push rdi; or eax, 0x1de88349; lea rdi, [rdi + 0x1d]; jne 0x564f0; ret; 
0x000000000043ce75: push rdi; out 0x4c, al; mov dword ptr [rdi - 0x12], ebx; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cca5: push rdi; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cda1: push rdi; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000043cced: push rdi; out 0x4c, eax; mov dword ptr [rdi - 0x11], ebx; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043afbe: push rdi; ret 0xff3; 
0x000000000043af1e: push rdi; ret; 
0x0000000000426875: push rdi; sbb byte ptr [rax - 0x77], cl; movups xmmword ptr [rdi + 8], xmm0; ret; 
0x000000000045fb0a: push rdi; sbb byte ptr [rdi + 0x16], dh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000045fb30: push rdi; sbb byte ptr [rdi - 0x10], bh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000043d9d7: push rdi; stc; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d1fa: push rdi; std; mov word ptr [rdi - 2], cx; ret; 
0x000000000043d5d7: push rdi; sti; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000472d18: push rdi; sub dh, al; add byte ptr [rcx - 0x7d], cl; ret; 
0x0000000000482d2b: push rdi; xor byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret; 
0x0000000000482888: push rdi; xor eax, eax; ret; 
0x000000000042c8ad: push rdx; or byte ptr [rax - 0x77], cl; ret 0x8348; 
0x0000000000456218: push rsi; adc al, 0xf3; movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dl; ret; 
0x0000000000456d57: push rsi; adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, [rdi + 0x1f]; ret; 
0x0000000000455687: push rsi; adc bl, dh; movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x00000000004555e6: push rsi; adc byte ptr [rbx + 0xff3174e], cl; jg 0x555f6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x00000000004562d6: push rsi; adc byte ptr [rbx + 0xff3174e], cl; jg 0x562e6; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000455606: push rsi; adc byte ptr [rbx + 0xff3184e], cl; jg 0x55616; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x00000000004562f6: push rsi; adc byte ptr [rbx + 0xff3184e], cl; jg 0x56306; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000456296: push rsi; adc byte ptr [rdx + 0xff3184e], cl; jg 0x562a6; mov qword ptr [rdi + 0x10], rdx; mov byte ptr [rdi + 0x18], cl; ret; 
0x0000000000456397: push rsi; adc byte ptr [rdx + 0xff3204e], cl; jg 0x563a7; movdqu xmmword ptr [rdi + 0x10], xmm2; mov byte ptr [rdi + 0x20], cl; ret; 
0x0000000000439c04: push rsi; adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000045941d: push rsi; add ah, byte ptr [rdx - 0xf]; jl 0x5946b; adc dword ptr [rsi + 3], edx; ret; 
0x0000000000442d62: push rsi; add al, 0x48; mov ecx, dword ptr [rsi]; mov qword ptr [rdi + 4], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000443001: push rsi; add cl, byte ptr [rbx + 0x257890e]; mov dword ptr [rdi], ecx; ret; 
0x0000000000443071: push rsi; add dword ptr [rbx + 0x157890e], ecx; mov dword ptr [rdi], ecx; ret; 
0x000000000049e427: push rsi; add dword ptr [rcx - 0x77], ecx; push rsp; ret; 
0x0000000000459416: push rsi; add dword ptr [rdx - 0xf], esp; jl 0x59464; adc dword ptr [rsi + 2], edx; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x0000000000442cf2: push rsi; add eax, 0x480e8b48; mov dword ptr [rdi + 5], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000456b15: push rsi; add eax, 0x480f8948; mov dword ptr [rdi + 5], edx; lea rax, [rdi + 0xc]; ret; 
0x0000000000455495: push rsi; add eax, 0x480f8948; mov dword ptr [rdi + 5], edx; ret; 
0x00000000004594b3: push rsi; add eax, 0x487cf162; adc dword ptr [rsi + 6], edx; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x0000000000442f91: push rsi; add ecx, dword ptr [rbx + 0x357890e]; mov dword ptr [rdi], ecx; ret; 
0x0000000000456a83: push rsi; add ecx, dword ptr [rcx + 0x357890f]; lea rax, [rdi + 6]; ret; 
0x0000000000455433: push rsi; add ecx, dword ptr [rcx + 0x357890f]; ret; 
0x0000000000455cf3: push rsi; add ecx, dword ptr [rcx + 0x357890f]; sub r8, 7; lea rdi, [rdi + 7]; jne 0x564f0; ret; 
0x0000000000409e76: push rsi; add r8b, byte ptr [rax]; nop word ptr [rax + rax]; ret; 
0x0000000000439c19: push rsi; and byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000044ea46: push rsi; and ch, al; std; xlatb; ror byte ptr [rcx - 0x7d], cl; ret 0x4d20; 
0x000000000043cc46: push rsi; clc; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d59a: push rsi; clc; mov qword ptr [rdi - 0x15], r11; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d79a: push rsi; clc; mov qword ptr [rdi - 0x16], r11; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d99a: push rsi; clc; mov qword ptr [rdi - 0x17], r11; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cc2a: push rsi; clc; mov qword ptr [rdi - 0x18], r10; mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d5b6: push rsi; clc; mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d7b6: push rsi; clc; mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d9b6: push rsi; clc; mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043cc62: push rsi; clc; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000043d3d1: push rsi; cld; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043ce09: push rsi; cld; mov qword ptr [rdi - 0x11], r11; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043cfe9: push rsi; cld; mov qword ptr [rdi - 0x12], r11; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d1c9: push rsi; cld; mov qword ptr [rdi - 0x13], r11; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d3a9: push rsi; cld; mov qword ptr [rdi - 0x14], r11; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d005: push rsi; cld; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d1e5: push rsi; cld; mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043d3c5: push rsi; cld; mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000043ce25: push rsi; cld; mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x00000000004592ae: push rsi; cld; vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043d7d1: push rsi; cli; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 6], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000442642: push rsi; cmc; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xb], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004586b6: push rsi; cmc; sub eax, edx; ret; 
0x000000000043a7ae: push rsi; fbstp tbyte ptr [rdx - 0x10f09921]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043a87e: push rsi; fidiv word ptr [rdx - 0x10f09922]; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004425c2: push rsi; hlt; mov ecx, dword ptr [rsi - 4]; mov qword ptr [rdi - 0xc], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004586a6: push rsi; hlt; sub eax, edx; ret; 
0x0000000000442412: push rsi; int1; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xf], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000458676: push rsi; int1; sub eax, edx; ret; 
0x00000000004982a6: push rsi; jge 0x9825f; dec dword ptr [rax - 0x77]; ret; 
0x000000000043a778: push rsi; mov edi, 0xf66bfb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043a848: push rsi; mov esi, 0xf66beb2; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000442532: push rsi; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004424a2: push rsi; mov rcx, qword ptr [rsi - 8]; mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000479273: push rsi; or al, 0xf6; ret 0xf08; 
0x0000000000477bb9: push rsi; or cl, ch; ret 0xfff3; 
0x0000000000456cf7: push rsi; or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x0000000000455627: push rsi; or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000455667: push rsi; psllq mm1, qword ptr [rdi]; jg 0x55674; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000456357: push rsi; psllq mm1, qword ptr [rdi]; jg 0x56364; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x0000000000456d37: push rsi; psllq mm1, qword ptr [rdi]; jg 0x56d44; movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, [rdi + 0x1e]; ret; 
0x0000000000431056: push rsi; push rbx; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x000000000047a99a: push rsi; ret 0xf10; 
0x000000000045c0b9: push rsi; ret; 
0x0000000000483fb6: push rsi; sal edi, 1; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x000000000043d9d1: push rsi; stc; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d1f2: push rsi; std; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x00000000004592b5: push rsi; std; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000043d5d1: push rsi; sti; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000458686: push rsi; sub eax, edx; ret; 
0x0000000000442742: push rsi; test dword ptr [rbx - 0x76b703b2], 0x4f89f757; cld; ret; 
0x0000000000439c2e: push rsi; xor byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004348f7: push rsp; cmp ah, byte ptr [rax]; sub eax, edx; vzeroupper; ret; 
0x000000000040a39f: push rsp; cmp edi, 0xe0000008; jne 0xa4a0; mov rax, 0x4dee00; ret; 
0x0000000000410a30: push rsp; or eax, 0x46058900; or eax, 0x89178900; ret 0xeac1; 
0x0000000000406c36: push rsp; ret 0xeb08; 
0x0000000000403678: push rsp; ret 5; 
0x0000000000428958: push rsp; ret; 
0x000000000044ae20: pushfq; adc eax, 0x83480000; ret 0xe910; 
0x0000000000469d98: pushfq; add dword ptr [rax], eax; add byte ptr [rcx + 0x3948fc51], cl; ret; 
0x0000000000426f63: pushfq; and al, 0xd8; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0x3bc0; 
0x000000000044bb20: pushfq; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000437d44: pushfq; or eax, 0x83480000; ret 0xeb10; 
0x00000000004a3077: pushfq; ret 0xf45; 
0x0000000000428665: pxor mm0, mm0; movups xmmword ptr [rbx + 0x48], xmm0; pop rbx; ret; 
0x0000000000428664: pxor xmm0, xmm0; movups xmmword ptr [rbx + 0x48], xmm0; pop rbx; ret; 
0x0000000000459166: rcl byte ptr [rax], 0x29; cmp edx, ecx; jle 0x59184; movsxd rax, ecx; ret; 
0x000000000042b9c8: rcl dword ptr [rip + 0xb6d9a], 0x83; ret 0x8b01; 
0x00000000004792a4: rcr byte ptr [rax + rax], cl; add dh, dh; ret 0xf40; 
0x000000000042e902: rcr byte ptr [rbp + 0x41], 0x5c; mov rax, r8; pop r13; ret; 
0x0000000000420ae2: rcr byte ptr [rbp + 0x41], 0x5c; pop r13; pop r14; ret; 
0x0000000000402855: rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000424782: rcr byte ptr [rbp + 0x41], 1; pop rsp; ret; 
0x00000000004824df: rcr byte ptr [rbp + 0x4d], 0x89; xor al, 0x24; pop r12; pop r13; pop r14; ret; 
0x000000000049e7b7: rcr byte ptr [rbp + 0x5b], 1; ret; 
0x0000000000420b78: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; pop r14; ret; 
0x0000000000422555: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x0000000000408e77: rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000042e09a: rcr byte ptr [rbx + 0x5d], 0x4c; mov eax, eax; pop r12; ret; 
0x00000000004a795f: rcr byte ptr [rbx + 0x5d], 1; pop r12; pop r13; pop r14; ret; 
0x000000000044ed7e: rcr byte ptr [rdi + 0x49], 0x29; ror byte ptr [rax - 0x73], 1; jl 0x4ed9e; and ecx, ebp; ret; 
0x0000000000431b9c: rcr byte ptr [rdx + rax], 0; cmovne rax, rdx; ret; 
0x000000000046216f: rcr dword ptr [rbx + 0x5d], 0xc1; loope 0x62178; pop r12; shl eax, cl; ret; 
0x000000000049c969: rcr dword ptr [rcx], 0xc0; and eax, 2; sub eax, 1; ret; 
0x000000000044b7dc: rcr dword ptr [rdx], 0xf; xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044d439: rcr dword ptr [rdx], 0xf; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x000000000044cc59: rcr dword ptr [rdx], 0xf; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x000000000044d049: rcr dword ptr [rdx], 0xf; xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c869: rcr dword ptr [rdx], 0xf; xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c33c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044bb1c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x000000000044b2fc: rcr dword ptr [rdx], 0xf; xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x000000000044ca08: rcr dword ptr [rdx], 0xf; xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044be5c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044b63c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044ae1c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000044bffc: rcr dword ptr [rdx], 0xf; xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x000000000044cef9: rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c719: rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044d829: rcr dword ptr [rdx], 0xf; xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044b15c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044b292: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bf92: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bab2: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044cdfa: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044d72a: rcr dword ptr [rdx], 0xf; xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044c2d2: rcr dword ptr [rdx], 0xf; xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044b5d2: rcr dword ptr [rdx], 0xf; xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x000000000044b0f2: rcr dword ptr [rdx], 0xf; xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bdf2: rcr dword ptr [rdx], 0xf; xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x000000000044cf4a: rcr dword ptr [rdx], 0xf; xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044c76a: rcr dword ptr [rdx], 0xf; xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000045957d: rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x000000000045956f: rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000045a2b7: rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x000000000042ce72: rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x00000000004017bf: repe cmpsb byte ptr [rsi], byte ptr [rdi]; seta al; sbb al, 0; test al, al; jne 0x17cb; ret; 
0x000000000040190b: ret 0; 
0x000000000048eaef: ret 0x1075; 
0x000000000047f4ff: ret 0x107; 
0x00000000004a2f62: ret 0x10e9; 
0x000000000042c77a: ret 0x110; 
0x0000000000404ead: ret 0x110f; 
0x000000000049e78c: ret 0x114d; 
0x00000000004556e1: ret 0x11; 
0x00000000004684d4: ret 0x11e9; 
0x000000000042503c: ret 0x1389; 
0x0000000000471b4a: ret 0x13eb; 
0x00000000004a7a52: ret 0x140; 
0x00000000004a1439: ret 0x145; 
0x0000000000420055: ret 0x1475; 
0x0000000000404e09: ret 0x1477; 
0x0000000000427a46: ret 0x148; 
0x000000000041a10a: ret 0x149; 
0x0000000000446433: ret 0x14d; 
0x000000000048257b: ret 0x14eb; 
0x000000000041da20: ret 0x1574; 
0x0000000000426dc8: ret 0x160f; 
0x0000000000495ed6: ret 0x1773; 
0x0000000000482b66: ret 0x1776; 
0x0000000000416d0a: ret 0x17d; 
0x000000000041e9c1: ret 0x17e9; 
0x0000000000446370: ret 0x180f; 
0x00000000004828f5: ret 0x1876; 
0x000000000042120a: ret 0x18; 
0x00000000004934ec: ret 0x1b8; 
0x000000000042d071: ret 0x1ba; 
0x00000000004a79d7: ret 0x1c0; 
0x00000000004304fa: ret 0x1c74; 
0x000000000047c19c: ret 0x1d74; 
0x000000000041b344: ret 0x1d; 
0x000000000046b133: ret 0x1e74; 
0x0000000000469e22: ret 0x1f0f; 
0x000000000046fd5b: ret 0x200; 
0x000000000045c615: ret 0x2044; 
0x00000000004665ad: ret 0x2074; 
0x00000000004871d6: ret 0x2148; 
0x0000000000424de7: ret 0x214c; 
0x000000000044ea2a: ret 0x21; 
0x000000000048e5d0: ret 0x2275; 
0x000000000044f428: ret 0x2288; 
0x000000000049ac1a: ret 0x2348; 
0x000000000043b122: ret 0x2373; 
0x00000000004a49c7: ret 0x2374; 
0x000000000049bd49: ret 0x2476; 
0x0000000000412dc1: ret 0x2548; 
0x0000000000478e70: ret 0x2675; 
0x000000000041f770: ret 0x2774; 
0x000000000043c907: ret 0x280f; 
0x00000000004828e5: ret 0x2876; 
0x000000000047ce8e: ret 0x28e9; 
0x000000000048e645: ret 0x28f5; 
0x000000000048a0e3: ret 0x290f; 
0x00000000004987db: ret 0x2912; 
0x000000000044e8f7: ret 0x2920; 
0x000000000049b308: ret 0x2944; 
0x0000000000421891: ret 0x2948; 
0x0000000000473e3c: ret 0x2949; 
0x000000000042102b: ret 0x294c; 
0x00000000004248ba: ret 0x294d; 
0x00000000004212e5: ret 0x2b48; 
0x000000000049b62e: ret 0x2b49; 
0x000000000047f474: ret 0x2b7c; 
0x0000000000493a16: ret 0x2be; 
0x000000000048e9fd: ret 0x2de8; 
0x000000000046a47a: ret 0x2de9; 
0x000000000047f2f5: ret 0x2e66; 
0x000000000040da1a: ret 0x2e; 
0x000000000040d9aa: ret 0x2f; 
0x000000000049ff7a: ret 0x300; 
0x00000000004069f6: ret 0x3145; 
0x0000000000489ca2: ret 0x3148; 
0x0000000000430494: ret 0x3174; 
0x00000000004223a9: ret 0x34e9; 
0x000000000048c924: ret 0x36e8; 
0x0000000000482b46: ret 0x3776; 
0x0000000000430373: ret 0x37e9; 
0x00000000004a7a00: ret 0x380; 
0x00000000004828d5: ret 0x3876; 
0x000000000049b71e: ret 0x3901; 
0x0000000000409b1a: ret 0x3944; 
0x00000000004824b5: ret 0x3945; 
0x000000000041475f: ret 0x3948; 
0x0000000000428ed9: ret 0x3949; 
0x000000000042b123: ret 0x394c; 
0x000000000049c652: ret 0x394d; 
0x000000000046d2e4: ret 0x3973; 
0x0000000000458c92: ret 0x3a01; 
0x000000000043b10b: ret 0x3a73; 
0x00000000004a3038: ret 0x3ae9; 
0x00000000004596f5: ret 0x3b48; 
0x000000000041ffbb: ret 0x3bc0; 
0x00000000004847ee: ret 0x3d48; 
0x0000000000415d56: ret 0x4001; 
0x00000000004a7a29: ret 0x400; 
0x00000000004837c8: ret 0x408d; 
0x0000000000426281: ret 0x4101; 
0x000000000046c2a7: ret 0x4104; 
0x000000000042c069: ret 0x4110; 
0x00000000004333da: ret 0x4266; 
0x000000000042d050: ret 0x4273; 
0x0000000000480799: ret 0x4389; 
0x000000000047f6b5: ret 0x43c7; 
0x000000000049ad0b: ret 0x4401; 
0x000000000046b4e1: ret 0x4408; 
0x0000000000476d45: ret 0x4420; 
0x00000000004912ef: ret 0x4475; 
0x0000000000413a8a: ret 0x448b; 
0x000000000045adca: ret 0x4501; 
0x0000000000425e1f: ret 0x458b; 
0x000000000049ea82: ret 0x462; 
0x0000000000406971: ret 0x4801; 
0x000000000043168f: ret 0x4802; 
0x0000000000480d22: ret 0x4804; 
0x0000000000485858: ret 0x4807; 
0x000000000044f3b3: ret 0x4808; 
0x000000000042a355: ret 0x4810; 
0x000000000046ff1b: ret 0x4811; 
0x000000000045b212: ret 0x4817; 
0x000000000041255a: ret 0x481a; 
0x00000000004a4c66: ret 0x4830; 
0x00000000004332e6: ret 0x4840; 
0x00000000004686da: ret 0x4858; 
0x0000000000428503: ret 0x4860; 
0x0000000000495853: ret 0x4864; 
0x000000000042238c: ret 0x4866; 
0x0000000000409acc: ret 0x48b; 
0x000000000044e35c: ret 0x48c3; 
0x000000000045dd2a: ret 0x48f8; 
0x000000000040898b: ret 0x4901; 
0x0000000000465237: ret 0x4902; 
0x0000000000429561: ret 0x4907; 
0x000000000048fddd: ret 0x4908; 
0x0000000000437d1c: ret 0x4910; 
0x000000000046db60: ret 0x4911; 
0x000000000045fed6: ret 0x4938; 
0x000000000048a116: ret 0x4966; 
0x000000000047e9d6: ret 0x49c; 
0x000000000042571e: ret 0x4a8d; 
0x0000000000469bcf: ret 0x4b01; 
0x0000000000438fee: ret 0x4c04; 
0x000000000048ee35: ret 0x4c08; 
0x0000000000438b76: ret 0x4c20; 
0x0000000000438b96: ret 0x4c40; 
0x0000000000438bb6: ret 0x4c60; 
0x000000000040702a: ret 0x4c7; 
0x000000000049fe5e: ret 0x4d08; 
0x0000000000455706: ret 0x4d10; 
0x000000000044ea4e: ret 0x4d20; 
0x0000000000404ae0: ret 0x4d74; 
0x00000000004243e4: ret 0x4d83; 
0x000000000048d774: ret 0x4f10; 
0x000000000045fb5b: ret 0x508b; 
0x000000000043b0f4: ret 0x5173; 
0x000000000045ab06: ret 0x518d; 
0x0000000000467cba: ret 0x51d; 
0x0000000000490f86: ret 0x521; 
0x000000000047f83c: ret 0x5389; 
0x0000000000406115: ret 0x5422; 
0x000000000046419f: ret 0x54d; 
0x0000000000482b26: ret 0x5776; 
0x0000000000403eda: ret 0x584; 
0x0000000000461716: ret 0x589; 
0x0000000000467891: ret 0x5a58; 
0x0000000000488e5a: ret 0x5ca; 
0x000000000042fc05: ret 0x5d5b; 
0x000000000045b200: ret 0x5de9; 
0x000000000045b6dd: ret 0x6073; 
0x0000000000428f73: ret 0x61e9; 
0x000000000048c060: ret 0x6349; 
0x000000000046db34: ret 0x6411; 
0x000000000042c22c: ret 0x6610; 
0x0000000000482861: ret 0x6620; 
0x000000000047967a: ret 0x663; 
0x000000000040a87c: ret 0x66c3; 
0x0000000000482b16: ret 0x6776; 
0x000000000040777e: ret 0x690f; 
0x000000000049c090: ret 0x6975; 
0x00000000004a55b0: ret 0x6ae8; 
0x0000000000410d2d: ret 0x7402; 
0x000000000048c4ce: ret 0x7403; 
0x00000000004112d9: ret 0x7404; 
0x0000000000410ce9: ret 0x7408; 
0x0000000000423391: ret 0x7420; 
0x0000000000410d3c: ret 0x7440; 
0x00000000004571f9: ret 0x7501; 
0x0000000000457206: ret 0x7502; 
0x0000000000457213: ret 0x7504; 
0x0000000000458634: ret 0x7508; 
0x00000000004571cb: ret 0x7510; 
0x000000000043198a: ret 0x7520; 
0x00000000004571e5: ret 0x7540; 
0x000000000042221e: ret 0x7589; 
0x00000000004a2dfd: ret 0x75e9; 
0x00000000004855cb: ret 0x774; 
0x0000000000439fe2: ret 0x7777; 
0x00000000004978dc: ret 0x77e9; 
0x00000000004147b2: ret 0x7c8b; 
0x0000000000482801: ret 0x7e20; 
0x0000000000482a7c: ret 0x7e40; 
0x0000000000431f8c: ret 0x7f10; 
0x0000000000433169: ret 0x8000; 
0x000000000041253d: ret 0x8001; 
0x000000000042b415: ret 0x80; 
0x0000000000434a35: ret 0x8101; 
0x000000000045f367: ret 0x8148; 
0x00000000004a50da: ret 0x8166; 
0x000000000044ee0f: ret 0x820f; 
0x000000000047db34: ret 0x82e9; 
0x000000000041dcf1: ret 0x8301; 
0x0000000000477cd5: ret 0x8303; 
0x000000000047f365: ret 0x8304; 
0x000000000048cc2b: ret 0x8305; 
0x0000000000434b05: ret 0x8308; 
0x0000000000461cca: ret 0x830; 
0x000000000045af91: ret 0x830b; 
0x0000000000423b14: ret 0x830f; 
0x0000000000434ad0: ret 0x8310; 
0x0000000000434aa2: ret 0x8320; 
0x000000000040199d: ret 0x8341; 
0x000000000040b619: ret 0x8348; 
0x000000000047a442: ret 0x8349; 
0x0000000000415256: ret 0x8401; 
0x0000000000497bd7: ret 0x8404; 
0x0000000000414767: ret 0x840f; 
0x00000000004688ae: ret 0x841; 
0x0000000000473926: ret 0x8445; 
0x0000000000423baa: ret 0x850f; 
0x0000000000474677: ret 0x8545; 
0x0000000000424837: ret 0x8548; 
0x0000000000470db0: ret 0x854d; 
0x0000000000494490: ret 0x85c7; 
0x00000000004114aa: ret 0x860f; 
0x0000000000409ec5: ret 0x870f; 
0x0000000000482905: ret 0x876; 
0x000000000046bd7c: ret 0x87e9; 
0x00000000004125c0: ret 0x8801; 
0x00000000004265c3: ret 0x8901; 
0x0000000000413bea: ret 0x8941; 
0x000000000048a08a: ret 0x8944; 
0x0000000000403f87: ret 0x8948; 
0x0000000000424139: ret 0x8949; 
0x00000000004067db: ret 0x894c; 
0x000000000045d002: ret 0x894d; 
0x000000000049d7bb: ret 0x894e; 
0x000000000049c27c: ret 0x8964; 
0x000000000042b9cf: ret 0x8b01; 
0x000000000047f7a6: ret 0x8b04; 
0x0000000000485227: ret 0x8b05; 
0x000000000049143e: ret 0x8b30; 
0x000000000046fc9f: ret 0x8b41; 
0x0000000000401f0e: ret 0x8b48; 
0x0000000000409efa: ret 0x8b49; 
0x000000000049d742: ret 0x8b4a; 
0x000000000040585f: ret 0x8b4c; 
0x000000000046b605: ret 0x8d08; 
0x0000000000495f9b: ret 0x8d0f; 
0x00000000004109b6: ret 0x8d48; 
0x0000000000429587: ret 0x8d49; 
0x000000000048d2e1: ret 0x8d4a; 
0x0000000000494f30: ret 0x8d4b; 
0x0000000000462673: ret 0x8d4c; 
0x0000000000429440: ret 0x8d4d; 
0x0000000000478ff8: ret 0x8d89; 
0x0000000000470b3b: ret 0x8e0f; 
0x000000000048d7bd: ret 0x9066; 
0x000000000043105d: ret 0x90c3; 
0x00000000004a7a7b: ret 0x940; 
0x0000000000429a14: ret 0x948; 
0x0000000000482dc8: ret 0x94c; 
0x0000000000498226: ret 0x950f; 
0x00000000004149c4: ret 0x96e8; 
0x0000000000492251: ret 0x99e8; 
0x00000000004a7aa4: ret 0x9a0; 
0x0000000000455b30: ret 0x9d72; 
0x000000000040ae37: ret 0x9e7; 
0x0000000000490b11: ret 0x9e8; 
0x00000000004a7acd: ret 0xa20; 
0x000000000042b9d8: ret 0xa7e; 
0x000000000045f291: ret 0xabe; 
0x0000000000490b6e: ret 0xace8; 
0x00000000004a7af6: ret 0xae0; 
0x000000000042c919: ret 0xb48b; 
0x000000000047902a: ret 0xb589; 
0x00000000004a0555: ret 0xb5e8; 
0x00000000004a7b1f: ret 0xb60; 
0x000000000042c89c: ret 0xb60f; 
0x000000000042c3e2: ret 0xb63; 
0x000000000049ba3a: ret 0xb645; 
0x000000000048df64: ret 0xb6e8; 
0x0000000000409c72: ret 0xb6eb; 
0x0000000000410e2f: ret 0xb70f; 
0x000000000042bca2: ret 0xb73; 
0x000000000047f392: ret 0xb804; 
0x000000000042cf59: ret 0xb817; 
0x0000000000479b57: ret 0xb848; 
0x0000000000479f0b: ret 0xb8; 
0x00000000004a7b48: ret 0xbc0; 
0x00000000004a343d: ret 0xbc80; 
0x0000000000427cea: ret 0xbcf; 
0x0000000000433029: ret 0xc000; 
0x000000000041307e: ret 0xc031; 
0x000000000042311b: ret 0xc083; 
0x0000000000405400: ret 0xc085; 
0x0000000000405c25: ret 0xc148; 
0x00000000004722ba: ret 0xc200; 
0x0000000000407762: ret 0xc289; 
0x000000000043afc4: ret 0xc2b2; 
0x0000000000482ae1: ret 0xc540; 
0x00000000004729c5: ret 0xc689; 
0x000000000048b462: ret 0xc6; 
0x000000000044f784: ret 0xc748; 
0x000000000041f656: ret 0xc776; 
0x0000000000478fbb: ret 0xc789; 
0x00000000004a7988: ret 0xc80; 
0x000000000048078e: ret 0xc883; 
0x000000000047ac89: ret 0xc9e9; 
0x000000000044f375: ret 0xc9ff; 
0x000000000040b60e: ret 0xca81; 
0x000000000049c273: ret 0xca83; 
0x0000000000455b00: ret 0xcd72; 
0x00000000004150ce: ret 0xce80; 
0x000000000045ab1a: ret 0xcfe9; 
0x00000000004631e4: ret 0xd17d; 
0x0000000000407776: ret 0xd269; 
0x0000000000411228: ret 0xd284; 
0x000000000047f7d6: ret 0xd285; 
0x0000000000497981: ret 0xd2e9; 
0x0000000000489a18: ret 0xd348; 
0x000000000041128d: ret 0xd689; 
0x000000000048aa27: ret 0xd74; 
0x000000000048921b: ret 0xd75; 
0x000000000042130a: ret 0xd7; 
0x0000000000409fb5: ret 0xd872; 
0x000000000045cbea: ret 0xd8f7; 
0x0000000000429514: ret 0xd977; 
0x0000000000484d63: ret 0xda72; 
0x000000000045ab0c: ret 0xda89; 
0x00000000004a14e3: ret 0xdb31; 
0x0000000000425da5: ret 0xde9; 
0x000000000049b57d: ret 0xdeb; 
0x000000000041467b: ret 0xdfe8; 
0x0000000000432ee9: ret 0xe000; 
0x000000000045718d: ret 0xe074; 
0x0000000000423f87: ret 0xe083; 
0x000000000049d67a: ret 0xe0e8; 
0x00000000004a4b57: ret 0xe172; 
0x0000000000479ebb: ret 0xe273; 
0x000000000041e095: ret 0xe281; 
0x0000000000410a55: ret 0xe283; 
0x000000000040645a: ret 0xe2d3; 
0x0000000000428e41: ret 0xe480; 
0x0000000000470b20: ret 0xe575; 
0x0000000000495268: ret 0xe57f; 
0x000000000045a7a2: ret 0xe680; 
0x0000000000430516: ret 0xe775; 
0x0000000000478fc8: ret 0xe783; 
0x00000000004987e3: ret 0xe7f; 
0x0000000000439799: ret 0xe883; 
0x0000000000488cf2: ret 0xe8c0; 
0x0000000000431353: ret 0xe901; 
0x000000000047ee5e: ret 0xe902; 
0x0000000000497951: ret 0xe904; 
0x000000000044f416: ret 0xe908; 
0x000000000044ac86: ret 0xe910; 
0x0000000000495557: ret 0xe9f8; 
0x000000000047a1df: ret 0xe; 
0x000000000041e171: ret 0xeab8; 
0x0000000000407764: ret 0xeac1; 
0x0000000000406c37: ret 0xeb08; 
0x0000000000437d4a: ret 0xeb10; 
0x000000000042a302: ret 0xeb75; 
0x000000000048ad50: ret 0xec75; 
0x0000000000409f30: ret 0xed75; 
0x000000000040420e: ret 0xed85; 
0x000000000041479f: ret 0xee75; 
0x00000000004a2a5c: ret 0xef89; 
0x0000000000432da9: ret 0xf000; 
0x0000000000419b3d: ret 0xf00; 
0x0000000000413280: ret 0xf01; 
0x000000000042d6cd: ret 0xf02; 
0x00000000004a79b1: ret 0xf040; 
0x0000000000434b37: ret 0xf04; 
0x0000000000409d0d: ret 0xf075; 
0x00000000004857f3: ret 0xf07; 
0x0000000000479276: ret 0xf08; 
0x0000000000431f42: ret 0xf10; 
0x0000000000490fba: ret 0xf30; 
0x0000000000425c1e: ret 0xf390; 
0x0000000000490a67: ret 0xf3e8; 
0x0000000000459199: ret 0xf40; 
0x0000000000413487: ret 0xf41; 
0x0000000000496aaa: ret 0xf45; 
0x0000000000481f31: ret 0xf475; 
0x000000000046608e: ret 0xf48; 
0x0000000000496291: ret 0xf50; 
0x000000000043496e: ret 0xf5c5; 
0x000000000049c6c2: ret 0xf604; 
0x000000000040513b: ret 0xf631; 
0x0000000000424eec: ret 0xf66; 
0x000000000041580a: ret 0xf748; 
0x0000000000484fa9: ret 0xf789; 
0x00000000004307d3: ret 0xf7e8; 
0x0000000000414811: ret 0xf7f7; 
0x0000000000432c69: ret 0xf800; 
0x0000000000484e68: ret 0xf883; 
0x0000000000428997: ret 0xf8b; 
0x000000000044df86: ret 0xf8c5; 
0x000000000046d0ca: ret 0xf940; 
0x0000000000474f8a: ret 0xf9cc; 
0x0000000000436b3e: ret 0xf; 
0x00000000004036bb: ret 0xfa83; 
0x000000000045a90c: ret 0xfac1; 
0x000000000046538a: ret 0xfac8; 
0x000000000047d73e: ret 0xfb83; 
0x0000000000432b29: ret 0xfc00; 
0x000000000046dc0a: ret 0xfc0e; 
0x000000000040a8c2: ret 0xfc3; 
0x000000000042607a: ret 0xfdaf; 
0x000000000042117a: ret 0xfdfe; 
0x00000000004329e9: ret 0xfe00; 
0x000000000049542a: ret 0xfead; 
0x00000000004133ca: ret 0xfedd; 
0x00000000004328a9: ret 0xff00; 
0x0000000000442471: ret 0xff2; 
0x0000000000439959: ret 0xff2d; 
0x000000000042245e: ret 0xff3; 
0x0000000000432769: ret 0xff80; 
0x000000000049661a: ret 0xff85; 
0x000000000041d5fa: ret 0xff89; 
0x00000000004684aa: ret 0xff8e; 
0x0000000000430e0a: ret 0xff98; 
0x000000000041c1fa: ret 0xff9d; 
0x000000000042efea: ret 0xffa7; 
0x000000000042520b: ret 0xffb8; 
0x000000000041e1c2: ret 0xffc0; 
0x0000000000418dfa: ret 0xffd1; 
0x00000000004098aa: ret 0xffe0; 
0x0000000000428aca: ret 0xffe2; 
0x0000000000418cb9: ret 0xffed; 
0x000000000041f431: ret 0xffef; 
0x000000000041dfb0: ret 0xfff0; 
0x000000000041cd02: ret 0xfff2; 
0x0000000000477bbc: ret 0xfff3; 
0x0000000000461f5a: ret 0xfff4; 
0x0000000000493bb6: ret 0xfff6; 
0x00000000004a702a: ret 0xfff7; 
0x0000000000432269: ret 0xfff8; 
0x000000000048c3ea: ret 0xfff9; 
0x00000000004304f1: ret 0xfff; 
0x000000000048c105: ret 0xfffa; 
0x00000000004728b8: ret 0xfffb; 
0x000000000042587c: ret 0xfffc; 
0x00000000004a6387: ret 0xfffd; 
0x000000000040299a: ret 0xfffe; 
0x0000000000419d8f: ret 0xffff; 
0x0000000000404582: ret 1; 
0x000000000042b1e2: ret 2; 
0x0000000000413948: ret 3; 
0x00000000004137f2: ret 4; 
0x0000000000403679: ret 5; 
0x00000000004382da: ret 7; 
0x0000000000439409: ret 8; 
0x00000000004103d9: ret 9; 
0x000000000040101a: ret; 
0x000000000042d247: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xb558e; syscall; pop rbp; ret; 
0x000000000042e3b3: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xb6962; syscall; pop rbx; ret; 
0x0000000000426189: retf 0; add byte ptr [rax - 0x73], cl; cmp eax, 0xbeb1c; syscall; ret; 
0x0000000000420783: retf 0; add byte ptr [rax - 0x77], cl; ret; 
0x000000000040b610: retf 0; add byte ptr [rax - 0x7b], al; ror byte ptr [rdi], 0x49; ret 0x8348; 
0x000000000045916b: retf 0x167e; movsxd rax, ecx; ret; 
0x0000000000430e78: retf 0x1974; test byte ptr [rip + 0xb3f62], 0x40; lea rax, [rip + 0x1cc37]; lea rdx, [rip + 0x26290]; cmovne rax, rdx; ret; 
0x00000000004658a5: retf 0x2948; ret 0x8348; 
0x000000000040366f: retf 0x2be; add byte ptr [rax], al; add byte ptr [rcx], dh; shr al, 0x54; ret 5; 
0x000000000044ee2a: retf 0x3944; ret 0x820f; 
0x0000000000471c11: retf 0x3948; ret 0x820f; 
0x000000000048e5cd: retf 0x394c; ret 0x2275; 
0x0000000000455b2d: retf 0x394c; ret 0x9d72; 
0x000000000048f3a2: retf 0x560; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000042a352: retf 0x8348; ret 0x4810; 
0x0000000000437cef: retf 0x8349; ret 0x7f10; 
0x000000000044aee7: retf 0x8349; ret 0xf10; 
0x00000000004a2ff0: retf 0x894c; fild dword ptr [rcx + 0xf]; lahf; ret 0xf45; 
0x00000000004a2fdd: retf 0x894c; fild dword ptr [rcx + 0xf]; popfq; ret 0xf45; 
0x00000000004a3071: retf 0x894c; fild dword ptr [rcx + 0xf]; pushfq; ret 0xf45; 
0x00000000004a305e: retf 0x894c; fild dword ptr [rcx + 0xf]; sahf; ret 0xf45; 
0x00000000004a3040: retf 0x894c; fild dword ptr [rcx + 0xf]; xchg eax, ebp; ret 0xf45; 
0x00000000004a2fca: retf 0x894c; fild dword ptr [rcx + 0xf]; xchg eax, esp; ret 0xf45; 
0x000000000045cfff: retf 0x894d; ret 0x894d; 
0x000000000048b177: retf 0x8b48; add cl, byte ptr [rax - 0x7b]; sal byte ptr [rax + rsi*2 + 0x48], 0x89; ret 0x8b48; 
0x000000000045a69a: retf 0xd975; vzeroupper; ret; 
0x0000000000437d16: retf 0xd; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000045a4d7: retf 0xe175; vzeroupper; ret; 
0x00000000004924c7: retf 0xe273; mov rax, r8; ret; 
0x0000000000425879: retf 0xe980; ret 0xfffc; 
0x000000000044e4b0: retf 0xf48; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x0000000000483f8c: retf 0xf48; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 2; ret; 
0x0000000000483271: retf 0xf4c; stosd dword ptr [rdi], eax; fimul dword ptr [rax + 0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x000000000043ab66: retf 0xf66; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000492c87: retf 0xf66; outsd dx, dword ptr [rsi]; ret 0x290f; 
0x0000000000482f1a: retf 0xfdc5; xlatb; ret; 
0x00000000004818a1: retf; add al, byte ptr [rcx + 0x39]; ret; 
0x0000000000464f09: retf; punpcklqdq xmm0, xmm1; movups xmmword ptr [rdx + 0x48], xmm0; ret; 
0x00000000004949f2: rol al, 0x3b; add byte ptr [rax - 0x39], r9b; shr dword ptr [rax + 0x42], 0x4e; add byte ptr [rax - 0x77], cl; fimul dword ptr [rax + 0x29]; ret 0x2948; 
0x000000000048285e: rol bl, 0x83; ret 0x6620; 
0x0000000000459741: rol byte ptr [r9 + 0xf], 1; adc dword ptr [rbx], esp; ret; 
0x000000000049bd43: rol byte ptr [r9 + rbp - 0x10], 0x39; ret 0x2476; 
0x00000000004332e2: rol byte ptr [rax + 0x48], 0x83; ret 0x4840; 
0x00000000004843d6: rol byte ptr [rax + 0x48], 1; clc; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e606: rol byte ptr [rax + 0x48], 1; clc; sub rax, rdx; vzeroupper; ret; 
0x0000000000439346: rol byte ptr [rax + 0x48], 1; clc; vzeroupper; ret; 
0x0000000000483202: rol byte ptr [rax + 0x49], 0x39; ret 0x2774; 
0x0000000000413a84: rol byte ptr [rax + rax], 1; add byte ptr [rax - 0x77], cl; ret 0x448b; 
0x0000000000497d75: rol byte ptr [rax + rax], cl; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x00000000004681a9: rol byte ptr [rax + rcx*2], 0x39; ret; 
0x000000000046cd70: rol byte ptr [rax + rcx*2], 0x83; ret; 
0x000000000046061c: rol byte ptr [rax - 0x6af0ffc8], cl; ret 0x8348; 
0x0000000000460dea: rol byte ptr [rax - 0x6af0ffc8], cl; ret 0x8d48; 
0x0000000000460dc9: rol byte ptr [rax - 0x6bf0ffc8], cl; ret 0x8d48; 
0x0000000000423959: rol byte ptr [rax], 0; add byte ptr [rbp + 0x4f0f48c9], al; ret 0x8948; 
0x0000000000439eef: rol byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000460972: rol byte ptr [rax], 0; add dh, dh; ret 0x7404; 
0x0000000000407e87: rol byte ptr [rax], 1; add byte ptr [rax], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004391b2: rol byte ptr [rbp + 0x664975c0], 0xf; xlatb; ret 0xc085; 
0x00000000004a1269: rol byte ptr [rbp - 0x7b], 0xc0; jne 0xa11c0; add rsp, 0x38; ret; 
0x000000000040a760: rol byte ptr [rbp - 0x7b], 0xc0; jne 0xa76d; mov rax, 0x4e12e0; pop rbp; ret; 
0x000000000049c96b: rol byte ptr [rbx - 0x177cfd20], 1; ret; 
0x00000000004897e8: rol byte ptr [rbx - 0x7a99fe20], 1; ror byte ptr [rdi], cl; xchg eax, esp; ret 0xb60f; 
0x0000000000484232: rol byte ptr [rbx], 0; add byte ptr [rax], al; ret; 
0x000000000042e89b: rol byte ptr [rcx + 0x5c], 0x41; pop rbp; ret; 
0x0000000000459742: rol byte ptr [rcx + 0xf], 1; adc dword ptr [rbx], esp; ret; 
0x000000000045d528: rol byte ptr [rcx + 0xf], cl; lahf; vpaddsw ymm0, ymm15, ymmword ptr [rcx + 0xf]; lahf; ret; 
0x0000000000496aa6: rol byte ptr [rcx + 0xf], cl; xchg eax, esp; ret 0xf45; 
0x000000000049bd44: rol byte ptr [rcx + rbp - 0x10], 0x39; ret 0x2476; 
0x000000000047f46f: rol byte ptr [rcx + rbp - 0x36], 0x39; ret 0x2b7c; 
0x0000000000483d75: rol byte ptr [rcx + rdi], 0xf2; je 0x83d7f; test edx, edx; jne 0x83d70; ret; 
0x000000000047ce8b: rol byte ptr [rcx - 0x77], 1; ret 0x28e9; 
0x000000000041480e: rol byte ptr [rcx - 0x77], cl; ret 0xf7f7; 
0x000000000040889d: rol byte ptr [rcx - 0x7d], 0xf8; add dword ptr [rbp + 0x1c], esi; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000484212: rol byte ptr [rcx], 0; add byte ptr [rax], al; ret; 
0x0000000000415d2e: rol byte ptr [rcx], 0x88; dec qword ptr [rax - 0x7d]; ret 0x4901; 
0x0000000000401f0b: rol byte ptr [rcx], 0x89; ret 0x8b48; 
0x0000000000465ab2: rol byte ptr [rcx], 0x89; xor dword ptr [rax - 0x7d], ecx; ret; 
0x000000000045ab02: rol byte ptr [rcx], 0xf; scasd eax, dword ptr [rdi]; ret 0x518d; 
0x0000000000462152: rol byte ptr [rcx], 1; add byte ptr [rax], al; pop rbx; pop rbp; pop r12; ret; 
0x0000000000484272: rol byte ptr [rdi], 0; add byte ptr [rax], al; ret; 
0x0000000000464b54: rol byte ptr [rdi], cl; add byte ptr [rax - 0x7d], cl; ret 0x4901; 
0x0000000000484222: rol byte ptr [rdx], 0; add byte ptr [rax], al; ret; 
0x0000000000430e3a: rol byte ptr [rdx], 0; mov edx, 0; cmp rax, -1; cmove rax, rdx; add rsp, 8; ret; 
0x0000000000484262: rol byte ptr [rsi], 0; add byte ptr [rax], al; ret; 
0x0000000000459b06: rol ch, 0x7e; jg 0x59b4c; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x0000000000459c39: rol ch, 0x7e; jg 0x59c7f; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x000000000043935f: rol ch, 1; std; xlatb; ret; 
0x000000000044e62f: rol ch, cl; std; xlatb; ret 0xc085; 
0x0000000000482f76: rol ch, cl; std; xlatb; ret; 
0x00000000004841bc: rol dword ptr [rax + 0x1e740fe1], 1; ret; 
0x000000000045a4d0: rol dword ptr [rax + 0x48000000], 0x39; retf 0xe175; vzeroupper; ret; 
0x000000000045a2af: rol dword ptr [rax + 0xf], 1; mov dh, 0xc6; mov rdx, rdi; rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000499022: rol dword ptr [rax + rax], 0x66; add dword ptr [rdx + rax*2], 1; ret; 
0x0000000000499019: rol dword ptr [rax + rax], 0x73; or al, 0x48; mov edx, dword ptr [rip + 0x4c113]; add word ptr [rdx + rax*2], 1; ret; 
0x0000000000497ea4: rol dword ptr [rax + rax], 1; add rsp, 8; ret; 
0x0000000000497eb4: rol dword ptr [rax + rax], 1; mov qword ptr [rip + 0x4d16a], rax; ret; 
0x0000000000497e9d: rol dword ptr [rax + rax], 1; mov qword ptr [rip + 0x4d181], rax; add rsp, 8; ret; 
0x0000000000497ebb: rol dword ptr [rax + rax], 1; ret; 
0x000000000045a693: rol dword ptr [rax], 1; add byte ptr [rax], al; cmp rdx, rcx; jne 0x5a676; vzeroupper; ret; 
0x0000000000482b00: rol dword ptr [rbp + 0x311b75c0], 0xc0; vzeroupper; ret; 
0x0000000000482884: rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x0000000000439353: rol dword ptr [rbp - 0x3a378a40], 0xfd; xlatb; ret 0xc085; 
0x000000000044e0f3: rol dword ptr [rbp - 0x3a678a40], 0xfd; xlatb; ret 0xc085; 
0x0000000000482854: rol dword ptr [rbp - 0x5c7af040], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000483487: rol dword ptr [rbp - 0x5f7af040], 0; add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x0000000000482ac3: rol dword ptr [rbp - 0x6b7af040], 0; add byte ptr [rax], al; xor eax, eax; vzeroupper; ret; 
0x00000000004a7c16: rol dword ptr [rbx], cl; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000478672: rol dword ptr [rcx + 0x5c], 0x41; pop rbp; mov rax, r9; pop r14; ret; 
0x000000000046788e: rol dword ptr [rcx - 0x77], cl; ret 0x5a58; 
0x000000000040199a: rol dword ptr [rcx - 0x77], cl; ret 0x8341; 
0x0000000000468d8e: rol dword ptr [rdx + rdx*8 - 0x157e2a87], 1; ret 0; 
0x0000000000439955: rol ebp, 1; stc; xlatb; ret 0xff2d; 
0x000000000048266b: ror byte ptr [rax + 0x29], 0xc2; jbe 0x82910; add rax, rdi; add rax, rcx; ret; 
0x00000000004828d2: ror byte ptr [rax + 0x29], 0xc2; jbe 0x82910; add rax, rdi; ret; 
0x00000000004828e2: ror byte ptr [rax + 0x29], 0xc2; jbe 0x82910; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004828f2: ror byte ptr [rax + 0x29], 0xc2; jbe 0x82910; lea rax, [rdi + rax + 0x20]; ret; 
0x0000000000482902: ror byte ptr [rax + 0x29], 0xc2; jbe 0x82910; lea rax, [rdi + rax + 0x30]; ret; 
0x00000000004989cb: ror byte ptr [rax + 0x29], 0xc2; jbe 0x98c70; add rax, rdi; add rax, rcx; ret; 
0x0000000000498c32: ror byte ptr [rax + 0x29], 0xc2; jbe 0x98c70; add rax, rdi; ret; 
0x0000000000498c42: ror byte ptr [rax + 0x29], 0xc2; jbe 0x98c70; lea rax, [rdi + rax + 0x10]; ret; 
0x0000000000498c52: ror byte ptr [rax + 0x29], 0xc2; jbe 0x98c70; lea rax, [rdi + rax + 0x20]; ret; 
0x0000000000498c62: ror byte ptr [rax + 0x29], 0xc2; jbe 0x98c70; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000044e4b7: ror byte ptr [rax + 0x29], 1; clc; ret; 
0x0000000000483f3c: ror byte ptr [rax + 0x29], 1; clc; shr rax, 2; ret; 
0x0000000000482b23: ror byte ptr [rax + 0x39], 0xc2; jbe 0x82b80; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000482b43: ror byte ptr [rax + 0x39], 0xc2; jbe 0x82b80; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000482b63: ror byte ptr [rax + 0x39], 0xc2; jbe 0x82b80; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000000482b13: ror byte ptr [rax + 0x39], 0xc2; jbe 0x82b80; add rax, rdi; vzeroupper; ret; 
0x0000000000498e83: ror byte ptr [rax + 0x39], 0xc2; jbe 0x98ee0; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x0000000000498ea3: ror byte ptr [rax + 0x39], 0xc2; jbe 0x98ee0; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x0000000000498ec3: ror byte ptr [rax + 0x39], 0xc2; jbe 0x98ee0; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000000498e73: ror byte ptr [rax + 0x39], 0xc2; jbe 0x98ee0; add rax, rdi; vzeroupper; ret; 
0x00000000004834d3: ror byte ptr [rax + 0x39], 0xc6; jbe 0x83550; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000429310: ror byte ptr [rax + 0x39], 0xfa; setae al; ret; 
0x000000000042d7ae: ror byte ptr [rax + 0x39], 1; ret; 
0x00000000004a3a16: ror byte ptr [rax + 0xf], 0x45; and al, 0x10; add rsp, 0x28; ret; 
0x000000000044e1a6: ror byte ptr [rax + 1], 0xc8; add rax, rdi; vzeroupper; ret; 
0x000000000043908c: ror byte ptr [rax + 1], 0xf8; add rax, rcx; ret; 
0x00000000004842d8: ror byte ptr [rax + 1], 0xf8; add rax, rcx; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e518: ror byte ptr [rax + 1], 0xf8; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000439288: ror byte ptr [rax + 1], 0xf8; add rax, rcx; vzeroupper; ret; 
0x0000000000439202: ror byte ptr [rax + 1], 0xf8; ret; 
0x0000000000484393: ror byte ptr [rax + 1], 0xf8; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e5d3: ror byte ptr [rax + 1], 0xf8; sub rax, rdx; vzeroupper; ret; 
0x0000000000439323: ror byte ptr [rax + 1], 0xf8; vzeroupper; ret; 
0x000000000041594b: ror byte ptr [rax + 1], 1; ret; 
0x000000000044e4b4: ror byte ptr [rax + 1], cl; ror byte ptr [rax + 0x29], 1; clc; ret; 
0x0000000000483f39: ror byte ptr [rax + 1], cl; ror byte ptr [rax + 0x29], 1; clc; shr rax, 2; ret; 
0x000000000044de45: ror byte ptr [rax + 9], 0xc8; shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x0000000000439476: ror byte ptr [rax - 0x2d], 0xfa; movzx edx, dl; sub eax, edx; ret; 
0x000000000044e3f6: ror byte ptr [rax - 0x2d], 0xfa; test rdx, rdx; je 0x4e410; bsf rax, rdx; ret; 
0x000000000044e399: ror byte ptr [rax - 0x2d], 0xfa; test rdx, rdx; je 0x4e420; bsf rax, rdx; ret; 
0x0000000000488626: ror byte ptr [rax - 0x3f], 0xef; add ah, byte ptr [rsi + 0xf]; jo 0x885f0; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x00000000004842e1: ror byte ptr [rax - 0x3f], 1; call 0x780107eb; ret; 
0x0000000000484399: ror byte ptr [rax - 0x3f], 1; call 0x780108a3; ret; 
0x00000000004843bd: ror byte ptr [rax - 0x3f], 1; call 0x780108c7; ret; 
0x00000000004843dd: ror byte ptr [rax - 0x3f], 1; call 0x780108e7; ret; 
0x0000000000484429: ror byte ptr [rax - 0x3f], 1; call 0x78010933; ret; 
0x00000000004844ca: ror byte ptr [rax - 0x3f], 1; call 0x780109d4; ret; 
0x000000000048464e: ror byte ptr [rax - 0x3f], 1; call 0x78010b58; ret; 
0x0000000000484672: ror byte ptr [rax - 0x3f], 1; call 0x78010b7c; ret; 
0x0000000000484692: ror byte ptr [rax - 0x3f], 1; call 0x78010b9c; ret; 
0x00000000004846b2: ror byte ptr [rax - 0x3f], 1; call 0x78010bbc; ret; 
0x00000000004846e9: ror byte ptr [rax - 0x3f], 1; call 0x78010bf3; ret; 
0x000000000048470d: ror byte ptr [rax - 0x3f], 1; call 0x78010c17; ret; 
0x000000000048472d: ror byte ptr [rax - 0x3f], 1; call 0x78010c37; ret; 
0x0000000000484779: ror byte ptr [rax - 0x3f], 1; call 0x78010c83; ret; 
0x0000000000431a51: ror byte ptr [rax - 0x73], 0x15; mov byte ptr [edx], al; add byte ptr [rax - 0x73], cl; add eax, 0x287f0; cmovne rax, rdx; ret; 
0x0000000000473c2a: ror byte ptr [rax - 0x73], 0x34; ret; 
0x000000000042c192: ror byte ptr [rax - 0x73], 0x3c; ret; 
0x0000000000470fc5: ror byte ptr [rax - 0x73], 0x41; adc byte ptr [rdi], cl; sahf; ret 0x3949; 
0x00000000004391f2: ror byte ptr [rax - 0x73], 0x44; cmp al, dh; ret; 
0x0000000000439222: ror byte ptr [rax - 0x73], 0x44; cmp byte ptr [rax], ah; ret; 
0x0000000000439212: ror byte ptr [rax - 0x73], 0x44; cmp byte ptr [rax], dl; ret; 
0x00000000004304ed: ror byte ptr [rax - 0x73], 0x44; ret 0xfff; 
0x0000000000481d11: ror byte ptr [rax - 0x73], 1; adc eax, 0x11d7; lea rax, [rip + 0xed0]; cmove rax, rdx; ret; 
0x0000000000481cd1: ror byte ptr [rax - 0x73], 1; adc eax, 0x1607; lea rax, [rip + 0x13e0]; cmove rax, rdx; ret; 
0x0000000000431d21: ror byte ptr [rax - 0x73], 1; adc eax, 0x1c407; lea rax, [rip + 0x1bfc0]; cmove rax, rdx; ret; 
0x0000000000430fe1: ror byte ptr [rax - 0x73], 1; adc eax, 0x1d4d7; lea rax, [rip + 0x1d330]; cmove rax, rdx; ret; 
0x00000000004988d1: ror byte ptr [rax - 0x73], 1; adc eax, 0x3a7; lea rax, [rip + 0x70]; cmove rax, rdx; ret; 
0x0000000000431ce1: ror byte ptr [rax - 0x73], 1; adc eax, 0x7547; lea rax, [rip + 0x7330]; cmove rax, rdx; ret; 
0x0000000000410953: ror byte ptr [rax - 0x73], 1; adc eax, 0xa2b45; movsxd rax, dword ptr [rcx + rax*4]; add rax, rdx; ret; 
0x0000000000481dd1: ror byte ptr [rax - 0x73], 1; adc eax, 0xb47; lea rax, [rip + 0x810]; cmove rax, rdx; ret; 
0x0000000000483621: ror byte ptr [rax - 0x73], 1; adc eax, 0xc57; lea rax, [rip + 0x9b0]; cmove rax, rdx; ret; 
0x000000000044ed82: ror byte ptr [rax - 0x73], 1; jl 0x4ed9e; and ecx, ebp; ret; 
0x000000000044df7b: ror byte ptr [rax - 0x73], cl; add al, 7; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x00000000004927ce: ror byte ptr [rax - 0x75], 0x43; sbb byte ptr [rax + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b4c; 
0x000000000042ad30: ror byte ptr [rax - 0x75], 0x46; or byte ptr [rax - 0x77], cl; ret; 
0x0000000000491a86: ror byte ptr [rax - 0x75], 1; and al, 0x48; xor rcx, qword ptr fs:[0x28]; jne 0x91ac4; add rsp, 0x58; ret; 
0x0000000000491f16: ror byte ptr [rax - 0x75], 1; and al, 0x48; xor rcx, qword ptr fs:[0x28]; jne 0x91f54; add rsp, 0x58; ret; 
0x0000000000491bf8: ror byte ptr [rax - 0x75], 1; and al, 0x58; xor rcx, qword ptr fs:[0x28]; jne 0x91c44; add rsp, 0x68; ret; 
0x0000000000480739: ror byte ptr [rax - 0x77], 0x48; adc byte ptr [rax - 0x77], cl; push rax; movups xmmword ptr [rax], xmm0; ret; 
0x0000000000426872: ror byte ptr [rax - 0x77], 0x57; sbb byte ptr [rax - 0x77], cl; movups xmmword ptr [rdi + 8], xmm0; ret; 
0x00000000004151fe: ror byte ptr [rax - 0x77], 1; fisttp word ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000491b72: ror byte ptr [rax - 0x77], 1; ret 0xc148; 
0x000000000041e092: ror byte ptr [rax - 0x77], 1; ret 0xe281; 
0x0000000000421da9: ror byte ptr [rax - 0x77], 1; ret; 
0x0000000000425195: ror byte ptr [rax - 0x7b], 0xd2; jne 0x251a0; ret; 
0x000000000048e4ae: ror byte ptr [rax - 0x7b], 0xf6; je 0x8e4b7; mov qword ptr [rsi], rdi; mov rax, r8; ret; 
0x000000000042a2f4: ror byte ptr [rax - 0x7d], 0xc0; adc byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ror byte ptr [rdi], 0x11; add byte ptr [rax + 0x39], cl; ret 0xeb75; 
0x00000000004843d3: ror byte ptr [rax - 0x7d], 0xc0; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e603: ror byte ptr [rax - 0x7d], 0xc0; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439343: ror byte ptr [rax - 0x7d], 0xc0; add rax, rdi; vzeroupper; ret; 
0x000000000044e5e3: ror byte ptr [rax - 0x7d], 0xc0; and byte ptr [rax + 1], cl; clc; sub rax, rdx; vzeroupper; ret; 
0x0000000000439333: ror byte ptr [rax - 0x7d], 0xc0; and byte ptr [rax + 1], cl; clc; vzeroupper; ret; 
0x000000000045a9ee: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000403847: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000049eb6b: ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x0000000000485037: ror byte ptr [rax - 0x7d], 0xc4; pop rax; ret; 
0x00000000004a4fc9: ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000425ef5: ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rbx + 0x5d], bl; ret; 
0x00000000004a482f: ror byte ptr [rax - 0x7d], 0xc4; sbb byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x000000000047c191: ror byte ptr [rax - 0x7d], 1; mov ebp, 0xfffffb18; add byte ptr [rcx - 0x77], al; ret 0x1d74; 
0x000000000047f7a3: ror byte ptr [rax - 0x7d], 1; ret 0x8b04; 
0x000000000048bf06: ror byte ptr [rax - 0x7d], 1; ret; 
0x00000000004681a6: ror byte ptr [rax - 0x7d], 1; rol byte ptr [rax + rcx*2], 0x39; ret; 
0x0000000000455b26: ror byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000047f0de: ror byte ptr [rax - 0x7d], cl; ret 0x8901; 
0x00000000004590eb: ror byte ptr [rax - 0x7f], 0xc4; add byte ptr [rcx], al; add byte ptr [rax], al; sub rax, rdx; ret; 
0x000000000041e1b0: ror byte ptr [rax - 0x7f], 0xc4; sbb byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x00000000004590e8: ror byte ptr [rax - 1], 0xc0; add rsp, 0x100; sub rax, rdx; ret; 
0x00000000004590e5: ror byte ptr [rax - 1], 0xc0; inc rax; add rsp, 0x100; sub rax, rdx; ret; 
0x000000000048e523: ror byte ptr [rax - 9], 0xd8; test cl, cl; cmove r8, rax; mov rax, r8; ret; 
0x000000000040b6ae: ror byte ptr [rbp + 0x138890], 0; cmovns eax, edx; add rsp, 8; ret; 
0x000000000040b6ee: ror byte ptr [rbp + 0x177090], 0; cmovns eax, edx; add rsp, 8; ret; 
0x000000000040b66e: ror byte ptr [rbp + 0xfa090], 0; cmovns eax, edx; add rsp, 8; ret; 
0x000000000048d1ee: ror byte ptr [rbp - 0x7b], cl; dec dword ptr [rax - 0x77]; mov r8b, 0xf; xchg eax, ebp; ret 0x2148; 
0x0000000000495f4a: ror byte ptr [rbp - 0x7b], cl; inc dword ptr [rcx + 0xf]; xchg eax, esp; ret 0x8545; 
0x0000000000436383: ror byte ptr [rcx + 0x29], cl; sal dword ptr [rsi + 0xb], cl; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000046b4f8: ror byte ptr [rcx + 0x3948fc51], cl; ret; 
0x000000000049821a: ror byte ptr [rcx + 0x438b4803], cl; sbb byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x950f; 
0x0000000000497c14: ror byte ptr [rcx + rcx*4 + 0x2b], 0x5b; pop rbp; pop r12; pop r13; ret; 
0x0000000000467246: ror byte ptr [rcx + rcx*4 + 0x5c], 0x24; sub byte ptr [rcx - 0x77], cl; ret; 
0x000000000041ef0a: ror byte ptr [rcx + rcx*4 - 0x40], 0x5b; pop rbp; ret; 
0x000000000046d76a: ror byte ptr [rcx - 0x2d94b73b], 1; push -0x1605feb4; ret 0xfffe; 
0x0000000000482ddc: ror byte ptr [rcx - 0x3e], 0x48; cmovne ecx, edi; cmovne rsi, rdx; bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x0000000000495da8: ror byte ptr [rcx - 0x3f], 0xe3; and byte ptr [rcx + 9], cl; ret; 
0x000000000045aa5a: ror byte ptr [rcx - 0x765df00f], 1; ret 0xe283; 
0x000000000045dc8e: ror byte ptr [rcx - 0x77], 1; or byte ptr [r9 - 0x75], cl; add dword ptr [rbx + 0x94901e0], eax; ret; 
0x0000000000455703: ror byte ptr [rcx - 0x7d], 1; ret 0x4d10; 
0x0000000000469bcc: ror byte ptr [rcx - 0x7d], cl; ret 0x4b01; 
0x000000000044ea4b: ror byte ptr [rcx - 0x7d], cl; ret 0x4d20; 
0x00000000004223a2: ror byte ptr [rdi], 0x11; add ah, byte ptr [rsi + 0xf]; outsd dx, dword ptr [rsi]; ret 0x34e9; 
0x000000000042a2fc: ror byte ptr [rdi], 0x11; add byte ptr [rax + 0x39], cl; ret 0xeb75; 
0x0000000000427928: ror byte ptr [rdi], 0x11; cmp r11b, r13b; test al, 0x90; endbr64; mov rax, -1; ret; 
0x000000000042346d: ror byte ptr [rdi], 0x11; or byte ptr [r15], cl; adc dword ptr [rbx + 0x18], eax; movups xmmword ptr [rbx + 0x28], xmm0; pop rbx; ret; 
0x0000000000428667: ror byte ptr [rdi], 0x11; pop rbx; ret; 
0x000000000045cc7b: ror byte ptr [rdi], 0x1f; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x0000000000407024: ror byte ptr [rdi], 0x1f; add byte ptr [rax - 0x77], cl; ret 0x4c7; 
0x000000000045f830: ror byte ptr [rdi], 0x44; ret 0x66c3; 
0x000000000049c279: ror byte ptr [rdi], 0x45; ret 0x8964; 
0x000000000040b616: ror byte ptr [rdi], 0x49; ret 0x8348; 
0x000000000046e34f: ror byte ptr [rdi], 0x84; leave; add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x0000000000409289: ror byte ptr [rdi], 0x84; lock add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000420681: ror byte ptr [rdi], 0x84; mov dword ptr [rax], 0x89480000; ret; 
0x0000000000410fb1: ror byte ptr [rdi], 0x84; nop; add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret; 
0x000000000042e557: ror byte ptr [rdi], 0x84; ret 0; 
0x0000000000413945: ror byte ptr [rdi], 0x84; ret 3; 
0x0000000000476f9f: ror byte ptr [rdi], 0x84; ret; 
0x0000000000420780: ror byte ptr [rdi], 0x84; retf 0; add byte ptr [rax - 0x77], cl; ret; 
0x000000000046723e: ror byte ptr [rdi], 0x85; add dword ptr [rax], eax; add byte ptr [rcx], dh; ror byte ptr [rcx + rcx*4 + 0x5c], 0x24; sub byte ptr [rcx - 0x77], cl; ret; 
0x000000000042d1a5: ror byte ptr [rdi], 0x85; jl 0x2d1aa; add byte ptr [rax], al; sub dword ptr [rip + 0xb562d], 1; pop rbp; ret; 
0x0000000000492ca2: ror byte ptr [rdi], 0x85; push rdi; or al, 0; add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x000000000045e3f4: ror byte ptr [rdi], 0x85; ret 4; 
0x0000000000465f1c: ror byte ptr [rdi], 0x85; ret; 
0x0000000000498223: ror byte ptr [rdi], 0x94; ret 0x950f; 
0x000000000049ad8d: ror byte ptr [rdi], 0x94; ret 0xb60f; 
0x000000000046dcf8: ror byte ptr [rdi], 0x94; ret; 
0x000000000049eb68: ror byte ptr [rdi], 0x95; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x0000000000459689: ror byte ptr [rdi], 1; adc dword ptr [rdi + rdx - 0x40], edi; ret; 
0x000000000041e0a7: ror byte ptr [rdi], 1; mov dh, 0x11; test dl, dl; jne 0x1e088; ret; 
0x000000000043050f: ror byte ptr [rdi], 1; mov dh, 0x14; add dword ptr [rax + rdi - 0x3e], eax; jne 0x30500; sub rax, 0x10; ret; 
0x0000000000482012: ror byte ptr [rdi], 1; test byte ptr [rcx], ch; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x00000000004393c6: ror byte ptr [rdi], 1; test dword ptr [rax + rax - 0x8b70000], ecx; ret 2; 
0x000000000045cdf5: ror byte ptr [rdi], 5; cmp rax, -0x1000; ja 0x5ce08; ret; 
0x0000000000468043: ror byte ptr [rdi], cl; mov byte ptr [rsi], cl; add al, 0; add bh, dh; ret 0xf800; 
0x00000000004685cb: ror byte ptr [rdi], cl; mov ch, ah; add al, byte ptr [rax]; add bh, dh; ret 0xf800; 
0x00000000004792a1: ror byte ptr [rdi], cl; mov dl, dl; sbb al, 0; add dh, dh; ret 0xf40; 
0x0000000000413a81: ror byte ptr [rdi], cl; test al, dl; add al, 0; add byte ptr [rax - 0x77], cl; ret 0x448b; 
0x0000000000483e1f: ror byte ptr [rdi], cl; test byte ptr [rdx + 0x48000000], bl; bsf eax, edx; shr rax, 2; ret; 
0x000000000048315b: ror byte ptr [rdi], cl; test byte ptr [rsi + 0x48000000], bl; bsf eax, edx; ret; 
0x000000000048202a: ror byte ptr [rdi], cl; test byte ptr [rsi], bl; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x0000000000425714: ror byte ptr [rdi], cl; test ch, dh; add dword ptr [rax], eax; add byte ptr [rdi + rcx - 0x42], cl; ret 0x4a8d; 
0x00000000004897ee: ror byte ptr [rdi], cl; xchg eax, esp; ret 0xb60f; 
0x0000000000481d1c: ror byte ptr [rsi], 1; add byte ptr [rax], al; cmove rax, rdx; ret; 
0x00000000004856ae: ror cl, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000482cda: ror dword ptr [rax + 0x21], 0xce; je 0x82e10; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x000000000048e3bc: ror dword ptr [rax + 0x39], 0xd1; jne 0x8e398; mov eax, dword ptr [rcx]; ret; 
0x000000000042a83e: ror dword ptr [rax + 0xf], 1; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x000000000044e4a9: ror dword ptr [rax - 0x3f], 0xe1; and byte ptr [rax + 9], cl; retf 0xf48; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x0000000000470b8d: ror dword ptr [rax - 0x73], 0x41; adc byte ptr [rdi], cl; xchg eax, ebx; ret 0x3949; 
0x0000000000489a15: ror dword ptr [rax - 0x77], 1; ret 0xd348; 
0x0000000000426815: ror dword ptr [rax - 0x7b], 0xd2; jne 0x26808; ret; 
0x00000000004806bd: ror dword ptr [rax - 0x7b], 0xd2; jne 0x806b0; ret; 
0x000000000044e3f2: ror dword ptr [rax - 0x7d], 0xe0; ror byte ptr [rax - 0x2d], 0xfa; test rdx, rdx; je 0x4e410; bsf rax, rdx; ret; 
0x000000000044e395: ror dword ptr [rax - 0x7d], 0xe0; ror byte ptr [rax - 0x2d], 0xfa; test rdx, rdx; je 0x4e420; bsf rax, rdx; ret; 
0x000000000041db3a: ror dword ptr [rax - 0x7d], 1; ret 0x4001; 
0x00000000004273cb: ror dword ptr [rax - 0x7d], 1; ret 0x4801; 
0x0000000000438b73: ror dword ptr [rax - 0x7d], 1; ret 0x4c20; 
0x0000000000438b93: ror dword ptr [rax - 0x7d], 1; ret 0x4c40; 
0x0000000000438bb3: ror dword ptr [rax - 0x7d], 1; ret 0x4c60; 
0x000000000049ab88: ror dword ptr [rax], 0x83; ret 0x4801; 
0x000000000045a903: ror dword ptr [rbp - 0xb869], cl; dec dword ptr [rax + 0x63]; ret 0xfac1; 
0x00000000004275d5: ror dword ptr [rcx + 0x1b80045], 0; add byte ptr [rax], al; movups xmmword ptr [rbp + 0x38], xmm0; pop rbp; pop r12; ret; 
0x000000000045a7d5: ror dword ptr [rcx + 0xe181d0], 0xfc; add eax, dword ptr [rax]; cmp edx, 0xff; cmove rax, rcx; ret; 
0x0000000000434a0e: ror dword ptr [rcx + rax - 0x3f], 1; movzx eax, byte ptr [rax + rcx + 0x40]; movzx edx, byte ptr [rdx + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x000000000049254e: ror dword ptr [rcx + rcx*4 - 0x40], 1; ret; 
0x000000000049d7b8: ror dword ptr [rcx + rdx - 0x3e], 0x4e; mov dword ptr [rdi + rbx*8 + 8], ecx; add rdx, r8; mov rax, rdx; pop rbx; ret; 
0x000000000045718b: ror dword ptr [rcx], cl; ret 0xe074; 
0x0000000000426e74: ror dword ptr [rdi], 0x11; cmp byte ptr [r11 + 0x5d], bl; pop r12; ret; 
0x000000000042c86a: ror dword ptr [rdi], 0x11; push 0x6e0f4966; ret; 
0x0000000000480d99: ror dword ptr [rdi], 0x11; xor byte ptr [rcx + 0x5d5b7453], cl; pop r12; ret; 
0x00000000004a7f2e: ror dword ptr [rdi], 0x84; add dword ptr [rax], r8d; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000047138a: ror dword ptr [rdi], 0x84; ret 2; 
0x000000000043a758: ror dword ptr [rdi], 0x85; adc byte ptr [rdx], cl; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043ae64: ror dword ptr [rdi], 0x85; add al, 3; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043ac36: ror dword ptr [rdi], 0x85; add eax, 0xc0310000; ret; 
0x000000000043abb6: ror dword ptr [rdi], 0x85; cmpsb byte ptr [rsi], byte ptr [rdi]; add eax, 0xc0310000; ret; 
0x000000000043aef4: ror dword ptr [rdi], 0x85; je 0x3aefb; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043a9eb: ror dword ptr [rdi], 0x85; jno 0x3a9f7; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043aab3: ror dword ptr [rdi], 0x85; mov ch, 6; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043a730: ror dword ptr [rdi], 0x85; sub al, 0xa; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000047c15a: ror dword ptr [rdi], 0x8d; iretd; or eax, dword ptr [rax]; add byte ptr [rcx - 0x77], cl; ret 0xb8; 
0x0000000000488ba4: ror dword ptr [rdi], 0xb6; add dword ptr [rax - 0x7d], ecx; ret 0x8401; 
0x000000000042c899: ror dword ptr [rdi], cl; xchg eax, ebp; ret 0xb60f; 
0x00000000004a150d: ror dword ptr [rdi], cl; xchg eax, esp; ret; 
0x0000000000426814: ror qword ptr [r8 - 0x7b], 0xd2; jne 0x26808; ret; 
0x00000000004806bc: ror qword ptr [r8 - 0x7b], 0xd2; jne 0x806b0; ret; 
0x000000000045ba0e: sahf; add al, 0; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000404c43: sahf; add al, byte ptr [rax]; mov rax, rbx; pop rbx; ret; 
0x0000000000404c7d: sahf; add al, byte ptr [rax]; ret; 
0x000000000044d09e: sahf; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000049e160: sahf; ret 0x3948; 
0x0000000000470fcb: sahf; ret 0x3949; 
0x00000000004a3064: sahf; ret 0xf45; 
0x0000000000401caa: sal al, cl; add byte ptr [rax], al; hlt; nop; endbr64; ret; 
0x000000000049eb72: sal bh, 0xd8; ret; 
0x0000000000433167: sal bh, 1; ret 0x8000; 
0x0000000000433027: sal bh, 1; ret 0xc000; 
0x0000000000432ee7: sal bh, 1; ret 0xe000; 
0x0000000000432da7: sal bh, 1; ret 0xf000; 
0x0000000000432c67: sal bh, 1; ret 0xf800; 
0x0000000000432b27: sal bh, 1; ret 0xfc00; 
0x00000000004329e7: sal bh, 1; ret 0xfe00; 
0x00000000004328a7: sal bh, 1; ret 0xff00; 
0x0000000000432767: sal bh, 1; ret 0xff80; 
0x0000000000432627: sal bh, 1; ret 0xffc0; 
0x00000000004324e7: sal bh, 1; ret 0xffe0; 
0x00000000004323a7: sal bh, 1; ret 0xfff0; 
0x0000000000432267: sal bh, 1; ret 0xfff8; 
0x0000000000432127: sal bh, 1; ret 0xfffc; 
0x0000000000431fe7: sal bh, 1; ret 0xfffe; 
0x00000000004958a4: sal bh, cl; int1; add r8d, eax; mov eax, r8d; ret; 
0x000000000043931f: sal bl, 1; bsf eax, eax; add rax, rdi; vzeroupper; ret; 
0x000000000041ed1b: sal byte ptr [rax + 0x42], 0x4e; add byte ptr [rax + 0x39], cl; ret; 
0x00000000004a79f9: sal byte ptr [rax + 0x48ffffff], 0xc7; ret 0x380; 
0x00000000004151f9: sal byte ptr [rax + rbx + 0xf], 0xb6; ror byte ptr [rax - 0x77], 1; fisttp word ptr [rdi]; mov dh, 0x43; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000403843: sal byte ptr [rax + rbx*2 + 0x31], 0xc0; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004985d5: sal byte ptr [rax + rcx + 0x5b], 0x5d; pop r12; ret; 
0x000000000048b17d: sal byte ptr [rax + rsi*2 + 0x48], 0x89; ret 0x8b48; 
0x000000000042615d: sal byte ptr [rbp + 0x10], cl; sub dword ptr [rip + 0xbeb49], 1; ret; 
0x000000000040209a: sal byte ptr [rbp + 0x13], 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; mov dword ptr [rip + 0xe2228], eax; add rsp, 8; ret; 
0x000000000048fa44: sal byte ptr [rbp + 0x19], 0x48; mov dword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x536f2], 1; ret; 
0x0000000000484632: sal byte ptr [rbp + 0x2b], 0x4c; mov eax, eax; shr rax, 2; vzeroupper; ret; 
0x00000000004834c2: sal byte ptr [rbp + 0x2b], 0x4c; mov eax, eax; vzeroupper; ret; 
0x0000000000484c91: sal byte ptr [rbp + 0x2c], 0x83; imul eax, dword ptr [rcx + rax], 0x48; add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000497d6f: sal byte ptr [rbp + 0x36], 0x83; sub eax, 0x4d29b; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x00000000004391d2: sal byte ptr [rbp + 0x4b], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x000000000049e97b: sal byte ptr [rbp + 0x62], 0xc7; add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x000000000040a42b: sal byte ptr [rbp + 0x72], 0x48; mov eax, 0x4ded80; ret; 
0x000000000042e46b: sal byte ptr [rbp + 0xb], 0xc7; add eax, 0xb68a8; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x0000000000485242: sal byte ptr [rbp + 0xb], cl; ret; 
0x000000000049930a: sal byte ptr [rbp + 3], cl; mov qword ptr [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x000000000045a2a6: sal byte ptr [rbp + 4], cl; mov rax, rdi; ret; 
0x0000000000425198: sal byte ptr [rbp + 5], cl; ret; 
0x0000000000497e47: sal byte ptr [rbp + 6], cl; sub dword ptr [rdi], 1; ret; 
0x000000000040a763: sal byte ptr [rbp + 7], 0x48; mov eax, 0x4e12e0; pop rbp; ret; 
0x000000000040a900: sal byte ptr [rbp + rax - 1], 0xe0; nop dword ptr [rax]; mov eax, 0xffffffff; ret; 
0x000000000044e1a0: sal byte ptr [rbp + rbx - 0xd], 0xf; mov esp, 0xc80148c0; add rax, rdi; vzeroupper; ret; 
0x0000000000483ea0: sal byte ptr [rbp + rcx + 0x48], cl; bsf eax, edx; shr rax, 2; ret; 
0x00000000004841b8: sal byte ptr [rbp + rdx - 0x78], cl; rol dword ptr [rax + 0x1e740fe1], 1; ret; 
0x0000000000458ec0: sal byte ptr [rbp - 0x13], cl; lea rax, [rcx - 1]; ret; 
0x0000000000426818: sal byte ptr [rbp - 0x13], cl; ret; 
0x000000000043348b: sal byte ptr [rbp - 0x1e], 0x31; shr byte ptr [rcx], 0xc8; ret; 
0x00000000004294e6: sal byte ptr [rbp - 0x21], cl; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000041e0ac: sal byte ptr [rbp - 0x27], cl; ret; 
0x000000000043935d: sal byte ptr [rbp - 0x30], 0xc5; std; xlatb; ret; 
0x0000000000439355: sal byte ptr [rbp - 0x38], 0xc5; std; xlatb; ret 0xc085; 
0x000000000044e0fd: sal byte ptr [rbp - 0x50], 0xc5; std; xlatb; ret; 
0x000000000044e0f5: sal byte ptr [rbp - 0x68], 0xc5; std; xlatb; ret 0xc085; 
0x0000000000483d7c: sal byte ptr [rbp - 0xf], cl; ret; 
0x00000000004289b0: sal byte ptr [rbx + 0x25], 1; movzx eax, byte ptr [rax]; ret; 
0x0000000000421b82: sal byte ptr [rbx + rbp*2 + 0x49], 0x2b; and byte ptr [r8 + 1], r9b; ret; 
0x0000000000439282: sal byte ptr [rbx + rbx - 0xd], 0xf; mov esp, 0xf80148c0; add rax, rcx; vzeroupper; ret; 
0x0000000000404c3a: sal byte ptr [rbx + rdx + 0x48], cl; mov dword ptr [rdx + 8], eax; call 0x2ead0; mov rax, rbx; pop rbx; ret; 
0x0000000000482572: sal byte ptr [rcx + 0x48], 3; add byte ptr [r8 - 0x77], r9b; ret 0x14eb; 
0x0000000000402554: sal byte ptr [rcx + rcx - 0x75], 0; add rsp, 8; ret; 
0x000000000044e3fc: sal byte ptr [rcx + rdx + 0x48], cl; bsf eax, edx; ret; 
0x00000000004a00cf: sal byte ptr [rcx - 0x73], cl; dec dword ptr [rbp + r9*4 + 0x74]; ret; 
0x000000000040a75e: sal byte ptr [rcx], 0xc0; test r8d, r8d; jne 0xa76d; mov rax, 0x4e12e0; pop rbp; ret; 
0x000000000044e0b3: sal byte ptr [rcx], 0xd2; lea rax, [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044e0d3: sal byte ptr [rcx], 0xd2; lea rax, [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044e111: sal byte ptr [rcx], 0xd2; lea rax, [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044e093: sal byte ptr [rcx], 0xd2; lea rax, [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000042930e: sal byte ptr [rcx], 1; ror byte ptr [rax + 0x39], 0xfa; setae al; ret; 
0x000000000045a8b5: sal byte ptr [rcx], 1; shl byte ptr [rip + 0x3fffc00], cl; div ecx; mov eax, eax; ret; 
0x0000000000485aa6: sal byte ptr [rdi + 0x48], 0x89; ret; 
0x000000000048f0da: sal byte ptr [rdi + 0xb], 0x48; add esp, 8; ret; 
0x000000000049833c: sal byte ptr [rdi - 0x76b7fffc], 0x10; add rsp, 8; ret; 
0x00000000004831cb: sal byte ptr [rdx + 0x48], cl; bsf eax, edx; ret; 
0x0000000000483e8b: sal byte ptr [rdx + 0x48], cl; bsf eax, edx; shr rax, 2; ret; 
0x0000000000401011: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000498336: sal byte ptr [rdx + rcx + 0x48], 0x8d; adc eax, 0x4b7c0; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000401d4d: sal byte ptr [rdx + rcx - 0x41], 0xd0; or byte ptr [rbp], cl; call 0xa5cc0; mov byte ptr [rip + 0xe251f], 1; pop rbp; ret; 
0x000000000044f423: sal byte ptr [rdx + rdx + 0x48], 0xff; ret 0x2288; 
0x000000000041dfab: sal byte ptr [rdx + rsi*2 + 0x48], 0xc7; ret 0xfff0; 
0x000000000043afdf: sal byte ptr [rdx - 0x10f0992e], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043b100: sal byte ptr [rdx - 0x10f09930], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x000000000040775e: sal byte ptr [rip - 0x763d4d52], 0xc2; shr edx, 0x10; xor eax, edx; ret; 
0x000000000040a91f: sal byte ptr [rsi + rax - 1], 0xe0; nop dword ptr [rax]; xor eax, eax; ret; 
0x000000000046095d: sal byte ptr [rsi + rbp + 0x48], 0x8b; push rax; or byte ptr [rcx + 0x3e895], cl; add dh, dh; ret 0x7402; 
0x0000000000497e96: sal byte ptr [rsi + rcx + 0x48], 0x8d; add eax, 0x4d1a0; mov qword ptr [rip + 0x4d181], rax; add rsp, 8; ret; 
0x000000000044e39f: sal byte ptr [rsi + rdi*2 + 0x48], cl; bsf eax, edx; ret; 
0x0000000000439087: sal byte ptr [rsi + rdx + 0xf], 0xbc; ror byte ptr [rax + 1], 0xf8; add rax, rcx; ret; 
0x000000000045919f: sal byte ptr [rsi + rdx*8 + 0x48], cl; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000004a06f3: sal byte ptr [rsp + 0x48], 1; ret 0xb70f; 
0x0000000000402641: sal byte ptr [rsp + rcx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x000000000048f711: sal byte ptr [rsp + rdi + 0x48], 0x89; ret; 
0x00000000004879cc: sal dh, 1; ret 0xf08; 
0x000000000048e3bf: sal dword ptr [rbp - 0x2a], 1; mov eax, dword ptr [rcx]; ret; 
0x00000000004a80a6: sal dword ptr [rcx + rcx*4 + 0x48], 0x89; ret 0xc148; 
0x000000000043af3f: sal dword ptr [rdx - 0x10f0992d], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043b07f: sal dword ptr [rdx - 0x10f0992f], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000436386: sal dword ptr [rsi + 0xb], cl; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x00000000004595e7: sal ebx, 1; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000483fb7: sal edi, 1; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x000000000043af3e: sal qword ptr [rdx - 0x10f0992d], cl; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043b07e: sal qword ptr [rdx - 0x10f0992f], 1; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000412c70: sar bh, 0xff; dec dword ptr [rax - 0x39]; ret; 
0x000000000042c573: sar bh, 0xff; inc dword ptr [rbp + 0x31]; shl byte ptr [rdi + rax*8], 0xc; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x000000000048fa67: sar bh, 0xff; lcall [rbx + 0x64]; mov eax, dword ptr [rax]; ret; 
0x000000000045be37: sar bh, 0xff; push rdi; fsub dword ptr [rcx + rcx*4 + 1]; or rax, 0xffffffffffffffff; ret; 
0x000000000045bedb: sar bh, 0xff; push rdi; fsub dword ptr [rcx + rcx*4 + 2]; mov eax, 0xffffffff; ret; 
0x000000000045c113: sar bh, 0xff; push rdi; fsub dword ptr [rcx + rcx*4 + 2]; mov rax, -1; ret; 
0x000000000049e905: sar bh, 0xff; ret; 
0x000000000049e8e2: sar bh, 0xff; sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000049ea0f: sar bh, 0xff; sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x0000000000498f62: sar byte ptr [r8 + 0xd9], 1; syscall; cmp rax, -0x1000; ja 0x98f78; ret; 
0x000000000042979b: sar byte ptr [rax + 0x10], 0x48; cmovne eax, edx; mov qword ptr [rip + 0xbb58c], rax; ret; 
0x0000000000408eea: sar byte ptr [rax + 0x13], 0x48; add esp, 8; mov rax, r12; pop rbp; pop r12; ret; 
0x0000000000403048: sar byte ptr [rax + 0x19], 0x89; ret; 
0x000000000042340b: sar byte ptr [rax + 0x29], 0x48; mov dword ptr [rbx + 0x90], eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x00000000004a79d0: sar byte ptr [rax + 0x48ffffff], 0xc7; ret 0x1c0; 
0x0000000000408f4a: sar byte ptr [rax + 0xb], 0x48; add esp, 0x18; pop rbp; pop r12; ret; 
0x0000000000498f63: sar byte ptr [rax + 0xd9], 1; syscall; cmp rax, -0x1000; ja 0x98f78; ret; 
0x00000000004025ec: sar byte ptr [rax - 0x11], 0x44; cmove esp, eax; mov eax, r12d; pop r12; pop r13; ret; 
0x000000000040270f: sar byte ptr [rax - 0x16], 0x45; test eax, eax; je 0x2720; pop rbp; ret; 
0x0000000000402ea1: sar byte ptr [rax - 0x16], 0x45; test eax, eax; je 0x2eb0; pop rbp; ret; 
0x000000000045cf22: sar byte ptr [rax - 0x4f], 0x48; add esp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x0000000000402f21: sar byte ptr [rax - 0x7d], 0x44; cmove esp, eax; mov eax, r12d; pop r12; pop r13; ret; 
0x000000000040dbec: sar byte ptr [rax], 0x4c; cmovne esp, eax; mov rax, r12; pop r12; ret; 
0x0000000000431acc: sar byte ptr [rbp + 2], 1; add byte ptr [rax - 0x73], cl; add eax, 0x27e19; cmove rax, rdx; ret; 
0x000000000048ddd0: sar byte ptr [rbp + rbp*8 - 0x15], cl; ret; 
0x00000000004215fc: sar byte ptr [rbx], 0x4e; add byte ptr [rax - 0x39], cl; ret; 
0x00000000004949f3: sar byte ptr [rbx], 0x4e; add byte ptr [rax - 0x39], cl; shr dword ptr [rax + 0x42], 0x4e; add byte ptr [rax - 0x77], cl; fimul dword ptr [rax + 0x29]; ret 0x2948; 
0x0000000000475134: sar byte ptr [rbx], 0x4e; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x0000000000407fa4: sar byte ptr [rcx - 0x47], 0x48; add esp, 8; pop rbx; pop rbp; ret; 
0x00000000004077d3: sar byte ptr [rcx], 0xd1; je 0x77e0; ret; 
0x0000000000403378: sar byte ptr [rdi + 0x74], 4; ret; 
0x0000000000431d2c: sar byte ptr [rdi + 0xf480001], 0x44; ret 0x66c3; 
0x0000000000497e59: sar byte ptr [rdx + 1], cl; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x000000000044db09: sar byte ptr [rdx], 0x48; lea eax, [rdi + rax]; cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x00000000004987ea: sar byte ptr [rdx], cl; cmp edx, ecx; jle 0x98890; ret; 
0x000000000046da19: sar byte ptr [rsi + 0x24], 0x83; call 0x8496323; pop rbx; ret; 
0x0000000000445e29: sar dword ptr [rax + rcx*2 + 0x11], 1; imul edi, ebp, 0x487cd162; adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000445e30: sar dword ptr [rax + rcx*2 + 0x11], 1; jno 0x45e34; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000445e37: sar dword ptr [rax + rcx*2 + 0x11], 1; jns 0x45e3c; ret; 
0x000000000045a832: sar dword ptr [rax], 1; and ch, 0xf0; pop rbx; cmovne rax, rdx; ret; 
0x00000000004987e1: sar dword ptr [rcx], 0xc2; jg 0x987f4; pcmpistri xmm2, xmm2, 0x3a; cmp edx, ecx; jle 0x98890; ret; 
0x0000000000407d26: sar dword ptr [rcx], 0xd6; setb al; ret; 
0x0000000000409ec3: sar dword ptr [rcx], 1; ret 0x870f; 
0x0000000000409fb3: sar dword ptr [rcx], 1; ret 0xd872; 
0x0000000000493d85: sar dword ptr [rcx], cl; ret 0x4d74; 
0x0000000000459b0d: sar dword ptr [rsi + 0x7f], 0x23; vzeroupper; ret; 
0x00000000004038e5: sar eax, 0x1f; and eax, 0xffffff83; ret; 
0x000000000040aad8: sar eax, 0x1f; and eax, 0xffffffdf; ret; 
0x0000000000403968: sar eax, 0x1f; and eax, 0xfffffffe; add rsp, 0x18; ret; 
0x00000000004a39bc: sar eax, 0x3f; and eax, 1; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000049edac: sar eax, 3; pop rbx; pop rbp; pop r12; ret; 
0x0000000000439472: sar eax, cl; movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000048168c: sar ecx, 2; lea eax, [rcx - 1]; ret; 
0x000000000041ccfa: sar edi, 1; inc dword ptr [rbx - 0x7af0fe08]; ret 0xfff2; 
0x0000000000481736: sar edx, 2; sub eax, edx; ret; 
0x0000000000439478: sar edx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000044e3f8: sar edx, cl; test rdx, rdx; je 0x4e410; bsf rax, rdx; ret; 
0x000000000044e39b: sar edx, cl; test rdx, rdx; je 0x4e420; bsf rax, rdx; ret; 
0x00000000004831c7: sar edx, cl; test rdx, rdx; je 0x831f0; bsf rax, rdx; ret; 
0x0000000000483157: sar edx, cl; test rdx, rdx; je 0x83200; bsf rax, rdx; ret; 
0x0000000000483e87: sar edx, cl; test rdx, rdx; je 0x83eb0; bsf rax, rdx; shr rax, 2; ret; 
0x0000000000483e1b: sar edx, cl; test rdx, rdx; je 0x83ec0; bsf rax, rdx; shr rax, 2; ret; 
0x0000000000459fc7: sar esi, 1; jg 0x59fef; vzeroupper; ret; 
0x000000000045a152: sar esi, 1; jg 0x5a17a; vzeroupper; ret; 
0x00000000004a39bb: sar rax, 0x3f; and eax, 1; mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000049edab: sar rax, 3; pop rbx; pop rbp; pop r12; ret; 
0x0000000000439471: sar rax, cl; movzx eax, al; sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000048168b: sar rcx, 2; lea eax, [rcx - 1]; ret; 
0x0000000000481735: sar rdx, 2; sub eax, edx; ret; 
0x0000000000439477: sar rdx, cl; movzx edx, dl; sub eax, edx; ret; 
0x000000000044e3f7: sar rdx, cl; test rdx, rdx; je 0x4e410; bsf rax, rdx; ret; 
0x000000000044e39a: sar rdx, cl; test rdx, rdx; je 0x4e420; bsf rax, rdx; ret; 
0x00000000004831c6: sar rdx, cl; test rdx, rdx; je 0x831f0; bsf rax, rdx; ret; 
0x0000000000483156: sar rdx, cl; test rdx, rdx; je 0x83200; bsf rax, rdx; ret; 
0x0000000000483e86: sar rdx, cl; test rdx, rdx; je 0x83eb0; bsf rax, rdx; shr rax, 2; ret; 
0x0000000000483e1a: sar rdx, cl; test rdx, rdx; je 0x83ec0; bsf rax, rdx; shr rax, 2; ret; 
0x000000000040b5c3: sbb ah, al; or dword ptr [rax], eax; ret; 
0x000000000045d145: sbb al, 0; add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5d154; ret; 
0x00000000004792a5: sbb al, 0; add dh, dh; ret 0xf40; 
0x00000000004017c4: sbb al, 0; test al, al; jne 0x17cb; ret; 
0x00000000004088a3: sbb al, 0x48; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000045fb07: sbb al, 0x48; cmp edx, dword ptr [rdi + 0x18]; ja 0x5fb24; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000455fd9: sbb al, 0x48; lea edi, [rdi + 0x1c]; jne 0x564f0; ret; 
0x0000000000430b61: sbb al, 0xb; add al, ch; xlatb; ret; 
0x000000000040b553: sbb al, 0xe0; or dword ptr [rax], eax; ret; 
0x0000000000426190: sbb al, 0xeb; or eax, dword ptr [rax]; syscall; ret; 
0x000000000049892c: sbb al, 0xfc; dec dword ptr [rax + 0x21]; ret 0x8d48; 
0x000000000040b58b: sbb al, ah; or dword ptr [rax], eax; ret; 
0x000000000040391a: sbb al, al; call 0x5cf30; add rsp, 8; sar eax, 0x1f; and eax, 0xffffff83; ret; 
0x0000000000407572: sbb bh, al; and byte ptr [rbx], al; add byte ptr [rax], al; add cl, ch; ret; 
0x000000000041f6ed: sbb bh, dh; dec dword ptr [rcx - 0x77]; ret; 
0x000000000045629a: sbb bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov byte ptr [rdi + 0x18], cl; ret; 
0x0000000000456cda: sbb bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x000000000045560a: sbb bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000456c9b: sbb bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004555cb: sbb bl, dh; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000456299: sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov byte ptr [rdi + 0x18], cl; ret; 
0x0000000000456cd9: sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x0000000000455609: sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000456c9a: sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x00000000004555ca: sbb bl, r14b; movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x00000000004077ec: sbb byte ptr [r13 - 0x18], r14b; mov eax, dword ptr [rsi + 0x14]; cmp dword ptr [rdi + 0x14], eax; sete al; ret; 
0x000000000042686d: sbb byte ptr [r14 + 0xf], r12b; insd dword ptr [rdi], dx; ror byte ptr [rax - 0x77], 0x57; sbb byte ptr [rax - 0x77], cl; movups xmmword ptr [rdi + 8], xmm0; ret; 
0x0000000000423474: sbb byte ptr [r15], cl; adc dword ptr [rbx + 0x28], eax; pop rbx; ret; 
0x00000000004927d1: sbb byte ptr [r8 + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b4c; 
0x00000000004296ab: sbb byte ptr [r8 + 0x39], cl; ret; 
0x0000000000491848: sbb byte ptr [r8 + 0x5a], bl; pop rbx; ret; 
0x000000000049821f: sbb byte ptr [r8 - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x950f; 
0x00000000004a6797: sbb byte ptr [r9 - 0x75], r9b; push rbp; adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000409282: sbb byte ptr [r9 - 0x77], cl; fisttp qword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x84; lock add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000455f76: sbb byte ptr [r9 - 0x7d], r9b; call 0x7f92a799; sbb cl, byte ptr [rdi]; test dword ptr [rdx + 5], ebp; add byte ptr [rax], al; ret; 
0x00000000004927d2: sbb byte ptr [rax + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b4c; 
0x000000000041e0a4: sbb byte ptr [rax + 0x31], cl; ror byte ptr [rdi], 1; mov dh, 0x11; test dl, dl; jne 0x1e088; ret; 
0x00000000004296ac: sbb byte ptr [rax + 0x39], cl; ret; 
0x000000000045fb73: sbb byte ptr [rax + 0x3b], cl; sbb byte ptr [rdi + 0x12], sil; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x0000000000491849: sbb byte ptr [rax + 0x5a], bl; pop rbx; ret; 
0x00000000004a390e: sbb byte ptr [rax + r8], r8b; cmp byte ptr [rdx + rsi], 8; jne 0x1755; mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x000000000048bd53: sbb byte ptr [rax + rax], al; add byte ptr [rcx - 0x77], cl; ret; 
0x00000000004a390f: sbb byte ptr [rax + rax], al; cmp byte ptr [rdx + rsi], 8; jne 0x1755; mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x0000000000455f23: sbb byte ptr [rax - 0x73], cl; jg 0x55f40; jne 0x564f0; ret; 
0x00000000004a445a: sbb byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; ret; 
0x0000000000404ece: sbb byte ptr [rax - 0x77], cl; fcomp dword ptr [rbx + 0x5d]; ret; 
0x0000000000426876: sbb byte ptr [rax - 0x77], cl; movups xmmword ptr [rdi + 8], xmm0; ret; 
0x0000000000412e4a: sbb byte ptr [rax - 0x77], cl; ret 0x2548; 
0x0000000000412405: sbb byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000004a4a18: sbb byte ptr [rax - 0x77], cl; ret 0xe783; 
0x0000000000407c3b: sbb byte ptr [rax - 0x7b], cl; push qword ptr [rbp - 0x19]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000498220: sbb byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x950f; 
0x000000000040a91c: sbb byte ptr [rax - 0x7b], cl; sal byte ptr [rsi + rax - 1], 0xe0; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000422580: sbb byte ptr [rax - 1], bh; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000045be25: sbb byte ptr [rax], al; add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5be34; ret; 
0x0000000000426158: sbb byte ptr [rax], al; add byte ptr [rax], al; test edx, edx; jne 0x26170; sub dword ptr [rip + 0xbeb49], 1; ret; 
0x0000000000497e42: sbb byte ptr [rax], al; add byte ptr [rax], al; test edx, edx; jne 0x97e50; sub dword ptr [rdi], 1; ret; 
0x00000000004769d5: sbb byte ptr [rax], al; add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x00000000004a7dcc: sbb byte ptr [rax], al; je 0xa7db8; xor eax, eax; add rsp, 0x10; pop rbx; ret; 
0x0000000000402968: sbb byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x00000000004077ed: sbb byte ptr [rbp - 0x18], dh; mov eax, dword ptr [rsi + 0x14]; cmp dword ptr [rdi + 0x14], eax; sete al; ret; 
0x0000000000408619: sbb byte ptr [rbx + 0x41], bl; pop rsp; ret; 
0x00000000004a48e2: sbb byte ptr [rbx + 0x5d], bl; mov eax, r8d; ret; 
0x000000000042910c: sbb byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x0000000000421f09: sbb byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000409ef5: sbb byte ptr [rbx + r9*4 + 0x2c], r9b; ret 0x8b49; 
0x0000000000409ef6: sbb byte ptr [rbx + rcx*4 + 0x2c], cl; ret 0x8b49; 
0x000000000042853b: sbb byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x000000000041da08: sbb byte ptr [rcx + 1], cl; ret 0x894c; 
0x000000000042a846: sbb byte ptr [rcx + 1], cl; ret; 
0x0000000000418df4: sbb byte ptr [rcx + rcx*4 + 4], cl; and al, 0xe8; ret 0xffd1; 
0x0000000000499529: sbb byte ptr [rcx + rcx*4 - 0x18], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000040b1c1: sbb byte ptr [rcx + rcx*4 - 0x20], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000047ee8f: sbb byte ptr [rcx + rcx*4 - 0x20], cl; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x00000000004724ab: sbb byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x000000000041efac: sbb byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x0000000000430364: sbb byte ptr [rcx - 0x17f7dbac], cl; test al, 0xff; dec dword ptr [rbx + 0x9082454]; ret 0x37e9; 
0x00000000004a6798: sbb byte ptr [rcx - 0x75], cl; push rbp; adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000409283: sbb byte ptr [rcx - 0x77], cl; fisttp qword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x84; lock add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000041da1d: sbb byte ptr [rcx - 0x77], cl; ret 0x1574; 
0x0000000000455f77: sbb byte ptr [rcx - 0x7d], cl; call 0x7f92a799; sbb cl, byte ptr [rdi]; test dword ptr [rdx + 5], ebp; add byte ptr [rax], al; ret; 
0x000000000041e1b4: sbb byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x00000000004077ea: sbb byte ptr [rcx], bh; sbb byte ptr [r13 - 0x18], r14b; mov eax, dword ptr [rsi + 0x14]; cmp dword ptr [rdi + 0x14], eax; sete al; ret; 
0x0000000000422553: sbb byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; pop r13; ret; 
0x00000000004077e9: sbb byte ptr [rcx], r15b; sbb byte ptr [r13 - 0x18], r14b; mov eax, dword ptr [rsi + 0x14]; cmp dword ptr [rdi + 0x14], eax; sete al; ret; 
0x000000000045fb77: sbb byte ptr [rdi + 0x12], dh; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x000000000045fb76: sbb byte ptr [rdi + 0x12], sil; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x000000000045fb0b: sbb byte ptr [rdi + 0x16], dh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000040aac8: sbb byte ptr [rdi + 0xd], dh; mov dword ptr [rdi], 0x75; xor eax, eax; ret; 
0x000000000045fb99: sbb byte ptr [rdi - 0x10], bh; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x000000000045fb31: sbb byte ptr [rdi - 0x10], bh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x000000000045fb98: sbb byte ptr [rdi - 0x10], dil; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x0000000000423475: sbb byte ptr [rdi], cl; adc dword ptr [rbx + 0x28], eax; pop rbx; ret; 
0x000000000049b285: sbb byte ptr [rdx], al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000413be6: sbb byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ret 0x8941; 
0x000000000042686e: sbb byte ptr [rsi + 0xf], ah; insd dword ptr [rdi], dx; ror byte ptr [rax - 0x77], 0x57; sbb byte ptr [rax - 0x77], cl; movups xmmword ptr [rdi + 8], xmm0; ret; 
0x0000000000455f7b: sbb cl, byte ptr [rax - 0x73]; jg 0x55f9a; jne 0x564f0; ret; 
0x000000000046ec82: sbb cl, byte ptr [rax - 0x77]; ret 0x2548; 
0x0000000000462353: sbb cl, byte ptr [rax - 0x77]; ret 0x8948; 
0x000000000049e805: sbb cl, byte ptr [rax - 0x7b]; div byte ptr [rbp + 0x25]; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x0000000000455f7f: sbb cl, byte ptr [rdi]; test dword ptr [rdx + 5], ebp; add byte ptr [rax], al; ret; 
0x000000000044b7dd: sbb cl, byte ptr [rdi]; xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044d43a: sbb cl, byte ptr [rdi]; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x000000000044cc5a: sbb cl, byte ptr [rdi]; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x000000000044d04a: sbb cl, byte ptr [rdi]; xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c86a: sbb cl, byte ptr [rdi]; xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c33d: sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044bb1d: sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x000000000044b2fd: sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x000000000044ca09: sbb cl, byte ptr [rdi]; xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044be5d: sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044b63d: sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044ae1d: sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000044bffd: sbb cl, byte ptr [rdi]; xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x000000000044cefa: sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c71a: sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044d82a: sbb cl, byte ptr [rdi]; xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044b15d: sbb cl, byte ptr [rdi]; xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044b293: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bf93: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bab3: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044cdfb: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044d72b: sbb cl, byte ptr [rdi]; xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044c2d3: sbb cl, byte ptr [rdi]; xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044b5d3: sbb cl, byte ptr [rdi]; xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x000000000044b0f3: sbb cl, byte ptr [rdi]; xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bdf3: sbb cl, byte ptr [rdi]; xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x000000000044cf4b: sbb cl, byte ptr [rdi]; xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044c76b: sbb cl, byte ptr [rdi]; xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004a54a0: sbb dh, dh; ret 0xf01; 
0x0000000000431994: sbb dl, al; add byte ptr [rax], al; lea rdx, [rip + 0x118b1]; cmovne rax, rdx; ret; 
0x0000000000455f46: sbb dword ptr [rax - 0x73], ecx; jg 0x55f64; jne 0x564f0; ret; 
0x000000000049e896: sbb dword ptr [rax - 0x7b], ecx; div byte ptr [rbp + 0x2c]; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000045f8a8: sbb dword ptr [rax], eax; add byte ptr [rax], al; syscall; cmp rax, -0xfff; jae 0x5f8b7; ret; 
0x0000000000476780: sbb dword ptr [rax], eax; add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000048f39b: sbb dword ptr [rip - 0x74b70009], 0x560ca35; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000458b97: sbb eax, -1; ret; 
0x000000000040534e: sbb eax, 0x10c48348; pop rbp; ret; 
0x0000000000456005: sbb eax, 0x1d7f8d48; jne 0x564f0; ret; 
0x000000000045d701: sbb eax, 0x1f0f3ceb; add byte ptr [rax - 0x73], cl; push rbx; or byte ptr [rax - 0x7d], cl; ret; 
0x00000000004a6715: sbb eax, 0x3e576; test rbx, rbx; jne 0xa6700; pop rbx; ret; 
0x000000000048b692: sbb eax, 0x4000003; ret; 
0x000000000048b5e2: sbb eax, 0x4000003; xor eax, eax; ret; 
0x000000000041ea82: sbb eax, 0x441f0f; add byte ptr [rbx + rcx*4 + 0x63], cl; or byte ptr [rax - 0x7d], cl; ret; 
0x0000000000442cd5: sbb eax, 0x46f00ff2; or eax, 0xef00ff2; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000442cd0: sbb eax, 0x477f0ff3; sbb eax, 0x46f00ff2; or eax, 0xef00ff2; movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000486afe: sbb eax, 0x48d4890; int 0; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000456009: sbb eax, 0x4e0850f; add byte ptr [rax], al; ret; 
0x00000000004883a3: sbb eax, 0x6136e801; cli; dec dword ptr [rax - 0x77]; ret 0x8548; 
0x0000000000488ced: sbb eax, 0x89000003; ret 0xe8c0; 
0x000000000044e1a2: sbb eax, 0xc0bc0ff3; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x00000000004348c2: sbb eax, 0xcfbc0ff3; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000403083: sbb eax, 0xdf078; mov eax, 1; pop rbx; mov dword ptr [rip + 0xdf070], 1; ret; 
0x000000000040223b: sbb eax, 0xe2090; xor eax, eax; pop rbx; ret; 
0x0000000000425177: sbb eax, 0xe6ebe074; nop dword ptr [rax]; xor eax, eax; ret; 
0x000000000042d4bb: sbb eax, 0xe8000880; in al, dx; ret 0xffff; 
0x000000000041b2b5: sbb eax, dword ptr [rax]; add byte ptr [rbx - 0x7bf0fc08], al; xchg eax, esi; sbb eax, dword ptr [rax]; add byte ptr [rbx - 0x7bf0fe08], al; ret; 
0x000000000041b2be: sbb eax, dword ptr [rax]; add byte ptr [rbx - 0x7bf0fe08], al; ret; 
0x0000000000408855: sbb eax, eax; and eax, 0xffffffea; ret; 
0x000000000049c96a: sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00000000004398d7: sbb eax, eax; or eax, 1; ret; 
0x00000000004a4363: sbb eax, eax; ret; 
0x0000000000458b95: sbb eax, eax; sbb eax, -1; ret; 
0x000000000040b593: sbb eax, esp; or dword ptr [rax], eax; ret; 
0x0000000000455fa9: sbb ecx, dword ptr [rax - 0x73]; jg 0x55fc9; jne 0x564f0; ret; 
0x00000000004982c1: sbb edi, dword ptr [rbx - 7]; dec dword ptr [rax - 0x77]; ret; 
0x000000000041f5c9: sbb edi, esi; dec dword ptr [rax - 0x77]; ret 0x8948; 
0x000000000049e675: sbb edx, ebx; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000000439284: sbb esi, ebx; bsf eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000000430e7a: sbb esi, esi; add eax, 0xb3f62; lea rax, [rip + 0x1cc37]; lea rdx, [rip + 0x26290]; cmovne rax, rdx; ret; 
0x000000000040b5a3: sbb esp, eax; or dword ptr [rax], eax; ret; 
0x000000000049e674: sbb r10, r11; mov qword ptr [rdi + 8], r10; mov eax, ecx; adc eax, eax; ret; 
0x0000000000438a32: scasb al, byte ptr [rdi]; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044d48e: scasb al, byte ptr [rdi]; add eax, 0x83480000; ret 0xe910; 
0x0000000000407e1e: scasb al, byte ptr [rdi]; insb byte ptr [rdi], dx; add al, byte ptr [rax]; nop word ptr [rax + rax]; ret; 
0x0000000000407760: scasb al, byte ptr [rdi]; mov dl, 0xc2; mov edx, eax; shr edx, 0x10; xor eax, edx; ret; 
0x0000000000413a2e: scasb al, byte ptr [rdi]; ret; 
0x000000000044d58d: scasd eax, dword ptr [rdi]; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000046214e: scasd eax, dword ptr [rdi]; add rsp, 0x1d0; pop rbx; pop rbp; pop r12; ret; 
0x000000000048f0d0: scasd eax, dword ptr [rdi]; nop dword ptr [rax]; cmp rax, r8; ja 0x8f0e8; add rsp, 8; ret; 
0x0000000000421890: scasd eax, dword ptr [rdi]; ret 0x2948; 
0x000000000045ab05: scasd eax, dword ptr [rdi]; ret 0x518d; 
0x000000000048e509: scasd eax, dword ptr [rdi]; ret 0x8348; 
0x000000000042a841: scasd eax, dword ptr [rdi]; ret 0x8948; 
0x000000000045ab19: scasd eax, dword ptr [rdi]; ret 0xcfe9; 
0x000000000045ab0b: scasd eax, dword ptr [rdi]; ret 0xda89; 
0x0000000000421a50: scasd eax, dword ptr [rdi]; ret; 
0x0000000000407d1f: seta al; cmp ecx, 1; ja 0x7ce8; cmp esi, edx; setb al; ret; 
0x00000000004017c1: seta al; sbb al, 0; test al, al; jne 0x17cb; ret; 
0x0000000000429314: setae al; ret; 
0x0000000000407d29: setb al; ret; 
0x0000000000411cf7: sete ah; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x00000000004077f6: sete al; ret; 
0x000000000046ff7a: sete dh; xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x0000000000411cf6: sete r12b; mov rax, r12; pop rbx; pop rbp; pop r12; ret; 
0x000000000046ff79: sete sil; xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x000000000049eb69: setne al; add rsp, 8; movzx eax, al; neg eax; ret; 
0x0000000000484422: shl byte ptr [rax + 0x48], 1; clc; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e652: shl byte ptr [rax + 0x48], 1; clc; sub rax, rdx; vzeroupper; ret; 
0x0000000000439374: shl byte ptr [rax + 0x48], 1; clc; vzeroupper; ret; 
0x00000000004a7a4b: shl byte ptr [rax + 0x48ffb213], 0xc7; ret 0x140; 
0x00000000004a7a22: shl byte ptr [rax + 0x48ffb213], 0xc7; ret 0x400; 
0x00000000004a7a74: shl byte ptr [rax + 0x48ffb213], 0xc7; ret 0x940; 
0x00000000004a7a9d: shl byte ptr [rax + 0x48ffb213], 0xc7; ret 0x9a0; 
0x00000000004a7ac6: shl byte ptr [rax + 0x48ffb213], 0xc7; ret 0xa20; 
0x00000000004a7aef: shl byte ptr [rax + 0x48ffb213], 0xc7; ret 0xae0; 
0x00000000004a7b18: shl byte ptr [rax + 0x48ffb213], 0xc7; ret 0xb60; 
0x00000000004a7b41: shl byte ptr [rax + 0x48ffb213], 0xc7; ret 0xbc0; 
0x00000000004a7981: shl byte ptr [rax + 0x48ffb213], 0xc7; ret 0xc80; 
0x00000000004a79aa: shl byte ptr [rax + 0x48ffffff], 0xc7; ret 0xf040; 
0x00000000004843b6: shl byte ptr [rax], 0x48; add eax, edi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e5e6: shl byte ptr [rax], 0x48; add eax, edi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439336: shl byte ptr [rax], 0x48; add eax, edi; vzeroupper; ret; 
0x000000000041266a: shl byte ptr [rax], cl; or eax, 0x3d8b4c00; ret; 
0x000000000042c579: shl byte ptr [rdi + rax*8], 0xc; add byte ptr [rax], al; add byte ptr [rcx + rcx*4 - 0x40], cl; ret; 
0x000000000045a8b7: shl byte ptr [rip + 0x3fffc00], cl; div ecx; mov eax, eax; ret; 
0x0000000000458ddf: shl byte ptr [rsi + 0x44], 0xf; out dx, eax; ret 0xf66; 
0x000000000048a0da: shl byte ptr [rsi + 0x48], 0xf; outsb dx, byte ptr [rsi]; shl dword ptr [rsi + 0xf], cl; insb byte ptr [rdi], dx; ret 0x290f; 
0x0000000000457187: shl byte ptr [rsi + 0xf], 0xd7; ror dword ptr [rcx], cl; ret 0xe074; 
0x000000000044dcc5: shl byte ptr [rsi + 0xf], 0xeb; ret 0xf66; 
0x000000000043b0eb: shl byte ptr [rsi + 0xf], 0xef; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x5173; 
0x000000000049e965: shl byte ptr [rsi + 0xf], 1; insb byte ptr [rdi], dx; ret 0x110f; 
0x0000000000490869: shl byte ptr [rsi + 0xf], 1; insb byte ptr [rdi], dx; ret 0xf41; 
0x000000000043b102: shl byte ptr [rsi + 0xf], 1; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x0000000000482d77: shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x0000000000482d66: shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x000000000043afe1: shl byte ptr [rsi + 0xf], cl; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000485251: shl dword ptr [rbx], 0x4e; adc byte ptr [rax - 0x73], cl; or al, 0x8e; add eax, dword ptr [rcx + rdx]; ret; 
0x0000000000490864: shl dword ptr [rsi + 0x48], 0xf; outsb dx, byte ptr [rsi]; shl byte ptr [rsi + 0xf], 1; insb byte ptr [rdi], dx; ret 0xf41; 
0x000000000042239e: shl dword ptr [rsi + 0xf], 0x6c; ror byte ptr [rdi], 0x11; add ah, byte ptr [rsi + 0xf]; outsd dx, dword ptr [rsi]; ret 0x34e9; 
0x000000000045717f: shl dword ptr [rsi + 0xf], 0x74; fisub dword ptr [rsi + 0xf]; xlatb; shl byte ptr [rsi + 0xf], 0xd7; ror dword ptr [rcx], cl; ret 0xe074; 
0x0000000000482d62: shl dword ptr [rsi + 0xf], 0xd7; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x0000000000458c3f: shl dword ptr [rsi + 0xf], 0xda; ret; 
0x000000000043b066: shl dword ptr [rsi + 0xf], 0xef; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043b11d: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x2373; 
0x000000000043b106: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x000000000043b0ef: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x5173; 
0x0000000000439bab: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000043b081: shl dword ptr [rsi + 0xf], 1; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004390cc: shl dword ptr [rsi + 0xf], 1; xlatb; ret 0xc085; 
0x000000000048a0df: shl dword ptr [rsi + 0xf], cl; insb byte ptr [rdi], dx; ret 0x290f; 
0x000000000042926c: shl dword ptr [rsi + 0xf], cl; insb byte ptr [rdi], dx; ret 0x4d83; 
0x000000000043af41: shl dword ptr [rsi + 0xf], cl; out dx, eax; shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000048f686: shl eax, 4; mov rax, qword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000462177: shl eax, cl; ret; 
0x000000000044e4ab: shl ecx, 0x20; or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x0000000000462172: shl ecx, 3; pop r12; shl eax, cl; ret; 
0x000000000048f6d0: shl ecx, 4; cmp r8, qword ptr [rcx + rsi + 0x10]; jae 0x8f685; xor eax, eax; ret; 
0x000000000049d0ec: shl ecx, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x000000000049d06b: shl ecx, cl; mov qword ptr [rdi - 8], r9; ret; 
0x000000000049d03a: shl ecx, cl; mov qword ptr [rdi], r9; ret; 
0x000000000044de4a: shl edx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x000000000041094e: shl edx, 4; add rax, rdx; lea rdx, [rip + 0xa2b45]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rdx; ret; 
0x000000000045fab6: shl edx, 4; mov rdx, qword ptr [rcx + rdx]; lea rcx, [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000049e843: shl esi, cl; mov qword ptr [rdi], rsi; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000049d0eb: shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x000000000049d06a: shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x000000000049d039: shl r9, cl; mov qword ptr [rdi], r9; ret; 
0x000000000048f685: shl rax, 4; mov rax, qword ptr [rdx + rax]; mov edx, 0; cmp rax, -1; cmove rax, rdx; ret; 
0x000000000044e4aa: shl rcx, 0x20; or rdx, rcx; bsf rdx, rdx; add rax, rdx; sub rax, rdi; ret; 
0x000000000048f6cf: shl rcx, 4; cmp r8, qword ptr [rcx + rsi + 0x10]; jae 0x8f685; xor eax, eax; ret; 
0x000000000044de49: shl rdx, 0x30; or rax, rdx; bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x000000000041094d: shl rdx, 4; add rax, rdx; lea rdx, [rip + 0xa2b45]; movsxd rax, dword ptr [rcx + rax*4]; add rax, rdx; ret; 
0x000000000045fab5: shl rdx, 4; mov rdx, qword ptr [rcx + rdx]; lea rcx, [rip - 0x64]; mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x000000000049e842: shl rsi, cl; mov qword ptr [rdi], rsi; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000049d0e4: shld eax, ecx, cl; mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x000000000049d064: shld eax, ecx, cl; mov qword ptr [rdi], r8; shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x000000000049d0e3: shld r8, r9, cl; mov qword ptr [rdi - 8], r8; shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x000000000049d063: shld r8, r9, cl; mov qword ptr [rdi], r8; shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x0000000000403676: shr al, 0x54; ret 5; 
0x000000000045fa54: shr al, 0xa6; xor eax, 0xecebfffc; nop dword ptr [rax]; endbr64; ret; 
0x0000000000403962: shr al, 0xc8; xchg eax, ebp; add eax, 0x1ff8c100; and eax, 0xfffffffe; add rsp, 0x18; ret; 
0x000000000049f76b: shr al, cl; scasd eax, dword ptr [rdi]; ret; 
0x0000000000469e20: shr bl, 1; ret 0x1f0f; 
0x0000000000486afc: shr bl, cl; sbb eax, 0x48d4890; int 0; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000043348f: shr byte ptr [rcx], 0xc8; ret; 
0x000000000046ceb8: shr byte ptr [rcx], cl; ret; 
0x000000000040cd1b: shr dl, 1; or eax, dword ptr [rax]; ret; 
0x00000000004949f9: shr dword ptr [rax + 0x42], 0x4e; add byte ptr [rax - 0x77], cl; fimul dword ptr [rax + 0x29]; ret 0x2948; 
0x00000000004571ce: shr dword ptr [rax - 0x267af0e0], 1; add dword ptr [rax], eax; add dh, dh; ret 0x7520; 
0x00000000004755e1: shr dword ptr [rcx], cl; ret; 
0x000000000045a7bb: shr eax, 0xe; and eax, 0x3fc00; ret; 
0x0000000000483e2b: shr eax, 2; ret; 
0x00000000004842e3: shr eax, 2; vzeroupper; ret; 
0x00000000004293b0: shr eax, 4; lea rdx, [rax + 1]; mov qword ptr [rip + 0xb93d2], rdx; ret; 
0x000000000045a806: shr eax, 6; and eax, 0x3fffc00; ret; 
0x000000000042ce6f: shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x000000000049d1fc: shr ecx, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x000000000049d185: shr ecx, cl; mov qword ptr [rdi + 8], r9; ret; 
0x000000000049d154: shr ecx, cl; mov qword ptr [rdi], r9; ret; 
0x00000000004a2db0: shr ecx, cl; ret 0xfffc; 
0x0000000000407765: shr edx, 0x10; xor eax, edx; ret; 
0x000000000041e0a2: shr edx, 0x18; xor rax, rdx; movzx edx, byte ptr [rcx]; test dl, dl; jne 0x1e088; ret; 
0x000000000049d1fb: shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x000000000049d184: shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x000000000049d153: shr r9, cl; mov qword ptr [rdi], r9; ret; 
0x0000000000483e2a: shr rax, 2; ret; 
0x00000000004842e2: shr rax, 2; vzeroupper; ret; 
0x00000000004293af: shr rax, 4; lea rdx, [rax + 1]; mov qword ptr [rip + 0xb93d2], rdx; ret; 
0x000000000041e0a1: shr rdx, 0x18; xor rax, rdx; movzx edx, byte ptr [rcx]; test dl, dl; jne 0x1e088; ret; 
0x000000000049d1f4: shrd eax, ecx, cl; mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x000000000049d17e: shrd eax, ecx, cl; mov qword ptr [rdi], r8; shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x000000000049d1f3: shrd r8, r9, cl; mov qword ptr [rdi + 8], r8; shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x000000000049d17d: shrd r8, r9, cl; mov qword ptr [rdi], r8; shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x0000000000457075: shufps xmm0, xmmword ptr [rdi + 2], 0; lea rax, [rdi + 2]; vzeroupper; ret; 
0x000000000044e965: shufps xmm0, xmmword ptr [rdi + 2], 0; vzeroupper; ret; 
0x000000000040b672: sldt word ptr [rax]; cmovns eax, edx; add rsp, 8; ret; 
0x00000000004587bf: stc; adc dword ptr [rdi], ecx; test byte ptr [rbx], bl; add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x000000000049c084: stc; add cl, byte ptr [rdi]; xchg eax, esp; ret 0xfb83; 
0x0000000000407d23: stc; add dword ptr [rdi - 0x3f], esi; cmp esi, edx; setb al; ret; 
0x000000000048f75d: stc; dec dword ptr [rax - 0x77]; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x00000000004907fc: stc; dec dword ptr [rax - 0x77]; ret; 
0x000000000048f276: stc; dec dword ptr [rcx + rcx*4 - 0x20]; pop rbx; pop rbp; pop r12; ret; 
0x00000000004570cf: stc; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000043d9d8: stc; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d9d2: stc; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 7], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004570c7: stc; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e997: stc; mov qword ptr [rdi], rcx; mov qword ptr [rdi + rdx - 7], r9; vzeroupper; ret; 
0x00000000004348ef: stc; movzx eax, byte ptr [rax + rdi + 0x20]; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000043490f: stc; movzx eax, byte ptr [rax + rdi + 0x40]; movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000446338: stc; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000044e99f: stc; vzeroupper; ret; 
0x0000000000439957: stc; xlatb; ret 0xff2d; 
0x000000000043104f: std; cmp al, byte ptr [rax]; add byte ptr [rax - 0x73], cl; adc eax, 0x5356; cmovne rax, rdx; ret; 
0x00000000004212d9: std; dec dword ptr [rax - 0x75]; cmp byte ptr [r8 - 0x75], cl; push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x0000000000425684: std; dec dword ptr [rax - 0x77]; ret; 
0x00000000004916b2: std; jbe 0x916c0; ret; 
0x000000000046da0c: std; je 0x6da28; pop rbx; ret; 
0x0000000000430fb7: std; lcall [rdx + 0x31]; rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x00000000004570ab: std; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000043d1f3: std; mov cx, word ptr [rsi - 2]; mov word ptr [rdi - 3], dx; mov word ptr [rdi - 2], cx; ret; 
0x00000000004570a7: std; mov dword ptr [rdi + rdx - 3], ecx; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e987: std; mov dword ptr [rdi + rdx - 3], ecx; vzeroupper; ret; 
0x000000000043d1fb: std; mov word ptr [rdi - 2], cx; ret; 
0x000000000045957c: std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x0000000000459fc5: std; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x0000000000459eae: std; vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7; vzeroupper; ret; 
0x0000000000446068: std; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000445e2e: std; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x00000000004592b6: std; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000044e98b: std; vzeroupper; ret; 
0x0000000000439359: std; xlatb; ret 0xc085; 
0x0000000000439797: std; xlatb; ret 0xe883; 
0x0000000000439361: std; xlatb; ret; 
0x0000000000482f18: std; xlatb; retf 0xfdc5; xlatb; ret; 
0x0000000000482f74: std; xlatb; rol ch, cl; std; xlatb; ret; 
0x0000000000482afe: std; xlatb; rol dword ptr [rbp + 0x311b75c0], 0xc0; vzeroupper; ret; 
0x0000000000439351: std; xlatb; rol dword ptr [rbp - 0x3a378a40], 0xfd; xlatb; ret 0xc085; 
0x000000000044e0f1: std; xlatb; rol dword ptr [rbp - 0x3a678a40], 0xfd; xlatb; ret 0xc085; 
0x000000000044ea49: std; xlatb; ror byte ptr [rcx - 0x7d], cl; ret 0x4d20; 
0x00000000004a6645: sti; dec dword ptr [rax - 0x7d]; ret; 
0x00000000004781ca: sti; dec dword ptr [rcx - 0x77]; ret; 
0x000000000043d5d8: sti; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000043d5d2: sti; mov ecx, dword ptr [rsi - 4]; mov dword ptr [rdi - 5], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000489771: sti; ret; 
0x000000000044632a: sti; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000045a2b8: stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x0000000000428906: stosb byte ptr [rdi], al; ret; 
0x0000000000408e75: stosb byte ptr [rdi], al; xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000483274: stosd dword ptr [rdi], eax; fimul dword ptr [rax + 0xf]; mov esp, 0xd00148d2; sub rax, rdi; ret; 
0x0000000000483f34: stosd dword ptr [rdi], eax; fimul dword ptr [rax + 0xf]; mov esp, 0xd00148d2; sub rax, rdi; shr rax, 2; ret; 
0x000000000042ce74: stosd dword ptr [rdi], eax; pop rbp; ret; 
0x00000000004831d5: stosd dword ptr [rdi], eax; sar rdx, cl; test rdx, rdx; je 0x831f0; bsf rax, rdx; ret; 
0x000000000048f6d9: stosd dword ptr [rdi], eax; xor eax, eax; ret; 
0x000000000042ce73: stosq qword ptr [rdi], rax; pop rbp; ret; 
0x0000000000475606: sub al, 0; add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x0000000000496655: sub al, 0x29; ret 0x8341; 
0x000000000048f140: sub al, 0x63; add eax, 0xc0894c00; ret; 
0x000000000045a4f6: sub al, 0x72; add cl, byte ptr [rax + 0x77f8c50f]; ret; 
0x0000000000484c93: sub al, 0x83; imul eax, dword ptr [rcx + rax], 0x48; add esp, 8; pop rbx; pop rbp; ret; 
0x000000000043a733: sub al, 0xa; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000049e89b: sub al, 0xc7; add al, byte ptr [rax]; add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x0000000000482ce0: sub al, 1; add byte ptr [rax], al; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x00000000004756d2: sub al, byte ptr [rax]; add byte ptr [rcx - 0x75], cl; test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x0000000000439af5: sub al, ch; std; xlatb; ret; 
0x00000000004028b3: sub bl, ch; ret; 
0x0000000000421b7e: sub byte ptr [r13 - 0x7b], r8b; sal byte ptr [rbx + rbp*2 + 0x49], 0x2b; and byte ptr [r8 + 1], r9b; ret; 
0x0000000000472492: sub byte ptr [r15 + rcx - 0x4a], r8b; ret; 
0x0000000000487764: sub byte ptr [r8 + 0x39], r9b; ret 0x870f; 
0x00000000004927d5: sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b4c; 
0x000000000045fb13: sub byte ptr [r9], r8b; ret; 
0x0000000000487765: sub byte ptr [rax + 0x39], cl; ret 0x870f; 
0x000000000046608b: sub byte ptr [rax + 0x39], cl; ret 0xf48; 
0x00000000004684a5: sub byte ptr [rax - 0x77], cl; fucomip st(0); ret 0xff8e; 
0x000000000047fadc: sub byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000047bc09: sub byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000409074: sub byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x000000000041e1a8: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x1e1d4; mov eax, r8d; add rsp, 0x118; ret; 
0x000000000041f944: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x1f952; add rsp, 0xd8; ret; 
0x0000000000402af5: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x2b8f; add rsp, 0xc8; ret; 
0x0000000000402ca5: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x2d3f; add rsp, 0xc8; ret; 
0x000000000042d668: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x2d674; add rsp, 0x10; pop rbp; ret; 
0x0000000000404fe6: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x4ff1; add rsp, 0x48; ret; 
0x0000000000405349: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x536c; add rsp, 0x10; pop rbp; ret; 
0x000000000045aedf: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5af04; add rsp, 0x20; pop rbx; ret; 
0x000000000045be87: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5bea1; add rsp, 0x28; ret; 
0x000000000045c262: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5c305; add rsp, 0x68; ret; 
0x000000000045cbb7: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5cc03; add rsp, 0x68; ret; 
0x000000000045cc46: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5cc93; add rsp, 0x18; ret; 
0x000000000045ccfe: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5cd4b; add rsp, 0x58; ret; 
0x000000000045cd9c: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5cdeb; add rsp, 0x58; ret; 
0x000000000045cfda: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5cfe5; add rsp, 0x28; ret; 
0x000000000045f9dd: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x5f9eb; add rsp, 0xd8; ret; 
0x000000000046fec1: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x6fecc; add rsp, 0x18; ret; 
0x000000000047013c: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x70184; mov eax, r9d; add rsp, 0x148; ret; 
0x0000000000470234: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x702d6; add rsp, 0x98; ret; 
0x0000000000471f74: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x71f82; add rsp, 0xd8; ret; 
0x000000000048502f: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x8503d; movzx eax, al; add rsp, 0x58; ret; 
0x00000000004850e9: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x85114; mov eax, r9d; add rsp, 0x38; ret; 
0x0000000000408b08: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x8b13; add rsp, 0x18; ret; 
0x00000000004918ca: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x918d6; add rsp, 0x20; pop rbx; ret; 
0x00000000004919c5: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x919f3; add rsp, 0x38; ret; 
0x0000000000491a91: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x91ac4; add rsp, 0x58; ret; 
0x0000000000491c03: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x91c44; add rsp, 0x68; ret; 
0x0000000000491f21: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x91f54; add rsp, 0x58; ret; 
0x0000000000492711: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x92735; add rsp, 0x38; ret; 
0x00000000004984b8: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x984c3; add rsp, 0x28; ret; 
0x00000000004985a6: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x985b1; add rsp, 0x38; ret; 
0x000000000049e58e: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x9e615; leave; ret; 
0x000000000049eb21: sub byte ptr [rax], al; add byte ptr [rax], al; jne 0x9eb2c; add rsp, 0x38; ret; 
0x00000000004a4b5d: sub byte ptr [rbp + 1], cl; ret 0x394c; 
0x0000000000413afa: sub byte ptr [rbp + 9], al; ret; 
0x0000000000421b7f: sub byte ptr [rbp - 0x7b], al; sal byte ptr [rbx + rbp*2 + 0x49], 0x2b; and byte ptr [r8 + 1], r9b; ret; 
0x000000000045b4f3: sub byte ptr [rbx + 0x5d], bl; pop r12; pop r13; ret; 
0x00000000004718bf: sub byte ptr [rbx + 0x736b92d], al; add byte ptr [rcx], al; xor eax, eax; add rsp, 8; ret; 
0x000000000049c928: sub byte ptr [rbx - 0x1b], dh; mov eax, 1; ret; 
0x000000000049c927: sub byte ptr [rbx - 0x1b], sil; mov eax, 1; ret; 
0x00000000004927d6: sub byte ptr [rcx + rcx*4 + 4], cl; ret 0x8b4c; 
0x000000000041fbbc: sub byte ptr [rcx + rcx*4 - 0x40], al; pop rbx; pop rbp; ret; 
0x000000000046724b: sub byte ptr [rcx - 0x77], cl; ret; 
0x000000000045fb14: sub byte ptr [rcx], al; ret; 
0x0000000000472493: sub byte ptr [rdi + rcx - 0x4a], al; ret; 
0x000000000048ad60: sub byte ptr [rdi], cl; xchg eax, ebp; ret; 
0x0000000000423d4b: sub cl, byte ptr [rax + 1]; ret 0x4866; 
0x000000000040ccc3: sub cl, cl; or dword ptr [rax], eax; ret; 
0x0000000000472d19: sub dh, al; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000042a6b3: sub dword ptr [rax + rax], esi; add byte ptr [rax - 0x77], cl; add eax, 0xb810a; lea rax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x0000000000484c94: sub dword ptr [rbx + 4], 1; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000499601: sub dword ptr [rbx], eax; add byte ptr [rax - 0x73], cl; cmp eax, 0x329f5; call 0x11c50; endbr64; ret; 
0x0000000000452a03: sub dword ptr [rbx], eax; add byte ptr [rax], al; ret; 
0x0000000000408612: sub dword ptr [rcx], eax; add byte ptr [rax], al; add rsp, 0x18; pop rbx; pop r12; ret; 
0x000000000041fbb6: sub dword ptr [rdi], 1; add rsp, 0x28; mov eax, r8d; pop rbx; pop rbp; ret; 
0x00000000004205a0: sub dword ptr [rdi], 1; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000420d5a: sub dword ptr [rdi], 1; mov eax, r8d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000497e4a: sub dword ptr [rdi], 1; ret; 
0x0000000000459735: sub dword ptr [rdi], ecx; adc dword ptr [rcx - 0x10], esi; movups xmmword ptr [rcx - 0x20], xmm7; movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x0000000000497d72: sub dword ptr [rip + 0x4d29b], 1; mov eax, r8d; pop rbx; ret; 
0x00000000004718c0: sub dword ptr [rip + 0x736b9], 1; xor eax, eax; add rsp, 8; ret; 
0x0000000000430950: sub dword ptr [rip + 0xb1e89], 1; add rsp, 8; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000042d1ac: sub dword ptr [rip + 0xb562d], 1; pop rbp; ret; 
0x000000000042e35f: sub dword ptr [rip + 0xb69ba], 1; pop rbx; ret; 
0x0000000000426160: sub dword ptr [rip + 0xbeb49], 1; ret; 
0x000000000041f0e2: sub dword ptr [rip + 0xc67c7], 1; add rsp, 0x10; mov eax, r8d; pop rbx; ret; 
0x000000000041efa2: sub dword ptr [rip + 0xc6907], 1; add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000043af16: sub dword ptr [rip - 0xcfffffe], 0xf; outsd dx, dword ptr [rsi]; push rdi; ret; 
0x000000000041f0e1: sub dword ptr ds:[rip + 0xc67c7], 1; add rsp, 0x10; mov eax, r8d; pop rbx; ret; 
0x000000000041efa1: sub dword ptr ds:[rip + 0xc6907], 1; add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000420d59: sub dword ptr ss:[rdi], 1; mov eax, r8d; pop rbx; pop rbp; pop r12; ret; 
0x0000000000497d71: sub dword ptr ss:[rip + 0x4d29b], 1; mov eax, r8d; pop rbx; ret; 
0x0000000000439887: sub eax, -1; jne 0x39890; vzeroupper; ret; 
0x000000000042d1ae: sub eax, 0x1000b56; pop rbp; ret; 
0x00000000004565ea: sub eax, 0x10; jb 0x55b99; movdqu xmmword ptr [rdi + 0x30], xmm7; ret; 
0x00000000004527e2: sub eax, 0x10; lea rcx, [rdx + 0x10]; jne 0x52d30; ret; 
0x0000000000455e19: sub eax, 0x10; lea rdi, [rdi + 0x10]; jne 0x564f0; ret; 
0x000000000043051a: sub eax, 0x10; ret; 
0x0000000000455e3c: sub eax, 0x11; lea rdi, [rdi + 0x11]; jne 0x564f0; ret; 
0x00000000004293ac: sub eax, 0x11; shr rax, 4; lea rdx, [rax + 1]; mov qword ptr [rip + 0xb93d2], rdx; ret; 
0x0000000000455e61: sub eax, 0x12; lea rdi, [rdi + 0x12]; jne 0x564f0; ret; 
0x0000000000455e7f: sub eax, 0x13; lea rdi, [rdi + 0x13]; jne 0x564f0; ret; 
0x0000000000455e9f: sub eax, 0x14; lea rdi, [rdi + 0x14]; jne 0x564f0; ret; 
0x0000000000455ec2: sub eax, 0x15; lea rdi, [rdi + 0x15]; jne 0x564f0; ret; 
0x0000000000455ee1: sub eax, 0x16; lea rdi, [rdi + 0x16]; jne 0x564f0; ret; 
0x0000000000455f01: sub eax, 0x17; lea rdi, [rdi + 0x17]; jne 0x564f0; ret; 
0x0000000000455f21: sub eax, 0x18; lea rdi, [rdi + 0x18]; jne 0x564f0; ret; 
0x0000000000455f44: sub eax, 0x19; lea rdi, [rdi + 0x19]; jne 0x564f0; ret; 
0x0000000000455f79: sub eax, 0x1a; lea rdi, [rdi + 0x1a]; jne 0x564f0; ret; 
0x0000000000455fa7: sub eax, 0x1b; lea rdi, [rdi + 0x1b]; jne 0x564f0; ret; 
0x0000000000455fd7: sub eax, 0x1c; lea rdi, [rdi + 0x1c]; jne 0x564f0; ret; 
0x0000000000456003: sub eax, 0x1d; lea rdi, [rdi + 0x1d]; jne 0x564f0; ret; 
0x0000000000456033: sub eax, 0x1e; lea rdi, [rdi + 0x1e]; jne 0x564f0; ret; 
0x0000000000456063: sub eax, 0x1f; lea rdi, [rdi + 0x1f]; jne 0x564f0; ret; 
0x000000000044f24d: sub eax, 0x20; jb 0x4ee65; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vzeroupper; ret; 
0x0000000000456093: sub eax, 0x20; lea rdi, [rdi + 0x20]; jne 0x564f0; ret; 
0x00000000004912e7: sub eax, 0x3349646c; add byte ptr [rax + 9], cl; ret 0x4475; 
0x000000000045c196: sub eax, 0x48c78944; mov dword ptr [rsp + 8], eax; call 0x818f0; mov rax, qword ptr [rsp + 8]; add rsp, 0x28; ret; 
0x0000000000497d73: sub eax, 0x4d29b; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x0000000000491a96: sub eax, 0x58c48348; ret; 
0x000000000044c40f: sub eax, 0x8b0006e9; or al, 0x8a; mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000452ae0: sub eax, 0xa; lea rcx, [rdx + 0xa]; jne 0x52d30; ret; 
0x0000000000455d5f: sub eax, 0xa; lea rdi, [rdi + 0xa]; jne 0x564f0; ret; 
0x0000000000452b00: sub eax, 0xb; lea rcx, [rdx + 0xb]; jne 0x52d30; ret; 
0x0000000000455d7d: sub eax, 0xb; lea rdi, [rdi + 0xb]; jne 0x564f0; ret; 
0x0000000000452b20: sub eax, 0xc; lea rcx, [rdx + 0xc]; jne 0x52d30; ret; 
0x0000000000455d9d: sub eax, 0xc; lea rdi, [rdi + 0xc]; jne 0x564f0; ret; 
0x0000000000452b42: sub eax, 0xd; lea rcx, [rdx + 0xd]; jne 0x52d30; ret; 
0x0000000000455dbf: sub eax, 0xd; lea rdi, [rdi + 0xd]; jne 0x564f0; ret; 
0x0000000000452b62: sub eax, 0xe; lea rcx, [rdx + 0xe]; jne 0x52d30; ret; 
0x0000000000455ddf: sub eax, 0xe; lea rdi, [rdi + 0xe]; jne 0x564f0; ret; 
0x000000000042c47f: sub eax, 0xf6000003; ret 0xf01; 
0x0000000000452b82: sub eax, 0xf; lea rcx, [rdx + 0xf]; jne 0x52d30; ret; 
0x0000000000455dff: sub eax, 0xf; lea rdi, [rdi + 0xf]; jne 0x564f0; ret; 
0x000000000043997f: sub eax, 0xffff; jne 0x39890; ret; 
0x0000000000407d30: sub eax, 1; cmp eax, 6; ja 0x7d14; mov eax, 1; ret; 
0x00000000004529d8: sub eax, 1; lea rcx, [rdx + 1]; jne 0x52d30; ret; 
0x000000000044ed19: sub eax, 1; lea rdi, [rdi + 1]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c33: sub eax, 1; lea rdi, [rdi + 1]; jne 0x564f0; ret; 
0x000000000044ef30: sub eax, 1; lea rdi, [rdi + rdx + 1]; jne 0x4f150; vzeroupper; ret; 
0x000000000046da04: sub eax, 1; mov dword ptr [rbx + 8], eax; cmp eax, -3; je 0x6da28; pop rbx; ret; 
0x000000000046da1c: sub eax, 1; mov dword ptr [rdx + 8], eax; pop rbx; ret; 
0x0000000000427a6b: sub eax, 1; ret; 
0x00000000004529fa: sub eax, 2; lea rcx, [rdx + 2]; jne 0x52d30; ret; 
0x000000000044eec7: sub eax, 2; lea rdi, [rdi + 2]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c57: sub eax, 2; lea rdi, [rdi + 2]; jne 0x564f0; ret; 
0x0000000000452a20: sub eax, 3; lea rcx, [rdx + 3]; jne 0x52d30; ret; 
0x000000000044eeeb: sub eax, 3; lea rdi, [rdi + 3]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c7a: sub eax, 3; lea rdi, [rdi + 3]; jne 0x564f0; ret; 
0x0000000000452a38: sub eax, 4; lea rcx, [rdx + 4]; jne 0x52d30; ret; 
0x000000000044ef05: sub eax, 4; lea rdi, [rdi + 4]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c95: sub eax, 4; lea rdi, [rdi + 4]; jne 0x564f0; ret; 
0x0000000000452a5e: sub eax, 5; lea rcx, [rdx + 5]; jne 0x52d30; ret; 
0x0000000000455cb8: sub eax, 5; lea rdi, [rdi + 5]; jne 0x564f0; ret; 
0x0000000000452a80: sub eax, 6; lea rcx, [rdx + 6]; jne 0x52d30; ret; 
0x0000000000455cdd: sub eax, 6; lea rdi, [rdi + 6]; jne 0x564f0; ret; 
0x0000000000452a9e: sub eax, 7; lea rcx, [rdx + 7]; jne 0x52d30; ret; 
0x0000000000455cfb: sub eax, 7; lea rdi, [rdi + 7]; jne 0x564f0; ret; 
0x000000000045277a: sub eax, 8; lea rcx, [rdx + 8]; jne 0x52d30; ret; 
0x0000000000455d17: sub eax, 8; lea rdi, [rdi + 8]; jne 0x564f0; ret; 
0x0000000000452ac0: sub eax, 9; lea rcx, [rdx + 9]; jne 0x52d30; ret; 
0x0000000000455d3a: sub eax, 9; lea rdi, [rdi + 9]; jne 0x564f0; ret; 
0x00000000004916fa: sub eax, dword ptr [0]; ret; 
0x0000000000411f03: sub eax, dword ptr [rbx + 8]; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000472cc9: sub eax, dword ptr [rcx + 0xf]; mov dh, 0x46; or al, 0x83; ret; 
0x000000000045ade0: sub eax, dword ptr [rcx + r8*4]; je 0x5adc8; ret; 
0x000000000045ade1: sub eax, dword ptr [rcx + rax*4]; je 0x5adc8; ret; 
0x00000000004292c2: sub eax, dword ptr [rdi + 0x18]; ret; 
0x0000000000428517: sub eax, dword ptr [rsi + 0x10]; ret; 
0x000000000049ea13: sub eax, eax; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x0000000000490db6: sub eax, eax; ret; 
0x00000000004398d3: sub eax, ecx; je 0x398e0; sbb eax, eax; or eax, 1; ret; 
0x000000000049e8e5: sub eax, ecx; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x000000000049e9cd: sub eax, ecx; movhps xmm0, qword ptr [rsp - 0x18]; movups xmmword ptr [rdi], xmm0; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x00000000004331cc: sub eax, ecx; ret; 
0x000000000049e840: sub eax, ecx; shl rsi, cl; mov qword ptr [rdi], rsi; mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x0000000000427a69: sub eax, ecx; sub eax, 1; ret; 
0x0000000000434a4f: sub eax, ecx; vzeroupper; ret; 
0x000000000042ce66: sub eax, edi; lea ecx, [r8 + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x000000000044e4b9: sub eax, edi; ret; 
0x0000000000483f3e: sub eax, edi; shr rax, 2; ret; 
0x000000000043050e: sub eax, edx; movzx edx, byte ptr [rcx + rax]; cmp dl, r8b; jne 0x30500; sub rax, 0x10; ret; 
0x0000000000424781: sub eax, edx; pop rbp; pop r12; ret; 
0x000000000042853f: sub eax, edx; ret; 
0x00000000004842e0: sub eax, edx; shr rax, 2; vzeroupper; ret; 
0x000000000044ef2d: sub eax, edx; sub r8, 1; lea rdi, [rdi + rdx + 1]; jne 0x4f150; vzeroupper; ret; 
0x0000000000434752: sub eax, edx; vzeroupper; ret; 
0x000000000049ea12: sub eax, r8d; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x0000000000490db5: sub eax, r8d; ret; 
0x000000000049e9cc: sub eax, r9d; movhps xmm0, qword ptr [rsp - 0x18]; movups xmmword ptr [rdi], xmm0; mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000048f75b: sub ebp, 0x8948fff9; or byte ptr [r8 - 0x77], cl; ret 0x8548; 
0x0000000000497c17: sub ebx, dword ptr [rbx + 0x5d]; pop r12; pop r13; ret; 
0x0000000000436385: sub ebx, edx; jbe 0x36394; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000437af5: sub ebx, edx; jbe 0x37b04; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000438ad5: sub ebx, edx; jbe 0x38ae4; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x000000000049c922: sub ecx, dword ptr [rax + 0x10]; cmp rcx, qword ptr [rax + 0x28]; jae 0x9c910; mov eax, 1; ret; 
0x000000000049d822: sub ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000455cc1: sub ecx, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000484634: sub ecx, dword ptr [rcx + rcx*4 - 0x40]; shr rax, 2; vzeroupper; ret; 
0x00000000004834c4: sub ecx, dword ptr [rcx + rcx*4 - 0x40]; vzeroupper; ret; 
0x0000000000410958: sub ecx, dword ptr [rdx]; add byte ptr [rax + 0x63], cl; add al, 0x81; add rax, rdx; ret; 
0x0000000000481689: sub ecx, eax; sar rcx, 2; lea eax, [rcx - 1]; ret; 
0x00000000004304ae: sub edx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x0000000000428548: sub edx, dword ptr [rax + 0x10]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000428539: sub edx, dword ptr [rax + 0x18]; mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000481732: sub edx, dword ptr [rcx + 0x10]; sar rdx, 2; sub eax, edx; ret; 
0x0000000000481744: sub edx, dword ptr [rcx + 8]; sar rdx, 2; sub eax, edx; ret; 
0x000000000042477c: sub edx, dword ptr [rdi + 8]; pop rbx; sub rax, rdx; pop rbp; pop r12; ret; 
0x000000000048266d: sub edx, eax; jbe 0x82910; add rax, rdi; add rax, rcx; ret; 
0x00000000004828d4: sub edx, eax; jbe 0x82910; add rax, rdi; ret; 
0x00000000004828e4: sub edx, eax; jbe 0x82910; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004828f4: sub edx, eax; jbe 0x82910; lea rax, [rdi + rax + 0x20]; ret; 
0x0000000000482904: sub edx, eax; jbe 0x82910; lea rax, [rdi + rax + 0x30]; ret; 
0x00000000004989cd: sub edx, eax; jbe 0x98c70; add rax, rdi; add rax, rcx; ret; 
0x0000000000498c34: sub edx, eax; jbe 0x98c70; add rax, rdi; ret; 
0x0000000000498c44: sub edx, eax; jbe 0x98c70; lea rax, [rdi + rax + 0x10]; ret; 
0x0000000000498c54: sub edx, eax; jbe 0x98c70; lea rax, [rdi + rax + 0x20]; ret; 
0x0000000000498c64: sub edx, eax; jbe 0x98c70; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000459168: sub edx, esi; cmp edx, ecx; jle 0x59184; movsxd rax, ecx; ret; 
0x00000000004a8165: sub esp, 8; add rsp, 8; ret; 
0x0000000000464cf9: sub esp, 8; call 0x646e0; or dword ptr [rip + 0x80134], 2; add rsp, 8; ret; 
0x000000000048b5cf: sub esp, 8; call qword ptr [rip + 0x57ba8]; xor eax, eax; add rsp, 8; ret; 
0x000000000041fbb5: sub qword ptr [rdi], 1; add rsp, 0x28; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000436384: sub r11, rdx; jbe 0x36394; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000437af4: sub r11, rdx; jbe 0x37b04; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000438ad4: sub r11, rdx; jbe 0x38ae4; movzx ecx, byte ptr [rsi + rdx]; movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x00000000004565e9: sub r8, 0x10; jb 0x55b99; movdqu xmmword ptr [rdi + 0x30], xmm7; ret; 
0x00000000004527e1: sub r8, 0x10; lea rcx, [rdx + 0x10]; jne 0x52d30; ret; 
0x0000000000455e18: sub r8, 0x10; lea rdi, [rdi + 0x10]; jne 0x564f0; ret; 
0x0000000000455e3b: sub r8, 0x11; lea rdi, [rdi + 0x11]; jne 0x564f0; ret; 
0x0000000000455e60: sub r8, 0x12; lea rdi, [rdi + 0x12]; jne 0x564f0; ret; 
0x0000000000455e7e: sub r8, 0x13; lea rdi, [rdi + 0x13]; jne 0x564f0; ret; 
0x0000000000455e9e: sub r8, 0x14; lea rdi, [rdi + 0x14]; jne 0x564f0; ret; 
0x0000000000455ec1: sub r8, 0x15; lea rdi, [rdi + 0x15]; jne 0x564f0; ret; 
0x0000000000455ee0: sub r8, 0x16; lea rdi, [rdi + 0x16]; jne 0x564f0; ret; 
0x0000000000455f00: sub r8, 0x17; lea rdi, [rdi + 0x17]; jne 0x564f0; ret; 
0x0000000000455f20: sub r8, 0x18; lea rdi, [rdi + 0x18]; jne 0x564f0; ret; 
0x0000000000455f43: sub r8, 0x19; lea rdi, [rdi + 0x19]; jne 0x564f0; ret; 
0x0000000000455f78: sub r8, 0x1a; lea rdi, [rdi + 0x1a]; jne 0x564f0; ret; 
0x0000000000455fa6: sub r8, 0x1b; lea rdi, [rdi + 0x1b]; jne 0x564f0; ret; 
0x0000000000455fd6: sub r8, 0x1c; lea rdi, [rdi + 0x1c]; jne 0x564f0; ret; 
0x0000000000456002: sub r8, 0x1d; lea rdi, [rdi + 0x1d]; jne 0x564f0; ret; 
0x0000000000456032: sub r8, 0x1e; lea rdi, [rdi + 0x1e]; jne 0x564f0; ret; 
0x0000000000456062: sub r8, 0x1f; lea rdi, [rdi + 0x1f]; jne 0x564f0; ret; 
0x000000000044f24c: sub r8, 0x20; jb 0x4ee65; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vzeroupper; ret; 
0x0000000000456092: sub r8, 0x20; lea rdi, [rdi + 0x20]; jne 0x564f0; ret; 
0x0000000000452adf: sub r8, 0xa; lea rcx, [rdx + 0xa]; jne 0x52d30; ret; 
0x0000000000455d5e: sub r8, 0xa; lea rdi, [rdi + 0xa]; jne 0x564f0; ret; 
0x0000000000452aff: sub r8, 0xb; lea rcx, [rdx + 0xb]; jne 0x52d30; ret; 
0x0000000000455d7c: sub r8, 0xb; lea rdi, [rdi + 0xb]; jne 0x564f0; ret; 
0x0000000000452b1f: sub r8, 0xc; lea rcx, [rdx + 0xc]; jne 0x52d30; ret; 
0x0000000000455d9c: sub r8, 0xc; lea rdi, [rdi + 0xc]; jne 0x564f0; ret; 
0x0000000000452b41: sub r8, 0xd; lea rcx, [rdx + 0xd]; jne 0x52d30; ret; 
0x0000000000455dbe: sub r8, 0xd; lea rdi, [rdi + 0xd]; jne 0x564f0; ret; 
0x0000000000452b61: sub r8, 0xe; lea rcx, [rdx + 0xe]; jne 0x52d30; ret; 
0x0000000000455dde: sub r8, 0xe; lea rdi, [rdi + 0xe]; jne 0x564f0; ret; 
0x0000000000452b81: sub r8, 0xf; lea rcx, [rdx + 0xf]; jne 0x52d30; ret; 
0x0000000000455dfe: sub r8, 0xf; lea rdi, [rdi + 0xf]; jne 0x564f0; ret; 
0x00000000004529d7: sub r8, 1; lea rcx, [rdx + 1]; jne 0x52d30; ret; 
0x000000000044ed18: sub r8, 1; lea rdi, [rdi + 1]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c32: sub r8, 1; lea rdi, [rdi + 1]; jne 0x564f0; ret; 
0x000000000044ef2f: sub r8, 1; lea rdi, [rdi + rdx + 1]; jne 0x4f150; vzeroupper; ret; 
0x00000000004529f9: sub r8, 2; lea rcx, [rdx + 2]; jne 0x52d30; ret; 
0x000000000044eec6: sub r8, 2; lea rdi, [rdi + 2]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c56: sub r8, 2; lea rdi, [rdi + 2]; jne 0x564f0; ret; 
0x0000000000452a1f: sub r8, 3; lea rcx, [rdx + 3]; jne 0x52d30; ret; 
0x000000000044eeea: sub r8, 3; lea rdi, [rdi + 3]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c79: sub r8, 3; lea rdi, [rdi + 3]; jne 0x564f0; ret; 
0x0000000000452a37: sub r8, 4; lea rcx, [rdx + 4]; jne 0x52d30; ret; 
0x000000000044ef04: sub r8, 4; lea rdi, [rdi + 4]; jne 0x4f150; vzeroupper; ret; 
0x0000000000455c94: sub r8, 4; lea rdi, [rdi + 4]; jne 0x564f0; ret; 
0x0000000000452a5d: sub r8, 5; lea rcx, [rdx + 5]; jne 0x52d30; ret; 
0x0000000000455cb7: sub r8, 5; lea rdi, [rdi + 5]; jne 0x564f0; ret; 
0x0000000000452a7f: sub r8, 6; lea rcx, [rdx + 6]; jne 0x52d30; ret; 
0x0000000000455cdc: sub r8, 6; lea rdi, [rdi + 6]; jne 0x564f0; ret; 
0x0000000000452a9d: sub r8, 7; lea rcx, [rdx + 7]; jne 0x52d30; ret; 
0x0000000000455cfa: sub r8, 7; lea rdi, [rdi + 7]; jne 0x564f0; ret; 
0x0000000000452779: sub r8, 8; lea rcx, [rdx + 8]; jne 0x52d30; ret; 
0x0000000000455d16: sub r8, 8; lea rdi, [rdi + 8]; jne 0x564f0; ret; 
0x0000000000452abf: sub r8, 9; lea rcx, [rdx + 9]; jne 0x52d30; ret; 
0x0000000000455d39: sub r8, 9; lea rdi, [rdi + 9]; jne 0x564f0; ret; 
0x000000000042ce65: sub r8, rdi; lea ecx, [r8 + 0x280]; shr ecx, 3; rep stosq qword ptr [rdi], rax; pop rbp; ret; 
0x000000000044ef2c: sub r8, rdx; sub r8, 1; lea rdi, [rdi + rdx + 1]; jne 0x4f150; vzeroupper; ret; 
0x0000000000410957: sub r9d, dword ptr [r10]; add byte ptr [rax + 0x63], cl; add al, 0x81; add rax, rdx; ret; 
0x0000000000430519: sub rax, 0x10; ret; 
0x00000000004293ab: sub rax, 0x11; shr rax, 4; lea rdx, [rax + 1]; mov qword ptr [rip + 0xb93d2], rdx; ret; 
0x0000000000459013: sub rax, 1; ret; 
0x00000000004916f9: sub rax, qword ptr [0]; ret; 
0x00000000004292c1: sub rax, qword ptr [rdi + 0x18]; ret; 
0x00000000004916f8: sub rax, qword ptr fs:[0]; ret; 
0x00000000004398d2: sub rax, rcx; je 0x398e0; sbb eax, eax; or eax, 1; ret; 
0x0000000000427a68: sub rax, rcx; sub eax, 1; ret; 
0x000000000044e4b8: sub rax, rdi; ret; 
0x0000000000483f3d: sub rax, rdi; shr rax, 2; ret; 
0x000000000043050d: sub rax, rdx; movzx edx, byte ptr [rcx + rax]; cmp dl, r8b; jne 0x30500; sub rax, 0x10; ret; 
0x0000000000424780: sub rax, rdx; pop rbp; pop r12; ret; 
0x00000000004590f3: sub rax, rdx; ret; 
0x00000000004842df: sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e51f: sub rax, rdx; vzeroupper; ret; 
0x000000000049c921: sub rcx, qword ptr [rax + 0x10]; cmp rcx, qword ptr [rax + 0x28]; jae 0x9c910; mov eax, 1; ret; 
0x0000000000481688: sub rcx, rax; sar rcx, 2; lea eax, [rcx - 1]; ret; 
0x00000000004304ad: sub rdx, 8; and eax, 1; cmovne rax, rdx; ret; 
0x0000000000481731: sub rdx, qword ptr [rcx + 0x10]; sar rdx, 2; sub eax, edx; ret; 
0x0000000000481743: sub rdx, qword ptr [rcx + 8]; sar rdx, 2; sub eax, edx; ret; 
0x000000000042477b: sub rdx, qword ptr [rdi + 8]; pop rbx; sub rax, rdx; pop rbp; pop r12; ret; 
0x000000000048266c: sub rdx, rax; jbe 0x82910; add rax, rdi; add rax, rcx; ret; 
0x00000000004828d3: sub rdx, rax; jbe 0x82910; add rax, rdi; ret; 
0x00000000004828e3: sub rdx, rax; jbe 0x82910; lea rax, [rdi + rax + 0x10]; ret; 
0x00000000004828f3: sub rdx, rax; jbe 0x82910; lea rax, [rdi + rax + 0x20]; ret; 
0x0000000000482903: sub rdx, rax; jbe 0x82910; lea rax, [rdi + rax + 0x30]; ret; 
0x00000000004989cc: sub rdx, rax; jbe 0x98c70; add rax, rdi; add rax, rcx; ret; 
0x0000000000498c33: sub rdx, rax; jbe 0x98c70; add rax, rdi; ret; 
0x0000000000498c43: sub rdx, rax; jbe 0x98c70; lea rax, [rdi + rax + 0x10]; ret; 
0x0000000000498c53: sub rdx, rax; jbe 0x98c70; lea rax, [rdi + rax + 0x20]; ret; 
0x0000000000498c63: sub rdx, rax; jbe 0x98c70; lea rax, [rdi + rax + 0x30]; ret; 
0x00000000004a8164: sub rsp, 8; add rsp, 8; ret; 
0x0000000000464cf8: sub rsp, 8; call 0x646e0; or dword ptr [rip + 0x80134], 2; add rsp, 8; ret; 
0x000000000048b5ce: sub rsp, 8; call qword ptr [rip + 0x57ba8]; xor eax, eax; add rsp, 8; ret; 
0x000000000045bec8: syscall; cmp rax, -0x1000; ja 0x5bed8; ret; 
0x000000000045bf27: syscall; cmp rax, -0x1000; ja 0x5bf38; ret; 
0x000000000045c0b0: syscall; cmp rax, -0x1000; ja 0x5c110; ret; 
0x000000000045c155: syscall; cmp rax, -0x1000; ja 0x5c1b0; ret; 
0x000000000045c1e9: syscall; cmp rax, -0x1000; ja 0x5c1f8; ret; 
0x000000000045c325: syscall; cmp rax, -0x1000; ja 0x5c370; ret; 
0x000000000045cb39: syscall; cmp rax, -0x1000; ja 0x5cb48; ret; 
0x000000000045cdf6: syscall; cmp rax, -0x1000; ja 0x5ce08; ret; 
0x000000000045ce29: syscall; cmp rax, -0x1000; ja 0x5ce38; ret; 
0x000000000045ce62: syscall; cmp rax, -0x1000; ja 0x5ce70; ret; 
0x000000000045d054: syscall; cmp rax, -0x1000; ja 0x5d0c0; pop rbx; pop rbp; ret; 
0x0000000000484f58: syscall; cmp rax, -0x1000; ja 0x84f68; ret; 
0x0000000000484fbd: syscall; cmp rax, -0x1000; ja 0x84fd0; ret; 
0x0000000000498f69: syscall; cmp rax, -0x1000; ja 0x98f78; ret; 
0x0000000000498fac: syscall; cmp rax, -0x1000; ja 0x98fc0; ret; 
0x000000000045be29: syscall; cmp rax, -0xfff; jae 0x5be34; ret; 
0x000000000045c3a9: syscall; cmp rax, -0xfff; jae 0x5c3b4; ret; 
0x000000000045cf39: syscall; cmp rax, -0xfff; jae 0x5cf44; ret; 
0x000000000045d00b: syscall; cmp rax, -0xfff; jae 0x5d016; ret; 
0x000000000045d0e9: syscall; cmp rax, -0xfff; jae 0x5d0f4; ret; 
0x000000000045d119: syscall; cmp rax, -0xfff; jae 0x5d124; ret; 
0x000000000045d149: syscall; cmp rax, -0xfff; jae 0x5d154; ret; 
0x000000000045f8ac: syscall; cmp rax, -0xfff; jae 0x5f8b7; ret; 
0x000000000045f8dc: syscall; cmp rax, -0xfff; jae 0x5f8e7; ret; 
0x000000000045f909: syscall; cmp rax, -0xfff; jae 0x5f914; ret; 
0x0000000000484ed9: syscall; cmp rax, -0xfff; jae 0x84ee4; ret; 
0x000000000049ed29: syscall; cmp rax, -0xfff; jae 0x9ed34; ret; 
0x000000000042d252: syscall; pop rbp; ret; 
0x000000000042e3be: syscall; pop rbx; ret; 
0x0000000000426194: syscall; ret; 
0x000000000045733d: test ah, 0x20; jne 0x57420; test ah, 0x40; jne 0x57430; lea rax, [rdi + 0xf]; ret; 
0x0000000000457346: test ah, 0x40; jne 0x57430; lea rax, [rdi + 0xf]; ret; 
0x000000000045725e: test ah, 0x40; jne 0x57430; test dh, 0x40; jne 0x571a0; lea rax, [rdi + 0xf]; ret; 
0x0000000000427886: test al, 0; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000004a17dc: test al, 0; add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000484e98: test al, 0; add byte ptr [rax], al; pop rbp; pop r12; ret; 
0x00000000004a3a47: test al, 0; add byte ptr [rax], al; ret; 
0x00000000004572ec: test al, 0x20; jne 0x573b0; test al, 0x40; jne 0x573c0; lea rax, [rdi + 7]; ret; 
0x00000000004572f4: test al, 0x40; jne 0x573c0; lea rax, [rdi + 7]; ret; 
0x00000000004571dc: test al, 0x40; jne 0x573c0; test dl, 0x40; jne 0x571a0; lea rax, [rdi + 7]; ret; 
0x000000000042e470: test al, 0x68; or eax, dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000048b5d4: test al, 0x7b; add eax, 0x48c03100; add esp, 8; ret; 
0x000000000042792e: test al, 0x90; endbr64; mov rax, -1; ret; 
0x000000000043036b: test al, 0xff; dec dword ptr [rbx + 0x9082454]; ret 0x37e9; 
0x00000000004017c6: test al, al; jne 0x17cb; ret; 
0x0000000000401fe0: test al, al; jne 0x1ecc; nop; nop; leave; ret; 
0x000000000042e46a: test al, al; jne 0x2e479; mov dword ptr [rip + 0xb68a8], 0; ret; 
0x000000000043348a: test al, al; jne 0x33470; xor eax, eax; sub eax, ecx; ret; 
0x000000000045b38a: test al, al; jne 0x5b431; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000490d2c: test al, al; jne 0x90cfe; movsx eax, dl; neg eax; ret; 
0x00000000004a669d: test al, bh; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000409b13: test al, ch; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x3944; 
0x000000000040928b: test al, dh; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000413a83: test al, dl; add al, 0; add byte ptr [rax - 0x77], cl; ret 0x448b; 
0x0000000000420683: test bh, al; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004a4519: test bh, bh; jne 0xa4553; mov eax, 8; add rsp, 8; ret; 
0x00000000004a16bc: test bh, bh; js 0xa16e8; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x00000000004a466c: test bh, bh; js 0xa4698; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x00000000004a600c: test bh, bh; js 0xa6038; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x000000000048df02: test bl, ah; add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000045fb95: test byte ptr [rax + 0x3b], 0x48; sbb byte ptr [rdi - 0x10], bh; mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x000000000045fb2d: test byte ptr [rax + 0x3b], 0x57; sbb byte ptr [rdi - 0x10], bh; mov qword ptr [rdi + 0x20], rdx; mov byte ptr [rdi + 0x28], 1; ret; 
0x0000000000471b46: test byte ptr [rax + 0xf], 0x44; ret 0x13eb; 
0x00000000004a042f: test byte ptr [rax + rax + 0x438b0000], al; adc byte ptr [rbp + 0x2d840fc0], al; add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x0000000000487992: test byte ptr [rax + rax*8], ah; add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x0000000000495916: test byte ptr [rax + rax], 1; pop rbx; mov eax, r8d; pop rbp; pop r12; ret; 
0x0000000000405e64: test byte ptr [rax + rax], ah; add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x000000000047b5cc: test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x000000000047560b: test byte ptr [rax + rbx*8], ah; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x0000000000487045: test byte ptr [rax + rdi*4], ah; add al, byte ptr [rax]; add byte ptr [rax + 0x29], cl; ret; 
0x000000000048d758: test byte ptr [rax - 0x7d], 0xe8; add dword ptr [rax - 0x7d], ecx; ret 0x4810; 
0x0000000000483fb0: test byte ptr [rax - 0x7d], 0xec; or al, ch; push rsi; sal edi, 1; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x000000000040a3bb: test byte ptr [rax - 0x7f000000], ah; ljmp [rax]; add byte ptr [rax], al; jne 0xa4a0; mov rax, 0x4decc0; ret; 
0x0000000000415ea9: test byte ptr [rax], 0; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004841ea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add rax, 3; ret; 
0x000000000042eb5a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add rsp, 0x18; ret; 
0x000000000043920a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; bsf eax, eax; lea rax, [rax + rdi + 0x10]; ret; 
0x0000000000426eaa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov eax, 0xffffffff; ret; 
0x000000000042887a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov rax, qword ptr [rdi + 0x68]; ret; 
0x000000000046d1fa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov rax, qword ptr [rip + 0x77c45]; ret; 
0x000000000046384a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov rax, qword ptr [rip + 0x821ad]; ret; 
0x000000000042885a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; mov rax, qword ptr [rip + 0xb98f5]; ret; 
0x00000000004278aa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; xor eax, eax; ret; 
0x00000000004573ea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xa]; ret; 
0x00000000004573fa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xb]; ret; 
0x000000000045740a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xc]; ret; 
0x000000000045741a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xd]; ret; 
0x000000000045742a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 0xe]; ret; 
0x000000000045737a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 2]; ret; 
0x000000000045738a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 3]; ret; 
0x000000000045739a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 4]; ret; 
0x00000000004573aa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 5]; ret; 
0x00000000004573ba: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 6]; ret; 
0x00000000004573ca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 8]; ret; 
0x00000000004573da: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rdi + 9]; ret; 
0x000000000040d7da: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bd77]; ret; 
0x000000000040d7ba: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bd80]; ret; 
0x000000000040d7aa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bd84]; ret; 
0x000000000040d79a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bd8c]; ret; 
0x000000000040d7ca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bd8e]; ret; 
0x000000000040d78a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bd8f]; ret; 
0x000000000040d81a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bdba]; ret; 
0x000000000040d77a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bdcc]; ret; 
0x000000000040d80a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bdd1]; ret; 
0x000000000040d7fa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bde8]; ret; 
0x000000000040d7ea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9bdff]; ret; 
0x000000000040cc9a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8b7]; ret; 
0x000000000040cc7a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8c0]; ret; 
0x000000000040cc6a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8c4]; ret; 
0x000000000040cc5a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8cc]; ret; 
0x000000000040cc8a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8ce]; ret; 
0x000000000040cc4a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8cf]; ret; 
0x000000000040ccda: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c8fa]; ret; 
0x000000000040cc3a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c90c]; ret; 
0x000000000040ccca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c911]; ret; 
0x000000000040ccba: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c928]; ret; 
0x000000000040ccaa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9c93f]; ret; 
0x000000000040c15a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d3f7]; ret; 
0x000000000040c13a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d400]; ret; 
0x000000000040c12a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d404]; ret; 
0x000000000040c11a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d40c]; ret; 
0x000000000040c14a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d40e]; ret; 
0x000000000040c10a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d40f]; ret; 
0x000000000040c19a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d43a]; ret; 
0x000000000040c0fa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d44c]; ret; 
0x000000000040c18a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d451]; ret; 
0x000000000040c17a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d468]; ret; 
0x000000000040c16a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9d47f]; ret; 
0x000000000040b55a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e014]; ret; 
0x000000000040b54a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e01c]; ret; 
0x000000000040b53a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e023]; ret; 
0x000000000040b52a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e02e]; ret; 
0x000000000040b51a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e037]; ret; 
0x000000000040b4fa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e040]; ret; 
0x000000000040b4ea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e044]; ret; 
0x000000000040b4da: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e04c]; ret; 
0x000000000040b4ca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e04f]; ret; 
0x000000000040b4aa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e077]; ret; 
0x000000000040b4ba: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0x9e08c]; ret; 
0x000000000040b50a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; lea rax, [rip + 0xc02d8]; ret; 
0x0000000000456a0a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x00000000004553ca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov byte ptr [rdi], dh; ret; 
0x0000000000452bfa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rcx], edx; mov dword ptr [rcx + 3], edx; ret; 
0x0000000000452bea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rcx], edx; mov word ptr [rcx + 4], dx; ret; 
0x0000000000452bca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rcx], edx; ret; 
0x000000000045640a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov dword ptr [rdi], edx; mov word ptr [rdi + 4], dx; ret; 
0x00000000004560ca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000040aeca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffff8a; ret; 
0x000000000040aeba: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffff97; ret; 
0x000000000040aeea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffff99; ret; 
0x000000000040aeda: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffff9a; ret; 
0x0000000000422bda: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x0000000000452c3a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov dword ptr [rcx + 7], edx; ret; 
0x0000000000452c4a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov dword ptr [rcx + 8], edx; ret; 
0x0000000000452c5a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 5], rdx; ret; 
0x0000000000452c6a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 6], rdx; ret; 
0x0000000000452c7a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 7], rdx; ret; 
0x0000000000452c8a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov qword ptr [rcx + 8], rdx; ret; 
0x0000000000452c2a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; mov word ptr [rcx + 8], dx; ret; 
0x0000000000452c0a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rcx], rdx; ret; 
0x000000000045fb1a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + 0x20], rsi; ret; 
0x00000000004a398a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi + rsi*8], rdx; add rsp, 8; ret; 
0x000000000045641a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi - 1], rdx; ret; 
0x000000000045645a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov dword ptr [rdi + 7], edx; ret; 
0x000000000045646a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov dword ptr [rdi + 8], edx; ret; 
0x000000000045647a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 5], rdx; ret; 
0x000000000045648a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov qword ptr [rdi + 6], rdx; ret; 
0x000000000045644a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], rdx; mov word ptr [rdi + 8], dx; ret; 
0x000000000045642a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rdi], rdx; ret; 
0x000000000040a4da: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4dec40; ret; 
0x000000000040a4ca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4dec80; ret; 
0x000000000040a47a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4ded40; ret; 
0x000000000040a4ea: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4dee80; ret; 
0x000000000040a46a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4deec0; ret; 
0x000000000040a48a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4e11a0; ret; 
0x000000000040a4fa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4e1260; ret; 
0x000000000040a4ba: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 0x4e12e0; ret; 
0x000000000048421a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 2; ret; 
0x000000000048422a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 3; ret; 
0x000000000048423a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 4; ret; 
0x000000000048424a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 5; ret; 
0x000000000048425a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 6; ret; 
0x000000000048426a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, 7; ret; 
0x000000000048354a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x000000000044f0ca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; mov word ptr [rdi], dx; vzeroupper; ret; 
0x000000000045649a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movdqu xmmword ptr [rdi - 1], xmm0; ret; 
0x00000000004564aa: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000452b96: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov byte ptr [rcx], dl; ret; 
0x00000000004563b6: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; mov byte ptr [rdi], dl; ret; 
0x00000000004560a6: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; ret; 
0x0000000000459037: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop dword ptr [rax]; xor eax, eax; ret; 
0x0000000000457369: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; lea rax, [rdi + 1]; ret; 
0x0000000000457359: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; lea rax, [rdi]; ret; 
0x00000000004563d9: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov dword ptr [rdi - 1], edx; ret; 
0x00000000004563e9: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov dword ptr [rdi], edx; ret; 
0x0000000000484209: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov rax, 1; ret; 
0x0000000000452ba8: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov word ptr [rcx], dx; ret; 
0x00000000004563c8: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; nop; mov word ptr [rdi], dx; ret; 
0x000000000049bada: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x000000000040488a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000040256a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000045719a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; xor rax, rax; ret; 
0x000000000045919d: test byte ptr [rbp + 0x48d674d2], 0x63; leave; add rax, rcx; sub rax, rdi; ret; 
0x0000000000452ee6: test byte ptr [rbp + 0x48fffffb], ah; mov eax, dword ptr [rcx]; mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x0000000000468051: test byte ptr [rbp + rax], al; add bh, dh; ret 0; 
0x000000000046ff76: test byte ptr [rbp - 0x6bf0bf40], 0xc6; xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x000000000043cfe7: test byte ptr [rbx - 0x76b303aa], 0x5f; out dx, al; mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000040c1dc: test byte ptr [rbx], 0; ret; 
0x00000000004587c2: test byte ptr [rbx], bl; add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x0000000000403503: test byte ptr [rcx + 0xdec1635], 0; ret; 
0x00000000004034f3: test byte ptr [rcx + 0xdec2235], 0; ret; 
0x00000000004034e3: test byte ptr [rcx + 0xdec2635], 0; ret; 
0x00000000004034d3: test byte ptr [rcx + 0xdec3235], 0; ret; 
0x00000000004034c3: test byte ptr [rcx + 0xdec5e35], 0; ret; 
0x00000000004033a3: test byte ptr [rcx + 0xded6a35], 0; ret; 
0x0000000000403393: test byte ptr [rcx + 0xded7e35], 0; ret; 
0x0000000000403383: test byte ptr [rcx + 0xded9a35], 0; ret; 
0x00000000004587b9: test byte ptr [rcx + rax - 0x67d0000], al; adc dword ptr [rdi], ecx; test byte ptr [rbx], bl; add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x0000000000431364: test byte ptr [rcx + rax - 0x7cb80000], dh; ret 0xe901; 
0x00000000004a7f30: test byte ptr [rcx + rax], al; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000482cdf: test byte ptr [rcx + rax], ch; add byte ptr [rax], al; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x000000000042916a: test byte ptr [rcx + rcx*4 - 0x11], 0xe8; fnstsw dword ptr [rsi - 3]; dec dword ptr [rax - 0x77]; ret; 
0x0000000000429235: test byte ptr [rcx + rcx*4 - 0x19], 0xe8; adc bh, byte ptr [rsi - 3]; dec dword ptr [rax - 0x77]; ret; 
0x0000000000482014: test byte ptr [rcx], ch; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x0000000000460f1d: test byte ptr [rdi], 0x84; xchg eax, edi; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000042c922: test byte ptr [rdi], 0x85; add al, byte ptr ds:[rax]; add byte ptr [rbp - 0x7cfdb9], cl; add dh, byte ptr [rsp - 0x77]; ret 0xb48b; 
0x00000000004304ea: test byte ptr [rdi], 0x94; ror byte ptr [rax - 0x73], 0x44; ret 0xfff; 
0x0000000000455d68: test byte ptr [rdi], al; add byte ptr [rax], al; ret; 
0x0000000000483e21: test byte ptr [rdx + 0x48000000], bl; bsf eax, edx; shr rax, 2; ret; 
0x000000000049b9fa: test byte ptr [rip + 0x49f1f], 0x40; jne 0x9ba08; ret; 
0x0000000000498654: test byte ptr [rip + 0x4c72f], 0x10; lea rdx, [rip + 0x11e]; lea rax, [rip + 0x67]; cmovne rax, rdx; ret; 
0x0000000000483d3b: test byte ptr [rip + 0x61048], 8; lea rax, [rip + 0x257]; lea rdx, [rip + 0x30]; cmovne rax, rdx; ret; 
0x0000000000431ac2: test byte ptr [rip + 0xb32cc], 2; lea rdx, [rip + 0x27dd0]; lea rax, [rip + 0x27e19]; cmove rax, rdx; ret; 
0x00000000004319d0: test byte ptr [rip + 0xb33be], 2; lea rdx, [rip + 0x27b02]; lea rax, [rip + 0x27bbb]; cmove rax, rdx; ret; 
0x000000000043191f: test byte ptr [rip + 0xb34bf], 1; je 0x318e1; ret; 
0x00000000004318a4: test byte ptr [rip + 0xb3539], 0x10; lea rdx, [rip - 0x362]; lea rax, [rip + 0x272f7]; cmove rax, rdx; ret; 
0x0000000000430f64: test byte ptr [rip + 0xb3e1f], 0x10; lea rdx, [rip + 0x2818e]; lea rax, [rip + 0x280d7]; cmovne rax, rdx; ret; 
0x0000000000430f3b: test byte ptr [rip + 0xb3e47], 2; lea rax, [rip + 0x1e407]; lea rdx, [rip + 0x1e5e0]; cmovne rax, rdx; ret; 
0x0000000000430e7b: test byte ptr [rip + 0xb3f62], 0x40; lea rax, [rip + 0x1cc37]; lea rdx, [rip + 0x26290]; cmovne rax, rdx; ret; 
0x000000000048315d: test byte ptr [rsi + 0x48000000], bl; bsf eax, edx; ret; 
0x000000000043345a: test byte ptr [rsi + 0x48fffffe], dl; bsf ecx, edi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000048202c: test byte ptr [rsi], bl; add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x0000000000425716: test ch, dh; add dword ptr [rax], eax; add byte ptr [rdi + rcx - 0x42], cl; ret 0x4a8d; 
0x0000000000490aa5: test cl, bl; add dword ptr [rax], eax; add byte ptr [rdi], cl; mov dh, 0x45; add cl, byte ptr [rax - 0x7d]; ret; 
0x000000000046e351: test cl, cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x000000000048e527: test cl, cl; cmove r8, rax; mov rax, r8; ret; 
0x0000000000458c9f: test cl, cl; jne 0x58c90; ret; 
0x0000000000458d4f: test cl, cl; jne 0x58d40; ret; 
0x000000000045900f: test cl, cl; jne 0x59000; sub rax, 1; ret; 
0x0000000000457267: test dh, 0x40; jne 0x571a0; lea rax, [rdi + 0xf]; ret; 
0x00000000004586f6: test dh, 0x40; jne 0x586c0; movzx eax, byte ptr [rdi - 9]; movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x000000000045a84a: test dh, 0xf0; je 0x5a76a; lea eax, [rdx + rdx]; pop rbx; and eax, 0x7ff80000; ret; 
0x00000000004572ad: test dh, 4; jne 0x571a0; lea rax, [rdi + 0xb]; ret; 
0x0000000000482c45: test dh, al; add dword ptr [rax], eax; add byte ptr [rax + 0xf], cl; mov ebp, 0xf80148c0; ret; 
0x0000000000464f89: test dh, dh; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00000000004a4518: test dil, dil; jne 0xa4553; mov eax, 8; add rsp, 8; ret; 
0x00000000004a16bb: test dil, dil; js 0xa16e8; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x00000000004a466b: test dil, dil; js 0xa4698; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x00000000004a600b: test dil, dil; js 0xa6038; mov qword ptr [r9], r8; add rsp, 8; ret; 
0x00000000004571e4: test dl, 0x40; jne 0x571a0; lea rax, [rdi + 7]; ret; 
0x0000000000458642: test dl, 0x40; jne 0x586c0; movzx eax, byte ptr [rdi - 9]; movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x0000000000457212: test dl, 4; jne 0x571a0; lea rax, [rdi + 3]; ret; 
0x0000000000420782: test dl, cl; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004841b7: test dl, dl; je 0x841d0; mov cl, dl; and cl, 0xf; je 0x841e0; ret; 
0x000000000041e0ab: test dl, dl; jne 0x1e088; ret; 
0x0000000000458ebf: test dl, dl; jne 0x58eb0; lea rax, [rcx - 1]; ret; 
0x000000000048b728: test dword ptr [rax + 0x21], 0xc73948f0; jne 0x8b738; pop rbx; ret; 
0x0000000000470239: test dword ptr [rax + 0x48000000], ebx; add esp, 0x98; ret; 
0x00000000004a1414: test dword ptr [rax + 0x48000000], edx; add esp, 0x30; pop rbx; pop rbp; pop r14; ret; 
0x0000000000402afa: test dword ptr [rax + 0x48000000], edx; add esp, 0xc8; ret; 
0x000000000048348b: test dword ptr [rax + 0x4c000000], esp; mov eax, eax; vzeroupper; ret; 
0x0000000000482248: test dword ptr [rax + 0xf], 0x7a8df7b6; add dword ptr [rax - 0x78], eax; jl 0x82288; adc byte ptr [rbp - 0x7cb7fd8e], cl; ret 0x4802; 
0x000000000044eef3: test dword ptr [rax + 2], ebx; add byte ptr [rax], al; vzeroupper; ret; 
0x000000000045609b: test dword ptr [rax + 4], edx; add byte ptr [rax], al; ret; 
0x00000000004572ef: test dword ptr [rax + rax + 0x40a80000], edi; jne 0x573c0; lea rax, [rdi + 7]; ret; 
0x0000000000482ac7: test dword ptr [rax + rax - 0x3fcf0000], edx; vzeroupper; ret; 
0x00000000004393c8: test dword ptr [rax + rax - 0x8b70000], ecx; ret 2; 
0x000000000042d1a7: test dword ptr [rax + rax], edi; add byte ptr [rbx + 0xb562d2d], al; add byte ptr [rcx], al; pop rbp; ret; 
0x000000000049ac83: test dword ptr [rax - 0x75], 0x83480842; ret 0x4808; 
0x0000000000460761: test dword ptr [rax - 0x75], 0x83481042; ret 0x4810; 
0x00000000004788ba: test dword ptr [rax], eax; add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x0000000000473a25: test dword ptr [rax], ecx; idiv edi; inc dword ptr [rax]; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004736e1: test dword ptr [rax], edx; idiv edi; inc dword ptr [rcx]; ret; 
0x00000000004845fe: test dword ptr [rbp + 0x4c000000], ebx; mov eax, eax; shr rax, 2; vzeroupper; ret; 
0x000000000049e593: test dword ptr [rbp], edi; add byte ptr [rax], al; leave; ret; 
0x0000000000482858: test dword ptr [rbx + 0x31000000], esp; rol bl, 0x83; ret 0x6620; 
0x00000000004572a8: test dword ptr [rbx + 1], eax; add byte ptr [rax], al; test dh, 4; jne 0x571a0; lea rax, [rdi + 0xb]; ret; 
0x0000000000452ae8: test dword ptr [rbx + 2], eax; add byte ptr [rax], al; ret; 
0x0000000000452ac8: test dword ptr [rbx + 2], esp; add byte ptr [rax], al; ret; 
0x00000000004529e0: test dword ptr [rbx + 3], ecx; add byte ptr [rax], al; ret; 
0x000000000043aa17: test dword ptr [rbx + 7], edx; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043ae66: test dword ptr [rbx + rax], eax; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000439ae8: test dword ptr [rbx - 0x3a000003], esp; std; xlatb; ret 0xe883; 
0x000000000043ce23: test dword ptr [rbx - 0x76b703aa], 0x5789f74f; cld; ret; 
0x0000000000442743: test dword ptr [rbx - 0x76b703b2], 0x4f89f757; cld; ret; 
0x000000000045c267: test dword ptr [rcx + 0x48000000], ebx; add esp, 0x68; ret; 
0x000000000047faa4: test dword ptr [rcx + 0x48000000], edx; add esp, 0xa0; pop rbx; pop rbp; pop r12; ret; 
0x00000000004527ea: test dword ptr [rcx + 5], eax; add byte ptr [rax], al; ret; 
0x000000000043a9ed: test dword ptr [rcx + 7], esi; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000455c82: test dword ptr [rcx + 8], ebp; add byte ptr [rax], al; ret; 
0x000000000043a8fd: test dword ptr [rcx + 8], esp; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000043a829: test dword ptr [rcx + 9], eax; add byte ptr [rax], al; movzx eax, byte ptr [rdi - 1]; movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x000000000043a80d: test dword ptr [rcx + 9], edx; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000040a8f9: test dword ptr [rcx - 0x75], 0x85481040; sal byte ptr [rbp + rax - 1], 0xe0; nop dword ptr [rax]; mov eax, 0xffffffff; ret; 
0x000000000040a918: test dword ptr [rcx - 0x75], 0x85481840; sal byte ptr [rsi + rax - 1], 0xe0; nop dword ptr [rax]; xor eax, eax; ret; 
0x000000000045b38d: test dword ptr [rdi + 0x48000000], ebx; add esp, 8; pop rbx; pop rbp; ret; 
0x0000000000455de7: test dword ptr [rdi + rax], eax; add byte ptr [rax], al; ret; 
0x0000000000455dc7: test dword ptr [rdi + rax], esp; add byte ptr [rax], al; ret; 
0x0000000000465989: test dword ptr [rdi], 0x33486; add byte ptr [rcx - 0xa], al; ret; 
0x00000000004a0e0d: test dword ptr [rdx + 0x48000001], edx; add esp, 0x78; pop rbp; pop r12; ret; 
0x000000000044efd1: test dword ptr [rdx + 1], edi; add byte ptr [rax], al; vzeroupper; ret; 
0x0000000000455f81: test dword ptr [rdx + 5], ebp; add byte ptr [rax], al; ret; 
0x000000000043aa2b: test dword ptr [rdx + 7], ecx; add byte ptr [rax], al; movzx eax, byte ptr [rdi - 1]; movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x000000000043a929: test dword ptr [rdx + 8], esp; add byte ptr [rax], al; and eax, 0xffff; and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000043a732: test dword ptr [rdx + rcx], ebp; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000452aa7: test dword ptr [rdx], eax; add byte ptr [rax], al; ret; 
0x0000000000482f43: test dword ptr [rip - 0x76ffffff], edi; ret 0x8948; 
0x000000000042c47e: test dword ptr [rip - 0x9fffffd], ebp; ret 0xf01; 
0x000000000045bfe6: test dword ptr [rsi + 0x48000000], esp; add esp, 0x68; pop rbp; pop r12; ret; 
0x000000000045720d: test dword ptr [rsi + 1], ebp; add byte ptr [rax], al; test dl, 4; jne 0x571a0; lea rax, [rdi + 3]; ret; 
0x0000000000458a22: test dword ptr [rsi + 1], ebp; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000455da5: test dword ptr [rsi + 7], eax; add byte ptr [rax], al; ret; 
0x0000000000455d85: test dword ptr [rsi + 7], esp; add byte ptr [rax], al; ret; 
0x0000000000455c9d: test dword ptr [rsi + 8], ecx; add byte ptr [rax], al; ret; 
0x000000000045e3e9: test dword ptr [rsi], eax; add eax, 0x8b4d0000; adc byte ptr [r13 - 0x7b], r9b; ror byte ptr [rdi], 0x85; ret 4; 
0x000000000042c924: test dword ptr [rsi], edi; add al, byte ptr [rax]; add byte ptr [rbp - 0x7cfdb9], cl; add dh, byte ptr [rsp - 0x77]; ret 0xb48b; 
0x000000000043ac38: test dword ptr [rsi], esp; add eax, 0xc0310000; ret; 
0x00000000004408e6: test eax, 0x7f0f41f3; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x0000000000403043: test eax, 0x85000078; sar byte ptr [rax + 0x19], 0x89; ret; 
0x000000000044cc52: test eax, 0xe3c4c9eb; jns 0x4ccbc; rcr dword ptr [rdx], 0xf; xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x000000000044d432: test eax, 0xe3c4c9eb; jns 0x4d49c; rcr dword ptr [rdx], 0xf; xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x0000000000460971: test eax, eax; add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x000000000045f82f: test eax, eax; cmove eax, edx; ret; 
0x00000000004a3a15: test eax, eax; cmovne rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000040b615: test eax, eax; cmovns eax, edx; add rsp, 8; ret; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000040217a: test eax, eax; je 0x2180; ret; 
0x0000000000402553: test eax, eax; je 0x2560; mov eax, dword ptr [rax]; add rsp, 8; ret; 
0x0000000000402640: test eax, eax; je 0x2650; pop rbp; pop r12; pop r13; ret; 
0x00000000004026b0: test eax, eax; je 0x26c0; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000402716: test eax, eax; je 0x2720; pop rbp; ret; 
0x00000000004277c9: test eax, eax; je 0x277dc; mov qword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x0000000000402770: test eax, eax; je 0x2780; pop rbp; pop r12; pop r13; ret; 
0x00000000004027c0: test eax, eax; je 0x27d0; pop rbp; pop r12; pop r13; ret; 
0x0000000000402ea8: test eax, eax; je 0x2eb0; pop rbp; ret; 
0x0000000000438ab8: test eax, eax; je 0x38abd; xchg eax, edx; sub eax, edx; ret; 
0x0000000000439086: test eax, eax; je 0x390a0; bsf eax, eax; add rax, rdi; add rax, rcx; ret; 
0x000000000044dd33: test eax, eax; je 0x4dd40; bsf eax, eax; lea rax, [rdi + rax]; ret; 
0x000000000045cf6c: test eax, eax; je 0x5cf71; ret; 
0x000000000046131a: test eax, eax; je 0x61320; ret; 
0x0000000000464cee: test eax, eax; je 0x64cf8; ret; 
0x000000000048306d: test eax, eax; je 0x83024; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x0000000000483092: test eax, eax; je 0x830b0; bsr eax, eax; lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x0000000000497e95: test eax, eax; je 0x97ea7; lea rax, [rip + 0x4d1a0]; mov qword ptr [rip + 0x4d181], rax; add rsp, 8; ret; 
0x0000000000498335: test eax, eax; je 0x98343; lea rdx, [rip + 0x4b7c0]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x00000000004985d4: test eax, eax; je 0x985e0; pop rbx; pop rbp; pop r12; ret; 
0x000000000046da18: test eax, eax; jle 0x6da40; sub eax, 1; mov dword ptr [rdx + 8], eax; pop rbx; ret; 
0x0000000000402099: test eax, eax; jne 0x20b0; mov eax, 1; mov dword ptr [rip + 0xe2228], eax; add rsp, 8; ret; 
0x0000000000427764: test eax, eax; jne 0x27758; ret; 
0x00000000004284fc: test eax, eax; jne 0x284f0; ret; 
0x000000000042d1a4: test eax, eax; jne 0x2d228; sub dword ptr [rip + 0xb562d], 1; pop rbp; ret; 
0x000000000042e35b: test eax, eax; jne 0x2e398; sub dword ptr [rip + 0xb69ba], 1; pop rbx; ret; 
0x0000000000434a4b: test eax, eax; jne 0x34a30; sub eax, ecx; vzeroupper; ret; 
0x0000000000438ed0: test eax, eax; jne 0x38eb0; sub eax, ecx; vzeroupper; ret; 
0x00000000004391d1: test eax, eax; jne 0x39220; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000457194: test eax, eax; jne 0x571a4; nop dword ptr [rax + rax]; xor rax, rax; ret; 
0x000000000045c0ac: test eax, eax; jne 0x5c0c0; syscall; cmp rax, -0x1000; ja 0x5c110; ret; 
0x00000000004718bc: test eax, eax; jne 0x718e8; sub dword ptr [rip + 0x736b9], 1; xor eax, eax; add rsp, 8; ret; 
0x00000000004827e3: test eax, eax; jne 0x828c0; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000482885: test eax, eax; jne 0x828e0; xor eax, eax; ret; 
0x0000000000482855: test eax, eax; jne 0x82900; xor eax, eax; ret; 
0x0000000000482b01: test eax, eax; jne 0x82b20; xor eax, eax; vzeroupper; ret; 
0x0000000000482ac4: test eax, eax; jne 0x82b60; xor eax, eax; vzeroupper; ret; 
0x00000000004834c1: test eax, eax; jne 0x834f0; mov rax, r8; vzeroupper; ret; 
0x0000000000483488: test eax, eax; jne 0x83530; mov rax, r8; vzeroupper; ret; 
0x0000000000484631: test eax, eax; jne 0x84660; mov rax, r8; shr rax, 2; vzeroupper; ret; 
0x000000000048fa43: test eax, eax; jne 0x8fa60; mov qword ptr [rbx], 0; pop rbx; or dword ptr [rip + 0x536f2], 1; ret; 
0x0000000000497d6e: test eax, eax; jne 0x97da8; sub dword ptr [rip + 0x4d29b], 1; mov eax, r8d; pop rbx; ret; 
0x0000000000498b43: test eax, eax; jne 0x98c20; pmovmskb eax, xmm1; bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000498be5: test eax, eax; jne 0x98c40; xor eax, eax; ret; 
0x0000000000498bb5: test eax, eax; jne 0x98c60; xor eax, eax; ret; 
0x0000000000498e61: test eax, eax; jne 0x98e80; xor eax, eax; vzeroupper; ret; 
0x0000000000498e24: test eax, eax; jne 0x98ec0; xor eax, eax; vzeroupper; ret; 
0x000000000049e97a: test eax, eax; jne 0x9e9e0; mov dword ptr [rdx], 0; mov eax, 2; ret; 
0x00000000004a126b: test eax, eax; jne 0xa11c0; add rsp, 0x38; ret; 
0x00000000004a5a96: test eax, eax; jne 0xa5aa0; ret; 
0x00000000004a5cd6: test eax, eax; jne 0xa5ce0; ret; 
0x000000000040a762: test eax, eax; jne 0xa76d; mov rax, 0x4e12e0; pop rbp; ret; 
0x0000000000407fa3: test eax, eax; jns 0x7f60; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040315a: test eax, eax; js 0x3160; ret; 
0x0000000000408f49: test eax, eax; js 0x8f58; add rsp, 0x18; pop rbp; pop r12; ret; 
0x000000000040a9cb: test eax, eax; js 0xa9db; xor eax, eax; pop rbx; ret; 
0x000000000040b6ad: test eax, eax; lea edx, [rax + 0x1388]; cmovns eax, edx; add rsp, 8; ret; 
0x000000000040b6ed: test eax, eax; lea edx, [rax + 0x1770]; cmovns eax, edx; add rsp, 8; ret; 
0x000000000040b66d: test eax, eax; lea edx, [rax + 0xfa0]; cmovns eax, edx; add rsp, 8; ret; 
0x0000000000431a50: test eax, eax; lea rdx, [rip + 0x28867]; lea rax, [rip + 0x287f0]; cmovne rax, rdx; ret; 
0x000000000040dbeb: test eax, eax; mov eax, 0; cmovne r12, rax; mov rax, r12; pop r12; ret; 
0x000000000042979a: test eax, eax; mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0xbb58c], rax; ret; 
0x000000000046ff77: test eax, eax; sete sil; xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x000000000049eb67: test eax, eax; setne al; add rsp, 8; movzx eax, al; neg eax; ret; 
0x000000000043936c: test eax, eax; tzcnt eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x0000000000479c5f: test eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0x3bc0; 
0x0000000000423cbe: test eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000423b4c: test eax, ebx; add byte ptr [rax], al; add byte ptr [rcx - 0x39], cl; mov al, 0x3b; add byte ptr [rax - 0x39], r9b; ret; 
0x00000000004a6574: test ebp, ebp; jne 0xa6560; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000048dc9e: test ebp, ecx; add dword ptr [rax], eax; add byte ptr [rax + 0x63], cl; ret; 
0x000000000043a8be: test ebp, ecx; or byte ptr [rax], al; add byte ptr [rip + 0xffff], ah; and ecx, 0xffff; sub eax, ecx; ret; 
0x00000000004827c0: test ebx, ebx; add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; xlatb; ret 0xc085; 
0x00000000004a2a52: test ebx, ebx; in al, dx; cmc; dec dword ptr [rbp - 0x75]; adc cl, byte ptr [rcx + 1]; ret 0xef89; 
0x00000000004a65c7: test ebx, ebx; jne 0xa65a0; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004a671b: test ebx, ebx; jne 0xa6700; pop rbx; ret; 
0x00000000004a6833: test ebx, ebx; jne 0xa681d; pop rbx; ret; 
0x00000000004a7c5c: test ebx, ebx; jne 0xa7c40; pop rbx; pop rbp; pop r12; ret; 
0x0000000000467240: test ebx, esi; add dword ptr [rax], eax; add byte ptr [rcx], dh; ror byte ptr [rcx + rcx*4 + 0x5c], 0x24; sub byte ptr [rcx - 0x77], cl; ret; 
0x00000000004a528a: test ecx, ebp; add byte ptr [rax], al; add byte ptr [rcx + 0xf], al; mov bh, 0x5d; and byte ptr [rsi - 9], ah; ret; 
0x00000000004571d2: test ecx, ebx; add dword ptr [rax], eax; add dh, dh; ret 0x7520; 
0x0000000000422bca: test ecx, ecx; jne 0x22be0; mov eax, dword ptr [rdx + 0x4c]; cmp dword ptr [rdx + 0x48], eax; cmovne eax, ecx; ret; 
0x000000000046da2d: test edi, edi; je 0x6da0f; call 0x91970; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x0000000000407c3d: test edi, edi; jne 0x7c28; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000431910: test edx, 0x400000; je 0x318e1; lea rax, [rip + 0x7e61]; test byte ptr [rip + 0xb34bf], 1; je 0x318e1; ret; 
0x000000000044e356: test edx, edx; je 0x4e35e; bsf eax, edx; ret; 
0x000000000044e3fb: test edx, edx; je 0x4e410; bsf rax, rdx; ret; 
0x000000000044e39e: test edx, edx; je 0x4e420; bsf rax, rdx; ret; 
0x000000000045919e: test edx, edx; je 0x59178; movsxd rcx, ecx; add rax, rcx; sub rax, rdi; ret; 
0x00000000004831ca: test edx, edx; je 0x831f0; bsf rax, rdx; ret; 
0x000000000048315a: test edx, edx; je 0x83200; bsf rax, rdx; ret; 
0x0000000000483e8a: test edx, edx; je 0x83eb0; bsf rax, rdx; shr rax, 2; ret; 
0x0000000000483e1e: test edx, edx; je 0x83ec0; bsf rax, rdx; shr rax, 2; ret; 
0x0000000000425197: test edx, edx; jne 0x251a0; ret; 
0x000000000042615c: test edx, edx; jne 0x26170; sub dword ptr [rip + 0xbeb49], 1; ret; 
0x0000000000426817: test edx, edx; jne 0x26808; ret; 
0x00000000004294e5: test edx, edx; jne 0x294c8; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000045a2a5: test edx, edx; jne 0x5a2ad; mov rax, rdi; ret; 
0x00000000004806bf: test edx, edx; jne 0x806b0; ret; 
0x0000000000483d7b: test edx, edx; jne 0x83d70; ret; 
0x0000000000485241: test edx, edx; jne 0x85250; ret; 
0x0000000000497e46: test edx, edx; jne 0x97e50; sub dword ptr [rdi], 1; ret; 
0x0000000000499309: test edx, edx; jne 0x99310; mov qword ptr [rbx], rax; add rsp, 0x10; pop rbx; ret; 
0x00000000004571c5: test esi, edx; add dword ptr [rax], eax; add dh, dh; ret 0x7510; 
0x0000000000415ea8: test esi, esi; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000430498: test esi, esi; je 0x304a8; lea rax, [rax - 0x10]; ret; 
0x000000000046d9e4: test esi, esi; je 0x6d9f0; cmp esi, 3; je 0x6d9f0; ret; 
0x000000000048e4b0: test esi, esi; je 0x8e4b7; mov qword ptr [rsi], rdi; mov rax, r8; ret; 
0x000000000045dde4: test esi, esi; jne 0x5ddf0; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000045de92: test esi, esi; jne 0x5dea0; pop rbp; pop r12; pop r13; ret; 
0x000000000046ff58: test esi, esi; jne 0x6ff68; mov dword ptr [rbx + 0x40], esi; xor eax, eax; pop rbx; ret; 
0x00000000004830c5: test esi, esi; jne 0x830cd; xor rax, rax; ret; 
0x0000000000483d85: test esi, esi; jne 0x83d8d; xor rax, rax; ret; 
0x000000000049e807: test esi, esi; jne 0x9e830; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000049e8b1: test esi, esi; jne 0x9e8a2; cmp cx, 0x7fff; jne 0x9e89c; mov eax, 1; ret; 
0x000000000049e898: test esi, esi; jne 0x9e8c8; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x00000000004571df: test esp, ebx; add dword ptr [rax], eax; add dh, dh; ret 0x7540; 
0x00000000004053f6: test esp, ecx; add al, byte ptr [rax]; add byte ptr [rbx - 0x76bef7bd], cl; ret 0xc085; 
0x000000000049ac82: test qword ptr [rax - 0x75], -0x7cb7f7be; ret 0x4808; 
0x000000000043ce22: test qword ptr [rbx - 0x76b703aa], 0x5789f74f; cld; ret; 
0x000000000042e469: test r8b, r8b; jne 0x2e479; mov dword ptr [rip + 0xb68a8], 0; ret; 
0x000000000045b389: test r8b, r8b; jne 0x5b431; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000040263f: test r8d, r8d; je 0x2650; pop rbp; pop r12; pop r13; ret; 
0x00000000004026af: test r8d, r8d; je 0x26c0; add rsp, 8; pop rbp; pop r12; ret; 
0x0000000000402715: test r8d, r8d; je 0x2720; pop rbp; ret; 
0x000000000040276f: test r8d, r8d; je 0x2780; pop rbp; pop r12; pop r13; ret; 
0x00000000004027bf: test r8d, r8d; je 0x27d0; pop rbp; pop r12; pop r13; ret; 
0x0000000000402ea7: test r8d, r8d; je 0x2eb0; pop rbp; ret; 
0x0000000000438ab7: test r8d, r8d; je 0x38abd; xchg eax, edx; sub eax, edx; ret; 
0x00000000004a126a: test r8d, r8d; jne 0xa11c0; add rsp, 0x38; ret; 
0x000000000040a761: test r8d, r8d; jne 0xa76d; mov rax, 0x4e12e0; pop rbp; ret; 
0x00000000004a3a14: test rax, rax; cmovne rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000402552: test rax, rax; je 0x2560; mov eax, dword ptr [rax]; add rsp, 8; ret; 
0x00000000004277c8: test rax, rax; je 0x277dc; mov qword ptr [rax], 0; mov qword ptr [rax + 8], 0; ret; 
0x000000000045cf6b: test rax, rax; je 0x5cf71; ret; 
0x0000000000498334: test rax, rax; je 0x98343; lea rdx, [rip + 0x4b7c0]; mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x00000000004985d3: test rax, rax; je 0x985e0; pop rbx; pop rbp; pop r12; ret; 
0x0000000000427763: test rax, rax; jne 0x27758; ret; 
0x00000000004284fb: test rax, rax; jne 0x284f0; ret; 
0x000000000049e979: test rax, rax; jne 0x9e9e0; mov dword ptr [rdx], 0; mov eax, 2; ret; 
0x0000000000429799: test rax, rax; mov eax, 0x10; cmovne rax, rdx; mov qword ptr [rip + 0xbb58c], rax; ret; 
0x00000000004a6573: test rbp, rbp; jne 0xa6560; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004a65c6: test rbx, rbx; jne 0xa65a0; add rsp, 8; pop rbx; pop rbp; ret; 
0x00000000004a671a: test rbx, rbx; jne 0xa6700; pop rbx; ret; 
0x00000000004a6832: test rbx, rbx; jne 0xa681d; pop rbx; ret; 
0x00000000004a7c5b: test rbx, rbx; jne 0xa7c40; pop rbx; pop rbp; pop r12; ret; 
0x000000000046da2c: test rdi, rdi; je 0x6da0f; call 0x91970; mov qword ptr [rbx + 0x10], 0; pop rbx; ret; 
0x0000000000407c3c: test rdi, rdi; jne 0x7c28; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000044e3fa: test rdx, rdx; je 0x4e410; bsf rax, rdx; ret; 
0x000000000044e39d: test rdx, rdx; je 0x4e420; bsf rax, rdx; ret; 
0x00000000004831c9: test rdx, rdx; je 0x831f0; bsf rax, rdx; ret; 
0x0000000000483159: test rdx, rdx; je 0x83200; bsf rax, rdx; ret; 
0x0000000000483e89: test rdx, rdx; je 0x83eb0; bsf rax, rdx; shr rax, 2; ret; 
0x0000000000483e1d: test rdx, rdx; je 0x83ec0; bsf rax, rdx; shr rax, 2; ret; 
0x0000000000425196: test rdx, rdx; jne 0x251a0; ret; 
0x0000000000426816: test rdx, rdx; jne 0x26808; ret; 
0x00000000004294e4: test rdx, rdx; jne 0x294c8; nop dword ptr [rax]; xor r8d, r8d; mov rax, r8; ret; 
0x000000000045a2a4: test rdx, rdx; jne 0x5a2ad; mov rax, rdi; ret; 
0x00000000004806be: test rdx, rdx; jne 0x806b0; ret; 
0x0000000000430497: test rsi, rsi; je 0x304a8; lea rax, [rax - 0x10]; ret; 
0x000000000048e4af: test rsi, rsi; je 0x8e4b7; mov qword ptr [rsi], rdi; mov rax, r8; ret; 
0x000000000045dde3: test rsi, rsi; jne 0x5ddf0; add rsp, 8; pop rbp; pop r12; ret; 
0x000000000045de91: test rsi, rsi; jne 0x5dea0; pop rbp; pop r12; pop r13; ret; 
0x00000000004830c4: test rsi, rsi; jne 0x830cd; xor rax, rax; ret; 
0x0000000000483d84: test rsi, rsi; jne 0x83d8d; xor rax, rax; ret; 
0x000000000049e806: test rsi, rsi; jne 0x9e830; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x000000000049e8b0: test rsi, rsi; jne 0x9e8a2; cmp cx, 0x7fff; jne 0x9e89c; mov eax, 1; ret; 
0x000000000049e897: test rsi, rsi; jne 0x9e8c8; mov dword ptr [rdx], 0; mov eax, 1; ret; 
0x0000000000464f88: test sil, sil; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000044e5e0: tzcnt eax, eax; add rax, 0x20; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439330: tzcnt eax, eax; add rax, 0x20; add rax, rdi; vzeroupper; ret; 
0x000000000044e600: tzcnt eax, eax; add rax, 0x40; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439340: tzcnt eax, eax; add rax, 0x40; add rax, rdi; vzeroupper; ret; 
0x000000000044e64c: tzcnt eax, eax; add rax, 0x60; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x000000000043936e: tzcnt eax, eax; add rax, 0x60; add rax, rdi; vzeroupper; ret; 
0x000000000044e1a3: tzcnt eax, eax; add rax, rcx; add rax, rdi; vzeroupper; ret; 
0x000000000044e515: tzcnt eax, eax; add rax, rdi; add rax, rcx; sub rax, rdx; vzeroupper; ret; 
0x0000000000439285: tzcnt eax, eax; add rax, rdi; add rax, rcx; vzeroupper; ret; 
0x0000000000484390: tzcnt eax, eax; add rax, rdi; sub rax, rdx; shr rax, 2; vzeroupper; ret; 
0x000000000044e5d0: tzcnt eax, eax; add rax, rdi; sub rax, rdx; vzeroupper; ret; 
0x0000000000439320: tzcnt eax, eax; add rax, rdi; vzeroupper; ret; 
0x0000000000482b10: tzcnt eax, eax; cmp rdx, rax; jbe 0x82b80; add rax, rdi; vzeroupper; ret; 
0x0000000000498e70: tzcnt eax, eax; cmp rdx, rax; jbe 0x98ee0; add rax, rdi; vzeroupper; ret; 
0x0000000000439b20: tzcnt ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x20]; movzx edx, byte ptr [rsi + rcx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000439b40: tzcnt ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x40]; movzx edx, byte ptr [rsi + rcx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000439b06: tzcnt ecx, eax; movzx eax, byte ptr [rdi + rcx + 0x60]; movzx edx, byte ptr [rsi + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000439890: tzcnt ecx, eax; movzx eax, byte ptr [rdi + rcx]; movzx edx, byte ptr [rsi + rcx]; sub eax, edx; vzeroupper; ret; 
0x00000000004348c3: tzcnt ecx, edi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000434928: tzcnt ecx, esi; movzx eax, byte ptr [rax + rcx + 0x60]; movzx edx, byte ptr [rdx + rcx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x00000000004348ec: tzcnt edi, ecx; movzx eax, byte ptr [rax + rdi + 0x20]; movzx edx, byte ptr [rdx + rdi + 0x20]; sub eax, edx; vzeroupper; ret; 
0x000000000043490c: tzcnt edi, ecx; movzx eax, byte ptr [rax + rdi + 0x40]; movzx edx, byte ptr [rdx + rdi + 0x40]; sub eax, edx; vzeroupper; ret; 
0x0000000000434760: tzcnt edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x20]; movzx edx, byte ptr [rsi + rdx + 0x20]; sub eax, edx; vzeroupper; ret; 
0x0000000000434780: tzcnt edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x40]; movzx edx, byte ptr [rsi + rdx + 0x40]; sub eax, edx; vzeroupper; ret; 
0x00000000004347a0: tzcnt edx, ecx; movzx eax, byte ptr [rdi + rdx + 0x60]; movzx edx, byte ptr [rsi + rdx + 0x60]; sub eax, edx; vzeroupper; ret; 
0x0000000000434746: tzcnt edx, ecx; movzx eax, byte ptr [rdi + rdx]; movzx edx, byte ptr [rsi + rdx]; sub eax, edx; vzeroupper; ret; 
0x0000000000434992: tzcnt rcx, rdi; movzx eax, byte ptr [rax + rcx]; movzx edx, byte ptr [rdx + rcx]; sub eax, edx; vzeroupper; ret; 
0x0000000000459575: ud0; lea rsi, [rsi + rcx - 1]; std; rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x0000000000439b8b: ud2; nop dword ptr [rax]; movzx eax, byte ptr [rdi]; movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000000499552: vminsd xmm9, xmm4, qword ptr [rcx + rcx*4 - 0x18]; pop r12; pop r13; ret; 
0x000000000045a4c9: vmovdqa ymmword ptr [rcx + 0x60], ymm0; add rcx, 0x80; cmp rdx, rcx; jne 0x5a4bb; vzeroupper; ret; 
0x0000000000445ec1: vmovdqu xmm0, xmmword ptr [rsi]; vmovdqu xmm1, xmmword ptr [rcx - 0x10]; vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x0000000000459972: vmovdqu xmm0, xmmword ptr [rsi]; vmovdqu xmm1, xmmword ptr [rsi + rdx - 0x10]; vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000445ec5: vmovdqu xmm1, xmmword ptr [rcx - 0x10]; vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x0000000000459976: vmovdqu xmm1, xmmword ptr [rsi + rdx - 0x10]; vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000044f060: vmovdqu xmm2, xmmword ptr [rsi]; vmovdqu xmm3, xmmword ptr [rsi + r8 - 0x10]; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm3; vzeroupper; ret; 
0x000000000044e9b0: vmovdqu xmm2, xmmword ptr [rsi]; vmovdqu xmm3, xmmword ptr [rsi + rdx - 0xf]; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x00000000004399b1: vmovdqu xmm2, xmmword ptr [rsi]; vpcmpeqb xmm2, xmm2, xmmword ptr [rdi]; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x39890; ret; 
0x000000000044f064: vmovdqu xmm3, xmmword ptr [rsi + r8 - 0x10]; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm3; vzeroupper; ret; 
0x00000000004570e4: vmovdqu xmm3, xmmword ptr [rsi + rdx - 0xf]; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e9b4: vmovdqu xmm3, xmmword ptr [rsi + rdx - 0xf]; vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x0000000000445ece: vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000044f114: vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm0; vzeroupper; ret; 
0x000000000044f06f: vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm3; vzeroupper; ret; 
0x000000000045a4ff: vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm0; vmovdqu xmmword ptr [rdi], xmm0; vzeroupper; ret; 
0x0000000000459980: vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x00000000004570ee: vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e9be: vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x0000000000445eca: vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000044f110: vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm0; vzeroupper; ret; 
0x000000000045997c: vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000459309: vmovdqu xmmword ptr [rdi], xmm0; vmovdqu xmmword ptr [rsi - 0x10], xmm0; ret; 
0x000000000045a505: vmovdqu xmmword ptr [rdi], xmm0; vzeroupper; ret; 
0x000000000044f06b: vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + r8 - 0x10], xmm3; vzeroupper; ret; 
0x00000000004570ea: vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e9ba: vmovdqu xmmword ptr [rdi], xmm2; vmovdqu xmmword ptr [rdi + rdx - 0xf], xmm3; vzeroupper; ret; 
0x000000000045930d: vmovdqu xmmword ptr [rsi - 0x10], xmm0; ret; 
0x0000000000445ead: vmovdqu ymm0, ymmword ptr [rsi]; vmovdqu ymm1, ymmword ptr [rcx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x00000000004598cb: vmovdqu ymm0, ymmword ptr [rsi]; vmovdqu ymm1, ymmword ptr [rsi + rdx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x0000000000445eb1: vmovdqu ymm1, ymmword ptr [rcx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x00000000004598cf: vmovdqu ymm1, ymmword ptr [rsi + rdx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x000000000044f080: vmovdqu ymm2, ymmword ptr [rsi]; vmovdqu ymm3, ymmword ptr [rsi + r8 - 0x20]; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + r8 - 0x20], ymm3; vzeroupper; ret; 
0x000000000044e9d0: vmovdqu ymm2, ymmword ptr [rsi]; vmovdqu ymm3, ymmword ptr [rsi + rdx - 0x1f]; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; vzeroupper; ret; 
0x0000000000445e8d: vmovdqu ymm3, ymmword ptr [rcx - 0x20]; vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x000000000044f084: vmovdqu ymm3, ymmword ptr [rsi + r8 - 0x20]; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + r8 - 0x20], ymm3; vzeroupper; ret; 
0x0000000000457104: vmovdqu ymm3, ymmword ptr [rsi + rdx - 0x1f]; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e9d4: vmovdqu ymm3, ymmword ptr [rsi + rdx - 0x1f]; vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; vzeroupper; ret; 
0x000000000045a3ef: vmovdqu ymmword ptr [edi + edx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x0000000000459b0c: vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x0000000000459bb3: vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x0000000000445eba: vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x0000000000445ea1: vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x0000000000445e9b: vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x0000000000459afd: vmovdqu ymmword ptr [rcx - 0x20], ymm6; vmovdqu ymmword ptr [rcx - 0x40], ymm7; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x0000000000459b02: vmovdqu ymmword ptr [rcx - 0x40], ymm7; vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x0000000000459b07: vmovdqu ymmword ptr [rcx - 0x60], ymm8; vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x000000000045a464: vmovdqu ymmword ptr [rdi + 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x0000000000445e96: vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x0000000000459a4c: vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x000000000044f0b0: vmovdqu ymmword ptr [rdi + 0x20], ymm3; mov byte ptr [rdi + 0x40], cl; vzeroupper; ret; 
0x0000000000459ba4: vmovdqu ymmword ptr [rdi + 0x20], ymm5; vmovdqu ymmword ptr [rdi + 0x40], ymm6; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x000000000044f247: vmovdqu ymmword ptr [rdi + 0x40], ymm6; sub r8, 0x20; jb 0x4ee65; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vzeroupper; ret; 
0x0000000000459ba9: vmovdqu ymmword ptr [rdi + 0x40], ymm6; vmovdqu ymmword ptr [rdi + 0x60], ymm7; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x0000000000459bae: vmovdqu ymmword ptr [rdi + 0x60], ymm7; vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x000000000044f256: vmovdqu ymmword ptr [rdi + 0x60], ymm7; vzeroupper; ret; 
0x000000000044f08f: vmovdqu ymmword ptr [rdi + r8 - 0x20], ymm3; vzeroupper; ret; 
0x000000000045710e: vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e9de: vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; vzeroupper; ret; 
0x000000000045a469: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x000000000045a3f0: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x00000000004598d9: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x0000000000459a51: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x0000000000459a17: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm4; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm5; vmovdqu ymmword ptr [rdi + rdx - 0x60], ymm6; vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7; vzeroupper; ret; 
0x000000000045a46f: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x0000000000459a57: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x0000000000459a1d: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm5; vmovdqu ymmword ptr [rdi + rdx - 0x60], ymm6; vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7; vzeroupper; ret; 
0x0000000000459a23: vmovdqu ymmword ptr [rdi + rdx - 0x60], ymm6; vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7; vzeroupper; ret; 
0x0000000000459a29: vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7; vzeroupper; ret; 
0x0000000000445eb6: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x000000000045a460: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x0000000000445e92: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x0000000000459a48: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + 0x20], ymm1; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x00000000004598d5: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x000000000045a3f6: vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x000000000044f0ac: vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + 0x20], ymm3; mov byte ptr [rdi + 0x40], cl; vzeroupper; ret; 
0x000000000044f08b: vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + r8 - 0x20], ymm3; vzeroupper; ret; 
0x000000000045710a: vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; lea rax, [rdi + rdx]; vzeroupper; ret; 
0x000000000044e9da: vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rdi + rdx - 0x1f], ymm3; vzeroupper; ret; 
0x00000000004592ff: vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x0000000000459303: vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x0000000000459d0e: vmovdqu64 zmm0, zmmword ptr [rsi]; vmovdqu64 zmm1, zmmword ptr [rsi + rdx - 0x40]; vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x0000000000459d14: vmovdqu64 zmm1, zmmword ptr [rsi + rdx - 0x40]; vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x0000000000459fc6: vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000045a08c: vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x0000000000459fbf: vmovdqu64 zmmword ptr [rcx - 0xc0], zmm8; vmovdqu64 zmmword ptr [r11], zmm4; vzeroupper; ret; 
0x000000000045a603: vmovdqu64 zmmword ptr [rdi + 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x0000000000459ede: vmovdqu64 zmmword ptr [rdi + 0x40], zmm1; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm2; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x000000000045a085: vmovdqu64 zmmword ptr [rdi + 0xc0], zmm7; vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x0000000000459eaf: vmovdqu64 zmmword ptr [rdi + rdx - 0x100], zmm7; vzeroupper; ret; 
0x000000000045a60a: vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x000000000045a579: vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x0000000000459d22: vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x0000000000459ee5: vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm2; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x000000000045a612: vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x0000000000459eed: vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x000000000045a5fd: vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x0000000000459ed8: vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + 0x40], zmm1; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm2; vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x0000000000459d1c: vmovdqu64 zmmword ptr [rdi], zmm0; vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x000000000045a581: vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x0000000000459318: vmovq qword ptr [rdi], xmm0; vmovq qword ptr [rsi - 8], xmm0; ret; 
0x000000000045931c: vmovq qword ptr [rsi - 8], xmm0; ret; 
0x00000000004461c9: vmovups zmmword ptr [r9 + 0x140], zmm13; vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x00000000004461d0: vmovups zmmword ptr [r9 + 0x180], zmm14; vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x00000000004461d7: vmovups zmmword ptr [r9 + 0x1c0], zmm15; ret; 
0x0000000000445e21: vmovups zmmword ptr [r9 - 0x100], zmm4; vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000446070: vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000445e72: vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x0000000000445e36: vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000446069: vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000445e6b: vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x0000000000445e2f: vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000446062: vmovups zmmword ptr [r9 - 0xc0], zmm13; vmovups zmmword ptr [r9 - 0x80], zmm14; vmovups zmmword ptr [r9 - 0x40], zmm15; ret; 
0x0000000000445e28: vmovups zmmword ptr [r9 - 0xc0], zmm5; vmovups zmmword ptr [r9 - 0x80], zmm6; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000445e64: vmovups zmmword ptr [rdi + 0x40], zmm1; vmovups zmmword ptr [r9 - 0x80], zmm2; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x00000000004592d1: vmovups zmmword ptr [rdi + 0x40], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x0000000000446324: vmovups zmmword ptr [rdi - 0x140], zmm12; vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000044632b: vmovups zmmword ptr [rdi - 0x180], zmm13; vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x0000000000446332: vmovups zmmword ptr [rdi - 0x1c0], zmm14; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x0000000000446339: vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x00000000004592ec: vmovups zmmword ptr [rdi], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004594ae: vmovups zmmword ptr [rsi + 0x140], zmm2; vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x00000000004594b5: vmovups zmmword ptr [rsi + 0x180], zmm2; vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x00000000004594bc: vmovups zmmword ptr [rsi + 0x1c0], zmm2; ret; 
0x0000000000459411: vmovups zmmword ptr [rsi + 0x40], zmm2; vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x0000000000459418: vmovups zmmword ptr [rsi + 0x80], zmm2; vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x000000000045941f: vmovups zmmword ptr [rsi + 0xc0], zmm2; ret; 
0x00000000004592be: vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592b7: vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x00000000004592b0: vmovups zmmword ptr [rsi - 0xc0], zmm2; vmovups zmmword ptr [rsi - 0x80], zmm2; vmovups zmmword ptr [rsi - 0x40], zmm2; ret; 
0x000000000048a281: vmulps xmm3, xmm2, xmmword ptr [rbx - 6]; dec dword ptr [rcx - 0x77]; ret; 
0x000000000045d52c: vpaddsw ymm0, ymm15, ymmword ptr [rcx + 0xf]; lahf; ret; 
0x0000000000439840: vpand ymm5, ymm5, ymm4; vptest ymm5, ymm0; jae 0x39ae0; xor eax, eax; vzeroupper; ret; 
0x0000000000439977: vpcmpeqb xmm2, xmm2, xmm1; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x39890; ret; 
0x00000000004399b5: vpcmpeqb xmm2, xmm2, xmmword ptr [rdi]; vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x39890; ret; 
0x000000000043997b: vpmovmskb eax, xmm2; sub eax, 0xffff; jne 0x39890; ret; 
0x0000000000482afd: vpmovmskb eax, ymm1; test eax, eax; jne 0x82b20; xor eax, eax; vzeroupper; ret; 
0x00000000004834bd: vpmovmskb eax, ymm1; test eax, eax; jne 0x834f0; mov rax, r8; vzeroupper; ret; 
0x0000000000498e5d: vpmovmskb eax, ymm1; test eax, eax; jne 0x98e80; xor eax, eax; vzeroupper; ret; 
0x0000000000439883: vpmovmskb eax, ymm2; sub eax, -1; jne 0x39890; vzeroupper; ret; 
0x000000000041593d: vpsubsb xmm9, xmm15, xmmword ptr [rax + rdi*4 - 2]; dec dword ptr [rbp - 0x73]; jl 0x1594f; add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x0000000000439844: vptest ymm5, ymm0; jae 0x39ae0; xor eax, eax; vzeroupper; ret; 
0x0000000000434754: vzeroupper; ret; 
0x0000000000482b80: vzeroupper; xor eax, eax; ret; 
0x0000000000482671: wait; add al, byte ptr [rax]; add byte ptr [rax + 1], cl; clc; add rax, rcx; ret; 
0x00000000004a1656: wait; and edi, 0x20; je 0xa166c; movss xmm0, dword ptr [rip + 0x2ec14]; divss xmm0, dword ptr [rip + 0x2ec10]; ret; 
0x0000000000497d74: wait; rol byte ptr [rax + rax], cl; add dword ptr [rcx + rcx*4 - 0x40], eax; pop rbx; ret; 
0x000000000042a6c1: wait; xor dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; add eax, 0xb80f4; ret; 
0x0000000000438103: xchg ah, bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000044b7df: xchg ah, bl; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004381f3: xchg ah, ch; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000438013: xchg ah, cl; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000047ec44: xchg bh, al; add al, byte ptr [rax]; add byte ptr [rcx - 0x76b3d395], cl; ret 0x8348; 
0x000000000044d43c: xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x000000000044cc5c: xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x000000000044d04c: xchg bh, ch; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c86c: xchg bh, cl; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004a17ee: xchg byte ptr [rax + 0x48000000], bh; add esp, 8; ret; 
0x00000000004a17db: xchg byte ptr [rax + 0x48000000], ch; add esp, 8; ret; 
0x00000000004a183a: xchg byte ptr [rax + 0x48000000], dh; add esp, 8; ret; 
0x0000000000438a5b: xchg byte ptr [rax + rax - 0x7cb80000], al; ret 0xeb10; 
0x000000000044c33f: xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044bb1f: xchg byte ptr [rax + rcx - 0x7cb80000], bl; ret 0xe910; 
0x000000000044b2ff: xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x00000000004385b3: xchg byte ptr [rax - 0x7cb80000], ch; ret 0xeb10; 
0x000000000044ca0b: xchg byte ptr [rax], dh; adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044be5f: xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000437d43: xchg byte ptr [rbp + rcx - 0x7cb80000], bl; ret 0xeb10; 
0x000000000044b63f: xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044ae1f: xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x0000000000482670: xchg byte ptr [rbx + 0x48000002], bl; add eax, edi; add rax, rcx; ret; 
0x000000000044bfff: xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x0000000000438793: xchg byte ptr [rbx + rax], cl; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000437f23: xchg byte ptr [rbx + rcx - 0x7cb80000], bh; ret 0xeb10; 
0x0000000000438973: xchg byte ptr [rcx + rax], ch; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000044cefc: xchg byte ptr [rdi], bh; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c71c: xchg byte ptr [rdi], bl; adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044d82c: xchg byte ptr [rdi], cl; add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000438883: xchg byte ptr [rdx + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000044b15f: xchg byte ptr [rdx + rdx], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004318f6: xchg byte ptr [rdx], bh; add byte ptr [rax - 0x73], cl; adc eax, 0x25b3f; cmovne rax, rdx; ret; 
0x00000000004381c5: xchg byte ptr [rdx], bl; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004382b5: xchg byte ptr [rdx], ch; or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004380d5: xchg byte ptr [rdx], cl; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044b295: xchg byte ptr [rsi], ah; adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bf95: xchg byte ptr [rsi], ah; add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bab5: xchg byte ptr [rsi], al; or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044cdfd: xchg byte ptr [rsi], bh; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044d72d: xchg byte ptr [rsi], cl; add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000046803d: xchg byte ptr [rsi], dl; add al, 0; add byte ptr [rbp + 0xe880fd2], al; add al, 0; add bh, dh; ret 0xf800; 
0x0000000000437e33: xchg byte ptr [rsp + rcx - 0x7cb80000], ch; ret 0xeb10; 
0x00000000004685c5: xchg ch, ch; add al, byte ptr [rax]; add byte ptr [rbp - 0x1a77f02e], al; add al, byte ptr [rax]; add bh, dh; ret 0xf800; 
0x000000000044c2d5: xchg dh, ah; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044b5d5: xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x000000000044b0f5: xchg dh, al; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044bdf5: xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x000000000044cf4d: xchg dh, ch; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000044c76d: xchg dh, cl; adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000437fe5: xchg dl, bh; or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000437e05: xchg dl, bl; or al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000437ef5: xchg dl, ch; or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000437d15: xchg dl, cl; or eax, 0x83480000; ret 0x4910; 
0x0000000000468207: xchg dword ptr [rax + 0x39480000], esp; ret; 
0x0000000000480d36: xchg dword ptr [rax + 0x48000000], esp; cmp dword ptr [rax + 0x30], 0; je 0x80d48; ret; 
0x000000000047bb5b: xchg dword ptr [rax - 0x76ffffe6], ecx; ret 0xc083; 
0x0000000000475753: xchg dword ptr [rax - 0x76ffffe8], ecx; ret 0xc083; 
0x0000000000476669: xchg dword ptr [rax - 0x76fffff1], esp; ret 0xc083; 
0x0000000000477024: xchg dword ptr [rax - 0x76fffff5], esi; ret 0xc083; 
0x0000000000423115: xchg dword ptr [rax - 0x76ffffff], ebp; ret 0xc083; 
0x000000000045a277: xchg dword ptr [rax - 0xd000000], eax; movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x000000000048bd52: xchg dword ptr [rax], ebx; add al, 0; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000047db65: xchg dword ptr [rbp - 0x76fffff8], esp; ret 0xc083; 
0x0000000000476e62: xchg dword ptr [rbx - 0x76fffff7], esp; ret 0xc083; 
0x0000000000477660: xchg dword ptr [rbx - 0x76fffff9], esp; ret 0xc083; 
0x000000000047f388: xchg dword ptr [rbx], esi; add al, 0; add byte ptr [rbx - 0x7cb7fb8e], cl; ret 0xb804; 
0x000000000047d78c: xchg dword ptr [rcx - 0x76fffffa], esp; ret 0xc083; 
0x0000000000477b5b: xchg dword ptr [rcx - 0x76fffffe], edi; ret 0xc083; 
0x000000000047e066: xchg dword ptr [rdx - 0x76fffffd], eax; ret 0xc083; 
0x0000000000488cec: xchg dword ptr [rip - 0x76fffffd], ebx; ret 0xe8c0; 
0x0000000000477633: xchg dword ptr [rsi - 0x76fffff9], ebp; ret 0xc083; 
0x0000000000431c65: xchg eax, ebp; add byte ptr [rax], al; lea rdx, [rip + 0xeaf1]; cmovne rax, rdx; ret; 
0x0000000000403965: xchg eax, ebp; add eax, 0x1ff8c100; and eax, 0xfffffffe; add rsp, 0x18; ret; 
0x00000000004991da: xchg eax, ebp; call 0x5fa10; endbr64; mov eax, dword ptr [rip + 0x4c79e]; ret; 
0x0000000000460965: xchg eax, ebp; call 0xfffffffff606096e; ret 0x7402; 
0x00000000004746a5: xchg eax, ebp; clc; idiv bh; dec dword ptr [rax + 0x39]; ret 0x850f; 
0x0000000000479efe: xchg eax, ebp; mov eax, 0x8bfffff6; mov ch, 0; idiv edi; dec dword ptr [rax + 0x29]; ret 0xb8; 
0x000000000049bfbf: xchg eax, ebp; push rax; add al, 0; add bl, ch; ret; 
0x00000000004a1438: xchg eax, ebp; ret 0x145; 
0x000000000048d1f7: xchg eax, ebp; ret 0x2148; 
0x000000000047f83b: xchg eax, ebp; ret 0x5389; 
0x000000000042cbf2: xchg eax, ebp; ret 0x8348; 
0x000000000045c51d: xchg eax, ebp; ret 0x8948; 
0x0000000000460def: xchg eax, ebp; ret 0x8d48; 
0x000000000042c89b: xchg eax, ebp; ret 0xb60f; 
0x00000000004a14e2: xchg eax, ebp; ret 0xdb31; 
0x00000000004a3046: xchg eax, ebp; ret 0xf45; 
0x000000000048ad62: xchg eax, ebp; ret; 
0x000000000049eb6a: xchg eax, ebp; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rdi], cl; mov dh, 0xc0; neg eax; ret; 
0x0000000000421710: xchg eax, ebx; add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000426ea6: xchg eax, ebx; nop word ptr [rax + rax]; endbr64; mov eax, 0xffffffff; ret; 
0x0000000000421058: xchg eax, ebx; nop; add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x000000000042936c: xchg eax, ebx; or eax, dword ptr [rax]; ret; 
0x000000000041475e: xchg eax, ebx; ret 0x3948; 
0x0000000000470b93: xchg eax, ebx; ret 0x3949; 
0x0000000000470daf: xchg eax, ebx; ret 0x854d; 
0x000000000044c3e1: xchg eax, ecx; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000045c35b: xchg eax, ecx; push rbp; add al, byte ptr [rax]; mov eax, dword ptr [rsp + 0xc]; add rsp, 0x18; ret; 
0x000000000044ab0f: xchg eax, ecx; sub eax, edx; ret; 
0x0000000000460f20: xchg eax, edi; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000042063e: xchg eax, edi; fadd dword ptr [rax]; add byte ptr [rax], al; mov rdx, qword ptr [rdi + 0xa0]; mov qword ptr [rdx + 0xe0], rcx; ret; 
0x0000000000420645: xchg eax, edi; movabs al, byte ptr [0xe08a8948000000]; add byte ptr [rax], al; ret; 
0x00000000004310a5: xchg eax, edi; or al, 0; add byte ptr [rax - 0x73], cl; adc eax, 0x1fc30; cmovne rax, rdx; ret; 
0x0000000000404eee: xchg eax, edx; add rsp, 0x18; xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000431b3a: xchg eax, edx; jns 0x31b3f; add byte ptr [rax - 0x73], cl; add eax, 0x27a4b; cmove rax, rdx; ret; 
0x000000000044da57: xchg eax, edx; lea rcx, [rip + 0x6d2e1]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000044c3d7: xchg eax, edx; lea rcx, [rip + 0x6e961]; mov edx, dword ptr [rcx + rdx*4]; mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x000000000049d3f9: xchg eax, edx; ret 0x8948; 
0x0000000000499817: xchg eax, edx; ret 0xc148; 
0x0000000000459198: xchg eax, edx; ret 0xf40; 
0x0000000000438abc: xchg eax, edx; sub eax, edx; ret; 
0x0000000000425204: xchg eax, esi; add byte ptr [rax], 0; add byte ptr [rax - 0x77], cl; ret 0xffb8; 
0x0000000000439e82: xchg eax, esi; add byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004420e3: xchg eax, esi; add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x0000000000431af5: xchg eax, esi; add byte ptr [rax], al; lea rdx, [rip + 0xec41]; cmovne rax, rdx; ret; 
0x0000000000439f3f: xchg eax, esi; lock add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000431a36: xchg eax, esi; mov dword ptr [rdx], eax; add byte ptr [rax - 0x73], cl; add eax, 0x289df; cmove rax, rdx; ret; 
0x00000000004038b1: xchg eax, esi; mov eax, 0xffffffa1; ret; 
0x0000000000439e9d: xchg eax, esi; nop; add byte ptr [rax], al; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000045b6c3: xchg eax, esi; ret 0xc085; 
0x000000000045b717: xchg eax, esi; ret 0xd284; 
0x0000000000439eee: xchg eax, esi; rol byte ptr [rax], 0; add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000041b2bd: xchg eax, esi; sbb eax, dword ptr [rax]; add byte ptr [rbx - 0x7bf0fe08], al; ret; 
0x0000000000487985: xchg eax, esp; and al, 0xe8; add eax, dword ptr [rax]; add dh, dh; ret 0x7402; 
0x000000000045c614: xchg eax, esp; ret 0x2044; 
0x00000000004963a0: xchg eax, esp; ret 0x3145; 
0x000000000042004c: xchg eax, esp; ret 0x3948; 
0x0000000000406114: xchg eax, esp; ret 0x5422; 
0x0000000000495f50: xchg eax, esp; ret 0x8545; 
0x0000000000460dce: xchg eax, esp; ret 0x8d48; 
0x0000000000498225: xchg eax, esp; ret 0x950f; 
0x00000000004897f0: xchg eax, esp; ret 0xb60f; 
0x0000000000411227: xchg eax, esp; ret 0xd284; 
0x0000000000496aa9: xchg eax, esp; ret 0xf45; 
0x000000000049c087: xchg eax, esp; ret 0xfb83; 
0x0000000000413ae1: xchg eax, esp; ret; 
0x00000000004304ec: xchg eax, esp; ror byte ptr [rax - 0x73], 0x44; ret 0xfff; 
0x000000000049ad8c: xchg eax, esp; ror byte ptr [rdi], 0x94; ret 0xb60f; 
0x00000000004296f5: xchg eax, r8d; or eax, dword ptr [rax]; ret; 
0x000000000047bc07: xchg esp, edx; sub byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x00000000004a5793: xlatb; adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000481d15: xlatb; adc dword ptr [rax], eax; add byte ptr [rax - 0x73], cl; add eax, 0xed0; cmove rax, rdx; ret; 
0x0000000000430f75: xlatb; add byte ptr [rdx], 0; cmovne rax, rdx; ret; 
0x0000000000492548: xlatb; cmp rax, 9; ja 0x92520; mov rax, r8; ret; 
0x000000000045956c: xlatb; jb 0x59572; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000044271b: xlatb; lddqu xmm0, xmmword ptr [rsi - 0x19]; lddqu xmm1, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x19], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000482dc7: xlatb; ret 0x94c; 
0x00000000004390cf: xlatb; ret 0xc085; 
0x0000000000433280: xlatb; ret 0xc148; 
0x0000000000439798: xlatb; ret 0xe883; 
0x000000000044e378: xlatb; ret 0xf66; 
0x0000000000439958: xlatb; ret 0xff2d; 
0x0000000000422df5: xlatb; ret; 
0x0000000000482f19: xlatb; retf 0xfdc5; xlatb; ret; 
0x00000000004391b1: xlatb; rol byte ptr [rbp + 0x664975c0], 0xf; xlatb; ret 0xc085; 
0x0000000000482f75: xlatb; rol ch, cl; std; xlatb; ret; 
0x0000000000482aff: xlatb; rol dword ptr [rbp + 0x311b75c0], 0xc0; vzeroupper; ret; 
0x0000000000482883: xlatb; rol dword ptr [rbp + 0x315775c0], 0xc0; ret; 
0x0000000000439352: xlatb; rol dword ptr [rbp - 0x3a378a40], 0xfd; xlatb; ret 0xc085; 
0x000000000044e0f2: xlatb; rol dword ptr [rbp - 0x3a678a40], 0xfd; xlatb; ret 0xc085; 
0x0000000000482853: xlatb; rol dword ptr [rbp - 0x5c7af040], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000483486: xlatb; rol dword ptr [rbp - 0x5f7af040], 0; add byte ptr [rax], al; mov rax, r8; vzeroupper; ret; 
0x0000000000482ac2: xlatb; rol dword ptr [rbp - 0x6b7af040], 0; add byte ptr [rax], al; xor eax, eax; vzeroupper; ret; 
0x0000000000455702: xlatb; ror byte ptr [rcx - 0x7d], 1; ret 0x4d10; 
0x000000000044ea4a: xlatb; ror byte ptr [rcx - 0x7d], cl; ret 0x4d20; 
0x000000000045718a: xlatb; ror dword ptr [rcx], cl; ret 0xe074; 
0x0000000000433166: xlatb; sal bh, 1; ret 0x8000; 
0x0000000000433026: xlatb; sal bh, 1; ret 0xc000; 
0x0000000000432ee6: xlatb; sal bh, 1; ret 0xe000; 
0x0000000000432da6: xlatb; sal bh, 1; ret 0xf000; 
0x0000000000432c66: xlatb; sal bh, 1; ret 0xf800; 
0x0000000000432b26: xlatb; sal bh, 1; ret 0xfc00; 
0x00000000004329e6: xlatb; sal bh, 1; ret 0xfe00; 
0x00000000004328a6: xlatb; sal bh, 1; ret 0xff00; 
0x0000000000432766: xlatb; sal bh, 1; ret 0xff80; 
0x0000000000432626: xlatb; sal bh, 1; ret 0xffc0; 
0x00000000004324e6: xlatb; sal bh, 1; ret 0xffe0; 
0x00000000004323a6: xlatb; sal bh, 1; ret 0xfff0; 
0x0000000000432266: xlatb; sal bh, 1; ret 0xfff8; 
0x0000000000432126: xlatb; sal bh, 1; ret 0xfffc; 
0x0000000000431fe6: xlatb; sal bh, 1; ret 0xfffe; 
0x0000000000457186: xlatb; shl byte ptr [rsi + 0xf], 0xd7; ror dword ptr [rcx], cl; ret 0xe074; 
0x0000000000482d76: xlatb; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x0000000000482d65: xlatb; shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x00000000004310ac: xor ah, bh; add dword ptr [rax], eax; cmovne rax, rdx; ret; 
0x000000000040c0eb: xor ah, dl; or dword ptr [rax], eax; ret; 
0x000000000042a6b4: xor al, 0; add byte ptr [rax - 0x77], cl; add eax, 0xb810a; lea rax, [rip + 0x319b]; mov qword ptr [rip + 0xb80f4], rax; ret; 
0x00000000004824e3: xor al, 0x24; pop r12; pop r13; pop r14; ret; 
0x00000000004a17eb: xor al, 0x48; mov eax, dword ptr [rsi + 0xb8]; add rsp, 8; ret; 
0x000000000049e824: xor al, 0xb8; add dword ptr [rax], eax; add byte ptr [rax], al; mov qword ptr [rdi], rsi; ret; 
0x0000000000431922: xor al, 0xb; add byte ptr [rcx], al; je 0x318e1; ret; 
0x0000000000431965: xor al, 0xb; add byte ptr [rdx], al; lea rdx, [rip + 0x27f40]; lea rax, [rip + 0x27f89]; cmove rax, rdx; ret; 
0x000000000047f83f: xor al, 0xe9; ret 0xfffc; 
0x000000000047f6af: xor al, 2; add byte ptr [rax], al; add bl, ch; ret 0x43c7; 
0x0000000000474f86: xor al, 5; add al, ch; ret 0xf9cc; 
0x000000000049ecaa: xor al, byte ptr [rax + rax]; add byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ret 0x290f; 
0x000000000040a36a: xor al, byte ptr [rcx]; add byte ptr [rax], al; mov rax, 0x4dedc0; ret; 
0x0000000000431caa: xor bh, byte ptr [rax + 2]; add byte ptr [rax - 0x73], cl; add eax, 0x278eb; cmove rax, rdx; ret; 
0x0000000000430fec: xor bl, dl; add dword ptr [rax], eax; cmove rax, rdx; ret; 
0x0000000000413bf2: xor byte ptr [r11 - 0x78f0fd07], r8b; ret; 
0x00000000004391cb: xor byte ptr [r14 + 0xf], r12b; xlatb; ret; 
0x000000000048284f: xor byte ptr [r14 + 0xf], r12b; xlatb; rol dword ptr [rbp - 0x5c7af040], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x000000000042787d: xor byte ptr [r15], cl; adc dword ptr [rcx + 0x40], eax; mov qword ptr [rdi + 0xa8], 0; ret; 
0x00000000004268f2: xor byte ptr [r8 - 0x77], cl; and byte ptr [r9], sil; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000484fb7: xor byte ptr [rax + 0x106], bh; syscall; cmp rax, -0x1000; ja 0x84fd0; ret; 
0x0000000000484d60: xor byte ptr [rax + 0x39], cl; ret 0xda72; 
0x000000000044f3ef: xor byte ptr [rax - 0x77], cl; add cl, byte ptr [rax - 0x7d]; ret 0x4808; 
0x00000000004268f3: xor byte ptr [rax - 0x77], cl; and byte ptr [r9], sil; ror byte ptr [rax - 0x7d], 0xc4; or byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000405c5a: xor byte ptr [rax - 0x77], cl; call 0x8c4dfaa; pop rbp; pop r12; ret; 
0x000000000049e994: xor byte ptr [rax - 0x77], cl; or byte ptr [r8 + 2], r15b; ret; 
0x0000000000477cd2: xor byte ptr [rax - 0x7d], cl; ret 0x8303; 
0x0000000000483d4c: xor byte ptr [rax], al; add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x000000000048e1a3: xor byte ptr [rax], al; add byte ptr [rax], al; mov qword ptr [rsp + 0x18], rax; call 0x8dad0; add rsp, 0xd8; ret; 
0x000000000045a874: xor byte ptr [rax], al; add byte ptr [rax], al; pop rbx; ret; 
0x0000000000480d3e: xor byte ptr [rax], al; je 0x80d48; ret; 
0x000000000040a455: xor byte ptr [rbp + 0x48], 0x48; mov eax, 0x4def40; ret; 
0x00000000004597c9: xor byte ptr [rbp + 0xf], al; adc dword ptr [rbx], eax; ret; 
0x00000000004a4576: xor byte ptr [rbp + 0xf], dh; mov rax, qword ptr [rsi + 0x10]; add rsp, 8; ret; 
0x0000000000431bdf: xor byte ptr [rbp + rdx - 0x80], 0xe6; add cl, byte ptr [rax - 0x73]; add eax, 0x14914; lea rdx, [rip + 0x16b5d]; cmovne rax, rdx; ret; 
0x0000000000431046: xor byte ptr [rbp + rdx - 0x80], 0xe6; add cl, byte ptr [rax - 0x73]; add eax, 0x3afd; lea rdx, [rip + 0x5356]; cmovne rax, rdx; ret; 
0x000000000041e046: xor byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; ret; 
0x00000000004263ac: xor byte ptr [rbx + 0x5d], bl; pop r12; ret; 
0x00000000004a141c: xor byte ptr [rbx + 0x5d], bl; pop r14; ret; 
0x0000000000409eea: xor byte ptr [rbx + rcx*4 + 0x34], cl; ret 0x8b48; 
0x0000000000427a1d: xor byte ptr [rbx - 0x3f8a0008], al; add rsp, 8; pop rbx; pop rbp; ret; 
0x000000000047f383: xor byte ptr [rbx - 0x78f0f608], al; xor eax, dword ptr [rax + rax]; add byte ptr [rbx - 0x7cb7fb8e], cl; ret 0xb804; 
0x0000000000413bf3: xor byte ptr [rbx - 0x78f0fd07], al; ret; 
0x0000000000431ca3: xor byte ptr [rbx], cl; add byte ptr [rdx], al; lea rdx, [rip + 0x27832]; lea rax, [rip + 0x278eb]; cmove rax, rdx; ret; 
0x0000000000480d9d: xor byte ptr [rcx + 0x5d5b7453], cl; pop r12; ret; 
0x000000000049ec2f: xor byte ptr [rcx + rcx*4 - 0x20], cl; pop r12; ret; 
0x000000000042220d: xor byte ptr [rcx - 0x29f0993a], cl; or byte ptr [r9 + 0x800ce], r8b; add byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ret 0x7589; 
0x0000000000473e39: xor byte ptr [rcx - 0x77], cl; ret 0x2949; 
0x00000000004927cb: xor byte ptr [rcx - 0x77], cl; ror byte ptr [rax - 0x75], 0x43; sbb byte ptr [rax + 0x2b], cl; sub byte ptr [r9 + r9*4 + 4], cl; ret 0x8b4c; 
0x0000000000468cac: xor byte ptr [rcx - 0xa], al; ret 0x7501; 
0x0000000000409017: xor byte ptr [rcx], dh; rcr byte ptr [rbx + 0x5d], 0x41; pop rsp; ret; 
0x000000000042787e: xor byte ptr [rdi], cl; adc dword ptr [rcx + 0x40], eax; mov qword ptr [rdi + 0xa8], 0; ret; 
0x000000000045967a: xor byte ptr [rdi], cl; adc dword ptr [rdi + rdx - 0x10], esp; movups xmmword ptr [rdi + rdx - 0x20], xmm5; movups xmmword ptr [rdi + rdx - 0x30], xmm6; movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x0000000000439c2f: xor byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000048a11e: xor byte ptr [rsi + 0xf], ah; insb byte ptr [rdi], dx; ret; 
0x0000000000439c2a: xor byte ptr [rsi + 0xf], ah; out dx, eax; push rsi; xor byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x0000000000422388: xor byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0x4866; 
0x0000000000482d2c: xor byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret; 
0x00000000004391cc: xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x0000000000482850: xor byte ptr [rsi + 0xf], ah; xlatb; rol dword ptr [rbp - 0x5c7af040], 0; add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000422387: xor byte ptr [rsi + 0xf], spl; outsd dx, dword ptr [rsi]; ret 0x4866; 
0x0000000000403371: xor byte ptr [rsp + rbx - 0x7f], 0xff; add byte ptr [rax], al; sar byte ptr [rdi + 0x74], 4; ret; 
0x00000000004a3914: xor cl, byte ptr [rax]; jne 0x1755; mov rax, qword ptr [rax]; add rsp, 8; ret; 
0x0000000000431b33: xor cl, byte ptr [rbx]; add byte ptr [rdx], al; lea rdx, [rip + 0x27992]; lea rax, [rip + 0x27a4b]; cmove rax, rdx; ret; 
0x0000000000431ac5: xor cl, byte ptr [rbx]; add byte ptr [rdx], al; lea rdx, [rip + 0x27dd0]; lea rax, [rip + 0x27e19]; cmove rax, rdx; ret; 
0x0000000000431b17: xor cl, byte ptr [rbx]; add byte ptr [rdx], al; lea rdx, [rip + 0x281be]; lea rax, [rip + 0x28207]; cmove rax, rdx; ret; 
0x00000000004109e2: xor cl, byte ptr [rcx + 0xd38ff05]; add byte ptr [rax - 0x73], cl; add eax, 0xd38f0; ret; 
0x0000000000408a00: xor dh, byte ptr [rbp - 0x13]; mov eax, 0xffffffef; ret; 
0x0000000000431c52: xor dh, byte ptr [rcx]; or eax, dword ptr [rax]; add dh, byte ptr [rdi + rax*2 - 0xa]; ret 0x7520; 
0x000000000048fee4: xor dl, dh; ret; 
0x000000000041ed11: xor dword ptr [rax - 0x39], ecx; ret; 
0x0000000000430496: xor dword ptr [rax - 0x7b], ecx; div byte ptr [rsp + rcx + 0x48]; lea eax, [rax - 0x10]; ret; 
0x0000000000465ab5: xor dword ptr [rax - 0x7d], ecx; ret; 
0x000000000042a6c2: xor dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; add eax, 0xb80f4; ret; 
0x000000000042cba9: xor dword ptr [rax], ecx; add dword ptr [rax + 0x39], ecx; ret; 
0x000000000048f6d6: xor dword ptr [rax], edx; jae 0x8f685; xor eax, eax; ret; 
0x000000000048f6d5: xor dword ptr [rax], r10d; jae 0x8f685; xor eax, eax; ret; 
0x0000000000431bc7: xor dword ptr [rbx], ecx; add bh, dh; ret 0; 
0x0000000000431b8e: xor dword ptr [rbx], ecx; add byte ptr [rdx], al; lea rax, [rip + 0x1d8a7]; lea rdx, [rip + 0x21cc0]; cmovne rax, rdx; ret; 
0x0000000000431c35: xor dword ptr [rbx], ecx; add byte ptr [rdx], al; lea rdx, [rip + 0x27c70]; lea rax, [rip + 0x27cb9]; cmove rax, rdx; ret; 
0x0000000000431c87: xor dword ptr [rbx], ecx; add byte ptr [rdx], al; lea rdx, [rip + 0x2805e]; lea rax, [rip + 0x280a7]; cmove rax, rdx; ret; 
0x000000000046201f: xor dword ptr [rcx], edi; or byte ptr [rax], al; ret; 
0x000000000046f9e8: xor dword ptr [rcx], edi; ret 0x820f; 
0x00000000004839bb: xor dword ptr [rsi - 0x72b3fffb], 0x5b5da25; add byte ptr [rax + 0x39], cl; ret; 
0x00000000004a4572: xor eax, 0x303c2376; jne 0xa4588; mov rax, qword ptr [rsi + 0x10]; add rsp, 8; ret; 
0x00000000004a45d2: xor eax, 0x303c2376; jne 0xa45e8; mov rax, qword ptr [rsi + 0x10]; add rsp, 8; ret; 
0x00000000004995ff: xor eax, 0x329e4; lea rdi, [rip + 0x329f5]; call 0x11c50; endbr64; ret; 
0x0000000000459d97: xor eax, 0x48000002; mov ecx, edx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x00000000004318a7: xor eax, 0x4810000b; lea edx, [rip - 0x362]; lea rax, [rip + 0x272f7]; cmove rax, rdx; ret; 
0x000000000045a6b9: xor eax, 0x7701fa80; cmp dh, byte ptr [rdx + 2]; mov byte ptr [rdi], cl; vzeroupper; ret; 
0x00000000004a2136: xor eax, 0x8000430; ret; 
0x000000000041eeec: xor eax, 0x9606f; lea rdi, [rip + 0x96075]; call 0x11c50; xor r8d, r8d; mov rax, r8; ret; 
0x0000000000484e94: xor eax, 0xa8c48148; add byte ptr [rax], al; add byte ptr [rbp + 0x41], bl; pop rsp; ret; 
0x000000000040dbe8: xor eax, 0xc085ffff; mov eax, 0; cmovne r12, rax; mov rax, r12; pop r12; ret; 
0x000000000042534d: xor eax, 0xd8a38b4c; add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0x3bc0; 
0x0000000000403505: xor eax, 0xdec16; ret; 
0x00000000004034f5: xor eax, 0xdec22; ret; 
0x00000000004034e5: xor eax, 0xdec26; ret; 
0x00000000004034d5: xor eax, 0xdec32; ret; 
0x00000000004034c5: xor eax, 0xdec5e; ret; 
0x00000000004033a5: xor eax, 0xded6a; ret; 
0x0000000000403395: xor eax, 0xded7e; ret; 
0x0000000000403385: xor eax, 0xded9a; ret; 
0x000000000045fa57: xor eax, 0xecebfffc; nop dword ptr [rax]; endbr64; ret; 
0x000000000046febe: xor eax, dword ptr [0x28]; jne 0x6fecc; add rsp, 0x18; ret; 
0x000000000049e58b: xor eax, dword ptr [0x28]; jne 0x9e615; leave; ret; 
0x0000000000459964: xor eax, dword ptr [rax + 0x3b7701fa]; jb 0x59971; movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000047f389: xor eax, dword ptr [rax + rax]; add byte ptr [rbx - 0x7cb7fb8e], cl; ret 0xb804; 
0x00000000004a7dd0: xor eax, eax; add rsp, 0x10; pop rbx; ret; 
0x00000000004a482e: xor eax, eax; add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x0000000000425ef4: xor eax, eax; add rsp, 0x18; pop rbx; pop rbp; ret; 
0x0000000000403846: xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret; 
0x0000000000402560: xor eax, eax; add rsp, 8; ret; 
0x0000000000403961: xor eax, eax; call 0x5cf30; sar eax, 0x1f; and eax, 0xfffffffe; add rsp, 0x18; ret; 
0x00000000004077d2: xor eax, eax; cmp ecx, edx; je 0x77e0; ret; 
0x000000000042930f: xor eax, eax; cmp rdx, rdi; setae al; ret; 
0x000000000046ff7d: xor eax, eax; mov dword ptr [rbx + 0x40], esi; pop rbx; ret; 
0x0000000000480ecf: xor eax, eax; mov dword ptr [rbx], ecx; pop rbx; ret; 
0x000000000042da28: xor eax, eax; mov dword ptr fs:[rax], 0xc; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000000042c578: xor eax, eax; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000000041ef09: xor eax, eax; mov rax, r8; pop rbx; pop rbp; ret; 
0x000000000041eefe: xor eax, eax; mov rax, r8; ret; 
0x00000000004030b9: xor eax, eax; pop r12; ret; 
0x000000000042e901: xor eax, eax; pop rbp; pop r12; mov rax, r8; pop r13; ret; 
0x0000000000463dc7: xor eax, eax; pop rbp; pop r12; pop r13; pop r14; ret; 
0x0000000000402854: xor eax, eax; pop rbp; pop r12; ret; 
0x0000000000402420: xor eax, eax; pop rbp; ret; 
0x000000000042e099: xor eax, eax; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x0000000000422554: xor eax, eax; pop rbx; pop rbp; pop r12; pop r13; ret; 
0x0000000000408e76: xor eax, eax; pop rbx; pop rbp; pop r12; ret; 
0x0000000000404ef3: xor eax, eax; pop rbx; pop rbp; ret; 
0x0000000000402240: xor eax, eax; pop rbx; ret; 
0x00000000004238af: xor eax, eax; punpcklqdq xmm0, xmm0; movups xmmword ptr [rbx + 8], xmm0; pop rbx; ret; 
0x0000000000402570: xor eax, eax; ret; 
0x000000000043348e: xor eax, eax; sub eax, ecx; ret; 
0x000000000045cdf4: xor eax, eax; syscall; cmp rax, -0x1000; ja 0x5ce08; ret; 
0x00000000004a1268: xor eax, eax; test r8d, r8d; jne 0xa11c0; add rsp, 0x38; ret; 
0x000000000040a75f: xor eax, eax; test r8d, r8d; jne 0xa76d; mov rax, 0x4e12e0; pop rbp; ret; 
0x0000000000425194: xor eax, eax; test rdx, rdx; jne 0x251a0; ret; 
0x000000000048e4ad: xor eax, eax; test rsi, rsi; je 0x8e4b7; mov qword ptr [rsi], rdi; mov rax, r8; ret; 
0x0000000000438ee0: xor eax, eax; vzeroupper; ret; 
0x0000000000482c3f: xor eax, edx; and rax, rcx; je 0x82e10; bsr rax, rax; add rax, rdi; ret; 
0x0000000000482ecf: xor eax, edx; and rsi, rax; je 0x82e10; bsr rax, rsi; add rax, rdi; ret; 
0x000000000041e0a6: xor eax, edx; movzx edx, byte ptr [rcx]; test dl, dl; jne 0x1e088; ret; 
0x0000000000407768: xor eax, edx; ret; 
0x000000000040bb09: xor ebx, dword ptr [rdi]; add byte ptr [rax], al; nop dword ptr [rax]; mov eax, 0xffffff94; ret; 
0x000000000041f941: xor ecx, dword ptr [0x28]; jne 0x1f952; add rsp, 0xd8; ret; 
0x0000000000404fe3: xor ecx, dword ptr [0x28]; jne 0x4ff1; add rsp, 0x48; ret; 
0x000000000045c25f: xor ecx, dword ptr [0x28]; jne 0x5c305; add rsp, 0x68; ret; 
0x000000000045cbb4: xor ecx, dword ptr [0x28]; jne 0x5cc03; add rsp, 0x68; ret; 
0x000000000045cc43: xor ecx, dword ptr [0x28]; jne 0x5cc93; add rsp, 0x18; ret; 
0x000000000045ccfb: xor ecx, dword ptr [0x28]; jne 0x5cd4b; add rsp, 0x58; ret; 
0x000000000045cd99: xor ecx, dword ptr [0x28]; jne 0x5cdeb; add rsp, 0x58; ret; 
0x000000000045f9da: xor ecx, dword ptr [0x28]; jne 0x5f9eb; add rsp, 0xd8; ret; 
0x0000000000470231: xor ecx, dword ptr [0x28]; jne 0x702d6; add rsp, 0x98; ret; 
0x0000000000471f71: xor ecx, dword ptr [0x28]; jne 0x71f82; add rsp, 0xd8; ret; 
0x0000000000408b05: xor ecx, dword ptr [0x28]; jne 0x8b13; add rsp, 0x18; ret; 
0x00000000004919c2: xor ecx, dword ptr [0x28]; jne 0x919f3; add rsp, 0x38; ret; 
0x0000000000491a8e: xor ecx, dword ptr [0x28]; jne 0x91ac4; add rsp, 0x58; ret; 
0x0000000000491c00: xor ecx, dword ptr [0x28]; jne 0x91c44; add rsp, 0x68; ret; 
0x0000000000491f1e: xor ecx, dword ptr [0x28]; jne 0x91f54; add rsp, 0x58; ret; 
0x000000000049270e: xor ecx, dword ptr [0x28]; jne 0x92735; add rsp, 0x38; ret; 
0x00000000004984b5: xor ecx, dword ptr [0x28]; jne 0x984c3; add rsp, 0x28; ret; 
0x000000000049eb1e: xor ecx, dword ptr [0x28]; jne 0x9eb2c; add rsp, 0x38; ret; 
0x0000000000423266: xor ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000431bc3: xor ecx, dword ptr [rbx + 0xb31be15]; add bh, dh; ret 0; 
0x000000000043102a: xor ecx, dword ptr [rbx + 0xb3d5715]; add bh, dh; ret 0; 
0x00000000004319d3: xor ecx, dword ptr [rbx]; add byte ptr [rdx], al; lea rdx, [rip + 0x27b02]; lea rax, [rip + 0x27bbb]; cmove rax, rdx; ret; 
0x00000000004319b7: xor ecx, dword ptr [rbx]; add byte ptr [rdx], al; lea rdx, [rip + 0x2832e]; lea rax, [rip + 0x28377]; cmove rax, rdx; ret; 
0x0000000000431a77: xor ecx, dword ptr [rbx]; add byte ptr [rdx], al; lea rdx, [rip + 0x28ace]; lea rax, [rip + 0x28b27]; cmove rax, rdx; ret; 
0x00000000004a2b9e: xor ecx, dword ptr [rcx - 0x7d]; ret; 
0x0000000000482cd9: xor ecx, eax; and rsi, rcx; je 0x82e10; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x0000000000415d91: xor ecx, ecx; pop rbx; pop rbp; mov rax, r9; pop r12; ret; 
0x000000000045ce60: xor edi, edi; syscall; cmp rax, -0x1000; ja 0x5ce70; ret; 
0x0000000000402af2: xor edx, dword ptr [0x28]; jne 0x2b8f; add rsp, 0xc8; ret; 
0x0000000000402ca2: xor edx, dword ptr [0x28]; jne 0x2d3f; add rsp, 0xc8; ret; 
0x000000000045be84: xor edx, dword ptr [0x28]; jne 0x5bea1; add rsp, 0x28; ret; 
0x000000000045cfd7: xor edx, dword ptr [0x28]; jne 0x5cfe5; add rsp, 0x28; ret; 
0x00000000004985a3: xor edx, dword ptr [0x28]; jne 0x985b1; add rsp, 0x38; ret; 
0x000000000045a8b6: xor edx, edx; and eax, 0x3fffc00; div ecx; mov eax, eax; ret; 
0x00000000004958a3: xor edx, edx; div ecx; add r8d, eax; mov eax, r8d; ret; 
0x000000000044e0b4: xor edx, edx; lea rax, [rdi + rax + 0x20]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044e0d4: xor edx, edx; lea rax, [rdi + rax + 0x40]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044e112: xor edx, edx; lea rax, [rdi + rax + 0x60]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x000000000044df7a: xor edx, edx; lea rax, [rdi + rax]; cmp sil, byte ptr [rax]; cmovne rax, rdx; vzeroupper; ret; 
0x0000000000497e58: xor edx, edx; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x0000000000485c29: xor esi, dword ptr [rbp - 0x37140009]; nop; ret; 
0x0000000000499981: xor esp, esp; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000040dc91: xor esp, esp; mov rax, r12; pop r12; ret; 
0x000000000046dc13: xor esp, esp; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000481d95: xor esp, esp; pop rbp; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000411d94: xor esp, esp; pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x000000000042cba8: xor qword ptr [rax], r9; add dword ptr [rax + 0x39], ecx; ret; 
0x0000000000497e57: xor r10d, r10d; mov edx, 1; mov esi, 0x81; mov eax, 0xca; syscall; ret; 
0x0000000000499980: xor r12d, r12d; add rsp, 8; mov rax, r12; pop rbx; pop r12; ret; 
0x000000000040dc90: xor r12d, r12d; mov rax, r12; pop r12; ret; 
0x000000000046dc12: xor r12d, r12d; mov rax, r12; pop rbp; pop r12; pop r13; ret; 
0x0000000000481d94: xor r12d, r12d; pop rbp; mov rax, r12; pop r12; pop r13; ret; 
0x0000000000411d93: xor r12d, r12d; pop rbx; pop rbp; mov rax, r12; pop r12; ret; 
0x00000000004a482d: xor r8d, r8d; add rsp, 0x18; mov eax, r8d; pop rbx; pop rbp; ret; 
0x000000000042da27: xor r8d, r8d; mov dword ptr fs:[rax], 0xc; add rsp, 0x10; mov rax, r8; pop rbp; ret; 
0x000000000042c577: xor r8d, r8d; mov dword ptr fs:[rax], 0xc; mov rax, r8; ret; 
0x000000000041ef08: xor r8d, r8d; mov rax, r8; pop rbx; pop rbp; ret; 
0x000000000041eefd: xor r8d, r8d; mov rax, r8; ret; 
0x000000000042e900: xor r8d, r8d; pop rbp; pop r12; mov rax, r8; pop r13; ret; 
0x000000000042e098: xor r8d, r8d; pop rbx; pop rbp; mov rax, r8; pop r12; ret; 
0x000000000048e4ac: xor r8d, r8d; test rsi, rsi; je 0x8e4b7; mov qword ptr [rsi], rdi; mov rax, r8; ret; 
0x0000000000415d90: xor r9d, r9d; pop rbx; pop rbp; mov rax, r9; pop r12; ret; 
0x000000000046febd: xor rax, qword ptr [0x28]; jne 0x6fecc; add rsp, 0x18; ret; 
0x000000000049e58a: xor rax, qword ptr [0x28]; jne 0x9e615; leave; ret; 
0x000000000046febc: xor rax, qword ptr fs:[0x28]; jne 0x6fecc; add rsp, 0x18; ret; 
0x000000000049e589: xor rax, qword ptr fs:[0x28]; jne 0x9e615; leave; ret; 
0x00000000004571a0: xor rax, rax; ret; 
0x0000000000482c3e: xor rax, rdx; and rax, rcx; je 0x82e10; bsr rax, rax; add rax, rdi; ret; 
0x0000000000482ece: xor rax, rdx; and rsi, rax; je 0x82e10; bsr rax, rsi; add rax, rdi; ret; 
0x000000000041e0a5: xor rax, rdx; movzx edx, byte ptr [rcx]; test dl, dl; jne 0x1e088; ret; 
0x000000000041f940: xor rcx, qword ptr [0x28]; jne 0x1f952; add rsp, 0xd8; ret; 
0x0000000000404fe2: xor rcx, qword ptr [0x28]; jne 0x4ff1; add rsp, 0x48; ret; 
0x000000000045c25e: xor rcx, qword ptr [0x28]; jne 0x5c305; add rsp, 0x68; ret; 
0x000000000045cbb3: xor rcx, qword ptr [0x28]; jne 0x5cc03; add rsp, 0x68; ret; 
0x000000000045cc42: xor rcx, qword ptr [0x28]; jne 0x5cc93; add rsp, 0x18; ret; 
0x000000000045ccfa: xor rcx, qword ptr [0x28]; jne 0x5cd4b; add rsp, 0x58; ret; 
0x000000000045cd98: xor rcx, qword ptr [0x28]; jne 0x5cdeb; add rsp, 0x58; ret; 
0x000000000045f9d9: xor rcx, qword ptr [0x28]; jne 0x5f9eb; add rsp, 0xd8; ret; 
0x0000000000470230: xor rcx, qword ptr [0x28]; jne 0x702d6; add rsp, 0x98; ret; 
0x0000000000471f70: xor rcx, qword ptr [0x28]; jne 0x71f82; add rsp, 0xd8; ret; 
0x0000000000408b04: xor rcx, qword ptr [0x28]; jne 0x8b13; add rsp, 0x18; ret; 
0x00000000004919c1: xor rcx, qword ptr [0x28]; jne 0x919f3; add rsp, 0x38; ret; 
0x0000000000491a8d: xor rcx, qword ptr [0x28]; jne 0x91ac4; add rsp, 0x58; ret; 
0x0000000000491bff: xor rcx, qword ptr [0x28]; jne 0x91c44; add rsp, 0x68; ret; 
0x0000000000491f1d: xor rcx, qword ptr [0x28]; jne 0x91f54; add rsp, 0x58; ret; 
0x000000000049270d: xor rcx, qword ptr [0x28]; jne 0x92735; add rsp, 0x38; ret; 
0x00000000004984b4: xor rcx, qword ptr [0x28]; jne 0x984c3; add rsp, 0x28; ret; 
0x000000000049eb1d: xor rcx, qword ptr [0x28]; jne 0x9eb2c; add rsp, 0x38; ret; 
0x000000000041f93f: xor rcx, qword ptr fs:[0x28]; jne 0x1f952; add rsp, 0xd8; ret; 
0x0000000000404fe1: xor rcx, qword ptr fs:[0x28]; jne 0x4ff1; add rsp, 0x48; ret; 
0x000000000045c25d: xor rcx, qword ptr fs:[0x28]; jne 0x5c305; add rsp, 0x68; ret; 
0x000000000045cbb2: xor rcx, qword ptr fs:[0x28]; jne 0x5cc03; add rsp, 0x68; ret; 
0x000000000045cc41: xor rcx, qword ptr fs:[0x28]; jne 0x5cc93; add rsp, 0x18; ret; 
0x000000000045ccf9: xor rcx, qword ptr fs:[0x28]; jne 0x5cd4b; add rsp, 0x58; ret; 
0x000000000045cd97: xor rcx, qword ptr fs:[0x28]; jne 0x5cdeb; add rsp, 0x58; ret; 
0x000000000045f9d8: xor rcx, qword ptr fs:[0x28]; jne 0x5f9eb; add rsp, 0xd8; ret; 
0x000000000047022f: xor rcx, qword ptr fs:[0x28]; jne 0x702d6; add rsp, 0x98; ret; 
0x0000000000471f6f: xor rcx, qword ptr fs:[0x28]; jne 0x71f82; add rsp, 0xd8; ret; 
0x0000000000408b03: xor rcx, qword ptr fs:[0x28]; jne 0x8b13; add rsp, 0x18; ret; 
0x00000000004919c0: xor rcx, qword ptr fs:[0x28]; jne 0x919f3; add rsp, 0x38; ret; 
0x0000000000491a8c: xor rcx, qword ptr fs:[0x28]; jne 0x91ac4; add rsp, 0x58; ret; 
0x0000000000491bfe: xor rcx, qword ptr fs:[0x28]; jne 0x91c44; add rsp, 0x68; ret; 
0x0000000000491f1c: xor rcx, qword ptr fs:[0x28]; jne 0x91f54; add rsp, 0x58; ret; 
0x000000000049270c: xor rcx, qword ptr fs:[0x28]; jne 0x92735; add rsp, 0x38; ret; 
0x00000000004984b3: xor rcx, qword ptr fs:[0x28]; jne 0x984c3; add rsp, 0x28; ret; 
0x000000000049eb1c: xor rcx, qword ptr fs:[0x28]; jne 0x9eb2c; add rsp, 0x38; ret; 
0x0000000000482cd8: xor rcx, rax; and rsi, rcx; je 0x82e10; bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x0000000000402af1: xor rdx, qword ptr [0x28]; jne 0x2b8f; add rsp, 0xc8; ret; 
0x0000000000402ca1: xor rdx, qword ptr [0x28]; jne 0x2d3f; add rsp, 0xc8; ret; 
0x000000000045be83: xor rdx, qword ptr [0x28]; jne 0x5bea1; add rsp, 0x28; ret; 
0x000000000045cfd6: xor rdx, qword ptr [0x28]; jne 0x5cfe5; add rsp, 0x28; ret; 
0x00000000004985a2: xor rdx, qword ptr [0x28]; jne 0x985b1; add rsp, 0x38; ret; 
0x0000000000402af0: xor rdx, qword ptr fs:[0x28]; jne 0x2b8f; add rsp, 0xc8; ret; 
0x0000000000402ca0: xor rdx, qword ptr fs:[0x28]; jne 0x2d3f; add rsp, 0xc8; ret; 
0x000000000045be82: xor rdx, qword ptr fs:[0x28]; jne 0x5bea1; add rsp, 0x28; ret; 
0x000000000045cfd5: xor rdx, qword ptr fs:[0x28]; jne 0x5cfe5; add rsp, 0x28; ret; 
0x00000000004985a1: xor rdx, qword ptr fs:[0x28]; jne 0x985b1; add rsp, 0x38; ret; 

15163 gadgets found
